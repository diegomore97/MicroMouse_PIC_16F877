

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Sep 14 19:55:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    97                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    98                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    99  0000                     
   100                           ; Version 2.10
   101                           ; Generated 31/07/2019 GMT
   102                           ; 
   103                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC18F4550 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134  0000                     
   135                           	psect	idataBANK1
   136  005632                     __pidataBANK1:
   137                           	opt callstack 0
   138                           
   139                           ;initializer for _pausa
   140  005632  01                 	db	1
   141                           
   142                           ;initializer for _SENSOR_PRIORIDAD_BAJA
   143  005633  03                 	db	3
   144                           
   145                           ;initializer for _SENSOR_PRIORIDAD_MEDIA
   146  005634  02                 	db	2
   147                           
   148                           ;initializer for _SENSOR_PRIORIDAD_ALTA
   149  005635  01                 	db	1
   150                           
   151                           	psect	mediumconst
   152  007E6A                     __pmediumconst:
   153                           	opt callstack 0
   154  007E6A  00                 	db	0
   155  007E6B  0000               	dw	0
   156  007E6D  4B00               	dw	19200
   157  007E6F                     __end_of_toint:
   158                           	opt callstack 0
   159  0000                     _T1CON	set	4045
   160  0000                     _TRISDbits	set	3989
   161  0000                     _INTCON2bits	set	4081
   162  0000                     _INTCONbits	set	4082
   163  0000                     _ADRESL	set	4035
   164  0000                     _ADRESH	set	4036
   165  0000                     _ADCON0bits	set	4034
   166  0000                     _ADCON2	set	4032
   167  0000                     _ADCON1	set	4033
   168  0000                     _TXREG	set	4013
   169  0000                     _RCREG	set	4014
   170  0000                     _RCSTAbits	set	4011
   171  0000                     _TXSTAbits	set	4012
   172  0000                     _SPBRG	set	4015
   173  0000                     _PORTBbits	set	3969
   174  0000                     _TMR1L	set	4046
   175  0000                     _TMR1H	set	4047
   176  0000                     _PR2	set	4043
   177  0000                     _CCP2CON	set	4026
   178  0000                     _CCPR2L	set	4027
   179  0000                     _CCP1CON	set	4029
   180  0000                     _CCPR1L	set	4030
   181  0000                     _TRISB0	set	31896
   182  0000                     _TRISB7	set	31903
   183  0000                     _TRISB6	set	31902
   184  0000                     _TRISB5	set	31901
   185  0000                     _TRISB4	set	31900
   186  0000                     _TRISB3	set	31899
   187  0000                     _TRISB2	set	31898
   188  0000                     _TRISB1	set	31897
   189  0000                     _TRISD3	set	31915
   190  0000                     _LATB7	set	31831
   191  0000                     _LATB6	set	31830
   192  0000                     _LATB5	set	31829
   193  0000                     _LATB4	set	31828
   194  0000                     _LATD2	set	31842
   195  0000                     _INT0IF	set	32657
   196  0000                     _RCIF	set	31989
   197  0000                     _TRISC7	set	31911
   198  0000                     _TRISC6	set	31910
   199  0000                     _TMR1IF	set	31984
   200  0000                     _TMR1ON	set	32360
   201  0000                     _LATD3	set	31843
   202  0000                     _TMR2ON	set	32338
   203  0000                     _CCP2M2	set	32210
   204  0000                     _CCP2M3	set	32211
   205  0000                     _TRISC1	set	31905
   206  0000                     _CCP1M2	set	32234
   207  0000                     _CCP1M3	set	32235
   208  0000                     _TRISC2	set	31906
   209  0000                     _T2CKPS1	set	32337
   210  0000                     _T2CKPS0	set	32336
   211  007E6F                     STR_13:
   212  007E6F  0A                 	db	10
   213  007E70  0A                 	db	10
   214  007E71  4F                 	db	79	;'O'
   215  007E72  56                 	db	86	;'V'
   216  007E73  45                 	db	69	;'E'
   217  007E74  52                 	db	82	;'R'
   218  007E75  46                 	db	70	;'F'
   219  007E76  4C                 	db	76	;'L'
   220  007E77  4F                 	db	79	;'O'
   221  007E78  57                 	db	87	;'W'
   222  007E79  20                 	db	32
   223  007E7A  65                 	db	101	;'e'
   224  007E7B  6E                 	db	110	;'n'
   225  007E7C  20                 	db	32
   226  007E7D  65                 	db	101	;'e'
   227  007E7E  6C                 	db	108	;'l'
   228  007E7F  20                 	db	32
   229  007E80  6D                 	db	109	;'m'
   230  007E81  61                 	db	97	;'a'
   231  007E82  70                 	db	112	;'p'
   232  007E83  65                 	db	101	;'e'
   233  007E84  6F                 	db	111	;'o'
   234  007E85  20                 	db	32
   235  007E86  64                 	db	100	;'d'
   236  007E87  65                 	db	101	;'e'
   237  007E88  20                 	db	32
   238  007E89  70                 	db	112	;'p'
   239  007E8A  61                 	db	97	;'a'
   240  007E8B  73                 	db	115	;'s'
   241  007E8C  6F                 	db	111	;'o'
   242  007E8D  73                 	db	115	;'s'
   243  007E8E  20                 	db	32
   244  007E8F  52                 	db	82	;'R'
   245  007E90  65                 	db	101	;'e'
   246  007E91  61                 	db	97	;'a'
   247  007E92  6C                 	db	108	;'l'
   248  007E93  69                 	db	105	;'i'
   249  007E94  7A                 	db	122	;'z'
   250  007E95  61                 	db	97	;'a'
   251  007E96  64                 	db	100	;'d'
   252  007E97  6F                 	db	111	;'o'
   253  007E98  73                 	db	115	;'s'
   254  007E99  20                 	db	32
   255  007E9A  70                 	db	112	;'p'
   256  007E9B  61                 	db	97	;'a'
   257  007E9C  72                 	db	114	;'r'
   258  007E9D  61                 	db	97	;'a'
   259  007E9E  20                 	db	32
   260  007E9F  63                 	db	99	;'c'
   261  007EA0  61                 	db	97	;'a'
   262  007EA1  6D                 	db	109	;'m'
   263  007EA2  69                 	db	105	;'i'
   264  007EA3  6E                 	db	110	;'n'
   265  007EA4  6F                 	db	111	;'o'
   266  007EA5  20                 	db	32
   267  007EA6  54                 	db	84	;'T'
   268  007EA7  6F                 	db	111	;'o'
   269  007EA8  74                 	db	116	;'t'
   270  007EA9  61                 	db	97	;'a'
   271  007EAA  6C                 	db	108	;'l'
   272  007EAB  0A                 	db	10
   273  007EAC  0A                 	db	10
   274  007EAD  00                 	db	0
   275  007EAE                     STR_12:
   276  007EAE  0A                 	db	10
   277  007EAF  0A                 	db	10
   278  007EB0  4F                 	db	79	;'O'
   279  007EB1  56                 	db	86	;'V'
   280  007EB2  45                 	db	69	;'E'
   281  007EB3  52                 	db	82	;'R'
   282  007EB4  46                 	db	70	;'F'
   283  007EB5  4C                 	db	76	;'L'
   284  007EB6  4F                 	db	79	;'O'
   285  007EB7  57                 	db	87	;'W'
   286  007EB8  20                 	db	32
   287  007EB9  65                 	db	101	;'e'
   288  007EBA  6E                 	db	110	;'n'
   289  007EBB  20                 	db	32
   290  007EBC  65                 	db	101	;'e'
   291  007EBD  6C                 	db	108	;'l'
   292  007EBE  20                 	db	32
   293  007EBF  6D                 	db	109	;'m'
   294  007EC0  61                 	db	97	;'a'
   295  007EC1  70                 	db	112	;'p'
   296  007EC2  65                 	db	101	;'e'
   297  007EC3  6F                 	db	111	;'o'
   298  007EC4  20                 	db	32
   299  007EC5  64                 	db	100	;'d'
   300  007EC6  65                 	db	101	;'e'
   301  007EC7  20                 	db	32
   302  007EC8  70                 	db	112	;'p'
   303  007EC9  61                 	db	97	;'a'
   304  007ECA  73                 	db	115	;'s'
   305  007ECB  6F                 	db	111	;'o'
   306  007ECC  73                 	db	115	;'s'
   307  007ECD  20                 	db	32
   308  007ECE  52                 	db	82	;'R'
   309  007ECF  65                 	db	101	;'e'
   310  007ED0  61                 	db	97	;'a'
   311  007ED1  6C                 	db	108	;'l'
   312  007ED2  69                 	db	105	;'i'
   313  007ED3  7A                 	db	122	;'z'
   314  007ED4  61                 	db	97	;'a'
   315  007ED5  64                 	db	100	;'d'
   316  007ED6  6F                 	db	111	;'o'
   317  007ED7  73                 	db	115	;'s'
   318  007ED8  20                 	db	32
   319  007ED9  70                 	db	112	;'p'
   320  007EDA  61                 	db	97	;'a'
   321  007EDB  72                 	db	114	;'r'
   322  007EDC  61                 	db	97	;'a'
   323  007EDD  20                 	db	32
   324  007EDE  63                 	db	99	;'c'
   325  007EDF  72                 	db	114	;'r'
   326  007EE0  75                 	db	117	;'u'
   327  007EE1  63                 	db	99	;'c'
   328  007EE2  65                 	db	101	;'e'
   329  007EE3  0A                 	db	10
   330  007EE4  0A                 	db	10
   331  007EE5  00                 	db	0
   332  007EE6  0D                 	db	13
   333  007EE7  4C                 	db	76	;'L'
   334  007EE8  65                 	db	101	;'e'
   335  007EE9  63                 	db	99	;'c'
   336  007EEA  74                 	db	116	;'t'
   337  007EEB  75                 	db	117	;'u'
   338  007EEC  72                 	db	114	;'r'
   339  007EED  61                 	db	97	;'a'
   340  007EEE  20                 	db	32
   341  007EEF  64                 	db	100	;'d'
   342  007EF0  65                 	db	101	;'e'
   343  007EF1  20                 	db	32
   344  007EF2  73                 	db	115	;'s'
   345  007EF3  65                 	db	101	;'e'
   346  007EF4  6E                 	db	110	;'n'
   347  007EF5  73                 	db	115	;'s'
   348  007EF6  6F                 	db	111	;'o'
   349  007EF7  72                 	db	114	;'r'
   350  007EF8  20                 	db	32
   351  007EF9  4F                 	db	79	;'O'
   352  007EFA  70                 	db	112	;'p'
   353  007EFB  74                 	db	116	;'t'
   354  007EFC  69                 	db	105	;'i'
   355  007EFD  63                 	db	99	;'c'
   356  007EFE  6F                 	db	111	;'o'
   357  007EFF  20                 	db	32
   358  007F00  3D                 	db	61	;'='
   359  007F01  20                 	db	32
   360  007F02  25                 	db	37
   361  007F03  64                 	db	100	;'d'
   362  007F04  0D                 	db	13
   363  007F05  0A                 	db	10
   364  007F06  0A                 	db	10
   365  007F07  00                 	db	0
   366  007F08                     STR_14:
   367  007F08  49                 	db	73	;'I'
   368  007F09  6E                 	db	110	;'n'
   369  007F0A  76                 	db	118	;'v'
   370  007F0B  65                 	db	101	;'e'
   371  007F0C  73                 	db	115	;'s'
   372  007F0D  74                 	db	116	;'t'
   373  007F0E  69                 	db	105	;'i'
   374  007F0F  67                 	db	103	;'g'
   375  007F10  61                 	db	97	;'a'
   376  007F11  6E                 	db	110	;'n'
   377  007F12  64                 	db	100	;'d'
   378  007F13  6F                 	db	111	;'o'
   379  007F14  20                 	db	32
   380  007F15  43                 	db	67	;'C'
   381  007F16  72                 	db	114	;'r'
   382  007F17  75                 	db	117	;'u'
   383  007F18  63                 	db	99	;'c'
   384  007F19  65                 	db	101	;'e'
   385  007F1A  3A                 	db	58	;':'
   386  007F1B  20                 	db	32
   387  007F1C  25                 	db	37
   388  007F1D  63                 	db	99	;'c'
   389  007F1E  20                 	db	32
   390  007F1F  7C                 	db	124
   391  007F20  20                 	db	32
   392  007F21  25                 	db	37
   393  007F22  63                 	db	99	;'c'
   394  007F23  20                 	db	32
   395  007F24  7C                 	db	124
   396  007F25  20                 	db	32
   397  007F26  25                 	db	37
   398  007F27  63                 	db	99	;'c'
   399  007F28  0A                 	db	10
   400  007F29  00                 	db	0
   401  007F2A                     STR_11:
   402  007F2A  0D                 	db	13
   403  007F2B  4D                 	db	77	;'M'
   404  007F2C  6F                 	db	111	;'o'
   405  007F2D  76                 	db	118	;'v'
   406  007F2E  69                 	db	105	;'i'
   407  007F2F  6D                 	db	109	;'m'
   408  007F30  69                 	db	105	;'i'
   409  007F31  65                 	db	101	;'e'
   410  007F32  6E                 	db	110	;'n'
   411  007F33  74                 	db	116	;'t'
   412  007F34  6F                 	db	111	;'o'
   413  007F35  73                 	db	115	;'s'
   414  007F36  20                 	db	32
   415  007F37  52                 	db	82	;'R'
   416  007F38  65                 	db	101	;'e'
   417  007F39  61                 	db	97	;'a'
   418  007F3A  6C                 	db	108	;'l'
   419  007F3B  69                 	db	105	;'i'
   420  007F3C  7A                 	db	122	;'z'
   421  007F3D  61                 	db	97	;'a'
   422  007F3E  64                 	db	100	;'d'
   423  007F3F  6F                 	db	111	;'o'
   424  007F40  73                 	db	115	;'s'
   425  007F41  20                 	db	32
   426  007F42  3D                 	db	61	;'='
   427  007F43  20                 	db	32
   428  007F44  25                 	db	37
   429  007F45  64                 	db	100	;'d'
   430  007F46  0D                 	db	13
   431  007F47  0A                 	db	10
   432  007F48  0A                 	db	10
   433  007F49  00                 	db	0
   434  007F4A  0D                 	db	13
   435  007F4B  44                 	db	68	;'D'
   436  007F4C  65                 	db	101	;'e'
   437  007F4D  73                 	db	115	;'s'
   438  007F4E  74                 	db	116	;'t'
   439  007F4F  69                 	db	105	;'i'
   440  007F50  6E                 	db	110	;'n'
   441  007F51  6F                 	db	111	;'o'
   442  007F52  20                 	db	32
   443  007F53  6E                 	db	110	;'n'
   444  007F54  6F                 	db	111	;'o'
   445  007F55  20                 	db	32
   446  007F56  64                 	db	100	;'d'
   447  007F57  65                 	db	101	;'e'
   448  007F58  74                 	db	116	;'t'
   449  007F59  65                 	db	101	;'e'
   450  007F5A  63                 	db	99	;'c'
   451  007F5B  74                 	db	116	;'t'
   452  007F5C  61                 	db	97	;'a'
   453  007F5D  64                 	db	100	;'d'
   454  007F5E  6F                 	db	111	;'o'
   455  007F5F  20                 	db	32
   456  007F60  0D                 	db	13
   457  007F61  0A                 	db	10
   458  007F62  00                 	db	0
   459  007F63  0D                 	db	13
   460  007F64  53                 	db	83	;'S'
   461  007F65  65                 	db	101	;'e'
   462  007F66  20                 	db	32
   463  007F67  6C                 	db	108	;'l'
   464  007F68  6C                 	db	108	;'l'
   465  007F69  65                 	db	101	;'e'
   466  007F6A  67                 	db	103	;'g'
   467  007F6B  6F                 	db	111	;'o'
   468  007F6C  20                 	db	32
   469  007F6D  61                 	db	97	;'a'
   470  007F6E  6C                 	db	108	;'l'
   471  007F6F  20                 	db	32
   472  007F70  64                 	db	100	;'d'
   473  007F71  65                 	db	101	;'e'
   474  007F72  73                 	db	115	;'s'
   475  007F73  74                 	db	116	;'t'
   476  007F74  69                 	db	105	;'i'
   477  007F75  6E                 	db	110	;'n'
   478  007F76  6F                 	db	111	;'o'
   479  007F77  20                 	db	32
   480  007F78  0D                 	db	13
   481  007F79  0A                 	db	10
   482  007F7A  00                 	db	0
   483  007F7B                     STR_15:
   484  007F7B  0D                 	db	13
   485  007F7C  53                 	db	83	;'S'
   486  007F7D  65                 	db	101	;'e'
   487  007F7E  20                 	db	32
   488  007F7F  6C                 	db	108	;'l'
   489  007F80  6C                 	db	108	;'l'
   490  007F81  65                 	db	101	;'e'
   491  007F82  67                 	db	103	;'g'
   492  007F83  6F                 	db	111	;'o'
   493  007F84  20                 	db	32
   494  007F85  41                 	db	65	;'A'
   495  007F86  6C                 	db	108	;'l'
   496  007F87  20                 	db	32
   497  007F88  64                 	db	100	;'d'
   498  007F89  65                 	db	101	;'e'
   499  007F8A  73                 	db	115	;'s'
   500  007F8B  74                 	db	116	;'t'
   501  007F8C  69                 	db	105	;'i'
   502  007F8D  6E                 	db	110	;'n'
   503  007F8E  6F                 	db	111	;'o'
   504  007F8F  0D                 	db	13
   505  007F90  0A                 	db	10
   506  007F91  00                 	db	0
   507  007F92  0D                 	db	13
   508  007F93  49                 	db	73	;'I'
   509  007F94  7A                 	db	122	;'z'
   510  007F95  71                 	db	113	;'q'
   511  007F96  75                 	db	117	;'u'
   512  007F97  69                 	db	105	;'i'
   513  007F98  65                 	db	101	;'e'
   514  007F99  72                 	db	114	;'r'
   515  007F9A  64                 	db	100	;'d'
   516  007F9B  61                 	db	97	;'a'
   517  007F9C  3A                 	db	58	;':'
   518  007F9D  20                 	db	32
   519  007F9E  25                 	db	37
   520  007F9F  2E                 	db	46
   521  007FA0  32                 	db	50	;'2'
   522  007FA1  66                 	db	102	;'f'
   523  007FA2  0D                 	db	13
   524  007FA3  0A                 	db	10
   525  007FA4  00                 	db	0
   526  007FA5  0D                 	db	13
   527  007FA6  45                 	db	69	;'E'
   528  007FA7  6E                 	db	110	;'n'
   529  007FA8  66                 	db	102	;'f'
   530  007FA9  72                 	db	114	;'r'
   531  007FAA  65                 	db	101	;'e'
   532  007FAB  6E                 	db	110	;'n'
   533  007FAC  74                 	db	116	;'t'
   534  007FAD  65                 	db	101	;'e'
   535  007FAE  3A                 	db	58	;':'
   536  007FAF  20                 	db	32
   537  007FB0  25                 	db	37
   538  007FB1  2E                 	db	46
   539  007FB2  32                 	db	50	;'2'
   540  007FB3  66                 	db	102	;'f'
   541  007FB4  0D                 	db	13
   542  007FB5  0A                 	db	10
   543  007FB6  00                 	db	0
   544  007FB7  0D                 	db	13
   545  007FB8  44                 	db	68	;'D'
   546  007FB9  65                 	db	101	;'e'
   547  007FBA  72                 	db	114	;'r'
   548  007FBB  65                 	db	101	;'e'
   549  007FBC  63                 	db	99	;'c'
   550  007FBD  68                 	db	104	;'h'
   551  007FBE  61                 	db	97	;'a'
   552  007FBF  3A                 	db	58	;':'
   553  007FC0  20                 	db	32
   554  007FC1  25                 	db	37
   555  007FC2  2E                 	db	46
   556  007FC3  32                 	db	50	;'2'
   557  007FC4  66                 	db	102	;'f'
   558  007FC5  0D                 	db	13
   559  007FC6  0A                 	db	10
   560  007FC7  00                 	db	0
   561  007FC8                     STR_8:
   562  007FC8  49                 	db	73	;'I'
   563  007FC9  7A                 	db	122	;'z'
   564  007FCA  71                 	db	113	;'q'
   565  007FCB  75                 	db	117	;'u'
   566  007FCC  69                 	db	105	;'i'
   567  007FCD  65                 	db	101	;'e'
   568  007FCE  72                 	db	114	;'r'
   569  007FCF  64                 	db	100	;'d'
   570  007FD0  61                 	db	97	;'a'
   571  007FD1  0A                 	db	10
   572  007FD2  00                 	db	0
   573  007FD3                     STR_7:
   574  007FD3  45                 	db	69	;'E'
   575  007FD4  6E                 	db	110	;'n'
   576  007FD5  66                 	db	102	;'f'
   577  007FD6  72                 	db	114	;'r'
   578  007FD7  65                 	db	101	;'e'
   579  007FD8  6E                 	db	110	;'n'
   580  007FD9  74                 	db	116	;'t'
   581  007FDA  65                 	db	101	;'e'
   582  007FDB  0A                 	db	10
   583  007FDC  00                 	db	0
   584  007FDD                     STR_9:
   585  007FDD  44                 	db	68	;'D'
   586  007FDE  65                 	db	101	;'e'
   587  007FDF  72                 	db	114	;'r'
   588  007FE0  65                 	db	101	;'e'
   589  007FE1  63                 	db	99	;'c'
   590  007FE2  68                 	db	104	;'h'
   591  007FE3  61                 	db	97	;'a'
   592  007FE4  0A                 	db	10
   593  007FE5  00                 	db	0
   594  007FE6                     STR_10:
   595  007FE6  41                 	db	65	;'A'
   596  007FE7  6C                 	db	108	;'l'
   597  007FE8  74                 	db	116	;'t'
   598  007FE9  6F                 	db	111	;'o'
   599  007FEA  0A                 	db	10
   600  007FEB  00                 	db	0
   601  007FEC                     STR_16:
   602  007FEC  49                 	db	73	;'I'
   603  007FED  4E                 	db	78	;'N'
   604  007FEE  46                 	db	70	;'F'
   605  007FEF  00                 	db	0
   606  007FF0                     STR_20:
   607  007FF0  4E                 	db	78	;'N'
   608  007FF1  41                 	db	65	;'A'
   609  007FF2  4E                 	db	78	;'N'
   610  007FF3  00                 	db	0
   611  007FF4                     STR_17:
   612  007FF4  69                 	db	105	;'i'
   613  007FF5  6E                 	db	110	;'n'
   614  007FF6  66                 	db	102	;'f'
   615  007FF7  00                 	db	0
   616  007FF8                     STR_21:
   617  007FF8  6E                 	db	110	;'n'
   618  007FF9  61                 	db	97	;'a'
   619  007FFA  6E                 	db	110	;'n'
   620  007FFB  00                 	db	0
   621  007FFC                     STR_24:
   622  007FFC  6C                 	db	108	;'l'
   623  007FFD  66                 	db	102	;'f'
   624  007FFE  00                 	db	0
   625  0000                     
   626                           ; #config settings
   627  007FFF  00                 	db	0	; dummy byte at the end
   628  0000                     
   629                           	psect	cinit
   630  004CC6                     __pcinit:
   631                           	opt callstack 0
   632  004CC6                     start_initialization:
   633                           	opt callstack 0
   634  004CC6                     __initialization:
   635                           	opt callstack 0
   636                           
   637                           ; Initialize objects allocated to BANK1 (4 bytes)
   638                           ; load TBLPTR registers with __pidataBANK1
   639  004CC6  0E32               	movlw	low __pidataBANK1
   640  004CC8  6EF6               	movwf	tblptrl,c
   641  004CCA  0E56               	movlw	high __pidataBANK1
   642  004CCC  6EF7               	movwf	tblptrh,c
   643  004CCE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   644  004CD0  6EF8               	movwf	tblptru,c
   645  004CD2  EE01  F0D5         	lfsr	0,__pdataBANK1
   646  004CD6  EE10 F004          	lfsr	1,4
   647  004CDA                     copy_data0:
   648  004CDA  0009               	tblrd		*+
   649  004CDC  CFF5 FFEE          	movff	tablat,postinc0
   650  004CE0  50E5               	movf	postdec1,w,c
   651  004CE2  50E1               	movf	fsr1l,w,c
   652  004CE4  E1FA               	bnz	copy_data0
   653                           
   654                           ; Clear objects allocated to BIGRAM (1000 bytes)
   655  004CE6  EE02  F0C8         	lfsr	0,__pbssBIGRAM
   656  004CEA  EE13 F0E8          	lfsr	1,1000
   657  004CEE                     clear_0:
   658  004CEE  6AEE               	clrf	postinc0,c
   659  004CF0  50E5               	movf	postdec1,w,c
   660  004CF2  50E1               	movf	fsr1l,w,c
   661  004CF4  E1FC               	bnz	clear_0
   662  004CF6  50E2               	movf	fsr1h,w,c
   663  004CF8  E1FA               	bnz	clear_0
   664                           
   665                           ; Clear objects allocated to BANK2 (200 bytes)
   666  004CFA  EE02  F000         	lfsr	0,__pbssBANK2
   667  004CFE  0EC8               	movlw	200
   668  004D00                     clear_1:
   669  004D00  6AEE               	clrf	postinc0,c
   670  004D02  06E8               	decf	wreg,f,c
   671  004D04  E1FD               	bnz	clear_1
   672                           
   673                           ; Clear objects allocated to BANK1 (206 bytes)
   674  004D06  EE01  F000         	lfsr	0,__pbssBANK1
   675  004D0A  0ECE               	movlw	206
   676  004D0C                     clear_2:
   677  004D0C  6AEE               	clrf	postinc0,c
   678  004D0E  06E8               	decf	wreg,f,c
   679  004D10  E1FD               	bnz	clear_2
   680                           
   681                           ; Clear objects allocated to BANK0 (4 bytes)
   682  004D12  0100               	movlb	0
   683  004D14  6BFF               	clrf	(__pbssBANK0+3)& (0+255),b
   684  004D16  6BFE               	clrf	(__pbssBANK0+2)& (0+255),b
   685  004D18  6BFD               	clrf	(__pbssBANK0+1)& (0+255),b
   686  004D1A  6BFC               	clrf	__pbssBANK0& (0+255),b
   687                           
   688                           ; Clear objects allocated to COMRAM (5 bytes)
   689  004D1C  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   690  004D1E  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   691  004D20  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   692  004D22  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   693  004D24  6A55               	clrf	__pbssCOMRAM& (0+255),c
   694  004D26                     end_of_initialization:
   695                           	opt callstack 0
   696  004D26                     __end_of__initialization:
   697                           	opt callstack 0
   698  004D26  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   699  004D28  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   700  004D2A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   701  004D2C  6EF8               	movwf	tblptru,c
   702  004D2E  0100               	movlb	0
   703  004D30  EF24  F025         	goto	_main	;jump to C main() function
   704                           
   705                           	psect	bssCOMRAM
   706  000055                     __pbssCOMRAM:
   707                           	opt callstack 0
   708  000055                     _sensorDerecha:
   709                           	opt callstack 0
   710  000055                     	ds	4
   711  000059                     _paredEnfrente:
   712                           	opt callstack 0
   713  000059                     	ds	1
   714                           
   715                           	psect	bssBANK0
   716  0000FC                     __pbssBANK0:
   717                           	opt callstack 0
   718  0000FC                     _mouse:
   719                           	opt callstack 0
   720  0000FC                     	ds	2
   721  0000FE                     _llegoDestino:
   722                           	opt callstack 0
   723  0000FE                     	ds	1
   724  0000FF                     comportamientoBasico@carroEspejeado:
   725                           	opt callstack 0
   726  0000FF                     	ds	1
   727                           
   728                           	psect	bssBANK1
   729  000100                     __pbssBANK1:
   730                           	opt callstack 0
   731  000100                     roundf@F525:
   732                           	opt callstack 0
   733  000100                     	ds	4
   734  000104                     floorf@F524:
   735                           	opt callstack 0
   736  000104                     	ds	4
   737  000108                     ___fpclassifyf@F463:
   738                           	opt callstack 0
   739  000108                     	ds	4
   740  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   741                           	opt callstack 0
   742  00010C                     	ds	4
   743  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   744                           	opt callstack 0
   745  000110                     	ds	4
   746  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   747                           	opt callstack 0
   748  000114                     	ds	4
   749  000118                     _oldSensorEnfrente:
   750                           	opt callstack 0
   751  000118                     	ds	4
   752  00011C                     _oldSensorIzquierda:
   753                           	opt callstack 0
   754  00011C                     	ds	4
   755  000120                     _oldSensorDerecha:
   756                           	opt callstack 0
   757  000120                     	ds	4
   758  000124                     _sensorEnfrente:
   759                           	opt callstack 0
   760  000124                     	ds	4
   761  000128                     _sensorIzquierda:
   762                           	opt callstack 0
   763  000128                     	ds	4
   764  00012C                     _nout:
   765                           	opt callstack 0
   766  00012C                     	ds	2
   767  00012E                     _width:
   768                           	opt callstack 0
   769  00012E                     	ds	2
   770  000130                     _prec:
   771                           	opt callstack 0
   772  000130                     	ds	2
   773  000132                     _flags:
   774                           	opt callstack 0
   775  000132                     	ds	2
   776  000134                     PID@difAnt:
   777                           	opt callstack 0
   778  000134                     	ds	2
   779  000136                     comportamientoBasico@caminoEncontrado:
   780                           	opt callstack 0
   781  000136                     	ds	1
   782  000137                     comportamientoBasico@cruceDetectado:
   783                           	opt callstack 0
   784  000137                     	ds	1
   785  000138                     comportamientoBasico@mapear:
   786                           	opt callstack 0
   787  000138                     	ds	1
   788  000139                     comportamientoBasico@espejearCarroY:
   789                           	opt callstack 0
   790  000139                     	ds	1
   791  00013A                     _paredIzquierda:
   792                           	opt callstack 0
   793  00013A                     	ds	1
   794  00013B                     _paredDerecha:
   795                           	opt callstack 0
   796  00013B                     	ds	1
   797  00013C                     _posicionDestinoY:
   798                           	opt callstack 0
   799  00013C                     	ds	1
   800  00013D                     _posicionDestinoX:
   801                           	opt callstack 0
   802  00013D                     	ds	1
   803  00013E                     _posicionCarroY:
   804                           	opt callstack 0
   805  00013E                     	ds	1
   806  00013F                     _posicionCarroX:
   807                           	opt callstack 0
   808  00013F                     	ds	1
   809  000140                     _dbuf:
   810                           	opt callstack 0
   811  000140                     	ds	80
   812  000190                     _buffer:
   813                           	opt callstack 0
   814  000190                     	ds	50
   815  0001C2                     comportamientoBasico@caminosRecorrer:
   816                           	opt callstack 0
   817  0001C2                     	ds	3
   818  0001C5                     comportamientoBasico@numMovimientosTotales:
   819                           	opt callstack 0
   820  0001C5                     	ds	2
   821  0001C7                     comportamientoBasico@numMovimientos:
   822                           	opt callstack 0
   823  0001C7                     	ds	2
   824  0001C9                     comportamientoBasico@cambioOrientacionCarro:
   825                           	opt callstack 0
   826  0001C9                     	ds	1
   827  0001CA                     comportamientoBasico@caminoActual:
   828                           	opt callstack 0
   829  0001CA                     	ds	1
   830  0001CB                     comportamientoBasico@contCaminosRecorridos:
   831                           	opt callstack 0
   832  0001CB                     	ds	1
   833  0001CC                     comportamientoBasico@posicionInvCruce:
   834                           	opt callstack 0
   835  0001CC                     	ds	1
   836  0001CD                     comportamientoBasico@investigandoCruce:
   837                           	opt callstack 0
   838  0001CD                     	ds	1
   839                           
   840                           	psect	dataBANK1
   841  0001D5                     __pdataBANK1:
   842                           	opt callstack 0
   843  0001D5                     _pausa:
   844                           	opt callstack 0
   845  0001D5                     	ds	1
   846  0001D6                     _SENSOR_PRIORIDAD_BAJA:
   847                           	opt callstack 0
   848  0001D6                     	ds	1
   849  0001D7                     _SENSOR_PRIORIDAD_MEDIA:
   850                           	opt callstack 0
   851  0001D7                     	ds	1
   852  0001D8                     _SENSOR_PRIORIDAD_ALTA:
   853                           	opt callstack 0
   854  0001D8                     	ds	1
   855                           
   856                           	psect	bssBANK2
   857  000200                     __pbssBANK2:
   858                           	opt callstack 0
   859  000200                     comportamientoBasico@movimientosRealizados:
   860                           	opt callstack 0
   861  000200                     	ds	200
   862                           
   863                           	psect	bssBIGRAM
   864  0002C8                     __pbssBIGRAM:
   865                           	opt callstack 0
   866  0002C8                     comportamientoBasico@caminoFinal:
   867                           	opt callstack 0
   868  0002C8                     	ds	1000
   869                           
   870                           	psect	cstackBANK1
   871  0001CE                     __pcstackBANK1:
   872                           	opt callstack 0
   873  0001CE                     ??_comportamientoBasico:
   874  0001CE                     visualizarPasosRealizados@numMovimientos:
   875                           	opt callstack 0
   876                           
   877                           ; 2 bytes @ 0x0
   878  0001CE                     	ds	2
   879  0001D0                     ??_visualizarPasosRealizados:
   880                           
   881                           ; 1 bytes @ 0x2
   882  0001D0                     	ds	4
   883  0001D4                     main@iniciado:
   884                           	opt callstack 0
   885                           
   886                           ; 1 bytes @ 0x6
   887  0001D4                     	ds	1
   888                           
   889                           	psect	cstackBANK0
   890  000060                     __pcstackBANK0:
   891                           	opt callstack 0
   892  000060                     ___fldiv@rem:
   893                           	opt callstack 0
   894  000060                     _roundf$1829:
   895                           	opt callstack 0
   896                           
   897                           ; 4 bytes @ 0x0
   898  000060                     	ds	4
   899  000064                     ___fldiv@sign:
   900                           	opt callstack 0
   901  000064                     roundf@e:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x4
   905  000064                     	ds	1
   906  000065                     ___fldiv@new_exp:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0x5
   910  000065                     	ds	1
   911  000066                     _roundf$1828:
   912                           	opt callstack 0
   913                           
   914                           ; 4 bytes @ 0x6
   915  000066                     	ds	1
   916  000067                     ___fldiv@grs:
   917                           	opt callstack 0
   918                           
   919                           ; 4 bytes @ 0x7
   920  000067                     	ds	3
   921  00006A                     roundf@u:
   922                           	opt callstack 0
   923                           
   924                           ; 4 bytes @ 0xA
   925  00006A                     	ds	1
   926  00006B                     ___fldiv@bexp:
   927                           	opt callstack 0
   928                           
   929                           ; 1 bytes @ 0xB
   930  00006B                     	ds	1
   931  00006C                     ___fldiv@aexp:
   932                           	opt callstack 0
   933                           
   934                           ; 1 bytes @ 0xC
   935  00006C                     	ds	1
   936  00006D                     ??_floorf:
   937                           
   938                           ; 1 bytes @ 0xD
   939  00006D                     	ds	1
   940  00006E                     roundf@y:
   941                           	opt callstack 0
   942                           
   943                           ; 4 bytes @ 0xE
   944  00006E                     	ds	4
   945  000072                     ?___fltol:
   946                           	opt callstack 0
   947  000072                     ___fltol@f1:
   948                           	opt callstack 0
   949                           
   950                           ; 4 bytes @ 0x12
   951  000072                     	ds	1
   952  000073                     floorf@m:
   953                           	opt callstack 0
   954                           
   955                           ; 4 bytes @ 0x13
   956  000073                     	ds	3
   957  000076                     ??___fltol:
   958                           
   959                           ; 1 bytes @ 0x16
   960  000076                     	ds	1
   961  000077                     floorf@e:
   962                           	opt callstack 0
   963                           
   964                           ; 2 bytes @ 0x17
   965  000077                     	ds	2
   966  000079                     floorf@u:
   967                           	opt callstack 0
   968                           
   969                           ; 4 bytes @ 0x19
   970  000079                     	ds	1
   971  00007A                     ___fltol@sign1:
   972                           	opt callstack 0
   973                           
   974                           ; 1 bytes @ 0x1A
   975  00007A                     	ds	1
   976  00007B                     ___fltol@exp1:
   977                           	opt callstack 0
   978                           
   979                           ; 1 bytes @ 0x1B
   980  00007B                     	ds	1
   981  00007C                     pwmDuty@cicloTrabajo:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0x1C
   985  00007C                     	ds	1
   986  00007D                     ?_efgtoa:
   987                           	opt callstack 0
   988  00007D                     efgtoa@fp:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x1D
   992  00007D                     	ds	1
   993  00007E                     pwmDuty@channel:
   994                           	opt callstack 0
   995                           
   996                           ; 1 bytes @ 0x1E
   997  00007E                     	ds	1
   998  00007F                     ??_pwmDuty:
   999  00007F                     efgtoa@f:
  1000                           	opt callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x1F
  1003  00007F                     	ds	4
  1004  000083                     efgtoa@c:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x23
  1008  000083                     	ds	1
  1009  000084                     ??_efgtoa:
  1010  000084                     pwmDuty@duty:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x24
  1014  000084                     	ds	4
  1015  000088                     ??_PID:
  1016  000088                     moverCarrito@carroEspejeado:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x28
  1020  000088                     	ds	1
  1021  000089                     efgtoa@ou:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x29
  1025  000089                     	ds	1
  1026  00008A                     ??_moverCarrito:
  1027  00008A                     _PID$1827:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x2A
  1031  00008A                     	ds	3
  1032  00008D                     _efgtoa$928:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x2D
  1036  00008D                     	ds	1
  1037  00008E                     PID@velocidadIzquierda:
  1038                           	opt callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x2E
  1041  00008E                     	ds	1
  1042  00008F                     _efgtoa$929:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x2F
  1046  00008F                     	ds	1
  1047  000090                     _PID$749:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x30
  1051  000090                     	ds	1
  1052  000091                     _efgtoa$933:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x31
  1056  000091                     	ds	1
  1057  000092                     PID@velocidadDerecha:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x32
  1061  000092                     	ds	1
  1062  000093                     _efgtoa$937:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x33
  1066  000093                     	ds	1
  1067  000094                     _PID$751:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x34
  1071  000094                     	ds	1
  1072  000095                     _efgtoa$938:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x35
  1076  000095                     	ds	1
  1077  000096                     PID@dif:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x36
  1081  000096                     	ds	1
  1082  000097                     _efgtoa$939:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x37
  1086  000097                     	ds	1
  1087  000098                     PID@error:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x38
  1091  000098                     	ds	1
  1092  000099                     efgtoa@t:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x39
  1096  000099                     	ds	1
  1097  00009A                     regresarPuntoPartida@movimientos:
  1098                           	opt callstack 0
  1099  00009A                     regresarAlCruce@movimientos:
  1100                           	opt callstack 0
  1101  00009A                     recorrerCaminoEncontrado@movimientos:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x3A
  1105  00009A                     	ds	1
  1106  00009B                     efgtoa@pp:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x3B
  1110  00009B                     	ds	1
  1111  00009C                     regresarPuntoPartida@numMovimientos:
  1112                           	opt callstack 0
  1113  00009C                     regresarAlCruce@numMovimientos:
  1114                           	opt callstack 0
  1115  00009C                     recorrerCaminoEncontrado@numMovimientos:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x3C
  1119  00009C                     	ds	1
  1120  00009D                     efgtoa@m:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x3D
  1124  00009D                     	ds	1
  1125  00009E                     regresarPuntoPartida@i:
  1126                           	opt callstack 0
  1127  00009E                     regresarAlCruce@i:
  1128                           	opt callstack 0
  1129  00009E                     recorrerCaminoEncontrado@i:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x3E
  1133  00009E                     	ds	1
  1134  00009F                     efgtoa@ne:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x3F
  1138  00009F                     	ds	2
  1139  0000A1                     efgtoa@d:
  1140                           	opt callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x41
  1143  0000A1                     	ds	2
  1144  0000A3                     efgtoa@sign:
  1145                           	opt callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x43
  1148  0000A3                     	ds	2
  1149  0000A5                     efgtoa@p:
  1150                           	opt callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x45
  1153  0000A5                     	ds	2
  1154  0000A7                     efgtoa@nmode:
  1155                           	opt callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x47
  1158  0000A7                     	ds	1
  1159  0000A8                     efgtoa@w:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x48
  1163  0000A8                     	ds	2
  1164  0000AA                     efgtoa@mode:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 1 bytes @ 0x4A
  1168  0000AA                     	ds	1
  1169  0000AB                     efgtoa@h:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x4B
  1173  0000AB                     	ds	4
  1174  0000AF                     efgtoa@l:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x4F
  1178  0000AF                     	ds	4
  1179  0000B3                     efgtoa@i:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x53
  1183  0000B3                     	ds	2
  1184  0000B5                     efgtoa@g:
  1185                           	opt callstack 0
  1186                           
  1187                           ; 4 bytes @ 0x55
  1188  0000B5                     	ds	4
  1189  0000B9                     efgtoa@e:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x59
  1193  0000B9                     	ds	2
  1194  0000BB                     efgtoa@n:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x5B
  1198  0000BB                     	ds	2
  1199  0000BD                     efgtoa@u:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x5D
  1203  0000BD                     	ds	4
  1204  0000C1                     ?_vfpfcnvrt:
  1205                           	opt callstack 0
  1206  0000C1                     vfpfcnvrt@fp:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x61
  1210  0000C1                     	ds	2
  1211  0000C3                     vfpfcnvrt@fmt:
  1212                           	opt callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x63
  1215  0000C3                     	ds	2
  1216  0000C5                     vfpfcnvrt@ap:
  1217                           	opt callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x65
  1220  0000C5                     	ds	2
  1221  0000C7                     ??_vfpfcnvrt:
  1222                           
  1223                           ; 1 bytes @ 0x67
  1224  0000C7                     	ds	4
  1225  0000CB                     vfpfcnvrt@ll:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 8 bytes @ 0x6B
  1229  0000CB                     	ds	8
  1230  0000D3                     _vfpfcnvrt$953:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x73
  1234  0000D3                     	ds	2
  1235  0000D5                     _vfpfcnvrt$959:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x75
  1239  0000D5                     	ds	2
  1240  0000D7                     vfpfcnvrt@f:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x77
  1244  0000D7                     	ds	4
  1245  0000DB                     vfpfcnvrt@ct:
  1246                           	opt callstack 0
  1247                           
  1248                           ; 3 bytes @ 0x7B
  1249  0000DB                     	ds	3
  1250  0000DE                     vfpfcnvrt@c:
  1251                           	opt callstack 0
  1252                           
  1253                           ; 1 bytes @ 0x7E
  1254  0000DE                     	ds	1
  1255  0000DF                     ?_vfprintf:
  1256                           	opt callstack 0
  1257  0000DF                     vfprintf@fp:
  1258                           	opt callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x7F
  1261  0000DF                     	ds	2
  1262  0000E1                     vfprintf@fmt:
  1263                           	opt callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x81
  1266  0000E1                     	ds	2
  1267  0000E3                     vfprintf@ap:
  1268                           	opt callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x83
  1271  0000E3                     	ds	2
  1272  0000E5                     vfprintf@cfmt:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x85
  1276  0000E5                     	ds	2
  1277  0000E7                     ?_sprintf:
  1278                           	opt callstack 0
  1279  0000E7                     sprintf@s:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x87
  1283  0000E7                     	ds	2
  1284  0000E9                     sprintf@fmt:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x89
  1288  0000E9                     	ds	10
  1289  0000F3                     sprintf@ap:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x93
  1293  0000F3                     	ds	2
  1294  0000F5                     sprintf@f:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 6 bytes @ 0x95
  1298  0000F5                     	ds	6
  1299  0000FB                     comportamientoBasico@direccionElegida:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 1 bytes @ 0x9B
  1303  0000FB                     	ds	1
  1304                           
  1305                           	psect	cstackCOMRAM
  1306  000001                     __pcstackCOMRAM:
  1307                           	opt callstack 0
  1308  000001                     ??_antiRebote:
  1309  000001                     
  1310                           ; 1 bytes @ 0x0
  1311  000001                     	ds	2
  1312  000003                     antiRebote@pin:
  1313                           	opt callstack 0
  1314                           
  1315                           ; 1 bytes @ 0x2
  1316  000003                     	ds	1
  1317  000004                     ??_boton:
  1318                           
  1319                           ; 1 bytes @ 0x3
  1320  000004                     	ds	2
  1321  000006                     ??_forzarParoAuto:
  1322  000006                     ??_configPwm:
  1323  000006                     ??_forzarReversa:
  1324  000006                     ??_forzarAvanceRecto:
  1325  000006                     ??_forzarGiroIzquierda:
  1326  000006                     ??_forzarGiroDerecha:
  1327  000006                     ?_strlen:
  1328                           	opt callstack 0
  1329  000006                     ?___fpclassifyf:
  1330                           	opt callstack 0
  1331  000006                     ?_isupper:
  1332                           	opt callstack 0
  1333  000006                     ?_isdigit:
  1334                           	opt callstack 0
  1335  000006                     ?_strncmp:
  1336                           	opt callstack 0
  1337  000006                     ?_isspace:
  1338                           	opt callstack 0
  1339  000006                     ?_dameLecturaAdc:
  1340                           	opt callstack 0
  1341  000006                     ?___wmul:
  1342                           	opt callstack 0
  1343  000006                     ?___awdiv:
  1344                           	opt callstack 0
  1345  000006                     ?___awmod:
  1346                           	opt callstack 0
  1347  000006                     ?___lwdiv:
  1348                           	opt callstack 0
  1349  000006                     ?___lmul:
  1350                           	opt callstack 0
  1351  000006                     ?___flneg:
  1352                           	opt callstack 0
  1353  000006                     ?___aodiv:
  1354                           	opt callstack 0
  1355  000006                     ?___aomod:
  1356                           	opt callstack 0
  1357  000006                     UART_write@dato:
  1358                           	opt callstack 0
  1359  000006                     limpiarMovimientos@movimientos:
  1360                           	opt callstack 0
  1361  000006                     combinarArreglos@movimientos:
  1362                           	opt callstack 0
  1363  000006                     ___wmul@multiplier:
  1364                           	opt callstack 0
  1365  000006                     ___awdiv@dividend:
  1366                           	opt callstack 0
  1367  000006                     ___awmod@dividend:
  1368                           	opt callstack 0
  1369  000006                     ___lwdiv@dividend:
  1370                           	opt callstack 0
  1371  000006                     isdigit@c:
  1372                           	opt callstack 0
  1373  000006                     isspace@c:
  1374                           	opt callstack 0
  1375  000006                     isupper@c:
  1376                           	opt callstack 0
  1377  000006                     fputc@c:
  1378                           	opt callstack 0
  1379  000006                     strcpy@dest:
  1380                           	opt callstack 0
  1381  000006                     strlen@s:
  1382                           	opt callstack 0
  1383  000006                     strncmp@_l:
  1384                           	opt callstack 0
  1385  000006                     ___lmul@multiplier:
  1386                           	opt callstack 0
  1387  000006                     ___fleq@ff1:
  1388                           	opt callstack 0
  1389  000006                     ___flneg@f1:
  1390                           	opt callstack 0
  1391  000006                     ___fpclassifyf@x:
  1392                           	opt callstack 0
  1393  000006                     ___aodiv@dividend:
  1394                           	opt callstack 0
  1395  000006                     ___aomod@dividend:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 8 bytes @ 0x5
  1399  000006                     	ds	1
  1400  000007                     UART_printf@cadena:
  1401                           	opt callstack 0
  1402                           
  1403                           ; 2 bytes @ 0x6
  1404  000007                     	ds	1
  1405  000008                     ??_mover:
  1406  000008                     ??_isupper:
  1407  000008                     ??_isdigit:
  1408  000008                     ??_isspace:
  1409  000008                     ??_dameLecturaAdc:
  1410  000008                     configPwm@channel:
  1411                           	opt callstack 0
  1412  000008                     limpiarMovimientos@numMovimientos:
  1413                           	opt callstack 0
  1414  000008                     combinarArreglos@caminoFinal:
  1415                           	opt callstack 0
  1416  000008                     ___wmul@multiplicand:
  1417                           	opt callstack 0
  1418  000008                     ___awdiv@divisor:
  1419                           	opt callstack 0
  1420  000008                     ___awmod@divisor:
  1421                           	opt callstack 0
  1422  000008                     ___lwdiv@divisor:
  1423                           	opt callstack 0
  1424  000008                     fputc@fp:
  1425                           	opt callstack 0
  1426  000008                     strcpy@src:
  1427                           	opt callstack 0
  1428  000008                     strlen@a:
  1429                           	opt callstack 0
  1430  000008                     strncmp@_r:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x7
  1434  000008                     	ds	1
  1435  000009                     
  1436                           ; 1 bytes @ 0x8
  1437  000009                     	ds	1
  1438  00000A                     ??_fputc:
  1439  00000A                     ??___fpclassifyf:
  1440  00000A                     ??_strcpy:
  1441  00000A                     dameLecturaAdc@canalLeer:
  1442                           	opt callstack 0
  1443  00000A                     ___awdiv@counter:
  1444                           	opt callstack 0
  1445  00000A                     ___awmod@counter:
  1446                           	opt callstack 0
  1447  00000A                     ___lwdiv@counter:
  1448                           	opt callstack 0
  1449  00000A                     combinarArreglos@numMovimientos:
  1450                           	opt callstack 0
  1451  00000A                     ___wmul@product:
  1452                           	opt callstack 0
  1453  00000A                     strncmp@n:
  1454                           	opt callstack 0
  1455  00000A                     ___lmul@multiplicand:
  1456                           	opt callstack 0
  1457  00000A                     ___fleq@ff2:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 4 bytes @ 0x9
  1461  00000A                     	ds	1
  1462  00000B                     seLlegoAlDestino@llegoDestino:
  1463                           	opt callstack 0
  1464  00000B                     ___awdiv@sign:
  1465                           	opt callstack 0
  1466  00000B                     ___awmod@sign:
  1467                           	opt callstack 0
  1468  00000B                     ___lwdiv@quotient:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 2 bytes @ 0xA
  1472  00000B                     	ds	1
  1473  00000C                     ??_strncmp:
  1474  00000C                     ?_tolower:
  1475                           	opt callstack 0
  1476  00000C                     _isspace$1463:
  1477                           	opt callstack 0
  1478  00000C                     limpiarMovimientos@i:
  1479                           	opt callstack 0
  1480  00000C                     combinarArreglos@numMovimientosFinal:
  1481                           	opt callstack 0
  1482  00000C                     ___awdiv@quotient:
  1483                           	opt callstack 0
  1484  00000C                     strcpy@s:
  1485                           	opt callstack 0
  1486  00000C                     tolower@c:
  1487                           	opt callstack 0
  1488                           
  1489                           ; 2 bytes @ 0xB
  1490  00000C                     	ds	1
  1491  00000D                     ?_atoi:
  1492                           	opt callstack 0
  1493  00000D                     ?___xxtofl:
  1494                           	opt callstack 0
  1495  00000D                     atoi@s:
  1496                           	opt callstack 0
  1497  00000D                     strncmp@l:
  1498                           	opt callstack 0
  1499  00000D                     ___xxtofl@val:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 4 bytes @ 0xC
  1503  00000D                     	ds	1
  1504  00000E                     ??_combinarArreglos:
  1505  00000E                     ??_tolower:
  1506  00000E                     ??___fleq:
  1507  00000E                     ___fpclassifyf@e:
  1508                           	opt callstack 0
  1509  00000E                     strcpy@d:
  1510                           	opt callstack 0
  1511  00000E                     ___lmul@product:
  1512                           	opt callstack 0
  1513  00000E                     ___aodiv@divisor:
  1514                           	opt callstack 0
  1515  00000E                     ___aomod@divisor:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 8 bytes @ 0xD
  1519  00000E                     	ds	1
  1520  00000F                     ??_atoi:
  1521  00000F                     fputs@s:
  1522                           	opt callstack 0
  1523  00000F                     strncmp@r:
  1524                           	opt callstack 0
  1525                           
  1526                           ; 2 bytes @ 0xE
  1527  00000F                     	ds	1
  1528  000010                     combinarArreglos@i:
  1529                           	opt callstack 0
  1530  000010                     ___fpclassifyf@u:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 4 bytes @ 0xF
  1534  000010                     	ds	1
  1535  000011                     ??___xxtofl:
  1536  000011                     fputs@fp:
  1537                           	opt callstack 0
  1538                           
  1539                           ; 2 bytes @ 0x10
  1540  000011                     	ds	1
  1541  000012                     ?___aldiv:
  1542                           	opt callstack 0
  1543  000012                     caminoCorrecto@movimientos:
  1544                           	opt callstack 0
  1545  000012                     _tolower$1562:
  1546                           	opt callstack 0
  1547  000012                     ___aldiv@dividend:
  1548                           	opt callstack 0
  1549                           
  1550                           ; 4 bytes @ 0x11
  1551  000012                     	ds	1
  1552  000013                     fputs@c:
  1553                           	opt callstack 0
  1554  000013                     atoi@neg:
  1555                           	opt callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x12
  1558  000013                     	ds	1
  1559  000014                     caminoCorrecto@caminoFinal:
  1560                           	opt callstack 0
  1561  000014                     fputs@i:
  1562                           	opt callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x13
  1565  000014                     	ds	1
  1566  000015                     ___xxtofl@sign:
  1567                           	opt callstack 0
  1568  000015                     _atoi$1432:
  1569                           	opt callstack 0
  1570                           
  1571                           ; 2 bytes @ 0x14
  1572  000015                     	ds	1
  1573  000016                     ?_pad:
  1574                           	opt callstack 0
  1575  000016                     ___aodiv@counter:
  1576                           	opt callstack 0
  1577  000016                     ___aomod@counter:
  1578                           	opt callstack 0
  1579  000016                     ___xxtofl@exp:
  1580                           	opt callstack 0
  1581  000016                     caminoCorrecto@numMovimientos:
  1582                           	opt callstack 0
  1583  000016                     pad@fp:
  1584                           	opt callstack 0
  1585  000016                     ___aldiv@divisor:
  1586                           	opt callstack 0
  1587                           
  1588                           ; 4 bytes @ 0x15
  1589  000016                     	ds	1
  1590  000017                     ___aodiv@sign:
  1591                           	opt callstack 0
  1592  000017                     ___aomod@sign:
  1593                           	opt callstack 0
  1594  000017                     _atoi$1434:
  1595                           	opt callstack 0
  1596  000017                     ___xxtofl@arg:
  1597                           	opt callstack 0
  1598                           
  1599                           ; 4 bytes @ 0x16
  1600  000017                     	ds	1
  1601  000018                     ?_abs:
  1602                           	opt callstack 0
  1603  000018                     caminoCorrecto@numMovimientosFinal:
  1604                           	opt callstack 0
  1605  000018                     pad@buf:
  1606                           	opt callstack 0
  1607  000018                     abs@a:
  1608                           	opt callstack 0
  1609  000018                     ___aodiv@quotient:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 8 bytes @ 0x17
  1613  000018                     	ds	1
  1614  000019                     _atoi$1433:
  1615                           	opt callstack 0
  1616                           
  1617                           ; 1 bytes @ 0x18
  1618  000019                     	ds	1
  1619  00001A                     ??_abs:
  1620  00001A                     caminoCorrecto@caminoActual:
  1621                           	opt callstack 0
  1622  00001A                     ___aldiv@counter:
  1623                           	opt callstack 0
  1624  00001A                     pad@p:
  1625                           	opt callstack 0
  1626  00001A                     atoi@n:
  1627                           	opt callstack 0
  1628                           
  1629                           ; 2 bytes @ 0x19
  1630  00001A                     	ds	1
  1631  00001B                     ?___flmul:
  1632                           	opt callstack 0
  1633  00001B                     ?_dameDistancia:
  1634                           	opt callstack 0
  1635  00001B                     ___aldiv@sign:
  1636                           	opt callstack 0
  1637  00001B                     ___flmul@b:
  1638                           	opt callstack 0
  1639                           
  1640                           ; 4 bytes @ 0x1A
  1641  00001B                     	ds	1
  1642  00001C                     ??_pad:
  1643  00001C                     ___aldiv@quotient:
  1644                           	opt callstack 0
  1645                           
  1646                           ; 4 bytes @ 0x1B
  1647  00001C                     	ds	1
  1648  00001D                     pad@i:
  1649                           	opt callstack 0
  1650                           
  1651                           ; 2 bytes @ 0x1C
  1652  00001D                     	ds	2
  1653  00001F                     ??_dameDistancia:
  1654  00001F                     pad@w:
  1655                           	opt callstack 0
  1656  00001F                     ___flmul@a:
  1657                           	opt callstack 0
  1658                           
  1659                           ; 4 bytes @ 0x1E
  1660  00001F                     	ds	1
  1661  000020                     ?_map:
  1662                           	opt callstack 0
  1663  000020                     map@x:
  1664                           	opt callstack 0
  1665  000020                     UART_init@BAUD:
  1666                           	opt callstack 0
  1667                           
  1668                           ; 4 bytes @ 0x1F
  1669  000020                     	ds	1
  1670  000021                     ?_ctoa:
  1671                           	opt callstack 0
  1672  000021                     ?_dtoa:
  1673                           	opt callstack 0
  1674  000021                     dameDistancia@numeroSensor:
  1675                           	opt callstack 0
  1676  000021                     ctoa@fp:
  1677                           	opt callstack 0
  1678  000021                     dtoa@fp:
  1679                           	opt callstack 0
  1680                           
  1681                           ; 2 bytes @ 0x20
  1682  000021                     	ds	1
  1683  000022                     dameDistancia@distancia:
  1684                           	opt callstack 0
  1685                           
  1686                           ; 4 bytes @ 0x21
  1687  000022                     	ds	1
  1688  000023                     ??___flmul:
  1689  000023                     ctoa@c:
  1690                           	opt callstack 0
  1691  000023                     dtoa@d:
  1692                           	opt callstack 0
  1693                           
  1694                           ; 8 bytes @ 0x22
  1695  000023                     	ds	1
  1696  000024                     ctoa@w:
  1697                           	opt callstack 0
  1698  000024                     map@in_min:
  1699                           	opt callstack 0
  1700                           
  1701                           ; 4 bytes @ 0x23
  1702  000024                     	ds	2
  1703  000026                     dameDistancia@conteo:
  1704                           	opt callstack 0
  1705                           
  1706                           ; 2 bytes @ 0x25
  1707  000026                     	ds	1
  1708  000027                     ___flmul@sign:
  1709                           	opt callstack 0
  1710                           
  1711                           ; 1 bytes @ 0x26
  1712  000027                     	ds	1
  1713  000028                     ___flmul@aexp:
  1714                           	opt callstack 0
  1715  000028                     map@in_max:
  1716                           	opt callstack 0
  1717  000028                     _UART_init$1826:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 4 bytes @ 0x27
  1721  000028                     	ds	1
  1722  000029                     ___flmul@grs:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 4 bytes @ 0x28
  1726  000029                     	ds	2
  1727  00002B                     ??_dtoa:
  1728                           
  1729                           ; 1 bytes @ 0x2A
  1730  00002B                     	ds	1
  1731  00002C                     map@out_min:
  1732                           	opt callstack 0
  1733                           
  1734                           ; 4 bytes @ 0x2B
  1735  00002C                     	ds	1
  1736  00002D                     ___flmul@bexp:
  1737                           	opt callstack 0
  1738                           
  1739                           ; 1 bytes @ 0x2C
  1740  00002D                     	ds	1
  1741  00002E                     ___flmul@prod:
  1742                           	opt callstack 0
  1743                           
  1744                           ; 4 bytes @ 0x2D
  1745  00002E                     	ds	2
  1746  000030                     map@out_max:
  1747                           	opt callstack 0
  1748                           
  1749                           ; 4 bytes @ 0x2F
  1750  000030                     	ds	2
  1751  000032                     ___flmul@temp:
  1752                           	opt callstack 0
  1753                           
  1754                           ; 2 bytes @ 0x31
  1755  000032                     	ds	1
  1756  000033                     _dtoa$905:
  1757                           	opt callstack 0
  1758                           
  1759                           ; 2 bytes @ 0x32
  1760  000033                     	ds	1
  1761  000034                     ?___fladd:
  1762                           	opt callstack 0
  1763  000034                     ___flge@ff1:
  1764                           	opt callstack 0
  1765  000034                     ___fladd@b:
  1766                           	opt callstack 0
  1767                           
  1768                           ; 4 bytes @ 0x33
  1769  000034                     	ds	1
  1770  000035                     dtoa@p:
  1771                           	opt callstack 0
  1772                           
  1773                           ; 2 bytes @ 0x34
  1774  000035                     	ds	2
  1775  000037                     dtoa@w:
  1776                           	opt callstack 0
  1777                           
  1778                           ; 2 bytes @ 0x36
  1779  000037                     	ds	1
  1780  000038                     ___flge@ff2:
  1781                           	opt callstack 0
  1782  000038                     ___fladd@a:
  1783                           	opt callstack 0
  1784                           
  1785                           ; 4 bytes @ 0x37
  1786  000038                     	ds	1
  1787  000039                     dtoa@s:
  1788                           	opt callstack 0
  1789                           
  1790                           ; 2 bytes @ 0x38
  1791  000039                     	ds	2
  1792  00003B                     dtoa@n:
  1793                           	opt callstack 0
  1794                           
  1795                           ; 8 bytes @ 0x3A
  1796  00003B                     	ds	1
  1797  00003C                     ??___fladd:
  1798  00003C                     ??___flge:
  1799                           
  1800                           ; 1 bytes @ 0x3B
  1801  00003C                     	ds	4
  1802  000040                     ___fladd@signs:
  1803                           	opt callstack 0
  1804  000040                     hayCruce@caminosRecorrer:
  1805                           	opt callstack 0
  1806  000040                     decidirDireccion@caminosRecorrer:
  1807                           	opt callstack 0
  1808                           
  1809                           ; 2 bytes @ 0x3F
  1810  000040                     	ds	1
  1811  000041                     ___fladd@aexp:
  1812                           	opt callstack 0
  1813                           
  1814                           ; 1 bytes @ 0x40
  1815  000041                     	ds	1
  1816  000042                     hayCruce@investigandoCruce:
  1817                           	opt callstack 0
  1818  000042                     ___fladd@bexp:
  1819                           	opt callstack 0
  1820  000042                     decidirDireccion@investigandoCruce:
  1821                           	opt callstack 0
  1822                           
  1823                           ; 2 bytes @ 0x41
  1824  000042                     	ds	1
  1825  000043                     hayCruce@contCaminos:
  1826                           	opt callstack 0
  1827  000043                     ___fladd@grs:
  1828                           	opt callstack 0
  1829  000043                     dtoa@i:
  1830                           	opt callstack 0
  1831                           
  1832                           ; 2 bytes @ 0x42
  1833  000043                     	ds	1
  1834  000044                     ?___fldiv:
  1835                           	opt callstack 0
  1836  000044                     ?___flsub:
  1837                           	opt callstack 0
  1838  000044                     decidirDireccion@posicionInvCruce:
  1839                           	opt callstack 0
  1840  000044                     ___flsub@b:
  1841                           	opt callstack 0
  1842  000044                     ___fldiv@b:
  1843                           	opt callstack 0
  1844                           
  1845                           ; 4 bytes @ 0x43
  1846  000044                     	ds	2
  1847  000046                     decidirDireccion@contCaminosRecorridos:
  1848                           	opt callstack 0
  1849                           
  1850                           ; 2 bytes @ 0x45
  1851  000046                     	ds	2
  1852  000048                     decidirDireccion@caminoActual:
  1853                           	opt callstack 0
  1854  000048                     ___flsub@a:
  1855                           	opt callstack 0
  1856  000048                     ___fldiv@a:
  1857                           	opt callstack 0
  1858                           
  1859                           ; 4 bytes @ 0x47
  1860  000048                     	ds	2
  1861  00004A                     decidirDireccion@cambioOrientacionCarro:
  1862                           	opt callstack 0
  1863                           
  1864                           ; 2 bytes @ 0x49
  1865  00004A                     	ds	2
  1866  00004C                     ??_decidirDireccion:
  1867  00004C                     ??___fldiv:
  1868  00004C                     ?_roundf:
  1869                           	opt callstack 0
  1870  00004C                     roundf@x:
  1871                           	opt callstack 0
  1872                           
  1873                           ; 4 bytes @ 0x4B
  1874  00004C                     	ds	2
  1875  00004E                     decidirDireccion@direccionElegida:
  1876                           	opt callstack 0
  1877                           
  1878                           ; 1 bytes @ 0x4D
  1879  00004E                     	ds	2
  1880  000050                     ??_roundf:
  1881  000050                     ?_floorf:
  1882                           	opt callstack 0
  1883  000050                     floorf@x:
  1884                           	opt callstack 0
  1885                           
  1886                           ; 4 bytes @ 0x4F
  1887  000050                     	ds	4
  1888  000054                     moverCarrito@espejearCarroY:
  1889                           	opt callstack 0
  1890                           
  1891                           ; 1 bytes @ 0x53
  1892  000054                     	ds	1
  1893  000055                     
  1894                           ; 1 bytes @ 0x54
  1895 ;;
  1896 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1897 ;;
  1898 ;; *************** function _main *****************
  1899 ;; Defined at:
  1900 ;;		line 1312 in file "main.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  numMovimient    2    0        int 
  1905 ;;  iniciado        1    6[BANK1 ] unsigned char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1915 ;;      Params:         0       0       0       0       0       0       0       0       0
  1916 ;;      Locals:         0       0       3       0       0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1918 ;;      Totals:         0       0       3       0       0       0       0       0       0
  1919 ;;Total ram usage:        3 bytes
  1920 ;; Hardware stack levels required when called:   11
  1921 ;; This function calls:
  1922 ;;		_UART_init
  1923 ;;		_comportamientoBasico
  1924 ;;		_configPwm
  1925 ;;		_configurarAdc
  1926 ;;		_forzarParoAuto
  1927 ;;		_inicializarComportamientoBasico
  1928 ;;		_visualizarPasosRealizados
  1929 ;; This function is called by:
  1930 ;;		Startup code after reset
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text0
  1935  004A48                     __ptext0:
  1936                           	opt callstack 0
  1937  004A48                     _main:
  1938                           	opt callstack 20
  1939  004A48                     
  1940                           ;main.c: 1314:     T_BOOL iniciado = 0;
  1941  004A48  0E00               	movlw	0
  1942  004A4A  0101               	movlb	1	; () banked
  1943  004A4C  6FD4               	movwf	main@iniciado& (0+255),b
  1944  004A4E                     
  1945                           ; BSR set to: 1
  1946                           ;main.c: 1318:     INTCONbits.GIE = 1;
  1947  004A4E  8EF2               	bsf	242,7,c	;volatile
  1948  004A50                     
  1949                           ; BSR set to: 1
  1950                           ;main.c: 1319:     INTCONbits.INT0IE = 1;
  1951  004A50  88F2               	bsf	242,4,c	;volatile
  1952  004A52                     
  1953                           ; BSR set to: 1
  1954                           ;main.c: 1320:     INTCON2bits.INTEDG0 = 1;
  1955  004A52  8CF1               	bsf	241,6,c	;volatile
  1956  004A54                     
  1957                           ; BSR set to: 1
  1958                           ;main.c: 1322:     TRISD3 = 0;
  1959  004A54  9695               	bcf	3989,3,c	;volatile
  1960  004A56                     
  1961                           ; BSR set to: 1
  1962                           ;main.c: 1323:     TRISB1 = 1;
  1963  004A56  8293               	bsf	3987,1,c	;volatile
  1964  004A58                     
  1965                           ; BSR set to: 1
  1966                           ;main.c: 1324:     TRISB2 = 1;
  1967  004A58  8493               	bsf	3987,2,c	;volatile
  1968  004A5A                     
  1969                           ; BSR set to: 1
  1970                           ;main.c: 1325:     TRISB3 = 1;
  1971  004A5A  8693               	bsf	3987,3,c	;volatile
  1972  004A5C                     
  1973                           ; BSR set to: 1
  1974                           ;main.c: 1327:     TRISB4 = 0;
  1975  004A5C  9893               	bcf	3987,4,c	;volatile
  1976  004A5E                     
  1977                           ; BSR set to: 1
  1978                           ;main.c: 1328:     TRISB5 = 0;
  1979  004A5E  9A93               	bcf	3987,5,c	;volatile
  1980  004A60                     
  1981                           ; BSR set to: 1
  1982                           ;main.c: 1329:     TRISB6 = 0;
  1983  004A60  9C93               	bcf	3987,6,c	;volatile
  1984  004A62                     
  1985                           ; BSR set to: 1
  1986                           ;main.c: 1330:     TRISB7 = 0;
  1987  004A62  9E93               	bcf	3987,7,c	;volatile
  1988  004A64                     
  1989                           ; BSR set to: 1
  1990                           ;main.c: 1332:     TRISDbits.RD2 = 0;
  1991  004A64  9495               	bcf	149,2,c	;volatile
  1992  004A66                     
  1993                           ; BSR set to: 1
  1994                           ;main.c: 1333:     TRISB0 = 1;
  1995  004A66  8093               	bsf	3987,0,c	;volatile
  1996  004A68                     
  1997                           ; BSR set to: 1
  1998                           ;main.c: 1335:     LATD3 = 0;
  1999  004A68  968C               	bcf	3980,3,c	;volatile
  2000  004A6A                     
  2001                           ; BSR set to: 1
  2002                           ;main.c: 1336:     LATB4 = 0;
  2003  004A6A  988A               	bcf	3978,4,c	;volatile
  2004  004A6C                     
  2005                           ; BSR set to: 1
  2006                           ;main.c: 1337:     LATB5 = 0;
  2007  004A6C  9A8A               	bcf	3978,5,c	;volatile
  2008  004A6E                     
  2009                           ; BSR set to: 1
  2010                           ;main.c: 1338:     LATB6 = 0;
  2011  004A6E  9C8A               	bcf	3978,6,c	;volatile
  2012  004A70                     
  2013                           ; BSR set to: 1
  2014                           ;main.c: 1339:     LATB7 = 0;
  2015  004A70  9E8A               	bcf	3978,7,c	;volatile
  2016  004A72                     
  2017                           ; BSR set to: 1
  2018                           ;main.c: 1340:     LATD2 = 0;
  2019  004A72  948C               	bcf	3980,2,c	;volatile
  2020                           
  2021                           ;main.c: 1343:     T1CON = 0b00000000;
  2022  004A74  0E00               	movlw	0
  2023  004A76  6ECD               	movwf	205,c	;volatile
  2024  004A78                     
  2025                           ; BSR set to: 1
  2026                           ;main.c: 1345:     configPwm(1);
  2027  004A78  0E01               	movlw	1
  2028  004A7A  EC97  F028         	call	_configPwm
  2029  004A7E                     
  2030                           ;main.c: 1346:     configPwm(2);
  2031  004A7E  0E02               	movlw	2
  2032  004A80  EC97  F028         	call	_configPwm
  2033  004A84                     
  2034                           ;main.c: 1347:     configurarAdc();
  2035  004A84  EC14  F02B         	call	_configurarAdc	;wreg free
  2036  004A88                     
  2037                           ;main.c: 1349:     UART_init(9600);
  2038  004A88  0E80               	movlw	128
  2039  004A8A  6E20               	movwf	UART_init@BAUD^0,c
  2040  004A8C  0E25               	movlw	37
  2041  004A8E  6E21               	movwf	(UART_init@BAUD+1)^0,c
  2042  004A90  0E00               	movlw	0
  2043  004A92  6E22               	movwf	(UART_init@BAUD+2)^0,c
  2044  004A94  0E00               	movlw	0
  2045  004A96  6E23               	movwf	(UART_init@BAUD+3)^0,c
  2046  004A98  EC2B  F026         	call	_UART_init	;wreg free
  2047  004A9C                     l10731:
  2048                           
  2049                           ;main.c: 1354:         if (!pausa) {
  2050  004A9C  0101               	movlb	1	; () banked
  2051  004A9E  51D5               	movf	_pausa& (0+255),w,b
  2052  004AA0  A4D8               	btfss	status,2,c
  2053  004AA2  EF55  F025         	goto	u11901
  2054  004AA6  EF57  F025         	goto	u11900
  2055  004AAA                     u11901:
  2056  004AAA  EF69  F025         	goto	l10747
  2057  004AAE                     u11900:
  2058  004AAE                     
  2059                           ; BSR set to: 1
  2060                           ;main.c: 1356:             if (!iniciado) {
  2061  004AAE  51D4               	movf	main@iniciado& (0+255),w,b
  2062  004AB0  A4D8               	btfss	status,2,c
  2063  004AB2  EF5D  F025         	goto	u11911
  2064  004AB6  EF5F  F025         	goto	u11910
  2065  004ABA                     u11911:
  2066  004ABA  EF63  F025         	goto	l10743
  2067  004ABE                     u11910:
  2068  004ABE                     
  2069                           ; BSR set to: 1
  2070                           ;main.c: 1357:                 iniciado = 1;
  2071  004ABE  0E01               	movlw	1
  2072  004AC0  6FD4               	movwf	main@iniciado& (0+255),b
  2073  004AC2                     
  2074                           ; BSR set to: 1
  2075                           ;main.c: 1358:                 inicializarComportamientoBasico();
  2076  004AC2  ECE7  F028         	call	_inicializarComportamientoBasico	;wreg free
  2077  004AC6                     l10743:
  2078                           
  2079                           ;main.c: 1369:             comportamientoBasico();
  2080  004AC6  EC20  F00B         	call	_comportamientoBasico	;wreg free
  2081  004ACA                     
  2082                           ;main.c: 1370:             forzarParoAuto();
  2083  004ACA  ECF4  F02A         	call	_forzarParoAuto	;wreg free
  2084                           
  2085                           ;main.c: 1372:         } else {
  2086  004ACE  EF4E  F025         	goto	l10731
  2087  004AD2                     l10747:
  2088                           
  2089                           ; BSR set to: 1
  2090                           ;main.c: 1374:             iniciado = 0;
  2091  004AD2  0E00               	movlw	0
  2092  004AD4  6FD4               	movwf	main@iniciado& (0+255),b
  2093  004AD6  EF4E  F025         	goto	l10731
  2094  004ADA  EF07  F000         	goto	start
  2095  004ADE                     __end_of_main:
  2096                           	opt callstack 0
  2097                           
  2098 ;; *************** function _visualizarPasosRealizados *****************
  2099 ;; Defined at:
  2100 ;;		line 219 in file "main.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  numMovimient    2    0[BANK1 ] unsigned int 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2114 ;;      Params:         0       0       2       0       0       0       0       0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2116 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2117 ;;      Totals:         0       0       4       0       0       0       0       0       0
  2118 ;;Total ram usage:        4 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:   10
  2121 ;; This function calls:
  2122 ;;		_UART_printf
  2123 ;;		_sprintf
  2124 ;; This function is called by:
  2125 ;;		_main
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text1
  2130  0047AA                     __ptext1:
  2131                           	opt callstack 0
  2132  0047AA                     _visualizarPasosRealizados:
  2133                           	opt callstack 20
  2134  0047AA                     
  2135                           ;main.c: 221:     switch (mouse.curr_state) {
  2136  0047AA  EFF7  F023         	goto	l10351
  2137  0047AE                     l10341:
  2138                           
  2139                           ; BSR set to: 1
  2140                           ;main.c: 223:             UART_printf("Enfrente\n");
  2141  0047AE  0ED3               	movlw	low STR_7
  2142  0047B0  6E07               	movwf	UART_printf@cadena^0,c
  2143  0047B2  0E7F               	movlw	high STR_7
  2144  0047B4  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2145  0047B6  EC65  F027         	call	_UART_printf	;wreg free
  2146                           
  2147                           ;main.c: 224:             break;
  2148  0047BA  EF16  F024         	goto	l10353
  2149  0047BE                     l10343:
  2150                           
  2151                           ; BSR set to: 1
  2152                           ;main.c: 227:             UART_printf("Izquierda\n");
  2153  0047BE  0EC8               	movlw	low STR_8
  2154  0047C0  6E07               	movwf	UART_printf@cadena^0,c
  2155  0047C2  0E7F               	movlw	high STR_8
  2156  0047C4  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2157  0047C6  EC65  F027         	call	_UART_printf	;wreg free
  2158                           
  2159                           ;main.c: 228:             break;
  2160  0047CA  EF16  F024         	goto	l10353
  2161  0047CE                     l10345:
  2162                           
  2163                           ; BSR set to: 1
  2164                           ;main.c: 231:             UART_printf("Derecha\n");
  2165  0047CE  0EDD               	movlw	low STR_9
  2166  0047D0  6E07               	movwf	UART_printf@cadena^0,c
  2167  0047D2  0E7F               	movlw	high STR_9
  2168  0047D4  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2169  0047D6  EC65  F027         	call	_UART_printf	;wreg free
  2170                           
  2171                           ;main.c: 232:             break;
  2172  0047DA  EF16  F024         	goto	l10353
  2173  0047DE                     l10347:
  2174                           
  2175                           ; BSR set to: 1
  2176                           ;main.c: 235:             UART_printf("Alto\n");
  2177  0047DE  0EE6               	movlw	low STR_10
  2178  0047E0  6E07               	movwf	UART_printf@cadena^0,c
  2179  0047E2  0E7F               	movlw	high STR_10
  2180  0047E4  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2181  0047E6  EC65  F027         	call	_UART_printf	;wreg free
  2182                           
  2183                           ;main.c: 236:             break;
  2184  0047EA  EF16  F024         	goto	l10353
  2185  0047EE                     l10351:
  2186  0047EE  0100               	movlb	0	; () banked
  2187  0047F0  51FC               	movf	_mouse& (0+255),w,b
  2188  0047F2  0101               	movlb	1	; () banked
  2189  0047F4  6FD0               	movwf	??_visualizarPasosRealizados& (0+255),b
  2190  0047F6  6BD1               	clrf	(??_visualizarPasosRealizados+1)& (0+255),b
  2191                           
  2192                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2193                           ; Switch size 1, requested type "simple"
  2194                           ; Number of cases is 1, Range of values is 0 to 0
  2195                           ; switch strategies available:
  2196                           ; Name         Instructions Cycles
  2197                           ; simple_byte            4     3 (average)
  2198                           ;	Chosen strategy is simple_byte
  2199  0047F8  51D1               	movf	(??_visualizarPasosRealizados+1)& (0+255),w,b
  2200  0047FA  0A00               	xorlw	0	; case 0
  2201  0047FC  B4D8               	btfsc	status,2,c
  2202  0047FE  EF03  F024         	goto	l11119
  2203  004802  EF16  F024         	goto	l10353
  2204  004806                     l11119:
  2205                           
  2206                           ; BSR set to: 1
  2207                           ; Switch size 1, requested type "simple"
  2208                           ; Number of cases is 4, Range of values is 1 to 4
  2209                           ; switch strategies available:
  2210                           ; Name         Instructions Cycles
  2211                           ; simple_byte           13     7 (average)
  2212                           ;	Chosen strategy is simple_byte
  2213  004806  51D0               	movf	??_visualizarPasosRealizados& (0+255),w,b
  2214  004808  0A01               	xorlw	1	; case 1
  2215  00480A  B4D8               	btfsc	status,2,c
  2216  00480C  EFD7  F023         	goto	l10341
  2217  004810  0A03               	xorlw	3	; case 2
  2218  004812  B4D8               	btfsc	status,2,c
  2219  004814  EFDF  F023         	goto	l10343
  2220  004818  0A01               	xorlw	1	; case 3
  2221  00481A  B4D8               	btfsc	status,2,c
  2222  00481C  EFE7  F023         	goto	l10345
  2223  004820  0A07               	xorlw	7	; case 4
  2224  004822  B4D8               	btfsc	status,2,c
  2225  004824  EFEF  F023         	goto	l10347
  2226  004828  EF16  F024         	goto	l10353
  2227  00482C                     l10353:
  2228                           
  2229                           ;main.c: 239:     sprintf(buffer, "\rMovimientos Realizados = %d\r\n\n", numMovimientos)
      +                          ;
  2230  00482C  0E90               	movlw	low _buffer
  2231  00482E  0100               	movlb	0	; () banked
  2232  004830  6FE7               	movwf	sprintf@s& (0+255),b
  2233  004832  0E01               	movlw	high _buffer
  2234  004834  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  2235  004836  0E2A               	movlw	low STR_11
  2236  004838  6FE9               	movwf	sprintf@fmt& (0+255),b
  2237  00483A  0E7F               	movlw	high STR_11
  2238  00483C  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  2239  00483E  C1CE  F0EB         	movff	visualizarPasosRealizados@numMovimientos,?_sprintf+4
  2240  004842  C1CF  F0EC         	movff	visualizarPasosRealizados@numMovimientos+1,?_sprintf+5
  2241  004846  EC45  F028         	call	_sprintf	;wreg free
  2242  00484A                     
  2243                           ;main.c: 240:     UART_printf(buffer);
  2244  00484A  0E90               	movlw	low _buffer
  2245  00484C  6E07               	movwf	UART_printf@cadena^0,c
  2246  00484E  0E01               	movlw	high _buffer
  2247  004850  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2248  004852  EC65  F027         	call	_UART_printf	;wreg free
  2249  004856  0012               	return		;funcret
  2250  004858                     __end_of_visualizarPasosRealizados:
  2251                           	opt callstack 0
  2252                           
  2253 ;; *************** function _inicializarComportamientoBasico *****************
  2254 ;; Defined at:
  2255 ;;		line 258 in file "main.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2269 ;;      Params:         0       0       0       0       0       0       0       0       0
  2270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2272 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2273 ;;Total ram usage:        0 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    6
  2276 ;; This function calls:
  2277 ;;		_dameDistancia
  2278 ;;		_velocidadEstandar
  2279 ;; This function is called by:
  2280 ;;		_main
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text2
  2285  0051CE                     __ptext2:
  2286                           	opt callstack 0
  2287  0051CE                     _inicializarComportamientoBasico:
  2288                           	opt callstack 24
  2289  0051CE                     
  2290                           ;main.c: 260:     mouse.curr_state = ENFRENTE;
  2291  0051CE  0E01               	movlw	1
  2292  0051D0  0100               	movlb	0	; () banked
  2293  0051D2  6FFC               	movwf	_mouse& (0+255),b
  2294  0051D4                     
  2295                           ; BSR set to: 0
  2296                           ;main.c: 262:     oldSensorDerecha = dameDistancia(DERECHA);
  2297  0051D4  0E03               	movlw	3
  2298  0051D6  EC67  F01E         	call	_dameDistancia
  2299  0051DA  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
  2300  0051DE  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  2301  0051E2  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  2302  0051E6  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  2303  0051EA                     
  2304                           ;main.c: 263:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  2305  0051EA  0E02               	movlw	2
  2306  0051EC  EC67  F01E         	call	_dameDistancia
  2307  0051F0  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  2308  0051F4  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  2309  0051F8  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  2310  0051FC  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  2311  005200                     
  2312                           ;main.c: 264:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  2313  005200  0E01               	movlw	1
  2314  005202  EC67  F01E         	call	_dameDistancia
  2315  005206  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  2316  00520A  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  2317  00520E  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  2318  005212  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  2319  005216                     
  2320                           ;main.c: 266:     velocidadEstandar();
  2321  005216  EC85  F02A         	call	_velocidadEstandar	;wreg free
  2322  00521A  0012               	return		;funcret
  2323  00521C                     __end_of_inicializarComportamientoBasico:
  2324                           	opt callstack 0
  2325                           
  2326 ;; *************** function _configurarAdc *****************
  2327 ;; Defined at:
  2328 ;;		line 7 in file "./adc.h"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2342 ;;      Params:         0       0       0       0       0       0       0       0       0
  2343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2345 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2346 ;;Total ram usage:        0 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    2
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text3
  2357  005628                     __ptext3:
  2358                           	opt callstack 0
  2359  005628                     _configurarAdc:
  2360                           	opt callstack 28
  2361  005628                     
  2362                           ;./adc.h: 8:     ADCON1 = 0b00001110;
  2363  005628  0E0E               	movlw	14
  2364  00562A  6EC1               	movwf	193,c	;volatile
  2365                           
  2366                           ;./adc.h: 9:     ADCON2 = 0b10100101;
  2367  00562C  0EA5               	movlw	165
  2368  00562E  6EC0               	movwf	192,c	;volatile
  2369  005630  0012               	return		;funcret
  2370  005632                     __end_of_configurarAdc:
  2371                           	opt callstack 0
  2372                           
  2373 ;; *************** function _configPwm *****************
  2374 ;; Defined at:
  2375 ;;		line 47 in file "./pwm.h"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  channel         1    wreg     unsigned char 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  channel         1    7[COMRAM] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0
  2390 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2391 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2392 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2393 ;;Total ram usage:        3 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    2
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text4
  2404  00512E                     __ptext4:
  2405                           	opt callstack 0
  2406  00512E                     _configPwm:
  2407                           	opt callstack 28
  2408                           
  2409                           ;incstack = 0
  2410                           ;configPwm@channel stored from wreg
  2411  00512E  6E08               	movwf	configPwm@channel^0,c
  2412  005130                     
  2413                           ;./pwm.h: 56:         T2CKPS0 = 1;
  2414  005130  80CA               	bsf	4042,0,c	;volatile
  2415                           
  2416                           ;./pwm.h: 57:         T2CKPS1 = 1;
  2417  005132  82CA               	bsf	4042,1,c	;volatile
  2418  005134                     
  2419                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
  2420  005134  0E7C               	movlw	124
  2421  005136  6ECB               	movwf	203,c	;volatile
  2422                           
  2423                           ;./pwm.h: 63:     switch (channel) {
  2424  005138  EFA8  F028         	goto	l10307
  2425  00513C                     l165:
  2426                           
  2427                           ;./pwm.h: 66:             TRISC2 = 0;
  2428  00513C  9494               	bcf	3988,2,c	;volatile
  2429                           
  2430                           ;./pwm.h: 67:             CCP1M3 = 1;
  2431  00513E  86BD               	bsf	4029,3,c	;volatile
  2432                           
  2433                           ;./pwm.h: 68:             CCP1M2 = 1;
  2434  005140  84BD               	bsf	4029,2,c	;volatile
  2435                           
  2436                           ;./pwm.h: 71:             break;
  2437  005142  EFBD  F028         	goto	l166
  2438  005146                     l167:
  2439                           
  2440                           ;./pwm.h: 74:             TRISC1 = 0;
  2441  005146  9294               	bcf	3988,1,c	;volatile
  2442                           
  2443                           ;./pwm.h: 75:             CCP2M3 = 1;
  2444  005148  86BA               	bsf	4026,3,c	;volatile
  2445                           
  2446                           ;./pwm.h: 76:             CCP2M2 = 1;
  2447  00514A  84BA               	bsf	4026,2,c	;volatile
  2448                           
  2449                           ;./pwm.h: 77:             break;
  2450  00514C  EFBD  F028         	goto	l166
  2451  005150                     l10307:
  2452  005150  5008               	movf	configPwm@channel^0,w,c
  2453  005152  6E06               	movwf	??_configPwm^0,c
  2454  005154  6A07               	clrf	(??_configPwm+1)^0,c
  2455                           
  2456                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2457                           ; Switch size 1, requested type "simple"
  2458                           ; Number of cases is 1, Range of values is 0 to 0
  2459                           ; switch strategies available:
  2460                           ; Name         Instructions Cycles
  2461                           ; simple_byte            4     3 (average)
  2462                           ;	Chosen strategy is simple_byte
  2463  005156  5007               	movf	(??_configPwm+1)^0,w,c
  2464  005158  0A00               	xorlw	0	; case 0
  2465  00515A  B4D8               	btfsc	status,2,c
  2466  00515C  EFB2  F028         	goto	l11121
  2467  005160  EFBD  F028         	goto	l166
  2468  005164                     l11121:
  2469                           
  2470                           ; Switch size 1, requested type "simple"
  2471                           ; Number of cases is 2, Range of values is 1 to 2
  2472                           ; switch strategies available:
  2473                           ; Name         Instructions Cycles
  2474                           ; simple_byte            7     4 (average)
  2475                           ;	Chosen strategy is simple_byte
  2476  005164  5006               	movf	??_configPwm^0,w,c
  2477  005166  0A01               	xorlw	1	; case 1
  2478  005168  B4D8               	btfsc	status,2,c
  2479  00516A  EF9E  F028         	goto	l165
  2480  00516E  0A03               	xorlw	3	; case 2
  2481  005170  B4D8               	btfsc	status,2,c
  2482  005172  EFA3  F028         	goto	l167
  2483  005176  EFBD  F028         	goto	l166
  2484  00517A                     l166:
  2485                           
  2486                           ;./pwm.h: 81:     TMR2ON = 1;
  2487  00517A  84CA               	bsf	4042,2,c	;volatile
  2488  00517C  0012               	return		;funcret
  2489  00517E                     __end_of_configPwm:
  2490                           	opt callstack 0
  2491                           
  2492 ;; *************** function _comportamientoBasico *****************
  2493 ;; Defined at:
  2494 ;;		line 278 in file "main.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  direccionEle    1  155[BANK0 ] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2508 ;;      Params:         0       0       0       0       0       0       0       0       0
  2509 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2510 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2511 ;;      Totals:         0       1       2       0       0       0       0       0       0
  2512 ;;Total ram usage:        3 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:   10
  2515 ;; This function calls:
  2516 ;;		_PID
  2517 ;;		_UART_printf
  2518 ;;		_caminoCorrecto
  2519 ;;		_decidirDireccion
  2520 ;;		_finalizarRecorrido
  2521 ;;		_forzarEspejeo
  2522 ;;		_forzarParoAuto
  2523 ;;		_hayCruce
  2524 ;;		_leerSensores
  2525 ;;		_limpiarMovimientos
  2526 ;;		_moverCarrito
  2527 ;;		_recorrerCaminoEncontrado
  2528 ;;		_regresarAlCruce
  2529 ;;		_regresarPuntoPartida
  2530 ;;		_sprintf
  2531 ;;		_velocidadBaja
  2532 ;;		_velocidadEstandar
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text5
  2539  001640                     __ptext5:
  2540                           	opt callstack 0
  2541  001640                     _comportamientoBasico:
  2542                           	opt callstack 20
  2543  001640                     
  2544                           ;main.c: 297:     if (!caminoEncontrado) {
  2545  001640  0101               	movlb	1	; () banked
  2546  001642  5136               	movf	comportamientoBasico@caminoEncontrado& (0+255),w,b
  2547  001644  A4D8               	btfss	status,2,c
  2548  001646  EF27  F00B         	goto	u11571
  2549  00164A  EF29  F00B         	goto	u11570
  2550  00164E                     u11571:
  2551  00164E  EF3A  F00D         	goto	l10519
  2552  001652                     u11570:
  2553  001652                     
  2554                           ; BSR set to: 1
  2555                           ;main.c: 299:         moverCarrito(espejearCarroY, &carroEspejeado);
  2556  001652  0EFF               	movlw	low comportamientoBasico@carroEspejeado
  2557  001654  0100               	movlb	0	; () banked
  2558  001656  6F88               	movwf	moverCarrito@carroEspejeado& (0+255),b
  2559  001658  0E00               	movlw	high comportamientoBasico@carroEspejeado
  2560  00165A  6F89               	movwf	(moverCarrito@carroEspejeado+1)& (0+255),b
  2561  00165C  0101               	movlb	1	; () banked
  2562  00165E  5139               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  2563  001660  ECF3  F021         	call	_moverCarrito
  2564  001664                     
  2565                           ;main.c: 302:         if (!llegoDestino) {
  2566  001664  0100               	movlb	0	; () banked
  2567  001666  51FE               	movf	_llegoDestino& (0+255),w,b
  2568  001668  A4D8               	btfss	status,2,c
  2569  00166A  EF39  F00B         	goto	u11581
  2570  00166E  EF3B  F00B         	goto	u11580
  2571  001672                     u11581:
  2572  001672  EF8F  F00B         	goto	l10407
  2573  001676                     u11580:
  2574  001676                     
  2575                           ; BSR set to: 0
  2576                           ;main.c: 304:             if (mapear)
  2577  001676  0101               	movlb	1	; () banked
  2578  001678  5138               	movf	comportamientoBasico@mapear& (0+255),w,b
  2579  00167A  B4D8               	btfsc	status,2,c
  2580  00167C  EF42  F00B         	goto	u11591
  2581  001680  EF44  F00B         	goto	u11590
  2582  001684                     u11591:
  2583  001684  EF68  F00B         	goto	l10393
  2584  001688                     u11590:
  2585  001688                     
  2586                           ; BSR set to: 1
  2587                           ;main.c: 305:             {;main.c: 306:                 if (numMovimientos < 200)
  2588  001688  51C8               	movf	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2589  00168A  E107               	bnz	u11601
  2590  00168C  0EC8               	movlw	200
  2591  00168E  5DC7               	subwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2592  001690  B0D8               	btfsc	status,0,c
  2593  001692  EF4D  F00B         	goto	u11601
  2594  001696  EF4F  F00B         	goto	u11600
  2595  00169A                     u11601:
  2596  00169A  EF5B  F00B         	goto	l10387
  2597  00169E                     u11600:
  2598  00169E                     
  2599                           ; BSR set to: 1
  2600                           ;main.c: 307:                     movimientosRealizados[numMovimientos++] = mouse.curr_s
      +                          tate;
  2601  00169E  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  2602  0016A0  25C7               	addwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2603  0016A2  6ED9               	movwf	fsr2l,c
  2604  0016A4  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  2605  0016A6  21C8               	addwfc	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2606  0016A8  6EDA               	movwf	fsr2h,c
  2607  0016AA  C0FC  FFDF         	movff	_mouse,indf2
  2608  0016AE                     
  2609                           ; BSR set to: 1
  2610  0016AE  4BC7               	infsnz	comportamientoBasico@numMovimientos& (0+255),f,b
  2611  0016B0  2BC8               	incf	(comportamientoBasico@numMovimientos+1)& (0+255),f,b
  2612  0016B2  EF8F  F00B         	goto	l10407
  2613  0016B6                     l10387:
  2614                           
  2615                           ; BSR set to: 1
  2616                           ;main.c: 309:                     UART_printf("\n\nOVERFLOW en el mapeo de pasos Realiza
      +                          dos para cruce\n\n");
  2617  0016B6  0EAE               	movlw	low STR_12
  2618  0016B8  6E07               	movwf	UART_printf@cadena^0,c
  2619  0016BA  0E7E               	movlw	high STR_12
  2620  0016BC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2621  0016BE  EC65  F027         	call	_UART_printf	;wreg free
  2622  0016C2                     l10389:
  2623                           
  2624                           ;main.c: 310:                     forzarParoAuto();
  2625  0016C2  ECF4  F02A         	call	_forzarParoAuto	;wreg free
  2626  0016C6                     
  2627                           ;main.c: 311:                     pausa = 1;
  2628  0016C6  0E01               	movlw	1
  2629  0016C8  0101               	movlb	1	; () banked
  2630  0016CA  6FD5               	movwf	_pausa& (0+255),b
  2631  0016CC  EF8F  F00B         	goto	l10407
  2632  0016D0                     l10393:
  2633                           
  2634                           ; BSR set to: 1
  2635                           ;main.c: 332:                 if (!investigandoCruce) {
  2636  0016D0  51CD               	movf	comportamientoBasico@investigandoCruce& (0+255),w,b
  2637  0016D2  A4D8               	btfss	status,2,c
  2638  0016D4  EF6E  F00B         	goto	u11611
  2639  0016D8  EF70  F00B         	goto	u11610
  2640  0016DC                     u11611:
  2641  0016DC  EF8F  F00B         	goto	l10407
  2642  0016E0                     u11610:
  2643  0016E0                     
  2644                           ; BSR set to: 1
  2645                           ;main.c: 333:                     if (numMovimientosTotales < 1000)
  2646  0016E0  0EE8               	movlw	232
  2647  0016E2  5DC5               	subwf	comportamientoBasico@numMovimientosTotales& (0+255),w,b
  2648  0016E4  0E03               	movlw	3
  2649  0016E6  59C6               	subwfb	(comportamientoBasico@numMovimientosTotales+1)& (0+255),w,b
  2650  0016E8  B0D8               	btfsc	status,0,c
  2651  0016EA  EF79  F00B         	goto	u11621
  2652  0016EE  EF7B  F00B         	goto	u11620
  2653  0016F2                     u11621:
  2654  0016F2  EF87  F00B         	goto	l10401
  2655  0016F6                     u11620:
  2656  0016F6                     
  2657                           ; BSR set to: 1
  2658                           ;main.c: 334:                         caminoFinal[numMovimientosTotales++] = mouse.curr_
      +                          state;
  2659  0016F6  0EC8               	movlw	low comportamientoBasico@caminoFinal
  2660  0016F8  25C5               	addwf	comportamientoBasico@numMovimientosTotales& (0+255),w,b
  2661  0016FA  6ED9               	movwf	fsr2l,c
  2662  0016FC  0E02               	movlw	high comportamientoBasico@caminoFinal
  2663  0016FE  21C6               	addwfc	(comportamientoBasico@numMovimientosTotales+1)& (0+255),w,b
  2664  001700  6EDA               	movwf	fsr2h,c
  2665  001702  C0FC  FFDF         	movff	_mouse,indf2
  2666  001706                     
  2667                           ; BSR set to: 1
  2668  001706  4BC5               	infsnz	comportamientoBasico@numMovimientosTotales& (0+255),f,b
  2669  001708  2BC6               	incf	(comportamientoBasico@numMovimientosTotales+1)& (0+255),f,b
  2670  00170A  EF8F  F00B         	goto	l10407
  2671  00170E                     l10401:
  2672                           
  2673                           ; BSR set to: 1
  2674                           ;main.c: 336:                         UART_printf("\n\nOVERFLOW en el mapeo de pasos Rea
      +                          lizados para camino Total\n\n");
  2675  00170E  0E6F               	movlw	low STR_13
  2676  001710  6E07               	movwf	UART_printf@cadena^0,c
  2677  001712  0E7E               	movlw	high STR_13
  2678  001714  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2679  001716  EC65  F027         	call	_UART_printf	;wreg free
  2680  00171A  EF61  F00B         	goto	l10389
  2681  00171E                     l10407:
  2682                           
  2683                           ;main.c: 345:         leerSensores();
  2684  00171E  ECF7  F01C         	call	_leerSensores	;wreg free
  2685  001722                     
  2686                           ;main.c: 348:         direccionElegida = decidirDireccion(caminosRecorrer, &investigando
      +                          Cruce,
  2687  001722  0EC2               	movlw	low comportamientoBasico@caminosRecorrer
  2688  001724  6E40               	movwf	decidirDireccion@caminosRecorrer^0,c
  2689  001726  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  2690  001728  6E41               	movwf	(decidirDireccion@caminosRecorrer+1)^0,c
  2691  00172A  0ECD               	movlw	low comportamientoBasico@investigandoCruce
  2692  00172C  6E42               	movwf	decidirDireccion@investigandoCruce^0,c
  2693  00172E  0E01               	movlw	high comportamientoBasico@investigandoCruce
  2694  001730  6E43               	movwf	(decidirDireccion@investigandoCruce+1)^0,c
  2695  001732  0ECC               	movlw	low comportamientoBasico@posicionInvCruce
  2696  001734  6E44               	movwf	decidirDireccion@posicionInvCruce^0,c
  2697  001736  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  2698  001738  6E45               	movwf	(decidirDireccion@posicionInvCruce+1)^0,c
  2699  00173A  0ECB               	movlw	low comportamientoBasico@contCaminosRecorridos
  2700  00173C  6E46               	movwf	decidirDireccion@contCaminosRecorridos^0,c
  2701  00173E  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  2702  001740  6E47               	movwf	(decidirDireccion@contCaminosRecorridos+1)^0,c
  2703  001742  0ECA               	movlw	low comportamientoBasico@caminoActual
  2704  001744  6E48               	movwf	decidirDireccion@caminoActual^0,c
  2705  001746  0E01               	movlw	high comportamientoBasico@caminoActual
  2706  001748  6E49               	movwf	(decidirDireccion@caminoActual+1)^0,c
  2707  00174A  0EC9               	movlw	low comportamientoBasico@cambioOrientacionCarro
  2708  00174C  6E4A               	movwf	decidirDireccion@cambioOrientacionCarro^0,c
  2709  00174E  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  2710  001750  6E4B               	movwf	(decidirDireccion@cambioOrientacionCarro+1)^0,c
  2711  001752  EC62  F00D         	call	_decidirDireccion	;wreg free
  2712  001756  0100               	movlb	0	; () banked
  2713  001758  6FFB               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  2714                           
  2715                           ;main.c: 352:         switch (mouse.curr_state) {
  2716  00175A  EF18  F00D         	goto	l10517
  2717  00175E                     l10411:
  2718                           
  2719                           ; BSR set to: 1
  2720                           ;main.c: 359:                         mapear = 0;
  2721  00175E  0E00               	movlw	0
  2722  001760  6F38               	movwf	comportamientoBasico@mapear& (0+255),b
  2723                           
  2724                           ;main.c: 360:                         espejearCarroY = 1;
  2725  001762  0E01               	movlw	1
  2726  001764  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  2727                           
  2728                           ;main.c: 361:                         mouse.Next_state = IZQUIERDA;
  2729  001766  0E02               	movlw	2
  2730  001768  0100               	movlb	0	; () banked
  2731  00176A  6FFD               	movwf	(_mouse+1)& (0+255),b
  2732                           
  2733                           ;main.c: 362:                         break;
  2734  00176C  EF36  F00D         	goto	l391
  2735  001770                     l10413:
  2736                           
  2737                           ; BSR set to: 1
  2738                           ;main.c: 365:                         if (hayCruce(caminosRecorrer, investigandoCruce)) 
      +                          {
  2739  001770  0EC2               	movlw	low comportamientoBasico@caminosRecorrer
  2740  001772  6E40               	movwf	hayCruce@caminosRecorrer^0,c
  2741  001774  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  2742  001776  6E41               	movwf	(hayCruce@caminosRecorrer+1)^0,c
  2743  001778  C1CD  F042         	movff	comportamientoBasico@investigandoCruce,hayCruce@investigandoCruce
  2744  00177C  EC6C  F01B         	call	_hayCruce	;wreg free
  2745  001780  0900               	iorlw	0
  2746  001782  B4D8               	btfsc	status,2,c
  2747  001784  EFC6  F00B         	goto	u11631
  2748  001788  EFC8  F00B         	goto	u11630
  2749  00178C                     u11631:
  2750  00178C  EFFF  F00B         	goto	l10427
  2751  001790                     u11630:
  2752  001790                     
  2753                           ;main.c: 367:                             velocidadBaja();
  2754  001790  EC5F  F02A         	call	_velocidadBaja	;wreg free
  2755  001794                     
  2756                           ;main.c: 369:                             if (!cruceDetectado) {
  2757  001794  0101               	movlb	1	; () banked
  2758  001796  5137               	movf	comportamientoBasico@cruceDetectado& (0+255),w,b
  2759  001798  A4D8               	btfss	status,2,c
  2760  00179A  EFD1  F00B         	goto	u11641
  2761  00179E  EFD3  F00B         	goto	u11640
  2762  0017A2                     u11641:
  2763  0017A2  EF0D  F00C         	goto	l10433
  2764  0017A6                     u11640:
  2765  0017A6                     
  2766                           ; BSR set to: 1
  2767                           ;main.c: 371:                                 if (!investigandoCruce)
  2768  0017A6  51CD               	movf	comportamientoBasico@investigandoCruce& (0+255),w,b
  2769  0017A8  A4D8               	btfss	status,2,c
  2770  0017AA  EFD9  F00B         	goto	u11651
  2771  0017AE  EFDB  F00B         	goto	u11650
  2772  0017B2                     u11651:
  2773  0017B2  EFDD  F00B         	goto	l384
  2774  0017B6                     u11650:
  2775  0017B6                     
  2776                           ; BSR set to: 1
  2777                           ;main.c: 372:                                     posicionInvCruce = 1;
  2778  0017B6  0E01               	movlw	1
  2779  0017B8  6FCC               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  2780  0017BA                     l384:
  2781                           
  2782                           ; BSR set to: 1
  2783                           ;main.c: 374:                                 mapear = 1;
  2784  0017BA  0E01               	movlw	1
  2785  0017BC  6F38               	movwf	comportamientoBasico@mapear& (0+255),b
  2786                           
  2787                           ;main.c: 375:                                 cruceDetectado = 1;
  2788  0017BE  0E01               	movlw	1
  2789  0017C0  6F37               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  2790                           
  2791                           ;main.c: 376:                                 investigandoCruce = 1;
  2792  0017C2  0E01               	movlw	1
  2793  0017C4  6FCD               	movwf	comportamientoBasico@investigandoCruce& (0+255),b
  2794  0017C6                     
  2795                           ; BSR set to: 1
  2796                           ;main.c: 377:                                 sprintf(buffer, "Investigando Cruce: %c | 
      +                          %c | %c\n",
  2797  0017C6  0E90               	movlw	low _buffer
  2798  0017C8  0100               	movlb	0	; () banked
  2799  0017CA  6FE7               	movwf	sprintf@s& (0+255),b
  2800  0017CC  0E01               	movlw	high _buffer
  2801  0017CE  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  2802  0017D0  0E08               	movlw	low STR_14
  2803  0017D2  6FE9               	movwf	sprintf@fmt& (0+255),b
  2804  0017D4  0E7F               	movlw	high STR_14
  2805  0017D6  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  2806  0017D8  C1C2  F0EB         	movff	comportamientoBasico@caminosRecorrer,?_sprintf+4
  2807  0017DC  6BEC               	clrf	(?_sprintf+5)& (0+255),b
  2808  0017DE  C1C3  F0ED         	movff	comportamientoBasico@caminosRecorrer+1,?_sprintf+6
  2809  0017E2  6BEE               	clrf	(?_sprintf+7)& (0+255),b
  2810  0017E4  C1C4  F0EF         	movff	comportamientoBasico@caminosRecorrer+2,?_sprintf+8
  2811  0017E8  6BF0               	clrf	(?_sprintf+9)& (0+255),b
  2812  0017EA  EC45  F028         	call	_sprintf	;wreg free
  2813  0017EE                     
  2814                           ;main.c: 379:                                 UART_printf(buffer);
  2815  0017EE  0E90               	movlw	low _buffer
  2816  0017F0  6E07               	movwf	UART_printf@cadena^0,c
  2817  0017F2  0E01               	movlw	high _buffer
  2818  0017F4  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2819  0017F6  EC65  F027         	call	_UART_printf	;wreg free
  2820  0017FA  EF0D  F00C         	goto	l10433
  2821  0017FE                     l10427:
  2822  0017FE  5059               	movf	_paredEnfrente^0,w,c
  2823  001800  A4D8               	btfss	status,2,c
  2824  001802  EF05  F00C         	goto	u11661
  2825  001806  EF07  F00C         	goto	u11660
  2826  00180A                     u11661:
  2827  00180A  EF0B  F00C         	goto	l10431
  2828  00180E                     u11660:
  2829  00180E                     
  2830                           ;main.c: 383:                             velocidadBaja();
  2831  00180E  EC5F  F02A         	call	_velocidadBaja	;wreg free
  2832  001812  EF0D  F00C         	goto	l10433
  2833  001816                     l10431:
  2834                           
  2835                           ;main.c: 385:                             PID();
  2836  001816  ECB8  F016         	call	_PID	;wreg free
  2837  00181A                     l10433:
  2838                           
  2839                           ;main.c: 387:                         mouse.Next_state = ENFRENTE;
  2840  00181A  0E01               	movlw	1
  2841  00181C  0100               	movlb	0	; () banked
  2842  00181E  6FFD               	movwf	(_mouse+1)& (0+255),b
  2843                           
  2844                           ;main.c: 388:                         break;
  2845  001820  EF36  F00D         	goto	l391
  2846  001824                     l10435:
  2847                           
  2848                           ; BSR set to: 1
  2849                           ;main.c: 391:                         velocidadEstandar();
  2850  001824  EC85  F02A         	call	_velocidadEstandar	;wreg free
  2851  001828                     l10437:
  2852                           
  2853                           ;main.c: 392:                         mouse.Next_state = IZQUIERDA;
  2854  001828  0E02               	movlw	2
  2855  00182A  0100               	movlb	0	; () banked
  2856  00182C  6FFD               	movwf	(_mouse+1)& (0+255),b
  2857                           
  2858                           ;main.c: 393:                         break;
  2859  00182E  EF36  F00D         	goto	l391
  2860  001832                     l10439:
  2861                           
  2862                           ; BSR set to: 1
  2863                           ;main.c: 396:                         velocidadEstandar();
  2864  001832  EC85  F02A         	call	_velocidadEstandar	;wreg free
  2865  001836                     
  2866                           ;main.c: 397:                         mouse.Next_state = DERECHA;
  2867  001836  0E03               	movlw	3
  2868  001838  0100               	movlb	0	; () banked
  2869  00183A  6FFD               	movwf	(_mouse+1)& (0+255),b
  2870                           
  2871                           ;main.c: 398:                         break;
  2872  00183C  EF36  F00D         	goto	l391
  2873  001840                     l10443:
  2874                           
  2875                           ; BSR set to: 1
  2876                           ;main.c: 402:                         mouse.Next_state = ALTO;
  2877  001840  0E04               	movlw	4
  2878  001842  0100               	movlb	0	; () banked
  2879  001844  6FFD               	movwf	(_mouse+1)& (0+255),b
  2880                           
  2881                           ;main.c: 403:                         break;
  2882  001846  EF36  F00D         	goto	l391
  2883  00184A                     l10447:
  2884                           
  2885                           ; BSR set to: 1
  2886  00184A  0100               	movlb	0	; () banked
  2887  00184C  51FB               	movf	comportamientoBasico@direccionElegida& (0+255),w,b
  2888  00184E  0101               	movlb	1	; () banked
  2889  001850  6FCE               	movwf	??_comportamientoBasico& (0+255),b
  2890  001852  6BCF               	clrf	(??_comportamientoBasico+1)& (0+255),b
  2891                           
  2892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2893                           ; Switch size 1, requested type "simple"
  2894                           ; Number of cases is 1, Range of values is 0 to 0
  2895                           ; switch strategies available:
  2896                           ; Name         Instructions Cycles
  2897                           ; simple_byte            4     3 (average)
  2898                           ;	Chosen strategy is simple_byte
  2899  001854  51CF               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  2900  001856  0A00               	xorlw	0	; case 0
  2901  001858  B4D8               	btfsc	status,2,c
  2902  00185A  EF31  F00C         	goto	l11123
  2903  00185E  EF36  F00D         	goto	l391
  2904  001862                     l11123:
  2905                           
  2906                           ; BSR set to: 1
  2907                           ; Switch size 1, requested type "simple"
  2908                           ; Number of cases is 5, Range of values is 0 to 4
  2909                           ; switch strategies available:
  2910                           ; Name         Instructions Cycles
  2911                           ; simple_byte           16     9 (average)
  2912                           ;	Chosen strategy is simple_byte
  2913  001862  51CE               	movf	??_comportamientoBasico& (0+255),w,b
  2914  001864  0A00               	xorlw	0	; case 0
  2915  001866  B4D8               	btfsc	status,2,c
  2916  001868  EFAF  F00B         	goto	l10411
  2917  00186C  0A01               	xorlw	1	; case 1
  2918  00186E  B4D8               	btfsc	status,2,c
  2919  001870  EFB8  F00B         	goto	l10413
  2920  001874  0A03               	xorlw	3	; case 2
  2921  001876  B4D8               	btfsc	status,2,c
  2922  001878  EF12  F00C         	goto	l10435
  2923  00187C  0A01               	xorlw	1	; case 3
  2924  00187E  B4D8               	btfsc	status,2,c
  2925  001880  EF19  F00C         	goto	l10439
  2926  001884  0A07               	xorlw	7	; case 4
  2927  001886  B4D8               	btfsc	status,2,c
  2928  001888  EF20  F00C         	goto	l10443
  2929  00188C  EF36  F00D         	goto	l391
  2930  001890                     l10449:
  2931                           
  2932                           ; BSR set to: 1
  2933                           ;main.c: 411:                 if (carroEspejeado && espejearCarroY) {
  2934  001890  0100               	movlb	0	; () banked
  2935  001892  51FF               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  2936  001894  B4D8               	btfsc	status,2,c
  2937  001896  EF4F  F00C         	goto	u11671
  2938  00189A  EF51  F00C         	goto	u11670
  2939  00189E                     u11671:
  2940  00189E  EF7B  F00C         	goto	l10467
  2941  0018A2                     u11670:
  2942  0018A2                     
  2943                           ; BSR set to: 0
  2944  0018A2  0101               	movlb	1	; () banked
  2945  0018A4  5139               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  2946  0018A6  B4D8               	btfsc	status,2,c
  2947  0018A8  EF58  F00C         	goto	u11681
  2948  0018AC  EF5A  F00C         	goto	u11680
  2949  0018B0                     u11681:
  2950  0018B0  EF7B  F00C         	goto	l10467
  2951  0018B4                     u11680:
  2952  0018B4                     
  2953                           ; BSR set to: 1
  2954                           ;main.c: 413:                     espejearCarroY = 0;
  2955  0018B4  0E00               	movlw	0
  2956  0018B6  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  2957                           
  2958                           ;main.c: 414:                     carroEspejeado = 0;
  2959  0018B8  0E00               	movlw	0
  2960  0018BA  0100               	movlb	0	; () banked
  2961  0018BC  6FFF               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  2962  0018BE                     
  2963                           ; BSR set to: 0
  2964                           ;main.c: 416:                     regresarAlCruce(movimientosRealizados, numMovimientos)
      +                          ;
  2965  0018BE  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  2966  0018C0  6F9A               	movwf	regresarAlCruce@movimientos& (0+255),b
  2967  0018C2  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  2968  0018C4  6F9B               	movwf	(regresarAlCruce@movimientos+1)& (0+255),b
  2969  0018C6  C1C7  F09C         	movff	comportamientoBasico@numMovimientos,regresarAlCruce@numMovimientos
  2970  0018CA  C1C8  F09D         	movff	comportamientoBasico@numMovimientos+1,regresarAlCruce@numMovimientos+1
  2971  0018CE  EC1C  F023         	call	_regresarAlCruce	;wreg free
  2972  0018D2                     
  2973                           ;main.c: 417:                     limpiarMovimientos(movimientosRealizados, &numMovimien
      +                          tos);
  2974  0018D2  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  2975  0018D4  6E06               	movwf	limpiarMovimientos@movimientos^0,c
  2976  0018D6  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  2977  0018D8  6E07               	movwf	(limpiarMovimientos@movimientos+1)^0,c
  2978  0018DA  0EC7               	movlw	low comportamientoBasico@numMovimientos
  2979  0018DC  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
  2980  0018DE  0E01               	movlw	high comportamientoBasico@numMovimientos
  2981  0018E0  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
  2982  0018E2  ECBF  F028         	call	_limpiarMovimientos	;wreg free
  2983  0018E6                     
  2984                           ;main.c: 419:                     cruceDetectado = 0;
  2985  0018E6  0E00               	movlw	0
  2986  0018E8  0101               	movlb	1	; () banked
  2987  0018EA  6F37               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  2988  0018EC                     
  2989                           ; BSR set to: 1
  2990                           ;main.c: 420:                     posicionInvCruce = 1;
  2991  0018EC  0E01               	movlw	1
  2992  0018EE  6FCC               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  2993  0018F0                     
  2994                           ; BSR set to: 1
  2995                           ;main.c: 421:                     contCaminosRecorridos++;
  2996  0018F0  2BCB               	incf	comportamientoBasico@contCaminosRecorridos& (0+255),f,b
  2997  0018F2  EF20  F00C         	goto	l10443
  2998  0018F6                     l10467:
  2999  0018F6  0101               	movlb	1	; () banked
  3000  0018F8  5139               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3001  0018FA  B4D8               	btfsc	status,2,c
  3002  0018FC  EF82  F00C         	goto	u11691
  3003  001900  EF84  F00C         	goto	u11690
  3004  001904                     u11691:
  3005  001904  EF0D  F00C         	goto	l10433
  3006  001908                     u11690:
  3007  001908                     
  3008                           ; BSR set to: 1
  3009  001908  0100               	movlb	0	; () banked
  3010  00190A  51FF               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3011  00190C  B4D8               	btfsc	status,2,c
  3012  00190E  EF8B  F00C         	goto	u11701
  3013  001912  EF8D  F00C         	goto	u11700
  3014  001916                     u11701:
  3015  001916  EF0D  F00C         	goto	l10433
  3016  00191A                     u11700:
  3017  00191A                     
  3018                           ; BSR set to: 0
  3019  00191A  51FE               	movf	_llegoDestino& (0+255),w,b
  3020  00191C  B4D8               	btfsc	status,2,c
  3021  00191E  EF93  F00C         	goto	u11711
  3022  001922  EF95  F00C         	goto	u11710
  3023  001926                     u11711:
  3024  001926  EF0D  F00C         	goto	l10433
  3025  00192A                     u11710:
  3026  00192A                     
  3027                           ; BSR set to: 0
  3028                           ;main.c: 424:                     espejearCarroY = 0;
  3029  00192A  0E00               	movlw	0
  3030  00192C  0101               	movlb	1	; () banked
  3031  00192E  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3032                           
  3033                           ;main.c: 425:                     mouse.Next_state = ALTO;
  3034  001930  0E04               	movlw	4
  3035  001932  0100               	movlb	0	; () banked
  3036  001934  6FFD               	movwf	(_mouse+1)& (0+255),b
  3037                           
  3038                           ;main.c: 427:                 } else {
  3039  001936  EF36  F00D         	goto	l391
  3040  00193A                     l10479:
  3041                           
  3042                           ; BSR set to: 1
  3043                           ;main.c: 439:                 if (llegoDestino && carroEspejeado) {
  3044  00193A  0100               	movlb	0	; () banked
  3045  00193C  51FE               	movf	_llegoDestino& (0+255),w,b
  3046  00193E  B4D8               	btfsc	status,2,c
  3047  001940  EFA4  F00C         	goto	u11721
  3048  001944  EFA6  F00C         	goto	u11720
  3049  001948                     u11721:
  3050  001948  EFC4  F00C         	goto	l10493
  3051  00194C                     u11720:
  3052  00194C                     
  3053                           ; BSR set to: 0
  3054  00194C  51FF               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3055  00194E  B4D8               	btfsc	status,2,c
  3056  001950  EFAC  F00C         	goto	u11731
  3057  001954  EFAE  F00C         	goto	u11730
  3058  001958                     u11731:
  3059  001958  EFC4  F00C         	goto	l10493
  3060  00195C                     u11730:
  3061  00195C                     
  3062                           ; BSR set to: 0
  3063                           ;main.c: 441:                     carroEspejeado = 0;
  3064  00195C  0E00               	movlw	0
  3065  00195E  6FFF               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  3066  001960                     
  3067                           ; BSR set to: 0
  3068                           ;main.c: 442:                     regresarPuntoPartida(caminoFinal, numMovimientosTotale
      +                          s);
  3069  001960  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3070  001962  6F9A               	movwf	regresarPuntoPartida@movimientos& (0+255),b
  3071  001964  0E02               	movlw	high comportamientoBasico@caminoFinal
  3072  001966  6F9B               	movwf	(regresarPuntoPartida@movimientos+1)& (0+255),b
  3073  001968  C1C5  F09C         	movff	comportamientoBasico@numMovimientosTotales,regresarPuntoPartida@numMovimientos
  3074  00196C  C1C6  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,regresarPuntoPartida@numMovimientos+
      +                          1
  3075  001970  EC81  F024         	call	_regresarPuntoPartida	;wreg free
  3076  001974                     
  3077                           ;main.c: 443:                     llegoDestino = 0;
  3078  001974  0E00               	movlw	0
  3079  001976  0100               	movlb	0	; () banked
  3080  001978  6FFE               	movwf	_llegoDestino& (0+255),b
  3081  00197A                     
  3082                           ; BSR set to: 0
  3083                           ;main.c: 444:                     caminoEncontrado = 1;
  3084  00197A  0E01               	movlw	1
  3085  00197C  0101               	movlb	1	; () banked
  3086  00197E  6F36               	movwf	comportamientoBasico@caminoEncontrado& (0+255),b
  3087  001980                     
  3088                           ; BSR set to: 1
  3089                           ;main.c: 445:                     finalizarRecorrido();
  3090  001980  EC0C  F02B         	call	_finalizarRecorrido	;wreg free
  3091                           
  3092                           ;main.c: 446:                 } else if (llegoDestino && !carroEspejeado) {
  3093  001984  EF36  F00D         	goto	l391
  3094  001988                     l10493:
  3095                           
  3096                           ; BSR set to: 0
  3097  001988  51FE               	movf	_llegoDestino& (0+255),w,b
  3098  00198A  B4D8               	btfsc	status,2,c
  3099  00198C  EFCA  F00C         	goto	u11741
  3100  001990  EFCC  F00C         	goto	u11740
  3101  001994                     u11741:
  3102  001994  EF00  F00D         	goto	l10507
  3103  001998                     u11740:
  3104  001998                     
  3105                           ; BSR set to: 0
  3106  001998  51FF               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3107  00199A  A4D8               	btfss	status,2,c
  3108  00199C  EFD2  F00C         	goto	u11751
  3109  0019A0  EFD4  F00C         	goto	u11750
  3110  0019A4                     u11751:
  3111  0019A4  EF00  F00D         	goto	l10507
  3112  0019A8                     u11750:
  3113  0019A8                     
  3114                           ; BSR set to: 0
  3115                           ;main.c: 448:                     caminoCorrecto(movimientosRealizados, caminoFinal, num
      +                          Movimientos,
  3116  0019A8  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3117  0019AA  6E12               	movwf	caminoCorrecto@movimientos^0,c
  3118  0019AC  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3119  0019AE  6E13               	movwf	(caminoCorrecto@movimientos+1)^0,c
  3120  0019B0  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3121  0019B2  6E14               	movwf	caminoCorrecto@caminoFinal^0,c
  3122  0019B4  0E02               	movlw	high comportamientoBasico@caminoFinal
  3123  0019B6  6E15               	movwf	(caminoCorrecto@caminoFinal+1)^0,c
  3124  0019B8  C1C7  F016         	movff	comportamientoBasico@numMovimientos,caminoCorrecto@numMovimientos
  3125  0019BC  C1C8  F017         	movff	comportamientoBasico@numMovimientos+1,caminoCorrecto@numMovimientos+1
  3126  0019C0  0EC5               	movlw	low comportamientoBasico@numMovimientosTotales
  3127  0019C2  6E18               	movwf	caminoCorrecto@numMovimientosFinal^0,c
  3128  0019C4  0E01               	movlw	high comportamientoBasico@numMovimientosTotales
  3129  0019C6  6E19               	movwf	(caminoCorrecto@numMovimientosFinal+1)^0,c
  3130  0019C8  C1CA  F01A         	movff	comportamientoBasico@caminoActual,caminoCorrecto@caminoActual
  3131  0019CC  EC54  F029         	call	_caminoCorrecto	;wreg free
  3132  0019D0                     
  3133                           ;main.c: 451:                     espejearCarroY = 1;
  3134  0019D0  0E01               	movlw	1
  3135  0019D2  0101               	movlb	1	; () banked
  3136  0019D4  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3137  0019D6                     
  3138                           ; BSR set to: 1
  3139                           ;main.c: 452:                     UART_printf("\rSe llego Al destino\r\n");
  3140  0019D6  0E7B               	movlw	low STR_15
  3141  0019D8  6E07               	movwf	UART_printf@cadena^0,c
  3142  0019DA  0E7F               	movlw	high STR_15
  3143  0019DC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3144  0019DE  EC65  F027         	call	_UART_printf	;wreg free
  3145  0019E2                     
  3146                           ;main.c: 453:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
  3147  0019E2  0E10               	movlw	16
  3148  0019E4  0101               	movlb	1	; () banked
  3149  0019E6  6FCF               	movwf	(??_comportamientoBasico+1)& (0+255),b
  3150  0019E8  0E39               	movlw	57
  3151  0019EA  6FCE               	movwf	??_comportamientoBasico& (0+255),b
  3152  0019EC  0E0D               	movlw	13
  3153  0019EE                     u11927:
  3154  0019EE  2EE8               	decfsz	wreg,f,c
  3155  0019F0  D7FE               	bra	u11927
  3156  0019F2  2FCE               	decfsz	??_comportamientoBasico& (0+255),f,b
  3157  0019F4  D7FC               	bra	u11927
  3158  0019F6  2FCF               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  3159  0019F8  D7FA               	bra	u11927
  3160  0019FA  D000               	nop2	
  3161  0019FC  EF14  F00C         	goto	l10437
  3162  001A00                     l10507:
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;main.c: 457:                     if (direccionElegida == IZQUIERDA || direccionElegida 
      +                          == DERECHA)
  3166  001A00  0E02               	movlw	2
  3167  001A02  19FB               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3168  001A04  B4D8               	btfsc	status,2,c
  3169  001A06  EF07  F00D         	goto	u11761
  3170  001A0A  EF09  F00D         	goto	u11760
  3171  001A0E                     u11761:
  3172  001A0E  EF12  F00D         	goto	l10511
  3173  001A12                     u11760:
  3174  001A12                     
  3175                           ; BSR set to: 0
  3176  001A12  0E03               	movlw	3
  3177  001A14  19FB               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3178  001A16  A4D8               	btfss	status,2,c
  3179  001A18  EF10  F00D         	goto	u11771
  3180  001A1C  EF12  F00D         	goto	u11770
  3181  001A20                     u11771:
  3182  001A20  EF14  F00D         	goto	l10513
  3183  001A24                     u11770:
  3184  001A24                     l10511:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;main.c: 458:                         velocidadEstandar();
  3188  001A24  EC85  F02A         	call	_velocidadEstandar	;wreg free
  3189  001A28                     l10513:
  3190                           
  3191                           ;main.c: 460:                     mouse.Next_state = direccionElegida;
  3192  001A28  C0FB  F0FD         	movff	comportamientoBasico@direccionElegida,_mouse+1
  3193  001A2C  EF36  F00D         	goto	l391
  3194  001A30                     l10517:
  3195                           
  3196                           ; BSR set to: 0
  3197  001A30  51FC               	movf	_mouse& (0+255),w,b
  3198  001A32  0101               	movlb	1	; () banked
  3199  001A34  6FCE               	movwf	??_comportamientoBasico& (0+255),b
  3200  001A36  6BCF               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3201                           
  3202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3203                           ; Switch size 1, requested type "simple"
  3204                           ; Number of cases is 1, Range of values is 0 to 0
  3205                           ; switch strategies available:
  3206                           ; Name         Instructions Cycles
  3207                           ; simple_byte            4     3 (average)
  3208                           ;	Chosen strategy is simple_byte
  3209  001A38  51CF               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3210  001A3A  0A00               	xorlw	0	; case 0
  3211  001A3C  B4D8               	btfsc	status,2,c
  3212  001A3E  EF23  F00D         	goto	l11125
  3213  001A42  EF36  F00D         	goto	l391
  3214  001A46                     l11125:
  3215                           
  3216                           ; BSR set to: 1
  3217                           ; Switch size 1, requested type "simple"
  3218                           ; Number of cases is 4, Range of values is 1 to 4
  3219                           ; switch strategies available:
  3220                           ; Name         Instructions Cycles
  3221                           ; simple_byte           13     7 (average)
  3222                           ;	Chosen strategy is simple_byte
  3223  001A46  51CE               	movf	??_comportamientoBasico& (0+255),w,b
  3224  001A48  0A01               	xorlw	1	; case 1
  3225  001A4A  B4D8               	btfsc	status,2,c
  3226  001A4C  EF25  F00C         	goto	l10447
  3227  001A50  0A03               	xorlw	3	; case 2
  3228  001A52  B4D8               	btfsc	status,2,c
  3229  001A54  EF48  F00C         	goto	l10449
  3230  001A58  0A01               	xorlw	1	; case 3
  3231  001A5A  B4D8               	btfsc	status,2,c
  3232  001A5C  EF0D  F00C         	goto	l10433
  3233  001A60  0A07               	xorlw	7	; case 4
  3234  001A62  B4D8               	btfsc	status,2,c
  3235  001A64  EF9D  F00C         	goto	l10479
  3236  001A68  EF36  F00D         	goto	l391
  3237  001A6C                     l391:
  3238                           
  3239                           ;main.c: 466:         mouse.curr_state = mouse.Next_state;
  3240  001A6C  C0FD  F0FC         	movff	_mouse+1,_mouse
  3241                           
  3242                           ;main.c: 468:     } else {
  3243  001A70  EF61  F00D         	goto	l407
  3244  001A74                     l10519:
  3245                           
  3246                           ; BSR set to: 1
  3247                           ;main.c: 469:         recorrerCaminoEncontrado(caminoFinal, numMovimientosTotales);
  3248  001A74  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3249  001A76  0100               	movlb	0	; () banked
  3250  001A78  6F9A               	movwf	recorrerCaminoEncontrado@movimientos& (0+255),b
  3251  001A7A  0E02               	movlw	high comportamientoBasico@caminoFinal
  3252  001A7C  6F9B               	movwf	(recorrerCaminoEncontrado@movimientos+1)& (0+255),b
  3253  001A7E  C1C5  F09C         	movff	comportamientoBasico@numMovimientosTotales,recorrerCaminoEncontrado@numMovimiento
      +                          s
  3254  001A82  C1C6  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,recorrerCaminoEncontrado@numMovimien
      +                          tos+1
  3255  001A86  EC6F  F025         	call	_recorrerCaminoEncontrado	;wreg free
  3256  001A8A                     
  3257                           ;main.c: 470:         _delay((unsigned long)((3000)*(4000000/4000.0)));
  3258  001A8A  0E10               	movlw	16
  3259  001A8C  0101               	movlb	1	; () banked
  3260  001A8E  6FCF               	movwf	(??_comportamientoBasico+1)& (0+255),b
  3261  001A90  0E39               	movlw	57
  3262  001A92  6FCE               	movwf	??_comportamientoBasico& (0+255),b
  3263  001A94  0E0D               	movlw	13
  3264  001A96                     u11937:
  3265  001A96  2EE8               	decfsz	wreg,f,c
  3266  001A98  D7FE               	bra	u11937
  3267  001A9A  2FCE               	decfsz	??_comportamientoBasico& (0+255),f,b
  3268  001A9C  D7FC               	bra	u11937
  3269  001A9E  2FCF               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  3270  001AA0  D7FA               	bra	u11937
  3271  001AA2  D000               	nop2	
  3272  001AA4                     
  3273                           ;main.c: 471:         forzarEspejeo();
  3274  001AA4  ECB9  F029         	call	_forzarEspejeo	;wreg free
  3275  001AA8                     
  3276                           ;main.c: 472:         regresarPuntoPartida(caminoFinal, numMovimientosTotales);
  3277  001AA8  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3278  001AAA  0100               	movlb	0	; () banked
  3279  001AAC  6F9A               	movwf	regresarPuntoPartida@movimientos& (0+255),b
  3280  001AAE  0E02               	movlw	high comportamientoBasico@caminoFinal
  3281  001AB0  6F9B               	movwf	(regresarPuntoPartida@movimientos+1)& (0+255),b
  3282  001AB2  C1C5  F09C         	movff	comportamientoBasico@numMovimientosTotales,regresarPuntoPartida@numMovimientos
  3283  001AB6  C1C6  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,regresarPuntoPartida@numMovimientos+
      +                          1
  3284  001ABA  EC81  F024         	call	_regresarPuntoPartida	;wreg free
  3285  001ABE                     
  3286                           ;main.c: 473:         finalizarRecorrido();
  3287  001ABE  EC0C  F02B         	call	_finalizarRecorrido	;wreg free
  3288  001AC2                     l407:
  3289  001AC2  0012               	return		;funcret
  3290  001AC4                     __end_of_comportamientoBasico:
  3291                           	opt callstack 0
  3292                           
  3293 ;; *************** function _velocidadBaja *****************
  3294 ;; Defined at:
  3295 ;;		line 1296 in file "main.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3309 ;;      Params:         0       0       0       0       0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3312 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3313 ;;Total ram usage:        0 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    5
  3316 ;; This function calls:
  3317 ;;		_pwmDuty
  3318 ;; This function is called by:
  3319 ;;		_comportamientoBasico
  3320 ;;		_probarCruceT
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text6
  3325  0054BE                     __ptext6:
  3326                           	opt callstack 0
  3327  0054BE                     _velocidadBaja:
  3328                           	opt callstack 24
  3329  0054BE                     
  3330                           ;main.c: 1298:     pwmDuty(70, 1);
  3331  0054BE  0E00               	movlw	0
  3332  0054C0  0100               	movlb	0	; () banked
  3333  0054C2  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  3334  0054C4  0E46               	movlw	70
  3335  0054C6  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  3336  0054C8  0E01               	movlw	1
  3337  0054CA  6F7E               	movwf	pwmDuty@channel& (0+255),b
  3338  0054CC  ECEC  F018         	call	_pwmDuty	;wreg free
  3339                           
  3340                           ;main.c: 1299:     pwmDuty(70, 2);
  3341  0054D0  0E00               	movlw	0
  3342  0054D2  0100               	movlb	0	; () banked
  3343  0054D4  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  3344  0054D6  0E46               	movlw	70
  3345  0054D8  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  3346  0054DA  0E02               	movlw	2
  3347  0054DC  6F7E               	movwf	pwmDuty@channel& (0+255),b
  3348  0054DE  ECEC  F018         	call	_pwmDuty	;wreg free
  3349  0054E2  0012               	return		;funcret
  3350  0054E4                     __end_of_velocidadBaja:
  3351                           	opt callstack 0
  3352                           
  3353 ;; *************** function _sprintf *****************
  3354 ;; Defined at:
  3355 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  s               2  135[BANK0 ] PTR unsigned char 
  3358 ;;		 -> buffer(50), 
  3359 ;;  fmt             2  137[BANK0 ] PTR const unsigned char 
  3360 ;;		 -> STR_14(34), STR_11(32), STR_6(17), STR_5(19), 
  3361 ;;		 -> STR_4(18), STR_3(34), 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  f               6  149[BANK0 ] struct _IO_FILE
  3364 ;;  ap              2  147[BANK0 ] PTR void [1]
  3365 ;;		 -> ?_sprintf(2), 
  3366 ;;  ret             2    0        int 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  2  135[BANK0 ] int 
  3369 ;; Registers used:
  3370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3376 ;;      Params:         0      10       0       0       0       0       0       0       0
  3377 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3379 ;;      Totals:         0      20       0       0       0       0       0       0       0
  3380 ;;Total ram usage:       20 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    9
  3383 ;; This function calls:
  3384 ;;		_vfprintf
  3385 ;; This function is called by:
  3386 ;;		_visualizarPasosRealizados
  3387 ;;		_comportamientoBasico
  3388 ;;		_probarSensores
  3389 ;;		_probarUltrasonico
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text7
  3394  00508A                     __ptext7:
  3395                           	opt callstack 0
  3396  00508A                     _sprintf:
  3397                           	opt callstack 20
  3398  00508A  0EEB               	movlw	low (?_sprintf+4)
  3399  00508C  0100               	movlb	0	; () banked
  3400  00508E  6FF3               	movwf	sprintf@ap& (0+255),b
  3401  005090  0E00               	movlw	high (?_sprintf+4)
  3402  005092  6FF4               	movwf	(sprintf@ap+1)& (0+255),b
  3403  005094  C0E7  F0F5         	movff	sprintf@s,sprintf@f
  3404  005098  C0E8  F0F6         	movff	sprintf@s+1,sprintf@f+1
  3405  00509C                     
  3406                           ; BSR set to: 0
  3407  00509C  0E00               	movlw	0
  3408  00509E  6FF8               	movwf	(sprintf@f+3)& (0+255),b
  3409  0050A0  0E00               	movlw	0
  3410  0050A2  6FF7               	movwf	(sprintf@f+2)& (0+255),b
  3411  0050A4                     
  3412                           ; BSR set to: 0
  3413  0050A4  0E00               	movlw	0
  3414  0050A6  6FFA               	movwf	(sprintf@f+5)& (0+255),b
  3415  0050A8  0E00               	movlw	0
  3416  0050AA  6FF9               	movwf	(sprintf@f+4)& (0+255),b
  3417  0050AC                     
  3418                           ; BSR set to: 0
  3419  0050AC  0EF5               	movlw	low sprintf@f
  3420  0050AE  6FDF               	movwf	vfprintf@fp& (0+255),b
  3421  0050B0  0E00               	movlw	high sprintf@f
  3422  0050B2  6FE0               	movwf	(vfprintf@fp+1)& (0+255),b
  3423  0050B4  C0E9  F0E1         	movff	sprintf@fmt,vfprintf@fmt
  3424  0050B8  C0EA  F0E2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3425  0050BC  0EF3               	movlw	low sprintf@ap
  3426  0050BE  6FE3               	movwf	vfprintf@ap& (0+255),b
  3427  0050C0  0E00               	movlw	high sprintf@ap
  3428  0050C2  6FE4               	movwf	(vfprintf@ap+1)& (0+255),b
  3429  0050C4  EC9A  F026         	call	_vfprintf	;wreg free
  3430  0050C8  0100               	movlb	0	; () banked
  3431  0050CA  51F7               	movf	(sprintf@f+2)& (0+255),w,b
  3432  0050CC  25E7               	addwf	sprintf@s& (0+255),w,b
  3433  0050CE  6ED9               	movwf	fsr2l,c
  3434  0050D0  51F8               	movf	(sprintf@f+3)& (0+255),w,b
  3435  0050D2  21E8               	addwfc	(sprintf@s+1)& (0+255),w,b
  3436  0050D4  6EDA               	movwf	fsr2h,c
  3437  0050D6  0E00               	movlw	0
  3438  0050D8  6EDF               	movwf	indf2,c
  3439  0050DA                     
  3440                           ; BSR set to: 0
  3441  0050DA  0012               	return		;funcret
  3442  0050DC                     __end_of_sprintf:
  3443                           	opt callstack 0
  3444                           
  3445 ;; *************** function _vfprintf *****************
  3446 ;; Defined at:
  3447 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  fp              2  127[BANK0 ] PTR struct _IO_FILE
  3450 ;;		 -> sprintf@f(6), 
  3451 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  3452 ;;		 -> STR_14(34), STR_11(32), STR_6(17), STR_5(19), 
  3453 ;;		 -> STR_4(18), STR_3(34), 
  3454 ;;  ap              2  131[BANK0 ] PTR PTR void 
  3455 ;;		 -> sprintf@ap(2), 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  cfmt            2  133[BANK0 ] PTR unsigned char 
  3458 ;;		 -> STR_14(34), STR_11(32), STR_6(17), STR_5(19), 
  3459 ;;		 -> STR_4(18), STR_3(34), 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  2  127[BANK0 ] int 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3469 ;;      Params:         0       6       0       0       0       0       0       0       0
  3470 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3472 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3473 ;;Total ram usage:        8 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    8
  3476 ;; This function calls:
  3477 ;;		_vfpfcnvrt
  3478 ;; This function is called by:
  3479 ;;		_sprintf
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text8
  3484  004D34                     __ptext8:
  3485                           	opt callstack 0
  3486  004D34                     _vfprintf:
  3487                           	opt callstack 20
  3488  004D34                     
  3489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3490  004D34  C0E1  F0E5         	movff	vfprintf@fmt,vfprintf@cfmt
  3491  004D38  C0E2  F0E6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3492  004D3C                     
  3493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3494  004D3C  0E00               	movlw	0
  3495  004D3E  0101               	movlb	1	; () banked
  3496  004D40  6F2D               	movwf	(_nout+1)& (0+255),b
  3497  004D42  0E00               	movlw	0
  3498  004D44  6F2C               	movwf	_nout& (0+255),b
  3499                           
  3500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3501  004D46  EFBC  F026         	goto	l9765
  3502  004D4A                     l9763:
  3503                           
  3504                           ; BSR set to: 1
  3505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3506  004D4A  C0DF  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  3507  004D4E  C0E0  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3508  004D52  0EE5               	movlw	low vfprintf@cfmt
  3509  004D54  0100               	movlb	0	; () banked
  3510  004D56  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  3511  004D58  0E00               	movlw	high vfprintf@cfmt
  3512  004D5A  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3513  004D5C  C0E3  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  3514  004D60  C0E4  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3515  004D64  ECEC  F005         	call	_vfpfcnvrt	;wreg free
  3516  004D68  0100               	movlb	0	; () banked
  3517  004D6A  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  3518  004D6C  0101               	movlb	1	; () banked
  3519  004D6E  272C               	addwf	_nout& (0+255),f,b
  3520  004D70  0100               	movlb	0	; () banked
  3521  004D72  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3522  004D74  0101               	movlb	1	; () banked
  3523  004D76  232D               	addwfc	(_nout+1)& (0+255),f,b
  3524  004D78                     l9765:
  3525                           
  3526                           ; BSR set to: 1
  3527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3528  004D78  C0E5  FFF6         	movff	vfprintf@cfmt,tblptrl
  3529  004D7C  C0E6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3530  004D80                     	if	0	;tblptru may be non-zero
  3531  004D80                     	endif
  3532  004D80                     	if	0	;tblptru may be non-zero
  3533  004D80                     	endif
  3534  004D80  0008               	tblrd		*
  3535  004D82  50F5               	movf	tablat,w,c
  3536  004D84  0900               	iorlw	0
  3537  004D86  A4D8               	btfss	status,2,c
  3538  004D88  EFC8  F026         	goto	u11091
  3539  004D8C  EFCA  F026         	goto	u11090
  3540  004D90                     u11091:
  3541  004D90  EFA5  F026         	goto	l9763
  3542  004D94                     u11090:
  3543  004D94                     
  3544                           ; BSR set to: 1
  3545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3546  004D94  C12C  F0DF         	movff	_nout,?_vfprintf
  3547  004D98  C12D  F0E0         	movff	_nout+1,?_vfprintf+1
  3548  004D9C                     
  3549                           ; BSR set to: 1
  3550  004D9C  0012               	return		;funcret
  3551  004D9E                     __end_of_vfprintf:
  3552                           	opt callstack 0
  3553                           
  3554 ;; *************** function _vfpfcnvrt *****************
  3555 ;; Defined at:
  3556 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  3559 ;;		 -> sprintf@f(6), 
  3560 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  3561 ;;		 -> vfprintf@cfmt(2), 
  3562 ;;  ap              2  101[BANK0 ] PTR PTR void 
  3563 ;;		 -> sprintf@ap(2), 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  ll              8  107[BANK0 ] long long 
  3566 ;;  llu             8    0        unsigned long long 
  3567 ;;  f               4  119[BANK0 ] unsigned long long 
  3568 ;;  ct              3  123[BANK0 ] unsigned char [3]
  3569 ;;  vp              3    0        PTR void 
  3570 ;;  cp              3    0        PTR unsigned char 
  3571 ;;  i               2    0        int 
  3572 ;;  done            2    0        int 
  3573 ;;  c               1  126[BANK0 ] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  2   97[BANK0 ] int 
  3576 ;; Registers used:
  3577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3583 ;;      Params:         0       6       0       0       0       0       0       0       0
  3584 ;;      Locals:         0      20       0       0       0       0       0       0       0
  3585 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3586 ;;      Totals:         0      30       0       0       0       0       0       0       0
  3587 ;;Total ram usage:       30 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    7
  3590 ;; This function calls:
  3591 ;;		_atoi
  3592 ;;		_ctoa
  3593 ;;		_dtoa
  3594 ;;		_efgtoa
  3595 ;;		_fputc
  3596 ;;		_isdigit
  3597 ;;		_isupper
  3598 ;;		_strncmp
  3599 ;;		_tolower
  3600 ;; This function is called by:
  3601 ;;		_vfprintf
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text9
  3606  000BD8                     __ptext9:
  3607                           	opt callstack 0
  3608  000BD8                     _vfpfcnvrt:
  3609                           	opt callstack 20
  3610  000BD8                     
  3611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3612  000BD8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3613  000BDC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3614  000BE0  CFDE FFF6          	movff	postinc2,tblptrl
  3615  000BE4  CFDD FFF7          	movff	postdec2,tblptrh
  3616  000BE8                     	if	0	;tblptru may be non-zero
  3617  000BE8                     	endif
  3618  000BE8                     	if	0	;tblptru may be non-zero
  3619  000BE8                     	endif
  3620  000BE8  0008               	tblrd		*
  3621  000BEA  50F5               	movf	tablat,w,c
  3622  000BEC  0A25               	xorlw	37
  3623  000BEE  A4D8               	btfss	status,2,c
  3624  000BF0  EFFC  F005         	goto	u10701
  3625  000BF4  EFFE  F005         	goto	u10700
  3626  000BF8                     u10701:
  3627  000BF8  EFA4  F008         	goto	l9599
  3628  000BFC                     u10700:
  3629  000BFC                     
  3630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3631  000BFC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3632  000C00  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3633  000C04  2ADE               	incf	postinc2,f,c
  3634  000C06  0E00               	movlw	0
  3635  000C08  22DD               	addwfc	postdec2,f,c
  3636  000C0A                     
  3637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3638  000C0A  0E00               	movlw	0
  3639  000C0C  0101               	movlb	1	; () banked
  3640  000C0E  6F2F               	movwf	(_width+1)& (0+255),b
  3641  000C10  0E00               	movlw	0
  3642  000C12  6F2E               	movwf	_width& (0+255),b
  3643  000C14  C12E  F132         	movff	_width,_flags
  3644  000C18  C12F  F133         	movff	_width+1,_flags+1
  3645  000C1C                     
  3646                           ; BSR set to: 1
  3647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3648  000C1C  6930               	setf	_prec& (0+255),b
  3649  000C1E  6931               	setf	(_prec+1)& (0+255),b
  3650  000C20                     
  3651                           ; BSR set to: 1
  3652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3653  000C20  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3654  000C24  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3655  000C28  CFDE FFF6          	movff	postinc2,tblptrl
  3656  000C2C  CFDD FFF7          	movff	postdec2,tblptrh
  3657  000C30                     	if	0	;tblptru may be non-zero
  3658  000C30                     	endif
  3659  000C30                     	if	0	;tblptru may be non-zero
  3660  000C30                     	endif
  3661  000C30  0008               	tblrd		*
  3662  000C32  50F5               	movf	tablat,w,c
  3663  000C34  0A2E               	xorlw	46
  3664  000C36  A4D8               	btfss	status,2,c
  3665  000C38  EF20  F006         	goto	u10711
  3666  000C3C  EF22  F006         	goto	u10710
  3667  000C40                     u10711:
  3668  000C40  EFA0  F006         	goto	l9527
  3669  000C44                     u10710:
  3670  000C44                     
  3671                           ; BSR set to: 1
  3672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3673  000C44  0E00               	movlw	0
  3674  000C46  6F31               	movwf	(_prec+1)& (0+255),b
  3675  000C48  0E00               	movlw	0
  3676  000C4A  6F30               	movwf	_prec& (0+255),b
  3677  000C4C                     
  3678                           ; BSR set to: 1
  3679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3680  000C4C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3681  000C50  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3682  000C54  2ADE               	incf	postinc2,f,c
  3683  000C56  0E00               	movlw	0
  3684  000C58  22DD               	addwfc	postdec2,f,c
  3685  000C5A                     
  3686                           ; BSR set to: 1
  3687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3688  000C5A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3689  000C5E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3690  000C62  CFDE FFF6          	movff	postinc2,tblptrl
  3691  000C66  CFDD FFF7          	movff	postdec2,tblptrh
  3692  000C6A                     	if	0	;tblptru may be non-zero
  3693  000C6A                     	endif
  3694  000C6A                     	if	0	;tblptru may be non-zero
  3695  000C6A                     	endif
  3696  000C6A  0008               	tblrd		*
  3697  000C6C  50F5               	movf	tablat,w,c
  3698  000C6E  0A2A               	xorlw	42
  3699  000C70  A4D8               	btfss	status,2,c
  3700  000C72  EF3D  F006         	goto	u10721
  3701  000C76  EF3F  F006         	goto	u10720
  3702  000C7A                     u10721:
  3703  000C7A  EF5C  F006         	goto	l9517
  3704  000C7E                     u10720:
  3705  000C7E                     
  3706                           ; BSR set to: 1
  3707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3708  000C7E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3709  000C82  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3710  000C86  2ADE               	incf	postinc2,f,c
  3711  000C88  0E00               	movlw	0
  3712  000C8A  22DD               	addwfc	postdec2,f,c
  3713                           
  3714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3715  000C8C  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3716  000C90  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3717  000C94  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  3718  000C98  0E02               	movlw	2
  3719  000C9A  26DE               	addwf	postinc2,f,c
  3720  000C9C  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  3721  000CA0  0E00               	movlw	0
  3722  000CA2  22DD               	addwfc	postdec2,f,c
  3723  000CA4  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3724  000CA8  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3725  000CAC  CFDE F130          	movff	postinc2,_prec
  3726  000CB0  CFDD F131          	movff	postdec2,_prec+1
  3727                           
  3728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3729  000CB4  EFA0  F006         	goto	l9527
  3730  000CB8                     l9517:
  3731                           
  3732                           ; BSR set to: 1
  3733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3734  000CB8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3735  000CBC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3736  000CC0  CFDE F00D          	movff	postinc2,atoi@s
  3737  000CC4  CFDD F00E          	movff	postdec2,atoi@s+1
  3738  000CC8  ECA4  F01A         	call	_atoi	;wreg free
  3739  000CCC  C00D  F130         	movff	?_atoi,_prec
  3740  000CD0  C00E  F131         	movff	?_atoi+1,_prec+1
  3741                           
  3742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3743  000CD4  EF73  F006         	goto	l9521
  3744  000CD8                     l9519:
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3748  000CD8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3749  000CDC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3750  000CE0  2ADE               	incf	postinc2,f,c
  3751  000CE2  0E00               	movlw	0
  3752  000CE4  22DD               	addwfc	postdec2,f,c
  3753  000CE6                     l9521:
  3754  000CE6  0ED0               	movlw	208
  3755  000CE8  0100               	movlb	0	; () banked
  3756  000CEA  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  3757  000CEC  0EFF               	movlw	255
  3758  000CEE  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3759  000CF0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3760  000CF4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3761  000CF8  CFDE FFF6          	movff	postinc2,tblptrl
  3762  000CFC  CFDD FFF7          	movff	postdec2,tblptrh
  3763  000D00                     	if	0	;tblptru may be non-zero
  3764  000D00                     	endif
  3765  000D00                     	if	0	;tblptru may be non-zero
  3766  000D00                     	endif
  3767  000D00  0008               	tblrd		*
  3768  000D02  50F5               	movf	tablat,w,c
  3769  000D04  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3770  000D06  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3771  000D08  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  3772  000D0A  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3773  000D0C  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3774  000D0E  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3775  000D10  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3776  000D12  E10A               	bnz	u10730
  3777  000D14  0E0A               	movlw	10
  3778  000D16  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3779  000D18  A0D8               	btfss	status,0,c
  3780  000D1A  EF91  F006         	goto	u10731
  3781  000D1E  EF94  F006         	goto	u10730
  3782  000D22                     u10731:
  3783  000D22  0E01               	movlw	1
  3784  000D24  EF95  F006         	goto	u10740
  3785  000D28                     u10730:
  3786  000D28  0E00               	movlw	0
  3787  000D2A                     u10740:
  3788  000D2A  6FD3               	movwf	_vfpfcnvrt$953& (0+255),b
  3789  000D2C  6BD4               	clrf	(_vfpfcnvrt$953+1)& (0+255),b
  3790  000D2E                     
  3791                           ; BSR set to: 0
  3792  000D2E  51D3               	movf	_vfpfcnvrt$953& (0+255),w,b
  3793  000D30  11D4               	iorwf	(_vfpfcnvrt$953+1)& (0+255),w,b
  3794  000D32  A4D8               	btfss	status,2,c
  3795  000D34  EF9E  F006         	goto	u10751
  3796  000D38  EFA0  F006         	goto	u10750
  3797  000D3C                     u10751:
  3798  000D3C  EF6C  F006         	goto	l9519
  3799  000D40                     u10750:
  3800  000D40                     l9527:
  3801                           
  3802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3803  000D40  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3804  000D44  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3805  000D48  CFDE FFF6          	movff	postinc2,tblptrl
  3806  000D4C  CFDD FFF7          	movff	postdec2,tblptrh
  3807  000D50                     	if	0	;tblptru may be non-zero
  3808  000D50                     	endif
  3809  000D50                     	if	0	;tblptru may be non-zero
  3810  000D50                     	endif
  3811  000D50  0008               	tblrd		*
  3812  000D52  50F5               	movf	tablat,w,c
  3813  000D54  6E0C               	movwf	tolower@c^0,c
  3814  000D56  6A0D               	clrf	(tolower@c+1)^0,c
  3815  000D58  EC35  F027         	call	_tolower	;wreg free
  3816  000D5C  500C               	movf	?_tolower^0,w,c
  3817  000D5E  0100               	movlb	0	; () banked
  3818  000D60  6FDB               	movwf	vfpfcnvrt@ct& (0+255),b
  3819  000D62                     
  3820                           ; BSR set to: 0
  3821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3822  000D62  51DB               	movf	vfpfcnvrt@ct& (0+255),w,b
  3823  000D64  B4D8               	btfsc	status,2,c
  3824  000D66  EFB7  F006         	goto	u10761
  3825  000D6A  EFB9  F006         	goto	u10760
  3826  000D6E                     u10761:
  3827  000D6E  EFF3  F006         	goto	l9537
  3828  000D72                     u10760:
  3829  000D72                     
  3830                           ; BSR set to: 0
  3831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3832  000D72  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3833  000D76  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3834  000D7A  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  3835  000D7E  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  3836  000D82  0E01               	movlw	1
  3837  000D84  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  3838  000D86  0E00               	movlw	0
  3839  000D88  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3840  000D8A  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3841  000D8E  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3842  000D92                     	if	0	;tblptru may be non-zero
  3843  000D92                     	endif
  3844  000D92                     	if	0	;tblptru may be non-zero
  3845  000D92                     	endif
  3846  000D92  0008               	tblrd		*
  3847  000D94  50F5               	movf	tablat,w,c
  3848  000D96  6E0C               	movwf	tolower@c^0,c
  3849  000D98  6A0D               	clrf	(tolower@c+1)^0,c
  3850  000D9A  EC35  F027         	call	_tolower	;wreg free
  3851  000D9E  500C               	movf	?_tolower^0,w,c
  3852  000DA0  0100               	movlb	0	; () banked
  3853  000DA2  6FDC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3854  000DA4                     
  3855                           ; BSR set to: 0
  3856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3857  000DA4  51DC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3858  000DA6  B4D8               	btfsc	status,2,c
  3859  000DA8  EFD8  F006         	goto	u10771
  3860  000DAC  EFDA  F006         	goto	u10770
  3861  000DB0                     u10771:
  3862  000DB0  EFF3  F006         	goto	l9537
  3863  000DB4                     u10770:
  3864  000DB4                     
  3865                           ; BSR set to: 0
  3866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3867  000DB4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3868  000DB8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3869  000DBC  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  3870  000DC0  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  3871  000DC4  0E02               	movlw	2
  3872  000DC6  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  3873  000DC8  0E00               	movlw	0
  3874  000DCA  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3875  000DCC  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3876  000DD0  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3877  000DD4                     	if	0	;tblptru may be non-zero
  3878  000DD4                     	endif
  3879  000DD4                     	if	0	;tblptru may be non-zero
  3880  000DD4                     	endif
  3881  000DD4  0008               	tblrd		*
  3882  000DD6  50F5               	movf	tablat,w,c
  3883  000DD8  6E0C               	movwf	tolower@c^0,c
  3884  000DDA  6A0D               	clrf	(tolower@c+1)^0,c
  3885  000DDC  EC35  F027         	call	_tolower	;wreg free
  3886  000DE0  500C               	movf	?_tolower^0,w,c
  3887  000DE2  0100               	movlb	0	; () banked
  3888  000DE4  6FDD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3889  000DE6                     l9537:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  3893  000DE6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3894  000DEA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3895  000DEE  CFDE FFF6          	movff	postinc2,tblptrl
  3896  000DF2  CFDD FFF7          	movff	postdec2,tblptrh
  3897  000DF6                     	if	0	;tblptru may be non-zero
  3898  000DF6                     	endif
  3899  000DF6                     	if	0	;tblptru may be non-zero
  3900  000DF6                     	endif
  3901  000DF6  0008               	tblrd		*
  3902  000DF8  50F5               	movf	tablat,w,c
  3903  000DFA  0A63               	xorlw	99
  3904  000DFC  A4D8               	btfss	status,2,c
  3905  000DFE  EF03  F007         	goto	u10781
  3906  000E02  EF05  F007         	goto	u10780
  3907  000E06                     u10781:
  3908  000E06  EF2C  F007         	goto	l9545
  3909  000E0A                     u10780:
  3910  000E0A                     
  3911                           ; BSR set to: 0
  3912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  3913  000E0A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3914  000E0E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3915  000E12  2ADE               	incf	postinc2,f,c
  3916  000E14  0E00               	movlw	0
  3917  000E16  22DD               	addwfc	postdec2,f,c
  3918                           
  3919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3920  000E18  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3921  000E1C  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3922  000E20  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  3923  000E24  0E02               	movlw	2
  3924  000E26  26DE               	addwf	postinc2,f,c
  3925  000E28  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  3926  000E2C  0E00               	movlw	0
  3927  000E2E  22DD               	addwfc	postdec2,f,c
  3928  000E30  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3929  000E34  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3930  000E38  50DF               	movf	indf2,w,c
  3931  000E3A  6FDE               	movwf	vfpfcnvrt@c& (0+255),b
  3932  000E3C                     
  3933                           ; BSR set to: 0
  3934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  3935  000E3C  C0C1  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  3936  000E40  C0C2  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3937  000E44  C0DE  F023         	movff	vfpfcnvrt@c,ctoa@c
  3938  000E48  ECC2  F027         	call	_ctoa	;wreg free
  3939  000E4C  C021  F0C1         	movff	?_ctoa,?_vfpfcnvrt
  3940  000E50  C022  F0C2         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3941  000E54  EFBF  F008         	goto	l928
  3942  000E58                     l9545:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3946  000E58  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3947  000E5C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3948  000E60  CFDE FFF6          	movff	postinc2,tblptrl
  3949  000E64  CFDD FFF7          	movff	postdec2,tblptrh
  3950  000E68                     	if	0	;tblptru may be non-zero
  3951  000E68                     	endif
  3952  000E68                     	if	0	;tblptru may be non-zero
  3953  000E68                     	endif
  3954  000E68  0008               	tblrd		*
  3955  000E6A  50F5               	movf	tablat,w,c
  3956  000E6C  0A64               	xorlw	100
  3957  000E6E  B4D8               	btfsc	status,2,c
  3958  000E70  EF3C  F007         	goto	u10791
  3959  000E74  EF3E  F007         	goto	u10790
  3960  000E78                     u10791:
  3961  000E78  EF50  F007         	goto	l9549
  3962  000E7C                     u10790:
  3963  000E7C                     
  3964                           ; BSR set to: 0
  3965  000E7C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3966  000E80  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3967  000E84  CFDE FFF6          	movff	postinc2,tblptrl
  3968  000E88  CFDD FFF7          	movff	postdec2,tblptrh
  3969  000E8C                     	if	0	;tblptru may be non-zero
  3970  000E8C                     	endif
  3971  000E8C                     	if	0	;tblptru may be non-zero
  3972  000E8C                     	endif
  3973  000E8C  0008               	tblrd		*
  3974  000E8E  50F5               	movf	tablat,w,c
  3975  000E90  0A69               	xorlw	105
  3976  000E92  A4D8               	btfss	status,2,c
  3977  000E94  EF4E  F007         	goto	u10801
  3978  000E98  EF50  F007         	goto	u10800
  3979  000E9C                     u10801:
  3980  000E9C  EF90  F007         	goto	l9555
  3981  000EA0                     u10800:
  3982  000EA0                     l9549:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3986  000EA0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3987  000EA4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3988  000EA8  2ADE               	incf	postinc2,f,c
  3989  000EAA  0E00               	movlw	0
  3990  000EAC  22DD               	addwfc	postdec2,f,c
  3991                           
  3992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3993  000EAE  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3994  000EB2  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3995  000EB6  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  3996  000EBA  0E02               	movlw	2
  3997  000EBC  26DE               	addwf	postinc2,f,c
  3998  000EBE  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  3999  000EC2  0E00               	movlw	0
  4000  000EC4  22DD               	addwfc	postdec2,f,c
  4001  000EC6  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4002  000ECA  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4003  000ECE  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  4004  000ED2  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  4005  000ED6  0E00               	movlw	0
  4006  000ED8  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4007  000EDA  0EFF               	movlw	-1
  4008  000EDC  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4009  000EDE  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4010  000EE0  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4011  000EE2  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4012  000EE4  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4013  000EE6  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4014  000EE8                     
  4015                           ; BSR set to: 0
  4016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4017  000EE8  C0C1  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  4018  000EEC  C0C2  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4019  000EF0  C0CB  F023         	movff	vfpfcnvrt@ll,dtoa@d
  4020  000EF4  C0CC  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4021  000EF8  C0CD  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4022  000EFC  C0CE  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4023  000F00  C0CF  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4024  000F04  C0D0  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4025  000F08  C0D1  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4026  000F0C  C0D2  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4027  000F10  EC47  F015         	call	_dtoa	;wreg free
  4028  000F14  C021  F0C1         	movff	?_dtoa,?_vfpfcnvrt
  4029  000F18  C022  F0C2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4030  000F1C  EFBF  F008         	goto	l928
  4031  000F20                     l9555:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  4035  000F20  0E66               	movlw	102
  4036  000F22  19DB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4037  000F24  A4D8               	btfss	status,2,c
  4038  000F26  EF97  F007         	goto	u10811
  4039  000F2A  EF99  F007         	goto	u10810
  4040  000F2E                     u10811:
  4041  000F2E  EFD9  F007         	goto	l9567
  4042  000F32                     u10810:
  4043  000F32                     
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  4046  000F32  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4047  000F36  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4048  000F3A  CFDE FFF6          	movff	postinc2,tblptrl
  4049  000F3E  CFDD FFF7          	movff	postdec2,tblptrh
  4050  000F42                     	if	0	;tblptru may be non-zero
  4051  000F42                     	endif
  4052  000F42                     	if	0	;tblptru may be non-zero
  4053  000F42                     	endif
  4054  000F42  0008               	tblrd		*
  4055  000F44  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  4056  000F48                     
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  4059  000F48  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4060  000F4C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4061  000F50  2ADE               	incf	postinc2,f,c
  4062  000F52  0E00               	movlw	0
  4063  000F54  22DD               	addwfc	postdec2,f,c
  4064  000F56                     
  4065                           ; BSR set to: 0
  4066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4067  000F56  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4068  000F5A  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4069  000F5E  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  4070  000F62  0E04               	movlw	4
  4071  000F64  26DE               	addwf	postinc2,f,c
  4072  000F66  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  4073  000F6A  0E00               	movlw	0
  4074  000F6C  22DD               	addwfc	postdec2,f,c
  4075  000F6E  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4076  000F72  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4077  000F76  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  4078  000F7A  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  4079  000F7E  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  4080  000F82  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  4081  000F86                     l9563:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  4085  000F86  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  4086  000F8A  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4087  000F8E  C0D7  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  4088  000F92  C0D8  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4089  000F96  C0D9  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4090  000F9A  C0DA  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4091  000F9E  C0DE  F083         	movff	vfpfcnvrt@c,efgtoa@c
  4092  000FA2  EC09  F000         	call	_efgtoa	;wreg free
  4093  000FA6  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  4094  000FAA  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4095  000FAE  EFBF  F008         	goto	l928
  4096  000FB2                     l9567:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4100  000FB2  0EDB               	movlw	low vfpfcnvrt@ct
  4101  000FB4  6E06               	movwf	strncmp@_l^0,c
  4102  000FB6  0E00               	movlw	high vfpfcnvrt@ct
  4103  000FB8  6E07               	movwf	(strncmp@_l+1)^0,c
  4104  000FBA  0EFC               	movlw	low STR_24
  4105  000FBC  6E08               	movwf	strncmp@_r^0,c
  4106  000FBE  0E7F               	movlw	high STR_24
  4107  000FC0  6E09               	movwf	(strncmp@_r+1)^0,c
  4108  000FC2  0E00               	movlw	0
  4109  000FC4  6E0B               	movwf	(strncmp@n+1)^0,c
  4110  000FC6  0E02               	movlw	2
  4111  000FC8  6E0A               	movwf	strncmp@n^0,c
  4112  000FCA  EC23  F021         	call	_strncmp	;wreg free
  4113  000FCE  5006               	movf	?_strncmp^0,w,c
  4114  000FD0  1007               	iorwf	(?_strncmp+1)^0,w,c
  4115  000FD2  A4D8               	btfss	status,2,c
  4116  000FD4  EFEE  F007         	goto	u10821
  4117  000FD8  EFF0  F007         	goto	u10820
  4118  000FDC                     u10821:
  4119  000FDC  EF6C  F008         	goto	l9583
  4120  000FE0                     u10820:
  4121  000FE0                     
  4122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4123  000FE0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4124  000FE4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4125  000FE8  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  4126  000FEC  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  4127  000FF0  0E01               	movlw	1
  4128  000FF2  0100               	movlb	0	; () banked
  4129  000FF4  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  4130  000FF6  0E00               	movlw	0
  4131  000FF8  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4132  000FFA  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4133  000FFE  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4134  001002                     	if	0	;tblptru may be non-zero
  4135  001002                     	endif
  4136  001002                     	if	0	;tblptru may be non-zero
  4137  001002                     	endif
  4138  001002  0008               	tblrd		*
  4139  001004  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  4140  001008  0EBF               	movlw	191
  4141  00100A  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  4142  00100C  0EFF               	movlw	255
  4143  00100E  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4144  001010  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4145  001014  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4146  001018  CFDE FFF6          	movff	postinc2,tblptrl
  4147  00101C  CFDD FFF7          	movff	postdec2,tblptrh
  4148  001020                     	if	0	;tblptru may be non-zero
  4149  001020                     	endif
  4150  001020                     	if	0	;tblptru may be non-zero
  4151  001020                     	endif
  4152  001020  0008               	tblrd		*
  4153  001022  50F5               	movf	tablat,w,c
  4154  001024  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4155  001026  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4156  001028  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  4157  00102A  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4158  00102C  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4159  00102E  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4160  001030  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4161  001032  E10A               	bnz	u10830
  4162  001034  0E1A               	movlw	26
  4163  001036  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4164  001038  A0D8               	btfss	status,0,c
  4165  00103A  EF21  F008         	goto	u10831
  4166  00103E  EF24  F008         	goto	u10830
  4167  001042                     u10831:
  4168  001042  0E01               	movlw	1
  4169  001044  EF25  F008         	goto	u10840
  4170  001048                     u10830:
  4171  001048  0E00               	movlw	0
  4172  00104A                     u10840:
  4173  00104A  6FD5               	movwf	_vfpfcnvrt$959& (0+255),b
  4174  00104C  6BD6               	clrf	(_vfpfcnvrt$959+1)& (0+255),b
  4175  00104E                     
  4176                           ; BSR set to: 0
  4177  00104E  51D5               	movf	_vfpfcnvrt$959& (0+255),w,b
  4178  001050  11D6               	iorwf	(_vfpfcnvrt$959+1)& (0+255),w,b
  4179  001052  B4D8               	btfsc	status,2,c
  4180  001054  EF2E  F008         	goto	u10851
  4181  001058  EF30  F008         	goto	u10850
  4182  00105C                     u10851:
  4183  00105C  EF4A  F008         	goto	l9577
  4184  001060                     u10850:
  4185  001060                     
  4186                           ; BSR set to: 0
  4187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4188  001060  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4189  001064  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4190  001068  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  4191  00106C  0E04               	movlw	4
  4192  00106E  26DE               	addwf	postinc2,f,c
  4193  001070  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  4194  001074  0E00               	movlw	0
  4195  001076  22DD               	addwfc	postdec2,f,c
  4196  001078  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4197  00107C  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4198  001080  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  4199  001084  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  4200  001088  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  4201  00108C  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  4202                           
  4203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  4204  001090  EF62  F008         	goto	l939
  4205  001094                     l9577:
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4209  001094  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4210  001098  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4211  00109C  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  4212  0010A0  0E04               	movlw	4
  4213  0010A2  26DE               	addwf	postinc2,f,c
  4214  0010A4  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  4215  0010A8  0E00               	movlw	0
  4216  0010AA  22DD               	addwfc	postdec2,f,c
  4217  0010AC  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4218  0010B0  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4219  0010B4  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  4220  0010B8  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  4221  0010BC  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  4222  0010C0  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  4223  0010C4                     l939:
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4227  0010C4  0E02               	movlw	2
  4228  0010C6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4229  0010CA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4230  0010CE  26DE               	addwf	postinc2,f,c
  4231  0010D0  0E00               	movlw	0
  4232  0010D2  22DD               	addwfc	postdec2,f,c
  4233  0010D4  EFC3  F007         	goto	l9563
  4234  0010D8                     l9583:
  4235                           
  4236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4237  0010D8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4238  0010DC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4239  0010E0  CFDE FFF6          	movff	postinc2,tblptrl
  4240  0010E4  CFDD FFF7          	movff	postdec2,tblptrh
  4241  0010E8                     	if	0	;tblptru may be non-zero
  4242  0010E8                     	endif
  4243  0010E8                     	if	0	;tblptru may be non-zero
  4244  0010E8                     	endif
  4245  0010E8  0008               	tblrd		*
  4246  0010EA  50F5               	movf	tablat,w,c
  4247  0010EC  0A25               	xorlw	37
  4248  0010EE  A4D8               	btfss	status,2,c
  4249  0010F0  EF7C  F008         	goto	u10861
  4250  0010F4  EF7E  F008         	goto	u10860
  4251  0010F8                     u10861:
  4252  0010F8  EF96  F008         	goto	l9593
  4253  0010FC                     u10860:
  4254  0010FC                     
  4255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4256  0010FC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4257  001100  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4258  001104  2ADE               	incf	postinc2,f,c
  4259  001106  0E00               	movlw	0
  4260  001108  22DD               	addwfc	postdec2,f,c
  4261  00110A                     
  4262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4263  00110A  0E00               	movlw	0
  4264  00110C  6E07               	movwf	(fputc@c+1)^0,c
  4265  00110E  0E25               	movlw	37
  4266  001110  6E06               	movwf	fputc@c^0,c
  4267  001112  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  4268  001116  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4269  00111A  EC8E  F021         	call	_fputc	;wreg free
  4270  00111E                     l9589:
  4271                           
  4272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4273  00111E  0E00               	movlw	0
  4274  001120  0100               	movlb	0	; () banked
  4275  001122  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4276  001124  0E01               	movlw	1
  4277  001126  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  4278  001128  EFBF  F008         	goto	l928
  4279  00112C                     l9593:
  4280                           
  4281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4282  00112C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4283  001130  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4284  001134  2ADE               	incf	postinc2,f,c
  4285  001136  0E00               	movlw	0
  4286  001138  22DD               	addwfc	postdec2,f,c
  4287  00113A                     
  4288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4289  00113A  0E00               	movlw	0
  4290  00113C  0100               	movlb	0	; () banked
  4291  00113E  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4292  001140  0E00               	movlw	0
  4293  001142  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  4294  001144  EFBF  F008         	goto	l928
  4295  001148                     l9599:
  4296                           
  4297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4298  001148  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4299  00114C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4300  001150  CFDE FFF6          	movff	postinc2,tblptrl
  4301  001154  CFDD FFF7          	movff	postdec2,tblptrh
  4302  001158                     	if	0	;tblptru may be non-zero
  4303  001158                     	endif
  4304  001158                     	if	0	;tblptru may be non-zero
  4305  001158                     	endif
  4306  001158  0008               	tblrd		*
  4307  00115A  50F5               	movf	tablat,w,c
  4308  00115C  6E06               	movwf	fputc@c^0,c
  4309  00115E  6A07               	clrf	(fputc@c+1)^0,c
  4310  001160  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  4311  001164  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4312  001168  EC8E  F021         	call	_fputc	;wreg free
  4313  00116C                     
  4314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4315  00116C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4316  001170  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4317  001174  2ADE               	incf	postinc2,f,c
  4318  001176  0E00               	movlw	0
  4319  001178  22DD               	addwfc	postdec2,f,c
  4320  00117A  EF8F  F008         	goto	l9589
  4321  00117E                     l928:
  4322  00117E  0012               	return		;funcret
  4323  001180                     __end_of_vfpfcnvrt:
  4324                           	opt callstack 0
  4325                           
  4326 ;; *************** function _strncmp *****************
  4327 ;; Defined at:
  4328 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  4331 ;;		 -> vfpfcnvrt@ct(3), 
  4332 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  4333 ;;		 -> STR_26(3), 
  4334 ;;  n               2    9[COMRAM] unsigned int 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  r               2   14[COMRAM] PTR const unsigned char 
  4337 ;;		 -> STR_26(3), 
  4338 ;;  l               2   12[COMRAM] PTR const unsigned char 
  4339 ;;		 -> vfpfcnvrt@ct(3), 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  2    5[COMRAM] int 
  4342 ;; Registers used:
  4343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4349 ;;      Params:         6       0       0       0       0       0       0       0       0
  4350 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4351 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4352 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4353 ;;Total ram usage:       11 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    2
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_vfpfcnvrt
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           	psect	text10
  4364  004246                     __ptext10:
  4365                           	opt callstack 0
  4366  004246                     _strncmp:
  4367                           	opt callstack 24
  4368  004246  C006  F00D         	movff	strncmp@_l,strncmp@l
  4369  00424A  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  4370  00424E  C008  F00F         	movff	strncmp@_r,strncmp@r
  4371  004252  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  4372  004256  060A               	decf	strncmp@n^0,f,c
  4373  004258  A0D8               	btfss	status,0,c
  4374  00425A  060B               	decf	(strncmp@n+1)^0,f,c
  4375  00425C  280A               	incf	strncmp@n^0,w,c
  4376  00425E  E106               	bnz	u10551
  4377  004260  280B               	incf	(strncmp@n+1)^0,w,c
  4378  004262  A4D8               	btfss	status,2,c
  4379  004264  EF36  F021         	goto	u10551
  4380  004268  EF38  F021         	goto	u10550
  4381  00426C                     u10551:
  4382  00426C  EF45  F021         	goto	l9411
  4383  004270                     u10550:
  4384  004270  0E00               	movlw	0
  4385  004272  6E07               	movwf	(?_strncmp+1)^0,c
  4386  004274  0E00               	movlw	0
  4387  004276  6E06               	movwf	?_strncmp^0,c
  4388  004278  EF8D  F021         	goto	l1763
  4389  00427C                     l9409:
  4390  00427C  4A0D               	infsnz	strncmp@l^0,f,c
  4391  00427E  2A0E               	incf	(strncmp@l+1)^0,f,c
  4392  004280  4A0F               	infsnz	strncmp@r^0,f,c
  4393  004282  2A10               	incf	(strncmp@r+1)^0,f,c
  4394  004284  060A               	decf	strncmp@n^0,f,c
  4395  004286  A0D8               	btfss	status,0,c
  4396  004288  060B               	decf	(strncmp@n+1)^0,f,c
  4397  00428A                     l9411:
  4398  00428A  C00D  FFD9         	movff	strncmp@l,fsr2l
  4399  00428E  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  4400  004292  50DF               	movf	indf2,w,c
  4401  004294  B4D8               	btfsc	status,2,c
  4402  004296  EF4F  F021         	goto	u10561
  4403  00429A  EF51  F021         	goto	u10560
  4404  00429E                     u10561:
  4405  00429E  EF7C  F021         	goto	l9419
  4406  0042A2                     u10560:
  4407  0042A2  C00F  FFF6         	movff	strncmp@r,tblptrl
  4408  0042A6  C010  FFF7         	movff	strncmp@r+1,tblptrh
  4409  0042AA                     	if	0	;tblptru may be non-zero
  4410  0042AA                     	endif
  4411  0042AA                     	if	0	;tblptru may be non-zero
  4412  0042AA                     	endif
  4413  0042AA  0008               	tblrd		*
  4414  0042AC  50F5               	movf	tablat,w,c
  4415  0042AE  0900               	iorlw	0
  4416  0042B0  B4D8               	btfsc	status,2,c
  4417  0042B2  EF5D  F021         	goto	u10571
  4418  0042B6  EF5F  F021         	goto	u10570
  4419  0042BA                     u10571:
  4420  0042BA  EF7C  F021         	goto	l9419
  4421  0042BE                     u10570:
  4422  0042BE  500A               	movf	strncmp@n^0,w,c
  4423  0042C0  100B               	iorwf	(strncmp@n+1)^0,w,c
  4424  0042C2  B4D8               	btfsc	status,2,c
  4425  0042C4  EF66  F021         	goto	u10581
  4426  0042C8  EF68  F021         	goto	u10580
  4427  0042CC                     u10581:
  4428  0042CC  EF7C  F021         	goto	l9419
  4429  0042D0                     u10580:
  4430  0042D0  C00D  FFD9         	movff	strncmp@l,fsr2l
  4431  0042D4  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  4432  0042D8  50DF               	movf	indf2,w,c
  4433  0042DA  6E0C               	movwf	??_strncmp^0,c
  4434  0042DC  C00F  FFF6         	movff	strncmp@r,tblptrl
  4435  0042E0  C010  FFF7         	movff	strncmp@r+1,tblptrh
  4436  0042E4                     	if	0	;tblptru may be non-zero
  4437  0042E4                     	endif
  4438  0042E4                     	if	0	;tblptru may be non-zero
  4439  0042E4                     	endif
  4440  0042E4  0008               	tblrd		*
  4441  0042E6  50F5               	movf	tablat,w,c
  4442  0042E8  180C               	xorwf	??_strncmp^0,w,c
  4443  0042EA  B4D8               	btfsc	status,2,c
  4444  0042EC  EF7A  F021         	goto	u10591
  4445  0042F0  EF7C  F021         	goto	u10590
  4446  0042F4                     u10591:
  4447  0042F4  EF3E  F021         	goto	l9409
  4448  0042F8                     u10590:
  4449  0042F8                     l9419:
  4450  0042F8  C00D  FFD9         	movff	strncmp@l,fsr2l
  4451  0042FC  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  4452  004300  50DF               	movf	indf2,w,c
  4453  004302  6E0C               	movwf	??_strncmp^0,c
  4454  004304  C00F  FFF6         	movff	strncmp@r,tblptrl
  4455  004308  C010  FFF7         	movff	strncmp@r+1,tblptrh
  4456  00430C                     	if	0	;tblptru may be non-zero
  4457  00430C                     	endif
  4458  00430C                     	if	0	;tblptru may be non-zero
  4459  00430C                     	endif
  4460  00430C  0008               	tblrd		*
  4461  00430E  50F5               	movf	tablat,w,c
  4462  004310  5C0C               	subwf	??_strncmp^0,w,c
  4463  004312  6E06               	movwf	?_strncmp^0,c
  4464  004314  6A07               	clrf	(?_strncmp+1)^0,c
  4465  004316  A0D8               	btfss	status,0,c
  4466  004318  0607               	decf	(?_strncmp+1)^0,f,c
  4467  00431A                     l1763:
  4468  00431A  0012               	return		;funcret
  4469  00431C                     __end_of_strncmp:
  4470                           	opt callstack 0
  4471                           
  4472 ;; *************** function _efgtoa *****************
  4473 ;; Defined at:
  4474 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  4477 ;;		 -> sprintf@f(6), 
  4478 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  4479 ;;  c               1   35[BANK0 ] unsigned char 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;  u               4   93[BANK0 ] unsigned char 
  4482 ;;  g               4   85[BANK0 ] unsigned char 
  4483 ;;  l               4   79[BANK0 ] unsigned char 
  4484 ;;  h               4   75[BANK0 ] unsigned char 
  4485 ;;  ou              4   41[BANK0 ] unsigned char 
  4486 ;;  n               2   91[BANK0 ] int 
  4487 ;;  e               2   89[BANK0 ] int 
  4488 ;;  i               2   83[BANK0 ] int 
  4489 ;;  w               2   72[BANK0 ] int 
  4490 ;;  p               2   69[BANK0 ] int 
  4491 ;;  sign            2   67[BANK0 ] int 
  4492 ;;  d               2   65[BANK0 ] int 
  4493 ;;  ne              2   63[BANK0 ] int 
  4494 ;;  m               2   61[BANK0 ] int 
  4495 ;;  pp              2   59[BANK0 ] int 
  4496 ;;  t               2   57[BANK0 ] int 
  4497 ;;  mode            1   74[BANK0 ] unsigned char 
  4498 ;;  nmode           1   71[BANK0 ] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  2   29[BANK0 ] int 
  4501 ;; Registers used:
  4502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4508 ;;      Params:         0       7       0       0       0       0       0       0       0
  4509 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4510 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4511 ;;      Totals:         0      68       0       0       0       0       0       0       0
  4512 ;;Total ram usage:       68 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    6
  4515 ;; This function calls:
  4516 ;;		___awdiv
  4517 ;;		___awmod
  4518 ;;		___fladd
  4519 ;;		___fldiv
  4520 ;;		___fleq
  4521 ;;		___flge
  4522 ;;		___flmul
  4523 ;;		___flneg
  4524 ;;		___flsub
  4525 ;;		___fltol
  4526 ;;		___fpclassifyf
  4527 ;;		_floorf
  4528 ;;		_isupper
  4529 ;;		_pad
  4530 ;;		_strcpy
  4531 ;;		_tolower
  4532 ;; This function is called by:
  4533 ;;		_vfpfcnvrt
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text11
  4538  000012                     __ptext11:
  4539                           	opt callstack 0
  4540  000012                     _efgtoa:
  4541                           	opt callstack 20
  4542  000012                     
  4543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  4544  000012  0E00               	movlw	0
  4545  000014  0100               	movlb	0	; () banked
  4546  000016  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4547  000018  0E00               	movlw	0
  4548  00001A  6FA3               	movwf	efgtoa@sign& (0+255),b
  4549  00001C                     
  4550                           ; BSR set to: 0
  4551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  4552  00001C  C07F  F0B5         	movff	efgtoa@f,efgtoa@g
  4553  000020  C080  F0B6         	movff	efgtoa@f+1,efgtoa@g+1
  4554  000024  C081  F0B7         	movff	efgtoa@f+2,efgtoa@g+2
  4555  000028  C082  F0B8         	movff	efgtoa@f+3,efgtoa@g+3
  4556  00002C                     
  4557                           ; BSR set to: 0
  4558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  4559  00002C  BFB8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4560  00002E  EF1D  F000         	goto	u9960
  4561  000032  EF1B  F000         	goto	u9961
  4562  000036                     u9961:
  4563  000036  EF33  F000         	goto	l9073
  4564  00003A                     u9960:
  4565  00003A                     
  4566                           ; BSR set to: 0
  4567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  4568  00003A  0E00               	movlw	0
  4569  00003C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4570  00003E  0E01               	movlw	1
  4571  000040  6FA3               	movwf	efgtoa@sign& (0+255),b
  4572  000042                     
  4573                           ; BSR set to: 0
  4574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  4575  000042  C0B5  F006         	movff	efgtoa@g,___flneg@f1
  4576  000046  C0B6  F007         	movff	efgtoa@g+1,___flneg@f1+1
  4577  00004A  C0B7  F008         	movff	efgtoa@g+2,___flneg@f1+2
  4578  00004E  C0B8  F009         	movff	efgtoa@g+3,___flneg@f1+3
  4579  000052  EC11  F02A         	call	___flneg	;wreg free
  4580  000056  C006  F0B5         	movff	?___flneg,efgtoa@g
  4581  00005A  C007  F0B6         	movff	?___flneg+1,efgtoa@g+1
  4582  00005E  C008  F0B7         	movff	?___flneg+2,efgtoa@g+2
  4583  000062  C009  F0B8         	movff	?___flneg+3,efgtoa@g+3
  4584  000066                     l9073:
  4585                           
  4586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  4587  000066  0E00               	movlw	0
  4588  000068  0100               	movlb	0	; () banked
  4589  00006A  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  4590  00006C  0E00               	movlw	0
  4591  00006E  6FBB               	movwf	efgtoa@n& (0+255),b
  4592  000070                     
  4593                           ; BSR set to: 0
  4594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  4595  000070  C12E  F0A8         	movff	_width,efgtoa@w
  4596  000074  C12F  F0A9         	movff	_width+1,efgtoa@w+1
  4597  000078                     
  4598                           ; BSR set to: 0
  4599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  4600  000078  51A3               	movf	efgtoa@sign& (0+255),w,b
  4601  00007A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4602  00007C  A4D8               	btfss	status,2,c
  4603  00007E  EF43  F000         	goto	u9971
  4604  000082  EF45  F000         	goto	u9970
  4605  000086                     u9971:
  4606  000086  EF4D  F000         	goto	l9081
  4607  00008A                     u9970:
  4608  00008A                     
  4609                           ; BSR set to: 0
  4610  00008A  0101               	movlb	1	; () banked
  4611  00008C  A532               	btfss	_flags& (0+255),2,b
  4612  00008E  EF4B  F000         	goto	u9981
  4613  000092  EF4D  F000         	goto	u9980
  4614  000096                     u9981:
  4615  000096  EF68  F000         	goto	l9093
  4616  00009A                     u9980:
  4617  00009A                     l9081:
  4618                           
  4619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  4620  00009A  0100               	movlb	0	; () banked
  4621  00009C  51A3               	movf	efgtoa@sign& (0+255),w,b
  4622  00009E  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4623  0000A0  A4D8               	btfss	status,2,c
  4624  0000A2  EF55  F000         	goto	u9991
  4625  0000A6  EF57  F000         	goto	u9990
  4626  0000AA                     u9991:
  4627  0000AA  EF5D  F000         	goto	l9085
  4628  0000AE                     u9990:
  4629  0000AE                     
  4630                           ; BSR set to: 0
  4631  0000AE  0E00               	movlw	0
  4632  0000B0  6F8E               	movwf	(_efgtoa$928+1)& (0+255),b
  4633  0000B2  0E2B               	movlw	43
  4634  0000B4  6F8D               	movwf	_efgtoa$928& (0+255),b
  4635  0000B6  EF61  F000         	goto	l9087
  4636  0000BA                     l9085:
  4637                           
  4638                           ; BSR set to: 0
  4639  0000BA  0E00               	movlw	0
  4640  0000BC  6F8E               	movwf	(_efgtoa$928+1)& (0+255),b
  4641  0000BE  0E2D               	movlw	45
  4642  0000C0  6F8D               	movwf	_efgtoa$928& (0+255),b
  4643  0000C2                     l9087:
  4644                           
  4645                           ; BSR set to: 0
  4646  0000C2  C08D  F140         	movff	_efgtoa$928,_dbuf
  4647  0000C6                     
  4648                           ; BSR set to: 0
  4649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  4650  0000C6  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4651  0000C8  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4652  0000CA                     
  4653                           ; BSR set to: 0
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  4655  0000CA  07A8               	decf	efgtoa@w& (0+255),f,b
  4656  0000CC  A0D8               	btfss	status,0,c
  4657  0000CE  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4658  0000D0                     l9093:
  4659                           
  4660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4661  0000D0  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  4662  0000D4  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4663  0000D8  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4664  0000DC  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4665  0000E0  ECA4  F020         	call	___fpclassifyf	;wreg free
  4666  0000E4  0406               	decf	?___fpclassifyf^0,w,c
  4667  0000E6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  4668  0000E8  A4D8               	btfss	status,2,c
  4669  0000EA  EF79  F000         	goto	u10001
  4670  0000EE  EF7B  F000         	goto	u10000
  4671  0000F2                     u10001:
  4672  0000F2  EFD2  F000         	goto	l9111
  4673  0000F6                     u10000:
  4674  0000F6  0EBF               	movlw	191
  4675  0000F8  0100               	movlb	0	; () banked
  4676  0000FA  6F84               	movwf	??_efgtoa& (0+255),b
  4677  0000FC  0EFF               	movlw	255
  4678  0000FE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  4679  000100  5183               	movf	efgtoa@c& (0+255),w,b
  4680  000102  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  4681  000104  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  4682  000106  5184               	movf	??_efgtoa& (0+255),w,b
  4683  000108  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  4684  00010A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  4685  00010C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4686  00010E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  4687  000110  E10A               	bnz	u10010
  4688  000112  0E1A               	movlw	26
  4689  000114  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  4690  000116  A0D8               	btfss	status,0,c
  4691  000118  EF90  F000         	goto	u10011
  4692  00011C  EF93  F000         	goto	u10010
  4693  000120                     u10011:
  4694  000120  0E01               	movlw	1
  4695  000122  EF94  F000         	goto	u10020
  4696  000126                     u10010:
  4697  000126  0E00               	movlw	0
  4698  000128                     u10020:
  4699  000128  6F8F               	movwf	_efgtoa$929& (0+255),b
  4700  00012A  6B90               	clrf	(_efgtoa$929+1)& (0+255),b
  4701  00012C                     
  4702                           ; BSR set to: 0
  4703  00012C  518F               	movf	_efgtoa$929& (0+255),w,b
  4704  00012E  1190               	iorwf	(_efgtoa$929+1)& (0+255),w,b
  4705  000130  B4D8               	btfsc	status,2,c
  4706  000132  EF9D  F000         	goto	u10031
  4707  000136  EF9F  F000         	goto	u10030
  4708  00013A                     u10031:
  4709  00013A  EFAD  F000         	goto	l9103
  4710  00013E                     u10030:
  4711  00013E                     
  4712                           ; BSR set to: 0
  4713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  4714  00013E  0E40               	movlw	low _dbuf
  4715  000140  25BB               	addwf	efgtoa@n& (0+255),w,b
  4716  000142  6E06               	movwf	strcpy@dest^0,c
  4717  000144  0E01               	movlw	high _dbuf
  4718  000146  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4719  000148  6E07               	movwf	(strcpy@dest+1)^0,c
  4720  00014A  0EEC               	movlw	low STR_16
  4721  00014C  6E08               	movwf	strcpy@src^0,c
  4722  00014E  0E7F               	movlw	high STR_16
  4723  000150  6E09               	movwf	(strcpy@src+1)^0,c
  4724  000152  EC94  F027         	call	_strcpy	;wreg free
  4725                           
  4726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  4727  000156  EFB9  F000         	goto	l9105
  4728  00015A                     l9103:
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  4732  00015A  0E40               	movlw	low _dbuf
  4733  00015C  25BB               	addwf	efgtoa@n& (0+255),w,b
  4734  00015E  6E06               	movwf	strcpy@dest^0,c
  4735  000160  0E01               	movlw	high _dbuf
  4736  000162  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4737  000164  6E07               	movwf	(strcpy@dest+1)^0,c
  4738  000166  0EF4               	movlw	low STR_17
  4739  000168  6E08               	movwf	strcpy@src^0,c
  4740  00016A  0E7F               	movlw	high STR_17
  4741  00016C  6E09               	movwf	(strcpy@src+1)^0,c
  4742  00016E  EC94  F027         	call	_strcpy	;wreg free
  4743  000172                     l9105:
  4744                           
  4745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4746  000172  0100               	movlb	0	; () banked
  4747  000174  0EFD               	movlw	253
  4748  000176  27A8               	addwf	efgtoa@w& (0+255),f,b
  4749  000178  0EFF               	movlw	255
  4750  00017A  23A9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4751  00017C                     l9107:
  4752                           
  4753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  4754  00017C  C07D  F016         	movff	efgtoa@fp,pad@fp
  4755  000180  C07E  F017         	movff	efgtoa@fp+1,pad@fp+1
  4756  000184  0E40               	movlw	low _dbuf
  4757  000186  6E18               	movwf	pad@buf^0,c
  4758  000188  0E01               	movlw	high _dbuf
  4759  00018A  6E19               	movwf	(pad@buf+1)^0,c
  4760  00018C  C0A8  F01A         	movff	efgtoa@w,pad@p
  4761  000190  C0A9  F01B         	movff	efgtoa@w+1,pad@p+1
  4762  000194  EC57  F022         	call	_pad	;wreg free
  4763  000198  C016  F07D         	movff	?_pad,?_efgtoa
  4764  00019C  C017  F07E         	movff	?_pad+1,?_efgtoa+1
  4765  0001A0  EFEB  F005         	goto	l838
  4766  0001A4                     l9111:
  4767                           
  4768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4769  0001A4  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  4770  0001A8  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4771  0001AC  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4772  0001B0  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4773  0001B4  ECA4  F020         	call	___fpclassifyf	;wreg free
  4774  0001B8  5006               	movf	?___fpclassifyf^0,w,c
  4775  0001BA  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  4776  0001BC  A4D8               	btfss	status,2,c
  4777  0001BE  EFE3  F000         	goto	u10041
  4778  0001C2  EFE5  F000         	goto	u10040
  4779  0001C6                     u10041:
  4780  0001C6  EF25  F001         	goto	l9129
  4781  0001CA                     u10040:
  4782  0001CA  0EBF               	movlw	191
  4783  0001CC  0100               	movlb	0	; () banked
  4784  0001CE  6F84               	movwf	??_efgtoa& (0+255),b
  4785  0001D0  0EFF               	movlw	255
  4786  0001D2  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  4787  0001D4  5183               	movf	efgtoa@c& (0+255),w,b
  4788  0001D6  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  4789  0001D8  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  4790  0001DA  5184               	movf	??_efgtoa& (0+255),w,b
  4791  0001DC  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  4792  0001DE  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  4793  0001E0  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4794  0001E2  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  4795  0001E4  E10A               	bnz	u10050
  4796  0001E6  0E1A               	movlw	26
  4797  0001E8  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  4798  0001EA  A0D8               	btfss	status,0,c
  4799  0001EC  EFFA  F000         	goto	u10051
  4800  0001F0  EFFD  F000         	goto	u10050
  4801  0001F4                     u10051:
  4802  0001F4  0E01               	movlw	1
  4803  0001F6  EFFE  F000         	goto	u10060
  4804  0001FA                     u10050:
  4805  0001FA  0E00               	movlw	0
  4806  0001FC                     u10060:
  4807  0001FC  6F91               	movwf	_efgtoa$933& (0+255),b
  4808  0001FE  6B92               	clrf	(_efgtoa$933+1)& (0+255),b
  4809  000200                     
  4810                           ; BSR set to: 0
  4811  000200  5191               	movf	_efgtoa$933& (0+255),w,b
  4812  000202  1192               	iorwf	(_efgtoa$933+1)& (0+255),w,b
  4813  000204  B4D8               	btfsc	status,2,c
  4814  000206  EF07  F001         	goto	u10071
  4815  00020A  EF09  F001         	goto	u10070
  4816  00020E                     u10071:
  4817  00020E  EF17  F001         	goto	l9121
  4818  000212                     u10070:
  4819  000212                     
  4820                           ; BSR set to: 0
  4821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4822  000212  0E40               	movlw	low _dbuf
  4823  000214  25BB               	addwf	efgtoa@n& (0+255),w,b
  4824  000216  6E06               	movwf	strcpy@dest^0,c
  4825  000218  0E01               	movlw	high _dbuf
  4826  00021A  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4827  00021C  6E07               	movwf	(strcpy@dest+1)^0,c
  4828  00021E  0EF0               	movlw	low STR_20
  4829  000220  6E08               	movwf	strcpy@src^0,c
  4830  000222  0E7F               	movlw	high STR_20
  4831  000224  6E09               	movwf	(strcpy@src+1)^0,c
  4832  000226  EC94  F027         	call	_strcpy	;wreg free
  4833                           
  4834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4835  00022A  EFB9  F000         	goto	l9105
  4836  00022E                     l9121:
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4840  00022E  0E40               	movlw	low _dbuf
  4841  000230  25BB               	addwf	efgtoa@n& (0+255),w,b
  4842  000232  6E06               	movwf	strcpy@dest^0,c
  4843  000234  0E01               	movlw	high _dbuf
  4844  000236  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4845  000238  6E07               	movwf	(strcpy@dest+1)^0,c
  4846  00023A  0EF8               	movlw	low STR_21
  4847  00023C  6E08               	movwf	strcpy@src^0,c
  4848  00023E  0E7F               	movlw	high STR_21
  4849  000240  6E09               	movwf	(strcpy@src+1)^0,c
  4850  000242  EC94  F027         	call	_strcpy	;wreg free
  4851  000246  EFB9  F000         	goto	l9105
  4852  00024A                     l9129:
  4853                           
  4854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4855  00024A  0E00               	movlw	0
  4856  00024C  0100               	movlb	0	; () banked
  4857  00024E  6FBD               	movwf	efgtoa@u& (0+255),b
  4858  000250  0E00               	movlw	0
  4859  000252  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  4860  000254  0E80               	movlw	128
  4861  000256  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  4862  000258  0E3F               	movlw	63
  4863  00025A  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  4864                           
  4865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4866  00025C  0E00               	movlw	0
  4867  00025E  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  4868  000260  0E00               	movlw	0
  4869  000262  6FB9               	movwf	efgtoa@e& (0+255),b
  4870  000264                     
  4871                           ; BSR set to: 0
  4872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4873  000264  C0B5  F006         	movff	efgtoa@g,___fleq@ff1
  4874  000268  C0B6  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  4875  00026C  C0B7  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  4876  000270  C0B8  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  4877  000274  0E00               	movlw	0
  4878  000276  6E0A               	movwf	___fleq@ff2^0,c
  4879  000278  0E00               	movlw	0
  4880  00027A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  4881  00027C  0E00               	movlw	0
  4882  00027E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  4883  000280  0E00               	movlw	0
  4884  000282  6E0D               	movwf	(___fleq@ff2+3)^0,c
  4885  000284  EC2C  F024         	call	___fleq	;wreg free
  4886  000288  B0D8               	btfsc	status,0,c
  4887  00028A  EF49  F001         	goto	u10081
  4888  00028E  EF4B  F001         	goto	u10080
  4889  000292                     u10081:
  4890  000292  EFCE  F001         	goto	l9147
  4891  000296                     u10080:
  4892  000296  EF6A  F001         	goto	l9139
  4893  00029A                     l9135:
  4894                           
  4895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4896  00029A  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  4897  00029E  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  4898  0002A2  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  4899  0002A6  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  4900  0002AA  0E00               	movlw	0
  4901  0002AC  6E1F               	movwf	___flmul@a^0,c
  4902  0002AE  0E00               	movlw	0
  4903  0002B0  6E20               	movwf	(___flmul@a+1)^0,c
  4904  0002B2  0E20               	movlw	32
  4905  0002B4  6E21               	movwf	(___flmul@a+2)^0,c
  4906  0002B6  0E41               	movlw	65
  4907  0002B8  6E22               	movwf	(___flmul@a+3)^0,c
  4908  0002BA  EC8B  F00F         	call	___flmul	;wreg free
  4909  0002BE  C01B  F0BD         	movff	?___flmul,efgtoa@u
  4910  0002C2  C01C  F0BE         	movff	?___flmul+1,efgtoa@u+1
  4911  0002C6  C01D  F0BF         	movff	?___flmul+2,efgtoa@u+2
  4912  0002CA  C01E  F0C0         	movff	?___flmul+3,efgtoa@u+3
  4913  0002CE                     
  4914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4915  0002CE  0100               	movlb	0	; () banked
  4916  0002D0  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  4917  0002D2  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  4918  0002D4                     l9139:
  4919                           
  4920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4921  0002D4  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  4922  0002D8  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  4923  0002DC  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  4924  0002E0  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  4925  0002E4  0E00               	movlw	0
  4926  0002E6  6E1F               	movwf	___flmul@a^0,c
  4927  0002E8  0E00               	movlw	0
  4928  0002EA  6E20               	movwf	(___flmul@a+1)^0,c
  4929  0002EC  0E20               	movlw	32
  4930  0002EE  6E21               	movwf	(___flmul@a+2)^0,c
  4931  0002F0  0E41               	movlw	65
  4932  0002F2  6E22               	movwf	(___flmul@a+3)^0,c
  4933  0002F4  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  4934  0002F8  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  4935  0002FC  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  4936  000300  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  4937  000304  EC8B  F00F         	call	___flmul	;wreg free
  4938  000308  C01B  F038         	movff	?___flmul,___flge@ff2
  4939  00030C  C01C  F039         	movff	?___flmul+1,___flge@ff2+1
  4940  000310  C01D  F03A         	movff	?___flmul+2,___flge@ff2+2
  4941  000314  C01E  F03B         	movff	?___flmul+3,___flge@ff2+3
  4942  000318  EC22  F020         	call	___flge	;wreg free
  4943  00031C  B0D8               	btfsc	status,0,c
  4944  00031E  EF93  F001         	goto	u10091
  4945  000322  EF95  F001         	goto	u10090
  4946  000326                     u10091:
  4947  000326  EF4D  F001         	goto	l9135
  4948  00032A                     u10090:
  4949  00032A  EFB5  F001         	goto	l9145
  4950  00032E                     l9141:
  4951                           
  4952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4953  00032E  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  4954  000332  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  4955  000336  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  4956  00033A  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  4957  00033E  0E00               	movlw	0
  4958  000340  6E48               	movwf	___fldiv@a^0,c
  4959  000342  0E00               	movlw	0
  4960  000344  6E49               	movwf	(___fldiv@a+1)^0,c
  4961  000346  0E20               	movlw	32
  4962  000348  6E4A               	movwf	(___fldiv@a+2)^0,c
  4963  00034A  0E41               	movlw	65
  4964  00034C  6E4B               	movwf	(___fldiv@a+3)^0,c
  4965  00034E  EC79  F013         	call	___fldiv	;wreg free
  4966  000352  C044  F0BD         	movff	?___fldiv,efgtoa@u
  4967  000356  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  4968  00035A  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  4969  00035E  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  4970  000362                     
  4971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4972  000362  0100               	movlb	0	; () banked
  4973  000364  07B9               	decf	efgtoa@e& (0+255),f,b
  4974  000366  A0D8               	btfss	status,0,c
  4975  000368  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  4976  00036A                     l9145:
  4977                           
  4978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4979  00036A  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  4980  00036E  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  4981  000372  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  4982  000376  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  4983  00037A  C0BD  F038         	movff	efgtoa@u,___flge@ff2
  4984  00037E  C0BE  F039         	movff	efgtoa@u+1,___flge@ff2+1
  4985  000382  C0BF  F03A         	movff	efgtoa@u+2,___flge@ff2+2
  4986  000386  C0C0  F03B         	movff	efgtoa@u+3,___flge@ff2+3
  4987  00038A  EC22  F020         	call	___flge	;wreg free
  4988  00038E  A0D8               	btfss	status,0,c
  4989  000390  EFCC  F001         	goto	u10101
  4990  000394  EFCE  F001         	goto	u10100
  4991  000398                     u10101:
  4992  000398  EF97  F001         	goto	l9141
  4993  00039C                     u10100:
  4994  00039C                     l9147:
  4995                           
  4996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4997  00039C  C083  F00C         	movff	efgtoa@c,tolower@c
  4998  0003A0  6A0D               	clrf	(tolower@c+1)^0,c
  4999  0003A2  EC35  F027         	call	_tolower	;wreg free
  5000  0003A6  500C               	movf	?_tolower^0,w,c
  5001  0003A8  0100               	movlb	0	; () banked
  5002  0003AA  6FAA               	movwf	efgtoa@mode& (0+255),b
  5003  0003AC                     
  5004                           ; BSR set to: 0
  5005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  5006  0003AC  C0AA  F0A7         	movff	efgtoa@mode,efgtoa@nmode
  5007  0003B0                     
  5008                           ; BSR set to: 0
  5009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  5010  0003B0  0E67               	movlw	103
  5011  0003B2  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  5012  0003B4  A4D8               	btfss	status,2,c
  5013  0003B6  EFDF  F001         	goto	u10111
  5014  0003BA  EFE1  F001         	goto	u10110
  5015  0003BE                     u10111:
  5016  0003BE  EF09  F002         	goto	l9161
  5017  0003C2                     u10110:
  5018  0003C2                     
  5019                           ; BSR set to: 0
  5020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  5021  0003C2  0101               	movlb	1	; () banked
  5022  0003C4  5130               	movf	_prec& (0+255),w,b
  5023  0003C6  1131               	iorwf	(_prec+1)& (0+255),w,b
  5024  0003C8  A4D8               	btfss	status,2,c
  5025  0003CA  EFE9  F001         	goto	u10121
  5026  0003CE  EFEB  F001         	goto	u10120
  5027  0003D2                     u10121:
  5028  0003D2  EFEF  F001         	goto	l9157
  5029  0003D6                     u10120:
  5030  0003D6                     
  5031                           ; BSR set to: 1
  5032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  5033  0003D6  0E00               	movlw	0
  5034  0003D8  6F31               	movwf	(_prec+1)& (0+255),b
  5035  0003DA  0E01               	movlw	1
  5036  0003DC  6F30               	movwf	_prec& (0+255),b
  5037  0003DE                     l9157:
  5038                           
  5039                           ; BSR set to: 1
  5040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  5041  0003DE  BF31               	btfsc	(_prec+1)& (0+255),7,b
  5042  0003E0  EFFC  F001         	goto	u10130
  5043  0003E4  5131               	movf	(_prec+1)& (0+255),w,b
  5044  0003E6  E106               	bnz	u10131
  5045  0003E8  0530               	decf	_prec& (0+255),w,b
  5046  0003EA  B0D8               	btfsc	status,0,c
  5047  0003EC  EFFA  F001         	goto	u10131
  5048  0003F0  EFFC  F001         	goto	u10130
  5049  0003F4                     u10131:
  5050  0003F4  EF03  F002         	goto	l856
  5051  0003F8                     u10130:
  5052  0003F8                     l9159:
  5053                           
  5054                           ; BSR set to: 1
  5055  0003F8  0E00               	movlw	0
  5056  0003FA  0100               	movlb	0	; () banked
  5057  0003FC  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  5058  0003FE  0E06               	movlw	6
  5059  000400  6FA5               	movwf	efgtoa@p& (0+255),b
  5060  000402  EF13  F002         	goto	l9167
  5061  000406                     l856:
  5062                           
  5063                           ; BSR set to: 1
  5064  000406  C130  F0A5         	movff	_prec,efgtoa@p
  5065  00040A  C131  F0A6         	movff	_prec+1,efgtoa@p+1
  5066  00040E  EF13  F002         	goto	l9167
  5067  000412                     l9161:
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  5071  000412  0101               	movlb	1	; () banked
  5072  000414  BF31               	btfsc	(_prec+1)& (0+255),7,b
  5073  000416  EF0F  F002         	goto	u10141
  5074  00041A  EF11  F002         	goto	u10140
  5075  00041E                     u10141:
  5076  00041E  EFFC  F001         	goto	l9159
  5077  000422                     u10140:
  5078  000422  EF03  F002         	goto	l856
  5079  000426                     l9167:
  5080                           
  5081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  5082  000426  0E67               	movlw	103
  5083  000428  0100               	movlb	0	; () banked
  5084  00042A  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  5085  00042C  A4D8               	btfss	status,2,c
  5086  00042E  EF1B  F002         	goto	u10151
  5087  000432  EF1D  F002         	goto	u10150
  5088  000436                     u10151:
  5089  000436  EF4C  F002         	goto	l9177
  5090  00043A                     u10150:
  5091  00043A                     
  5092                           ; BSR set to: 0
  5093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  5094  00043A  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  5095  00043C  EF2B  F002         	goto	u10160
  5096  000440  0EFC               	movlw	252
  5097  000442  5DB9               	subwf	efgtoa@e& (0+255),w,b
  5098  000444  0EFF               	movlw	255
  5099  000446  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5100  000448  A0D8               	btfss	status,0,c
  5101  00044A  EF29  F002         	goto	u10161
  5102  00044E  EF2B  F002         	goto	u10160
  5103  000452                     u10161:
  5104  000452  EF4A  F002         	goto	l9175
  5105  000456                     u10160:
  5106  000456                     
  5107                           ; BSR set to: 0
  5108  000456  0EFF               	movlw	255
  5109  000458  6F84               	movwf	??_efgtoa& (0+255),b
  5110  00045A  0EFF               	movlw	255
  5111  00045C  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  5112  00045E  C0A5  F086         	movff	efgtoa@p,??_efgtoa+2
  5113  000462  C0A6  F087         	movff	efgtoa@p+1,??_efgtoa+3
  5114  000466  5184               	movf	??_efgtoa& (0+255),w,b
  5115  000468  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  5116  00046A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  5117  00046C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5118  00046E  51B9               	movf	efgtoa@e& (0+255),w,b
  5119  000470  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  5120  000472  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  5121  000474  0A80               	xorlw	128
  5122  000476  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  5123  000478  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  5124  00047A  0A80               	xorlw	128
  5125  00047C  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5126  00047E  A0D8               	btfss	status,0,c
  5127  000480  EF44  F002         	goto	u10171
  5128  000484  EF46  F002         	goto	u10170
  5129  000488                     u10171:
  5130  000488  EF4A  F002         	goto	l9175
  5131  00048C                     u10170:
  5132  00048C                     
  5133                           ; BSR set to: 0
  5134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  5135  00048C  0E66               	movlw	102
  5136  00048E  6FA7               	movwf	efgtoa@nmode& (0+255),b
  5137                           
  5138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  5139  000490  EF4C  F002         	goto	l9177
  5140  000494                     l9175:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  5144  000494  0E65               	movlw	101
  5145  000496  6FA7               	movwf	efgtoa@nmode& (0+255),b
  5146  000498                     l9177:
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  5150  000498  C0A5  F09D         	movff	efgtoa@p,efgtoa@m
  5151  00049C  C0A6  F09E         	movff	efgtoa@p+1,efgtoa@m+1
  5152  0004A0                     
  5153                           ; BSR set to: 0
  5154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  5155  0004A0  0E67               	movlw	103
  5156  0004A2  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  5157  0004A4  A4D8               	btfss	status,2,c
  5158  0004A6  EF57  F002         	goto	u10181
  5159  0004AA  EF59  F002         	goto	u10180
  5160  0004AE                     u10181:
  5161  0004AE  EF69  F002         	goto	l9185
  5162  0004B2                     u10180:
  5163  0004B2                     
  5164                           ; BSR set to: 0
  5165  0004B2  0E66               	movlw	102
  5166  0004B4  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  5167  0004B6  A4D8               	btfss	status,2,c
  5168  0004B8  EF60  F002         	goto	u10191
  5169  0004BC  EF62  F002         	goto	u10190
  5170  0004C0                     u10191:
  5171  0004C0  EF6B  F002         	goto	l9187
  5172  0004C4                     u10190:
  5173  0004C4                     
  5174                           ; BSR set to: 0
  5175  0004C4  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5176  0004C6  EF69  F002         	goto	u10200
  5177  0004CA  EF67  F002         	goto	u10201
  5178  0004CE                     u10201:
  5179  0004CE  EF6B  F002         	goto	l9187
  5180  0004D2                     u10200:
  5181  0004D2                     l9185:
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  5185  0004D2  4B9D               	infsnz	efgtoa@m& (0+255),f,b
  5186  0004D4  2B9E               	incf	(efgtoa@m+1)& (0+255),f,b
  5187  0004D6                     l9187:
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  5191  0004D6  0E66               	movlw	102
  5192  0004D8  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  5193  0004DA  A4D8               	btfss	status,2,c
  5194  0004DC  EF72  F002         	goto	u10211
  5195  0004E0  EF74  F002         	goto	u10210
  5196  0004E4                     u10211:
  5197  0004E4  EF94  F002         	goto	l9197
  5198  0004E8                     u10210:
  5199  0004E8                     
  5200                           ; BSR set to: 0
  5201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  5202  0004E8  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5203  0004EA  EF7B  F002         	goto	u10220
  5204  0004EE  EF79  F002         	goto	u10221
  5205  0004F2                     u10221:
  5206  0004F2  EF87  F002         	goto	l9193
  5207  0004F6                     u10220:
  5208  0004F6                     
  5209                           ; BSR set to: 0
  5210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  5211  0004F6  0E00               	movlw	0
  5212  0004F8  6FBD               	movwf	efgtoa@u& (0+255),b
  5213  0004FA  0E00               	movlw	0
  5214  0004FC  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  5215  0004FE  0E80               	movlw	128
  5216  000500  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  5217  000502  0E3F               	movlw	63
  5218  000504  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  5219                           
  5220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  5221  000506  0E00               	movlw	0
  5222  000508  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  5223  00050A  0E00               	movlw	0
  5224  00050C  6FB9               	movwf	efgtoa@e& (0+255),b
  5225  00050E                     l9193:
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  5229  00050E  0E67               	movlw	103
  5230  000510  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  5231  000512  B4D8               	btfsc	status,2,c
  5232  000514  EF8E  F002         	goto	u10231
  5233  000518  EF90  F002         	goto	u10230
  5234  00051C                     u10231:
  5235  00051C  EF94  F002         	goto	l9197
  5236  000520                     u10230:
  5237  000520                     
  5238                           ; BSR set to: 0
  5239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  5240  000520  51B9               	movf	efgtoa@e& (0+255),w,b
  5241  000522  279D               	addwf	efgtoa@m& (0+255),f,b
  5242  000524  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  5243  000526  239E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5244  000528                     l9197:
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  5248  000528  0E00               	movlw	0
  5249  00052A  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  5250  00052C  0E00               	movlw	0
  5251  00052E  6FB3               	movwf	efgtoa@i& (0+255),b
  5252  000530                     
  5253                           ; BSR set to: 0
  5254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  5255  000530  C0B5  F0AB         	movff	efgtoa@g,efgtoa@h
  5256  000534  C0B6  F0AC         	movff	efgtoa@g+1,efgtoa@h+1
  5257  000538  C0B7  F0AD         	movff	efgtoa@g+2,efgtoa@h+2
  5258  00053C  C0B8  F0AE         	movff	efgtoa@g+3,efgtoa@h+3
  5259  000540                     
  5260                           ; BSR set to: 0
  5261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  5262  000540  C0BD  F089         	movff	efgtoa@u,efgtoa@ou
  5263  000544  C0BE  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
  5264  000548  C0BF  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
  5265  00054C  C0C0  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
  5266                           
  5267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5268  000550  EF25  F003         	goto	l9211
  5269  000554                     l9203:
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  5273  000554  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  5274  000558  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  5275  00055C  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  5276  000560  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  5277  000564  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  5278  000568  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  5279  00056C  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  5280  000570  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  5281  000574  EC79  F013         	call	___fldiv	;wreg free
  5282  000578  C044  F050         	movff	?___fldiv,floorf@x
  5283  00057C  C045  F051         	movff	?___fldiv+1,floorf@x+1
  5284  000580  C046  F052         	movff	?___fldiv+2,floorf@x+2
  5285  000584  C047  F053         	movff	?___fldiv+3,floorf@x+3
  5286  000588  ECE1  F017         	call	_floorf	;wreg free
  5287  00058C  C050  F0AF         	movff	?_floorf,efgtoa@l
  5288  000590  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  5289  000594  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  5290  000598  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  5291                           
  5292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  5293  00059C  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  5294  0005A0  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  5295  0005A4  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  5296  0005A8  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  5297  0005AC  EC9E  F01F         	call	___fltol	;wreg free
  5298  0005B0  C072  F0A1         	movff	?___fltol,efgtoa@d
  5299  0005B4  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  5300  0005B8                     
  5301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  5302  0005B8  C0AB  F044         	movff	efgtoa@h,___flsub@b
  5303  0005BC  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  5304  0005C0  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  5305  0005C4  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  5306  0005C8  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  5307  0005CC  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  5308  0005D0  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  5309  0005D4  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  5310  0005D8  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  5311  0005DC  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  5312  0005E0  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  5313  0005E4  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  5314  0005E8  EC8B  F00F         	call	___flmul	;wreg free
  5315  0005EC  C01B  F048         	movff	?___flmul,___flsub@a
  5316  0005F0  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  5317  0005F4  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  5318  0005F8  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  5319  0005FC  EC0E  F029         	call	___flsub	;wreg free
  5320  000600  C044  F0AB         	movff	?___flsub,efgtoa@h
  5321  000604  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  5322  000608  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  5323  00060C  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  5324  000610                     
  5325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  5326  000610  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  5327  000614  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  5328  000618  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  5329  00061C  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  5330  000620  0E00               	movlw	0
  5331  000622  6E48               	movwf	___fldiv@a^0,c
  5332  000624  0E00               	movlw	0
  5333  000626  6E49               	movwf	(___fldiv@a+1)^0,c
  5334  000628  0E20               	movlw	32
  5335  00062A  6E4A               	movwf	(___fldiv@a+2)^0,c
  5336  00062C  0E41               	movlw	65
  5337  00062E  6E4B               	movwf	(___fldiv@a+3)^0,c
  5338  000630  EC79  F013         	call	___fldiv	;wreg free
  5339  000634  C044  F0BD         	movff	?___fldiv,efgtoa@u
  5340  000638  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  5341  00063C  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  5342  000640  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  5343  000644                     
  5344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  5345  000644  0100               	movlb	0	; () banked
  5346  000646  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  5347  000648  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  5348  00064A                     l9211:
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5352  00064A  519D               	movf	efgtoa@m& (0+255),w,b
  5353  00064C  5DB3               	subwf	efgtoa@i& (0+255),w,b
  5354  00064E  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  5355  000650  0A80               	xorlw	128
  5356  000652  6F84               	movwf	??_efgtoa& (0+255),b
  5357  000654  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  5358  000656  0A80               	xorlw	128
  5359  000658  5984               	subwfb	??_efgtoa& (0+255),w,b
  5360  00065A  A0D8               	btfss	status,0,c
  5361  00065C  EF32  F003         	goto	u10241
  5362  000660  EF34  F003         	goto	u10240
  5363  000664                     u10241:
  5364  000664  EFAA  F002         	goto	l9203
  5365  000668                     u10240:
  5366  000668                     
  5367                           ; BSR set to: 0
  5368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  5369  000668  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  5370  00066C  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  5371  000670  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  5372  000674  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  5373  000678  0E00               	movlw	0
  5374  00067A  6E1F               	movwf	___flmul@a^0,c
  5375  00067C  0E00               	movlw	0
  5376  00067E  6E20               	movwf	(___flmul@a+1)^0,c
  5377  000680  0EA0               	movlw	160
  5378  000682  6E21               	movwf	(___flmul@a+2)^0,c
  5379  000684  0E40               	movlw	64
  5380  000686  6E22               	movwf	(___flmul@a+3)^0,c
  5381  000688  EC8B  F00F         	call	___flmul	;wreg free
  5382  00068C  C01B  F0AF         	movff	?___flmul,efgtoa@l
  5383  000690  C01C  F0B0         	movff	?___flmul+1,efgtoa@l+1
  5384  000694  C01D  F0B1         	movff	?___flmul+2,efgtoa@l+2
  5385  000698  C01E  F0B2         	movff	?___flmul+3,efgtoa@l+3
  5386  00069C                     
  5387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  5388  00069C  C0AB  F034         	movff	efgtoa@h,___flge@ff1
  5389  0006A0  C0AC  F035         	movff	efgtoa@h+1,___flge@ff1+1
  5390  0006A4  C0AD  F036         	movff	efgtoa@h+2,___flge@ff1+2
  5391  0006A8  C0AE  F037         	movff	efgtoa@h+3,___flge@ff1+3
  5392  0006AC  C0AF  F038         	movff	efgtoa@l,___flge@ff2
  5393  0006B0  C0B0  F039         	movff	efgtoa@l+1,___flge@ff2+1
  5394  0006B4  C0B1  F03A         	movff	efgtoa@l+2,___flge@ff2+2
  5395  0006B8  C0B2  F03B         	movff	efgtoa@l+3,___flge@ff2+3
  5396  0006BC  EC22  F020         	call	___flge	;wreg free
  5397  0006C0  B0D8               	btfsc	status,0,c
  5398  0006C2  EF65  F003         	goto	u10251
  5399  0006C6  EF67  F003         	goto	u10250
  5400  0006CA                     u10251:
  5401  0006CA  EF72  F003         	goto	l9219
  5402  0006CE                     u10250:
  5403  0006CE                     
  5404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  5405  0006CE  0E00               	movlw	0
  5406  0006D0  0100               	movlb	0	; () banked
  5407  0006D2  6FAF               	movwf	efgtoa@l& (0+255),b
  5408  0006D4  0E00               	movlw	0
  5409  0006D6  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  5410  0006D8  0E00               	movlw	0
  5411  0006DA  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  5412  0006DC  0E00               	movlw	0
  5413  0006DE  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  5414                           
  5415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  5416  0006E0  EF9B  F003         	goto	l9225
  5417  0006E4                     l9219:
  5418                           
  5419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  5420  0006E4  C0AB  F006         	movff	efgtoa@h,___fleq@ff1
  5421  0006E8  C0AC  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  5422  0006EC  C0AD  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  5423  0006F0  C0AE  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  5424  0006F4  C0AF  F00A         	movff	efgtoa@l,___fleq@ff2
  5425  0006F8  C0B0  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  5426  0006FC  C0B1  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  5427  000700  C0B2  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  5428  000704  EC2C  F024         	call	___fleq	;wreg free
  5429  000708  A0D8               	btfss	status,0,c
  5430  00070A  EF89  F003         	goto	u10261
  5431  00070E  EF8B  F003         	goto	u10260
  5432  000712                     u10261:
  5433  000712  EF9B  F003         	goto	l9225
  5434  000716                     u10260:
  5435  000716  0100               	movlb	0	; () banked
  5436  000718  B1A1               	btfsc	efgtoa@d& (0+255),0,b
  5437  00071A  EF91  F003         	goto	u10271
  5438  00071E  EF93  F003         	goto	u10270
  5439  000722                     u10271:
  5440  000722  EF9B  F003         	goto	l9225
  5441  000726                     u10270:
  5442  000726                     
  5443                           ; BSR set to: 0
  5444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  5445  000726  0E00               	movlw	0
  5446  000728  6FAF               	movwf	efgtoa@l& (0+255),b
  5447  00072A  0E00               	movlw	0
  5448  00072C  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  5449  00072E  0E00               	movlw	0
  5450  000730  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  5451  000732  0E00               	movlw	0
  5452  000734  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  5453  000736                     l9225:
  5454                           
  5455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  5456  000736  C0B5  F034         	movff	efgtoa@g,___fladd@b
  5457  00073A  C0B6  F035         	movff	efgtoa@g+1,___fladd@b+1
  5458  00073E  C0B7  F036         	movff	efgtoa@g+2,___fladd@b+2
  5459  000742  C0B8  F037         	movff	efgtoa@g+3,___fladd@b+3
  5460  000746  C0AF  F038         	movff	efgtoa@l,___fladd@a
  5461  00074A  C0B0  F039         	movff	efgtoa@l+1,___fladd@a+1
  5462  00074E  C0B1  F03A         	movff	efgtoa@l+2,___fladd@a+2
  5463  000752  C0B2  F03B         	movff	efgtoa@l+3,___fladd@a+3
  5464  000756  ECC0  F008         	call	___fladd	;wreg free
  5465  00075A  C034  F0AB         	movff	?___fladd,efgtoa@h
  5466  00075E  C035  F0AC         	movff	?___fladd+1,efgtoa@h+1
  5467  000762  C036  F0AD         	movff	?___fladd+2,efgtoa@h+2
  5468  000766  C037  F0AE         	movff	?___fladd+3,efgtoa@h+3
  5469  00076A                     
  5470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  5471  00076A  C089  F0BD         	movff	efgtoa@ou,efgtoa@u
  5472  00076E  C08A  F0BE         	movff	efgtoa@ou+1,efgtoa@u+1
  5473  000772  C08B  F0BF         	movff	efgtoa@ou+2,efgtoa@u+2
  5474  000776  C08C  F0C0         	movff	efgtoa@ou+3,efgtoa@u+3
  5475  00077A                     
  5476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  5477  00077A  0E65               	movlw	101
  5478  00077C  0100               	movlb	0	; () banked
  5479  00077E  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  5480  000780  B4D8               	btfsc	status,2,c
  5481  000782  EFC5  F003         	goto	u10281
  5482  000786  EFC7  F003         	goto	u10280
  5483  00078A                     u10281:
  5484  00078A  EFCD  F003         	goto	l9233
  5485  00078E                     u10280:
  5486  00078E                     
  5487                           ; BSR set to: 0
  5488  00078E  C0B9  F09F         	movff	efgtoa@e,efgtoa@ne
  5489  000792  C0BA  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  5490  000796  EFD1  F003         	goto	l882
  5491  00079A                     l9233:
  5492                           
  5493                           ; BSR set to: 0
  5494  00079A  0E00               	movlw	0
  5495  00079C  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5496  00079E  0E00               	movlw	0
  5497  0007A0  6F9F               	movwf	efgtoa@ne& (0+255),b
  5498  0007A2                     l882:
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  5502  0007A2  0E00               	movlw	0
  5503  0007A4  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  5504  0007A6  0E00               	movlw	0
  5505  0007A8  6F9B               	movwf	efgtoa@pp& (0+255),b
  5506                           
  5507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  5508  0007AA  0E00               	movlw	0
  5509  0007AC  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
  5510  0007AE  0E00               	movlw	0
  5511  0007B0  6F99               	movwf	efgtoa@t& (0+255),b
  5512                           
  5513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  5514  0007B2  0E00               	movlw	0
  5515  0007B4  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  5516  0007B6  0E00               	movlw	0
  5517  0007B8  6FB3               	movwf	efgtoa@i& (0+255),b
  5518                           
  5519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5520  0007BA  EFCE  F004         	goto	l9283
  5521  0007BE                     l9235:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  5525  0007BE  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  5526  0007C2  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  5527  0007C6  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  5528  0007CA  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  5529  0007CE  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  5530  0007D2  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  5531  0007D6  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  5532  0007DA  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  5533  0007DE  EC79  F013         	call	___fldiv	;wreg free
  5534  0007E2  C044  F050         	movff	?___fldiv,floorf@x
  5535  0007E6  C045  F051         	movff	?___fldiv+1,floorf@x+1
  5536  0007EA  C046  F052         	movff	?___fldiv+2,floorf@x+2
  5537  0007EE  C047  F053         	movff	?___fldiv+3,floorf@x+3
  5538  0007F2  ECE1  F017         	call	_floorf	;wreg free
  5539  0007F6  C050  F0AF         	movff	?_floorf,efgtoa@l
  5540  0007FA  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  5541  0007FE  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  5542  000802  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  5543                           
  5544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  5545  000806  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  5546  00080A  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  5547  00080E  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  5548  000812  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  5549  000816  EC9E  F01F         	call	___fltol	;wreg free
  5550  00081A  C072  F0A1         	movff	?___fltol,efgtoa@d
  5551  00081E  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  5552  000822                     
  5553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5554  000822  0101               	movlb	1	; () banked
  5555  000824  B932               	btfsc	_flags& (0+255),4,b
  5556  000826  EF17  F004         	goto	u10291
  5557  00082A  EF19  F004         	goto	u10290
  5558  00082E                     u10291:
  5559  00082E  EF37  F004         	goto	l9247
  5560  000832                     u10290:
  5561  000832                     
  5562                           ; BSR set to: 1
  5563  000832  0100               	movlb	0	; () banked
  5564  000834  51A1               	movf	efgtoa@d& (0+255),w,b
  5565  000836  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5566  000838  A4D8               	btfss	status,2,c
  5567  00083A  EF21  F004         	goto	u10301
  5568  00083E  EF23  F004         	goto	u10300
  5569  000842                     u10301:
  5570  000842  EF37  F004         	goto	l9247
  5571  000846                     u10300:
  5572  000846                     
  5573                           ; BSR set to: 0
  5574  000846  0E67               	movlw	103
  5575  000848  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  5576  00084A  A4D8               	btfss	status,2,c
  5577  00084C  EF2A  F004         	goto	u10311
  5578  000850  EF2C  F004         	goto	u10310
  5579  000854                     u10311:
  5580  000854  EF37  F004         	goto	l9247
  5581  000858                     u10310:
  5582  000858                     
  5583                           ; BSR set to: 0
  5584  000858  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5585  00085A  EF33  F004         	goto	u10320
  5586  00085E  EF31  F004         	goto	u10321
  5587  000862                     u10321:
  5588  000862  EF37  F004         	goto	l9247
  5589  000866                     u10320:
  5590  000866                     
  5591                           ; BSR set to: 0
  5592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  5593  000866  4B99               	infsnz	efgtoa@t& (0+255),f,b
  5594  000868  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
  5595                           
  5596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  5597  00086A  EF82  F004         	goto	l9275
  5598  00086E                     l9247:
  5599                           
  5600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  5601  00086E  0100               	movlb	0	; () banked
  5602  000870  519B               	movf	efgtoa@pp& (0+255),w,b
  5603  000872  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5604  000874  A4D8               	btfss	status,2,c
  5605  000876  EF3F  F004         	goto	u10331
  5606  00087A  EF41  F004         	goto	u10330
  5607  00087E                     u10331:
  5608  00087E  EF6B  F004         	goto	l9267
  5609  000882                     u10330:
  5610  000882                     
  5611                           ; BSR set to: 0
  5612  000882  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5613  000884  EF48  F004         	goto	u10340
  5614  000888  EF46  F004         	goto	u10341
  5615  00088C                     u10341:
  5616  00088C  EF6B  F004         	goto	l9267
  5617  000890                     u10340:
  5618  000890                     
  5619                           ; BSR set to: 0
  5620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  5621  000890  0E40               	movlw	low _dbuf
  5622  000892  25BB               	addwf	efgtoa@n& (0+255),w,b
  5623  000894  6ED9               	movwf	fsr2l,c
  5624  000896  0E01               	movlw	high _dbuf
  5625  000898  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5626  00089A  6EDA               	movwf	fsr2h,c
  5627  00089C  0E2E               	movlw	46
  5628  00089E  6EDF               	movwf	indf2,c
  5629  0008A0                     
  5630                           ; BSR set to: 0
  5631  0008A0  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  5632  0008A2  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  5633  0008A4                     
  5634                           ; BSR set to: 0
  5635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  5636  0008A4  07A8               	decf	efgtoa@w& (0+255),f,b
  5637  0008A6  A0D8               	btfss	status,0,c
  5638  0008A8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  5639  0008AA                     
  5640                           ; BSR set to: 0
  5641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  5642  0008AA  0E00               	movlw	0
  5643  0008AC  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  5644  0008AE  0E01               	movlw	1
  5645  0008B0  6F9B               	movwf	efgtoa@pp& (0+255),b
  5646  0008B2  EF6B  F004         	goto	l9267
  5647  0008B6                     l9259:
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  5651  0008B6  0E40               	movlw	low _dbuf
  5652  0008B8  25BB               	addwf	efgtoa@n& (0+255),w,b
  5653  0008BA  6ED9               	movwf	fsr2l,c
  5654  0008BC  0E01               	movlw	high _dbuf
  5655  0008BE  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5656  0008C0  6EDA               	movwf	fsr2h,c
  5657  0008C2  0E30               	movlw	48
  5658  0008C4  6EDF               	movwf	indf2,c
  5659  0008C6                     
  5660                           ; BSR set to: 0
  5661  0008C6  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  5662  0008C8  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  5663  0008CA                     
  5664                           ; BSR set to: 0
  5665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  5666  0008CA  07A8               	decf	efgtoa@w& (0+255),f,b
  5667  0008CC  A0D8               	btfss	status,0,c
  5668  0008CE  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  5669  0008D0                     
  5670                           ; BSR set to: 0
  5671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  5672  0008D0  0799               	decf	efgtoa@t& (0+255),f,b
  5673  0008D2  A0D8               	btfss	status,0,c
  5674  0008D4  079A               	decf	(efgtoa@t+1)& (0+255),f,b
  5675  0008D6                     l9267:
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  5679  0008D6  5199               	movf	efgtoa@t& (0+255),w,b
  5680  0008D8  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5681  0008DA  A4D8               	btfss	status,2,c
  5682  0008DC  EF72  F004         	goto	u10351
  5683  0008E0  EF74  F004         	goto	u10350
  5684  0008E4                     u10351:
  5685  0008E4  EF5B  F004         	goto	l9259
  5686  0008E8                     u10350:
  5687  0008E8                     
  5688                           ; BSR set to: 0
  5689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  5690  0008E8  0E40               	movlw	low _dbuf
  5691  0008EA  25BB               	addwf	efgtoa@n& (0+255),w,b
  5692  0008EC  6ED9               	movwf	fsr2l,c
  5693  0008EE  0E01               	movlw	high _dbuf
  5694  0008F0  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5695  0008F2  6EDA               	movwf	fsr2h,c
  5696  0008F4  51A1               	movf	efgtoa@d& (0+255),w,b
  5697  0008F6  0F30               	addlw	48
  5698  0008F8  6EDF               	movwf	indf2,c
  5699  0008FA                     
  5700                           ; BSR set to: 0
  5701  0008FA  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  5702  0008FC  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  5703  0008FE                     
  5704                           ; BSR set to: 0
  5705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  5706  0008FE  07A8               	decf	efgtoa@w& (0+255),f,b
  5707  000900  A0D8               	btfss	status,0,c
  5708  000902  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  5709  000904                     l9275:
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  5713  000904  C0AB  F044         	movff	efgtoa@h,___flsub@b
  5714  000908  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  5715  00090C  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  5716  000910  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  5717  000914  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  5718  000918  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  5719  00091C  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  5720  000920  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  5721  000924  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  5722  000928  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  5723  00092C  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  5724  000930  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  5725  000934  EC8B  F00F         	call	___flmul	;wreg free
  5726  000938  C01B  F048         	movff	?___flmul,___flsub@a
  5727  00093C  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  5728  000940  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  5729  000944  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  5730  000948  EC0E  F029         	call	___flsub	;wreg free
  5731  00094C  C044  F0AB         	movff	?___flsub,efgtoa@h
  5732  000950  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  5733  000954  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  5734  000958  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  5735  00095C                     
  5736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  5737  00095C  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  5738  000960  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  5739  000964  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  5740  000968  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  5741  00096C  0E00               	movlw	0
  5742  00096E  6E48               	movwf	___fldiv@a^0,c
  5743  000970  0E00               	movlw	0
  5744  000972  6E49               	movwf	(___fldiv@a+1)^0,c
  5745  000974  0E20               	movlw	32
  5746  000976  6E4A               	movwf	(___fldiv@a+2)^0,c
  5747  000978  0E41               	movlw	65
  5748  00097A  6E4B               	movwf	(___fldiv@a+3)^0,c
  5749  00097C  EC79  F013         	call	___fldiv	;wreg free
  5750  000980  C044  F0BD         	movff	?___fldiv,efgtoa@u
  5751  000984  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  5752  000988  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  5753  00098C  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  5754  000990                     
  5755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  5756  000990  0100               	movlb	0	; () banked
  5757  000992  079F               	decf	efgtoa@ne& (0+255),f,b
  5758  000994  A0D8               	btfss	status,0,c
  5759  000996  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5760  000998                     
  5761                           ; BSR set to: 0
  5762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  5763  000998  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  5764  00099A  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  5765  00099C                     l9283:
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5769  00099C  519D               	movf	efgtoa@m& (0+255),w,b
  5770  00099E  5DB3               	subwf	efgtoa@i& (0+255),w,b
  5771  0009A0  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  5772  0009A2  0A80               	xorlw	128
  5773  0009A4  6F84               	movwf	??_efgtoa& (0+255),b
  5774  0009A6  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  5775  0009A8  0A80               	xorlw	128
  5776  0009AA  5984               	subwfb	??_efgtoa& (0+255),w,b
  5777  0009AC  B0D8               	btfsc	status,0,c
  5778  0009AE  EFDB  F004         	goto	u10361
  5779  0009B2  EFDD  F004         	goto	u10360
  5780  0009B6                     u10361:
  5781  0009B6  EFEB  F004         	goto	l9287
  5782  0009BA                     u10360:
  5783  0009BA                     
  5784                           ; BSR set to: 0
  5785  0009BA  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5786  0009BC  EFE9  F004         	goto	u10371
  5787  0009C0  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
  5788  0009C2  E109               	bnz	u10370
  5789  0009C4  0E4B               	movlw	75
  5790  0009C6  5DBB               	subwf	efgtoa@n& (0+255),w,b
  5791  0009C8  A0D8               	btfss	status,0,c
  5792  0009CA  EFE9  F004         	goto	u10371
  5793  0009CE  EFEB  F004         	goto	u10370
  5794  0009D2                     u10371:
  5795  0009D2  EFDF  F003         	goto	l9235
  5796  0009D6                     u10370:
  5797  0009D6                     l9287:
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  5801  0009D6  519B               	movf	efgtoa@pp& (0+255),w,b
  5802  0009D8  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5803  0009DA  A4D8               	btfss	status,2,c
  5804  0009DC  EFF2  F004         	goto	u10381
  5805  0009E0  EFF4  F004         	goto	u10380
  5806  0009E4                     u10381:
  5807  0009E4  EF07  F005         	goto	l9295
  5808  0009E8                     u10380:
  5809  0009E8                     
  5810                           ; BSR set to: 0
  5811  0009E8  0101               	movlb	1	; () banked
  5812  0009EA  A932               	btfss	_flags& (0+255),4,b
  5813  0009EC  EFFA  F004         	goto	u10391
  5814  0009F0  EFFC  F004         	goto	u10390
  5815  0009F4                     u10391:
  5816  0009F4  EF07  F005         	goto	l9295
  5817  0009F8                     u10390:
  5818  0009F8                     
  5819                           ; BSR set to: 1
  5820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  5821  0009F8  0E40               	movlw	low _dbuf
  5822  0009FA  0100               	movlb	0	; () banked
  5823  0009FC  25BB               	addwf	efgtoa@n& (0+255),w,b
  5824  0009FE  6ED9               	movwf	fsr2l,c
  5825  000A00  0E01               	movlw	high _dbuf
  5826  000A02  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5827  000A04  6EDA               	movwf	fsr2h,c
  5828  000A06  0E2E               	movlw	46
  5829  000A08  6EDF               	movwf	indf2,c
  5830  000A0A                     
  5831                           ; BSR set to: 0
  5832  000A0A  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  5833  000A0C  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  5834  000A0E                     l9295:
  5835                           
  5836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  5837  000A0E  0E40               	movlw	low _dbuf
  5838  000A10  0100               	movlb	0	; () banked
  5839  000A12  25BB               	addwf	efgtoa@n& (0+255),w,b
  5840  000A14  6ED9               	movwf	fsr2l,c
  5841  000A16  0E01               	movlw	high _dbuf
  5842  000A18  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5843  000A1A  6EDA               	movwf	fsr2h,c
  5844  000A1C  0E00               	movlw	0
  5845  000A1E  6EDF               	movwf	indf2,c
  5846  000A20                     
  5847                           ; BSR set to: 0
  5848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  5849  000A20  0E65               	movlw	101
  5850  000A22  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  5851  000A24  A4D8               	btfss	status,2,c
  5852  000A26  EF17  F005         	goto	u10401
  5853  000A2A  EF19  F005         	goto	u10400
  5854  000A2E                     u10401:
  5855  000A2E  EFBE  F000         	goto	l9107
  5856  000A32                     u10400:
  5857  000A32                     
  5858                           ; BSR set to: 0
  5859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  5860  000A32  0E00               	movlw	0
  5861  000A34  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  5862  000A36  0E4F               	movlw	79
  5863  000A38  6FB3               	movwf	efgtoa@i& (0+255),b
  5864  000A3A                     
  5865                           ; BSR set to: 0
  5866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  5867  000A3A  0E40               	movlw	low _dbuf
  5868  000A3C  25B3               	addwf	efgtoa@i& (0+255),w,b
  5869  000A3E  6ED9               	movwf	fsr2l,c
  5870  000A40  0E01               	movlw	high _dbuf
  5871  000A42  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5872  000A44  6EDA               	movwf	fsr2h,c
  5873  000A46  0E00               	movlw	0
  5874  000A48  6EDF               	movwf	indf2,c
  5875  000A4A                     
  5876                           ; BSR set to: 0
  5877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  5878  000A4A  0E00               	movlw	0
  5879  000A4C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  5880  000A4E  0E00               	movlw	0
  5881  000A50  6FA3               	movwf	efgtoa@sign& (0+255),b
  5882  000A52                     
  5883                           ; BSR set to: 0
  5884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  5885  000A52  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5886  000A54  EF30  F005         	goto	u10410
  5887  000A58  EF2E  F005         	goto	u10411
  5888  000A5C                     u10411:
  5889  000A5C  EF38  F005         	goto	l9311
  5890  000A60                     u10410:
  5891  000A60                     
  5892                           ; BSR set to: 0
  5893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  5894  000A60  0E00               	movlw	0
  5895  000A62  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  5896  000A64  0E01               	movlw	1
  5897  000A66  6FA3               	movwf	efgtoa@sign& (0+255),b
  5898  000A68                     
  5899                           ; BSR set to: 0
  5900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  5901  000A68  6DB9               	negf	efgtoa@e& (0+255),b
  5902  000A6A  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
  5903  000A6C  B0D8               	btfsc	status,0,c
  5904  000A6E  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  5905  000A70                     l9311:
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  5909  000A70  0E00               	movlw	0
  5910  000A72  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  5911  000A74  0E02               	movlw	2
  5912  000A76  6FA5               	movwf	efgtoa@p& (0+255),b
  5913                           
  5914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5915  000A78  EF69  F005         	goto	l9323
  5916  000A7C                     l9313:
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  5920  000A7C  07B3               	decf	efgtoa@i& (0+255),f,b
  5921  000A7E  A0D8               	btfss	status,0,c
  5922  000A80  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  5923  000A82                     
  5924                           ; BSR set to: 0
  5925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  5926  000A82  0E40               	movlw	low _dbuf
  5927  000A84  25B3               	addwf	efgtoa@i& (0+255),w,b
  5928  000A86  6ED9               	movwf	fsr2l,c
  5929  000A88  0E01               	movlw	high _dbuf
  5930  000A8A  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5931  000A8C  6EDA               	movwf	fsr2h,c
  5932  000A8E  C0B9  F006         	movff	efgtoa@e,___awmod@dividend
  5933  000A92  C0BA  F007         	movff	efgtoa@e+1,___awmod@dividend+1
  5934  000A96  0E00               	movlw	0
  5935  000A98  6E09               	movwf	(___awmod@divisor+1)^0,c
  5936  000A9A  0E0A               	movlw	10
  5937  000A9C  6E08               	movwf	___awmod@divisor^0,c
  5938  000A9E  EC7D  F023         	call	___awmod	;wreg free
  5939  000AA2  5006               	movf	?___awmod^0,w,c
  5940  000AA4  0F30               	addlw	48
  5941  000AA6  6EDF               	movwf	indf2,c
  5942  000AA8                     
  5943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  5944  000AA8  C0B9  F006         	movff	efgtoa@e,___awdiv@dividend
  5945  000AAC  C0BA  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  5946  000AB0  0E00               	movlw	0
  5947  000AB2  6E09               	movwf	(___awdiv@divisor+1)^0,c
  5948  000AB4  0E0A               	movlw	10
  5949  000AB6  6E08               	movwf	___awdiv@divisor^0,c
  5950  000AB8  ECBA  F022         	call	___awdiv	;wreg free
  5951  000ABC  C006  F0B9         	movff	?___awdiv,efgtoa@e
  5952  000AC0  C007  F0BA         	movff	?___awdiv+1,efgtoa@e+1
  5953  000AC4                     
  5954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  5955  000AC4  0100               	movlb	0	; () banked
  5956  000AC6  07A5               	decf	efgtoa@p& (0+255),f,b
  5957  000AC8  A0D8               	btfss	status,0,c
  5958  000ACA  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
  5959  000ACC                     
  5960                           ; BSR set to: 0
  5961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  5962  000ACC  07A8               	decf	efgtoa@w& (0+255),f,b
  5963  000ACE  A0D8               	btfss	status,0,c
  5964  000AD0  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  5965  000AD2                     l9323:
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5969  000AD2  51B9               	movf	efgtoa@e& (0+255),w,b
  5970  000AD4  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5971  000AD6  A4D8               	btfss	status,2,c
  5972  000AD8  EF70  F005         	goto	u10421
  5973  000ADC  EF72  F005         	goto	u10420
  5974  000AE0                     u10421:
  5975  000AE0  EF3E  F005         	goto	l9313
  5976  000AE4                     u10420:
  5977  000AE4                     
  5978                           ; BSR set to: 0
  5979  000AE4  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5980  000AE6  EF7F  F005         	goto	u10430
  5981  000AEA  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
  5982  000AEC  E106               	bnz	u10431
  5983  000AEE  05A5               	decf	efgtoa@p& (0+255),w,b
  5984  000AF0  B0D8               	btfsc	status,0,c
  5985  000AF2  EF7D  F005         	goto	u10431
  5986  000AF6  EF7F  F005         	goto	u10430
  5987  000AFA                     u10431:
  5988  000AFA  EF3E  F005         	goto	l9313
  5989  000AFE                     u10430:
  5990  000AFE                     
  5991                           ; BSR set to: 0
  5992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  5993  000AFE  07B3               	decf	efgtoa@i& (0+255),f,b
  5994  000B00  A0D8               	btfss	status,0,c
  5995  000B02  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  5996  000B04                     
  5997                           ; BSR set to: 0
  5998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  5999  000B04  51A3               	movf	efgtoa@sign& (0+255),w,b
  6000  000B06  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6001  000B08  A4D8               	btfss	status,2,c
  6002  000B0A  EF89  F005         	goto	u10441
  6003  000B0E  EF8B  F005         	goto	u10440
  6004  000B12                     u10441:
  6005  000B12  EF91  F005         	goto	l9333
  6006  000B16                     u10440:
  6007  000B16                     
  6008                           ; BSR set to: 0
  6009  000B16  0E00               	movlw	0
  6010  000B18  6F94               	movwf	(_efgtoa$937+1)& (0+255),b
  6011  000B1A  0E2B               	movlw	43
  6012  000B1C  6F93               	movwf	_efgtoa$937& (0+255),b
  6013  000B1E  EF95  F005         	goto	l9335
  6014  000B22                     l9333:
  6015                           
  6016                           ; BSR set to: 0
  6017  000B22  0E00               	movlw	0
  6018  000B24  6F94               	movwf	(_efgtoa$937+1)& (0+255),b
  6019  000B26  0E2D               	movlw	45
  6020  000B28  6F93               	movwf	_efgtoa$937& (0+255),b
  6021  000B2A                     l9335:
  6022                           
  6023                           ; BSR set to: 0
  6024  000B2A  0E40               	movlw	low _dbuf
  6025  000B2C  25B3               	addwf	efgtoa@i& (0+255),w,b
  6026  000B2E  6ED9               	movwf	fsr2l,c
  6027  000B30  0E01               	movlw	high _dbuf
  6028  000B32  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6029  000B34  6EDA               	movwf	fsr2h,c
  6030  000B36  C093  FFDF         	movff	_efgtoa$937,indf2
  6031  000B3A                     
  6032                           ; BSR set to: 0
  6033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  6034  000B3A  07A8               	decf	efgtoa@w& (0+255),f,b
  6035  000B3C  A0D8               	btfss	status,0,c
  6036  000B3E  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  6037  000B40                     
  6038                           ; BSR set to: 0
  6039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6040  000B40  07B3               	decf	efgtoa@i& (0+255),f,b
  6041  000B42  A0D8               	btfss	status,0,c
  6042  000B44  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  6043  000B46                     
  6044                           ; BSR set to: 0
  6045  000B46  0EBF               	movlw	191
  6046  000B48  6F84               	movwf	??_efgtoa& (0+255),b
  6047  000B4A  0EFF               	movlw	255
  6048  000B4C  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  6049  000B4E  5183               	movf	efgtoa@c& (0+255),w,b
  6050  000B50  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  6051  000B52  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  6052  000B54  5184               	movf	??_efgtoa& (0+255),w,b
  6053  000B56  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  6054  000B58  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  6055  000B5A  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6056  000B5C  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  6057  000B5E  E10A               	bnz	u10450
  6058  000B60  0E1A               	movlw	26
  6059  000B62  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  6060  000B64  A0D8               	btfss	status,0,c
  6061  000B66  EFB7  F005         	goto	u10451
  6062  000B6A  EFBA  F005         	goto	u10450
  6063  000B6E                     u10451:
  6064  000B6E  0E01               	movlw	1
  6065  000B70  EFBB  F005         	goto	u10460
  6066  000B74                     u10450:
  6067  000B74  0E00               	movlw	0
  6068  000B76                     u10460:
  6069  000B76  6F97               	movwf	_efgtoa$939& (0+255),b
  6070  000B78  6B98               	clrf	(_efgtoa$939+1)& (0+255),b
  6071  000B7A                     
  6072                           ; BSR set to: 0
  6073  000B7A  5197               	movf	_efgtoa$939& (0+255),w,b
  6074  000B7C  1198               	iorwf	(_efgtoa$939+1)& (0+255),w,b
  6075  000B7E  A4D8               	btfss	status,2,c
  6076  000B80  EFC4  F005         	goto	u10471
  6077  000B84  EFC6  F005         	goto	u10470
  6078  000B88                     u10471:
  6079  000B88  EFCC  F005         	goto	l9349
  6080  000B8C                     u10470:
  6081  000B8C                     
  6082                           ; BSR set to: 0
  6083  000B8C  0E00               	movlw	0
  6084  000B8E  6F96               	movwf	(_efgtoa$938+1)& (0+255),b
  6085  000B90  0E65               	movlw	101
  6086  000B92  6F95               	movwf	_efgtoa$938& (0+255),b
  6087  000B94  EFD0  F005         	goto	l9351
  6088  000B98                     l9349:
  6089                           
  6090                           ; BSR set to: 0
  6091  000B98  0E00               	movlw	0
  6092  000B9A  6F96               	movwf	(_efgtoa$938+1)& (0+255),b
  6093  000B9C  0E45               	movlw	69
  6094  000B9E  6F95               	movwf	_efgtoa$938& (0+255),b
  6095  000BA0                     l9351:
  6096                           
  6097                           ; BSR set to: 0
  6098  000BA0  0E40               	movlw	low _dbuf
  6099  000BA2  25B3               	addwf	efgtoa@i& (0+255),w,b
  6100  000BA4  6ED9               	movwf	fsr2l,c
  6101  000BA6  0E01               	movlw	high _dbuf
  6102  000BA8  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6103  000BAA  6EDA               	movwf	fsr2h,c
  6104  000BAC  C095  FFDF         	movff	_efgtoa$938,indf2
  6105  000BB0                     
  6106                           ; BSR set to: 0
  6107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  6108  000BB0  07A8               	decf	efgtoa@w& (0+255),f,b
  6109  000BB2  A0D8               	btfss	status,0,c
  6110  000BB4  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  6111  000BB6                     
  6112                           ; BSR set to: 0
  6113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  6114  000BB6  0E40               	movlw	low _dbuf
  6115  000BB8  25BB               	addwf	efgtoa@n& (0+255),w,b
  6116  000BBA  6E06               	movwf	strcpy@dest^0,c
  6117  000BBC  0E01               	movlw	high _dbuf
  6118  000BBE  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6119  000BC0  6E07               	movwf	(strcpy@dest+1)^0,c
  6120  000BC2  0E40               	movlw	low _dbuf
  6121  000BC4  25B3               	addwf	efgtoa@i& (0+255),w,b
  6122  000BC6  6E08               	movwf	strcpy@src^0,c
  6123  000BC8  0E01               	movlw	high _dbuf
  6124  000BCA  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6125  000BCC  6E09               	movwf	(strcpy@src+1)^0,c
  6126  000BCE  EC94  F027         	call	_strcpy	;wreg free
  6127  000BD2  EFBE  F000         	goto	l9107
  6128  000BD6                     l838:
  6129  000BD6  0012               	return		;funcret
  6130  000BD8                     __end_of_efgtoa:
  6131                           	opt callstack 0
  6132                           
  6133 ;; *************** function _tolower *****************
  6134 ;; Defined at:
  6135 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  c               2   11[COMRAM] int 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;		None
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  2   11[COMRAM] int 
  6142 ;; Registers used:
  6143 ;;		wreg, status,2, status,0
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6149 ;;      Params:         2       0       0       0       0       0       0       0       0
  6150 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6151 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6152 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6153 ;;Total ram usage:        8 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    3
  6156 ;; This function calls:
  6157 ;;		_isupper
  6158 ;; This function is called by:
  6159 ;;		_efgtoa
  6160 ;;		_vfpfcnvrt
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text12
  6165  004E6A                     __ptext12:
  6166                           	opt callstack 0
  6167  004E6A                     _tolower:
  6168                           	opt callstack 23
  6169  004E6A  0EBF               	movlw	191
  6170  004E6C  6E0E               	movwf	??_tolower^0,c
  6171  004E6E  0EFF               	movlw	255
  6172  004E70  6E0F               	movwf	(??_tolower+1)^0,c
  6173  004E72  C00C  F010         	movff	tolower@c,??_tolower+2
  6174  004E76  C00D  F011         	movff	tolower@c+1,??_tolower+3
  6175  004E7A  500E               	movf	??_tolower^0,w,c
  6176  004E7C  2610               	addwf	(??_tolower+2)^0,f,c
  6177  004E7E  500F               	movf	(??_tolower+1)^0,w,c
  6178  004E80  2211               	addwfc	(??_tolower+3)^0,f,c
  6179  004E82  5011               	movf	(??_tolower+3)^0,w,c
  6180  004E84  E10A               	bnz	u9290
  6181  004E86  0E1A               	movlw	26
  6182  004E88  5C10               	subwf	(??_tolower+2)^0,w,c
  6183  004E8A  A0D8               	btfss	status,0,c
  6184  004E8C  EF4A  F027         	goto	u9291
  6185  004E90  EF4D  F027         	goto	u9290
  6186  004E94                     u9291:
  6187  004E94  0E01               	movlw	1
  6188  004E96  EF4E  F027         	goto	u9300
  6189  004E9A                     u9290:
  6190  004E9A  0E00               	movlw	0
  6191  004E9C                     u9300:
  6192  004E9C  6E12               	movwf	_tolower$1562^0,c
  6193  004E9E  6A13               	clrf	(_tolower$1562+1)^0,c
  6194  004EA0  5012               	movf	_tolower$1562^0,w,c
  6195  004EA2  1013               	iorwf	(_tolower$1562+1)^0,w,c
  6196  004EA4  B4D8               	btfsc	status,2,c
  6197  004EA6  EF57  F027         	goto	u9311
  6198  004EAA  EF59  F027         	goto	u9310
  6199  004EAE                     u9311:
  6200  004EAE  EF60  F027         	goto	l1773
  6201  004EB2                     u9310:
  6202  004EB2  0E20               	movlw	32
  6203  004EB4  100C               	iorwf	tolower@c^0,w,c
  6204  004EB6  6E0C               	movwf	?_tolower^0,c
  6205  004EB8  500D               	movf	(tolower@c+1)^0,w,c
  6206  004EBA  6E0D               	movwf	(?_tolower+1)^0,c
  6207  004EBC  EF64  F027         	goto	l1778
  6208  004EC0                     l1773:
  6209  004EC0  C00C  F00C         	movff	tolower@c,?_tolower
  6210  004EC4  C00D  F00D         	movff	tolower@c+1,?_tolower+1
  6211  004EC8                     l1778:
  6212  004EC8  0012               	return		;funcret
  6213  004ECA                     __end_of_tolower:
  6214                           	opt callstack 0
  6215                           
  6216 ;; *************** function _isupper *****************
  6217 ;; Defined at:
  6218 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  c               2    5[COMRAM] int 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;		None
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  2    5[COMRAM] int 
  6225 ;; Registers used:
  6226 ;;		wreg, status,2, status,0
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6232 ;;      Params:         2       0       0       0       0       0       0       0       0
  6233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6234 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6235 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6236 ;;Total ram usage:        6 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:    2
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_efgtoa
  6243 ;;		_vfpfcnvrt
  6244 ;;		_tolower
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text13
  6249  0053B2                     __ptext13:
  6250                           	opt callstack 0
  6251  0053B2                     _isupper:
  6252                           	opt callstack 23
  6253  0053B2  0EBF               	movlw	191
  6254  0053B4  6E08               	movwf	??_isupper^0,c
  6255  0053B6  0EFF               	movlw	255
  6256  0053B8  6E09               	movwf	(??_isupper+1)^0,c
  6257  0053BA  C006  F00A         	movff	isupper@c,??_isupper+2
  6258  0053BE  C007  F00B         	movff	isupper@c+1,??_isupper+3
  6259  0053C2  5008               	movf	??_isupper^0,w,c
  6260  0053C4  260A               	addwf	(??_isupper+2)^0,f,c
  6261  0053C6  5009               	movf	(??_isupper+1)^0,w,c
  6262  0053C8  220B               	addwfc	(??_isupper+3)^0,f,c
  6263  0053CA  500B               	movf	(??_isupper+3)^0,w,c
  6264  0053CC  E10A               	bnz	u8120
  6265  0053CE  0E1A               	movlw	26
  6266  0053D0  5C0A               	subwf	(??_isupper+2)^0,w,c
  6267  0053D2  A0D8               	btfss	status,0,c
  6268  0053D4  EFEE  F029         	goto	u8121
  6269  0053D8  EFF1  F029         	goto	u8120
  6270  0053DC                     u8121:
  6271  0053DC  0E01               	movlw	1
  6272  0053DE  EFF2  F029         	goto	u8130
  6273  0053E2                     u8120:
  6274  0053E2  0E00               	movlw	0
  6275  0053E4                     u8130:
  6276  0053E4  6E06               	movwf	?_isupper^0,c
  6277  0053E6  6A07               	clrf	(?_isupper+1)^0,c
  6278  0053E8  0012               	return		;funcret
  6279  0053EA                     __end_of_isupper:
  6280                           	opt callstack 0
  6281                           
  6282 ;; *************** function _strcpy *****************
  6283 ;; Defined at:
  6284 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  dest            2    5[COMRAM] PTR unsigned char 
  6287 ;;		 -> dbuf(80), 
  6288 ;;  src             2    7[COMRAM] PTR const unsigned char 
  6289 ;;		 -> STR_21(4), STR_20(4), STR_17(4), STR_16(4), 
  6290 ;;		 -> dbuf(80), 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  d               2   13[COMRAM] PTR unsigned char 
  6293 ;;		 -> dbuf(80), 
  6294 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6295 ;;		 -> STR_21(4), STR_20(4), STR_17(4), STR_16(4), 
  6296 ;;		 -> dbuf(80), 
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  2    5[COMRAM] PTR unsigned char 
  6299 ;; Registers used:
  6300 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6306 ;;      Params:         4       0       0       0       0       0       0       0       0
  6307 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6308 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6309 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6310 ;;Total ram usage:       10 bytes
  6311 ;; Hardware stack levels used:    1
  6312 ;; Hardware stack levels required when called:    2
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_efgtoa
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text14
  6321  004F28                     __ptext14:
  6322                           	opt callstack 0
  6323  004F28                     _strcpy:
  6324                           	opt callstack 23
  6325  004F28  C008  F00C         	movff	strcpy@src,strcpy@s
  6326  004F2C  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
  6327  004F30  C006  F00E         	movff	strcpy@dest,strcpy@d
  6328  004F34  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
  6329  004F38                     l8695:
  6330  004F38  500C               	movf	strcpy@s^0,w,c
  6331  004F3A  6E0A               	movwf	??_strcpy^0,c
  6332  004F3C  500D               	movf	(strcpy@s+1)^0,w,c
  6333  004F3E  6E0B               	movwf	(??_strcpy+1)^0,c
  6334  004F40  4A0C               	infsnz	strcpy@s^0,f,c
  6335  004F42  2A0D               	incf	(strcpy@s+1)^0,f,c
  6336  004F44  C00A  FFF6         	movff	??_strcpy,tblptrl
  6337  004F48  C00B  FFF7         	movff	??_strcpy+1,tblptrh
  6338  004F4C  6AF8               	clrf	tblptru,c
  6339  004F4E  C00E  FFD9         	movff	strcpy@d,fsr2l
  6340  004F52  C00F  FFDA         	movff	strcpy@d+1,fsr2h
  6341  004F56  4A0E               	infsnz	strcpy@d^0,f,c
  6342  004F58  2A0F               	incf	(strcpy@d+1)^0,f,c
  6343  004F5A  0E07               	movlw	(high __ramtop+-1)
  6344  004F5C  64F7               	cpfsgt	tblptrh,c
  6345  004F5E  D003               	bra	u9277
  6346  004F60  0008               	tblrd		*
  6347  004F62  50F5               	movf	tablat,w,c
  6348  004F64  D005               	bra	u9270
  6349  004F66                     u9277:
  6350  004F66  CFF6 FFE9          	movff	tblptrl,fsr0l
  6351  004F6A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6352  004F6E  50EF               	movf	indf0,w,c
  6353  004F70                     u9270:
  6354  004F70  6EDF               	movwf	indf2,c
  6355  004F72  50DF               	movf	indf2,w,c
  6356  004F74  A4D8               	btfss	status,2,c
  6357  004F76  EFBF  F027         	goto	u9281
  6358  004F7A  EFC1  F027         	goto	u9280
  6359  004F7E                     u9281:
  6360  004F7E  EF9C  F027         	goto	l8695
  6361  004F82                     u9280:
  6362  004F82  0012               	return		;funcret
  6363  004F84                     __end_of_strcpy:
  6364                           	opt callstack 0
  6365                           
  6366 ;; *************** function _floorf *****************
  6367 ;; Defined at:
  6368 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;  x               4   79[COMRAM] float 
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;  u               4   25[BANK0 ] struct .
  6373 ;;  m               4   19[BANK0 ] unsigned long 
  6374 ;;  e               2   23[BANK0 ] int 
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  4   79[COMRAM] float 
  6377 ;; Registers used:
  6378 ;;		wreg, status,2, status,0
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6384 ;;      Params:         4       0       0       0       0       0       0       0       0
  6385 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6386 ;;      Temps:          0       6       0       0       0       0       0       0       0
  6387 ;;      Totals:         4      16       0       0       0       0       0       0       0
  6388 ;;Total ram usage:       20 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:    2
  6391 ;; This function calls:
  6392 ;;		Nothing
  6393 ;; This function is called by:
  6394 ;;		_efgtoa
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           	psect	text15
  6399  002FC2                     __ptext15:
  6400                           	opt callstack 0
  6401  002FC2                     _floorf:
  6402                           	opt callstack 23
  6403  002FC2  C104  F079         	movff	floorf@F524,floorf@u
  6404  002FC6  C105  F07A         	movff	floorf@F524+1,floorf@u+1
  6405  002FCA  C106  F07B         	movff	floorf@F524+2,floorf@u+2
  6406  002FCE  C107  F07C         	movff	floorf@F524+3,floorf@u+3
  6407  002FD2  C050  F079         	movff	floorf@x,floorf@u
  6408  002FD6  C051  F07A         	movff	floorf@x+1,floorf@u+1
  6409  002FDA  C052  F07B         	movff	floorf@x+2,floorf@u+2
  6410  002FDE  C053  F07C         	movff	floorf@x+3,floorf@u+3
  6411  002FE2  0E81               	movlw	129
  6412  002FE4  0100               	movlb	0	; () banked
  6413  002FE6  6F6D               	movwf	??_floorf& (0+255),b
  6414  002FE8  0EFF               	movlw	255
  6415  002FEA  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6416  002FEC  C079  F06F         	movff	floorf@u,??_floorf+2
  6417  002FF0  C07A  F070         	movff	floorf@u+1,??_floorf+3
  6418  002FF4  C07B  F071         	movff	floorf@u+2,??_floorf+4
  6419  002FF8  C07C  F072         	movff	floorf@u+3,??_floorf+5
  6420  002FFC  0E18               	movlw	24
  6421  002FFE  EF06  F018         	goto	u9320
  6422  003002                     u9325:
  6423  003002  90D8               	bcf	status,0,c
  6424  003004  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  6425  003006  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6426  003008  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6427  00300A  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6428  00300C                     u9320:
  6429  00300C  2EE8               	decfsz	wreg,f,c
  6430  00300E  EF01  F018         	goto	u9325
  6431  003012  516F               	movf	(??_floorf+2)& (0+255),w,b
  6432  003014  256D               	addwf	??_floorf& (0+255),w,b
  6433  003016  6F77               	movwf	floorf@e& (0+255),b
  6434  003018  0E00               	movlw	0
  6435  00301A  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  6436  00301C  6F78               	movwf	(floorf@e+1)& (0+255),b
  6437  00301E  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6438  003020  EF1B  F018         	goto	u9331
  6439  003024  5178               	movf	(floorf@e+1)& (0+255),w,b
  6440  003026  E109               	bnz	u9330
  6441  003028  0E17               	movlw	23
  6442  00302A  5D77               	subwf	floorf@e& (0+255),w,b
  6443  00302C  A0D8               	btfss	status,0,c
  6444  00302E  EF1B  F018         	goto	u9331
  6445  003032  EF1D  F018         	goto	u9330
  6446  003036                     u9331:
  6447  003036  EF27  F018         	goto	l8713
  6448  00303A                     u9330:
  6449  00303A                     l8711:
  6450                           
  6451                           ; BSR set to: 0
  6452  00303A  C050  F050         	movff	floorf@x,?_floorf
  6453  00303E  C051  F051         	movff	floorf@x+1,?_floorf+1
  6454  003042  C052  F052         	movff	floorf@x+2,?_floorf+2
  6455  003046  C053  F053         	movff	floorf@x+3,?_floorf+3
  6456  00304A  EFEB  F018         	goto	l1675
  6457  00304E                     l8713:
  6458                           
  6459                           ; BSR set to: 0
  6460  00304E  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6461  003050  EF2C  F018         	goto	u9341
  6462  003054  EF2E  F018         	goto	u9340
  6463  003058                     u9341:
  6464  003058  EF9F  F018         	goto	l8723
  6465  00305C                     u9340:
  6466  00305C                     
  6467                           ; BSR set to: 0
  6468  00305C  C077  F06D         	movff	floorf@e,??_floorf
  6469  003060  0EFF               	movlw	255
  6470  003062  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6471  003064  0EFF               	movlw	255
  6472  003066  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6473  003068  0E7F               	movlw	127
  6474  00306A  6F70               	movwf	(??_floorf+3)& (0+255),b
  6475  00306C  0E00               	movlw	0
  6476  00306E  6F71               	movwf	(??_floorf+4)& (0+255),b
  6477  003070                     u9355:
  6478  003070  676D               	tstfsz	??_floorf& (0+255),b
  6479  003072  EF3D  F018         	goto	u9356
  6480  003076  EF45  F018         	goto	u9357
  6481  00307A                     u9356:
  6482  00307A  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  6483  00307C  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6484  00307E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6485  003080  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6486  003082  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6487  003084  2F6D               	decfsz	??_floorf& (0+255),f,b
  6488  003086  EF38  F018         	goto	u9355
  6489  00308A                     u9357:
  6490  00308A  C06E  F073         	movff	??_floorf+1,floorf@m
  6491  00308E  C06F  F074         	movff	??_floorf+2,floorf@m+1
  6492  003092  C070  F075         	movff	??_floorf+3,floorf@m+2
  6493  003096  C071  F076         	movff	??_floorf+4,floorf@m+3
  6494  00309A  0100               	movlb	0	; () banked
  6495  00309C  5173               	movf	floorf@m& (0+255),w,b
  6496  00309E  1579               	andwf	floorf@u& (0+255),w,b
  6497  0030A0  6F6D               	movwf	??_floorf& (0+255),b
  6498  0030A2  5174               	movf	(floorf@m+1)& (0+255),w,b
  6499  0030A4  157A               	andwf	(floorf@u+1)& (0+255),w,b
  6500  0030A6  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6501  0030A8  5175               	movf	(floorf@m+2)& (0+255),w,b
  6502  0030AA  157B               	andwf	(floorf@u+2)& (0+255),w,b
  6503  0030AC  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6504  0030AE  5176               	movf	(floorf@m+3)& (0+255),w,b
  6505  0030B0  157C               	andwf	(floorf@u+3)& (0+255),w,b
  6506  0030B2  6F70               	movwf	(??_floorf+3)& (0+255),b
  6507  0030B4  516D               	movf	??_floorf& (0+255),w,b
  6508  0030B6  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6509  0030B8  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6510  0030BA  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6511  0030BC  A4D8               	btfss	status,2,c
  6512  0030BE  EF63  F018         	goto	u9361
  6513  0030C2  EF65  F018         	goto	u9360
  6514  0030C6                     u9361:
  6515  0030C6  EF67  F018         	goto	l8719
  6516  0030CA                     u9360:
  6517  0030CA  EF1D  F018         	goto	l8711
  6518  0030CE                     l8719:
  6519                           
  6520                           ; BSR set to: 0
  6521  0030CE  C079  F06D         	movff	floorf@u,??_floorf
  6522  0030D2  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6523  0030D6  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6524  0030DA  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6525  0030DE  0E20               	movlw	32
  6526  0030E0  EF77  F018         	goto	u9370
  6527  0030E4                     u9375:
  6528  0030E4  90D8               	bcf	status,0,c
  6529  0030E6  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6530  0030E8  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6531  0030EA  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6532  0030EC  336D               	rrcf	??_floorf& (0+255),f,b
  6533  0030EE                     u9370:
  6534  0030EE  2EE8               	decfsz	wreg,f,c
  6535  0030F0  EF72  F018         	goto	u9375
  6536  0030F4  516D               	movf	??_floorf& (0+255),w,b
  6537  0030F6  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6538  0030F8  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6539  0030FA  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6540  0030FC  B4D8               	btfsc	status,2,c
  6541  0030FE  EF83  F018         	goto	u9381
  6542  003102  EF85  F018         	goto	u9380
  6543  003106                     u9381:
  6544  003106  EF8D  F018         	goto	l1678
  6545  00310A                     u9380:
  6546  00310A                     
  6547                           ; BSR set to: 0
  6548  00310A  5173               	movf	floorf@m& (0+255),w,b
  6549  00310C  2779               	addwf	floorf@u& (0+255),f,b
  6550  00310E  5174               	movf	(floorf@m+1)& (0+255),w,b
  6551  003110  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  6552  003112  5175               	movf	(floorf@m+2)& (0+255),w,b
  6553  003114  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  6554  003116  5176               	movf	(floorf@m+3)& (0+255),w,b
  6555  003118  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  6556  00311A                     l1678:
  6557                           
  6558                           ; BSR set to: 0
  6559  00311A  1D73               	comf	floorf@m& (0+255),w,b
  6560  00311C  6F6D               	movwf	??_floorf& (0+255),b
  6561  00311E  1D74               	comf	(floorf@m+1)& (0+255),w,b
  6562  003120  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6563  003122  1D75               	comf	(floorf@m+2)& (0+255),w,b
  6564  003124  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6565  003126  1D76               	comf	(floorf@m+3)& (0+255),w,b
  6566  003128  6F70               	movwf	(??_floorf+3)& (0+255),b
  6567  00312A  516D               	movf	??_floorf& (0+255),w,b
  6568  00312C  1779               	andwf	floorf@u& (0+255),f,b
  6569  00312E  516E               	movf	(??_floorf+1)& (0+255),w,b
  6570  003130  177A               	andwf	(floorf@u+1)& (0+255),f,b
  6571  003132  516F               	movf	(??_floorf+2)& (0+255),w,b
  6572  003134  177B               	andwf	(floorf@u+2)& (0+255),f,b
  6573  003136  5170               	movf	(??_floorf+3)& (0+255),w,b
  6574  003138  177C               	andwf	(floorf@u+3)& (0+255),f,b
  6575  00313A  EFE3  F018         	goto	l8731
  6576  00313E                     l8723:
  6577                           
  6578                           ; BSR set to: 0
  6579  00313E  C079  F06D         	movff	floorf@u,??_floorf
  6580  003142  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6581  003146  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6582  00314A  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6583  00314E  0E20               	movlw	32
  6584  003150  EFAF  F018         	goto	u9390
  6585  003154                     u9395:
  6586  003154  90D8               	bcf	status,0,c
  6587  003156  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6588  003158  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6589  00315A  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6590  00315C  336D               	rrcf	??_floorf& (0+255),f,b
  6591  00315E                     u9390:
  6592  00315E  2EE8               	decfsz	wreg,f,c
  6593  003160  EFAA  F018         	goto	u9395
  6594  003164  516D               	movf	??_floorf& (0+255),w,b
  6595  003166  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6596  003168  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6597  00316A  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6598  00316C  A4D8               	btfss	status,2,c
  6599  00316E  EFBB  F018         	goto	u9401
  6600  003172  EFBD  F018         	goto	u9400
  6601  003176                     u9401:
  6602  003176  EFC7  F018         	goto	l8727
  6603  00317A                     u9400:
  6604  00317A                     
  6605                           ; BSR set to: 0
  6606  00317A  0E00               	movlw	0
  6607  00317C  6F79               	movwf	floorf@u& (0+255),b
  6608  00317E  0E00               	movlw	0
  6609  003180  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6610  003182  0E00               	movlw	0
  6611  003184  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6612  003186  0E00               	movlw	0
  6613  003188  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6614  00318A  EFE3  F018         	goto	l8731
  6615  00318E                     l8727:
  6616                           
  6617                           ; BSR set to: 0
  6618  00318E  90D8               	bcf	status,0,c
  6619  003190  3579               	rlcf	floorf@u& (0+255),w,b
  6620  003192  6F6D               	movwf	??_floorf& (0+255),b
  6621  003194  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  6622  003196  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6623  003198  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  6624  00319A  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6625  00319C  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  6626  00319E  6F70               	movwf	(??_floorf+3)& (0+255),b
  6627  0031A0  516D               	movf	??_floorf& (0+255),w,b
  6628  0031A2  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6629  0031A4  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6630  0031A6  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6631  0031A8  B4D8               	btfsc	status,2,c
  6632  0031AA  EFD9  F018         	goto	u9411
  6633  0031AE  EFDB  F018         	goto	u9410
  6634  0031B2                     u9411:
  6635  0031B2  EFE3  F018         	goto	l8731
  6636  0031B6                     u9410:
  6637  0031B6                     
  6638                           ; BSR set to: 0
  6639  0031B6  0E00               	movlw	0
  6640  0031B8  6F79               	movwf	floorf@u& (0+255),b
  6641  0031BA  0E00               	movlw	0
  6642  0031BC  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6643  0031BE  0E80               	movlw	128
  6644  0031C0  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6645  0031C2  0EBF               	movlw	191
  6646  0031C4  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6647  0031C6                     l8731:
  6648                           
  6649                           ; BSR set to: 0
  6650  0031C6  C079  F050         	movff	floorf@u,?_floorf
  6651  0031CA  C07A  F051         	movff	floorf@u+1,?_floorf+1
  6652  0031CE  C07B  F052         	movff	floorf@u+2,?_floorf+2
  6653  0031D2  C07C  F053         	movff	floorf@u+3,?_floorf+3
  6654  0031D6                     l1675:
  6655                           
  6656                           ; BSR set to: 0
  6657  0031D6  0012               	return		;funcret
  6658  0031D8                     __end_of_floorf:
  6659                           	opt callstack 0
  6660                           
  6661 ;; *************** function ___fpclassifyf *****************
  6662 ;; Defined at:
  6663 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  x               4    5[COMRAM] float 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;  u               4   15[COMRAM] struct .
  6668 ;;  e               2   13[COMRAM] int 
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  2    5[COMRAM] int 
  6671 ;; Registers used:
  6672 ;;		wreg, status,2, status,0
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6678 ;;      Params:         4       0       0       0       0       0       0       0       0
  6679 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6680 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6681 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6682 ;;Total ram usage:       14 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; Hardware stack levels required when called:    2
  6685 ;; This function calls:
  6686 ;;		Nothing
  6687 ;; This function is called by:
  6688 ;;		_efgtoa
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text16
  6693  004148                     __ptext16:
  6694                           	opt callstack 0
  6695  004148                     ___fpclassifyf:
  6696                           	opt callstack 23
  6697  004148  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6698  00414C  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6699  004150  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6700  004154  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6701  004158  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  6702  00415C  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6703  004160  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6704  004164  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6705  004168  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  6706  00416C  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6707  004170  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6708  004174  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6709  004178  0E18               	movlw	24
  6710  00417A  EFC4  F020         	goto	u9200
  6711  00417E                     u9205:
  6712  00417E  90D8               	bcf	status,0,c
  6713  004180  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  6714  004182  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  6715  004184  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  6716  004186  320A               	rrcf	??___fpclassifyf^0,f,c
  6717  004188                     u9200:
  6718  004188  2EE8               	decfsz	wreg,f,c
  6719  00418A  EFBF  F020         	goto	u9205
  6720  00418E  500A               	movf	??___fpclassifyf^0,w,c
  6721  004190  6E0E               	movwf	___fpclassifyf@e^0,c
  6722  004192  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  6723  004194  500E               	movf	___fpclassifyf@e^0,w,c
  6724  004196  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6725  004198  A4D8               	btfss	status,2,c
  6726  00419A  EFD1  F020         	goto	u9211
  6727  00419E  EFD3  F020         	goto	u9210
  6728  0041A2                     u9211:
  6729  0041A2  EFF3  F020         	goto	l8683
  6730  0041A6                     u9210:
  6731  0041A6  90D8               	bcf	status,0,c
  6732  0041A8  3410               	rlcf	___fpclassifyf@u^0,w,c
  6733  0041AA  6E0A               	movwf	??___fpclassifyf^0,c
  6734  0041AC  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6735  0041AE  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  6736  0041B0  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6737  0041B2  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  6738  0041B4  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6739  0041B6  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  6740  0041B8  500A               	movf	??___fpclassifyf^0,w,c
  6741  0041BA  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  6742  0041BC  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  6743  0041BE  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  6744  0041C0  A4D8               	btfss	status,2,c
  6745  0041C2  EFE5  F020         	goto	u9221
  6746  0041C6  EFE7  F020         	goto	u9220
  6747  0041CA                     u9221:
  6748  0041CA  EFED  F020         	goto	l8679
  6749  0041CE                     u9220:
  6750  0041CE  0E00               	movlw	0
  6751  0041D0  6E07               	movwf	(?___fpclassifyf+1)^0,c
  6752  0041D2  0E02               	movlw	2
  6753  0041D4  6E06               	movwf	?___fpclassifyf^0,c
  6754  0041D6  EF22  F021         	goto	l1630
  6755  0041DA                     l8679:
  6756  0041DA  0E00               	movlw	0
  6757  0041DC  6E07               	movwf	(?___fpclassifyf+1)^0,c
  6758  0041DE  0E03               	movlw	3
  6759  0041E0  6E06               	movwf	?___fpclassifyf^0,c
  6760  0041E2  EF22  F021         	goto	l1630
  6761  0041E6                     l8683:
  6762  0041E6  280E               	incf	___fpclassifyf@e^0,w,c
  6763  0041E8  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6764  0041EA  A4D8               	btfss	status,2,c
  6765  0041EC  EFFA  F020         	goto	u9231
  6766  0041F0  EFFC  F020         	goto	u9230
  6767  0041F4                     u9231:
  6768  0041F4  EF1E  F021         	goto	l8689
  6769  0041F8                     u9230:
  6770  0041F8  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  6771  0041FC  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6772  004200  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6773  004204  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6774  004208  0E09               	movlw	9
  6775  00420A                     u9245:
  6776  00420A  90D8               	bcf	status,0,c
  6777  00420C  360A               	rlcf	??___fpclassifyf^0,f,c
  6778  00420E  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  6779  004210  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  6780  004212  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  6781  004214  2EE8               	decfsz	wreg,f,c
  6782  004216  EF05  F021         	goto	u9245
  6783  00421A  500A               	movf	??___fpclassifyf^0,w,c
  6784  00421C  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  6785  00421E  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  6786  004220  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  6787  004222  B4D8               	btfsc	status,2,c
  6788  004224  EF16  F021         	goto	u9251
  6789  004228  EF19  F021         	goto	u9250
  6790  00422C                     u9251:
  6791  00422C  0E01               	movlw	1
  6792  00422E  EF1A  F021         	goto	u9260
  6793  004232                     u9250:
  6794  004232  0E00               	movlw	0
  6795  004234                     u9260:
  6796  004234  6E06               	movwf	?___fpclassifyf^0,c
  6797  004236  6A07               	clrf	(?___fpclassifyf+1)^0,c
  6798  004238  EF22  F021         	goto	l1630
  6799  00423C                     l8689:
  6800  00423C  0E00               	movlw	0
  6801  00423E  6E07               	movwf	(?___fpclassifyf+1)^0,c
  6802  004240  0E04               	movlw	4
  6803  004242  6E06               	movwf	?___fpclassifyf^0,c
  6804  004244                     l1630:
  6805  004244  0012               	return		;funcret
  6806  004246                     __end_of___fpclassifyf:
  6807                           	opt callstack 0
  6808                           
  6809 ;; *************** function ___fleq *****************
  6810 ;; Defined at:
  6811 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  ff1             4    5[COMRAM] int 
  6814 ;;  ff2             4    9[COMRAM] int 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;		None               void
  6819 ;; Registers used:
  6820 ;;		wreg, status,2, status,0
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6826 ;;      Params:         8       0       0       0       0       0       0       0       0
  6827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6828 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6829 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6830 ;;Total ram usage:       12 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; Hardware stack levels required when called:    2
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_efgtoa
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text17
  6841  004858                     __ptext17:
  6842                           	opt callstack 0
  6843  004858                     ___fleq:
  6844                           	opt callstack 23
  6845  004858  0E00               	movlw	0
  6846  00485A  1406               	andwf	___fleq@ff1^0,w,c
  6847  00485C  6E0E               	movwf	??___fleq^0,c
  6848  00485E  0E00               	movlw	0
  6849  004860  1407               	andwf	(___fleq@ff1+1)^0,w,c
  6850  004862  6E0F               	movwf	(??___fleq+1)^0,c
  6851  004864  0E80               	movlw	128
  6852  004866  1408               	andwf	(___fleq@ff1+2)^0,w,c
  6853  004868  6E10               	movwf	(??___fleq+2)^0,c
  6854  00486A  0E7F               	movlw	127
  6855  00486C  1409               	andwf	(___fleq@ff1+3)^0,w,c
  6856  00486E  6E11               	movwf	(??___fleq+3)^0,c
  6857  004870  500E               	movf	??___fleq^0,w,c
  6858  004872  100F               	iorwf	(??___fleq+1)^0,w,c
  6859  004874  1010               	iorwf	(??___fleq+2)^0,w,c
  6860  004876  1011               	iorwf	(??___fleq+3)^0,w,c
  6861  004878  A4D8               	btfss	status,2,c
  6862  00487A  EF41  F024         	goto	u9691
  6863  00487E  EF43  F024         	goto	u9690
  6864  004882                     u9691:
  6865  004882  EF4B  F024         	goto	l8915
  6866  004886                     u9690:
  6867  004886  0E00               	movlw	0
  6868  004888  6E06               	movwf	___fleq@ff1^0,c
  6869  00488A  0E00               	movlw	0
  6870  00488C  6E07               	movwf	(___fleq@ff1+1)^0,c
  6871  00488E  0E00               	movlw	0
  6872  004890  6E08               	movwf	(___fleq@ff1+2)^0,c
  6873  004892  0E00               	movlw	0
  6874  004894  6E09               	movwf	(___fleq@ff1+3)^0,c
  6875  004896                     l8915:
  6876  004896  0E00               	movlw	0
  6877  004898  140A               	andwf	___fleq@ff2^0,w,c
  6878  00489A  6E0E               	movwf	??___fleq^0,c
  6879  00489C  0E00               	movlw	0
  6880  00489E  140B               	andwf	(___fleq@ff2+1)^0,w,c
  6881  0048A0  6E0F               	movwf	(??___fleq+1)^0,c
  6882  0048A2  0E80               	movlw	128
  6883  0048A4  140C               	andwf	(___fleq@ff2+2)^0,w,c
  6884  0048A6  6E10               	movwf	(??___fleq+2)^0,c
  6885  0048A8  0E7F               	movlw	127
  6886  0048AA  140D               	andwf	(___fleq@ff2+3)^0,w,c
  6887  0048AC  6E11               	movwf	(??___fleq+3)^0,c
  6888  0048AE  500E               	movf	??___fleq^0,w,c
  6889  0048B0  100F               	iorwf	(??___fleq+1)^0,w,c
  6890  0048B2  1010               	iorwf	(??___fleq+2)^0,w,c
  6891  0048B4  1011               	iorwf	(??___fleq+3)^0,w,c
  6892  0048B6  A4D8               	btfss	status,2,c
  6893  0048B8  EF60  F024         	goto	u9701
  6894  0048BC  EF62  F024         	goto	u9700
  6895  0048C0                     u9701:
  6896  0048C0  EF6A  F024         	goto	l8919
  6897  0048C4                     u9700:
  6898  0048C4  0E00               	movlw	0
  6899  0048C6  6E0A               	movwf	___fleq@ff2^0,c
  6900  0048C8  0E00               	movlw	0
  6901  0048CA  6E0B               	movwf	(___fleq@ff2+1)^0,c
  6902  0048CC  0E00               	movlw	0
  6903  0048CE  6E0C               	movwf	(___fleq@ff2+2)^0,c
  6904  0048D0  0E00               	movlw	0
  6905  0048D2  6E0D               	movwf	(___fleq@ff2+3)^0,c
  6906  0048D4                     l8919:
  6907  0048D4  500A               	movf	___fleq@ff2^0,w,c
  6908  0048D6  1806               	xorwf	___fleq@ff1^0,w,c
  6909  0048D8  E10F               	bnz	u9710
  6910  0048DA  500B               	movf	(___fleq@ff2+1)^0,w,c
  6911  0048DC  1807               	xorwf	(___fleq@ff1+1)^0,w,c
  6912  0048DE  E10C               	bnz	u9710
  6913  0048E0  500C               	movf	(___fleq@ff2+2)^0,w,c
  6914  0048E2  1808               	xorwf	(___fleq@ff1+2)^0,w,c
  6915  0048E4  E109               	bnz	u9710
  6916  0048E6  500D               	movf	(___fleq@ff2+3)^0,w,c
  6917  0048E8  1809               	xorwf	(___fleq@ff1+3)^0,w,c
  6918  0048EA  B4D8               	btfsc	status,2,c
  6919  0048EC  EF7A  F024         	goto	u9711
  6920  0048F0  EF7C  F024         	goto	u9710
  6921  0048F4                     u9711:
  6922  0048F4  EF7F  F024         	goto	l8923
  6923  0048F8                     u9710:
  6924  0048F8  90D8               	bcf	status,0,c
  6925  0048FA  EF80  F024         	goto	l1208
  6926  0048FE                     l8923:
  6927  0048FE  80D8               	bsf	status,0,c
  6928  004900                     l1208:
  6929  004900  0012               	return		;funcret
  6930  004902                     __end_of___fleq:
  6931                           	opt callstack 0
  6932                           
  6933 ;; *************** function ___awmod *****************
  6934 ;; Defined at:
  6935 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  dividend        2    5[COMRAM] int 
  6938 ;;  divisor         2    7[COMRAM] int 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  sign            1   10[COMRAM] unsigned char 
  6941 ;;  counter         1    9[COMRAM] unsigned char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  2    5[COMRAM] int 
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6951 ;;      Params:         4       0       0       0       0       0       0       0       0
  6952 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6953 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6954 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6955 ;;Total ram usage:        6 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    2
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		_efgtoa
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text18
  6966  0046FA                     __ptext18:
  6967                           	opt callstack 0
  6968  0046FA                     ___awmod:
  6969                           	opt callstack 23
  6970  0046FA  0E00               	movlw	0
  6971  0046FC  6E0B               	movwf	___awmod@sign^0,c
  6972  0046FE  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  6973  004700  EF86  F023         	goto	u9630
  6974  004704  EF84  F023         	goto	u9631
  6975  004708                     u9631:
  6976  004708  EF8C  F023         	goto	l8883
  6977  00470C                     u9630:
  6978  00470C  6C06               	negf	___awmod@dividend^0,c
  6979  00470E  1E07               	comf	(___awmod@dividend+1)^0,f,c
  6980  004710  B0D8               	btfsc	status,0,c
  6981  004712  2A07               	incf	(___awmod@dividend+1)^0,f,c
  6982  004714  0E01               	movlw	1
  6983  004716  6E0B               	movwf	___awmod@sign^0,c
  6984  004718                     l8883:
  6985  004718  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  6986  00471A  EF93  F023         	goto	u9640
  6987  00471E  EF91  F023         	goto	u9641
  6988  004722                     u9641:
  6989  004722  EF97  F023         	goto	l8887
  6990  004726                     u9640:
  6991  004726  6C08               	negf	___awmod@divisor^0,c
  6992  004728  1E09               	comf	(___awmod@divisor+1)^0,f,c
  6993  00472A  B0D8               	btfsc	status,0,c
  6994  00472C  2A09               	incf	(___awmod@divisor+1)^0,f,c
  6995  00472E                     l8887:
  6996  00472E  5008               	movf	___awmod@divisor^0,w,c
  6997  004730  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  6998  004732  B4D8               	btfsc	status,2,c
  6999  004734  EF9E  F023         	goto	u9651
  7000  004738  EFA0  F023         	goto	u9650
  7001  00473C                     u9651:
  7002  00473C  EFC4  F023         	goto	l8903
  7003  004740                     u9650:
  7004  004740  0E01               	movlw	1
  7005  004742  6E0A               	movwf	___awmod@counter^0,c
  7006  004744  EFA8  F023         	goto	l8893
  7007  004748                     l8891:
  7008  004748  90D8               	bcf	status,0,c
  7009  00474A  3608               	rlcf	___awmod@divisor^0,f,c
  7010  00474C  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  7011  00474E  2A0A               	incf	___awmod@counter^0,f,c
  7012  004750                     l8893:
  7013  004750  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  7014  004752  EFAD  F023         	goto	u9661
  7015  004756  EFAF  F023         	goto	u9660
  7016  00475A                     u9661:
  7017  00475A  EFA4  F023         	goto	l8891
  7018  00475E                     u9660:
  7019  00475E                     l8895:
  7020  00475E  5008               	movf	___awmod@divisor^0,w,c
  7021  004760  5C06               	subwf	___awmod@dividend^0,w,c
  7022  004762  5009               	movf	(___awmod@divisor+1)^0,w,c
  7023  004764  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  7024  004766  A0D8               	btfss	status,0,c
  7025  004768  EFB8  F023         	goto	u9671
  7026  00476C  EFBA  F023         	goto	u9670
  7027  004770                     u9671:
  7028  004770  EFBE  F023         	goto	l8899
  7029  004774                     u9670:
  7030  004774  5008               	movf	___awmod@divisor^0,w,c
  7031  004776  5E06               	subwf	___awmod@dividend^0,f,c
  7032  004778  5009               	movf	(___awmod@divisor+1)^0,w,c
  7033  00477A  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  7034  00477C                     l8899:
  7035  00477C  90D8               	bcf	status,0,c
  7036  00477E  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  7037  004780  3208               	rrcf	___awmod@divisor^0,f,c
  7038  004782  2E0A               	decfsz	___awmod@counter^0,f,c
  7039  004784  EFAF  F023         	goto	l8895
  7040  004788                     l8903:
  7041  004788  500B               	movf	___awmod@sign^0,w,c
  7042  00478A  B4D8               	btfsc	status,2,c
  7043  00478C  EFCA  F023         	goto	u9681
  7044  004790  EFCC  F023         	goto	u9680
  7045  004794                     u9681:
  7046  004794  EFD0  F023         	goto	l8907
  7047  004798                     u9680:
  7048  004798  6C06               	negf	___awmod@dividend^0,c
  7049  00479A  1E07               	comf	(___awmod@dividend+1)^0,f,c
  7050  00479C  B0D8               	btfsc	status,0,c
  7051  00479E  2A07               	incf	(___awmod@dividend+1)^0,f,c
  7052  0047A0                     l8907:
  7053  0047A0  C006  F006         	movff	___awmod@dividend,?___awmod
  7054  0047A4  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  7055  0047A8  0012               	return		;funcret
  7056  0047AA                     __end_of___awmod:
  7057                           	opt callstack 0
  7058                           
  7059 ;; *************** function ___awdiv *****************
  7060 ;; Defined at:
  7061 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  dividend        2    5[COMRAM] int 
  7064 ;;  divisor         2    7[COMRAM] int 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  quotient        2   11[COMRAM] int 
  7067 ;;  sign            1   10[COMRAM] unsigned char 
  7068 ;;  counter         1    9[COMRAM] unsigned char 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  2    5[COMRAM] int 
  7071 ;; Registers used:
  7072 ;;		wreg, status,2, status,0
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7078 ;;      Params:         4       0       0       0       0       0       0       0       0
  7079 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7080 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7081 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7082 ;;Total ram usage:        8 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; Hardware stack levels required when called:    2
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_efgtoa
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text19
  7093  004574                     __ptext19:
  7094                           	opt callstack 0
  7095  004574                     ___awdiv:
  7096                           	opt callstack 23
  7097  004574  0E00               	movlw	0
  7098  004576  6E0B               	movwf	___awdiv@sign^0,c
  7099  004578  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  7100  00457A  EFC3  F022         	goto	u9570
  7101  00457E  EFC1  F022         	goto	u9571
  7102  004582                     u9571:
  7103  004582  EFC9  F022         	goto	l8839
  7104  004586                     u9570:
  7105  004586  6C08               	negf	___awdiv@divisor^0,c
  7106  004588  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  7107  00458A  B0D8               	btfsc	status,0,c
  7108  00458C  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  7109  00458E  0E01               	movlw	1
  7110  004590  6E0B               	movwf	___awdiv@sign^0,c
  7111  004592                     l8839:
  7112  004592  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  7113  004594  EFD0  F022         	goto	u9580
  7114  004598  EFCE  F022         	goto	u9581
  7115  00459C                     u9581:
  7116  00459C  EFD6  F022         	goto	l8845
  7117  0045A0                     u9580:
  7118  0045A0  6C06               	negf	___awdiv@dividend^0,c
  7119  0045A2  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  7120  0045A4  B0D8               	btfsc	status,0,c
  7121  0045A6  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  7122  0045A8  0E01               	movlw	1
  7123  0045AA  1A0B               	xorwf	___awdiv@sign^0,f,c
  7124  0045AC                     l8845:
  7125  0045AC  0E00               	movlw	0
  7126  0045AE  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  7127  0045B0  0E00               	movlw	0
  7128  0045B2  6E0C               	movwf	___awdiv@quotient^0,c
  7129  0045B4  5008               	movf	___awdiv@divisor^0,w,c
  7130  0045B6  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  7131  0045B8  B4D8               	btfsc	status,2,c
  7132  0045BA  EFE1  F022         	goto	u9591
  7133  0045BE  EFE3  F022         	goto	u9590
  7134  0045C2                     u9591:
  7135  0045C2  EF0B  F023         	goto	l8867
  7136  0045C6                     u9590:
  7137  0045C6  0E01               	movlw	1
  7138  0045C8  6E0A               	movwf	___awdiv@counter^0,c
  7139  0045CA  EFEB  F022         	goto	l8853
  7140  0045CE                     l8851:
  7141  0045CE  90D8               	bcf	status,0,c
  7142  0045D0  3608               	rlcf	___awdiv@divisor^0,f,c
  7143  0045D2  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  7144  0045D4  2A0A               	incf	___awdiv@counter^0,f,c
  7145  0045D6                     l8853:
  7146  0045D6  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  7147  0045D8  EFF0  F022         	goto	u9601
  7148  0045DC  EFF2  F022         	goto	u9600
  7149  0045E0                     u9601:
  7150  0045E0  EFE7  F022         	goto	l8851
  7151  0045E4                     u9600:
  7152  0045E4                     l8855:
  7153  0045E4  90D8               	bcf	status,0,c
  7154  0045E6  360C               	rlcf	___awdiv@quotient^0,f,c
  7155  0045E8  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  7156  0045EA  5008               	movf	___awdiv@divisor^0,w,c
  7157  0045EC  5C06               	subwf	___awdiv@dividend^0,w,c
  7158  0045EE  5009               	movf	(___awdiv@divisor+1)^0,w,c
  7159  0045F0  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  7160  0045F2  A0D8               	btfss	status,0,c
  7161  0045F4  EFFE  F022         	goto	u9611
  7162  0045F8  EF00  F023         	goto	u9610
  7163  0045FC                     u9611:
  7164  0045FC  EF05  F023         	goto	l8863
  7165  004600                     u9610:
  7166  004600  5008               	movf	___awdiv@divisor^0,w,c
  7167  004602  5E06               	subwf	___awdiv@dividend^0,f,c
  7168  004604  5009               	movf	(___awdiv@divisor+1)^0,w,c
  7169  004606  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  7170  004608  800C               	bsf	___awdiv@quotient^0,0,c
  7171  00460A                     l8863:
  7172  00460A  90D8               	bcf	status,0,c
  7173  00460C  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  7174  00460E  3208               	rrcf	___awdiv@divisor^0,f,c
  7175  004610  2E0A               	decfsz	___awdiv@counter^0,f,c
  7176  004612  EFF2  F022         	goto	l8855
  7177  004616                     l8867:
  7178  004616  500B               	movf	___awdiv@sign^0,w,c
  7179  004618  B4D8               	btfsc	status,2,c
  7180  00461A  EF11  F023         	goto	u9621
  7181  00461E  EF13  F023         	goto	u9620
  7182  004622                     u9621:
  7183  004622  EF17  F023         	goto	l8871
  7184  004626                     u9620:
  7185  004626  6C0C               	negf	___awdiv@quotient^0,c
  7186  004628  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  7187  00462A  B0D8               	btfsc	status,0,c
  7188  00462C  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  7189  00462E                     l8871:
  7190  00462E  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  7191  004632  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  7192  004636  0012               	return		;funcret
  7193  004638                     __end_of___awdiv:
  7194                           	opt callstack 0
  7195                           
  7196 ;; *************** function _dtoa *****************
  7197 ;; Defined at:
  7198 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  7201 ;;		 -> sprintf@f(6), 
  7202 ;;  d               8   34[COMRAM] long long 
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;  n               8   58[COMRAM] long long 
  7205 ;;  i               2   66[COMRAM] int 
  7206 ;;  s               2   56[COMRAM] int 
  7207 ;;  w               2   54[COMRAM] int 
  7208 ;;  p               2   52[COMRAM] int 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  2   32[COMRAM] int 
  7211 ;; Registers used:
  7212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7218 ;;      Params:        10       0       0       0       0       0       0       0       0
  7219 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7220 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7221 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7222 ;;Total ram usage:       36 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:    6
  7225 ;; This function calls:
  7226 ;;		___aodiv
  7227 ;;		___aomod
  7228 ;;		_abs
  7229 ;;		_pad
  7230 ;; This function is called by:
  7231 ;;		_vfpfcnvrt
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           	psect	text20
  7236  002A8E                     __ptext20:
  7237                           	opt callstack 0
  7238  002A8E                     _dtoa:
  7239                           	opt callstack 20
  7240  002A8E                     
  7241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7242  002A8E  C023  F03B         	movff	dtoa@d,dtoa@n
  7243  002A92  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
  7244  002A96  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
  7245  002A9A  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
  7246  002A9E  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
  7247  002AA2  C028  F040         	movff	dtoa@d+5,dtoa@n+5
  7248  002AA6  C029  F041         	movff	dtoa@d+6,dtoa@n+6
  7249  002AAA  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
  7250  002AAE                     
  7251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7252  002AAE  BE42               	btfsc	(dtoa@n+7)^0,7,c
  7253  002AB0  EF5C  F015         	goto	u9811
  7254  002AB4  EF5F  F015         	goto	u9810
  7255  002AB8                     u9811:
  7256  002AB8  0E01               	movlw	1
  7257  002ABA  EF60  F015         	goto	u9820
  7258  002ABE                     u9810:
  7259  002ABE  0E00               	movlw	0
  7260  002AC0                     u9820:
  7261  002AC0  6E39               	movwf	dtoa@s^0,c
  7262  002AC2  6A3A               	clrf	(dtoa@s+1)^0,c
  7263                           
  7264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7265  002AC4  5039               	movf	dtoa@s^0,w,c
  7266  002AC6  103A               	iorwf	(dtoa@s+1)^0,w,c
  7267  002AC8  B4D8               	btfsc	status,2,c
  7268  002ACA  EF69  F015         	goto	u9831
  7269  002ACE  EF6B  F015         	goto	u9830
  7270  002AD2                     u9831:
  7271  002AD2  EF7B  F015         	goto	l9007
  7272  002AD6                     u9830:
  7273  002AD6                     
  7274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7275  002AD6  1E42               	comf	(dtoa@n+7)^0,f,c
  7276  002AD8  1E41               	comf	(dtoa@n+6)^0,f,c
  7277  002ADA  1E40               	comf	(dtoa@n+5)^0,f,c
  7278  002ADC  1E3F               	comf	(dtoa@n+4)^0,f,c
  7279  002ADE  1E3E               	comf	(dtoa@n+3)^0,f,c
  7280  002AE0  1E3D               	comf	(dtoa@n+2)^0,f,c
  7281  002AE2  1E3C               	comf	(dtoa@n+1)^0,f,c
  7282  002AE4  6C3B               	negf	dtoa@n^0,c
  7283  002AE6  0E00               	movlw	0
  7284  002AE8  223C               	addwfc	(dtoa@n+1)^0,f,c
  7285  002AEA  223D               	addwfc	(dtoa@n+2)^0,f,c
  7286  002AEC  223E               	addwfc	(dtoa@n+3)^0,f,c
  7287  002AEE  223F               	addwfc	(dtoa@n+4)^0,f,c
  7288  002AF0  2240               	addwfc	(dtoa@n+5)^0,f,c
  7289  002AF2  2241               	addwfc	(dtoa@n+6)^0,f,c
  7290  002AF4  2242               	addwfc	(dtoa@n+7)^0,f,c
  7291  002AF6                     l9007:
  7292                           
  7293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7294  002AF6  0101               	movlb	1	; () banked
  7295  002AF8  BF31               	btfsc	(_prec+1)& (0+255),7,b
  7296  002AFA  EF81  F015         	goto	u9841
  7297  002AFE  EF83  F015         	goto	u9840
  7298  002B02                     u9841:
  7299  002B02  EF84  F015         	goto	l9011
  7300  002B06                     u9840:
  7301  002B06                     
  7302                           ; BSR set to: 1
  7303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7304  002B06  9332               	bcf	_flags& (0+255),1,b
  7305  002B08                     l9011:
  7306                           
  7307                           ; BSR set to: 1
  7308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7309  002B08  BF31               	btfsc	(_prec+1)& (0+255),7,b
  7310  002B0A  EF91  F015         	goto	u9850
  7311  002B0E  5131               	movf	(_prec+1)& (0+255),w,b
  7312  002B10  E106               	bnz	u9851
  7313  002B12  0530               	decf	_prec& (0+255),w,b
  7314  002B14  B0D8               	btfsc	status,0,c
  7315  002B16  EF8F  F015         	goto	u9851
  7316  002B1A  EF91  F015         	goto	u9850
  7317  002B1E                     u9851:
  7318  002B1E  EF97  F015         	goto	l800
  7319  002B22                     u9850:
  7320  002B22                     
  7321                           ; BSR set to: 1
  7322  002B22  0E00               	movlw	0
  7323  002B24  6E36               	movwf	(dtoa@p+1)^0,c
  7324  002B26  0E01               	movlw	1
  7325  002B28  6E35               	movwf	dtoa@p^0,c
  7326  002B2A  EF9B  F015         	goto	l802
  7327  002B2E                     l800:
  7328                           
  7329                           ; BSR set to: 1
  7330  002B2E  C130  F035         	movff	_prec,dtoa@p
  7331  002B32  C131  F036         	movff	_prec+1,dtoa@p+1
  7332  002B36                     l802:
  7333                           
  7334                           ; BSR set to: 1
  7335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7336  002B36  C12E  F037         	movff	_width,dtoa@w
  7337  002B3A  C12F  F038         	movff	_width+1,dtoa@w+1
  7338  002B3E                     
  7339                           ; BSR set to: 1
  7340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7341  002B3E  5039               	movf	dtoa@s^0,w,c
  7342  002B40  103A               	iorwf	(dtoa@s+1)^0,w,c
  7343  002B42  A4D8               	btfss	status,2,c
  7344  002B44  EFA6  F015         	goto	u9861
  7345  002B48  EFA8  F015         	goto	u9860
  7346  002B4C                     u9861:
  7347  002B4C  EFAF  F015         	goto	l9019
  7348  002B50                     u9860:
  7349  002B50                     
  7350                           ; BSR set to: 1
  7351  002B50  A532               	btfss	_flags& (0+255),2,b
  7352  002B52  EFAD  F015         	goto	u9871
  7353  002B56  EFAF  F015         	goto	u9870
  7354  002B5A                     u9871:
  7355  002B5A  EFB2  F015         	goto	l9021
  7356  002B5E                     u9870:
  7357  002B5E                     l9019:
  7358                           
  7359                           ; BSR set to: 1
  7360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7361  002B5E  0637               	decf	dtoa@w^0,f,c
  7362  002B60  A0D8               	btfss	status,0,c
  7363  002B62  0638               	decf	(dtoa@w+1)^0,f,c
  7364  002B64                     l9021:
  7365                           
  7366                           ; BSR set to: 1
  7367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7368  002B64  0E00               	movlw	0
  7369  002B66  6E44               	movwf	(dtoa@i+1)^0,c
  7370  002B68  0E4F               	movlw	79
  7371  002B6A  6E43               	movwf	dtoa@i^0,c
  7372  002B6C                     
  7373                           ; BSR set to: 1
  7374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7375  002B6C  0E00               	movlw	0
  7376  002B6E  6F8F               	movwf	(_dbuf+79)& (0+255),b
  7377                           
  7378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7379  002B70  EF36  F016         	goto	l9035
  7380  002B74                     l9025:
  7381                           
  7382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7383  002B74  0643               	decf	dtoa@i^0,f,c
  7384  002B76  A0D8               	btfss	status,0,c
  7385  002B78  0644               	decf	(dtoa@i+1)^0,f,c
  7386  002B7A                     
  7387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7388  002B7A  0E40               	movlw	low _dbuf
  7389  002B7C  2443               	addwf	dtoa@i^0,w,c
  7390  002B7E  6ED9               	movwf	fsr2l,c
  7391  002B80  0E01               	movlw	high _dbuf
  7392  002B82  2044               	addwfc	(dtoa@i+1)^0,w,c
  7393  002B84  6EDA               	movwf	fsr2h,c
  7394  002B86  C03B  F006         	movff	dtoa@n,___aomod@dividend
  7395  002B8A  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
  7396  002B8E  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
  7397  002B92  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
  7398  002B96  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  7399  002B9A  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  7400  002B9E  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  7401  002BA2  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  7402  002BA6  0E0A               	movlw	10
  7403  002BA8  6E0E               	movwf	___aomod@divisor^0,c
  7404  002BAA  0E00               	movlw	0
  7405  002BAC  6E0F               	movwf	(___aomod@divisor+1)^0,c
  7406  002BAE  0E00               	movlw	0
  7407  002BB0  6E10               	movwf	(___aomod@divisor+2)^0,c
  7408  002BB2  0E00               	movlw	0
  7409  002BB4  6E11               	movwf	(___aomod@divisor+3)^0,c
  7410  002BB6  0E00               	movlw	0
  7411  002BB8  6E12               	movwf	(___aomod@divisor+4)^0,c
  7412  002BBA  0E00               	movlw	0
  7413  002BBC  6E13               	movwf	(___aomod@divisor+5)^0,c
  7414  002BBE  0E00               	movlw	0
  7415  002BC0  6E14               	movwf	(___aomod@divisor+6)^0,c
  7416  002BC2  0E00               	movlw	0
  7417  002BC4  6E15               	movwf	(___aomod@divisor+7)^0,c
  7418  002BC6  ECB5  F01D         	call	___aomod	;wreg free
  7419  002BCA  C006  F02B         	movff	?___aomod,??_dtoa
  7420  002BCE  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  7421  002BD2  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  7422  002BD6  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  7423  002BDA  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  7424  002BDE  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  7425  002BE2  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  7426  002BE6  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  7427  002BEA  C02B  F018         	movff	??_dtoa,abs@a
  7428  002BEE  C02D  F019         	movff	??_dtoa+2,abs@a+1
  7429  002BF2  EC99  F029         	call	_abs	;wreg free
  7430  002BF6  5018               	movf	?_abs^0,w,c
  7431  002BF8  0F30               	addlw	48
  7432  002BFA  6EDF               	movwf	indf2,c
  7433  002BFC                     
  7434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7435  002BFC  0635               	decf	dtoa@p^0,f,c
  7436  002BFE  A0D8               	btfss	status,0,c
  7437  002C00  0636               	decf	(dtoa@p+1)^0,f,c
  7438  002C02                     
  7439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7440  002C02  0637               	decf	dtoa@w^0,f,c
  7441  002C04  A0D8               	btfss	status,0,c
  7442  002C06  0638               	decf	(dtoa@w+1)^0,f,c
  7443  002C08                     
  7444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7445  002C08  C03B  F006         	movff	dtoa@n,___aodiv@dividend
  7446  002C0C  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  7447  002C10  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  7448  002C14  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  7449  002C18  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  7450  002C1C  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  7451  002C20  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  7452  002C24  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  7453  002C28  0E0A               	movlw	10
  7454  002C2A  6E0E               	movwf	___aodiv@divisor^0,c
  7455  002C2C  0E00               	movlw	0
  7456  002C2E  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  7457  002C30  0E00               	movlw	0
  7458  002C32  6E10               	movwf	(___aodiv@divisor+2)^0,c
  7459  002C34  0E00               	movlw	0
  7460  002C36  6E11               	movwf	(___aodiv@divisor+3)^0,c
  7461  002C38  0E00               	movlw	0
  7462  002C3A  6E12               	movwf	(___aodiv@divisor+4)^0,c
  7463  002C3C  0E00               	movlw	0
  7464  002C3E  6E13               	movwf	(___aodiv@divisor+5)^0,c
  7465  002C40  0E00               	movlw	0
  7466  002C42  6E14               	movwf	(___aodiv@divisor+6)^0,c
  7467  002C44  0E00               	movlw	0
  7468  002C46  6E15               	movwf	(___aodiv@divisor+7)^0,c
  7469  002C48  EC33  F01C         	call	___aodiv	;wreg free
  7470  002C4C  C006  F03B         	movff	?___aodiv,dtoa@n
  7471  002C50  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
  7472  002C54  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
  7473  002C58  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
  7474  002C5C  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
  7475  002C60  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
  7476  002C64  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
  7477  002C68  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
  7478  002C6C                     l9035:
  7479                           
  7480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7481  002C6C  BE44               	btfsc	(dtoa@i+1)^0,7,c
  7482  002C6E  EF41  F016         	goto	u9881
  7483  002C72  5044               	movf	(dtoa@i+1)^0,w,c
  7484  002C74  E108               	bnz	u9880
  7485  002C76  0443               	decf	dtoa@i^0,w,c
  7486  002C78  A0D8               	btfss	status,0,c
  7487  002C7A  EF41  F016         	goto	u9881
  7488  002C7E  EF43  F016         	goto	u9880
  7489  002C82                     u9881:
  7490  002C82  EF74  F016         	goto	l9045
  7491  002C86                     u9880:
  7492  002C86  503B               	movf	dtoa@n^0,w,c
  7493  002C88  103C               	iorwf	(dtoa@n+1)^0,w,c
  7494  002C8A  103D               	iorwf	(dtoa@n+2)^0,w,c
  7495  002C8C  103E               	iorwf	(dtoa@n+3)^0,w,c
  7496  002C8E  103F               	iorwf	(dtoa@n+4)^0,w,c
  7497  002C90  1040               	iorwf	(dtoa@n+5)^0,w,c
  7498  002C92  1041               	iorwf	(dtoa@n+6)^0,w,c
  7499  002C94  1042               	iorwf	(dtoa@n+7)^0,w,c
  7500  002C96  A4D8               	btfss	status,2,c
  7501  002C98  EF50  F016         	goto	u9891
  7502  002C9C  EF52  F016         	goto	u9890
  7503  002CA0                     u9891:
  7504  002CA0  EFBA  F015         	goto	l9025
  7505  002CA4                     u9890:
  7506  002CA4  BE36               	btfsc	(dtoa@p+1)^0,7,c
  7507  002CA6  EF5F  F016         	goto	u9900
  7508  002CAA  5036               	movf	(dtoa@p+1)^0,w,c
  7509  002CAC  E106               	bnz	u9901
  7510  002CAE  0435               	decf	dtoa@p^0,w,c
  7511  002CB0  B0D8               	btfsc	status,0,c
  7512  002CB2  EF5D  F016         	goto	u9901
  7513  002CB6  EF5F  F016         	goto	u9900
  7514  002CBA                     u9901:
  7515  002CBA  EFBA  F015         	goto	l9025
  7516  002CBE                     u9900:
  7517  002CBE  BE38               	btfsc	(dtoa@w+1)^0,7,c
  7518  002CC0  EF6A  F016         	goto	u9911
  7519  002CC4  5038               	movf	(dtoa@w+1)^0,w,c
  7520  002CC6  E108               	bnz	u9910
  7521  002CC8  0437               	decf	dtoa@w^0,w,c
  7522  002CCA  A0D8               	btfss	status,0,c
  7523  002CCC  EF6A  F016         	goto	u9911
  7524  002CD0  EF6C  F016         	goto	u9910
  7525  002CD4                     u9911:
  7526  002CD4  EF74  F016         	goto	l9045
  7527  002CD8                     u9910:
  7528  002CD8  0101               	movlb	1	; () banked
  7529  002CDA  B332               	btfsc	_flags& (0+255),1,b
  7530  002CDC  EF72  F016         	goto	u9921
  7531  002CE0  EF74  F016         	goto	u9920
  7532  002CE4                     u9921:
  7533  002CE4  EFBA  F015         	goto	l9025
  7534  002CE8                     u9920:
  7535  002CE8                     l9045:
  7536                           
  7537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7538  002CE8  5039               	movf	dtoa@s^0,w,c
  7539  002CEA  103A               	iorwf	(dtoa@s+1)^0,w,c
  7540  002CEC  A4D8               	btfss	status,2,c
  7541  002CEE  EF7B  F016         	goto	u9931
  7542  002CF2  EF7D  F016         	goto	u9930
  7543  002CF6                     u9931:
  7544  002CF6  EF85  F016         	goto	l9049
  7545  002CFA                     u9930:
  7546  002CFA  0101               	movlb	1	; () banked
  7547  002CFC  A532               	btfss	_flags& (0+255),2,b
  7548  002CFE  EF83  F016         	goto	u9941
  7549  002D02  EF85  F016         	goto	u9940
  7550  002D06                     u9941:
  7551  002D06  EFA3  F016         	goto	l9059
  7552  002D0A                     u9940:
  7553  002D0A                     l9049:
  7554                           
  7555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7556  002D0A  0643               	decf	dtoa@i^0,f,c
  7557  002D0C  A0D8               	btfss	status,0,c
  7558  002D0E  0644               	decf	(dtoa@i+1)^0,f,c
  7559  002D10                     
  7560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7561  002D10  5039               	movf	dtoa@s^0,w,c
  7562  002D12  103A               	iorwf	(dtoa@s+1)^0,w,c
  7563  002D14  A4D8               	btfss	status,2,c
  7564  002D16  EF8F  F016         	goto	u9951
  7565  002D1A  EF91  F016         	goto	u9950
  7566  002D1E                     u9951:
  7567  002D1E  EF97  F016         	goto	l9055
  7568  002D22                     u9950:
  7569  002D22  0E00               	movlw	0
  7570  002D24  6E34               	movwf	(_dtoa$905+1)^0,c
  7571  002D26  0E2B               	movlw	43
  7572  002D28  6E33               	movwf	_dtoa$905^0,c
  7573  002D2A  EF9B  F016         	goto	l9057
  7574  002D2E                     l9055:
  7575  002D2E  0E00               	movlw	0
  7576  002D30  6E34               	movwf	(_dtoa$905+1)^0,c
  7577  002D32  0E2D               	movlw	45
  7578  002D34  6E33               	movwf	_dtoa$905^0,c
  7579  002D36                     l9057:
  7580  002D36  0E40               	movlw	low _dbuf
  7581  002D38  2443               	addwf	dtoa@i^0,w,c
  7582  002D3A  6ED9               	movwf	fsr2l,c
  7583  002D3C  0E01               	movlw	high _dbuf
  7584  002D3E  2044               	addwfc	(dtoa@i+1)^0,w,c
  7585  002D40  6EDA               	movwf	fsr2h,c
  7586  002D42  C033  FFDF         	movff	_dtoa$905,indf2
  7587  002D46                     l9059:
  7588                           
  7589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  7590  002D46  C021  F016         	movff	dtoa@fp,pad@fp
  7591  002D4A  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  7592  002D4E  0E40               	movlw	low _dbuf
  7593  002D50  2443               	addwf	dtoa@i^0,w,c
  7594  002D52  6E18               	movwf	pad@buf^0,c
  7595  002D54  0E01               	movlw	high _dbuf
  7596  002D56  2044               	addwfc	(dtoa@i+1)^0,w,c
  7597  002D58  6E19               	movwf	(pad@buf+1)^0,c
  7598  002D5A  C037  F01A         	movff	dtoa@w,pad@p
  7599  002D5E  C038  F01B         	movff	dtoa@w+1,pad@p+1
  7600  002D62  EC57  F022         	call	_pad	;wreg free
  7601  002D66  C016  F021         	movff	?_pad,?_dtoa
  7602  002D6A  C017  F022         	movff	?_pad+1,?_dtoa+1
  7603  002D6E  0012               	return		;funcret
  7604  002D70                     __end_of_dtoa:
  7605                           	opt callstack 0
  7606                           
  7607 ;; *************** function _abs *****************
  7608 ;; Defined at:
  7609 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  a               2   23[COMRAM] int 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;		None
  7614 ;; Return value:  Size  Location     Type
  7615 ;;                  2   23[COMRAM] int 
  7616 ;; Registers used:
  7617 ;;		wreg, status,2, status,0
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7623 ;;      Params:         2       0       0       0       0       0       0       0       0
  7624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7625 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7626 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7627 ;;Total ram usage:        4 bytes
  7628 ;; Hardware stack levels used:    1
  7629 ;; Hardware stack levels required when called:    2
  7630 ;; This function calls:
  7631 ;;		Nothing
  7632 ;; This function is called by:
  7633 ;;		_dtoa
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           	psect	text21
  7638  005332                     __ptext21:
  7639                           	opt callstack 0
  7640  005332                     _abs:
  7641                           	opt callstack 23
  7642  005332  BE19               	btfsc	(abs@a+1)^0,7,c
  7643  005334  EFA6  F029         	goto	u9190
  7644  005338  5019               	movf	(abs@a+1)^0,w,c
  7645  00533A  E106               	bnz	u9191
  7646  00533C  0418               	decf	abs@a^0,w,c
  7647  00533E  B0D8               	btfsc	status,0,c
  7648  005340  EFA4  F029         	goto	u9191
  7649  005344  EFA6  F029         	goto	u9190
  7650  005348                     u9191:
  7651  005348  EFB4  F029         	goto	l1635
  7652  00534C                     u9190:
  7653  00534C  C018  F01A         	movff	abs@a,??_abs
  7654  005350  C019  F01B         	movff	abs@a+1,??_abs+1
  7655  005354  1E1A               	comf	??_abs^0,f,c
  7656  005356  1E1B               	comf	(??_abs+1)^0,f,c
  7657  005358  4A1A               	infsnz	??_abs^0,f,c
  7658  00535A  2A1B               	incf	(??_abs+1)^0,f,c
  7659  00535C  C01A  F018         	movff	??_abs,?_abs
  7660  005360  C01B  F019         	movff	??_abs+1,?_abs+1
  7661  005364  EFB8  F029         	goto	l1638
  7662  005368                     l1635:
  7663  005368  C018  F018         	movff	abs@a,?_abs
  7664  00536C  C019  F019         	movff	abs@a+1,?_abs+1
  7665  005370                     l1638:
  7666  005370  0012               	return		;funcret
  7667  005372                     __end_of_abs:
  7668                           	opt callstack 0
  7669                           
  7670 ;; *************** function ___aomod *****************
  7671 ;; Defined at:
  7672 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  dividend        8    5[COMRAM] long long 
  7675 ;;  divisor         8   13[COMRAM] long long 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;  sign            1   22[COMRAM] unsigned char 
  7678 ;;  counter         1   21[COMRAM] unsigned char 
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  8    5[COMRAM] long long 
  7681 ;; Registers used:
  7682 ;;		wreg, status,2, status,0
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7688 ;;      Params:        16       0       0       0       0       0       0       0       0
  7689 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7691 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7692 ;;Total ram usage:       18 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:    2
  7695 ;; This function calls:
  7696 ;;		Nothing
  7697 ;; This function is called by:
  7698 ;;		_dtoa
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           	psect	text22
  7703  003B6A                     __ptext22:
  7704                           	opt callstack 0
  7705  003B6A                     ___aomod:
  7706                           	opt callstack 23
  7707  003B6A  0E00               	movlw	0
  7708  003B6C  6E17               	movwf	___aomod@sign^0,c
  7709  003B6E  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  7710  003B70  EFBE  F01D         	goto	u9510
  7711  003B74  EFBC  F01D         	goto	u9511
  7712  003B78                     u9511:
  7713  003B78  EFD0  F01D         	goto	l8797
  7714  003B7C                     u9510:
  7715  003B7C  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7716  003B7E  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7717  003B80  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7718  003B82  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7719  003B84  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7720  003B86  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7721  003B88  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7722  003B8A  6C06               	negf	___aomod@dividend^0,c
  7723  003B8C  0E00               	movlw	0
  7724  003B8E  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7725  003B90  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7726  003B92  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7727  003B94  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7728  003B96  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7729  003B98  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7730  003B9A  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7731  003B9C  0E01               	movlw	1
  7732  003B9E  6E17               	movwf	___aomod@sign^0,c
  7733  003BA0                     l8797:
  7734  003BA0  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  7735  003BA2  EFD7  F01D         	goto	u9520
  7736  003BA6  EFD5  F01D         	goto	u9521
  7737  003BAA                     u9521:
  7738  003BAA  EFE7  F01D         	goto	l8801
  7739  003BAE                     u9520:
  7740  003BAE  1E15               	comf	(___aomod@divisor+7)^0,f,c
  7741  003BB0  1E14               	comf	(___aomod@divisor+6)^0,f,c
  7742  003BB2  1E13               	comf	(___aomod@divisor+5)^0,f,c
  7743  003BB4  1E12               	comf	(___aomod@divisor+4)^0,f,c
  7744  003BB6  1E11               	comf	(___aomod@divisor+3)^0,f,c
  7745  003BB8  1E10               	comf	(___aomod@divisor+2)^0,f,c
  7746  003BBA  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  7747  003BBC  6C0E               	negf	___aomod@divisor^0,c
  7748  003BBE  0E00               	movlw	0
  7749  003BC0  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  7750  003BC2  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  7751  003BC4  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  7752  003BC6  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  7753  003BC8  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  7754  003BCA  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  7755  003BCC  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  7756  003BCE                     l8801:
  7757  003BCE  500E               	movf	___aomod@divisor^0,w,c
  7758  003BD0  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  7759  003BD2  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  7760  003BD4  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  7761  003BD6  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  7762  003BD8  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  7763  003BDA  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  7764  003BDC  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  7765  003BDE  B4D8               	btfsc	status,2,c
  7766  003BE0  EFF4  F01D         	goto	u9531
  7767  003BE4  EFF6  F01D         	goto	u9530
  7768  003BE8                     u9531:
  7769  003BE8  EF3E  F01E         	goto	l8817
  7770  003BEC                     u9530:
  7771  003BEC  0E01               	movlw	1
  7772  003BEE  6E16               	movwf	___aomod@counter^0,c
  7773  003BF0  EF04  F01E         	goto	l8807
  7774  003BF4                     l8805:
  7775  003BF4  90D8               	bcf	status,0,c
  7776  003BF6  360E               	rlcf	___aomod@divisor^0,f,c
  7777  003BF8  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  7778  003BFA  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  7779  003BFC  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  7780  003BFE  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  7781  003C00  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  7782  003C02  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  7783  003C04  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  7784  003C06  2A16               	incf	___aomod@counter^0,f,c
  7785  003C08                     l8807:
  7786  003C08  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7787  003C0A  EF09  F01E         	goto	u9541
  7788  003C0E  EF0B  F01E         	goto	u9540
  7789  003C12                     u9541:
  7790  003C12  EFFA  F01D         	goto	l8805
  7791  003C16                     u9540:
  7792  003C16                     l8809:
  7793  003C16  500E               	movf	___aomod@divisor^0,w,c
  7794  003C18  5C06               	subwf	___aomod@dividend^0,w,c
  7795  003C1A  500F               	movf	(___aomod@divisor+1)^0,w,c
  7796  003C1C  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  7797  003C1E  5010               	movf	(___aomod@divisor+2)^0,w,c
  7798  003C20  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  7799  003C22  5011               	movf	(___aomod@divisor+3)^0,w,c
  7800  003C24  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  7801  003C26  5012               	movf	(___aomod@divisor+4)^0,w,c
  7802  003C28  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  7803  003C2A  5013               	movf	(___aomod@divisor+5)^0,w,c
  7804  003C2C  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  7805  003C2E  5014               	movf	(___aomod@divisor+6)^0,w,c
  7806  003C30  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  7807  003C32  5015               	movf	(___aomod@divisor+7)^0,w,c
  7808  003C34  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  7809  003C36  A0D8               	btfss	status,0,c
  7810  003C38  EF20  F01E         	goto	u9551
  7811  003C3C  EF22  F01E         	goto	u9550
  7812  003C40                     u9551:
  7813  003C40  EF32  F01E         	goto	l8813
  7814  003C44                     u9550:
  7815  003C44  500E               	movf	___aomod@divisor^0,w,c
  7816  003C46  5E06               	subwf	___aomod@dividend^0,f,c
  7817  003C48  500F               	movf	(___aomod@divisor+1)^0,w,c
  7818  003C4A  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  7819  003C4C  5010               	movf	(___aomod@divisor+2)^0,w,c
  7820  003C4E  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  7821  003C50  5011               	movf	(___aomod@divisor+3)^0,w,c
  7822  003C52  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  7823  003C54  5012               	movf	(___aomod@divisor+4)^0,w,c
  7824  003C56  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  7825  003C58  5013               	movf	(___aomod@divisor+5)^0,w,c
  7826  003C5A  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  7827  003C5C  5014               	movf	(___aomod@divisor+6)^0,w,c
  7828  003C5E  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  7829  003C60  5015               	movf	(___aomod@divisor+7)^0,w,c
  7830  003C62  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  7831  003C64                     l8813:
  7832  003C64  90D8               	bcf	status,0,c
  7833  003C66  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  7834  003C68  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  7835  003C6A  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  7836  003C6C  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  7837  003C6E  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  7838  003C70  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  7839  003C72  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  7840  003C74  320E               	rrcf	___aomod@divisor^0,f,c
  7841  003C76  2E16               	decfsz	___aomod@counter^0,f,c
  7842  003C78  EF0B  F01E         	goto	l8809
  7843  003C7C                     l8817:
  7844  003C7C  5017               	movf	___aomod@sign^0,w,c
  7845  003C7E  B4D8               	btfsc	status,2,c
  7846  003C80  EF44  F01E         	goto	u9561
  7847  003C84  EF46  F01E         	goto	u9560
  7848  003C88                     u9561:
  7849  003C88  EF56  F01E         	goto	l8821
  7850  003C8C                     u9560:
  7851  003C8C  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7852  003C8E  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7853  003C90  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7854  003C92  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7855  003C94  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7856  003C96  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7857  003C98  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7858  003C9A  6C06               	negf	___aomod@dividend^0,c
  7859  003C9C  0E00               	movlw	0
  7860  003C9E  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7861  003CA0  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7862  003CA2  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7863  003CA4  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7864  003CA6  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7865  003CA8  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7866  003CAA  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7867  003CAC                     l8821:
  7868  003CAC  C006  F006         	movff	___aomod@dividend,?___aomod
  7869  003CB0  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  7870  003CB4  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  7871  003CB8  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  7872  003CBC  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  7873  003CC0  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  7874  003CC4  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  7875  003CC8  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  7876  003CCC  0012               	return		;funcret
  7877  003CCE                     __end_of___aomod:
  7878                           	opt callstack 0
  7879                           
  7880 ;; *************** function ___aodiv *****************
  7881 ;; Defined at:
  7882 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  dividend        8    5[COMRAM] long long 
  7885 ;;  divisor         8   13[COMRAM] long long 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  quotient        8   23[COMRAM] long long 
  7888 ;;  sign            1   22[COMRAM] unsigned char 
  7889 ;;  counter         1   21[COMRAM] unsigned char 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  8    5[COMRAM] long long 
  7892 ;; Registers used:
  7893 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7899 ;;      Params:        16       0       0       0       0       0       0       0       0
  7900 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7901 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7902 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7903 ;;Total ram usage:       26 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    2
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_dtoa
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text23
  7914  003866                     __ptext23:
  7915                           	opt callstack 0
  7916  003866                     ___aodiv:
  7917                           	opt callstack 23
  7918  003866  0E00               	movlw	0
  7919  003868  6E17               	movwf	___aodiv@sign^0,c
  7920  00386A  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  7921  00386C  EF3C  F01C         	goto	u9440
  7922  003870  EF3A  F01C         	goto	u9441
  7923  003874                     u9441:
  7924  003874  EF4E  F01C         	goto	l8753
  7925  003878                     u9440:
  7926  003878  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  7927  00387A  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  7928  00387C  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  7929  00387E  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  7930  003880  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  7931  003882  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  7932  003884  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  7933  003886  6C0E               	negf	___aodiv@divisor^0,c
  7934  003888  0E00               	movlw	0
  7935  00388A  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  7936  00388C  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  7937  00388E  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  7938  003890  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  7939  003892  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  7940  003894  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  7941  003896  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  7942  003898  0E01               	movlw	1
  7943  00389A  6E17               	movwf	___aodiv@sign^0,c
  7944  00389C                     l8753:
  7945  00389C  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  7946  00389E  EF55  F01C         	goto	u9450
  7947  0038A2  EF53  F01C         	goto	u9451
  7948  0038A6                     u9451:
  7949  0038A6  EF67  F01C         	goto	l8759
  7950  0038AA                     u9450:
  7951  0038AA  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  7952  0038AC  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  7953  0038AE  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  7954  0038B0  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  7955  0038B2  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  7956  0038B4  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  7957  0038B6  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  7958  0038B8  6C06               	negf	___aodiv@dividend^0,c
  7959  0038BA  0E00               	movlw	0
  7960  0038BC  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  7961  0038BE  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  7962  0038C0  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  7963  0038C2  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  7964  0038C4  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  7965  0038C6  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  7966  0038C8  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  7967  0038CA  0E01               	movlw	1
  7968  0038CC  1A17               	xorwf	___aodiv@sign^0,f,c
  7969  0038CE                     l8759:
  7970  0038CE  EE20  F018         	lfsr	2,___aodiv@quotient
  7971  0038D2  0E07               	movlw	7
  7972  0038D4                     u9461:
  7973  0038D4  6ADE               	clrf	postinc2,c
  7974  0038D6  06E8               	decf	wreg,f,c
  7975  0038D8  E2FD               	bc	u9461
  7976  0038DA  500E               	movf	___aodiv@divisor^0,w,c
  7977  0038DC  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  7978  0038DE  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  7979  0038E0  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  7980  0038E2  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  7981  0038E4  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  7982  0038E6  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  7983  0038E8  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  7984  0038EA  B4D8               	btfsc	status,2,c
  7985  0038EC  EF7A  F01C         	goto	u9471
  7986  0038F0  EF7C  F01C         	goto	u9470
  7987  0038F4                     u9471:
  7988  0038F4  EFCE  F01C         	goto	l8781
  7989  0038F8                     u9470:
  7990  0038F8  0E01               	movlw	1
  7991  0038FA  6E16               	movwf	___aodiv@counter^0,c
  7992  0038FC  EF8A  F01C         	goto	l8767
  7993  003900                     l8765:
  7994  003900  90D8               	bcf	status,0,c
  7995  003902  360E               	rlcf	___aodiv@divisor^0,f,c
  7996  003904  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  7997  003906  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  7998  003908  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  7999  00390A  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  8000  00390C  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  8001  00390E  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  8002  003910  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  8003  003912  2A16               	incf	___aodiv@counter^0,f,c
  8004  003914                     l8767:
  8005  003914  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  8006  003916  EF8F  F01C         	goto	u9481
  8007  00391A  EF91  F01C         	goto	u9480
  8008  00391E                     u9481:
  8009  00391E  EF80  F01C         	goto	l8765
  8010  003922                     u9480:
  8011  003922                     l8769:
  8012  003922  90D8               	bcf	status,0,c
  8013  003924  3618               	rlcf	___aodiv@quotient^0,f,c
  8014  003926  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  8015  003928  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  8016  00392A  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  8017  00392C  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  8018  00392E  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  8019  003930  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  8020  003932  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  8021  003934  500E               	movf	___aodiv@divisor^0,w,c
  8022  003936  5C06               	subwf	___aodiv@dividend^0,w,c
  8023  003938  500F               	movf	(___aodiv@divisor+1)^0,w,c
  8024  00393A  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  8025  00393C  5010               	movf	(___aodiv@divisor+2)^0,w,c
  8026  00393E  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  8027  003940  5011               	movf	(___aodiv@divisor+3)^0,w,c
  8028  003942  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  8029  003944  5012               	movf	(___aodiv@divisor+4)^0,w,c
  8030  003946  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  8031  003948  5013               	movf	(___aodiv@divisor+5)^0,w,c
  8032  00394A  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  8033  00394C  5014               	movf	(___aodiv@divisor+6)^0,w,c
  8034  00394E  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  8035  003950  5015               	movf	(___aodiv@divisor+7)^0,w,c
  8036  003952  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  8037  003954  A0D8               	btfss	status,0,c
  8038  003956  EFAF  F01C         	goto	u9491
  8039  00395A  EFB1  F01C         	goto	u9490
  8040  00395E                     u9491:
  8041  00395E  EFC2  F01C         	goto	l8777
  8042  003962                     u9490:
  8043  003962  500E               	movf	___aodiv@divisor^0,w,c
  8044  003964  5E06               	subwf	___aodiv@dividend^0,f,c
  8045  003966  500F               	movf	(___aodiv@divisor+1)^0,w,c
  8046  003968  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  8047  00396A  5010               	movf	(___aodiv@divisor+2)^0,w,c
  8048  00396C  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  8049  00396E  5011               	movf	(___aodiv@divisor+3)^0,w,c
  8050  003970  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  8051  003972  5012               	movf	(___aodiv@divisor+4)^0,w,c
  8052  003974  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  8053  003976  5013               	movf	(___aodiv@divisor+5)^0,w,c
  8054  003978  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  8055  00397A  5014               	movf	(___aodiv@divisor+6)^0,w,c
  8056  00397C  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  8057  00397E  5015               	movf	(___aodiv@divisor+7)^0,w,c
  8058  003980  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  8059  003982  8018               	bsf	___aodiv@quotient^0,0,c
  8060  003984                     l8777:
  8061  003984  90D8               	bcf	status,0,c
  8062  003986  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  8063  003988  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  8064  00398A  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  8065  00398C  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  8066  00398E  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  8067  003990  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  8068  003992  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  8069  003994  320E               	rrcf	___aodiv@divisor^0,f,c
  8070  003996  2E16               	decfsz	___aodiv@counter^0,f,c
  8071  003998  EF91  F01C         	goto	l8769
  8072  00399C                     l8781:
  8073  00399C  5017               	movf	___aodiv@sign^0,w,c
  8074  00399E  B4D8               	btfsc	status,2,c
  8075  0039A0  EFD4  F01C         	goto	u9501
  8076  0039A4  EFD6  F01C         	goto	u9500
  8077  0039A8                     u9501:
  8078  0039A8  EFE6  F01C         	goto	l8785
  8079  0039AC                     u9500:
  8080  0039AC  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  8081  0039AE  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  8082  0039B0  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  8083  0039B2  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  8084  0039B4  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  8085  0039B6  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  8086  0039B8  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  8087  0039BA  6C18               	negf	___aodiv@quotient^0,c
  8088  0039BC  0E00               	movlw	0
  8089  0039BE  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  8090  0039C0  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  8091  0039C2  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  8092  0039C4  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  8093  0039C6  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  8094  0039C8  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  8095  0039CA  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  8096  0039CC                     l8785:
  8097  0039CC  C018  F006         	movff	___aodiv@quotient,?___aodiv
  8098  0039D0  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  8099  0039D4  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  8100  0039D8  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  8101  0039DC  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  8102  0039E0  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  8103  0039E4  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  8104  0039E8  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  8105  0039EC  0012               	return		;funcret
  8106  0039EE                     __end_of___aodiv:
  8107                           	opt callstack 0
  8108                           
  8109 ;; *************** function _ctoa *****************
  8110 ;; Defined at:
  8111 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  8114 ;;		 -> sprintf@f(6), 
  8115 ;;  c               1   34[COMRAM] unsigned char 
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;  w               2   35[COMRAM] int 
  8118 ;;  l               2    0        int 
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  2   32[COMRAM] int 
  8121 ;; Registers used:
  8122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8128 ;;      Params:         3       0       0       0       0       0       0       0       0
  8129 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8131 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8132 ;;Total ram usage:        5 bytes
  8133 ;; Hardware stack levels used:    1
  8134 ;; Hardware stack levels required when called:    6
  8135 ;; This function calls:
  8136 ;;		_pad
  8137 ;; This function is called by:
  8138 ;;		_vfpfcnvrt
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           	psect	text24
  8143  004F84                     __ptext24:
  8144                           	opt callstack 0
  8145  004F84                     _ctoa:
  8146                           	opt callstack 20
  8147  004F84                     
  8148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  8149  004F84  0101               	movlb	1	; () banked
  8150  004F86  512E               	movf	_width& (0+255),w,b
  8151  004F88  112F               	iorwf	(_width+1)& (0+255),w,b
  8152  004F8A  A4D8               	btfss	status,2,c
  8153  004F8C  EFCA  F027         	goto	u9801
  8154  004F90  EFCC  F027         	goto	u9800
  8155  004F94                     u9801:
  8156  004F94  EFD2  F027         	goto	l8991
  8157  004F98                     u9800:
  8158  004F98                     
  8159                           ; BSR set to: 1
  8160  004F98  C12E  F024         	movff	_width,ctoa@w
  8161  004F9C  C12F  F025         	movff	_width+1,ctoa@w+1
  8162  004FA0  EFD8  F027         	goto	l8993
  8163  004FA4                     l8991:
  8164                           
  8165                           ; BSR set to: 1
  8166  004FA4  0EFF               	movlw	255
  8167  004FA6  252E               	addwf	_width& (0+255),w,b
  8168  004FA8  6E24               	movwf	ctoa@w^0,c
  8169  004FAA  0EFF               	movlw	255
  8170  004FAC  212F               	addwfc	(_width+1)& (0+255),w,b
  8171  004FAE  6E25               	movwf	(ctoa@w+1)^0,c
  8172  004FB0                     l8993:
  8173                           
  8174                           ; BSR set to: 1
  8175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  8176  004FB0  C023  F140         	movff	ctoa@c,_dbuf
  8177  004FB4                     
  8178                           ; BSR set to: 1
  8179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  8180  004FB4  0E00               	movlw	0
  8181  004FB6  6F41               	movwf	(_dbuf+1)& (0+255),b
  8182  004FB8                     
  8183                           ; BSR set to: 1
  8184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  8185  004FB8  C021  F016         	movff	ctoa@fp,pad@fp
  8186  004FBC  C022  F017         	movff	ctoa@fp+1,pad@fp+1
  8187  004FC0  0E40               	movlw	low _dbuf
  8188  004FC2  6E18               	movwf	pad@buf^0,c
  8189  004FC4  0E01               	movlw	high _dbuf
  8190  004FC6  6E19               	movwf	(pad@buf+1)^0,c
  8191  004FC8  C024  F01A         	movff	ctoa@w,pad@p
  8192  004FCC  C025  F01B         	movff	ctoa@w+1,pad@p+1
  8193  004FD0  EC57  F022         	call	_pad	;wreg free
  8194  004FD4  C016  F021         	movff	?_pad,?_ctoa
  8195  004FD8  C017  F022         	movff	?_pad+1,?_ctoa+1
  8196  004FDC  0012               	return		;funcret
  8197  004FDE                     __end_of_ctoa:
  8198                           	opt callstack 0
  8199                           
  8200 ;; *************** function _pad *****************
  8201 ;; Defined at:
  8202 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  8205 ;;		 -> sprintf@f(6), 
  8206 ;;  buf             2   23[COMRAM] PTR unsigned char 
  8207 ;;		 -> dbuf(80), 
  8208 ;;  p               2   25[COMRAM] int 
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;  w               2   30[COMRAM] int 
  8211 ;;  i               2   28[COMRAM] int 
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  2   21[COMRAM] int 
  8214 ;; Registers used:
  8215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8221 ;;      Params:         6       0       0       0       0       0       0       0       0
  8222 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8223 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8224 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8225 ;;Total ram usage:       11 bytes
  8226 ;; Hardware stack levels used:    1
  8227 ;; Hardware stack levels required when called:    5
  8228 ;; This function calls:
  8229 ;;		_fputc
  8230 ;;		_fputs
  8231 ;;		_strlen
  8232 ;; This function is called by:
  8233 ;;		_ctoa
  8234 ;;		_dtoa
  8235 ;;		_efgtoa
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text25
  8240  0044AE                     __ptext25:
  8241                           	opt callstack 0
  8242  0044AE                     _pad:
  8243                           	opt callstack 20
  8244  0044AE                     
  8245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8246  0044AE  0101               	movlb	1	; () banked
  8247  0044B0  A132               	btfss	_flags& (0+255),0,b
  8248  0044B2  EF5D  F022         	goto	u9151
  8249  0044B6  EF5F  F022         	goto	u9150
  8250  0044BA                     u9151:
  8251  0044BA  EF69  F022         	goto	l8649
  8252  0044BE                     u9150:
  8253  0044BE                     
  8254                           ; BSR set to: 1
  8255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8256  0044BE  C018  F00F         	movff	pad@buf,fputs@s
  8257  0044C2  C019  F010         	movff	pad@buf+1,fputs@s+1
  8258  0044C6  C016  F011         	movff	pad@fp,fputs@fp
  8259  0044CA  C017  F012         	movff	pad@fp+1,fputs@fp+1
  8260  0044CE  EC77  F029         	call	_fputs	;wreg free
  8261  0044D2                     l8649:
  8262                           
  8263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8264  0044D2  BE1B               	btfsc	(pad@p+1)^0,7,c
  8265  0044D4  EF6E  F022         	goto	u9161
  8266  0044D8  EF70  F022         	goto	u9160
  8267  0044DC                     u9161:
  8268  0044DC  EF76  F022         	goto	l8653
  8269  0044E0                     u9160:
  8270  0044E0  C01A  F01F         	movff	pad@p,pad@w
  8271  0044E4  C01B  F020         	movff	pad@p+1,pad@w+1
  8272  0044E8  EF7A  F022         	goto	l782
  8273  0044EC                     l8653:
  8274  0044EC  0E00               	movlw	0
  8275  0044EE  6E20               	movwf	(pad@w+1)^0,c
  8276  0044F0  0E00               	movlw	0
  8277  0044F2  6E1F               	movwf	pad@w^0,c
  8278  0044F4                     l782:
  8279                           
  8280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8281  0044F4  0E00               	movlw	0
  8282  0044F6  6E1E               	movwf	(pad@i+1)^0,c
  8283  0044F8  0E00               	movlw	0
  8284  0044FA  6E1D               	movwf	pad@i^0,c
  8285                           
  8286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8287  0044FC  EF8C  F022         	goto	l8659
  8288  004500                     l8655:
  8289                           
  8290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8291  004500  0E00               	movlw	0
  8292  004502  6E07               	movwf	(fputc@c+1)^0,c
  8293  004504  0E20               	movlw	32
  8294  004506  6E06               	movwf	fputc@c^0,c
  8295  004508  C016  F008         	movff	pad@fp,fputc@fp
  8296  00450C  C017  F009         	movff	pad@fp+1,fputc@fp+1
  8297  004510  EC8E  F021         	call	_fputc	;wreg free
  8298  004514                     
  8299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8300  004514  4A1D               	infsnz	pad@i^0,f,c
  8301  004516  2A1E               	incf	(pad@i+1)^0,f,c
  8302  004518                     l8659:
  8303                           
  8304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8305  004518  501F               	movf	pad@w^0,w,c
  8306  00451A  5C1D               	subwf	pad@i^0,w,c
  8307  00451C  501E               	movf	(pad@i+1)^0,w,c
  8308  00451E  0A80               	xorlw	128
  8309  004520  6E1C               	movwf	??_pad^0,c
  8310  004522  5020               	movf	(pad@w+1)^0,w,c
  8311  004524  0A80               	xorlw	128
  8312  004526  581C               	subwfb	??_pad^0,w,c
  8313  004528  A0D8               	btfss	status,0,c
  8314  00452A  EF99  F022         	goto	u9171
  8315  00452E  EF9B  F022         	goto	u9170
  8316  004532                     u9171:
  8317  004532  EF80  F022         	goto	l8655
  8318  004536                     u9170:
  8319  004536                     
  8320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8321  004536  0101               	movlb	1	; () banked
  8322  004538  B132               	btfsc	_flags& (0+255),0,b
  8323  00453A  EFA1  F022         	goto	u9181
  8324  00453E  EFA3  F022         	goto	u9180
  8325  004542                     u9181:
  8326  004542  EFAD  F022         	goto	l8663
  8327  004546                     u9180:
  8328  004546                     
  8329                           ; BSR set to: 1
  8330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8331  004546  C018  F00F         	movff	pad@buf,fputs@s
  8332  00454A  C019  F010         	movff	pad@buf+1,fputs@s+1
  8333  00454E  C016  F011         	movff	pad@fp,fputs@fp
  8334  004552  C017  F012         	movff	pad@fp+1,fputs@fp+1
  8335  004556  EC77  F029         	call	_fputs	;wreg free
  8336  00455A                     l8663:
  8337                           
  8338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8339  00455A  C018  F006         	movff	pad@buf,strlen@s
  8340  00455E  C019  F007         	movff	pad@buf+1,strlen@s+1
  8341  004562  EC2D  F02A         	call	_strlen	;wreg free
  8342  004566  501F               	movf	pad@w^0,w,c
  8343  004568  2406               	addwf	?_strlen^0,w,c
  8344  00456A  6E16               	movwf	?_pad^0,c
  8345  00456C  5020               	movf	(pad@w+1)^0,w,c
  8346  00456E  2007               	addwfc	(?_strlen+1)^0,w,c
  8347  004570  6E17               	movwf	(?_pad+1)^0,c
  8348  004572  0012               	return		;funcret
  8349  004574                     __end_of_pad:
  8350                           	opt callstack 0
  8351                           
  8352 ;; *************** function _strlen *****************
  8353 ;; Defined at:
  8354 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;  s               2    5[COMRAM] PTR const unsigned char 
  8357 ;;		 -> dbuf(80), 
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;  a               2    7[COMRAM] PTR const unsigned char 
  8360 ;;		 -> dbuf(80), 
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  2    5[COMRAM] unsigned int 
  8363 ;; Registers used:
  8364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8370 ;;      Params:         2       0       0       0       0       0       0       0       0
  8371 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8373 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8374 ;;Total ram usage:        4 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:    2
  8377 ;; This function calls:
  8378 ;;		Nothing
  8379 ;; This function is called by:
  8380 ;;		_pad
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           	psect	text26
  8385  00545A                     __ptext26:
  8386                           	opt callstack 0
  8387  00545A                     _strlen:
  8388                           	opt callstack 22
  8389  00545A  C006  F008         	movff	strlen@s,strlen@a
  8390  00545E  C007  F009         	movff	strlen@s+1,strlen@a+1
  8391  005462  EF35  F02A         	goto	l8057
  8392  005466                     l8055:
  8393  005466  4A06               	infsnz	strlen@s^0,f,c
  8394  005468  2A07               	incf	(strlen@s+1)^0,f,c
  8395  00546A                     l8057:
  8396  00546A  C006  FFD9         	movff	strlen@s,fsr2l
  8397  00546E  C007  FFDA         	movff	strlen@s+1,fsr2h
  8398  005472  50DF               	movf	indf2,w,c
  8399  005474  A4D8               	btfss	status,2,c
  8400  005476  EF3F  F02A         	goto	u8111
  8401  00547A  EF41  F02A         	goto	u8110
  8402  00547E                     u8111:
  8403  00547E  EF33  F02A         	goto	l8055
  8404  005482                     u8110:
  8405  005482  5008               	movf	strlen@a^0,w,c
  8406  005484  5C06               	subwf	strlen@s^0,w,c
  8407  005486  6E06               	movwf	?_strlen^0,c
  8408  005488  5009               	movf	(strlen@a+1)^0,w,c
  8409  00548A  5807               	subwfb	(strlen@s+1)^0,w,c
  8410  00548C  6E07               	movwf	(?_strlen+1)^0,c
  8411  00548E  0012               	return		;funcret
  8412  005490                     __end_of_strlen:
  8413                           	opt callstack 0
  8414                           
  8415 ;; *************** function _fputs *****************
  8416 ;; Defined at:
  8417 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  s               2   14[COMRAM] PTR const unsigned char 
  8420 ;;		 -> dbuf(80), 
  8421 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8422 ;;		 -> sprintf@f(6), 
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;  i               2   19[COMRAM] int 
  8425 ;;  c               1   18[COMRAM] unsigned char 
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  2   14[COMRAM] int 
  8428 ;; Registers used:
  8429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8435 ;;      Params:         4       0       0       0       0       0       0       0       0
  8436 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8438 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8439 ;;Total ram usage:        7 bytes
  8440 ;; Hardware stack levels used:    1
  8441 ;; Hardware stack levels required when called:    4
  8442 ;; This function calls:
  8443 ;;		_fputc
  8444 ;; This function is called by:
  8445 ;;		_pad
  8446 ;; This function uses a non-reentrant model
  8447 ;;
  8448                           
  8449                           	psect	text27
  8450  0052EE                     __ptext27:
  8451                           	opt callstack 0
  8452  0052EE                     _fputs:
  8453                           	opt callstack 20
  8454  0052EE  0E00               	movlw	0
  8455  0052F0  6E15               	movwf	(fputs@i+1)^0,c
  8456  0052F2  0E00               	movlw	0
  8457  0052F4  6E14               	movwf	fputs@i^0,c
  8458  0052F6  EF88  F029         	goto	l8051
  8459  0052FA                     l8047:
  8460  0052FA  C013  F006         	movff	fputs@c,fputc@c
  8461  0052FE  6A07               	clrf	(fputc@c+1)^0,c
  8462  005300  C011  F008         	movff	fputs@fp,fputc@fp
  8463  005304  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  8464  005308  EC8E  F021         	call	_fputc	;wreg free
  8465  00530C  4A14               	infsnz	fputs@i^0,f,c
  8466  00530E  2A15               	incf	(fputs@i+1)^0,f,c
  8467  005310                     l8051:
  8468  005310  5014               	movf	fputs@i^0,w,c
  8469  005312  240F               	addwf	fputs@s^0,w,c
  8470  005314  6ED9               	movwf	fsr2l,c
  8471  005316  5015               	movf	(fputs@i+1)^0,w,c
  8472  005318  2010               	addwfc	(fputs@s+1)^0,w,c
  8473  00531A  6EDA               	movwf	fsr2h,c
  8474  00531C  50DF               	movf	indf2,w,c
  8475  00531E  6E13               	movwf	fputs@c^0,c
  8476  005320  5013               	movf	fputs@c^0,w,c
  8477  005322  A4D8               	btfss	status,2,c
  8478  005324  EF96  F029         	goto	u8101
  8479  005328  EF98  F029         	goto	u8100
  8480  00532C                     u8101:
  8481  00532C  EF7D  F029         	goto	l8047
  8482  005330                     u8100:
  8483  005330  0012               	return		;funcret
  8484  005332                     __end_of_fputs:
  8485                           	opt callstack 0
  8486                           
  8487 ;; *************** function _fputc *****************
  8488 ;; Defined at:
  8489 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;  c               2    5[COMRAM] int 
  8492 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  8493 ;;		 -> sprintf@f(6), 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;		None
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  2    5[COMRAM] int 
  8498 ;; Registers used:
  8499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8505 ;;      Params:         4       0       0       0       0       0       0       0       0
  8506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8507 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8508 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8509 ;;Total ram usage:        9 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:    3
  8512 ;; This function calls:
  8513 ;;		_putch
  8514 ;; This function is called by:
  8515 ;;		_pad
  8516 ;;		_vfpfcnvrt
  8517 ;;		_fputs
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text28
  8522  00431C                     __ptext28:
  8523                           	opt callstack 0
  8524  00431C                     _fputc:
  8525                           	opt callstack 23
  8526  00431C  5008               	movf	fputc@fp^0,w,c
  8527  00431E  1009               	iorwf	(fputc@fp+1)^0,w,c
  8528  004320  B4D8               	btfsc	status,2,c
  8529  004322  EF95  F021         	goto	u7981
  8530  004326  EF97  F021         	goto	u7980
  8531  00432A                     u7981:
  8532  00432A  EFA0  F021         	goto	l7977
  8533  00432E                     u7980:
  8534  00432E  5008               	movf	fputc@fp^0,w,c
  8535  004330  1009               	iorwf	(fputc@fp+1)^0,w,c
  8536  004332  A4D8               	btfss	status,2,c
  8537  004334  EF9E  F021         	goto	u7991
  8538  004338  EFA0  F021         	goto	u7990
  8539  00433C                     u7991:
  8540  00433C  EFA5  F021         	goto	l7979
  8541  004340                     u7990:
  8542  004340                     l7977:
  8543  004340  5006               	movf	fputc@c^0,w,c
  8544  004342  EC1B  F02B         	call	_putch
  8545  004346  EFF2  F021         	goto	l1714
  8546  00434A                     l7979:
  8547  00434A  EE20 F004          	lfsr	2,4
  8548  00434E  5008               	movf	fputc@fp^0,w,c
  8549  004350  26D9               	addwf	fsr2l,f,c
  8550  004352  5009               	movf	(fputc@fp+1)^0,w,c
  8551  004354  22DA               	addwfc	fsr2h,f,c
  8552  004356  50DE               	movf	postinc2,w,c
  8553  004358  10DE               	iorwf	postinc2,w,c
  8554  00435A  B4D8               	btfsc	status,2,c
  8555  00435C  EFB2  F021         	goto	u8001
  8556  004360  EFB4  F021         	goto	u8000
  8557  004364                     u8001:
  8558  004364  EFCF  F021         	goto	l7983
  8559  004368                     u8000:
  8560  004368  EE20 F004          	lfsr	2,4
  8561  00436C  5008               	movf	fputc@fp^0,w,c
  8562  00436E  26D9               	addwf	fsr2l,f,c
  8563  004370  5009               	movf	(fputc@fp+1)^0,w,c
  8564  004372  22DA               	addwfc	fsr2h,f,c
  8565  004374  EE10 F002          	lfsr	1,2
  8566  004378  5008               	movf	fputc@fp^0,w,c
  8567  00437A  26E1               	addwf	fsr1l,f,c
  8568  00437C  5009               	movf	(fputc@fp+1)^0,w,c
  8569  00437E  22E2               	addwfc	fsr1h,f,c
  8570  004380  50DE               	movf	postinc2,w,c
  8571  004382  5CE6               	subwf	postinc1,w,c
  8572  004384  50E6               	movf	postinc1,w,c
  8573  004386  0A80               	xorlw	128
  8574  004388  6E0E               	movwf	(??_fputc+4)^0,c
  8575  00438A  50DE               	movf	postinc2,w,c
  8576  00438C  0A80               	xorlw	128
  8577  00438E  580E               	subwfb	(??_fputc+4)^0,w,c
  8578  004390  B0D8               	btfsc	status,0,c
  8579  004392  EFCD  F021         	goto	u8011
  8580  004396  EFCF  F021         	goto	u8010
  8581  00439A                     u8011:
  8582  00439A  EFF2  F021         	goto	l1714
  8583  00439E                     u8010:
  8584  00439E                     l7983:
  8585  00439E  EE20 F002          	lfsr	2,2
  8586  0043A2  5008               	movf	fputc@fp^0,w,c
  8587  0043A4  26D9               	addwf	fsr2l,f,c
  8588  0043A6  5009               	movf	(fputc@fp+1)^0,w,c
  8589  0043A8  22DA               	addwfc	fsr2h,f,c
  8590  0043AA  CFDE F00A          	movff	postinc2,??_fputc
  8591  0043AE  CFDD F00B          	movff	postdec2,??_fputc+1
  8592  0043B2  C008  FFD9         	movff	fputc@fp,fsr2l
  8593  0043B6  C009  FFDA         	movff	fputc@fp+1,fsr2h
  8594  0043BA  CFDE F00C          	movff	postinc2,??_fputc+2
  8595  0043BE  CFDD F00D          	movff	postdec2,??_fputc+3
  8596  0043C2  500A               	movf	??_fputc^0,w,c
  8597  0043C4  240C               	addwf	(??_fputc+2)^0,w,c
  8598  0043C6  6ED9               	movwf	fsr2l,c
  8599  0043C8  500B               	movf	(??_fputc+1)^0,w,c
  8600  0043CA  200D               	addwfc	(??_fputc+3)^0,w,c
  8601  0043CC  6EDA               	movwf	fsr2h,c
  8602  0043CE  C006  FFDF         	movff	fputc@c,indf2
  8603  0043D2  EE20 F002          	lfsr	2,2
  8604  0043D6  5008               	movf	fputc@fp^0,w,c
  8605  0043D8  26D9               	addwf	fsr2l,f,c
  8606  0043DA  5009               	movf	(fputc@fp+1)^0,w,c
  8607  0043DC  22DA               	addwfc	fsr2h,f,c
  8608  0043DE  2ADE               	incf	postinc2,f,c
  8609  0043E0  0E00               	movlw	0
  8610  0043E2  22DD               	addwfc	postdec2,f,c
  8611  0043E4                     l1714:
  8612  0043E4  0012               	return		;funcret
  8613  0043E6                     __end_of_fputc:
  8614                           	opt callstack 0
  8615                           
  8616 ;; *************** function _putch *****************
  8617 ;; Defined at:
  8618 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;  c               1    wreg     unsigned char 
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;  c               1    0[COMRAM] unsigned char 
  8623 ;; Return value:  Size  Location     Type
  8624 ;;                  1    wreg      void 
  8625 ;; Registers used:
  8626 ;;		wreg
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8632 ;;      Params:         0       0       0       0       0       0       0       0       0
  8633 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8635 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8636 ;;Total ram usage:        0 bytes
  8637 ;; Hardware stack levels used:    1
  8638 ;; Hardware stack levels required when called:    2
  8639 ;; This function calls:
  8640 ;;		Nothing
  8641 ;; This function is called by:
  8642 ;;		_fputc
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           	psect	text29
  8647  005636                     __ptext29:
  8648                           	opt callstack 0
  8649  005636                     _putch:
  8650                           	opt callstack 23
  8651  005636  0012               	return		;funcret
  8652  005638                     __end_of_putch:
  8653                           	opt callstack 0
  8654                           
  8655 ;; *************** function _atoi *****************
  8656 ;; Defined at:
  8657 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;  s               2   12[COMRAM] PTR const unsigned char 
  8660 ;;		 -> STR_14(34), STR_11(32), STR_6(17), STR_5(19), 
  8661 ;;		 -> STR_4(18), STR_3(34), 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;  n               2   25[COMRAM] int 
  8664 ;;  neg             2   18[COMRAM] int 
  8665 ;; Return value:  Size  Location     Type
  8666 ;;                  2   12[COMRAM] int 
  8667 ;; Registers used:
  8668 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8669 ;; Tracked objects:
  8670 ;;		On entry : 0/0
  8671 ;;		On exit  : 0/0
  8672 ;;		Unchanged: 0/0
  8673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8674 ;;      Params:         2       0       0       0       0       0       0       0       0
  8675 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8676 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8677 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8678 ;;Total ram usage:       15 bytes
  8679 ;; Hardware stack levels used:    1
  8680 ;; Hardware stack levels required when called:    3
  8681 ;; This function calls:
  8682 ;;		___wmul
  8683 ;;		_isdigit
  8684 ;;		_isspace
  8685 ;; This function is called by:
  8686 ;;		_vfpfcnvrt
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           	psect	text30
  8691  003548                     __ptext30:
  8692                           	opt callstack 0
  8693  003548                     _atoi:
  8694                           	opt callstack 23
  8695  003548  0E00               	movlw	0
  8696  00354A  6E1B               	movwf	(atoi@n+1)^0,c
  8697  00354C  0E00               	movlw	0
  8698  00354E  6E1A               	movwf	atoi@n^0,c
  8699  003550  0E00               	movlw	0
  8700  003552  6E14               	movwf	(atoi@neg+1)^0,c
  8701  003554  0E00               	movlw	0
  8702  003556  6E13               	movwf	atoi@neg^0,c
  8703  003558  EFB0  F01A         	goto	l9365
  8704  00355C                     l9363:
  8705  00355C  4A0D               	infsnz	atoi@s^0,f,c
  8706  00355E  2A0E               	incf	(atoi@s+1)^0,f,c
  8707  003560                     l9365:
  8708  003560  0E01               	movlw	1
  8709  003562  6E19               	movwf	_atoi$1433^0,c
  8710  003564  C00D  FFF6         	movff	atoi@s,tblptrl
  8711  003568  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8712  00356C                     	if	0	;tblptru may be non-zero
  8713  00356C                     	endif
  8714  00356C                     	if	0	;tblptru may be non-zero
  8715  00356C                     	endif
  8716  00356C  0008               	tblrd		*
  8717  00356E  50F5               	movf	tablat,w,c
  8718  003570  0A20               	xorlw	32
  8719  003572  B4D8               	btfsc	status,2,c
  8720  003574  EFBE  F01A         	goto	u10481
  8721  003578  EFC0  F01A         	goto	u10480
  8722  00357C                     u10481:
  8723  00357C  EFDD  F01A         	goto	l9373
  8724  003580                     u10480:
  8725  003580  0EF7               	movlw	247
  8726  003582  6E0F               	movwf	??_atoi^0,c
  8727  003584  0EFF               	movlw	255
  8728  003586  6E10               	movwf	(??_atoi+1)^0,c
  8729  003588  C00D  FFF6         	movff	atoi@s,tblptrl
  8730  00358C  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8731  003590                     	if	0	;tblptru may be non-zero
  8732  003590                     	endif
  8733  003590                     	if	0	;tblptru may be non-zero
  8734  003590                     	endif
  8735  003590  0008               	tblrd		*
  8736  003592  50F5               	movf	tablat,w,c
  8737  003594  6E11               	movwf	(??_atoi+2)^0,c
  8738  003596  6A12               	clrf	(??_atoi+3)^0,c
  8739  003598  500F               	movf	??_atoi^0,w,c
  8740  00359A  2611               	addwf	(??_atoi+2)^0,f,c
  8741  00359C  5010               	movf	(??_atoi+1)^0,w,c
  8742  00359E  2212               	addwfc	(??_atoi+3)^0,f,c
  8743  0035A0  5012               	movf	(??_atoi+3)^0,w,c
  8744  0035A2  E109               	bnz	u10490
  8745  0035A4  0E05               	movlw	5
  8746  0035A6  5C11               	subwf	(??_atoi+2)^0,w,c
  8747  0035A8  A0D8               	btfss	status,0,c
  8748  0035AA  EFD9  F01A         	goto	u10491
  8749  0035AE  EFDB  F01A         	goto	u10490
  8750  0035B2                     u10491:
  8751  0035B2  EFDD  F01A         	goto	l9373
  8752  0035B6                     u10490:
  8753  0035B6  0E00               	movlw	0
  8754  0035B8  6E19               	movwf	_atoi$1433^0,c
  8755  0035BA                     l9373:
  8756  0035BA  C019  F015         	movff	_atoi$1433,_atoi$1432
  8757  0035BE  6A16               	clrf	(_atoi$1432+1)^0,c
  8758  0035C0  5015               	movf	_atoi$1432^0,w,c
  8759  0035C2  1016               	iorwf	(_atoi$1432+1)^0,w,c
  8760  0035C4  A4D8               	btfss	status,2,c
  8761  0035C6  EFE7  F01A         	goto	u10501
  8762  0035CA  EFE9  F01A         	goto	u10500
  8763  0035CE                     u10501:
  8764  0035CE  EFAE  F01A         	goto	l9363
  8765  0035D2                     u10500:
  8766  0035D2  EFF3  F01A         	goto	l9383
  8767  0035D6                     l9379:
  8768  0035D6  0E00               	movlw	0
  8769  0035D8  6E14               	movwf	(atoi@neg+1)^0,c
  8770  0035DA  0E01               	movlw	1
  8771  0035DC  6E13               	movwf	atoi@neg^0,c
  8772  0035DE                     l9381:
  8773  0035DE  4A0D               	infsnz	atoi@s^0,f,c
  8774  0035E0  2A0E               	incf	(atoi@s+1)^0,f,c
  8775  0035E2  EF28  F01B         	goto	l9389
  8776  0035E6                     l9383:
  8777  0035E6  C00D  FFF6         	movff	atoi@s,tblptrl
  8778  0035EA  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8779  0035EE                     	if	0	;tblptru may be non-zero
  8780  0035EE                     	endif
  8781  0035EE                     	if	0	;tblptru may be non-zero
  8782  0035EE                     	endif
  8783  0035EE  0008               	tblrd		*
  8784  0035F0  50F5               	movf	tablat,w,c
  8785  0035F2  6E0F               	movwf	??_atoi^0,c
  8786  0035F4  6A10               	clrf	(??_atoi+1)^0,c
  8787                           
  8788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8789                           ; Switch size 1, requested type "simple"
  8790                           ; Number of cases is 1, Range of values is 0 to 0
  8791                           ; switch strategies available:
  8792                           ; Name         Instructions Cycles
  8793                           ; simple_byte            4     3 (average)
  8794                           ;	Chosen strategy is simple_byte
  8795  0035F6  5010               	movf	(??_atoi+1)^0,w,c
  8796  0035F8  0A00               	xorlw	0	; case 0
  8797  0035FA  B4D8               	btfsc	status,2,c
  8798  0035FC  EF02  F01B         	goto	l11127
  8799  003600  EF28  F01B         	goto	l9389
  8800  003604                     l11127:
  8801                           
  8802                           ; Switch size 1, requested type "simple"
  8803                           ; Number of cases is 2, Range of values is 43 to 45
  8804                           ; switch strategies available:
  8805                           ; Name         Instructions Cycles
  8806                           ; simple_byte            7     4 (average)
  8807                           ;	Chosen strategy is simple_byte
  8808  003604  500F               	movf	??_atoi^0,w,c
  8809  003606  0A2B               	xorlw	43	; case 43
  8810  003608  B4D8               	btfsc	status,2,c
  8811  00360A  EFEF  F01A         	goto	l9381
  8812  00360E  0A06               	xorlw	6	; case 45
  8813  003610  B4D8               	btfsc	status,2,c
  8814  003612  EFEB  F01A         	goto	l9379
  8815  003616  EF28  F01B         	goto	l9389
  8816  00361A                     l9385:
  8817  00361A  C01A  F006         	movff	atoi@n,___wmul@multiplier
  8818  00361E  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  8819  003622  0E00               	movlw	0
  8820  003624  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  8821  003626  0E0A               	movlw	10
  8822  003628  6E08               	movwf	___wmul@multiplicand^0,c
  8823  00362A  EC72  F02A         	call	___wmul	;wreg free
  8824  00362E  C00D  FFF6         	movff	atoi@s,tblptrl
  8825  003632  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8826  003636                     	if	0	;tblptru may be non-zero
  8827  003636                     	endif
  8828  003636                     	if	0	;tblptru may be non-zero
  8829  003636                     	endif
  8830  003636  0008               	tblrd		*
  8831  003638  50F5               	movf	tablat,w,c
  8832  00363A  5E06               	subwf	?___wmul^0,f,c
  8833  00363C  0E00               	movlw	0
  8834  00363E  5A07               	subwfb	(?___wmul+1)^0,f,c
  8835  003640  0E30               	movlw	48
  8836  003642  2406               	addwf	?___wmul^0,w,c
  8837  003644  6E1A               	movwf	atoi@n^0,c
  8838  003646  0E00               	movlw	0
  8839  003648  2007               	addwfc	(?___wmul+1)^0,w,c
  8840  00364A  6E1B               	movwf	(atoi@n+1)^0,c
  8841  00364C  EFEF  F01A         	goto	l9381
  8842  003650                     l9389:
  8843  003650  0ED0               	movlw	208
  8844  003652  6E0F               	movwf	??_atoi^0,c
  8845  003654  0EFF               	movlw	255
  8846  003656  6E10               	movwf	(??_atoi+1)^0,c
  8847  003658  C00D  FFF6         	movff	atoi@s,tblptrl
  8848  00365C  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8849  003660                     	if	0	;tblptru may be non-zero
  8850  003660                     	endif
  8851  003660                     	if	0	;tblptru may be non-zero
  8852  003660                     	endif
  8853  003660  0008               	tblrd		*
  8854  003662  50F5               	movf	tablat,w,c
  8855  003664  6E11               	movwf	(??_atoi+2)^0,c
  8856  003666  6A12               	clrf	(??_atoi+3)^0,c
  8857  003668  500F               	movf	??_atoi^0,w,c
  8858  00366A  2611               	addwf	(??_atoi+2)^0,f,c
  8859  00366C  5010               	movf	(??_atoi+1)^0,w,c
  8860  00366E  2212               	addwfc	(??_atoi+3)^0,f,c
  8861  003670  5012               	movf	(??_atoi+3)^0,w,c
  8862  003672  E10A               	bnz	u10510
  8863  003674  0E0A               	movlw	10
  8864  003676  5C11               	subwf	(??_atoi+2)^0,w,c
  8865  003678  A0D8               	btfss	status,0,c
  8866  00367A  EF41  F01B         	goto	u10511
  8867  00367E  EF44  F01B         	goto	u10510
  8868  003682                     u10511:
  8869  003682  0E01               	movlw	1
  8870  003684  EF45  F01B         	goto	u10520
  8871  003688                     u10510:
  8872  003688  0E00               	movlw	0
  8873  00368A                     u10520:
  8874  00368A  6E17               	movwf	_atoi$1434^0,c
  8875  00368C  6A18               	clrf	(_atoi$1434+1)^0,c
  8876  00368E  5017               	movf	_atoi$1434^0,w,c
  8877  003690  1018               	iorwf	(_atoi$1434+1)^0,w,c
  8878  003692  A4D8               	btfss	status,2,c
  8879  003694  EF4E  F01B         	goto	u10531
  8880  003698  EF50  F01B         	goto	u10530
  8881  00369C                     u10531:
  8882  00369C  EF0D  F01B         	goto	l9385
  8883  0036A0                     u10530:
  8884  0036A0  5013               	movf	atoi@neg^0,w,c
  8885  0036A2  1014               	iorwf	(atoi@neg+1)^0,w,c
  8886  0036A4  A4D8               	btfss	status,2,c
  8887  0036A6  EF57  F01B         	goto	u10541
  8888  0036AA  EF59  F01B         	goto	u10540
  8889  0036AE                     u10541:
  8890  0036AE  EF67  F01B         	goto	l1666
  8891  0036B2                     u10540:
  8892  0036B2  C01A  F00F         	movff	atoi@n,??_atoi
  8893  0036B6  C01B  F010         	movff	atoi@n+1,??_atoi+1
  8894  0036BA  1E0F               	comf	??_atoi^0,f,c
  8895  0036BC  1E10               	comf	(??_atoi+1)^0,f,c
  8896  0036BE  4A0F               	infsnz	??_atoi^0,f,c
  8897  0036C0  2A10               	incf	(??_atoi+1)^0,f,c
  8898  0036C2  C00F  F00D         	movff	??_atoi,?_atoi
  8899  0036C6  C010  F00E         	movff	??_atoi+1,?_atoi+1
  8900  0036CA  EF6B  F01B         	goto	l1669
  8901  0036CE                     l1666:
  8902  0036CE  C01A  F00D         	movff	atoi@n,?_atoi
  8903  0036D2  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  8904  0036D6                     l1669:
  8905  0036D6  0012               	return		;funcret
  8906  0036D8                     __end_of_atoi:
  8907                           	opt callstack 0
  8908                           
  8909 ;; *************** function _isspace *****************
  8910 ;; Defined at:
  8911 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  c               2    5[COMRAM] int 
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;		None
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  2    5[COMRAM] int 
  8918 ;; Registers used:
  8919 ;;		wreg, status,2, status,0
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8925 ;;      Params:         2       0       0       0       0       0       0       0       0
  8926 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8927 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8928 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8929 ;;Total ram usage:        7 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:    2
  8932 ;; This function calls:
  8933 ;;		Nothing
  8934 ;; This function is called by:
  8935 ;;		_atoi
  8936 ;; This function uses a non-reentrant model
  8937 ;;
  8938                           
  8939                           	psect	text31
  8940  0050DC                     __ptext31:
  8941                           	opt callstack 0
  8942  0050DC                     _isspace:
  8943                           	opt callstack 23
  8944  0050DC  0E01               	movlw	1
  8945  0050DE  6E0C               	movwf	_isspace$1463^0,c
  8946  0050E0  0E20               	movlw	32
  8947  0050E2  1806               	xorwf	isspace@c^0,w,c
  8948  0050E4  1007               	iorwf	(isspace@c+1)^0,w,c
  8949  0050E6  B4D8               	btfsc	status,2,c
  8950  0050E8  EF78  F028         	goto	u9781
  8951  0050EC  EF7A  F028         	goto	u9780
  8952  0050F0                     u9781:
  8953  0050F0  EF93  F028         	goto	l8965
  8954  0050F4                     u9780:
  8955  0050F4  0EF7               	movlw	247
  8956  0050F6  6E08               	movwf	??_isspace^0,c
  8957  0050F8  0EFF               	movlw	255
  8958  0050FA  6E09               	movwf	(??_isspace+1)^0,c
  8959  0050FC  C006  F00A         	movff	isspace@c,??_isspace+2
  8960  005100  C007  F00B         	movff	isspace@c+1,??_isspace+3
  8961  005104  5008               	movf	??_isspace^0,w,c
  8962  005106  260A               	addwf	(??_isspace+2)^0,f,c
  8963  005108  5009               	movf	(??_isspace+1)^0,w,c
  8964  00510A  220B               	addwfc	(??_isspace+3)^0,f,c
  8965  00510C  500B               	movf	(??_isspace+3)^0,w,c
  8966  00510E  E109               	bnz	u9790
  8967  005110  0E05               	movlw	5
  8968  005112  5C0A               	subwf	(??_isspace+2)^0,w,c
  8969  005114  A0D8               	btfss	status,0,c
  8970  005116  EF8F  F028         	goto	u9791
  8971  00511A  EF91  F028         	goto	u9790
  8972  00511E                     u9791:
  8973  00511E  EF93  F028         	goto	l8965
  8974  005122                     u9790:
  8975  005122  0E00               	movlw	0
  8976  005124  6E0C               	movwf	_isspace$1463^0,c
  8977  005126                     l8965:
  8978  005126  C00C  F006         	movff	_isspace$1463,?_isspace
  8979  00512A  6A07               	clrf	(?_isspace+1)^0,c
  8980  00512C  0012               	return		;funcret
  8981  00512E                     __end_of_isspace:
  8982                           	opt callstack 0
  8983                           
  8984 ;; *************** function _isdigit *****************
  8985 ;; Defined at:
  8986 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  c               2    5[COMRAM] int 
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;		None
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  2    5[COMRAM] int 
  8993 ;; Registers used:
  8994 ;;		wreg, status,2, status,0
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9000 ;;      Params:         2       0       0       0       0       0       0       0       0
  9001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9002 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9003 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9004 ;;Total ram usage:        6 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; Hardware stack levels required when called:    2
  9007 ;; This function calls:
  9008 ;;		Nothing
  9009 ;; This function is called by:
  9010 ;;		_vfpfcnvrt
  9011 ;;		_atoi
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           	psect	text32
  9016  0053EA                     __ptext32:
  9017                           	opt callstack 0
  9018  0053EA                     _isdigit:
  9019                           	opt callstack 24
  9020  0053EA  0ED0               	movlw	208
  9021  0053EC  6E08               	movwf	??_isdigit^0,c
  9022  0053EE  0EFF               	movlw	255
  9023  0053F0  6E09               	movwf	(??_isdigit+1)^0,c
  9024  0053F2  C006  F00A         	movff	isdigit@c,??_isdigit+2
  9025  0053F6  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  9026  0053FA  5008               	movf	??_isdigit^0,w,c
  9027  0053FC  260A               	addwf	(??_isdigit+2)^0,f,c
  9028  0053FE  5009               	movf	(??_isdigit+1)^0,w,c
  9029  005400  220B               	addwfc	(??_isdigit+3)^0,f,c
  9030  005402  500B               	movf	(??_isdigit+3)^0,w,c
  9031  005404  E10A               	bnz	u9420
  9032  005406  0E0A               	movlw	10
  9033  005408  5C0A               	subwf	(??_isdigit+2)^0,w,c
  9034  00540A  A0D8               	btfss	status,0,c
  9035  00540C  EF0A  F02A         	goto	u9421
  9036  005410  EF0D  F02A         	goto	u9420
  9037  005414                     u9421:
  9038  005414  0E01               	movlw	1
  9039  005416  EF0E  F02A         	goto	u9430
  9040  00541A                     u9420:
  9041  00541A  0E00               	movlw	0
  9042  00541C                     u9430:
  9043  00541C  6E06               	movwf	?_isdigit^0,c
  9044  00541E  6A07               	clrf	(?_isdigit+1)^0,c
  9045  005420  0012               	return		;funcret
  9046  005422                     __end_of_isdigit:
  9047                           	opt callstack 0
  9048                           
  9049 ;; *************** function ___wmul *****************
  9050 ;; Defined at:
  9051 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;  multiplier      2    5[COMRAM] unsigned int 
  9054 ;;  multiplicand    2    7[COMRAM] unsigned int 
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;  product         2    9[COMRAM] unsigned int 
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  2    5[COMRAM] unsigned int 
  9059 ;; Registers used:
  9060 ;;		wreg, status,2, status,0, prodl, prodh
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9066 ;;      Params:         4       0       0       0       0       0       0       0       0
  9067 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9069 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9070 ;;Total ram usage:        6 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; Hardware stack levels required when called:    2
  9073 ;; This function calls:
  9074 ;;		Nothing
  9075 ;; This function is called by:
  9076 ;;		_atoi
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text33
  9081  0054E4                     __ptext33:
  9082                           	opt callstack 0
  9083  0054E4                     ___wmul:
  9084                           	opt callstack 23
  9085  0054E4  5006               	movf	___wmul@multiplier^0,w,c
  9086  0054E6  0208               	mulwf	___wmul@multiplicand^0,c
  9087  0054E8  CFF3 F00A          	movff	prodl,___wmul@product
  9088  0054EC  CFF4 F00B          	movff	prodh,___wmul@product+1
  9089  0054F0  5006               	movf	___wmul@multiplier^0,w,c
  9090  0054F2  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  9091  0054F4  50F3               	movf	243,w,c
  9092  0054F6  260B               	addwf	(___wmul@product+1)^0,f,c
  9093  0054F8  5007               	movf	(___wmul@multiplier+1)^0,w,c
  9094  0054FA  0208               	mulwf	___wmul@multiplicand^0,c
  9095  0054FC  50F3               	movf	243,w,c
  9096  0054FE  260B               	addwf	(___wmul@product+1)^0,f,c
  9097  005500  C00A  F006         	movff	___wmul@product,?___wmul
  9098  005504  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  9099  005508  0012               	return		;funcret
  9100  00550A                     __end_of___wmul:
  9101                           	opt callstack 0
  9102                           
  9103 ;; *************** function _regresarPuntoPartida *****************
  9104 ;; Defined at:
  9105 ;;		line 675 in file "main.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  9108 ;;		 -> comportamientoBasico@caminoFinal(1000), 
  9109 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  9110 ;; Auto vars:     Size  Location     Type
  9111 ;;  i               2   62[BANK0 ] int 
  9112 ;; Return value:  Size  Location     Type
  9113 ;;                  1    wreg      void 
  9114 ;; Registers used:
  9115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9116 ;; Tracked objects:
  9117 ;;		On entry : 0/0
  9118 ;;		On exit  : 0/0
  9119 ;;		Unchanged: 0/0
  9120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9121 ;;      Params:         0       4       0       0       0       0       0       0       0
  9122 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9123 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9124 ;;      Totals:         1       6       0       0       0       0       0       0       0
  9125 ;;Total ram usage:        7 bytes
  9126 ;; Hardware stack levels used:    1
  9127 ;; Hardware stack levels required when called:    6
  9128 ;; This function calls:
  9129 ;;		_PID
  9130 ;;		_mover
  9131 ;;		_velocidadEstandar
  9132 ;; This function is called by:
  9133 ;;		_comportamientoBasico
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           	psect	text34
  9138  004902                     __ptext34:
  9139                           	opt callstack 0
  9140  004902                     _regresarPuntoPartida:
  9141                           	opt callstack 23
  9142  004902                     
  9143                           ;main.c: 677:     for (T_INT i = numMovimientos - 1; i >= 0; i--) {
  9144  004902  0EFF               	movlw	255
  9145  004904  0100               	movlb	0	; () banked
  9146  004906  259C               	addwf	regresarPuntoPartida@numMovimientos& (0+255),w,b
  9147  004908  6F9E               	movwf	regresarPuntoPartida@i& (0+255),b
  9148  00490A  0EFF               	movlw	255
  9149  00490C  219D               	addwfc	(regresarPuntoPartida@numMovimientos+1)& (0+255),w,b
  9150  00490E  6F9F               	movwf	(regresarPuntoPartida@i+1)& (0+255),b
  9151  004910  BF9F               	btfsc	(regresarPuntoPartida@i+1)& (0+255),7,b
  9152  004912  EF8F  F024         	goto	u11500
  9153  004916  EF8D  F024         	goto	u11501
  9154  00491A                     u11501:
  9155  00491A  EF91  F024         	goto	l10251
  9156  00491E                     u11500:
  9157  00491E  EFD5  F024         	goto	l468
  9158  004922                     l10251:
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;main.c: 679:         if (movimientos[i] == IZQUIERDA) {
  9162  004922  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  9163  004924  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  9164  004926  6ED9               	movwf	fsr2l,c
  9165  004928  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  9166  00492A  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  9167  00492C  6EDA               	movwf	fsr2h,c
  9168  00492E  0E02               	movlw	2
  9169  004930  18DE               	xorwf	postinc2,w,c
  9170  004932  A4D8               	btfss	status,2,c
  9171  004934  EF9E  F024         	goto	u11511
  9172  004938  EFA0  F024         	goto	u11510
  9173  00493C                     u11511:
  9174  00493C  EFA7  F024         	goto	l10257
  9175  004940                     u11510:
  9176  004940                     
  9177                           ; BSR set to: 0
  9178                           ;main.c: 680:             velocidadEstandar();
  9179  004940  EC85  F02A         	call	_velocidadEstandar	;wreg free
  9180  004944                     
  9181                           ;main.c: 681:             mouse.curr_state = DERECHA;
  9182  004944  0E03               	movlw	3
  9183  004946  0100               	movlb	0	; () banked
  9184  004948  6FFC               	movwf	_mouse& (0+255),b
  9185                           
  9186                           ;main.c: 682:         } else if (movimientos[i] == DERECHA) {
  9187  00494A  EFC8  F024         	goto	l10267
  9188  00494E                     l10257:
  9189                           
  9190                           ; BSR set to: 0
  9191  00494E  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  9192  004950  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  9193  004952  6ED9               	movwf	fsr2l,c
  9194  004954  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  9195  004956  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  9196  004958  6EDA               	movwf	fsr2h,c
  9197  00495A  0E03               	movlw	3
  9198  00495C  18DE               	xorwf	postinc2,w,c
  9199  00495E  A4D8               	btfss	status,2,c
  9200  004960  EFB4  F024         	goto	u11521
  9201  004964  EFB6  F024         	goto	u11520
  9202  004968                     u11521:
  9203  004968  EFBD  F024         	goto	l10263
  9204  00496C                     u11520:
  9205  00496C                     
  9206                           ; BSR set to: 0
  9207                           ;main.c: 683:             velocidadEstandar();
  9208  00496C  EC85  F02A         	call	_velocidadEstandar	;wreg free
  9209  004970                     
  9210                           ;main.c: 684:             mouse.curr_state = IZQUIERDA;
  9211  004970  0E02               	movlw	2
  9212  004972  0100               	movlb	0	; () banked
  9213  004974  6FFC               	movwf	_mouse& (0+255),b
  9214                           
  9215                           ;main.c: 685:         } else {
  9216  004976  EFC8  F024         	goto	l10267
  9217  00497A                     l10263:
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;main.c: 687:             PID();
  9221  00497A  ECB8  F016         	call	_PID	;wreg free
  9222  00497E                     
  9223                           ;main.c: 688:             mouse.curr_state = movimientos[i];
  9224  00497E  0100               	movlb	0	; () banked
  9225  004980  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  9226  004982  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  9227  004984  6ED9               	movwf	fsr2l,c
  9228  004986  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  9229  004988  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  9230  00498A  6EDA               	movwf	fsr2h,c
  9231  00498C  50DF               	movf	indf2,w,c
  9232  00498E  6FFC               	movwf	_mouse& (0+255),b
  9233  004990                     l10267:
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;main.c: 691:         mover();
  9237  004990  ECD6  F024         	call	_mover	;wreg free
  9238  004994                     
  9239                           ;main.c: 692:     }
  9240  004994  0100               	movlb	0	; () banked
  9241  004996  079E               	decf	regresarPuntoPartida@i& (0+255),f,b
  9242  004998  A0D8               	btfss	status,0,c
  9243  00499A  079F               	decf	(regresarPuntoPartida@i+1)& (0+255),f,b
  9244  00499C                     
  9245                           ; BSR set to: 0
  9246  00499C  BF9F               	btfsc	(regresarPuntoPartida@i+1)& (0+255),7,b
  9247  00499E  EFD5  F024         	goto	u11530
  9248  0049A2  EFD3  F024         	goto	u11531
  9249  0049A6                     u11531:
  9250  0049A6  EF91  F024         	goto	l10251
  9251  0049AA                     u11530:
  9252  0049AA                     l468:
  9253                           
  9254                           ; BSR set to: 0
  9255  0049AA  0012               	return		;funcret
  9256  0049AC                     __end_of_regresarPuntoPartida:
  9257                           	opt callstack 0
  9258                           
  9259 ;; *************** function _regresarAlCruce *****************
  9260 ;; Defined at:
  9261 ;;		line 695 in file "main.c"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  9264 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  9265 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;  i               2   62[BANK0 ] int 
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  1    wreg      void 
  9270 ;; Registers used:
  9271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9277 ;;      Params:         0       4       0       0       0       0       0       0       0
  9278 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9279 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9280 ;;      Totals:         1       6       0       0       0       0       0       0       0
  9281 ;;Total ram usage:        7 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    6
  9284 ;; This function calls:
  9285 ;;		_PID
  9286 ;;		_mover
  9287 ;;		_velocidadEstandar
  9288 ;; This function is called by:
  9289 ;;		_comportamientoBasico
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           	psect	text35
  9294  004638                     __ptext35:
  9295                           	opt callstack 0
  9296  004638                     _regresarAlCruce:
  9297                           	opt callstack 23
  9298  004638                     
  9299                           ;main.c: 697:     for (T_INT i = numMovimientos - 1; i > 0; i--) {
  9300  004638  0EFF               	movlw	255
  9301  00463A  0100               	movlb	0	; () banked
  9302  00463C  259C               	addwf	regresarAlCruce@numMovimientos& (0+255),w,b
  9303  00463E  6F9E               	movwf	regresarAlCruce@i& (0+255),b
  9304  004640  0EFF               	movlw	255
  9305  004642  219D               	addwfc	(regresarAlCruce@numMovimientos+1)& (0+255),w,b
  9306  004644  6F9F               	movwf	(regresarAlCruce@i+1)& (0+255),b
  9307  004646  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  9308  004648  EF30  F023         	goto	u11460
  9309  00464C  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9310  00464E  E106               	bnz	u11461
  9311  004650  059E               	decf	regresarAlCruce@i& (0+255),w,b
  9312  004652  B0D8               	btfsc	status,0,c
  9313  004654  EF2E  F023         	goto	u11461
  9314  004658  EF30  F023         	goto	u11460
  9315  00465C                     u11461:
  9316  00465C  EF32  F023         	goto	l10225
  9317  004660                     u11460:
  9318  004660  EF7C  F023         	goto	l477
  9319  004664                     l10225:
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;main.c: 701:         if (movimientos[i] == IZQUIERDA) {
  9323  004664  519E               	movf	regresarAlCruce@i& (0+255),w,b
  9324  004666  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  9325  004668  6ED9               	movwf	fsr2l,c
  9326  00466A  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9327  00466C  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  9328  00466E  6EDA               	movwf	fsr2h,c
  9329  004670  0E02               	movlw	2
  9330  004672  18DE               	xorwf	postinc2,w,c
  9331  004674  A4D8               	btfss	status,2,c
  9332  004676  EF3F  F023         	goto	u11471
  9333  00467A  EF41  F023         	goto	u11470
  9334  00467E                     u11471:
  9335  00467E  EF48  F023         	goto	l10231
  9336  004682                     u11470:
  9337  004682                     
  9338                           ; BSR set to: 0
  9339                           ;main.c: 702:             velocidadEstandar();
  9340  004682  EC85  F02A         	call	_velocidadEstandar	;wreg free
  9341  004686                     
  9342                           ;main.c: 703:             mouse.curr_state = DERECHA;
  9343  004686  0E03               	movlw	3
  9344  004688  0100               	movlb	0	; () banked
  9345  00468A  6FFC               	movwf	_mouse& (0+255),b
  9346                           
  9347                           ;main.c: 704:         } else if (movimientos[i] == DERECHA) {
  9348  00468C  EF69  F023         	goto	l10241
  9349  004690                     l10231:
  9350                           
  9351                           ; BSR set to: 0
  9352  004690  519E               	movf	regresarAlCruce@i& (0+255),w,b
  9353  004692  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  9354  004694  6ED9               	movwf	fsr2l,c
  9355  004696  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9356  004698  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  9357  00469A  6EDA               	movwf	fsr2h,c
  9358  00469C  0E03               	movlw	3
  9359  00469E  18DE               	xorwf	postinc2,w,c
  9360  0046A0  A4D8               	btfss	status,2,c
  9361  0046A2  EF55  F023         	goto	u11481
  9362  0046A6  EF57  F023         	goto	u11480
  9363  0046AA                     u11481:
  9364  0046AA  EF5E  F023         	goto	l10237
  9365  0046AE                     u11480:
  9366  0046AE                     
  9367                           ; BSR set to: 0
  9368                           ;main.c: 705:             velocidadEstandar();
  9369  0046AE  EC85  F02A         	call	_velocidadEstandar	;wreg free
  9370  0046B2                     
  9371                           ;main.c: 706:             mouse.curr_state = IZQUIERDA;
  9372  0046B2  0E02               	movlw	2
  9373  0046B4  0100               	movlb	0	; () banked
  9374  0046B6  6FFC               	movwf	_mouse& (0+255),b
  9375                           
  9376                           ;main.c: 707:         } else {
  9377  0046B8  EF69  F023         	goto	l10241
  9378  0046BC                     l10237:
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;main.c: 709:             PID();
  9382  0046BC  ECB8  F016         	call	_PID	;wreg free
  9383  0046C0                     
  9384                           ;main.c: 710:             mouse.curr_state = movimientos[i];
  9385  0046C0  0100               	movlb	0	; () banked
  9386  0046C2  519E               	movf	regresarAlCruce@i& (0+255),w,b
  9387  0046C4  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  9388  0046C6  6ED9               	movwf	fsr2l,c
  9389  0046C8  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9390  0046CA  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  9391  0046CC  6EDA               	movwf	fsr2h,c
  9392  0046CE  50DF               	movf	indf2,w,c
  9393  0046D0  6FFC               	movwf	_mouse& (0+255),b
  9394  0046D2                     l10241:
  9395                           
  9396                           ; BSR set to: 0
  9397                           ;main.c: 713:         mover();
  9398  0046D2  ECD6  F024         	call	_mover	;wreg free
  9399  0046D6                     
  9400                           ;main.c: 714:     }
  9401  0046D6  0100               	movlb	0	; () banked
  9402  0046D8  079E               	decf	regresarAlCruce@i& (0+255),f,b
  9403  0046DA  A0D8               	btfss	status,0,c
  9404  0046DC  079F               	decf	(regresarAlCruce@i+1)& (0+255),f,b
  9405  0046DE                     
  9406                           ; BSR set to: 0
  9407  0046DE  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  9408  0046E0  EF7C  F023         	goto	u11490
  9409  0046E4  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9410  0046E6  E106               	bnz	u11491
  9411  0046E8  059E               	decf	regresarAlCruce@i& (0+255),w,b
  9412  0046EA  B0D8               	btfsc	status,0,c
  9413  0046EC  EF7A  F023         	goto	u11491
  9414  0046F0  EF7C  F023         	goto	u11490
  9415  0046F4                     u11491:
  9416  0046F4  EF32  F023         	goto	l10225
  9417  0046F8                     u11490:
  9418  0046F8                     l477:
  9419                           
  9420                           ; BSR set to: 0
  9421  0046F8  0012               	return		;funcret
  9422  0046FA                     __end_of_regresarAlCruce:
  9423                           	opt callstack 0
  9424                           
  9425 ;; *************** function _recorrerCaminoEncontrado *****************
  9426 ;; Defined at:
  9427 ;;		line 717 in file "main.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  9430 ;;		 -> comportamientoBasico@caminoFinal(1000), 
  9431 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;  i               2   62[BANK0 ] int 
  9434 ;; Return value:  Size  Location     Type
  9435 ;;                  1    wreg      void 
  9436 ;; Registers used:
  9437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9438 ;; Tracked objects:
  9439 ;;		On entry : 0/0
  9440 ;;		On exit  : 0/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9443 ;;      Params:         0       4       0       0       0       0       0       0       0
  9444 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9445 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9446 ;;      Totals:         1       6       0       0       0       0       0       0       0
  9447 ;;Total ram usage:        7 bytes
  9448 ;; Hardware stack levels used:    1
  9449 ;; Hardware stack levels required when called:    6
  9450 ;; This function calls:
  9451 ;;		_PID
  9452 ;;		_mover
  9453 ;;		_velocidadEstandar
  9454 ;; This function is called by:
  9455 ;;		_comportamientoBasico
  9456 ;; This function uses a non-reentrant model
  9457 ;;
  9458                           
  9459                           	psect	text36
  9460  004ADE                     __ptext36:
  9461                           	opt callstack 0
  9462  004ADE                     _recorrerCaminoEncontrado:
  9463                           	opt callstack 23
  9464  004ADE                     
  9465                           ;main.c: 719:     for (T_INT i = 0; i < numMovimientos; i++) {
  9466  004ADE  0E00               	movlw	0
  9467  004AE0  0100               	movlb	0	; () banked
  9468  004AE2  6F9F               	movwf	(recorrerCaminoEncontrado@i+1)& (0+255),b
  9469  004AE4  0E00               	movlw	0
  9470  004AE6  6F9E               	movwf	recorrerCaminoEncontrado@i& (0+255),b
  9471  004AE8  EFA8  F025         	goto	l10295
  9472  004AEC                     l10281:
  9473                           
  9474                           ; BSR set to: 0
  9475                           ;main.c: 721:         if (movimientos[i] == IZQUIERDA || movimientos[i] == DERECHA)
  9476  004AEC  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  9477  004AEE  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  9478  004AF0  6ED9               	movwf	fsr2l,c
  9479  004AF2  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  9480  004AF4  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  9481  004AF6  6EDA               	movwf	fsr2h,c
  9482  004AF8  0E02               	movlw	2
  9483  004AFA  18DE               	xorwf	postinc2,w,c
  9484  004AFC  B4D8               	btfsc	status,2,c
  9485  004AFE  EF83  F025         	goto	u11541
  9486  004B02  EF85  F025         	goto	u11540
  9487  004B06                     u11541:
  9488  004B06  EF94  F025         	goto	l10285
  9489  004B0A                     u11540:
  9490  004B0A                     
  9491                           ; BSR set to: 0
  9492  004B0A  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  9493  004B0C  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  9494  004B0E  6ED9               	movwf	fsr2l,c
  9495  004B10  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  9496  004B12  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  9497  004B14  6EDA               	movwf	fsr2h,c
  9498  004B16  0E03               	movlw	3
  9499  004B18  18DE               	xorwf	postinc2,w,c
  9500  004B1A  A4D8               	btfss	status,2,c
  9501  004B1C  EF92  F025         	goto	u11551
  9502  004B20  EF94  F025         	goto	u11550
  9503  004B24                     u11551:
  9504  004B24  EF98  F025         	goto	l10287
  9505  004B28                     u11550:
  9506  004B28                     l10285:
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;main.c: 722:             velocidadEstandar();
  9510  004B28  EC85  F02A         	call	_velocidadEstandar	;wreg free
  9511  004B2C  EF9A  F025         	goto	l10289
  9512  004B30                     l10287:
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;main.c: 725:             PID();
  9516  004B30  ECB8  F016         	call	_PID	;wreg free
  9517  004B34                     l10289:
  9518                           
  9519                           ;main.c: 727:         mouse.curr_state = movimientos[i];
  9520  004B34  0100               	movlb	0	; () banked
  9521  004B36  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  9522  004B38  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  9523  004B3A  6ED9               	movwf	fsr2l,c
  9524  004B3C  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  9525  004B3E  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  9526  004B40  6EDA               	movwf	fsr2h,c
  9527  004B42  50DF               	movf	indf2,w,c
  9528  004B44  6FFC               	movwf	_mouse& (0+255),b
  9529  004B46                     
  9530                           ; BSR set to: 0
  9531                           ;main.c: 728:         mover();
  9532  004B46  ECD6  F024         	call	_mover	;wreg free
  9533  004B4A                     
  9534                           ;main.c: 729:     }
  9535  004B4A  0100               	movlb	0	; () banked
  9536  004B4C  4B9E               	infsnz	recorrerCaminoEncontrado@i& (0+255),f,b
  9537  004B4E  2B9F               	incf	(recorrerCaminoEncontrado@i+1)& (0+255),f,b
  9538  004B50                     l10295:
  9539                           
  9540                           ; BSR set to: 0
  9541  004B50  519C               	movf	recorrerCaminoEncontrado@numMovimientos& (0+255),w,b
  9542  004B52  5D9E               	subwf	recorrerCaminoEncontrado@i& (0+255),w,b
  9543  004B54  519D               	movf	(recorrerCaminoEncontrado@numMovimientos+1)& (0+255),w,b
  9544  004B56  599F               	subwfb	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  9545  004B58  A0D8               	btfss	status,0,c
  9546  004B5A  EFB1  F025         	goto	u11561
  9547  004B5E  EFB3  F025         	goto	u11560
  9548  004B62                     u11561:
  9549  004B62  EF76  F025         	goto	l10281
  9550  004B66                     u11560:
  9551  004B66                     
  9552                           ; BSR set to: 0
  9553  004B66  0012               	return		;funcret
  9554  004B68                     __end_of_recorrerCaminoEncontrado:
  9555                           	opt callstack 0
  9556                           
  9557 ;; *************** function _mover *****************
  9558 ;; Defined at:
  9559 ;;		line 620 in file "main.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;		None
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;		None
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  1    wreg      void 
  9566 ;; Registers used:
  9567 ;;		wreg, status,2, status,0, cstack
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9573 ;;      Params:         0       0       0       0       0       0       0       0       0
  9574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9575 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9576 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9577 ;;Total ram usage:        2 bytes
  9578 ;; Hardware stack levels used:    1
  9579 ;; Hardware stack levels required when called:    3
  9580 ;; This function calls:
  9581 ;;		_forzarAvanceRecto
  9582 ;; This function is called by:
  9583 ;;		_regresarPuntoPartida
  9584 ;;		_regresarAlCruce
  9585 ;;		_recorrerCaminoEncontrado
  9586 ;;		_probarGirosAuto
  9587 ;;		_probarPID
  9588 ;;		_probarCruceT
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           	psect	text37
  9593  0049AC                     __ptext37:
  9594                           	opt callstack 0
  9595  0049AC                     _mover:
  9596                           	opt callstack 25
  9597  0049AC                     
  9598                           ;main.c: 622:     switch (mouse.curr_state) {
  9599  0049AC  EF05  F025         	goto	l9679
  9600  0049B0                     l453:
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;main.c: 626:             LATB4 = 1;
  9604  0049B0  888A               	bsf	3978,4,c	;volatile
  9605                           
  9606                           ;main.c: 627:             LATB5 = 0;
  9607  0049B2  9A8A               	bcf	3978,5,c	;volatile
  9608                           
  9609                           ;main.c: 628:             LATB6 = 1;
  9610  0049B4  8C8A               	bsf	3978,6,c	;volatile
  9611                           
  9612                           ;main.c: 631:             if (!0)
  9613  0049B6  9E8A               	bcf	3978,7,c	;volatile
  9614  0049B8                     
  9615                           ; BSR set to: 0
  9616                           ;main.c: 632:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  9617  0049B8  0E48               	movlw	72
  9618  0049BA  6E08               	movwf	??_mover^0,c
  9619  0049BC  0E6C               	movlw	108
  9620  0049BE                     u11947:
  9621  0049BE  2EE8               	decfsz	wreg,f,c
  9622  0049C0  D7FE               	bra	u11947
  9623  0049C2  2E08               	decfsz	??_mover^0,f,c
  9624  0049C4  D7FC               	bra	u11947
  9625  0049C6  D000               	nop2	
  9626  0049C8  EF23  F025         	goto	l459
  9627  0049CC                     l456:
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;main.c: 638:             LATB4 = 0;
  9631  0049CC  988A               	bcf	3978,4,c	;volatile
  9632                           
  9633                           ;main.c: 639:             LATB5 = 0;
  9634  0049CE  9A8A               	bcf	3978,5,c	;volatile
  9635                           
  9636                           ;main.c: 640:             LATB6 = 1;
  9637  0049D0  8C8A               	bsf	3978,6,c	;volatile
  9638                           
  9639                           ;main.c: 641:             LATB7 = 0;
  9640  0049D2  9E8A               	bcf	3978,7,c	;volatile
  9641  0049D4                     l9669:
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;main.c: 643:             _delay((unsigned long)((410)*(4000000/4000.0)));
  9645  0049D4  0E03               	movlw	3
  9646  0049D6  6E09               	movwf	(??_mover+1)^0,c
  9647  0049D8  0E15               	movlw	21
  9648  0049DA  6E08               	movwf	??_mover^0,c
  9649  0049DC  0E74               	movlw	116
  9650  0049DE                     u11957:
  9651  0049DE  2EE8               	decfsz	wreg,f,c
  9652  0049E0  D7FE               	bra	u11957
  9653  0049E2  2E08               	decfsz	??_mover^0,f,c
  9654  0049E4  D7FC               	bra	u11957
  9655  0049E6  2E09               	decfsz	(??_mover+1)^0,f,c
  9656  0049E8  D7FA               	bra	u11957
  9657  0049EA                     
  9658                           ;main.c: 645:             forzarAvanceRecto();
  9659  0049EA  EC98  F02A         	call	_forzarAvanceRecto	;wreg free
  9660                           
  9661                           ;main.c: 647:             break;
  9662  0049EE  EF23  F025         	goto	l459
  9663  0049F2                     l457:
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;main.c: 651:             LATB4 = 1;
  9667  0049F2  888A               	bsf	3978,4,c	;volatile
  9668                           
  9669                           ;main.c: 652:             LATB5 = 0;
  9670  0049F4  9A8A               	bcf	3978,5,c	;volatile
  9671                           
  9672                           ;main.c: 653:             LATB6 = 0;
  9673  0049F6  9C8A               	bcf	3978,6,c	;volatile
  9674                           
  9675                           ;main.c: 654:             LATB7 = 0;
  9676  0049F8  9E8A               	bcf	3978,7,c	;volatile
  9677  0049FA  EFEA  F024         	goto	l9669
  9678  0049FE                     l458:
  9679                           
  9680                           ; BSR set to: 0
  9681                           ;main.c: 664:             LATB4 = 0;
  9682  0049FE  988A               	bcf	3978,4,c	;volatile
  9683                           
  9684                           ;main.c: 665:             LATB5 = 0;
  9685  004A00  9A8A               	bcf	3978,5,c	;volatile
  9686                           
  9687                           ;main.c: 666:             LATB6 = 0;
  9688  004A02  9C8A               	bcf	3978,6,c	;volatile
  9689                           
  9690                           ;main.c: 667:             LATB7 = 0;
  9691  004A04  9E8A               	bcf	3978,7,c	;volatile
  9692                           
  9693                           ;main.c: 669:             break;
  9694  004A06  EF23  F025         	goto	l459
  9695  004A0A                     l9679:
  9696  004A0A  0100               	movlb	0	; () banked
  9697  004A0C  51FC               	movf	_mouse& (0+255),w,b
  9698  004A0E  6E08               	movwf	??_mover^0,c
  9699  004A10  6A09               	clrf	(??_mover+1)^0,c
  9700                           
  9701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9702                           ; Switch size 1, requested type "simple"
  9703                           ; Number of cases is 1, Range of values is 0 to 0
  9704                           ; switch strategies available:
  9705                           ; Name         Instructions Cycles
  9706                           ; simple_byte            4     3 (average)
  9707                           ;	Chosen strategy is simple_byte
  9708  004A12  5009               	movf	(??_mover+1)^0,w,c
  9709  004A14  0A00               	xorlw	0	; case 0
  9710  004A16  B4D8               	btfsc	status,2,c
  9711  004A18  EF10  F025         	goto	l11129
  9712  004A1C  EF23  F025         	goto	l459
  9713  004A20                     l11129:
  9714                           
  9715                           ; BSR set to: 0
  9716                           ; Switch size 1, requested type "simple"
  9717                           ; Number of cases is 4, Range of values is 1 to 4
  9718                           ; switch strategies available:
  9719                           ; Name         Instructions Cycles
  9720                           ; simple_byte           13     7 (average)
  9721                           ;	Chosen strategy is simple_byte
  9722  004A20  5008               	movf	??_mover^0,w,c
  9723  004A22  0A01               	xorlw	1	; case 1
  9724  004A24  B4D8               	btfsc	status,2,c
  9725  004A26  EFD8  F024         	goto	l453
  9726  004A2A  0A03               	xorlw	3	; case 2
  9727  004A2C  B4D8               	btfsc	status,2,c
  9728  004A2E  EFE6  F024         	goto	l456
  9729  004A32  0A01               	xorlw	1	; case 3
  9730  004A34  B4D8               	btfsc	status,2,c
  9731  004A36  EFF9  F024         	goto	l457
  9732  004A3A  0A07               	xorlw	7	; case 4
  9733  004A3C  B4D8               	btfsc	status,2,c
  9734  004A3E  EFFF  F024         	goto	l458
  9735  004A42  EF23  F025         	goto	l459
  9736  004A46                     l459:
  9737  004A46  0012               	return		;funcret
  9738  004A48                     __end_of_mover:
  9739                           	opt callstack 0
  9740                           
  9741 ;; *************** function _PID *****************
  9742 ;; Defined at:
  9743 ;;		line 1209 in file "main.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;		None
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;  error           2   56[BANK0 ] int 
  9748 ;;  dif             2   54[BANK0 ] int 
  9749 ;;  velocidadDer    2   50[BANK0 ] int 
  9750 ;;  velocidadIzq    2   46[BANK0 ] int 
  9751 ;; Return value:  Size  Location     Type
  9752 ;;                  1    wreg      void 
  9753 ;; Registers used:
  9754 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9755 ;; Tracked objects:
  9756 ;;		On entry : 0/0
  9757 ;;		On exit  : 0/0
  9758 ;;		Unchanged: 0/0
  9759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9760 ;;      Params:         0       0       0       0       0       0       0       0       0
  9761 ;;      Locals:         0      16       0       0       0       0       0       0       0
  9762 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9763 ;;      Totals:         0      18       0       0       0       0       0       0       0
  9764 ;;Total ram usage:       18 bytes
  9765 ;; Hardware stack levels used:    1
  9766 ;; Hardware stack levels required when called:    5
  9767 ;; This function calls:
  9768 ;;		___fladd
  9769 ;;		___flmul
  9770 ;;		___flsub
  9771 ;;		___fltol
  9772 ;;		___xxtofl
  9773 ;;		_pwmDuty
  9774 ;;		_roundf
  9775 ;; This function is called by:
  9776 ;;		_comportamientoBasico
  9777 ;;		_regresarPuntoPartida
  9778 ;;		_regresarAlCruce
  9779 ;;		_recorrerCaminoEncontrado
  9780 ;;		_probarPID
  9781 ;;		_probarCruceT
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text38
  9786  002D70                     __ptext38:
  9787                           	opt callstack 0
  9788  002D70                     _PID:
  9789                           	opt callstack 23
  9790  002D70                     
  9791                           ;main.c: 1212:     T_INT error = 0;
  9792  002D70  0E00               	movlw	0
  9793  002D72  0100               	movlb	0	; () banked
  9794  002D74  6F99               	movwf	(PID@error+1)& (0+255),b
  9795  002D76  0E00               	movlw	0
  9796  002D78  6F98               	movwf	PID@error& (0+255),b
  9797  002D7A                     
  9798                           ; BSR set to: 0
  9799                           ;main.c: 1213:     static T_INT difAnt = 0;;main.c: 1216:     dif = sensorIzquierda - se
      +                          nsorDerecha;
  9800  002D7A  C055  F048         	movff	_sensorDerecha,___flsub@a
  9801  002D7E  C056  F049         	movff	_sensorDerecha+1,___flsub@a+1
  9802  002D82  C057  F04A         	movff	_sensorDerecha+2,___flsub@a+2
  9803  002D86  C058  F04B         	movff	_sensorDerecha+3,___flsub@a+3
  9804  002D8A  C128  F044         	movff	_sensorIzquierda,___flsub@b
  9805  002D8E  C129  F045         	movff	_sensorIzquierda+1,___flsub@b+1
  9806  002D92  C12A  F046         	movff	_sensorIzquierda+2,___flsub@b+2
  9807  002D96  C12B  F047         	movff	_sensorIzquierda+3,___flsub@b+3
  9808  002D9A  EC0E  F029         	call	___flsub	;wreg free
  9809  002D9E  C044  F072         	movff	?___flsub,___fltol@f1
  9810  002DA2  C045  F073         	movff	?___flsub+1,___fltol@f1+1
  9811  002DA6  C046  F074         	movff	?___flsub+2,___fltol@f1+2
  9812  002DAA  C047  F075         	movff	?___flsub+3,___fltol@f1+3
  9813  002DAE  EC9E  F01F         	call	___fltol	;wreg free
  9814  002DB2  C072  F096         	movff	?___fltol,PID@dif
  9815  002DB6  C073  F097         	movff	?___fltol+1,PID@dif+1
  9816  002DBA                     
  9817                           ;main.c: 1218:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  9818  002DBA  0ECD               	movlw	205
  9819  002DBC  6E1F               	movwf	___flmul@a^0,c
  9820  002DBE  0ECC               	movlw	204
  9821  002DC0  6E20               	movwf	(___flmul@a+1)^0,c
  9822  002DC2  0ECC               	movlw	204
  9823  002DC4  6E21               	movwf	(___flmul@a+2)^0,c
  9824  002DC6  0E3D               	movlw	61
  9825  002DC8  6E22               	movwf	(___flmul@a+3)^0,c
  9826  002DCA  0100               	movlb	0	; () banked
  9827  002DCC  5196               	movf	PID@dif& (0+255),w,b
  9828  002DCE  0101               	movlb	1	; () banked
  9829  002DD0  5D34               	subwf	PID@difAnt& (0+255),w,b
  9830  002DD2  0100               	movlb	0	; () banked
  9831  002DD4  6F88               	movwf	??_PID& (0+255),b
  9832  002DD6  5197               	movf	(PID@dif+1)& (0+255),w,b
  9833  002DD8  0101               	movlb	1	; () banked
  9834  002DDA  5935               	subwfb	(PID@difAnt+1)& (0+255),w,b
  9835  002DDC  0100               	movlb	0	; () banked
  9836  002DDE  6F89               	movwf	(??_PID+1)& (0+255),b
  9837  002DE0  C088  F00D         	movff	??_PID,___xxtofl@val
  9838  002DE4  C089  F00E         	movff	??_PID+1,___xxtofl@val+1
  9839  002DE8  0E00               	movlw	0
  9840  002DEA  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  9841  002DEC  0EFF               	movlw	-1
  9842  002DEE  6E0F               	movwf	(___xxtofl@val+2)^0,c
  9843  002DF0  6E10               	movwf	(___xxtofl@val+3)^0,c
  9844  002DF2  0E01               	movlw	1
  9845  002DF4  ECCA  F019         	call	___xxtofl
  9846  002DF8  C00D  F01B         	movff	?___xxtofl,___flmul@b
  9847  002DFC  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  9848  002E00  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  9849  002E04  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  9850  002E08  EC8B  F00F         	call	___flmul	;wreg free
  9851  002E0C  C01B  F038         	movff	?___flmul,___fladd@a
  9852  002E10  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  9853  002E14  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  9854  002E18  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  9855  002E1C  0E66               	movlw	102
  9856  002E1E  6E1F               	movwf	___flmul@a^0,c
  9857  002E20  0E66               	movlw	102
  9858  002E22  6E20               	movwf	(___flmul@a+1)^0,c
  9859  002E24  0E66               	movlw	102
  9860  002E26  6E21               	movwf	(___flmul@a+2)^0,c
  9861  002E28  0E3F               	movlw	63
  9862  002E2A  6E22               	movwf	(___flmul@a+3)^0,c
  9863  002E2C  C096  F00D         	movff	PID@dif,___xxtofl@val
  9864  002E30  C097  F00E         	movff	PID@dif+1,___xxtofl@val+1
  9865  002E34  0E00               	movlw	0
  9866  002E36  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  9867  002E38  0EFF               	movlw	-1
  9868  002E3A  6E0F               	movwf	(___xxtofl@val+2)^0,c
  9869  002E3C  6E10               	movwf	(___xxtofl@val+3)^0,c
  9870  002E3E  0E01               	movlw	1
  9871  002E40  ECCA  F019         	call	___xxtofl
  9872  002E44  C00D  F01B         	movff	?___xxtofl,___flmul@b
  9873  002E48  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  9874  002E4C  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  9875  002E50  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  9876  002E54  EC8B  F00F         	call	___flmul	;wreg free
  9877  002E58  C01B  F034         	movff	?___flmul,___fladd@b
  9878  002E5C  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  9879  002E60  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  9880  002E64  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  9881  002E68  ECC0  F008         	call	___fladd	;wreg free
  9882  002E6C  C034  F08A         	movff	?___fladd,_PID$1827
  9883  002E70  C035  F08B         	movff	?___fladd+1,_PID$1827+1
  9884  002E74  C036  F08C         	movff	?___fladd+2,_PID$1827+2
  9885  002E78  C037  F08D         	movff	?___fladd+3,_PID$1827+3
  9886  002E7C                     
  9887                           ;main.c: 1218:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  9888  002E7C  C08A  F04C         	movff	_PID$1827,roundf@x
  9889  002E80  C08B  F04D         	movff	_PID$1827+1,roundf@x+1
  9890  002E84  C08C  F04E         	movff	_PID$1827+2,roundf@x+2
  9891  002E88  C08D  F04F         	movff	_PID$1827+3,roundf@x+3
  9892  002E8C  ECA0  F011         	call	_roundf	;wreg free
  9893  002E90  C04C  F072         	movff	?_roundf,___fltol@f1
  9894  002E94  C04D  F073         	movff	?_roundf+1,___fltol@f1+1
  9895  002E98  C04E  F074         	movff	?_roundf+2,___fltol@f1+2
  9896  002E9C  C04F  F075         	movff	?_roundf+3,___fltol@f1+3
  9897  002EA0  EC9E  F01F         	call	___fltol	;wreg free
  9898  002EA4  C072  F098         	movff	?___fltol,PID@error
  9899  002EA8  C073  F099         	movff	?___fltol+1,PID@error+1
  9900  002EAC                     
  9901                           ;main.c: 1220:     difAnt = dif;
  9902  002EAC  C096  F134         	movff	PID@dif,PID@difAnt
  9903  002EB0  C097  F135         	movff	PID@dif+1,PID@difAnt+1
  9904  002EB4                     
  9905                           ;main.c: 1222:     T_INT velocidadIzquierda = ((100 - error)<(0)?(0):((100 - error)>(100
      +                          )?(100):(100 - error)));
  9906  002EB4  0E64               	movlw	100
  9907  002EB6  0100               	movlb	0	; () banked
  9908  002EB8  6F88               	movwf	??_PID& (0+255),b
  9909  002EBA  0E00               	movlw	0
  9910  002EBC  6F89               	movwf	(??_PID+1)& (0+255),b
  9911  002EBE  5198               	movf	PID@error& (0+255),w,b
  9912  002EC0  5D88               	subwf	??_PID& (0+255),w,b
  9913  002EC2  5199               	movf	(PID@error+1)& (0+255),w,b
  9914  002EC4  5989               	subwfb	(??_PID+1)& (0+255),w,b
  9915  002EC6  0B80               	andlw	128
  9916  002EC8  A4D8               	btfss	status,2,c
  9917  002ECA  EF69  F017         	goto	u11031
  9918  002ECE  EF6B  F017         	goto	u11030
  9919  002ED2                     u11031:
  9920  002ED2  EF95  F017         	goto	l9727
  9921  002ED6                     u11030:
  9922  002ED6                     
  9923                           ; BSR set to: 0
  9924  002ED6  0E64               	movlw	100
  9925  002ED8  6F88               	movwf	??_PID& (0+255),b
  9926  002EDA  0E00               	movlw	0
  9927  002EDC  6F89               	movwf	(??_PID+1)& (0+255),b
  9928  002EDE  5198               	movf	PID@error& (0+255),w,b
  9929  002EE0  5F88               	subwf	??_PID& (0+255),f,b
  9930  002EE2  5199               	movf	(PID@error+1)& (0+255),w,b
  9931  002EE4  5B89               	subwfb	(??_PID+1)& (0+255),f,b
  9932  002EE6  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  9933  002EE8  EF81  F017         	goto	u11040
  9934  002EEC  5189               	movf	(??_PID+1)& (0+255),w,b
  9935  002EEE  E107               	bnz	u11041
  9936  002EF0  0E65               	movlw	101
  9937  002EF2  5D88               	subwf	??_PID& (0+255),w,b
  9938  002EF4  B0D8               	btfsc	status,0,c
  9939  002EF6  EF7F  F017         	goto	u11041
  9940  002EFA  EF81  F017         	goto	u11040
  9941  002EFE                     u11041:
  9942  002EFE  EF8B  F017         	goto	l9723
  9943  002F02                     u11040:
  9944  002F02                     
  9945                           ; BSR set to: 0
  9946  002F02  5198               	movf	PID@error& (0+255),w,b
  9947  002F04  0864               	sublw	100
  9948  002F06  6F90               	movwf	_PID$749& (0+255),b
  9949  002F08  5199               	movf	(PID@error+1)& (0+255),w,b
  9950  002F0A  A0D8               	btfss	status,0,c
  9951  002F0C  2AE8               	incf	wreg,f,c
  9952  002F0E  0800               	sublw	0
  9953  002F10  6F91               	movwf	(_PID$749+1)& (0+255),b
  9954  002F12  EF8F  F017         	goto	l9725
  9955  002F16                     l9723:
  9956                           
  9957                           ; BSR set to: 0
  9958  002F16  0E00               	movlw	0
  9959  002F18  6F91               	movwf	(_PID$749+1)& (0+255),b
  9960  002F1A  0E64               	movlw	100
  9961  002F1C  6F90               	movwf	_PID$749& (0+255),b
  9962  002F1E                     l9725:
  9963                           
  9964                           ; BSR set to: 0
  9965  002F1E  C090  F08E         	movff	_PID$749,PID@velocidadIzquierda
  9966  002F22  C091  F08F         	movff	_PID$749+1,PID@velocidadIzquierda+1
  9967  002F26  EF99  F017         	goto	l9729
  9968  002F2A                     l9727:
  9969                           
  9970                           ; BSR set to: 0
  9971  002F2A  0E00               	movlw	0
  9972  002F2C  6F8F               	movwf	(PID@velocidadIzquierda+1)& (0+255),b
  9973  002F2E  0E00               	movlw	0
  9974  002F30  6F8E               	movwf	PID@velocidadIzquierda& (0+255),b
  9975  002F32                     l9729:
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;main.c: 1223:     T_INT velocidadDerecha = ((100 + error)<(0)?(0):((100 + error)>(100)?
      +                          (100):(100 + error)));
  9979  002F32  0E64               	movlw	100
  9980  002F34  2598               	addwf	PID@error& (0+255),w,b
  9981  002F36  0E00               	movlw	0
  9982  002F38  2199               	addwfc	(PID@error+1)& (0+255),w,b
  9983  002F3A  0B80               	andlw	128
  9984  002F3C  A4D8               	btfss	status,2,c
  9985  002F3E  EFA3  F017         	goto	u11051
  9986  002F42  EFA5  F017         	goto	u11050
  9987  002F46                     u11051:
  9988  002F46  EFCB  F017         	goto	l9739
  9989  002F4A                     u11050:
  9990  002F4A                     
  9991                           ; BSR set to: 0
  9992  002F4A  0E64               	movlw	100
  9993  002F4C  2598               	addwf	PID@error& (0+255),w,b
  9994  002F4E  6F88               	movwf	??_PID& (0+255),b
  9995  002F50  0E00               	movlw	0
  9996  002F52  2199               	addwfc	(PID@error+1)& (0+255),w,b
  9997  002F54  6F89               	movwf	(??_PID+1)& (0+255),b
  9998  002F56  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  9999  002F58  EFB9  F017         	goto	u11060
 10000  002F5C  5189               	movf	(??_PID+1)& (0+255),w,b
 10001  002F5E  E107               	bnz	u11061
 10002  002F60  0E65               	movlw	101
 10003  002F62  5D88               	subwf	??_PID& (0+255),w,b
 10004  002F64  B0D8               	btfsc	status,0,c
 10005  002F66  EFB7  F017         	goto	u11061
 10006  002F6A  EFB9  F017         	goto	u11060
 10007  002F6E                     u11061:
 10008  002F6E  EFC1  F017         	goto	l9735
 10009  002F72                     u11060:
 10010  002F72                     
 10011                           ; BSR set to: 0
 10012  002F72  0E64               	movlw	100
 10013  002F74  2598               	addwf	PID@error& (0+255),w,b
 10014  002F76  6F94               	movwf	_PID$751& (0+255),b
 10015  002F78  0E00               	movlw	0
 10016  002F7A  2199               	addwfc	(PID@error+1)& (0+255),w,b
 10017  002F7C  6F95               	movwf	(_PID$751+1)& (0+255),b
 10018  002F7E  EFC5  F017         	goto	l9737
 10019  002F82                     l9735:
 10020                           
 10021                           ; BSR set to: 0
 10022  002F82  0E00               	movlw	0
 10023  002F84  6F95               	movwf	(_PID$751+1)& (0+255),b
 10024  002F86  0E64               	movlw	100
 10025  002F88  6F94               	movwf	_PID$751& (0+255),b
 10026  002F8A                     l9737:
 10027                           
 10028                           ; BSR set to: 0
 10029  002F8A  C094  F092         	movff	_PID$751,PID@velocidadDerecha
 10030  002F8E  C095  F093         	movff	_PID$751+1,PID@velocidadDerecha+1
 10031  002F92  EFCF  F017         	goto	l9741
 10032  002F96                     l9739:
 10033                           
 10034                           ; BSR set to: 0
 10035  002F96  0E00               	movlw	0
 10036  002F98  6F93               	movwf	(PID@velocidadDerecha+1)& (0+255),b
 10037  002F9A  0E00               	movlw	0
 10038  002F9C  6F92               	movwf	PID@velocidadDerecha& (0+255),b
 10039  002F9E                     l9741:
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;main.c: 1225:     pwmDuty(velocidadIzquierda, 1);
 10043  002F9E  C08E  F07C         	movff	PID@velocidadIzquierda,pwmDuty@cicloTrabajo
 10044  002FA2  C08F  F07D         	movff	PID@velocidadIzquierda+1,pwmDuty@cicloTrabajo+1
 10045  002FA6  0E01               	movlw	1
 10046  002FA8  6F7E               	movwf	pwmDuty@channel& (0+255),b
 10047  002FAA  ECEC  F018         	call	_pwmDuty	;wreg free
 10048  002FAE                     
 10049                           ;main.c: 1226:     pwmDuty(velocidadDerecha, 2);
 10050  002FAE  C092  F07C         	movff	PID@velocidadDerecha,pwmDuty@cicloTrabajo
 10051  002FB2  C093  F07D         	movff	PID@velocidadDerecha+1,pwmDuty@cicloTrabajo+1
 10052  002FB6  0E02               	movlw	2
 10053  002FB8  0100               	movlb	0	; () banked
 10054  002FBA  6F7E               	movwf	pwmDuty@channel& (0+255),b
 10055  002FBC  ECEC  F018         	call	_pwmDuty	;wreg free
 10056  002FC0  0012               	return		;funcret
 10057  002FC2                     __end_of_PID:
 10058                           	opt callstack 0
 10059                           
 10060 ;; *************** function _roundf *****************
 10061 ;; Defined at:
 10062 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;  x               4   75[COMRAM] float 
 10065 ;; Auto vars:     Size  Location     Type
 10066 ;;  y               4   14[BANK0 ] float 
 10067 ;;  u               4   10[BANK0 ] struct .
 10068 ;;  e               2    4[BANK0 ] int 
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  4   75[COMRAM] float 
 10071 ;; Registers used:
 10072 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10078 ;;      Params:         4       0       0       0       0       0       0       0       0
 10079 ;;      Locals:         0      18       0       0       0       0       0       0       0
 10080 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10081 ;;      Totals:         8      18       0       0       0       0       0       0       0
 10082 ;;Total ram usage:       26 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; Hardware stack levels required when called:    4
 10085 ;; This function calls:
 10086 ;;		___fladd
 10087 ;;		___flge
 10088 ;;		___flmul
 10089 ;;		___flneg
 10090 ;;		___flsub
 10091 ;; This function is called by:
 10092 ;;		_PID
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           	psect	text39
 10097  002340                     __ptext39:
 10098                           	opt callstack 0
 10099  002340                     _roundf:
 10100                           	opt callstack 23
 10101  002340  C100  F06A         	movff	roundf@F525,roundf@u
 10102  002344  C101  F06B         	movff	roundf@F525+1,roundf@u+1
 10103  002348  C102  F06C         	movff	roundf@F525+2,roundf@u+2
 10104  00234C  C103  F06D         	movff	roundf@F525+3,roundf@u+3
 10105  002350  C04C  F06A         	movff	roundf@x,roundf@u
 10106  002354  C04D  F06B         	movff	roundf@x+1,roundf@u+1
 10107  002358  C04E  F06C         	movff	roundf@x+2,roundf@u+2
 10108  00235C  C04F  F06D         	movff	roundf@x+3,roundf@u+3
 10109  002360  C06A  F050         	movff	roundf@u,??_roundf
 10110  002364  C06B  F051         	movff	roundf@u+1,??_roundf+1
 10111  002368  C06C  F052         	movff	roundf@u+2,??_roundf+2
 10112  00236C  C06D  F053         	movff	roundf@u+3,??_roundf+3
 10113  002370  0E18               	movlw	24
 10114  002372  EFC0  F011         	goto	u10610
 10115  002376                     u10615:
 10116  002376  90D8               	bcf	status,0,c
 10117  002378  3253               	rrcf	(??_roundf+3)^0,f,c
 10118  00237A  3252               	rrcf	(??_roundf+2)^0,f,c
 10119  00237C  3251               	rrcf	(??_roundf+1)^0,f,c
 10120  00237E  3250               	rrcf	??_roundf^0,f,c
 10121  002380                     u10610:
 10122  002380  2EE8               	decfsz	wreg,f,c
 10123  002382  EFBB  F011         	goto	u10615
 10124  002386  5050               	movf	??_roundf^0,w,c
 10125  002388  0100               	movlb	0	; () banked
 10126  00238A  6F64               	movwf	roundf@e& (0+255),b
 10127  00238C  6B65               	clrf	(roundf@e+1)& (0+255),b
 10128  00238E  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
 10129  002390  EFD3  F011         	goto	u10621
 10130  002394  5165               	movf	(roundf@e+1)& (0+255),w,b
 10131  002396  E109               	bnz	u10620
 10132  002398  0E96               	movlw	150
 10133  00239A  5D64               	subwf	roundf@e& (0+255),w,b
 10134  00239C  A0D8               	btfss	status,0,c
 10135  00239E  EFD3  F011         	goto	u10621
 10136  0023A2  EFD5  F011         	goto	u10620
 10137  0023A6                     u10621:
 10138  0023A6  EFDF  F011         	goto	l9471
 10139  0023AA                     u10620:
 10140  0023AA                     
 10141                           ; BSR set to: 0
 10142  0023AA  C04C  F04C         	movff	roundf@x,?_roundf
 10143  0023AE  C04D  F04D         	movff	roundf@x+1,?_roundf+1
 10144  0023B2  C04E  F04E         	movff	roundf@x+2,?_roundf+2
 10145  0023B6  C04F  F04F         	movff	roundf@x+3,?_roundf+3
 10146  0023BA  EF78  F013         	goto	l1740
 10147  0023BE                     l9471:
 10148                           
 10149                           ; BSR set to: 0
 10150  0023BE  C06A  F050         	movff	roundf@u,??_roundf
 10151  0023C2  C06B  F051         	movff	roundf@u+1,??_roundf+1
 10152  0023C6  C06C  F052         	movff	roundf@u+2,??_roundf+2
 10153  0023CA  C06D  F053         	movff	roundf@u+3,??_roundf+3
 10154  0023CE  0E20               	movlw	32
 10155  0023D0  EFEF  F011         	goto	u10630
 10156  0023D4                     u10635:
 10157  0023D4  90D8               	bcf	status,0,c
 10158  0023D6  3253               	rrcf	(??_roundf+3)^0,f,c
 10159  0023D8  3252               	rrcf	(??_roundf+2)^0,f,c
 10160  0023DA  3251               	rrcf	(??_roundf+1)^0,f,c
 10161  0023DC  3250               	rrcf	??_roundf^0,f,c
 10162  0023DE                     u10630:
 10163  0023DE  2EE8               	decfsz	wreg,f,c
 10164  0023E0  EFEA  F011         	goto	u10635
 10165  0023E4  5050               	movf	??_roundf^0,w,c
 10166  0023E6  1051               	iorwf	(??_roundf+1)^0,w,c
 10167  0023E8  1052               	iorwf	(??_roundf+2)^0,w,c
 10168  0023EA  1053               	iorwf	(??_roundf+3)^0,w,c
 10169  0023EC  B4D8               	btfsc	status,2,c
 10170  0023EE  EFFB  F011         	goto	u10641
 10171  0023F2  EFFD  F011         	goto	u10640
 10172  0023F6                     u10641:
 10173  0023F6  EF0F  F012         	goto	l9475
 10174  0023FA                     u10640:
 10175  0023FA                     
 10176                           ; BSR set to: 0
 10177  0023FA  C04C  F006         	movff	roundf@x,___flneg@f1
 10178  0023FE  C04D  F007         	movff	roundf@x+1,___flneg@f1+1
 10179  002402  C04E  F008         	movff	roundf@x+2,___flneg@f1+2
 10180  002406  C04F  F009         	movff	roundf@x+3,___flneg@f1+3
 10181  00240A  EC11  F02A         	call	___flneg	;wreg free
 10182  00240E  C006  F04C         	movff	?___flneg,roundf@x
 10183  002412  C007  F04D         	movff	?___flneg+1,roundf@x+1
 10184  002416  C008  F04E         	movff	?___flneg+2,roundf@x+2
 10185  00241A  C009  F04F         	movff	?___flneg+3,roundf@x+3
 10186  00241E                     l9475:
 10187  00241E  0100               	movlb	0	; () banked
 10188  002420  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
 10189  002422  EF1E  F012         	goto	u10650
 10190  002426  5165               	movf	(roundf@e+1)& (0+255),w,b
 10191  002428  E107               	bnz	u10651
 10192  00242A  0E7E               	movlw	126
 10193  00242C  5D64               	subwf	roundf@e& (0+255),w,b
 10194  00242E  B0D8               	btfsc	status,0,c
 10195  002430  EF1C  F012         	goto	u10651
 10196  002434  EF1E  F012         	goto	u10650
 10197  002438                     u10651:
 10198  002438  EF3A  F012         	goto	l9481
 10199  00243C                     u10650:
 10200  00243C                     
 10201                           ; BSR set to: 0
 10202  00243C  C06A  F01B         	movff	roundf@u,___flmul@b
 10203  002440  C06B  F01C         	movff	roundf@u+1,___flmul@b+1
 10204  002444  C06C  F01D         	movff	roundf@u+2,___flmul@b+2
 10205  002448  C06D  F01E         	movff	roundf@u+3,___flmul@b+3
 10206  00244C  0E00               	movlw	0
 10207  00244E  6E1F               	movwf	___flmul@a^0,c
 10208  002450  0E00               	movlw	0
 10209  002452  6E20               	movwf	(___flmul@a+1)^0,c
 10210  002454  0E00               	movlw	0
 10211  002456  6E21               	movwf	(___flmul@a+2)^0,c
 10212  002458  0E00               	movlw	0
 10213  00245A  6E22               	movwf	(___flmul@a+3)^0,c
 10214  00245C  EC8B  F00F         	call	___flmul	;wreg free
 10215  002460  C01B  F04C         	movff	?___flmul,?_roundf
 10216  002464  C01C  F04D         	movff	?___flmul+1,?_roundf+1
 10217  002468  C01D  F04E         	movff	?___flmul+2,?_roundf+2
 10218  00246C  C01E  F04F         	movff	?___flmul+3,?_roundf+3
 10219  002470  EF78  F013         	goto	l1740
 10220  002474                     l9481:
 10221                           
 10222                           ; BSR set to: 0
 10223  002474  0E00               	movlw	0
 10224  002476  6E38               	movwf	___fladd@a^0,c
 10225  002478  0E00               	movlw	0
 10226  00247A  6E39               	movwf	(___fladd@a+1)^0,c
 10227  00247C  0E00               	movlw	0
 10228  00247E  6E3A               	movwf	(___fladd@a+2)^0,c
 10229  002480  0E4B               	movlw	75
 10230  002482  6E3B               	movwf	(___fladd@a+3)^0,c
 10231  002484  C04C  F034         	movff	roundf@x,___fladd@b
 10232  002488  C04D  F035         	movff	roundf@x+1,___fladd@b+1
 10233  00248C  C04E  F036         	movff	roundf@x+2,___fladd@b+2
 10234  002490  C04F  F037         	movff	roundf@x+3,___fladd@b+3
 10235  002494  ECC0  F008         	call	___fladd	;wreg free
 10236  002498  C034  F066         	movff	?___fladd,_roundf$1828
 10237  00249C  C035  F067         	movff	?___fladd+1,_roundf$1828+1
 10238  0024A0  C036  F068         	movff	?___fladd+2,_roundf$1828+2
 10239  0024A4  C037  F069         	movff	?___fladd+3,_roundf$1828+3
 10240  0024A8  0E00               	movlw	0
 10241  0024AA  6E38               	movwf	___fladd@a^0,c
 10242  0024AC  0E00               	movlw	0
 10243  0024AE  6E39               	movwf	(___fladd@a+1)^0,c
 10244  0024B0  0E00               	movlw	0
 10245  0024B2  6E3A               	movwf	(___fladd@a+2)^0,c
 10246  0024B4  0ECB               	movlw	203
 10247  0024B6  6E3B               	movwf	(___fladd@a+3)^0,c
 10248  0024B8  C066  F034         	movff	_roundf$1828,___fladd@b
 10249  0024BC  C067  F035         	movff	_roundf$1828+1,___fladd@b+1
 10250  0024C0  C068  F036         	movff	_roundf$1828+2,___fladd@b+2
 10251  0024C4  C069  F037         	movff	_roundf$1828+3,___fladd@b+3
 10252  0024C8  ECC0  F008         	call	___fladd	;wreg free
 10253  0024CC  C034  F060         	movff	?___fladd,_roundf$1829
 10254  0024D0  C035  F061         	movff	?___fladd+1,_roundf$1829+1
 10255  0024D4  C036  F062         	movff	?___fladd+2,_roundf$1829+2
 10256  0024D8  C037  F063         	movff	?___fladd+3,_roundf$1829+3
 10257  0024DC  C060  F044         	movff	_roundf$1829,___flsub@b
 10258  0024E0  C061  F045         	movff	_roundf$1829+1,___flsub@b+1
 10259  0024E4  C062  F046         	movff	_roundf$1829+2,___flsub@b+2
 10260  0024E8  C063  F047         	movff	_roundf$1829+3,___flsub@b+3
 10261  0024EC  C04C  F048         	movff	roundf@x,___flsub@a
 10262  0024F0  C04D  F049         	movff	roundf@x+1,___flsub@a+1
 10263  0024F4  C04E  F04A         	movff	roundf@x+2,___flsub@a+2
 10264  0024F8  C04F  F04B         	movff	roundf@x+3,___flsub@a+3
 10265  0024FC  EC0E  F029         	call	___flsub	;wreg free
 10266  002500  C044  F06E         	movff	?___flsub,roundf@y
 10267  002504  C045  F06F         	movff	?___flsub+1,roundf@y+1
 10268  002508  C046  F070         	movff	?___flsub+2,roundf@y+2
 10269  00250C  C047  F071         	movff	?___flsub+3,roundf@y+3
 10270  002510  0E00               	movlw	0
 10271  002512  6E34               	movwf	___flge@ff1^0,c
 10272  002514  0E00               	movlw	0
 10273  002516  6E35               	movwf	(___flge@ff1+1)^0,c
 10274  002518  0E00               	movlw	0
 10275  00251A  6E36               	movwf	(___flge@ff1+2)^0,c
 10276  00251C  0E3F               	movlw	63
 10277  00251E  6E37               	movwf	(___flge@ff1+3)^0,c
 10278  002520  C06E  F038         	movff	roundf@y,___flge@ff2
 10279  002524  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
 10280  002528  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
 10281  00252C  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
 10282  002530  EC22  F020         	call	___flge	;wreg free
 10283  002534  B0D8               	btfsc	status,0,c
 10284  002536  EF9F  F012         	goto	u10661
 10285  00253A  EFA1  F012         	goto	u10660
 10286  00253E                     u10661:
 10287  00253E  EFD7  F012         	goto	l9485
 10288  002542                     u10660:
 10289  002542  C04C  F038         	movff	roundf@x,___fladd@a
 10290  002546  C04D  F039         	movff	roundf@x+1,___fladd@a+1
 10291  00254A  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
 10292  00254E  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
 10293  002552  C06E  F034         	movff	roundf@y,___fladd@b
 10294  002556  C06F  F035         	movff	roundf@y+1,___fladd@b+1
 10295  00255A  C070  F036         	movff	roundf@y+2,___fladd@b+2
 10296  00255E  C071  F037         	movff	roundf@y+3,___fladd@b+3
 10297  002562  ECC0  F008         	call	___fladd	;wreg free
 10298  002566  C034  F066         	movff	?___fladd,_roundf$1828
 10299  00256A  C035  F067         	movff	?___fladd+1,_roundf$1828+1
 10300  00256E  C036  F068         	movff	?___fladd+2,_roundf$1828+2
 10301  002572  C037  F069         	movff	?___fladd+3,_roundf$1828+3
 10302  002576  C066  F034         	movff	_roundf$1828,___fladd@b
 10303  00257A  C067  F035         	movff	_roundf$1828+1,___fladd@b+1
 10304  00257E  C068  F036         	movff	_roundf$1828+2,___fladd@b+2
 10305  002582  C069  F037         	movff	_roundf$1828+3,___fladd@b+3
 10306  002586  0E00               	movlw	0
 10307  002588  6E38               	movwf	___fladd@a^0,c
 10308  00258A  0E00               	movlw	0
 10309  00258C  6E39               	movwf	(___fladd@a+1)^0,c
 10310  00258E  0E80               	movlw	128
 10311  002590  6E3A               	movwf	(___fladd@a+2)^0,c
 10312  002592  0EBF               	movlw	191
 10313  002594  6E3B               	movwf	(___fladd@a+3)^0,c
 10314  002596  ECC0  F008         	call	___fladd	;wreg free
 10315  00259A  C034  F06E         	movff	?___fladd,roundf@y
 10316  00259E  C035  F06F         	movff	?___fladd+1,roundf@y+1
 10317  0025A2  C036  F070         	movff	?___fladd+2,roundf@y+2
 10318  0025A6  C037  F071         	movff	?___fladd+3,roundf@y+3
 10319  0025AA  EF40  F013         	goto	l9491
 10320  0025AE                     l9485:
 10321  0025AE  0E00               	movlw	0
 10322  0025B0  6E34               	movwf	___flge@ff1^0,c
 10323  0025B2  0E00               	movlw	0
 10324  0025B4  6E35               	movwf	(___flge@ff1+1)^0,c
 10325  0025B6  0E00               	movlw	0
 10326  0025B8  6E36               	movwf	(___flge@ff1+2)^0,c
 10327  0025BA  0EBF               	movlw	191
 10328  0025BC  6E37               	movwf	(___flge@ff1+3)^0,c
 10329  0025BE  C06E  F038         	movff	roundf@y,___flge@ff2
 10330  0025C2  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
 10331  0025C6  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
 10332  0025CA  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
 10333  0025CE  EC22  F020         	call	___flge	;wreg free
 10334  0025D2  A0D8               	btfss	status,0,c
 10335  0025D4  EFEE  F012         	goto	u10671
 10336  0025D8  EFF0  F012         	goto	u10670
 10337  0025DC                     u10671:
 10338  0025DC  EF26  F013         	goto	l9489
 10339  0025E0                     u10670:
 10340  0025E0  C04C  F038         	movff	roundf@x,___fladd@a
 10341  0025E4  C04D  F039         	movff	roundf@x+1,___fladd@a+1
 10342  0025E8  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
 10343  0025EC  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
 10344  0025F0  C06E  F034         	movff	roundf@y,___fladd@b
 10345  0025F4  C06F  F035         	movff	roundf@y+1,___fladd@b+1
 10346  0025F8  C070  F036         	movff	roundf@y+2,___fladd@b+2
 10347  0025FC  C071  F037         	movff	roundf@y+3,___fladd@b+3
 10348  002600  ECC0  F008         	call	___fladd	;wreg free
 10349  002604  C034  F066         	movff	?___fladd,_roundf$1828
 10350  002608  C035  F067         	movff	?___fladd+1,_roundf$1828+1
 10351  00260C  C036  F068         	movff	?___fladd+2,_roundf$1828+2
 10352  002610  C037  F069         	movff	?___fladd+3,_roundf$1828+3
 10353  002614  C066  F034         	movff	_roundf$1828,___fladd@b
 10354  002618  C067  F035         	movff	_roundf$1828+1,___fladd@b+1
 10355  00261C  C068  F036         	movff	_roundf$1828+2,___fladd@b+2
 10356  002620  C069  F037         	movff	_roundf$1828+3,___fladd@b+3
 10357  002624  0E00               	movlw	0
 10358  002626  6E38               	movwf	___fladd@a^0,c
 10359  002628  0E00               	movlw	0
 10360  00262A  6E39               	movwf	(___fladd@a+1)^0,c
 10361  00262C  0E80               	movlw	128
 10362  00262E  6E3A               	movwf	(___fladd@a+2)^0,c
 10363  002630  0E3F               	movlw	63
 10364  002632  6E3B               	movwf	(___fladd@a+3)^0,c
 10365  002634  ECC0  F008         	call	___fladd	;wreg free
 10366  002638  C034  F06E         	movff	?___fladd,roundf@y
 10367  00263C  C035  F06F         	movff	?___fladd+1,roundf@y+1
 10368  002640  C036  F070         	movff	?___fladd+2,roundf@y+2
 10369  002644  C037  F071         	movff	?___fladd+3,roundf@y+3
 10370  002648  EF40  F013         	goto	l9491
 10371  00264C                     l9489:
 10372  00264C  C06E  F034         	movff	roundf@y,___fladd@b
 10373  002650  C06F  F035         	movff	roundf@y+1,___fladd@b+1
 10374  002654  C070  F036         	movff	roundf@y+2,___fladd@b+2
 10375  002658  C071  F037         	movff	roundf@y+3,___fladd@b+3
 10376  00265C  C04C  F038         	movff	roundf@x,___fladd@a
 10377  002660  C04D  F039         	movff	roundf@x+1,___fladd@a+1
 10378  002664  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
 10379  002668  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
 10380  00266C  ECC0  F008         	call	___fladd	;wreg free
 10381  002670  C034  F06E         	movff	?___fladd,roundf@y
 10382  002674  C035  F06F         	movff	?___fladd+1,roundf@y+1
 10383  002678  C036  F070         	movff	?___fladd+2,roundf@y+2
 10384  00267C  C037  F071         	movff	?___fladd+3,roundf@y+3
 10385  002680                     l9491:
 10386  002680  C06A  F050         	movff	roundf@u,??_roundf
 10387  002684  C06B  F051         	movff	roundf@u+1,??_roundf+1
 10388  002688  C06C  F052         	movff	roundf@u+2,??_roundf+2
 10389  00268C  C06D  F053         	movff	roundf@u+3,??_roundf+3
 10390  002690  0E20               	movlw	32
 10391  002692  EF50  F013         	goto	u10680
 10392  002696                     u10685:
 10393  002696  90D8               	bcf	status,0,c
 10394  002698  3253               	rrcf	(??_roundf+3)^0,f,c
 10395  00269A  3252               	rrcf	(??_roundf+2)^0,f,c
 10396  00269C  3251               	rrcf	(??_roundf+1)^0,f,c
 10397  00269E  3250               	rrcf	??_roundf^0,f,c
 10398  0026A0                     u10680:
 10399  0026A0  2EE8               	decfsz	wreg,f,c
 10400  0026A2  EF4B  F013         	goto	u10685
 10401  0026A6  5050               	movf	??_roundf^0,w,c
 10402  0026A8  1051               	iorwf	(??_roundf+1)^0,w,c
 10403  0026AA  1052               	iorwf	(??_roundf+2)^0,w,c
 10404  0026AC  1053               	iorwf	(??_roundf+3)^0,w,c
 10405  0026AE  B4D8               	btfsc	status,2,c
 10406  0026B0  EF5C  F013         	goto	u10691
 10407  0026B4  EF5E  F013         	goto	u10690
 10408  0026B8                     u10691:
 10409  0026B8  EF70  F013         	goto	l9495
 10410  0026BC                     u10690:
 10411  0026BC  C06E  F006         	movff	roundf@y,___flneg@f1
 10412  0026C0  C06F  F007         	movff	roundf@y+1,___flneg@f1+1
 10413  0026C4  C070  F008         	movff	roundf@y+2,___flneg@f1+2
 10414  0026C8  C071  F009         	movff	roundf@y+3,___flneg@f1+3
 10415  0026CC  EC11  F02A         	call	___flneg	;wreg free
 10416  0026D0  C006  F06E         	movff	?___flneg,roundf@y
 10417  0026D4  C007  F06F         	movff	?___flneg+1,roundf@y+1
 10418  0026D8  C008  F070         	movff	?___flneg+2,roundf@y+2
 10419  0026DC  C009  F071         	movff	?___flneg+3,roundf@y+3
 10420  0026E0                     l9495:
 10421  0026E0  C06E  F04C         	movff	roundf@y,?_roundf
 10422  0026E4  C06F  F04D         	movff	roundf@y+1,?_roundf+1
 10423  0026E8  C070  F04E         	movff	roundf@y+2,?_roundf+2
 10424  0026EC  C071  F04F         	movff	roundf@y+3,?_roundf+3
 10425  0026F0                     l1740:
 10426  0026F0  0012               	return		;funcret
 10427  0026F2                     __end_of_roundf:
 10428                           	opt callstack 0
 10429                           
 10430 ;; *************** function ___flsub *****************
 10431 ;; Defined at:
 10432 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  b               4   67[COMRAM] float 
 10435 ;;  a               4   71[COMRAM] float 
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;		None
 10438 ;; Return value:  Size  Location     Type
 10439 ;;                  4   67[COMRAM] float 
 10440 ;; Registers used:
 10441 ;;		wreg, status,2, status,0, cstack
 10442 ;; Tracked objects:
 10443 ;;		On entry : 0/0
 10444 ;;		On exit  : 0/0
 10445 ;;		Unchanged: 0/0
 10446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10447 ;;      Params:         8       0       0       0       0       0       0       0       0
 10448 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10449 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10450 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10451 ;;Total ram usage:        8 bytes
 10452 ;; Hardware stack levels used:    1
 10453 ;; Hardware stack levels required when called:    3
 10454 ;; This function calls:
 10455 ;;		___fladd
 10456 ;; This function is called by:
 10457 ;;		_PID
 10458 ;;		_efgtoa
 10459 ;;		_roundf
 10460 ;; This function uses a non-reentrant model
 10461 ;;
 10462                           
 10463                           	psect	text40
 10464  00521C                     __ptext40:
 10465                           	opt callstack 0
 10466  00521C                     ___flsub:
 10467                           	opt callstack 22
 10468  00521C  0E00               	movlw	0
 10469  00521E  1A48               	xorwf	___flsub@a^0,f,c
 10470  005220  0E00               	movlw	0
 10471  005222  1A49               	xorwf	(___flsub@a+1)^0,f,c
 10472  005224  0E00               	movlw	0
 10473  005226  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 10474  005228  0E80               	movlw	128
 10475  00522A  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 10476  00522C  C044  F034         	movff	___flsub@b,___fladd@b
 10477  005230  C045  F035         	movff	___flsub@b+1,___fladd@b+1
 10478  005234  C046  F036         	movff	___flsub@b+2,___fladd@b+2
 10479  005238  C047  F037         	movff	___flsub@b+3,___fladd@b+3
 10480  00523C  C048  F038         	movff	___flsub@a,___fladd@a
 10481  005240  C049  F039         	movff	___flsub@a+1,___fladd@a+1
 10482  005244  C04A  F03A         	movff	___flsub@a+2,___fladd@a+2
 10483  005248  C04B  F03B         	movff	___flsub@a+3,___fladd@a+3
 10484  00524C  ECC0  F008         	call	___fladd	;wreg free
 10485  005250  C034  F044         	movff	?___fladd,?___flsub
 10486  005254  C035  F045         	movff	?___fladd+1,?___flsub+1
 10487  005258  C036  F046         	movff	?___fladd+2,?___flsub+2
 10488  00525C  C037  F047         	movff	?___fladd+3,?___flsub+3
 10489  005260  0012               	return		;funcret
 10490  005262                     __end_of___flsub:
 10491                           	opt callstack 0
 10492                           
 10493 ;; *************** function ___flneg *****************
 10494 ;; Defined at:
 10495 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 10496 ;; Parameters:    Size  Location     Type
 10497 ;;  f1              4    5[COMRAM] float 
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;		None
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  4    5[COMRAM] float 
 10502 ;; Registers used:
 10503 ;;		wreg, status,2, status,0
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10509 ;;      Params:         4       0       0       0       0       0       0       0       0
 10510 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10512 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10513 ;;Total ram usage:        4 bytes
 10514 ;; Hardware stack levels used:    1
 10515 ;; Hardware stack levels required when called:    2
 10516 ;; This function calls:
 10517 ;;		Nothing
 10518 ;; This function is called by:
 10519 ;;		_efgtoa
 10520 ;;		_roundf
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524                           	psect	text41
 10525  005422                     __ptext41:
 10526                           	opt callstack 0
 10527  005422                     ___flneg:
 10528                           	opt callstack 23
 10529  005422  5006               	movf	___flneg@f1^0,w,c
 10530  005424  1007               	iorwf	(___flneg@f1+1)^0,w,c
 10531  005426  1008               	iorwf	(___flneg@f1+2)^0,w,c
 10532  005428  1009               	iorwf	(___flneg@f1+3)^0,w,c
 10533  00542A  B4D8               	btfsc	status,2,c
 10534  00542C  EF1A  F02A         	goto	u9771
 10535  005430  EF1C  F02A         	goto	u9770
 10536  005434                     u9771:
 10537  005434  EF24  F02A         	goto	l8953
 10538  005438                     u9770:
 10539  005438  0E00               	movlw	0
 10540  00543A  1A06               	xorwf	___flneg@f1^0,f,c
 10541  00543C  0E00               	movlw	0
 10542  00543E  1A07               	xorwf	(___flneg@f1+1)^0,f,c
 10543  005440  0E00               	movlw	0
 10544  005442  1A08               	xorwf	(___flneg@f1+2)^0,f,c
 10545  005444  0E80               	movlw	128
 10546  005446  1A09               	xorwf	(___flneg@f1+3)^0,f,c
 10547  005448                     l8953:
 10548  005448  C006  F006         	movff	___flneg@f1,?___flneg
 10549  00544C  C007  F007         	movff	___flneg@f1+1,?___flneg+1
 10550  005450  C008  F008         	movff	___flneg@f1+2,?___flneg+2
 10551  005454  C009  F009         	movff	___flneg@f1+3,?___flneg+3
 10552  005458  0012               	return		;funcret
 10553  00545A                     __end_of___flneg:
 10554                           	opt callstack 0
 10555                           
 10556 ;; *************** function _moverCarrito *****************
 10557 ;; Defined at:
 10558 ;;		line 562 in file "main.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  espejearCarr    1    wreg     unsigned char 
 10561 ;;  carroEspejea    2   40[BANK0 ] PTR unsigned char 
 10562 ;;		 -> comportamientoBasico@carroEspejeado(1), 
 10563 ;; Auto vars:     Size  Location     Type
 10564 ;;  espejearCarr    1   83[COMRAM] unsigned char 
 10565 ;; Return value:  Size  Location     Type
 10566 ;;                  1    wreg      void 
 10567 ;; Registers used:
 10568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10569 ;; Tracked objects:
 10570 ;;		On entry : 0/0
 10571 ;;		On exit  : 0/0
 10572 ;;		Unchanged: 0/0
 10573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10574 ;;      Params:         0       2       0       0       0       0       0       0       0
 10575 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10576 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10577 ;;      Totals:         1       4       0       0       0       0       0       0       0
 10578 ;;Total ram usage:        5 bytes
 10579 ;; Hardware stack levels used:    1
 10580 ;; Hardware stack levels required when called:    8
 10581 ;; This function calls:
 10582 ;;		_forzarAvanceRecto
 10583 ;;		_forzarEspejeo
 10584 ;; This function is called by:
 10585 ;;		_comportamientoBasico
 10586 ;; This function uses a non-reentrant model
 10587 ;;
 10588                           
 10589                           	psect	text42
 10590  0043E6                     __ptext42:
 10591                           	opt callstack 0
 10592  0043E6                     _moverCarrito:
 10593                           	opt callstack 21
 10594                           
 10595                           ;incstack = 0
 10596                           ;moverCarrito@espejearCarroY stored from wreg
 10597  0043E6  6E54               	movwf	moverCarrito@espejearCarroY^0,c
 10598  0043E8                     
 10599                           ;main.c: 564:     switch (mouse.curr_state) {
 10600  0043E8  EF38  F022         	goto	l9829
 10601  0043EC                     l441:
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;main.c: 568:             LATB4 = 1;
 10605  0043EC  888A               	bsf	3978,4,c	;volatile
 10606                           
 10607                           ;main.c: 569:             LATB5 = 0;
 10608  0043EE  9A8A               	bcf	3978,5,c	;volatile
 10609                           
 10610                           ;main.c: 570:             LATB6 = 1;
 10611  0043F0  8C8A               	bsf	3978,6,c	;volatile
 10612                           
 10613                           ;main.c: 573:             if (!0)
 10614  0043F2  9E8A               	bcf	3978,7,c	;volatile
 10615  0043F4                     
 10616                           ; BSR set to: 0
 10617                           ;main.c: 574:                 _delay((unsigned long)((55)*(4000000/4000.0)));
 10618  0043F4  0E48               	movlw	72
 10619  0043F6  0100               	movlb	0	; () banked
 10620  0043F8  6F8A               	movwf	??_moverCarrito& (0+255),b
 10621  0043FA  0E6C               	movlw	108
 10622  0043FC                     u11967:
 10623  0043FC  2EE8               	decfsz	wreg,f,c
 10624  0043FE  D7FE               	bra	u11967
 10625  004400  2F8A               	decfsz	??_moverCarrito& (0+255),f,b
 10626  004402  D7FC               	bra	u11967
 10627  004404  F000               	nop	
 10628  004406  EF56  F022         	goto	l449
 10629  00440A                     l9813:
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;main.c: 580:             if (espejearCarroY) {
 10633  00440A  5054               	movf	moverCarrito@espejearCarroY^0,w,c
 10634  00440C  B4D8               	btfsc	status,2,c
 10635  00440E  EF0B  F022         	goto	u11131
 10636  004412  EF0D  F022         	goto	u11130
 10637  004416                     u11131:
 10638  004416  EF17  F022         	goto	l445
 10639  00441A                     u11130:
 10640  00441A                     
 10641                           ; BSR set to: 0
 10642                           ;main.c: 581:                 forzarEspejeo();
 10643  00441A  ECB9  F029         	call	_forzarEspejeo	;wreg free
 10644  00441E                     
 10645                           ;main.c: 582:                 *carroEspejeado = 1;
 10646  00441E  C088  FFD9         	movff	moverCarrito@carroEspejeado,fsr2l
 10647  004422  C089  FFDA         	movff	moverCarrito@carroEspejeado+1,fsr2h
 10648  004426  0E01               	movlw	1
 10649  004428  6EDF               	movwf	indf2,c
 10650                           
 10651                           ;main.c: 583:             } else {
 10652  00442A  EF56  F022         	goto	l449
 10653  00442E                     l445:
 10654                           
 10655                           ; BSR set to: 0
 10656                           ;main.c: 584:                 LATB4 = 0;
 10657  00442E  988A               	bcf	3978,4,c	;volatile
 10658                           
 10659                           ;main.c: 585:                 LATB5 = 0;
 10660  004430  9A8A               	bcf	3978,5,c	;volatile
 10661                           
 10662                           ;main.c: 586:                 LATB6 = 1;
 10663  004432  8C8A               	bsf	3978,6,c	;volatile
 10664                           
 10665                           ;main.c: 587:                 LATB7 = 0;
 10666  004434  9E8A               	bcf	3978,7,c	;volatile
 10667  004436                     l9819:
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;main.c: 588:                 _delay((unsigned long)((410)*(4000000/4000.0)));
 10671  004436  0E03               	movlw	3
 10672  004438  0100               	movlb	0	; () banked
 10673  00443A  6F8B               	movwf	(??_moverCarrito+1)& (0+255),b
 10674  00443C  0E15               	movlw	21
 10675  00443E  6F8A               	movwf	??_moverCarrito& (0+255),b
 10676  004440  0E73               	movlw	115
 10677  004442                     u11977:
 10678  004442  2EE8               	decfsz	wreg,f,c
 10679  004444  D7FE               	bra	u11977
 10680  004446  2F8A               	decfsz	??_moverCarrito& (0+255),f,b
 10681  004448  D7FC               	bra	u11977
 10682  00444A  2F8B               	decfsz	(??_moverCarrito+1)& (0+255),f,b
 10683  00444C  D7FA               	bra	u11977
 10684  00444E  D000               	nop2	
 10685  004450                     
 10686                           ;main.c: 589:                 forzarAvanceRecto();
 10687  004450  EC98  F02A         	call	_forzarAvanceRecto	;wreg free
 10688  004454  EF56  F022         	goto	l449
 10689  004458                     l447:
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;main.c: 597:             LATB4 = 1;
 10693  004458  888A               	bsf	3978,4,c	;volatile
 10694                           
 10695                           ;main.c: 598:             LATB5 = 0;
 10696  00445A  9A8A               	bcf	3978,5,c	;volatile
 10697                           
 10698                           ;main.c: 599:             LATB6 = 0;
 10699  00445C  9C8A               	bcf	3978,6,c	;volatile
 10700                           
 10701                           ;main.c: 600:             LATB7 = 0;
 10702  00445E  9E8A               	bcf	3978,7,c	;volatile
 10703  004460  EF1B  F022         	goto	l9819
 10704  004464                     l448:
 10705                           
 10706                           ; BSR set to: 0
 10707                           ;main.c: 609:             LATB4 = 0;
 10708  004464  988A               	bcf	3978,4,c	;volatile
 10709                           
 10710                           ;main.c: 610:             LATB5 = 0;
 10711  004466  9A8A               	bcf	3978,5,c	;volatile
 10712                           
 10713                           ;main.c: 611:             LATB6 = 0;
 10714  004468  9C8A               	bcf	3978,6,c	;volatile
 10715                           
 10716                           ;main.c: 612:             LATB7 = 0;
 10717  00446A  9E8A               	bcf	3978,7,c	;volatile
 10718                           
 10719                           ;main.c: 614:             break;
 10720  00446C  EF56  F022         	goto	l449
 10721  004470                     l9829:
 10722  004470  0100               	movlb	0	; () banked
 10723  004472  51FC               	movf	_mouse& (0+255),w,b
 10724  004474  6F8A               	movwf	??_moverCarrito& (0+255),b
 10725  004476  6B8B               	clrf	(??_moverCarrito+1)& (0+255),b
 10726                           
 10727                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10728                           ; Switch size 1, requested type "simple"
 10729                           ; Number of cases is 1, Range of values is 0 to 0
 10730                           ; switch strategies available:
 10731                           ; Name         Instructions Cycles
 10732                           ; simple_byte            4     3 (average)
 10733                           ;	Chosen strategy is simple_byte
 10734  004478  518B               	movf	(??_moverCarrito+1)& (0+255),w,b
 10735  00447A  0A00               	xorlw	0	; case 0
 10736  00447C  B4D8               	btfsc	status,2,c
 10737  00447E  EF43  F022         	goto	l11131
 10738  004482  EF56  F022         	goto	l449
 10739  004486                     l11131:
 10740                           
 10741                           ; BSR set to: 0
 10742                           ; Switch size 1, requested type "simple"
 10743                           ; Number of cases is 4, Range of values is 1 to 4
 10744                           ; switch strategies available:
 10745                           ; Name         Instructions Cycles
 10746                           ; simple_byte           13     7 (average)
 10747                           ;	Chosen strategy is simple_byte
 10748  004486  518A               	movf	??_moverCarrito& (0+255),w,b
 10749  004488  0A01               	xorlw	1	; case 1
 10750  00448A  B4D8               	btfsc	status,2,c
 10751  00448C  EFF6  F021         	goto	l441
 10752  004490  0A03               	xorlw	3	; case 2
 10753  004492  B4D8               	btfsc	status,2,c
 10754  004494  EF05  F022         	goto	l9813
 10755  004498  0A01               	xorlw	1	; case 3
 10756  00449A  B4D8               	btfsc	status,2,c
 10757  00449C  EF2C  F022         	goto	l447
 10758  0044A0  0A07               	xorlw	7	; case 4
 10759  0044A2  B4D8               	btfsc	status,2,c
 10760  0044A4  EF32  F022         	goto	l448
 10761  0044A8  EF56  F022         	goto	l449
 10762  0044AC                     l449:
 10763  0044AC  0012               	return		;funcret
 10764  0044AE                     __end_of_moverCarrito:
 10765                           	opt callstack 0
 10766                           
 10767 ;; *************** function _forzarAvanceRecto *****************
 10768 ;; Defined at:
 10769 ;;		line 506 in file "main.c"
 10770 ;; Parameters:    Size  Location     Type
 10771 ;;		None
 10772 ;; Auto vars:     Size  Location     Type
 10773 ;;		None
 10774 ;; Return value:  Size  Location     Type
 10775 ;;                  1    wreg      void 
 10776 ;; Registers used:
 10777 ;;		wreg
 10778 ;; Tracked objects:
 10779 ;;		On entry : 0/0
 10780 ;;		On exit  : 0/0
 10781 ;;		Unchanged: 0/0
 10782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10783 ;;      Params:         0       0       0       0       0       0       0       0       0
 10784 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10785 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10786 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10787 ;;Total ram usage:        2 bytes
 10788 ;; Hardware stack levels used:    1
 10789 ;; Hardware stack levels required when called:    2
 10790 ;; This function calls:
 10791 ;;		Nothing
 10792 ;; This function is called by:
 10793 ;;		_moverCarrito
 10794 ;;		_mover
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           	psect	text43
 10799  005530                     __ptext43:
 10800                           	opt callstack 0
 10801  005530                     _forzarAvanceRecto:
 10802                           	opt callstack 25
 10803  005530                     
 10804                           ;main.c: 507:     LATB4 = 1;
 10805  005530  888A               	bsf	3978,4,c	;volatile
 10806                           
 10807                           ;main.c: 508:     LATB5 = 0;
 10808  005532  9A8A               	bcf	3978,5,c	;volatile
 10809                           
 10810                           ;main.c: 509:     LATB6 = 1;
 10811  005534  8C8A               	bsf	3978,6,c	;volatile
 10812                           
 10813                           ;main.c: 510:     LATB7 = 0;
 10814  005536  9E8A               	bcf	3978,7,c	;volatile
 10815  005538                     
 10816                           ;main.c: 512:     _delay((unsigned long)((550)*(4000000/4000.0)));
 10817  005538  0E03               	movlw	3
 10818  00553A  6E07               	movwf	(??_forzarAvanceRecto+1)^0,c
 10819  00553C  0ECB               	movlw	203
 10820  00553E  6E06               	movwf	??_forzarAvanceRecto^0,c
 10821  005540  0E45               	movlw	69
 10822  005542                     u11987:
 10823  005542  2EE8               	decfsz	wreg,f,c
 10824  005544  D7FE               	bra	u11987
 10825  005546  2E06               	decfsz	??_forzarAvanceRecto^0,f,c
 10826  005548  D7FC               	bra	u11987
 10827  00554A  2E07               	decfsz	(??_forzarAvanceRecto+1)^0,f,c
 10828  00554C  D7FA               	bra	u11987
 10829  00554E  F000               	nop	
 10830  005550  0012               	return		;funcret
 10831  005552                     __end_of_forzarAvanceRecto:
 10832                           	opt callstack 0
 10833                           
 10834 ;; *************** function _leerSensores *****************
 10835 ;; Defined at:
 10836 ;;		line 1176 in file "main.c"
 10837 ;; Parameters:    Size  Location     Type
 10838 ;;		None
 10839 ;; Auto vars:     Size  Location     Type
 10840 ;;		None
 10841 ;; Return value:  Size  Location     Type
 10842 ;;                  1    wreg      void 
 10843 ;; Registers used:
 10844 ;;		wreg, status,2, status,0, cstack
 10845 ;; Tracked objects:
 10846 ;;		On entry : 0/0
 10847 ;;		On exit  : 0/0
 10848 ;;		Unchanged: 0/0
 10849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10850 ;;      Params:         0       0       0       0       0       0       0       0       0
 10851 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10852 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10853 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10854 ;;Total ram usage:        0 bytes
 10855 ;; Hardware stack levels used:    1
 10856 ;; Hardware stack levels required when called:    4
 10857 ;; This function calls:
 10858 ;;		___fladd
 10859 ;;		___fldiv
 10860 ;;		_dameDistancia
 10861 ;; This function is called by:
 10862 ;;		_comportamientoBasico
 10863 ;;		_probarSensores
 10864 ;;		_probarPID
 10865 ;;		_probarCruceT
 10866 ;; This function uses a non-reentrant model
 10867 ;;
 10868                           
 10869                           	psect	text44
 10870  0039EE                     __ptext44:
 10871                           	opt callstack 0
 10872  0039EE                     _leerSensores:
 10873                           	opt callstack 25
 10874  0039EE                     
 10875                           ;main.c: 1178:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
 10876  0039EE  C120  F038         	movff	_oldSensorDerecha,___fladd@a
 10877  0039F2  C121  F039         	movff	_oldSensorDerecha+1,___fladd@a+1
 10878  0039F6  C122  F03A         	movff	_oldSensorDerecha+2,___fladd@a+2
 10879  0039FA  C123  F03B         	movff	_oldSensorDerecha+3,___fladd@a+3
 10880  0039FE  0E03               	movlw	3
 10881  003A00  EC67  F01E         	call	_dameDistancia
 10882  003A04  C01B  F034         	movff	?_dameDistancia,___fladd@b
 10883  003A08  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
 10884  003A0C  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
 10885  003A10  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
 10886  003A14  ECC0  F008         	call	___fladd	;wreg free
 10887  003A18  C034  F044         	movff	?___fladd,___fldiv@b
 10888  003A1C  C035  F045         	movff	?___fladd+1,___fldiv@b+1
 10889  003A20  C036  F046         	movff	?___fladd+2,___fldiv@b+2
 10890  003A24  C037  F047         	movff	?___fladd+3,___fldiv@b+3
 10891  003A28  0E00               	movlw	0
 10892  003A2A  6E48               	movwf	___fldiv@a^0,c
 10893  003A2C  0E00               	movlw	0
 10894  003A2E  6E49               	movwf	(___fldiv@a+1)^0,c
 10895  003A30  0E00               	movlw	0
 10896  003A32  6E4A               	movwf	(___fldiv@a+2)^0,c
 10897  003A34  0E40               	movlw	64
 10898  003A36  6E4B               	movwf	(___fldiv@a+3)^0,c
 10899  003A38  EC79  F013         	call	___fldiv	;wreg free
 10900  003A3C  C044  F055         	movff	?___fldiv,_sensorDerecha
 10901  003A40  C045  F056         	movff	?___fldiv+1,_sensorDerecha+1
 10902  003A44  C046  F057         	movff	?___fldiv+2,_sensorDerecha+2
 10903  003A48  C047  F058         	movff	?___fldiv+3,_sensorDerecha+3
 10904                           
 10905                           ;main.c: 1179:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
 10906  003A4C  C11C  F038         	movff	_oldSensorIzquierda,___fladd@a
 10907  003A50  C11D  F039         	movff	_oldSensorIzquierda+1,___fladd@a+1
 10908  003A54  C11E  F03A         	movff	_oldSensorIzquierda+2,___fladd@a+2
 10909  003A58  C11F  F03B         	movff	_oldSensorIzquierda+3,___fladd@a+3
 10910  003A5C  0E02               	movlw	2
 10911  003A5E  EC67  F01E         	call	_dameDistancia
 10912  003A62  C01B  F034         	movff	?_dameDistancia,___fladd@b
 10913  003A66  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
 10914  003A6A  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
 10915  003A6E  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
 10916  003A72  ECC0  F008         	call	___fladd	;wreg free
 10917  003A76  C034  F044         	movff	?___fladd,___fldiv@b
 10918  003A7A  C035  F045         	movff	?___fladd+1,___fldiv@b+1
 10919  003A7E  C036  F046         	movff	?___fladd+2,___fldiv@b+2
 10920  003A82  C037  F047         	movff	?___fladd+3,___fldiv@b+3
 10921  003A86  0E00               	movlw	0
 10922  003A88  6E48               	movwf	___fldiv@a^0,c
 10923  003A8A  0E00               	movlw	0
 10924  003A8C  6E49               	movwf	(___fldiv@a+1)^0,c
 10925  003A8E  0E00               	movlw	0
 10926  003A90  6E4A               	movwf	(___fldiv@a+2)^0,c
 10927  003A92  0E40               	movlw	64
 10928  003A94  6E4B               	movwf	(___fldiv@a+3)^0,c
 10929  003A96  EC79  F013         	call	___fldiv	;wreg free
 10930  003A9A  C044  F128         	movff	?___fldiv,_sensorIzquierda
 10931  003A9E  C045  F129         	movff	?___fldiv+1,_sensorIzquierda+1
 10932  003AA2  C046  F12A         	movff	?___fldiv+2,_sensorIzquierda+2
 10933  003AA6  C047  F12B         	movff	?___fldiv+3,_sensorIzquierda+3
 10934                           
 10935                           ;main.c: 1180:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
 10936  003AAA  C118  F038         	movff	_oldSensorEnfrente,___fladd@a
 10937  003AAE  C119  F039         	movff	_oldSensorEnfrente+1,___fladd@a+1
 10938  003AB2  C11A  F03A         	movff	_oldSensorEnfrente+2,___fladd@a+2
 10939  003AB6  C11B  F03B         	movff	_oldSensorEnfrente+3,___fladd@a+3
 10940  003ABA  0E01               	movlw	1
 10941  003ABC  EC67  F01E         	call	_dameDistancia
 10942  003AC0  C01B  F034         	movff	?_dameDistancia,___fladd@b
 10943  003AC4  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
 10944  003AC8  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
 10945  003ACC  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
 10946  003AD0  ECC0  F008         	call	___fladd	;wreg free
 10947  003AD4  C034  F044         	movff	?___fladd,___fldiv@b
 10948  003AD8  C035  F045         	movff	?___fladd+1,___fldiv@b+1
 10949  003ADC  C036  F046         	movff	?___fladd+2,___fldiv@b+2
 10950  003AE0  C037  F047         	movff	?___fladd+3,___fldiv@b+3
 10951  003AE4  0E00               	movlw	0
 10952  003AE6  6E48               	movwf	___fldiv@a^0,c
 10953  003AE8  0E00               	movlw	0
 10954  003AEA  6E49               	movwf	(___fldiv@a+1)^0,c
 10955  003AEC  0E00               	movlw	0
 10956  003AEE  6E4A               	movwf	(___fldiv@a+2)^0,c
 10957  003AF0  0E40               	movlw	64
 10958  003AF2  6E4B               	movwf	(___fldiv@a+3)^0,c
 10959  003AF4  EC79  F013         	call	___fldiv	;wreg free
 10960  003AF8  C044  F124         	movff	?___fldiv,_sensorEnfrente
 10961  003AFC  C045  F125         	movff	?___fldiv+1,_sensorEnfrente+1
 10962  003B00  C046  F126         	movff	?___fldiv+2,_sensorEnfrente+2
 10963  003B04  C047  F127         	movff	?___fldiv+3,_sensorEnfrente+3
 10964  003B08                     
 10965                           ;main.c: 1182:     oldSensorDerecha = sensorDerecha;
 10966  003B08  C055  F120         	movff	_sensorDerecha,_oldSensorDerecha
 10967  003B0C  C056  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
 10968  003B10  C057  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
 10969  003B14  C058  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
 10970  003B18                     
 10971                           ;main.c: 1183:     oldSensorIzquierda = sensorIzquierda;
 10972  003B18  C128  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
 10973  003B1C  C129  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
 10974  003B20  C12A  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
 10975  003B24  C12B  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
 10976  003B28                     
 10977                           ;main.c: 1184:     oldSensorEnfrente = sensorEnfrente;
 10978  003B28  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
 10979  003B2C  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
 10980  003B30  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
 10981  003B34  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
 10982  003B38                     
 10983                           ;main.c: 1189:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
 10984  003B38  C055  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
 10985  003B3C  C056  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
 10986  003B40  C057  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
 10987  003B44  C058  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
 10988  003B48                     
 10989                           ;main.c: 1198:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
 10990  003B48  C128  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
 10991  003B4C  C129  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
 10992  003B50  C12A  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
 10993  003B54  C12B  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
 10994  003B58                     
 10995                           ;main.c: 1201:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
 10996  003B58  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
 10997  003B5C  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
 10998  003B60  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
 10999  003B64  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
 11000  003B68  0012               	return		;funcret
 11001  003B6A                     __end_of_leerSensores:
 11002                           	opt callstack 0
 11003                           
 11004 ;; *************** function _dameDistancia *****************
 11005 ;; Defined at:
 11006 ;;		line 26 in file "./ultrasonico.h"
 11007 ;; Parameters:    Size  Location     Type
 11008 ;;  numeroSensor    1    wreg     unsigned char 
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  numeroSensor    1   32[COMRAM] unsigned char 
 11011 ;;  distancia       4   33[COMRAM] float 
 11012 ;;  conteo          2   37[COMRAM] unsigned int 
 11013 ;; Return value:  Size  Location     Type
 11014 ;;                  4   26[COMRAM] float 
 11015 ;; Registers used:
 11016 ;;		wreg, status,2, status,0, cstack
 11017 ;; Tracked objects:
 11018 ;;		On entry : 0/0
 11019 ;;		On exit  : 0/0
 11020 ;;		Unchanged: 0/0
 11021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11022 ;;      Params:         4       0       0       0       0       0       0       0       0
 11023 ;;      Locals:         7       0       0       0       0       0       0       0       0
 11024 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11025 ;;      Totals:        13       0       0       0       0       0       0       0       0
 11026 ;;Total ram usage:       13 bytes
 11027 ;; Hardware stack levels used:    1
 11028 ;; Hardware stack levels required when called:    3
 11029 ;; This function calls:
 11030 ;;		___lwdiv
 11031 ;;		___xxtofl
 11032 ;; This function is called by:
 11033 ;;		_inicializarComportamientoBasico
 11034 ;;		_leerSensores
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text45
 11039  003CCE                     __ptext45:
 11040                           	opt callstack 0
 11041  003CCE                     _dameDistancia:
 11042                           	opt callstack 26
 11043                           
 11044                           ;incstack = 0
 11045                           ;dameDistancia@numeroSensor stored from wreg
 11046  003CCE  6E21               	movwf	dameDistancia@numeroSensor^0,c
 11047  003CD0                     
 11048                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
 11049  003CD0  0E00               	movlw	0
 11050  003CD2  6ECF               	movwf	207,c	;volatile
 11051                           
 11052                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
 11053  003CD4  0E00               	movlw	0
 11054  003CD6  6ECE               	movwf	206,c	;volatile
 11055                           
 11056                           ;./ultrasonico.h: 33:     conteo = 0;
 11057  003CD8  0E00               	movlw	0
 11058  003CDA  6E27               	movwf	(dameDistancia@conteo+1)^0,c
 11059  003CDC  0E00               	movlw	0
 11060  003CDE  6E26               	movwf	dameDistancia@conteo^0,c
 11061  003CE0                     
 11062                           ;./ultrasonico.h: 34:     LATD3 = 1;
 11063  003CE0  868C               	bsf	3980,3,c	;volatile
 11064  003CE2                     
 11065                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
 11066  003CE2  0E04               	movlw	4
 11067  003CE4                     u11997:
 11068  003CE4  2EE8               	decfsz	wreg,f,c
 11069  003CE6  D7FE               	bra	u11997
 11070  003CE8                     
 11071                           ;./ultrasonico.h: 36:     LATD3 = 0;
 11072  003CE8  968C               	bcf	3980,3,c	;volatile
 11073                           
 11074                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
 11075  003CEA  EFBF  F01E         	goto	l9645
 11076  003CEE                     l185:
 11077  003CEE  A281               	btfss	129,1,c	;volatile
 11078  003CF0  EF7C  F01E         	goto	u10901
 11079  003CF4  EF7E  F01E         	goto	u10900
 11080  003CF8                     u10901:
 11081  003CF8  EF77  F01E         	goto	l185
 11082  003CFC                     u10900:
 11083  003CFC                     
 11084                           ;./ultrasonico.h: 43:             TMR1ON = 1;
 11085  003CFC  80CD               	bsf	4045,0,c	;volatile
 11086  003CFE                     l188:
 11087  003CFE  A281               	btfss	129,1,c	;volatile
 11088  003D00  EF84  F01E         	goto	u10911
 11089  003D04  EF86  F01E         	goto	u10910
 11090  003D08                     u10911:
 11091  003D08  EFD8  F01E         	goto	l193
 11092  003D0C                     u10910:
 11093  003D0C  A09E               	btfss	3998,0,c	;volatile
 11094  003D0E  EF8B  F01E         	goto	u10921
 11095  003D12  EF8D  F01E         	goto	u10920
 11096  003D16                     u10921:
 11097  003D16  EF7F  F01E         	goto	l188
 11098  003D1A                     u10920:
 11099  003D1A  EFD8  F01E         	goto	l193
 11100  003D1E                     l195:
 11101  003D1E  A481               	btfss	129,2,c	;volatile
 11102  003D20  EF94  F01E         	goto	u10931
 11103  003D24  EF96  F01E         	goto	u10930
 11104  003D28                     u10931:
 11105  003D28  EF8F  F01E         	goto	l195
 11106  003D2C                     u10930:
 11107  003D2C                     
 11108                           ;./ultrasonico.h: 51:             TMR1ON = 1;
 11109  003D2C  80CD               	bsf	4045,0,c	;volatile
 11110  003D2E                     l198:
 11111  003D2E  A481               	btfss	129,2,c	;volatile
 11112  003D30  EF9C  F01E         	goto	u10941
 11113  003D34  EF9E  F01E         	goto	u10940
 11114  003D38                     u10941:
 11115  003D38  EFD8  F01E         	goto	l193
 11116  003D3C                     u10940:
 11117  003D3C  A09E               	btfss	3998,0,c	;volatile
 11118  003D3E  EFA3  F01E         	goto	u10951
 11119  003D42  EFA5  F01E         	goto	u10950
 11120  003D46                     u10951:
 11121  003D46  EF97  F01E         	goto	l198
 11122  003D4A                     u10950:
 11123  003D4A  EFD8  F01E         	goto	l193
 11124  003D4E                     l204:
 11125  003D4E  A681               	btfss	129,3,c	;volatile
 11126  003D50  EFAC  F01E         	goto	u10961
 11127  003D54  EFAE  F01E         	goto	u10960
 11128  003D58                     u10961:
 11129  003D58  EFA7  F01E         	goto	l204
 11130  003D5C                     u10960:
 11131  003D5C                     
 11132                           ;./ultrasonico.h: 59:             TMR1ON = 1;
 11133  003D5C  80CD               	bsf	4045,0,c	;volatile
 11134  003D5E                     l207:
 11135  003D5E  A681               	btfss	129,3,c	;volatile
 11136  003D60  EFB4  F01E         	goto	u10971
 11137  003D64  EFB6  F01E         	goto	u10970
 11138  003D68                     u10971:
 11139  003D68  EFD8  F01E         	goto	l193
 11140  003D6C                     u10970:
 11141  003D6C  A09E               	btfss	3998,0,c	;volatile
 11142  003D6E  EFBB  F01E         	goto	u10981
 11143  003D72  EFBD  F01E         	goto	u10980
 11144  003D76                     u10981:
 11145  003D76  EFAF  F01E         	goto	l207
 11146  003D7A                     u10980:
 11147  003D7A  EFD8  F01E         	goto	l193
 11148  003D7E                     l9645:
 11149  003D7E  5021               	movf	dameDistancia@numeroSensor^0,w,c
 11150  003D80  6E1F               	movwf	??_dameDistancia^0,c
 11151  003D82  6A20               	clrf	(??_dameDistancia+1)^0,c
 11152                           
 11153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11154                           ; Switch size 1, requested type "simple"
 11155                           ; Number of cases is 1, Range of values is 0 to 0
 11156                           ; switch strategies available:
 11157                           ; Name         Instructions Cycles
 11158                           ; simple_byte            4     3 (average)
 11159                           ;	Chosen strategy is simple_byte
 11160  003D84  5020               	movf	(??_dameDistancia+1)^0,w,c
 11161  003D86  0A00               	xorlw	0	; case 0
 11162  003D88  B4D8               	btfsc	status,2,c
 11163  003D8A  EFC9  F01E         	goto	l11133
 11164  003D8E  EFD8  F01E         	goto	l193
 11165  003D92                     l11133:
 11166                           
 11167                           ; Switch size 1, requested type "simple"
 11168                           ; Number of cases is 3, Range of values is 1 to 3
 11169                           ; switch strategies available:
 11170                           ; Name         Instructions Cycles
 11171                           ; simple_byte           10     6 (average)
 11172                           ;	Chosen strategy is simple_byte
 11173  003D92  501F               	movf	??_dameDistancia^0,w,c
 11174  003D94  0A01               	xorlw	1	; case 1
 11175  003D96  B4D8               	btfsc	status,2,c
 11176  003D98  EF77  F01E         	goto	l185
 11177  003D9C  0A03               	xorlw	3	; case 2
 11178  003D9E  B4D8               	btfsc	status,2,c
 11179  003DA0  EF8F  F01E         	goto	l195
 11180  003DA4  0A01               	xorlw	1	; case 3
 11181  003DA6  B4D8               	btfsc	status,2,c
 11182  003DA8  EFA7  F01E         	goto	l204
 11183  003DAC  EFD8  F01E         	goto	l193
 11184  003DB0                     l193:
 11185                           
 11186                           ;./ultrasonico.h: 66:     TMR1ON = 0;
 11187  003DB0  90CD               	bcf	4045,0,c	;volatile
 11188                           
 11189                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
 11190  003DB2  B09E               	btfsc	3998,0,c	;volatile
 11191  003DB4  EFDE  F01E         	goto	u10991
 11192  003DB8  EFE0  F01E         	goto	u10990
 11193  003DBC                     u10991:
 11194  003DBC  EF06  F01F         	goto	l9651
 11195  003DC0                     u10990:
 11196  003DC0                     
 11197                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
 11198  003DC0  50CF               	movf	207,w,c	;volatile
 11199  003DC2  6E20               	movwf	(??_dameDistancia+1)^0,c
 11200  003DC4  6A1F               	clrf	??_dameDistancia^0,c
 11201  003DC6  501F               	movf	??_dameDistancia^0,w,c
 11202  003DC8  1226               	iorwf	dameDistancia@conteo^0,f,c
 11203  003DCA  5020               	movf	(??_dameDistancia+1)^0,w,c
 11204  003DCC  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
 11205                           
 11206                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
 11207  003DCE  50CE               	movf	206,w,c	;volatile
 11208  003DD0  1226               	iorwf	dameDistancia@conteo^0,f,c
 11209  003DD2                     
 11210                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
 11211  003DD2  0E00               	movlw	0
 11212  003DD4  6E09               	movwf	(___lwdiv@divisor+1)^0,c
 11213  003DD6  0E3A               	movlw	58
 11214  003DD8  6E08               	movwf	___lwdiv@divisor^0,c
 11215  003DDA  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
 11216  003DDE  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
 11217  003DE2  ECF1  F025         	call	___lwdiv	;wreg free
 11218  003DE6  C006  F00D         	movff	?___lwdiv,___xxtofl@val
 11219  003DEA  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
 11220  003DEE  6A0F               	clrf	(___xxtofl@val+2)^0,c
 11221  003DF0  6A10               	clrf	(___xxtofl@val+3)^0,c
 11222  003DF2  0E00               	movlw	0
 11223  003DF4  ECCA  F019         	call	___xxtofl
 11224  003DF8  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
 11225  003DFC  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
 11226  003E00  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
 11227  003E04  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
 11228                           
 11229                           ;./ultrasonico.h: 73:     } else {
 11230  003E08  EF0F  F01F         	goto	l9655
 11231  003E0C                     l9651:
 11232  003E0C                     
 11233                           ;./ultrasonico.h: 75:         TMR1IF = 0;
 11234  003E0C  909E               	bcf	3998,0,c	;volatile
 11235                           
 11236                           ;./ultrasonico.h: 76:         distancia = 0;
 11237  003E0E  0E00               	movlw	0
 11238  003E10  6E22               	movwf	dameDistancia@distancia^0,c
 11239  003E12  0E00               	movlw	0
 11240  003E14  6E23               	movwf	(dameDistancia@distancia+1)^0,c
 11241  003E16  0E00               	movlw	0
 11242  003E18  6E24               	movwf	(dameDistancia@distancia+2)^0,c
 11243  003E1A  0E00               	movlw	0
 11244  003E1C  6E25               	movwf	(dameDistancia@distancia+3)^0,c
 11245  003E1E                     l9655:
 11246                           
 11247                           ;./ultrasonico.h: 80:     return distancia;
 11248  003E1E  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
 11249  003E22  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
 11250  003E26  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
 11251  003E2A  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
 11252  003E2E  0012               	return		;funcret
 11253  003E30                     __end_of_dameDistancia:
 11254                           	opt callstack 0
 11255                           
 11256 ;; *************** function ___lwdiv *****************
 11257 ;; Defined at:
 11258 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 11259 ;; Parameters:    Size  Location     Type
 11260 ;;  dividend        2    5[COMRAM] unsigned int 
 11261 ;;  divisor         2    7[COMRAM] unsigned int 
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;  quotient        2   10[COMRAM] unsigned int 
 11264 ;;  counter         1    9[COMRAM] unsigned char 
 11265 ;; Return value:  Size  Location     Type
 11266 ;;                  2    5[COMRAM] unsigned int 
 11267 ;; Registers used:
 11268 ;;		wreg, status,2, status,0
 11269 ;; Tracked objects:
 11270 ;;		On entry : 0/0
 11271 ;;		On exit  : 0/0
 11272 ;;		Unchanged: 0/0
 11273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11274 ;;      Params:         4       0       0       0       0       0       0       0       0
 11275 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11276 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11277 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11278 ;;Total ram usage:        7 bytes
 11279 ;; Hardware stack levels used:    1
 11280 ;; Hardware stack levels required when called:    2
 11281 ;; This function calls:
 11282 ;;		Nothing
 11283 ;; This function is called by:
 11284 ;;		_dameDistancia
 11285 ;; This function uses a non-reentrant model
 11286 ;;
 11287                           
 11288                           	psect	text46
 11289  004BE2                     __ptext46:
 11290                           	opt callstack 0
 11291  004BE2                     ___lwdiv:
 11292                           	opt callstack 26
 11293  004BE2  0E00               	movlw	0
 11294  004BE4  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11295  004BE6  0E00               	movlw	0
 11296  004BE8  6E0B               	movwf	___lwdiv@quotient^0,c
 11297  004BEA  5008               	movf	___lwdiv@divisor^0,w,c
 11298  004BEC  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11299  004BEE  B4D8               	btfsc	status,2,c
 11300  004BF0  EFFC  F025         	goto	u10871
 11301  004BF4  EFFE  F025         	goto	u10870
 11302  004BF8                     u10871:
 11303  004BF8  EF26  F026         	goto	l1440
 11304  004BFC                     u10870:
 11305  004BFC  0E01               	movlw	1
 11306  004BFE  6E0A               	movwf	___lwdiv@counter^0,c
 11307  004C00  EF06  F026         	goto	l9615
 11308  004C04                     l9613:
 11309  004C04  90D8               	bcf	status,0,c
 11310  004C06  3608               	rlcf	___lwdiv@divisor^0,f,c
 11311  004C08  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11312  004C0A  2A0A               	incf	___lwdiv@counter^0,f,c
 11313  004C0C                     l9615:
 11314  004C0C  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
 11315  004C0E  EF0B  F026         	goto	u10881
 11316  004C12  EF0D  F026         	goto	u10880
 11317  004C16                     u10881:
 11318  004C16  EF02  F026         	goto	l9613
 11319  004C1A                     u10880:
 11320  004C1A                     l9617:
 11321  004C1A  90D8               	bcf	status,0,c
 11322  004C1C  360B               	rlcf	___lwdiv@quotient^0,f,c
 11323  004C1E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11324  004C20  5008               	movf	___lwdiv@divisor^0,w,c
 11325  004C22  5C06               	subwf	___lwdiv@dividend^0,w,c
 11326  004C24  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 11327  004C26  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11328  004C28  A0D8               	btfss	status,0,c
 11329  004C2A  EF19  F026         	goto	u10891
 11330  004C2E  EF1B  F026         	goto	u10890
 11331  004C32                     u10891:
 11332  004C32  EF20  F026         	goto	l9625
 11333  004C36                     u10890:
 11334  004C36  5008               	movf	___lwdiv@divisor^0,w,c
 11335  004C38  5E06               	subwf	___lwdiv@dividend^0,f,c
 11336  004C3A  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 11337  004C3C  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11338  004C3E  800B               	bsf	___lwdiv@quotient^0,0,c
 11339  004C40                     l9625:
 11340  004C40  90D8               	bcf	status,0,c
 11341  004C42  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11342  004C44  3208               	rrcf	___lwdiv@divisor^0,f,c
 11343  004C46  2E0A               	decfsz	___lwdiv@counter^0,f,c
 11344  004C48  EF0D  F026         	goto	l9617
 11345  004C4C                     l1440:
 11346  004C4C  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
 11347  004C50  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11348  004C54  0012               	return		;funcret
 11349  004C56                     __end_of___lwdiv:
 11350                           	opt callstack 0
 11351                           
 11352 ;; *************** function ___fladd *****************
 11353 ;; Defined at:
 11354 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11355 ;; Parameters:    Size  Location     Type
 11356 ;;  b               4   51[COMRAM] unsigned int 
 11357 ;;  a               4   55[COMRAM] unsigned int 
 11358 ;; Auto vars:     Size  Location     Type
 11359 ;;  grs             1   66[COMRAM] unsigned char 
 11360 ;;  bexp            1   65[COMRAM] unsigned char 
 11361 ;;  aexp            1   64[COMRAM] unsigned char 
 11362 ;;  signs           1   63[COMRAM] unsigned char 
 11363 ;; Return value:  Size  Location     Type
 11364 ;;                  4   51[COMRAM] unsigned char 
 11365 ;; Registers used:
 11366 ;;		wreg, status,2, status,0
 11367 ;; Tracked objects:
 11368 ;;		On entry : 0/0
 11369 ;;		On exit  : 0/0
 11370 ;;		Unchanged: 0/0
 11371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11372 ;;      Params:         8       0       0       0       0       0       0       0       0
 11373 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11374 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11375 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11376 ;;Total ram usage:       16 bytes
 11377 ;; Hardware stack levels used:    1
 11378 ;; Hardware stack levels required when called:    2
 11379 ;; This function calls:
 11380 ;;		Nothing
 11381 ;; This function is called by:
 11382 ;;		_leerSensores
 11383 ;;		_PID
 11384 ;;		_efgtoa
 11385 ;;		___flsub
 11386 ;;		_roundf
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390                           	psect	text47
 11391  001180                     __ptext47:
 11392                           	opt callstack 0
 11393  001180                     ___fladd:
 11394                           	opt callstack 22
 11395  001180  5037               	movf	(___fladd@b+3)^0,w,c
 11396  001182  0B80               	andlw	128
 11397  001184  6E40               	movwf	___fladd@signs^0,c
 11398  001186  5037               	movf	(___fladd@b+3)^0,w,c
 11399  001188  2437               	addwf	(___fladd@b+3)^0,w,c
 11400  00118A  6E42               	movwf	___fladd@bexp^0,c
 11401  00118C  AE36               	btfss	(___fladd@b+2)^0,7,c
 11402  00118E  EFCB  F008         	goto	u8141
 11403  001192  EFCD  F008         	goto	u8140
 11404  001196                     u8141:
 11405  001196  EFCE  F008         	goto	l8073
 11406  00119A                     u8140:
 11407  00119A  8042               	bsf	___fladd@bexp^0,0,c
 11408  00119C                     l8073:
 11409  00119C  5042               	movf	___fladd@bexp^0,w,c
 11410  00119E  B4D8               	btfsc	status,2,c
 11411  0011A0  EFD4  F008         	goto	u8151
 11412  0011A4  EFD6  F008         	goto	u8150
 11413  0011A8                     u8151:
 11414  0011A8  EFEB  F008         	goto	l8083
 11415  0011AC                     u8150:
 11416  0011AC  2842               	incf	___fladd@bexp^0,w,c
 11417  0011AE  A4D8               	btfss	status,2,c
 11418  0011B0  EFDC  F008         	goto	u8161
 11419  0011B4  EFDE  F008         	goto	u8160
 11420  0011B8                     u8161:
 11421  0011B8  EFE6  F008         	goto	l8079
 11422  0011BC                     u8160:
 11423  0011BC  0E00               	movlw	0
 11424  0011BE  6E34               	movwf	___fladd@b^0,c
 11425  0011C0  0E00               	movlw	0
 11426  0011C2  6E35               	movwf	(___fladd@b+1)^0,c
 11427  0011C4  0E00               	movlw	0
 11428  0011C6  6E36               	movwf	(___fladd@b+2)^0,c
 11429  0011C8  0E00               	movlw	0
 11430  0011CA  6E37               	movwf	(___fladd@b+3)^0,c
 11431  0011CC                     l8079:
 11432  0011CC  8E36               	bsf	(___fladd@b+2)^0,7,c
 11433  0011CE  0E00               	movlw	0
 11434  0011D0  6E37               	movwf	(___fladd@b+3)^0,c
 11435  0011D2  EFF3  F008         	goto	l8085
 11436  0011D6                     l8083:
 11437  0011D6  0E00               	movlw	0
 11438  0011D8  6E34               	movwf	___fladd@b^0,c
 11439  0011DA  0E00               	movlw	0
 11440  0011DC  6E35               	movwf	(___fladd@b+1)^0,c
 11441  0011DE  0E00               	movlw	0
 11442  0011E0  6E36               	movwf	(___fladd@b+2)^0,c
 11443  0011E2  0E00               	movlw	0
 11444  0011E4  6E37               	movwf	(___fladd@b+3)^0,c
 11445  0011E6                     l8085:
 11446  0011E6  503B               	movf	(___fladd@a+3)^0,w,c
 11447  0011E8  0B80               	andlw	128
 11448  0011EA  6E41               	movwf	___fladd@aexp^0,c
 11449  0011EC  5040               	movf	___fladd@signs^0,w,c
 11450  0011EE  1841               	xorwf	___fladd@aexp^0,w,c
 11451  0011F0  B4D8               	btfsc	status,2,c
 11452  0011F2  EFFD  F008         	goto	u8171
 11453  0011F6  EFFF  F008         	goto	u8170
 11454  0011FA                     u8171:
 11455  0011FA  EF00  F009         	goto	l8091
 11456  0011FE                     u8170:
 11457  0011FE  8C40               	bsf	___fladd@signs^0,6,c
 11458  001200                     l8091:
 11459  001200  503B               	movf	(___fladd@a+3)^0,w,c
 11460  001202  243B               	addwf	(___fladd@a+3)^0,w,c
 11461  001204  6E41               	movwf	___fladd@aexp^0,c
 11462  001206  AE3A               	btfss	(___fladd@a+2)^0,7,c
 11463  001208  EF08  F009         	goto	u8181
 11464  00120C  EF0A  F009         	goto	u8180
 11465  001210                     u8181:
 11466  001210  EF0B  F009         	goto	l8097
 11467  001214                     u8180:
 11468  001214  8041               	bsf	___fladd@aexp^0,0,c
 11469  001216                     l8097:
 11470  001216  5041               	movf	___fladd@aexp^0,w,c
 11471  001218  B4D8               	btfsc	status,2,c
 11472  00121A  EF11  F009         	goto	u8191
 11473  00121E  EF13  F009         	goto	u8190
 11474  001222                     u8191:
 11475  001222  EF28  F009         	goto	l8107
 11476  001226                     u8190:
 11477  001226  2841               	incf	___fladd@aexp^0,w,c
 11478  001228  A4D8               	btfss	status,2,c
 11479  00122A  EF19  F009         	goto	u8201
 11480  00122E  EF1B  F009         	goto	u8200
 11481  001232                     u8201:
 11482  001232  EF23  F009         	goto	l8103
 11483  001236                     u8200:
 11484  001236  0E00               	movlw	0
 11485  001238  6E38               	movwf	___fladd@a^0,c
 11486  00123A  0E00               	movlw	0
 11487  00123C  6E39               	movwf	(___fladd@a+1)^0,c
 11488  00123E  0E00               	movlw	0
 11489  001240  6E3A               	movwf	(___fladd@a+2)^0,c
 11490  001242  0E00               	movlw	0
 11491  001244  6E3B               	movwf	(___fladd@a+3)^0,c
 11492  001246                     l8103:
 11493  001246  8E3A               	bsf	(___fladd@a+2)^0,7,c
 11494  001248  0E00               	movlw	0
 11495  00124A  6E3B               	movwf	(___fladd@a+3)^0,c
 11496  00124C  EF30  F009         	goto	l8109
 11497  001250                     l8107:
 11498  001250  0E00               	movlw	0
 11499  001252  6E38               	movwf	___fladd@a^0,c
 11500  001254  0E00               	movlw	0
 11501  001256  6E39               	movwf	(___fladd@a+1)^0,c
 11502  001258  0E00               	movlw	0
 11503  00125A  6E3A               	movwf	(___fladd@a+2)^0,c
 11504  00125C  0E00               	movlw	0
 11505  00125E  6E3B               	movwf	(___fladd@a+3)^0,c
 11506  001260                     l8109:
 11507  001260  5042               	movf	___fladd@bexp^0,w,c
 11508  001262  5C41               	subwf	___fladd@aexp^0,w,c
 11509  001264  B0D8               	btfsc	status,0,c
 11510  001266  EF37  F009         	goto	u8211
 11511  00126A  EF39  F009         	goto	u8210
 11512  00126E                     u8211:
 11513  00126E  EF60  F009         	goto	l8145
 11514  001272                     u8210:
 11515  001272  AC40               	btfss	___fladd@signs^0,6,c
 11516  001274  EF3E  F009         	goto	u8221
 11517  001278  EF40  F009         	goto	u8220
 11518  00127C                     u8221:
 11519  00127C  EF42  F009         	goto	l8115
 11520  001280                     u8220:
 11521  001280  0E80               	movlw	128
 11522  001282  1A40               	xorwf	___fladd@signs^0,f,c
 11523  001284                     l8115:
 11524  001284  C042  F043         	movff	___fladd@bexp,___fladd@grs
 11525  001288  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11526  00128C  C043  F041         	movff	___fladd@grs,___fladd@aexp
 11527  001290  C034  F043         	movff	___fladd@b,___fladd@grs
 11528  001294  C038  F034         	movff	___fladd@a,___fladd@b
 11529  001298  C043  F038         	movff	___fladd@grs,___fladd@a
 11530  00129C  C035  F043         	movff	___fladd@b+1,___fladd@grs
 11531  0012A0  C039  F035         	movff	___fladd@a+1,___fladd@b+1
 11532  0012A4  C043  F039         	movff	___fladd@grs,___fladd@a+1
 11533  0012A8  C036  F043         	movff	___fladd@b+2,___fladd@grs
 11534  0012AC  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
 11535  0012B0  C043  F03A         	movff	___fladd@grs,___fladd@a+2
 11536  0012B4  C037  F043         	movff	___fladd@b+3,___fladd@grs
 11537  0012B8  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
 11538  0012BC  C043  F03B         	movff	___fladd@grs,___fladd@a+3
 11539  0012C0                     l8145:
 11540  0012C0  0E00               	movlw	0
 11541  0012C2  6E43               	movwf	___fladd@grs^0,c
 11542  0012C4  5042               	movf	___fladd@bexp^0,w,c
 11543  0012C6  C041  F03C         	movff	___fladd@aexp,??___fladd
 11544  0012CA  6A3D               	clrf	(??___fladd+1)^0,c
 11545  0012CC  5E3C               	subwf	??___fladd^0,f,c
 11546  0012CE  0E00               	movlw	0
 11547  0012D0  5A3D               	subwfb	(??___fladd+1)^0,f,c
 11548  0012D2  BE3D               	btfsc	(??___fladd+1)^0,7,c
 11549  0012D4  EF75  F009         	goto	u8231
 11550  0012D8  503D               	movf	(??___fladd+1)^0,w,c
 11551  0012DA  E109               	bnz	u8230
 11552  0012DC  0E1A               	movlw	26
 11553  0012DE  5C3C               	subwf	??___fladd^0,w,c
 11554  0012E0  A0D8               	btfss	status,0,c
 11555  0012E2  EF75  F009         	goto	u8231
 11556  0012E6  EF77  F009         	goto	u8230
 11557  0012EA                     u8231:
 11558  0012EA  EFAE  F009         	goto	l1478
 11559  0012EE                     u8230:
 11560  0012EE  5034               	movf	___fladd@b^0,w,c
 11561  0012F0  1035               	iorwf	(___fladd@b+1)^0,w,c
 11562  0012F2  1036               	iorwf	(___fladd@b+2)^0,w,c
 11563  0012F4  1037               	iorwf	(___fladd@b+3)^0,w,c
 11564  0012F6  A4D8               	btfss	status,2,c
 11565  0012F8  EF80  F009         	goto	u8241
 11566  0012FC  EF83  F009         	goto	u8240
 11567  001300                     u8241:
 11568  001300  0E01               	movlw	1
 11569  001302  EF84  F009         	goto	u8250
 11570  001306                     u8240:
 11571  001306  0E00               	movlw	0
 11572  001308                     u8250:
 11573  001308  6E43               	movwf	___fladd@grs^0,c
 11574  00130A  0E00               	movlw	0
 11575  00130C  6E34               	movwf	___fladd@b^0,c
 11576  00130E  0E00               	movlw	0
 11577  001310  6E35               	movwf	(___fladd@b+1)^0,c
 11578  001312  0E00               	movlw	0
 11579  001314  6E36               	movwf	(___fladd@b+2)^0,c
 11580  001316  0E00               	movlw	0
 11581  001318  6E37               	movwf	(___fladd@b+3)^0,c
 11582  00131A  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11583  00131E  EFB7  F009         	goto	l1477
 11584  001322                     l1479:
 11585  001322  A043               	btfss	___fladd@grs^0,0,c
 11586  001324  EF96  F009         	goto	u8261
 11587  001328  EF98  F009         	goto	u8260
 11588  00132C                     u8261:
 11589  00132C  EF9E  F009         	goto	l8157
 11590  001330                     u8260:
 11591  001330  90D8               	bcf	status,0,c
 11592  001332  3043               	rrcf	___fladd@grs^0,w,c
 11593  001334  0901               	iorlw	1
 11594  001336  6E43               	movwf	___fladd@grs^0,c
 11595  001338  EFA0  F009         	goto	l8159
 11596  00133C                     l8157:
 11597  00133C  90D8               	bcf	status,0,c
 11598  00133E  3243               	rrcf	___fladd@grs^0,f,c
 11599  001340                     l8159:
 11600  001340  A034               	btfss	___fladd@b^0,0,c
 11601  001342  EFA5  F009         	goto	u8271
 11602  001346  EFA7  F009         	goto	u8270
 11603  00134A                     u8271:
 11604  00134A  EFA8  F009         	goto	l8163
 11605  00134E                     u8270:
 11606  00134E  8E43               	bsf	___fladd@grs^0,7,c
 11607  001350                     l8163:
 11608  001350  3437               	rlcf	(___fladd@b+3)^0,w,c
 11609  001352  3237               	rrcf	(___fladd@b+3)^0,f,c
 11610  001354  3236               	rrcf	(___fladd@b+2)^0,f,c
 11611  001356  3235               	rrcf	(___fladd@b+1)^0,f,c
 11612  001358  3234               	rrcf	___fladd@b^0,f,c
 11613  00135A  2A42               	incf	___fladd@bexp^0,f,c
 11614  00135C                     l1478:
 11615  00135C  5041               	movf	___fladd@aexp^0,w,c
 11616  00135E  5C42               	subwf	___fladd@bexp^0,w,c
 11617  001360  A0D8               	btfss	status,0,c
 11618  001362  EFB5  F009         	goto	u8281
 11619  001366  EFB7  F009         	goto	u8280
 11620  00136A                     u8281:
 11621  00136A  EF91  F009         	goto	l1479
 11622  00136E                     u8280:
 11623  00136E                     l1477:
 11624  00136E  BC40               	btfsc	___fladd@signs^0,6,c
 11625  001370  EFBC  F009         	goto	u8291
 11626  001374  EFBE  F009         	goto	u8290
 11627  001378                     u8291:
 11628  001378  EFFE  F009         	goto	l8191
 11629  00137C                     u8290:
 11630  00137C  5042               	movf	___fladd@bexp^0,w,c
 11631  00137E  A4D8               	btfss	status,2,c
 11632  001380  EFC4  F009         	goto	u8301
 11633  001384  EFC6  F009         	goto	u8300
 11634  001388                     u8301:
 11635  001388  EFD0  F009         	goto	l8173
 11636  00138C                     u8300:
 11637  00138C  0E00               	movlw	0
 11638  00138E  6E34               	movwf	?___fladd^0,c
 11639  001390  0E00               	movlw	0
 11640  001392  6E35               	movwf	(?___fladd+1)^0,c
 11641  001394  0E00               	movlw	0
 11642  001396  6E36               	movwf	(?___fladd+2)^0,c
 11643  001398  0E00               	movlw	0
 11644  00139A  6E37               	movwf	(?___fladd+3)^0,c
 11645  00139C  EF1F  F00B         	goto	l1486
 11646  0013A0                     l8173:
 11647  0013A0  5038               	movf	___fladd@a^0,w,c
 11648  0013A2  2634               	addwf	___fladd@b^0,f,c
 11649  0013A4  5039               	movf	(___fladd@a+1)^0,w,c
 11650  0013A6  2235               	addwfc	(___fladd@b+1)^0,f,c
 11651  0013A8  503A               	movf	(___fladd@a+2)^0,w,c
 11652  0013AA  2236               	addwfc	(___fladd@b+2)^0,f,c
 11653  0013AC  503B               	movf	(___fladd@a+3)^0,w,c
 11654  0013AE  2237               	addwfc	(___fladd@b+3)^0,f,c
 11655  0013B0  A037               	btfss	(___fladd@b+3)^0,0,c
 11656  0013B2  EFDD  F009         	goto	u8311
 11657  0013B6  EFDF  F009         	goto	u8310
 11658  0013BA                     u8311:
 11659  0013BA  EF8B  F00A         	goto	l8227
 11660  0013BE                     u8310:
 11661  0013BE  A043               	btfss	___fladd@grs^0,0,c
 11662  0013C0  EFE4  F009         	goto	u8321
 11663  0013C4  EFE6  F009         	goto	u8320
 11664  0013C8                     u8321:
 11665  0013C8  EFEC  F009         	goto	l8181
 11666  0013CC                     u8320:
 11667  0013CC  90D8               	bcf	status,0,c
 11668  0013CE  3043               	rrcf	___fladd@grs^0,w,c
 11669  0013D0  0901               	iorlw	1
 11670  0013D2  6E43               	movwf	___fladd@grs^0,c
 11671  0013D4  EFEE  F009         	goto	l8183
 11672  0013D8                     l8181:
 11673  0013D8  90D8               	bcf	status,0,c
 11674  0013DA  3243               	rrcf	___fladd@grs^0,f,c
 11675  0013DC                     l8183:
 11676  0013DC  A034               	btfss	___fladd@b^0,0,c
 11677  0013DE  EFF3  F009         	goto	u8331
 11678  0013E2  EFF5  F009         	goto	u8330
 11679  0013E6                     u8331:
 11680  0013E6  EFF6  F009         	goto	l8187
 11681  0013EA                     u8330:
 11682  0013EA  8E43               	bsf	___fladd@grs^0,7,c
 11683  0013EC                     l8187:
 11684  0013EC  3437               	rlcf	(___fladd@b+3)^0,w,c
 11685  0013EE  3237               	rrcf	(___fladd@b+3)^0,f,c
 11686  0013F0  3236               	rrcf	(___fladd@b+2)^0,f,c
 11687  0013F2  3235               	rrcf	(___fladd@b+1)^0,f,c
 11688  0013F4  3234               	rrcf	___fladd@b^0,f,c
 11689  0013F6  2A42               	incf	___fladd@bexp^0,f,c
 11690  0013F8  EF8B  F00A         	goto	l8227
 11691  0013FC                     l8191:
 11692  0013FC  5038               	movf	___fladd@a^0,w,c
 11693  0013FE  5C34               	subwf	___fladd@b^0,w,c
 11694  001400  5039               	movf	(___fladd@a+1)^0,w,c
 11695  001402  5835               	subwfb	(___fladd@b+1)^0,w,c
 11696  001404  503A               	movf	(___fladd@a+2)^0,w,c
 11697  001406  5836               	subwfb	(___fladd@b+2)^0,w,c
 11698  001408  5037               	movf	(___fladd@b+3)^0,w,c
 11699  00140A  0A80               	xorlw	128
 11700  00140C  6E3C               	movwf	??___fladd^0,c
 11701  00140E  503B               	movf	(___fladd@a+3)^0,w,c
 11702  001410  0A80               	xorlw	128
 11703  001412  583C               	subwfb	??___fladd^0,w,c
 11704  001414  B0D8               	btfsc	status,0,c
 11705  001416  EF0F  F00A         	goto	u8341
 11706  00141A  EF11  F00A         	goto	u8340
 11707  00141E                     u8341:
 11708  00141E  EF3C  F00A         	goto	l8201
 11709  001422                     u8340:
 11710  001422  5034               	movf	___fladd@b^0,w,c
 11711  001424  5C38               	subwf	___fladd@a^0,w,c
 11712  001426  6E3C               	movwf	??___fladd^0,c
 11713  001428  5035               	movf	(___fladd@b+1)^0,w,c
 11714  00142A  5839               	subwfb	(___fladd@a+1)^0,w,c
 11715  00142C  6E3D               	movwf	(??___fladd+1)^0,c
 11716  00142E  5036               	movf	(___fladd@b+2)^0,w,c
 11717  001430  583A               	subwfb	(___fladd@a+2)^0,w,c
 11718  001432  6E3E               	movwf	(??___fladd+2)^0,c
 11719  001434  5037               	movf	(___fladd@b+3)^0,w,c
 11720  001436  583B               	subwfb	(___fladd@a+3)^0,w,c
 11721  001438  6E3F               	movwf	(??___fladd+3)^0,c
 11722  00143A  0EFF               	movlw	255
 11723  00143C  243C               	addwf	??___fladd^0,w,c
 11724  00143E  6E34               	movwf	___fladd@b^0,c
 11725  001440  0EFF               	movlw	255
 11726  001442  203D               	addwfc	(??___fladd+1)^0,w,c
 11727  001444  6E35               	movwf	(___fladd@b+1)^0,c
 11728  001446  0EFF               	movlw	255
 11729  001448  203E               	addwfc	(??___fladd+2)^0,w,c
 11730  00144A  6E36               	movwf	(___fladd@b+2)^0,c
 11731  00144C  0EFF               	movlw	255
 11732  00144E  203F               	addwfc	(??___fladd+3)^0,w,c
 11733  001450  6E37               	movwf	(___fladd@b+3)^0,c
 11734  001452  0E80               	movlw	128
 11735  001454  1A40               	xorwf	___fladd@signs^0,f,c
 11736  001456  6C43               	negf	___fladd@grs^0,c
 11737  001458  5043               	movf	___fladd@grs^0,w,c
 11738  00145A  A4D8               	btfss	status,2,c
 11739  00145C  EF32  F00A         	goto	u8351
 11740  001460  EF34  F00A         	goto	u8350
 11741  001464                     u8351:
 11742  001464  EF44  F00A         	goto	l1494
 11743  001468                     u8350:
 11744  001468  0E01               	movlw	1
 11745  00146A  2634               	addwf	___fladd@b^0,f,c
 11746  00146C  0E00               	movlw	0
 11747  00146E  2235               	addwfc	(___fladd@b+1)^0,f,c
 11748  001470  2236               	addwfc	(___fladd@b+2)^0,f,c
 11749  001472  2237               	addwfc	(___fladd@b+3)^0,f,c
 11750  001474  EF44  F00A         	goto	l1494
 11751  001478                     l8201:
 11752  001478  5038               	movf	___fladd@a^0,w,c
 11753  00147A  5E34               	subwf	___fladd@b^0,f,c
 11754  00147C  5039               	movf	(___fladd@a+1)^0,w,c
 11755  00147E  5A35               	subwfb	(___fladd@b+1)^0,f,c
 11756  001480  503A               	movf	(___fladd@a+2)^0,w,c
 11757  001482  5A36               	subwfb	(___fladd@b+2)^0,f,c
 11758  001484  503B               	movf	(___fladd@a+3)^0,w,c
 11759  001486  5A37               	subwfb	(___fladd@b+3)^0,f,c
 11760  001488                     l1494:
 11761  001488  5034               	movf	___fladd@b^0,w,c
 11762  00148A  1035               	iorwf	(___fladd@b+1)^0,w,c
 11763  00148C  1036               	iorwf	(___fladd@b+2)^0,w,c
 11764  00148E  1037               	iorwf	(___fladd@b+3)^0,w,c
 11765  001490  A4D8               	btfss	status,2,c
 11766  001492  EF4D  F00A         	goto	u8361
 11767  001496  EF4F  F00A         	goto	u8360
 11768  00149A                     u8361:
 11769  00149A  EF84  F00A         	goto	l8225
 11770  00149E                     u8360:
 11771  00149E  5043               	movf	___fladd@grs^0,w,c
 11772  0014A0  A4D8               	btfss	status,2,c
 11773  0014A2  EF55  F00A         	goto	u8371
 11774  0014A6  EF57  F00A         	goto	u8370
 11775  0014AA                     u8371:
 11776  0014AA  EF84  F00A         	goto	l8225
 11777  0014AE                     u8370:
 11778  0014AE  0E00               	movlw	0
 11779  0014B0  6E34               	movwf	?___fladd^0,c
 11780  0014B2  0E00               	movlw	0
 11781  0014B4  6E35               	movwf	(?___fladd+1)^0,c
 11782  0014B6  0E00               	movlw	0
 11783  0014B8  6E36               	movwf	(?___fladd+2)^0,c
 11784  0014BA  0E00               	movlw	0
 11785  0014BC  6E37               	movwf	(?___fladd+3)^0,c
 11786  0014BE  EF1F  F00B         	goto	l1486
 11787  0014C2                     l8209:
 11788  0014C2  90D8               	bcf	status,0,c
 11789  0014C4  3634               	rlcf	___fladd@b^0,f,c
 11790  0014C6  3635               	rlcf	(___fladd@b+1)^0,f,c
 11791  0014C8  3636               	rlcf	(___fladd@b+2)^0,f,c
 11792  0014CA  3637               	rlcf	(___fladd@b+3)^0,f,c
 11793  0014CC  AE43               	btfss	___fladd@grs^0,7,c
 11794  0014CE  EF6B  F00A         	goto	u8381
 11795  0014D2  EF6D  F00A         	goto	u8380
 11796  0014D6                     u8381:
 11797  0014D6  EF6E  F00A         	goto	l8215
 11798  0014DA                     u8380:
 11799  0014DA  8034               	bsf	___fladd@b^0,0,c
 11800  0014DC                     l8215:
 11801  0014DC  A043               	btfss	___fladd@grs^0,0,c
 11802  0014DE  EF73  F00A         	goto	u8391
 11803  0014E2  EF75  F00A         	goto	u8390
 11804  0014E6                     u8391:
 11805  0014E6  EF79  F00A         	goto	l8219
 11806  0014EA                     u8390:
 11807  0014EA  80D8               	bsf	status,0,c
 11808  0014EC  3643               	rlcf	___fladd@grs^0,f,c
 11809  0014EE  EF7B  F00A         	goto	l8221
 11810  0014F2                     l8219:
 11811  0014F2  90D8               	bcf	status,0,c
 11812  0014F4  3643               	rlcf	___fladd@grs^0,f,c
 11813  0014F6                     l8221:
 11814  0014F6  5042               	movf	___fladd@bexp^0,w,c
 11815  0014F8  B4D8               	btfsc	status,2,c
 11816  0014FA  EF81  F00A         	goto	u8401
 11817  0014FE  EF83  F00A         	goto	u8400
 11818  001502                     u8401:
 11819  001502  EF84  F00A         	goto	l8225
 11820  001506                     u8400:
 11821  001506  0642               	decf	___fladd@bexp^0,f,c
 11822  001508                     l8225:
 11823  001508  AE36               	btfss	(___fladd@b+2)^0,7,c
 11824  00150A  EF89  F00A         	goto	u8411
 11825  00150E  EF8B  F00A         	goto	u8410
 11826  001512                     u8411:
 11827  001512  EF61  F00A         	goto	l8209
 11828  001516                     u8410:
 11829  001516                     l8227:
 11830  001516  0E00               	movlw	0
 11831  001518  6E41               	movwf	___fladd@aexp^0,c
 11832  00151A  AE43               	btfss	___fladd@grs^0,7,c
 11833  00151C  EF92  F00A         	goto	u8421
 11834  001520  EF94  F00A         	goto	u8420
 11835  001524                     u8421:
 11836  001524  EFAC  F00A         	goto	l1503
 11837  001528                     u8420:
 11838  001528  C043  F03C         	movff	___fladd@grs,??___fladd
 11839  00152C  0E7F               	movlw	127
 11840  00152E  163C               	andwf	??___fladd^0,f,c
 11841  001530  B4D8               	btfsc	status,2,c
 11842  001532  EF9D  F00A         	goto	u8431
 11843  001536  EF9F  F00A         	goto	u8430
 11844  00153A                     u8431:
 11845  00153A  EFA3  F00A         	goto	l1504
 11846  00153E                     u8430:
 11847  00153E                     l8233:
 11848  00153E  0E01               	movlw	1
 11849  001540  6E41               	movwf	___fladd@aexp^0,c
 11850  001542  EFAC  F00A         	goto	l1503
 11851  001546                     l1504:
 11852  001546  A034               	btfss	___fladd@b^0,0,c
 11853  001548  EFA8  F00A         	goto	u8441
 11854  00154C  EFAA  F00A         	goto	u8440
 11855  001550                     u8441:
 11856  001550  EFAC  F00A         	goto	l1503
 11857  001554                     u8440:
 11858  001554  EF9F  F00A         	goto	l8233
 11859  001558                     l1503:
 11860  001558  5041               	movf	___fladd@aexp^0,w,c
 11861  00155A  B4D8               	btfsc	status,2,c
 11862  00155C  EFB2  F00A         	goto	u8451
 11863  001560  EFB4  F00A         	goto	u8450
 11864  001564                     u8451:
 11865  001564  EFDF  F00A         	goto	l8245
 11866  001568                     u8450:
 11867  001568  0E01               	movlw	1
 11868  00156A  2634               	addwf	___fladd@b^0,f,c
 11869  00156C  0E00               	movlw	0
 11870  00156E  2235               	addwfc	(___fladd@b+1)^0,f,c
 11871  001570  2236               	addwfc	(___fladd@b+2)^0,f,c
 11872  001572  2237               	addwfc	(___fladd@b+3)^0,f,c
 11873  001574  A037               	btfss	(___fladd@b+3)^0,0,c
 11874  001576  EFBF  F00A         	goto	u8461
 11875  00157A  EFC1  F00A         	goto	u8460
 11876  00157E                     u8461:
 11877  00157E  EFDF  F00A         	goto	l8245
 11878  001582                     u8460:
 11879  001582  C034  F03C         	movff	___fladd@b,??___fladd
 11880  001586  C035  F03D         	movff	___fladd@b+1,??___fladd+1
 11881  00158A  C036  F03E         	movff	___fladd@b+2,??___fladd+2
 11882  00158E  C037  F03F         	movff	___fladd@b+3,??___fladd+3
 11883  001592  343F               	rlcf	(??___fladd+3)^0,w,c
 11884  001594  323F               	rrcf	(??___fladd+3)^0,f,c
 11885  001596  323E               	rrcf	(??___fladd+2)^0,f,c
 11886  001598  323D               	rrcf	(??___fladd+1)^0,f,c
 11887  00159A  323C               	rrcf	??___fladd^0,f,c
 11888  00159C  C03C  F034         	movff	??___fladd,___fladd@b
 11889  0015A0  C03D  F035         	movff	??___fladd+1,___fladd@b+1
 11890  0015A4  C03E  F036         	movff	??___fladd+2,___fladd@b+2
 11891  0015A8  C03F  F037         	movff	??___fladd+3,___fladd@b+3
 11892  0015AC  2842               	incf	___fladd@bexp^0,w,c
 11893  0015AE  B4D8               	btfsc	status,2,c
 11894  0015B0  EFDC  F00A         	goto	u8471
 11895  0015B4  EFDE  F00A         	goto	u8470
 11896  0015B8                     u8471:
 11897  0015B8  EFDF  F00A         	goto	l8245
 11898  0015BC                     u8470:
 11899  0015BC  2A42               	incf	___fladd@bexp^0,f,c
 11900  0015BE                     l8245:
 11901  0015BE  2842               	incf	___fladd@bexp^0,w,c
 11902  0015C0  B4D8               	btfsc	status,2,c
 11903  0015C2  EFE5  F00A         	goto	u8481
 11904  0015C6  EFE7  F00A         	goto	u8480
 11905  0015CA                     u8481:
 11906  0015CA  EFEF  F00A         	goto	l8249
 11907  0015CE                     u8480:
 11908  0015CE  5042               	movf	___fladd@bexp^0,w,c
 11909  0015D0  A4D8               	btfss	status,2,c
 11910  0015D2  EFED  F00A         	goto	u8491
 11911  0015D6  EFEF  F00A         	goto	u8490
 11912  0015DA                     u8491:
 11913  0015DA  EF01  F00B         	goto	l8253
 11914  0015DE                     u8490:
 11915  0015DE                     l8249:
 11916  0015DE  0E00               	movlw	0
 11917  0015E0  6E34               	movwf	___fladd@b^0,c
 11918  0015E2  0E00               	movlw	0
 11919  0015E4  6E35               	movwf	(___fladd@b+1)^0,c
 11920  0015E6  0E00               	movlw	0
 11921  0015E8  6E36               	movwf	(___fladd@b+2)^0,c
 11922  0015EA  0E00               	movlw	0
 11923  0015EC  6E37               	movwf	(___fladd@b+3)^0,c
 11924  0015EE  5042               	movf	___fladd@bexp^0,w,c
 11925  0015F0  A4D8               	btfss	status,2,c
 11926  0015F2  EFFD  F00A         	goto	u8501
 11927  0015F6  EFFF  F00A         	goto	u8500
 11928  0015FA                     u8501:
 11929  0015FA  EF01  F00B         	goto	l8253
 11930  0015FE                     u8500:
 11931  0015FE  0E00               	movlw	0
 11932  001600  6E40               	movwf	___fladd@signs^0,c
 11933  001602                     l8253:
 11934  001602  A042               	btfss	___fladd@bexp^0,0,c
 11935  001604  EF06  F00B         	goto	u8511
 11936  001608  EF08  F00B         	goto	u8510
 11937  00160C                     u8511:
 11938  00160C  EF0B  F00B         	goto	l8257
 11939  001610                     u8510:
 11940  001610  8E36               	bsf	(___fladd@b+2)^0,7,c
 11941  001612  EF0C  F00B         	goto	l8259
 11942  001616                     l8257:
 11943  001616  9E36               	bcf	(___fladd@b+2)^0,7,c
 11944  001618                     l8259:
 11945  001618  90D8               	bcf	status,0,c
 11946  00161A  3042               	rrcf	___fladd@bexp^0,w,c
 11947  00161C  6E37               	movwf	(___fladd@b+3)^0,c
 11948  00161E  AE40               	btfss	___fladd@signs^0,7,c
 11949  001620  EF14  F00B         	goto	u8521
 11950  001624  EF16  F00B         	goto	u8520
 11951  001628                     u8521:
 11952  001628  EF17  F00B         	goto	l8265
 11953  00162C                     u8520:
 11954  00162C  8E37               	bsf	(___fladd@b+3)^0,7,c
 11955  00162E                     l8265:
 11956  00162E  C034  F034         	movff	___fladd@b,?___fladd
 11957  001632  C035  F035         	movff	___fladd@b+1,?___fladd+1
 11958  001636  C036  F036         	movff	___fladd@b+2,?___fladd+2
 11959  00163A  C037  F037         	movff	___fladd@b+3,?___fladd+3
 11960  00163E                     l1486:
 11961  00163E  0012               	return		;funcret
 11962  001640                     __end_of___fladd:
 11963                           	opt callstack 0
 11964                           
 11965 ;; *************** function _hayCruce *****************
 11966 ;; Defined at:
 11967 ;;		line 732 in file "main.c"
 11968 ;; Parameters:    Size  Location     Type
 11969 ;;  caminosRecor    2   63[COMRAM] PTR unsigned char 
 11970 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 11971 ;;  investigando    1   65[COMRAM] unsigned char 
 11972 ;; Auto vars:     Size  Location     Type
 11973 ;;  contCaminos     1   66[COMRAM] unsigned char 
 11974 ;; Return value:  Size  Location     Type
 11975 ;;                  1    wreg      unsigned char 
 11976 ;; Registers used:
 11977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11978 ;; Tracked objects:
 11979 ;;		On entry : 0/0
 11980 ;;		On exit  : 0/0
 11981 ;;		Unchanged: 0/0
 11982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11983 ;;      Params:         3       0       0       0       0       0       0       0       0
 11984 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11985 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11986 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11987 ;;Total ram usage:        4 bytes
 11988 ;; Hardware stack levels used:    1
 11989 ;; Hardware stack levels required when called:    3
 11990 ;; This function calls:
 11991 ;;		___flge
 11992 ;; This function is called by:
 11993 ;;		_comportamientoBasico
 11994 ;; This function uses a non-reentrant model
 11995 ;;
 11996                           
 11997                           	psect	text48
 11998  0036D8                     __ptext48:
 11999                           	opt callstack 0
 12000  0036D8                     _hayCruce:
 12001                           	opt callstack 26
 12002  0036D8                     
 12003                           ;main.c: 734:     T_UBYTE contCaminos = 0;
 12004  0036D8  0E00               	movlw	0
 12005  0036DA  6E43               	movwf	hayCruce@contCaminos^0,c
 12006                           
 12007                           ;main.c: 736:     paredEnfrente = 0;
 12008  0036DC  0E00               	movlw	0
 12009  0036DE  6E59               	movwf	_paredEnfrente^0,c
 12010                           
 12011                           ;main.c: 737:     paredDerecha = 0;
 12012  0036E0  0E00               	movlw	0
 12013  0036E2  0101               	movlb	1	; () banked
 12014  0036E4  6F3B               	movwf	_paredDerecha& (0+255),b
 12015                           
 12016                           ;main.c: 738:     paredIzquierda = 0;
 12017  0036E6  0E00               	movlw	0
 12018  0036E8  6F3A               	movwf	_paredIzquierda& (0+255),b
 12019                           
 12020                           ;main.c: 740:     if (!investigandoCruce) {
 12021  0036EA  5042               	movf	hayCruce@investigandoCruce^0,w,c
 12022  0036EC  A4D8               	btfss	status,2,c
 12023  0036EE  EF7B  F01B         	goto	u11371
 12024  0036F2  EF7D  F01B         	goto	u11370
 12025  0036F6                     u11371:
 12026  0036F6  EF26  F01C         	goto	l10207
 12027  0036FA                     u11370:
 12028  0036FA                     
 12029                           ; BSR set to: 1
 12030                           ;main.c: 742:         if (sensorEnfrente > 30) {
 12031  0036FA  0E00               	movlw	0
 12032  0036FC  6E34               	movwf	___flge@ff1^0,c
 12033  0036FE  0E00               	movlw	0
 12034  003700  6E35               	movwf	(___flge@ff1+1)^0,c
 12035  003702  0EF0               	movlw	240
 12036  003704  6E36               	movwf	(___flge@ff1+2)^0,c
 12037  003706  0E41               	movlw	65
 12038  003708  6E37               	movwf	(___flge@ff1+3)^0,c
 12039  00370A  C124  F038         	movff	_sensorEnfrente,___flge@ff2
 12040  00370E  C125  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
 12041  003712  C126  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
 12042  003716  C127  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
 12043  00371A  EC22  F020         	call	___flge	;wreg free
 12044  00371E  B0D8               	btfsc	status,0,c
 12045  003720  EF94  F01B         	goto	u11381
 12046  003724  EF96  F01B         	goto	u11380
 12047  003728                     u11381:
 12048  003728  EF99  F01B         	goto	l10137
 12049  00372C                     u11380:
 12050  00372C                     
 12051                           ;main.c: 743:             paredEnfrente = 1;
 12052  00372C  0E01               	movlw	1
 12053  00372E  6E59               	movwf	_paredEnfrente^0,c
 12054  003730                     
 12055                           ;main.c: 744:             contCaminos++;
 12056  003730  2A43               	incf	hayCruce@contCaminos^0,f,c
 12057  003732                     l10137:
 12058                           
 12059                           ;main.c: 747:         if (sensorIzquierda > 25) {
 12060  003732  0E00               	movlw	0
 12061  003734  6E34               	movwf	___flge@ff1^0,c
 12062  003736  0E00               	movlw	0
 12063  003738  6E35               	movwf	(___flge@ff1+1)^0,c
 12064  00373A  0EC8               	movlw	200
 12065  00373C  6E36               	movwf	(___flge@ff1+2)^0,c
 12066  00373E  0E41               	movlw	65
 12067  003740  6E37               	movwf	(___flge@ff1+3)^0,c
 12068  003742  C128  F038         	movff	_sensorIzquierda,___flge@ff2
 12069  003746  C129  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
 12070  00374A  C12A  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
 12071  00374E  C12B  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
 12072  003752  EC22  F020         	call	___flge	;wreg free
 12073  003756  B0D8               	btfsc	status,0,c
 12074  003758  EFB0  F01B         	goto	u11391
 12075  00375C  EFB2  F01B         	goto	u11390
 12076  003760                     u11391:
 12077  003760  EFB6  F01B         	goto	l10143
 12078  003764                     u11390:
 12079  003764                     
 12080                           ;main.c: 748:             paredIzquierda = 1;
 12081  003764  0E01               	movlw	1
 12082  003766  0101               	movlb	1	; () banked
 12083  003768  6F3A               	movwf	_paredIzquierda& (0+255),b
 12084  00376A                     
 12085                           ; BSR set to: 1
 12086                           ;main.c: 749:             contCaminos++;
 12087  00376A  2A43               	incf	hayCruce@contCaminos^0,f,c
 12088  00376C                     l10143:
 12089                           
 12090                           ;main.c: 752:         if (sensorDerecha > 25) {
 12091  00376C  0E00               	movlw	0
 12092  00376E  6E34               	movwf	___flge@ff1^0,c
 12093  003770  0E00               	movlw	0
 12094  003772  6E35               	movwf	(___flge@ff1+1)^0,c
 12095  003774  0EC8               	movlw	200
 12096  003776  6E36               	movwf	(___flge@ff1+2)^0,c
 12097  003778  0E41               	movlw	65
 12098  00377A  6E37               	movwf	(___flge@ff1+3)^0,c
 12099  00377C  C055  F038         	movff	_sensorDerecha,___flge@ff2
 12100  003780  C056  F039         	movff	_sensorDerecha+1,___flge@ff2+1
 12101  003784  C057  F03A         	movff	_sensorDerecha+2,___flge@ff2+2
 12102  003788  C058  F03B         	movff	_sensorDerecha+3,___flge@ff2+3
 12103  00378C  EC22  F020         	call	___flge	;wreg free
 12104  003790  B0D8               	btfsc	status,0,c
 12105  003792  EFCD  F01B         	goto	u11401
 12106  003796  EFCF  F01B         	goto	u11400
 12107  00379A                     u11401:
 12108  00379A  EFD3  F01B         	goto	l10149
 12109  00379E                     u11400:
 12110  00379E                     
 12111                           ;main.c: 753:             paredDerecha = 1;
 12112  00379E  0E01               	movlw	1
 12113  0037A0  0101               	movlb	1	; () banked
 12114  0037A2  6F3B               	movwf	_paredDerecha& (0+255),b
 12115  0037A4                     
 12116                           ; BSR set to: 1
 12117                           ;main.c: 754:             contCaminos++;
 12118  0037A4  2A43               	incf	hayCruce@contCaminos^0,f,c
 12119  0037A6                     l10149:
 12120                           
 12121                           ;main.c: 758:         if (contCaminos > 1) {
 12122  0037A6  0E01               	movlw	1
 12123  0037A8  6443               	cpfsgt	hayCruce@contCaminos^0,c
 12124  0037AA  EFD9  F01B         	goto	u11411
 12125  0037AE  EFDB  F01B         	goto	u11410
 12126  0037B2                     u11411:
 12127  0037B2  EF26  F01C         	goto	l10207
 12128  0037B6                     u11410:
 12129  0037B6                     
 12130                           ;main.c: 769:                 if (paredDerecha)
 12131  0037B6  0101               	movlb	1	; () banked
 12132  0037B8  513B               	movf	_paredDerecha& (0+255),w,b
 12133  0037BA  B4D8               	btfsc	status,2,c
 12134  0037BC  EFE2  F01B         	goto	u11421
 12135  0037C0  EFE4  F01B         	goto	u11420
 12136  0037C4                     u11421:
 12137  0037C4  EFEE  F01B         	goto	l10163
 12138  0037C8                     u11420:
 12139  0037C8                     
 12140                           ; BSR set to: 1
 12141                           ;main.c: 770:                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1] = '1';
 12142  0037C8  EE20 F002          	lfsr	2,2
 12143  0037CC  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 12144  0037CE  26D9               	addwf	fsr2l,f,c
 12145  0037D0  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 12146  0037D2  22DA               	addwfc	fsr2h,f,c
 12147  0037D4  0E31               	movlw	49
 12148  0037D6  6EDF               	movwf	indf2,c
 12149  0037D8  EFF6  F01B         	goto	l10183
 12150  0037DC                     l10163:
 12151                           
 12152                           ; BSR set to: 1
 12153                           ;main.c: 772:                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1] = '0';
 12154  0037DC  EE20 F002          	lfsr	2,2
 12155  0037E0  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 12156  0037E2  26D9               	addwf	fsr2l,f,c
 12157  0037E4  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 12158  0037E6  22DA               	addwfc	fsr2h,f,c
 12159  0037E8  0E30               	movlw	48
 12160  0037EA  6EDF               	movwf	indf2,c
 12161  0037EC                     l10183:
 12162                           
 12163                           ; BSR set to: 1
 12164                           ;main.c: 799:                 if (paredIzquierda)
 12165  0037EC  513A               	movf	_paredIzquierda& (0+255),w,b
 12166  0037EE  B4D8               	btfsc	status,2,c
 12167  0037F0  EFFC  F01B         	goto	u11431
 12168  0037F4  EFFE  F01B         	goto	u11430
 12169  0037F8                     u11431:
 12170  0037F8  EF08  F01C         	goto	l10187
 12171  0037FC                     u11430:
 12172  0037FC                     
 12173                           ; BSR set to: 1
 12174                           ;main.c: 800:                     caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1] = '1';
 12175  0037FC  EE20 F001          	lfsr	2,1
 12176  003800  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 12177  003802  26D9               	addwf	fsr2l,f,c
 12178  003804  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 12179  003806  22DA               	addwfc	fsr2h,f,c
 12180  003808  0E31               	movlw	49
 12181  00380A  6EDF               	movwf	indf2,c
 12182  00380C  EF10  F01C         	goto	l10189
 12183  003810                     l10187:
 12184                           
 12185                           ; BSR set to: 1
 12186                           ;main.c: 802:                     caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1] = '0';
 12187  003810  EE20 F001          	lfsr	2,1
 12188  003814  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 12189  003816  26D9               	addwf	fsr2l,f,c
 12190  003818  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 12191  00381A  22DA               	addwfc	fsr2h,f,c
 12192  00381C  0E30               	movlw	48
 12193  00381E  6EDF               	movwf	indf2,c
 12194  003820                     l10189:
 12195                           
 12196                           ; BSR set to: 1
 12197                           ;main.c: 808:                 if (paredEnfrente)
 12198  003820  5059               	movf	_paredEnfrente^0,w,c
 12199  003822  B4D8               	btfsc	status,2,c
 12200  003824  EF16  F01C         	goto	u11441
 12201  003828  EF18  F01C         	goto	u11440
 12202  00382C                     u11441:
 12203  00382C  EF20  F01C         	goto	l10193
 12204  003830                     u11440:
 12205  003830                     
 12206                           ; BSR set to: 1
 12207                           ;main.c: 809:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '1';
 12208  003830  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 12209  003834  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 12210  003838  0E31               	movlw	49
 12211  00383A  6EDF               	movwf	indf2,c
 12212  00383C  EF26  F01C         	goto	l10207
 12213  003840                     l10193:
 12214                           
 12215                           ; BSR set to: 1
 12216                           ;main.c: 811:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '0';
 12217  003840  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 12218  003844  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 12219  003848  0E30               	movlw	48
 12220  00384A  6EDF               	movwf	indf2,c
 12221  00384C                     l10207:
 12222                           
 12223                           ;main.c: 836:     if (contCaminos > 1)
 12224  00384C  0E01               	movlw	1
 12225  00384E  6443               	cpfsgt	hayCruce@contCaminos^0,c
 12226  003850  EF2C  F01C         	goto	u11451
 12227  003854  EF2E  F01C         	goto	u11450
 12228  003858                     u11451:
 12229  003858  EF31  F01C         	goto	l10215
 12230  00385C                     u11450:
 12231  00385C                     
 12232                           ;main.c: 837:         return 1;
 12233  00385C  0E01               	movlw	1
 12234  00385E  EF32  F01C         	goto	l526
 12235  003862                     l10215:
 12236                           
 12237                           ;main.c: 840:         return 0;
 12238  003862  0E00               	movlw	0
 12239  003864                     l526:
 12240  003864  0012               	return		;funcret
 12241  003866                     __end_of_hayCruce:
 12242                           	opt callstack 0
 12243                           
 12244 ;; *************** function _finalizarRecorrido *****************
 12245 ;; Defined at:
 12246 ;;		line 478 in file "main.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;		None
 12249 ;; Auto vars:     Size  Location     Type
 12250 ;;		None
 12251 ;; Return value:  Size  Location     Type
 12252 ;;                  1    wreg      void 
 12253 ;; Registers used:
 12254 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12255 ;; Tracked objects:
 12256 ;;		On entry : 0/0
 12257 ;;		On exit  : 0/0
 12258 ;;		Unchanged: 0/0
 12259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12260 ;;      Params:         0       0       0       0       0       0       0       0       0
 12261 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12262 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12263 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12264 ;;Total ram usage:        0 bytes
 12265 ;; Hardware stack levels used:    1
 12266 ;; Hardware stack levels required when called:    8
 12267 ;; This function calls:
 12268 ;;		_forzarEspejeo
 12269 ;;		_forzarParoAuto
 12270 ;; This function is called by:
 12271 ;;		_comportamientoBasico
 12272 ;;		_probarPID
 12273 ;;		_probarCruceT
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277                           	psect	text49
 12278  005618                     __ptext49:
 12279                           	opt callstack 0
 12280  005618                     _finalizarRecorrido:
 12281                           	opt callstack 21
 12282  005618                     
 12283                           ;main.c: 479:     forzarEspejeo();
 12284  005618  ECB9  F029         	call	_forzarEspejeo	;wreg free
 12285  00561C                     
 12286                           ;main.c: 480:     forzarParoAuto();
 12287  00561C  ECF4  F02A         	call	_forzarParoAuto	;wreg free
 12288  005620                     
 12289                           ;main.c: 481:     pausa = 1;
 12290  005620  0E01               	movlw	1
 12291  005622  0101               	movlb	1	; () banked
 12292  005624  6FD5               	movwf	_pausa& (0+255),b
 12293  005626                     
 12294                           ; BSR set to: 1
 12295  005626  0012               	return		;funcret
 12296  005628                     __end_of_finalizarRecorrido:
 12297                           	opt callstack 0
 12298                           
 12299 ;; *************** function _forzarEspejeo *****************
 12300 ;; Defined at:
 12301 ;;		line 554 in file "main.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;		None
 12304 ;; Auto vars:     Size  Location     Type
 12305 ;;		None
 12306 ;; Return value:  Size  Location     Type
 12307 ;;                  1    wreg      void 
 12308 ;; Registers used:
 12309 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12310 ;; Tracked objects:
 12311 ;;		On entry : 0/0
 12312 ;;		On exit  : 0/0
 12313 ;;		Unchanged: 0/0
 12314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12315 ;;      Params:         0       0       0       0       0       0       0       0       0
 12316 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12317 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12318 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12319 ;;Total ram usage:        0 bytes
 12320 ;; Hardware stack levels used:    1
 12321 ;; Hardware stack levels required when called:    7
 12322 ;; This function calls:
 12323 ;;		___flge
 12324 ;;		_forzarEspejeoDerecha
 12325 ;;		_forzarEspejeoIzquierda
 12326 ;; This function is called by:
 12327 ;;		_comportamientoBasico
 12328 ;;		_finalizarRecorrido
 12329 ;;		_moverCarrito
 12330 ;; This function uses a non-reentrant model
 12331 ;;
 12332                           
 12333                           	psect	text50
 12334  005372                     __ptext50:
 12335                           	opt callstack 0
 12336  005372                     _forzarEspejeo:
 12337                           	opt callstack 21
 12338  005372                     
 12339                           ;main.c: 556:     if (sensorIzquierda > sensorDerecha)
 12340  005372  C055  F034         	movff	_sensorDerecha,___flge@ff1
 12341  005376  C056  F035         	movff	_sensorDerecha+1,___flge@ff1+1
 12342  00537A  C057  F036         	movff	_sensorDerecha+2,___flge@ff1+2
 12343  00537E  C058  F037         	movff	_sensorDerecha+3,___flge@ff1+3
 12344  005382  C128  F038         	movff	_sensorIzquierda,___flge@ff2
 12345  005386  C129  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
 12346  00538A  C12A  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
 12347  00538E  C12B  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
 12348  005392  EC22  F020         	call	___flge	;wreg free
 12349  005396  B0D8               	btfsc	status,0,c
 12350  005398  EFD0  F029         	goto	u11071
 12351  00539C  EFD2  F029         	goto	u11070
 12352  0053A0                     u11071:
 12353  0053A0  EFD6  F029         	goto	l9749
 12354  0053A4                     u11070:
 12355  0053A4                     
 12356                           ;main.c: 557:         forzarEspejeoIzquierda();
 12357  0053A4  ECDA  F02A         	call	_forzarEspejeoIzquierda	;wreg free
 12358  0053A8  EFD8  F029         	goto	l437
 12359  0053AC                     l9749:
 12360                           
 12361                           ;main.c: 559:         forzarEspejeoDerecha();
 12362  0053AC  ECE7  F02A         	call	_forzarEspejeoDerecha	;wreg free
 12363  0053B0                     l437:
 12364  0053B0  0012               	return		;funcret
 12365  0053B2                     __end_of_forzarEspejeo:
 12366                           	opt callstack 0
 12367                           
 12368 ;; *************** function _forzarEspejeoIzquierda *****************
 12369 ;; Defined at:
 12370 ;;		line 534 in file "main.c"
 12371 ;; Parameters:    Size  Location     Type
 12372 ;;		None
 12373 ;; Auto vars:     Size  Location     Type
 12374 ;;		None
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  1    wreg      void 
 12377 ;; Registers used:
 12378 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/0
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12384 ;;      Params:         0       0       0       0       0       0       0       0       0
 12385 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12386 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12387 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12388 ;;Total ram usage:        0 bytes
 12389 ;; Hardware stack levels used:    1
 12390 ;; Hardware stack levels required when called:    6
 12391 ;; This function calls:
 12392 ;;		_forzarGiroIzquierda
 12393 ;;		_forzarParoAuto
 12394 ;;		_forzarReversa
 12395 ;;		_velocidadEstandar
 12396 ;; This function is called by:
 12397 ;;		_forzarEspejeo
 12398 ;; This function uses a non-reentrant model
 12399 ;;
 12400                           
 12401                           	psect	text51
 12402  0055B4                     __ptext51:
 12403                           	opt callstack 0
 12404  0055B4                     _forzarEspejeoIzquierda:
 12405                           	opt callstack 21
 12406  0055B4                     
 12407                           ;main.c: 536:     forzarParoAuto();
 12408  0055B4  ECF4  F02A         	call	_forzarParoAuto	;wreg free
 12409  0055B8                     
 12410                           ;main.c: 537:     velocidadEstandar();
 12411  0055B8  EC85  F02A         	call	_velocidadEstandar	;wreg free
 12412  0055BC                     
 12413                           ;main.c: 538:     forzarReversa();
 12414  0055BC  ECA9  F02A         	call	_forzarReversa	;wreg free
 12415  0055C0                     
 12416                           ;main.c: 539:     forzarGiroIzquierda();
 12417  0055C0  ECBA  F02A         	call	_forzarGiroIzquierda	;wreg free
 12418  0055C4                     
 12419                           ;main.c: 540:     forzarReversa();
 12420  0055C4  ECA9  F02A         	call	_forzarReversa	;wreg free
 12421  0055C8                     
 12422                           ;main.c: 541:     forzarGiroIzquierda();
 12423  0055C8  ECBA  F02A         	call	_forzarGiroIzquierda	;wreg free
 12424  0055CC  0012               	return		;funcret
 12425  0055CE                     __end_of_forzarEspejeoIzquierda:
 12426                           	opt callstack 0
 12427                           
 12428 ;; *************** function _forzarGiroIzquierda *****************
 12429 ;; Defined at:
 12430 ;;		line 516 in file "main.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;		None
 12433 ;; Auto vars:     Size  Location     Type
 12434 ;;		None
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  1    wreg      void 
 12437 ;; Registers used:
 12438 ;;		wreg
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12444 ;;      Params:         0       0       0       0       0       0       0       0       0
 12445 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12446 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12447 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12448 ;;Total ram usage:        2 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:    2
 12451 ;; This function calls:
 12452 ;;		Nothing
 12453 ;; This function is called by:
 12454 ;;		_forzarEspejeoIzquierda
 12455 ;; This function uses a non-reentrant model
 12456 ;;
 12457                           
 12458                           	psect	text52
 12459  005574                     __ptext52:
 12460                           	opt callstack 0
 12461  005574                     _forzarGiroIzquierda:
 12462                           	opt callstack 24
 12463  005574                     
 12464                           ;main.c: 517:     LATB4 = 0;
 12465  005574  988A               	bcf	3978,4,c	;volatile
 12466                           
 12467                           ;main.c: 518:     LATB5 = 0;
 12468  005576  9A8A               	bcf	3978,5,c	;volatile
 12469                           
 12470                           ;main.c: 519:     LATB6 = 1;
 12471  005578  8C8A               	bsf	3978,6,c	;volatile
 12472                           
 12473                           ;main.c: 520:     LATB7 = 0;
 12474  00557A  9E8A               	bcf	3978,7,c	;volatile
 12475  00557C                     
 12476                           ;main.c: 521:     _delay((unsigned long)((410)*(4000000/4000.0)));
 12477  00557C  0E03               	movlw	3
 12478  00557E  6E07               	movwf	(??_forzarGiroIzquierda+1)^0,c
 12479  005580  0E15               	movlw	21
 12480  005582  6E06               	movwf	??_forzarGiroIzquierda^0,c
 12481  005584  0E74               	movlw	116
 12482  005586                     u12007:
 12483  005586  2EE8               	decfsz	wreg,f,c
 12484  005588  D7FE               	bra	u12007
 12485  00558A  2E06               	decfsz	??_forzarGiroIzquierda^0,f,c
 12486  00558C  D7FC               	bra	u12007
 12487  00558E  2E07               	decfsz	(??_forzarGiroIzquierda+1)^0,f,c
 12488  005590  D7FA               	bra	u12007
 12489  005592  0012               	return		;funcret
 12490  005594                     __end_of_forzarGiroIzquierda:
 12491                           	opt callstack 0
 12492                           
 12493 ;; *************** function _forzarEspejeoDerecha *****************
 12494 ;; Defined at:
 12495 ;;		line 544 in file "main.c"
 12496 ;; Parameters:    Size  Location     Type
 12497 ;;		None
 12498 ;; Auto vars:     Size  Location     Type
 12499 ;;		None
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  1    wreg      void 
 12502 ;; Registers used:
 12503 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12504 ;; Tracked objects:
 12505 ;;		On entry : 0/0
 12506 ;;		On exit  : 0/0
 12507 ;;		Unchanged: 0/0
 12508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12509 ;;      Params:         0       0       0       0       0       0       0       0       0
 12510 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12512 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12513 ;;Total ram usage:        0 bytes
 12514 ;; Hardware stack levels used:    1
 12515 ;; Hardware stack levels required when called:    6
 12516 ;; This function calls:
 12517 ;;		_forzarGiroDerecha
 12518 ;;		_forzarParoAuto
 12519 ;;		_forzarReversa
 12520 ;;		_velocidadEstandar
 12521 ;; This function is called by:
 12522 ;;		_forzarEspejeo
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           	psect	text53
 12527  0055CE                     __ptext53:
 12528                           	opt callstack 0
 12529  0055CE                     _forzarEspejeoDerecha:
 12530                           	opt callstack 21
 12531  0055CE                     
 12532                           ;main.c: 546:     forzarParoAuto();
 12533  0055CE  ECF4  F02A         	call	_forzarParoAuto	;wreg free
 12534  0055D2                     
 12535                           ;main.c: 547:     velocidadEstandar();
 12536  0055D2  EC85  F02A         	call	_velocidadEstandar	;wreg free
 12537  0055D6                     
 12538                           ;main.c: 548:     forzarReversa();
 12539  0055D6  ECA9  F02A         	call	_forzarReversa	;wreg free
 12540  0055DA                     
 12541                           ;main.c: 549:     forzarGiroDerecha();
 12542  0055DA  ECCA  F02A         	call	_forzarGiroDerecha	;wreg free
 12543  0055DE                     
 12544                           ;main.c: 550:     forzarReversa();
 12545  0055DE  ECA9  F02A         	call	_forzarReversa	;wreg free
 12546  0055E2                     
 12547                           ;main.c: 551:     forzarGiroDerecha();
 12548  0055E2  ECCA  F02A         	call	_forzarGiroDerecha	;wreg free
 12549  0055E6  0012               	return		;funcret
 12550  0055E8                     __end_of_forzarEspejeoDerecha:
 12551                           	opt callstack 0
 12552                           
 12553 ;; *************** function _velocidadEstandar *****************
 12554 ;; Defined at:
 12555 ;;		line 1289 in file "main.c"
 12556 ;; Parameters:    Size  Location     Type
 12557 ;;		None
 12558 ;; Auto vars:     Size  Location     Type
 12559 ;;		None
 12560 ;; Return value:  Size  Location     Type
 12561 ;;                  1    wreg      void 
 12562 ;; Registers used:
 12563 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12564 ;; Tracked objects:
 12565 ;;		On entry : 0/0
 12566 ;;		On exit  : 0/0
 12567 ;;		Unchanged: 0/0
 12568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12569 ;;      Params:         0       0       0       0       0       0       0       0       0
 12570 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12571 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12572 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12573 ;;Total ram usage:        0 bytes
 12574 ;; Hardware stack levels used:    1
 12575 ;; Hardware stack levels required when called:    5
 12576 ;; This function calls:
 12577 ;;		_pwmDuty
 12578 ;; This function is called by:
 12579 ;;		_inicializarComportamientoBasico
 12580 ;;		_comportamientoBasico
 12581 ;;		_forzarEspejeoIzquierda
 12582 ;;		_forzarEspejeoDerecha
 12583 ;;		_regresarPuntoPartida
 12584 ;;		_regresarAlCruce
 12585 ;;		_recorrerCaminoEncontrado
 12586 ;;		_probarCruceT
 12587 ;; This function uses a non-reentrant model
 12588 ;;
 12589                           
 12590                           	psect	text54
 12591  00550A                     __ptext54:
 12592                           	opt callstack 0
 12593  00550A                     _velocidadEstandar:
 12594                           	opt callstack 24
 12595  00550A                     
 12596                           ;main.c: 1291:     pwmDuty(100, 1);
 12597  00550A  0E00               	movlw	0
 12598  00550C  0100               	movlb	0	; () banked
 12599  00550E  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
 12600  005510  0E64               	movlw	100
 12601  005512  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
 12602  005514  0E01               	movlw	1
 12603  005516  6F7E               	movwf	pwmDuty@channel& (0+255),b
 12604  005518  ECEC  F018         	call	_pwmDuty	;wreg free
 12605                           
 12606                           ;main.c: 1292:     pwmDuty(100, 2);
 12607  00551C  0E00               	movlw	0
 12608  00551E  0100               	movlb	0	; () banked
 12609  005520  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
 12610  005522  0E64               	movlw	100
 12611  005524  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
 12612  005526  0E02               	movlw	2
 12613  005528  6F7E               	movwf	pwmDuty@channel& (0+255),b
 12614  00552A  ECEC  F018         	call	_pwmDuty	;wreg free
 12615  00552E  0012               	return		;funcret
 12616  005530                     __end_of_velocidadEstandar:
 12617                           	opt callstack 0
 12618                           
 12619 ;; *************** function _pwmDuty *****************
 12620 ;; Defined at:
 12621 ;;		line 20 in file "./pwm.h"
 12622 ;; Parameters:    Size  Location     Type
 12623 ;;  cicloTrabajo    2   28[BANK0 ] unsigned int 
 12624 ;;  channel         1   30[BANK0 ] unsigned char 
 12625 ;; Auto vars:     Size  Location     Type
 12626 ;;  duty            4   36[BANK0 ] long 
 12627 ;; Return value:  Size  Location     Type
 12628 ;;                  1    wreg      void 
 12629 ;; Registers used:
 12630 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12631 ;; Tracked objects:
 12632 ;;		On entry : 0/0
 12633 ;;		On exit  : 0/0
 12634 ;;		Unchanged: 0/0
 12635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12636 ;;      Params:         0       3       0       0       0       0       0       0       0
 12637 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12638 ;;      Temps:          0       5       0       0       0       0       0       0       0
 12639 ;;      Totals:         0      12       0       0       0       0       0       0       0
 12640 ;;Total ram usage:       12 bytes
 12641 ;; Hardware stack levels used:    1
 12642 ;; Hardware stack levels required when called:    4
 12643 ;; This function calls:
 12644 ;;		___fldiv
 12645 ;;		___flmul
 12646 ;;		___fltol
 12647 ;;		___xxtofl
 12648 ;;		_map
 12649 ;; This function is called by:
 12650 ;;		_PID
 12651 ;;		_velocidadEstandar
 12652 ;;		_velocidadBaja
 12653 ;; This function uses a non-reentrant model
 12654 ;;
 12655                           
 12656                           	psect	text55
 12657  0031D8                     __ptext55:
 12658                           	opt callstack 0
 12659  0031D8                     _pwmDuty:
 12660                           	opt callstack 24
 12661  0031D8                     
 12662                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
 12663  0031D8  C07C  F020         	movff	pwmDuty@cicloTrabajo,map@x
 12664  0031DC  C07D  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
 12665  0031E0  6A22               	clrf	(map@x+2)^0,c
 12666  0031E2  6A23               	clrf	(map@x+3)^0,c
 12667  0031E4  0E00               	movlw	0
 12668  0031E6  6E24               	movwf	map@in_min^0,c
 12669  0031E8  0E00               	movlw	0
 12670  0031EA  6E25               	movwf	(map@in_min+1)^0,c
 12671  0031EC  0E00               	movlw	0
 12672  0031EE  6E26               	movwf	(map@in_min+2)^0,c
 12673  0031F0  0E00               	movlw	0
 12674  0031F2  6E27               	movwf	(map@in_min+3)^0,c
 12675  0031F4  0E64               	movlw	100
 12676  0031F6  6E28               	movwf	map@in_max^0,c
 12677  0031F8  0E00               	movlw	0
 12678  0031FA  6E29               	movwf	(map@in_max+1)^0,c
 12679  0031FC  0E00               	movlw	0
 12680  0031FE  6E2A               	movwf	(map@in_max+2)^0,c
 12681  003200  0E00               	movlw	0
 12682  003202  6E2B               	movwf	(map@in_max+3)^0,c
 12683  003204  0E00               	movlw	0
 12684  003206  6E2C               	movwf	map@out_min^0,c
 12685  003208  0E00               	movlw	0
 12686  00320A  6E2D               	movwf	(map@out_min+1)^0,c
 12687  00320C  0E00               	movlw	0
 12688  00320E  6E2E               	movwf	(map@out_min+2)^0,c
 12689  003210  0E00               	movlw	0
 12690  003212  6E2F               	movwf	(map@out_min+3)^0,c
 12691  003214  0EFF               	movlw	255
 12692  003216  6E30               	movwf	map@out_max^0,c
 12693  003218  0E03               	movlw	3
 12694  00321A  6E31               	movwf	(map@out_max+1)^0,c
 12695  00321C  0E00               	movlw	0
 12696  00321E  6E32               	movwf	(map@out_max+2)^0,c
 12697  003220  0E00               	movlw	0
 12698  003222  6E33               	movwf	(map@out_max+3)^0,c
 12699  003224  ECB4  F025         	call	_map	;wreg free
 12700  003228  C020  F084         	movff	?_map,pwmDuty@duty
 12701  00322C  C021  F085         	movff	?_map+1,pwmDuty@duty+1
 12702  003230  C022  F086         	movff	?_map+2,pwmDuty@duty+2
 12703  003234  C023  F087         	movff	?_map+3,pwmDuty@duty+3
 12704  003238                     
 12705                           ;./pwm.h: 24:     if (duty < 1024) {
 12706  003238  0100               	movlb	0	; () banked
 12707  00323A  BF87               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
 12708  00323C  EF2C  F019         	goto	u9120
 12709  003240  5187               	movf	(pwmDuty@duty+3)& (0+255),w,b
 12710  003242  1186               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
 12711  003244  E107               	bnz	u9121
 12712  003246  0E04               	movlw	4
 12713  003248  5D85               	subwf	(pwmDuty@duty+1)& (0+255),w,b
 12714  00324A  B0D8               	btfsc	status,0,c
 12715  00324C  EF2A  F019         	goto	u9121
 12716  003250  EF2C  F019         	goto	u9120
 12717  003254                     u9121:
 12718  003254  EFC9  F019         	goto	l157
 12719  003258                     u9120:
 12720  003258                     
 12721                           ; BSR set to: 0
 12722                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
 12723  003258  0E00               	movlw	0
 12724  00325A  6E1F               	movwf	___flmul@a^0,c
 12725  00325C  0E00               	movlw	0
 12726  00325E  6E20               	movwf	(___flmul@a+1)^0,c
 12727  003260  0EFA               	movlw	250
 12728  003262  6E21               	movwf	(___flmul@a+2)^0,c
 12729  003264  0E43               	movlw	67
 12730  003266  6E22               	movwf	(___flmul@a+3)^0,c
 12731  003268  0E00               	movlw	0
 12732  00326A  6E48               	movwf	___fldiv@a^0,c
 12733  00326C  0EC0               	movlw	192
 12734  00326E  6E49               	movwf	(___fldiv@a+1)^0,c
 12735  003270  0E7F               	movlw	127
 12736  003272  6E4A               	movwf	(___fldiv@a+2)^0,c
 12737  003274  0E44               	movlw	68
 12738  003276  6E4B               	movwf	(___fldiv@a+3)^0,c
 12739  003278  C084  F00D         	movff	pwmDuty@duty,___xxtofl@val
 12740  00327C  C085  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
 12741  003280  C086  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
 12742  003284  C087  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
 12743  003288  0E01               	movlw	1
 12744  00328A  ECCA  F019         	call	___xxtofl
 12745  00328E  C00D  F044         	movff	?___xxtofl,___fldiv@b
 12746  003292  C00E  F045         	movff	?___xxtofl+1,___fldiv@b+1
 12747  003296  C00F  F046         	movff	?___xxtofl+2,___fldiv@b+2
 12748  00329A  C010  F047         	movff	?___xxtofl+3,___fldiv@b+3
 12749  00329E  EC79  F013         	call	___fldiv	;wreg free
 12750  0032A2  C044  F01B         	movff	?___fldiv,___flmul@b
 12751  0032A6  C045  F01C         	movff	?___fldiv+1,___flmul@b+1
 12752  0032AA  C046  F01D         	movff	?___fldiv+2,___flmul@b+2
 12753  0032AE  C047  F01E         	movff	?___fldiv+3,___flmul@b+3
 12754  0032B2  EC8B  F00F         	call	___flmul	;wreg free
 12755  0032B6  C01B  F072         	movff	?___flmul,___fltol@f1
 12756  0032BA  C01C  F073         	movff	?___flmul+1,___fltol@f1+1
 12757  0032BE  C01D  F074         	movff	?___flmul+2,___fltol@f1+2
 12758  0032C2  C01E  F075         	movff	?___flmul+3,___fltol@f1+3
 12759  0032C6  EC9E  F01F         	call	___fltol	;wreg free
 12760  0032CA  C072  F084         	movff	?___fltol,pwmDuty@duty
 12761  0032CE  C073  F085         	movff	?___fltol+1,pwmDuty@duty+1
 12762  0032D2  C074  F086         	movff	?___fltol+2,pwmDuty@duty+2
 12763  0032D6  C075  F087         	movff	?___fltol+3,pwmDuty@duty+3
 12764                           
 12765                           ;./pwm.h: 28:         switch (channel) {
 12766  0032DA  EFB3  F019         	goto	l8639
 12767  0032DE                     l8633:
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
 12771  0032DE  0E02               	movlw	2
 12772  0032E0  6F7F               	movwf	??_pwmDuty& (0+255),b
 12773  0032E2  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
 12774  0032E6  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
 12775  0032EA  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
 12776  0032EE  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
 12777  0032F2                     u9135:
 12778  0032F2  677F               	tstfsz	??_pwmDuty& (0+255),b
 12779  0032F4  EF7E  F019         	goto	u9136
 12780  0032F8  EF86  F019         	goto	u9137
 12781  0032FC                     u9136:
 12782  0032FC  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
 12783  0032FE  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
 12784  003300  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
 12785  003302  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
 12786  003304  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
 12787  003306  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
 12788  003308  EF79  F019         	goto	u9135
 12789  00330C                     u9137:
 12790  00330C  0100               	movlb	0	; () banked
 12791  00330E  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 12792  003310  6EBE               	movwf	190,c	;volatile
 12793                           
 12794                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
 12795  003312  0ECF               	movlw	207
 12796  003314  16BD               	andwf	189,f,c	;volatile
 12797                           
 12798                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
 12799  003316  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
 12800  003318  0BF0               	andlw	240
 12801  00331A  0B30               	andlw	48
 12802  00331C  12BD               	iorwf	189,f,c	;volatile
 12803                           
 12804                           ;./pwm.h: 34:                 break;
 12805  00331E  EFC9  F019         	goto	l157
 12806  003322                     l8635:
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
 12810  003322  0E02               	movlw	2
 12811  003324  6F7F               	movwf	??_pwmDuty& (0+255),b
 12812  003326  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
 12813  00332A  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
 12814  00332E  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
 12815  003332  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
 12816  003336                     u9145:
 12817  003336  677F               	tstfsz	??_pwmDuty& (0+255),b
 12818  003338  EFA0  F019         	goto	u9146
 12819  00333C  EFA8  F019         	goto	u9147
 12820  003340                     u9146:
 12821  003340  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
 12822  003342  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
 12823  003344  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
 12824  003346  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
 12825  003348  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
 12826  00334A  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
 12827  00334C  EF9B  F019         	goto	u9145
 12828  003350                     u9147:
 12829  003350  0100               	movlb	0	; () banked
 12830  003352  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 12831  003354  6EBB               	movwf	187,c	;volatile
 12832                           
 12833                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
 12834  003356  0ECF               	movlw	207
 12835  003358  16BA               	andwf	186,f,c	;volatile
 12836                           
 12837                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
 12838  00335A  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
 12839  00335C  0BF0               	andlw	240
 12840  00335E  0B30               	andlw	48
 12841  003360  12BA               	iorwf	186,f,c	;volatile
 12842                           
 12843                           ;./pwm.h: 40:                 break;
 12844  003362  EFC9  F019         	goto	l157
 12845  003366                     l8639:
 12846  003366  0100               	movlb	0	; () banked
 12847  003368  517E               	movf	pwmDuty@channel& (0+255),w,b
 12848  00336A  6F7F               	movwf	??_pwmDuty& (0+255),b
 12849  00336C  6B80               	clrf	(??_pwmDuty+1)& (0+255),b
 12850                           
 12851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12852                           ; Switch size 1, requested type "simple"
 12853                           ; Number of cases is 1, Range of values is 0 to 0
 12854                           ; switch strategies available:
 12855                           ; Name         Instructions Cycles
 12856                           ; simple_byte            4     3 (average)
 12857                           ;	Chosen strategy is simple_byte
 12858  00336E  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 12859  003370  0A00               	xorlw	0	; case 0
 12860  003372  B4D8               	btfsc	status,2,c
 12861  003374  EFBE  F019         	goto	l11135
 12862  003378  EFC9  F019         	goto	l157
 12863  00337C                     l11135:
 12864                           
 12865                           ; BSR set to: 0
 12866                           ; Switch size 1, requested type "simple"
 12867                           ; Number of cases is 2, Range of values is 1 to 2
 12868                           ; switch strategies available:
 12869                           ; Name         Instructions Cycles
 12870                           ; simple_byte            7     4 (average)
 12871                           ;	Chosen strategy is simple_byte
 12872  00337C  517F               	movf	??_pwmDuty& (0+255),w,b
 12873  00337E  0A01               	xorlw	1	; case 1
 12874  003380  B4D8               	btfsc	status,2,c
 12875  003382  EF6F  F019         	goto	l8633
 12876  003386  0A03               	xorlw	3	; case 2
 12877  003388  B4D8               	btfsc	status,2,c
 12878  00338A  EF91  F019         	goto	l8635
 12879  00338E  EFC9  F019         	goto	l157
 12880  003392                     l157:
 12881                           
 12882                           ; BSR set to: 0
 12883  003392  0012               	return		;funcret
 12884  003394                     __end_of_pwmDuty:
 12885                           	opt callstack 0
 12886                           
 12887 ;; *************** function _map *****************
 12888 ;; Defined at:
 12889 ;;		line 16 in file "./pwm.h"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;  x               4   31[COMRAM] long 
 12892 ;;  in_min          4   35[COMRAM] long 
 12893 ;;  in_max          4   39[COMRAM] long 
 12894 ;;  out_min         4   43[COMRAM] long 
 12895 ;;  out_max         4   47[COMRAM] long 
 12896 ;; Auto vars:     Size  Location     Type
 12897 ;;		None
 12898 ;; Return value:  Size  Location     Type
 12899 ;;                  4   31[COMRAM] long 
 12900 ;; Registers used:
 12901 ;;		wreg, status,2, status,0, cstack
 12902 ;; Tracked objects:
 12903 ;;		On entry : 0/0
 12904 ;;		On exit  : 0/0
 12905 ;;		Unchanged: 0/0
 12906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12907 ;;      Params:        20       0       0       0       0       0       0       0       0
 12908 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12909 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12910 ;;      Totals:        20       0       0       0       0       0       0       0       0
 12911 ;;Total ram usage:       20 bytes
 12912 ;; Hardware stack levels used:    1
 12913 ;; Hardware stack levels required when called:    3
 12914 ;; This function calls:
 12915 ;;		___aldiv
 12916 ;;		___lmul
 12917 ;; This function is called by:
 12918 ;;		_pwmDuty
 12919 ;; This function uses a non-reentrant model
 12920 ;;
 12921                           
 12922                           	psect	text56
 12923  004B68                     __ptext56:
 12924                           	opt callstack 0
 12925  004B68                     _map:
 12926                           	opt callstack 24
 12927  004B68                     
 12928                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
 12929  004B68  5024               	movf	map@in_min^0,w,c
 12930  004B6A  5C20               	subwf	map@x^0,w,c
 12931  004B6C  6E06               	movwf	___lmul@multiplier^0,c
 12932  004B6E  5025               	movf	(map@in_min+1)^0,w,c
 12933  004B70  5821               	subwfb	(map@x+1)^0,w,c
 12934  004B72  6E07               	movwf	(___lmul@multiplier+1)^0,c
 12935  004B74  5026               	movf	(map@in_min+2)^0,w,c
 12936  004B76  5822               	subwfb	(map@x+2)^0,w,c
 12937  004B78  6E08               	movwf	(___lmul@multiplier+2)^0,c
 12938  004B7A  5027               	movf	(map@in_min+3)^0,w,c
 12939  004B7C  5823               	subwfb	(map@x+3)^0,w,c
 12940  004B7E  6E09               	movwf	(___lmul@multiplier+3)^0,c
 12941  004B80  502C               	movf	map@out_min^0,w,c
 12942  004B82  5C30               	subwf	map@out_max^0,w,c
 12943  004B84  6E0A               	movwf	___lmul@multiplicand^0,c
 12944  004B86  502D               	movf	(map@out_min+1)^0,w,c
 12945  004B88  5831               	subwfb	(map@out_max+1)^0,w,c
 12946  004B8A  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
 12947  004B8C  502E               	movf	(map@out_min+2)^0,w,c
 12948  004B8E  5832               	subwfb	(map@out_max+2)^0,w,c
 12949  004B90  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
 12950  004B92  502F               	movf	(map@out_min+3)^0,w,c
 12951  004B94  5833               	subwfb	(map@out_max+3)^0,w,c
 12952  004B96  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
 12953  004B98  ECCF  F026         	call	___lmul	;wreg free
 12954  004B9C  C006  F012         	movff	?___lmul,___aldiv@dividend
 12955  004BA0  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
 12956  004BA4  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
 12957  004BA8  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
 12958  004BAC  5024               	movf	map@in_min^0,w,c
 12959  004BAE  5C28               	subwf	map@in_max^0,w,c
 12960  004BB0  6E16               	movwf	___aldiv@divisor^0,c
 12961  004BB2  5025               	movf	(map@in_min+1)^0,w,c
 12962  004BB4  5829               	subwfb	(map@in_max+1)^0,w,c
 12963  004BB6  6E17               	movwf	(___aldiv@divisor+1)^0,c
 12964  004BB8  5026               	movf	(map@in_min+2)^0,w,c
 12965  004BBA  582A               	subwfb	(map@in_max+2)^0,w,c
 12966  004BBC  6E18               	movwf	(___aldiv@divisor+2)^0,c
 12967  004BBE  5027               	movf	(map@in_min+3)^0,w,c
 12968  004BC0  582B               	subwfb	(map@in_max+3)^0,w,c
 12969  004BC2  6E19               	movwf	(___aldiv@divisor+3)^0,c
 12970  004BC4  EC18  F01F         	call	___aldiv	;wreg free
 12971  004BC8  502C               	movf	map@out_min^0,w,c
 12972  004BCA  2412               	addwf	?___aldiv^0,w,c
 12973  004BCC  6E20               	movwf	?_map^0,c
 12974  004BCE  502D               	movf	(map@out_min+1)^0,w,c
 12975  004BD0  2013               	addwfc	(?___aldiv+1)^0,w,c
 12976  004BD2  6E21               	movwf	(?_map+1)^0,c
 12977  004BD4  502E               	movf	(map@out_min+2)^0,w,c
 12978  004BD6  2014               	addwfc	(?___aldiv+2)^0,w,c
 12979  004BD8  6E22               	movwf	(?_map+2)^0,c
 12980  004BDA  502F               	movf	(map@out_min+3)^0,w,c
 12981  004BDC  2015               	addwfc	(?___aldiv+3)^0,w,c
 12982  004BDE  6E23               	movwf	(?_map+3)^0,c
 12983  004BE0  0012               	return		;funcret
 12984  004BE2                     __end_of_map:
 12985                           	opt callstack 0
 12986                           
 12987 ;; *************** function ___lmul *****************
 12988 ;; Defined at:
 12989 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 12990 ;; Parameters:    Size  Location     Type
 12991 ;;  multiplier      4    5[COMRAM] unsigned long 
 12992 ;;  multiplicand    4    9[COMRAM] unsigned long 
 12993 ;; Auto vars:     Size  Location     Type
 12994 ;;  product         4   13[COMRAM] unsigned long 
 12995 ;; Return value:  Size  Location     Type
 12996 ;;                  4    5[COMRAM] unsigned long 
 12997 ;; Registers used:
 12998 ;;		wreg, status,2, status,0
 12999 ;; Tracked objects:
 13000 ;;		On entry : 0/0
 13001 ;;		On exit  : 0/0
 13002 ;;		Unchanged: 0/0
 13003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13004 ;;      Params:         8       0       0       0       0       0       0       0       0
 13005 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13006 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13007 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13008 ;;Total ram usage:       12 bytes
 13009 ;; Hardware stack levels used:    1
 13010 ;; Hardware stack levels required when called:    2
 13011 ;; This function calls:
 13012 ;;		Nothing
 13013 ;; This function is called by:
 13014 ;;		_map
 13015 ;; This function uses a non-reentrant model
 13016 ;;
 13017                           
 13018                           	psect	text57
 13019  004D9E                     __ptext57:
 13020                           	opt callstack 0
 13021  004D9E                     ___lmul:
 13022                           	opt callstack 24
 13023  004D9E  0E00               	movlw	0
 13024  004DA0  6E0E               	movwf	___lmul@product^0,c
 13025  004DA2  0E00               	movlw	0
 13026  004DA4  6E0F               	movwf	(___lmul@product+1)^0,c
 13027  004DA6  0E00               	movlw	0
 13028  004DA8  6E10               	movwf	(___lmul@product+2)^0,c
 13029  004DAA  0E00               	movlw	0
 13030  004DAC  6E11               	movwf	(___lmul@product+3)^0,c
 13031  004DAE                     l7989:
 13032  004DAE  A006               	btfss	___lmul@multiplier^0,0,c
 13033  004DB0  EFDC  F026         	goto	u8021
 13034  004DB4  EFDE  F026         	goto	u8020
 13035  004DB8                     u8021:
 13036  004DB8  EFE6  F026         	goto	l7993
 13037  004DBC                     u8020:
 13038  004DBC  500A               	movf	___lmul@multiplicand^0,w,c
 13039  004DBE  260E               	addwf	___lmul@product^0,f,c
 13040  004DC0  500B               	movf	(___lmul@multiplicand+1)^0,w,c
 13041  004DC2  220F               	addwfc	(___lmul@product+1)^0,f,c
 13042  004DC4  500C               	movf	(___lmul@multiplicand+2)^0,w,c
 13043  004DC6  2210               	addwfc	(___lmul@product+2)^0,f,c
 13044  004DC8  500D               	movf	(___lmul@multiplicand+3)^0,w,c
 13045  004DCA  2211               	addwfc	(___lmul@product+3)^0,f,c
 13046  004DCC                     l7993:
 13047  004DCC  90D8               	bcf	status,0,c
 13048  004DCE  360A               	rlcf	___lmul@multiplicand^0,f,c
 13049  004DD0  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
 13050  004DD2  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
 13051  004DD4  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
 13052  004DD6  90D8               	bcf	status,0,c
 13053  004DD8  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
 13054  004DDA  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
 13055  004DDC  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
 13056  004DDE  3206               	rrcf	___lmul@multiplier^0,f,c
 13057  004DE0  5006               	movf	___lmul@multiplier^0,w,c
 13058  004DE2  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
 13059  004DE4  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
 13060  004DE6  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
 13061  004DE8  A4D8               	btfss	status,2,c
 13062  004DEA  EFF9  F026         	goto	u8031
 13063  004DEE  EFFB  F026         	goto	u8030
 13064  004DF2                     u8031:
 13065  004DF2  EFD7  F026         	goto	l7989
 13066  004DF6                     u8030:
 13067  004DF6  C00E  F006         	movff	___lmul@product,?___lmul
 13068  004DFA  C00F  F007         	movff	___lmul@product+1,?___lmul+1
 13069  004DFE  C010  F008         	movff	___lmul@product+2,?___lmul+2
 13070  004E02  C011  F009         	movff	___lmul@product+3,?___lmul+3
 13071  004E06  0012               	return		;funcret
 13072  004E08                     __end_of___lmul:
 13073                           	opt callstack 0
 13074                           
 13075 ;; *************** function ___xxtofl *****************
 13076 ;; Defined at:
 13077 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 13078 ;; Parameters:    Size  Location     Type
 13079 ;;  sign            1    wreg     unsigned char 
 13080 ;;  val             4   12[COMRAM] long 
 13081 ;; Auto vars:     Size  Location     Type
 13082 ;;  sign            1   20[COMRAM] unsigned char 
 13083 ;;  arg             4   22[COMRAM] unsigned long 
 13084 ;;  exp             1   21[COMRAM] unsigned char 
 13085 ;; Return value:  Size  Location     Type
 13086 ;;                  4   12[COMRAM] unsigned char 
 13087 ;; Registers used:
 13088 ;;		wreg, status,2, status,0
 13089 ;; Tracked objects:
 13090 ;;		On entry : 0/0
 13091 ;;		On exit  : 0/0
 13092 ;;		Unchanged: 0/0
 13093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13094 ;;      Params:         4       0       0       0       0       0       0       0       0
 13095 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13096 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13097 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13098 ;;Total ram usage:       14 bytes
 13099 ;; Hardware stack levels used:    1
 13100 ;; Hardware stack levels required when called:    2
 13101 ;; This function calls:
 13102 ;;		Nothing
 13103 ;; This function is called by:
 13104 ;;		_pwmDuty
 13105 ;;		_dameDistancia
 13106 ;;		_PID
 13107 ;; This function uses a non-reentrant model
 13108 ;;
 13109                           
 13110                           	psect	text58
 13111  003394                     __ptext58:
 13112                           	opt callstack 0
 13113  003394                     ___xxtofl:
 13114                           	opt callstack 25
 13115                           
 13116                           ;incstack = 0
 13117                           ;___xxtofl@sign stored from wreg
 13118  003394  6E15               	movwf	___xxtofl@sign^0,c
 13119  003396  5015               	movf	___xxtofl@sign^0,w,c
 13120  003398  B4D8               	btfsc	status,2,c
 13121  00339A  EFD1  F019         	goto	u9021
 13122  00339E  EFD3  F019         	goto	u9020
 13123  0033A2                     u9021:
 13124  0033A2  EFF5  F019         	goto	l1604
 13125  0033A6                     u9020:
 13126  0033A6  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 13127  0033A8  EFDA  F019         	goto	u9030
 13128  0033AC  EFD8  F019         	goto	u9031
 13129  0033B0                     u9031:
 13130  0033B0  EFF5  F019         	goto	l1604
 13131  0033B4                     u9030:
 13132  0033B4  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 13133  0033B8  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 13134  0033BC  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 13135  0033C0  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 13136  0033C4  1E11               	comf	??___xxtofl^0,f,c
 13137  0033C6  1E12               	comf	(??___xxtofl+1)^0,f,c
 13138  0033C8  1E13               	comf	(??___xxtofl+2)^0,f,c
 13139  0033CA  1E14               	comf	(??___xxtofl+3)^0,f,c
 13140  0033CC  2A11               	incf	??___xxtofl^0,f,c
 13141  0033CE  0E00               	movlw	0
 13142  0033D0  2212               	addwfc	(??___xxtofl+1)^0,f,c
 13143  0033D2  2213               	addwfc	(??___xxtofl+2)^0,f,c
 13144  0033D4  2214               	addwfc	(??___xxtofl+3)^0,f,c
 13145  0033D6  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 13146  0033DA  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 13147  0033DE  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 13148  0033E2  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 13149  0033E6  EFFD  F019         	goto	l8587
 13150  0033EA                     l1604:
 13151  0033EA  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 13152  0033EE  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13153  0033F2  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13154  0033F6  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13155  0033FA                     l8587:
 13156  0033FA  500D               	movf	___xxtofl@val^0,w,c
 13157  0033FC  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 13158  0033FE  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 13159  003400  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 13160  003402  A4D8               	btfss	status,2,c
 13161  003404  EF06  F01A         	goto	u9041
 13162  003408  EF08  F01A         	goto	u9040
 13163  00340C                     u9041:
 13164  00340C  EF12  F01A         	goto	l8593
 13165  003410                     u9040:
 13166  003410  0E00               	movlw	0
 13167  003412  6E0D               	movwf	?___xxtofl^0,c
 13168  003414  0E00               	movlw	0
 13169  003416  6E0E               	movwf	(?___xxtofl+1)^0,c
 13170  003418  0E00               	movlw	0
 13171  00341A  6E0F               	movwf	(?___xxtofl+2)^0,c
 13172  00341C  0E00               	movlw	0
 13173  00341E  6E10               	movwf	(?___xxtofl+3)^0,c
 13174  003420  EFA3  F01A         	goto	l1607
 13175  003424                     l8593:
 13176  003424  0E96               	movlw	150
 13177  003426  6E16               	movwf	___xxtofl@exp^0,c
 13178  003428  EF1C  F01A         	goto	l8597
 13179  00342C                     l8595:
 13180  00342C  2A16               	incf	___xxtofl@exp^0,f,c
 13181  00342E  90D8               	bcf	status,0,c
 13182  003430  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 13183  003432  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 13184  003434  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 13185  003436  3217               	rrcf	___xxtofl@arg^0,f,c
 13186  003438                     l8597:
 13187  003438  0E00               	movlw	0
 13188  00343A  1417               	andwf	___xxtofl@arg^0,w,c
 13189  00343C  6E11               	movwf	??___xxtofl^0,c
 13190  00343E  0E00               	movlw	0
 13191  003440  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 13192  003442  6E12               	movwf	(??___xxtofl+1)^0,c
 13193  003444  0E00               	movlw	0
 13194  003446  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 13195  003448  6E13               	movwf	(??___xxtofl+2)^0,c
 13196  00344A  0EFE               	movlw	254
 13197  00344C  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 13198  00344E  6E14               	movwf	(??___xxtofl+3)^0,c
 13199  003450  5011               	movf	??___xxtofl^0,w,c
 13200  003452  1012               	iorwf	(??___xxtofl+1)^0,w,c
 13201  003454  1013               	iorwf	(??___xxtofl+2)^0,w,c
 13202  003456  1014               	iorwf	(??___xxtofl+3)^0,w,c
 13203  003458  A4D8               	btfss	status,2,c
 13204  00345A  EF31  F01A         	goto	u9051
 13205  00345E  EF33  F01A         	goto	u9050
 13206  003462                     u9051:
 13207  003462  EF16  F01A         	goto	l8595
 13208  003466                     u9050:
 13209  003466  EF41  F01A         	goto	l1611
 13210  00346A                     l8599:
 13211  00346A  2A16               	incf	___xxtofl@exp^0,f,c
 13212  00346C  0E01               	movlw	1
 13213  00346E  2617               	addwf	___xxtofl@arg^0,f,c
 13214  003470  0E00               	movlw	0
 13215  003472  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 13216  003474  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 13217  003476  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 13218  003478  90D8               	bcf	status,0,c
 13219  00347A  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 13220  00347C  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 13221  00347E  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 13222  003480  3217               	rrcf	___xxtofl@arg^0,f,c
 13223  003482                     l1611:
 13224  003482  0E00               	movlw	0
 13225  003484  1417               	andwf	___xxtofl@arg^0,w,c
 13226  003486  6E11               	movwf	??___xxtofl^0,c
 13227  003488  0E00               	movlw	0
 13228  00348A  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 13229  00348C  6E12               	movwf	(??___xxtofl+1)^0,c
 13230  00348E  0E00               	movlw	0
 13231  003490  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 13232  003492  6E13               	movwf	(??___xxtofl+2)^0,c
 13233  003494  0EFF               	movlw	255
 13234  003496  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 13235  003498  6E14               	movwf	(??___xxtofl+3)^0,c
 13236  00349A  5011               	movf	??___xxtofl^0,w,c
 13237  00349C  1012               	iorwf	(??___xxtofl+1)^0,w,c
 13238  00349E  1013               	iorwf	(??___xxtofl+2)^0,w,c
 13239  0034A0  1014               	iorwf	(??___xxtofl+3)^0,w,c
 13240  0034A2  A4D8               	btfss	status,2,c
 13241  0034A4  EF56  F01A         	goto	u9061
 13242  0034A8  EF58  F01A         	goto	u9060
 13243  0034AC                     u9061:
 13244  0034AC  EF35  F01A         	goto	l8599
 13245  0034B0                     u9060:
 13246  0034B0  EF60  F01A         	goto	l8607
 13247  0034B4                     l8605:
 13248  0034B4  0616               	decf	___xxtofl@exp^0,f,c
 13249  0034B6  90D8               	bcf	status,0,c
 13250  0034B8  3617               	rlcf	___xxtofl@arg^0,f,c
 13251  0034BA  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 13252  0034BC  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 13253  0034BE  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 13254  0034C0                     l8607:
 13255  0034C0  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 13256  0034C2  EF65  F01A         	goto	u9071
 13257  0034C6  EF67  F01A         	goto	u9070
 13258  0034CA                     u9071:
 13259  0034CA  EF6F  F01A         	goto	l1618
 13260  0034CE                     u9070:
 13261  0034CE  0E02               	movlw	2
 13262  0034D0  6016               	cpfslt	___xxtofl@exp^0,c
 13263  0034D2  EF6D  F01A         	goto	u9081
 13264  0034D6  EF6F  F01A         	goto	u9080
 13265  0034DA                     u9081:
 13266  0034DA  EF5A  F01A         	goto	l8605
 13267  0034DE                     u9080:
 13268  0034DE                     l1618:
 13269  0034DE  B016               	btfsc	___xxtofl@exp^0,0,c
 13270  0034E0  EF74  F01A         	goto	u9091
 13271  0034E4  EF76  F01A         	goto	u9090
 13272  0034E8                     u9091:
 13273  0034E8  EF77  F01A         	goto	l8613
 13274  0034EC                     u9090:
 13275  0034EC  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 13276  0034EE                     l8613:
 13277  0034EE  90D8               	bcf	status,0,c
 13278  0034F0  3216               	rrcf	___xxtofl@exp^0,f,c
 13279  0034F2  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 13280  0034F6  6A12               	clrf	(??___xxtofl+1)^0,c
 13281  0034F8  6A13               	clrf	(??___xxtofl+2)^0,c
 13282  0034FA  6A14               	clrf	(??___xxtofl+3)^0,c
 13283  0034FC  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 13284  003500  6A13               	clrf	(??___xxtofl+2)^0,c
 13285  003502  6A12               	clrf	(??___xxtofl+1)^0,c
 13286  003504  6A11               	clrf	??___xxtofl^0,c
 13287  003506  5011               	movf	??___xxtofl^0,w,c
 13288  003508  1217               	iorwf	___xxtofl@arg^0,f,c
 13289  00350A  5012               	movf	(??___xxtofl+1)^0,w,c
 13290  00350C  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 13291  00350E  5013               	movf	(??___xxtofl+2)^0,w,c
 13292  003510  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 13293  003512  5014               	movf	(??___xxtofl+3)^0,w,c
 13294  003514  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 13295  003516  5015               	movf	___xxtofl@sign^0,w,c
 13296  003518  B4D8               	btfsc	status,2,c
 13297  00351A  EF91  F01A         	goto	u9101
 13298  00351E  EF93  F01A         	goto	u9100
 13299  003522                     u9101:
 13300  003522  EF9B  F01A         	goto	l8623
 13301  003526                     u9100:
 13302  003526  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 13303  003528  EF9A  F01A         	goto	u9110
 13304  00352C  EF98  F01A         	goto	u9111
 13305  003530                     u9111:
 13306  003530  EF9B  F01A         	goto	l8623
 13307  003534                     u9110:
 13308  003534  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 13309  003536                     l8623:
 13310  003536  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 13311  00353A  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 13312  00353E  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 13313  003542  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 13314  003546                     l1607:
 13315  003546  0012               	return		;funcret
 13316  003548                     __end_of___xxtofl:
 13317                           	opt callstack 0
 13318                           
 13319 ;; *************** function ___fltol *****************
 13320 ;; Defined at:
 13321 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 13322 ;; Parameters:    Size  Location     Type
 13323 ;;  f1              4   18[BANK0 ] unsigned char 
 13324 ;; Auto vars:     Size  Location     Type
 13325 ;;  exp1            1   27[BANK0 ] unsigned char 
 13326 ;;  sign1           1   26[BANK0 ] unsigned char 
 13327 ;; Return value:  Size  Location     Type
 13328 ;;                  4   18[BANK0 ] long 
 13329 ;; Registers used:
 13330 ;;		wreg, status,2, status,0
 13331 ;; Tracked objects:
 13332 ;;		On entry : 0/0
 13333 ;;		On exit  : 0/0
 13334 ;;		Unchanged: 0/0
 13335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13336 ;;      Params:         0       4       0       0       0       0       0       0       0
 13337 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13338 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13339 ;;      Totals:         0      10       0       0       0       0       0       0       0
 13340 ;;Total ram usage:       10 bytes
 13341 ;; Hardware stack levels used:    1
 13342 ;; Hardware stack levels required when called:    2
 13343 ;; This function calls:
 13344 ;;		Nothing
 13345 ;; This function is called by:
 13346 ;;		_pwmDuty
 13347 ;;		_PID
 13348 ;;		_efgtoa
 13349 ;; This function uses a non-reentrant model
 13350 ;;
 13351                           
 13352                           	psect	text59
 13353  003F3C                     __ptext59:
 13354                           	opt callstack 0
 13355  003F3C                     ___fltol:
 13356                           	opt callstack 23
 13357  003F3C  0100               	movlb	0	; () banked
 13358  003F3E  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
 13359  003F40  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
 13360  003F42  6F7B               	movwf	___fltol@exp1& (0+255),b
 13361  003F44  517B               	movf	___fltol@exp1& (0+255),w,b
 13362  003F46  A4D8               	btfss	status,2,c
 13363  003F48  EFA8  F01F         	goto	u8951
 13364  003F4C  EFAA  F01F         	goto	u8950
 13365  003F50                     u8951:
 13366  003F50  EFB4  F01F         	goto	l8543
 13367  003F54                     u8950:
 13368  003F54                     l8539:
 13369                           
 13370                           ; BSR set to: 0
 13371  003F54  0E00               	movlw	0
 13372  003F56  6F72               	movwf	?___fltol& (0+255),b
 13373  003F58  0E00               	movlw	0
 13374  003F5A  6F73               	movwf	(?___fltol+1)& (0+255),b
 13375  003F5C  0E00               	movlw	0
 13376  003F5E  6F74               	movwf	(?___fltol+2)& (0+255),b
 13377  003F60  0E00               	movlw	0
 13378  003F62  6F75               	movwf	(?___fltol+3)& (0+255),b
 13379  003F64  EF21  F020         	goto	l1246
 13380  003F68                     l8543:
 13381                           
 13382                           ; BSR set to: 0
 13383  003F68  C072  F076         	movff	___fltol@f1,??___fltol
 13384  003F6C  C073  F077         	movff	___fltol@f1+1,??___fltol+1
 13385  003F70  C074  F078         	movff	___fltol@f1+2,??___fltol+2
 13386  003F74  C075  F079         	movff	___fltol@f1+3,??___fltol+3
 13387  003F78  0E20               	movlw	32
 13388  003F7A  EFC4  F01F         	goto	u8960
 13389  003F7E                     u8965:
 13390  003F7E  90D8               	bcf	status,0,c
 13391  003F80  3379               	rrcf	(??___fltol+3)& (0+255),f,b
 13392  003F82  3378               	rrcf	(??___fltol+2)& (0+255),f,b
 13393  003F84  3377               	rrcf	(??___fltol+1)& (0+255),f,b
 13394  003F86  3376               	rrcf	??___fltol& (0+255),f,b
 13395  003F88                     u8960:
 13396  003F88  2EE8               	decfsz	wreg,f,c
 13397  003F8A  EFBF  F01F         	goto	u8965
 13398  003F8E  5176               	movf	??___fltol& (0+255),w,b
 13399  003F90  6F7A               	movwf	___fltol@sign1& (0+255),b
 13400  003F92                     
 13401                           ; BSR set to: 0
 13402  003F92  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
 13403  003F94                     
 13404                           ; BSR set to: 0
 13405  003F94  0EFF               	movlw	255
 13406  003F96  1772               	andwf	___fltol@f1& (0+255),f,b
 13407  003F98  0EFF               	movlw	255
 13408  003F9A  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
 13409  003F9C  0EFF               	movlw	255
 13410  003F9E  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
 13411  003FA0  0E00               	movlw	0
 13412  003FA2  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
 13413  003FA4                     
 13414                           ; BSR set to: 0
 13415  003FA4  0E96               	movlw	150
 13416  003FA6  5F7B               	subwf	___fltol@exp1& (0+255),f,b
 13417  003FA8                     
 13418                           ; BSR set to: 0
 13419  003FA8  BF7B               	btfsc	___fltol@exp1& (0+255),7,b
 13420  003FAA  EFDB  F01F         	goto	u8970
 13421  003FAE  EFD9  F01F         	goto	u8971
 13422  003FB2                     u8971:
 13423  003FB2  EFF1  F01F         	goto	l8563
 13424  003FB6                     u8970:
 13425  003FB6                     
 13426                           ; BSR set to: 0
 13427  003FB6  517B               	movf	___fltol@exp1& (0+255),w,b
 13428  003FB8  0A80               	xorlw	128
 13429  003FBA  0F97               	addlw	151
 13430  003FBC  B0D8               	btfsc	status,0,c
 13431  003FBE  EFE3  F01F         	goto	u8981
 13432  003FC2  EFE5  F01F         	goto	u8980
 13433  003FC6                     u8981:
 13434  003FC6  EFE7  F01F         	goto	l8559
 13435  003FCA                     u8980:
 13436  003FCA  EFAA  F01F         	goto	l8539
 13437  003FCE                     l8559:
 13438                           
 13439                           ; BSR set to: 0
 13440  003FCE  90D8               	bcf	status,0,c
 13441  003FD0  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13442  003FD2  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13443  003FD4  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13444  003FD6  3372               	rrcf	___fltol@f1& (0+255),f,b
 13445  003FD8                     
 13446                           ; BSR set to: 0
 13447  003FD8  3F7B               	incfsz	___fltol@exp1& (0+255),f,b
 13448  003FDA  EFE7  F01F         	goto	l8559
 13449  003FDE  EF09  F020         	goto	l8573
 13450  003FE2                     l8563:
 13451                           
 13452                           ; BSR set to: 0
 13453  003FE2  0E1F               	movlw	31
 13454  003FE4  657B               	cpfsgt	___fltol@exp1& (0+255),b
 13455  003FE6  EFF7  F01F         	goto	u8991
 13456  003FEA  EFF9  F01F         	goto	u8990
 13457  003FEE                     u8991:
 13458  003FEE  EF01  F020         	goto	l8571
 13459  003FF2                     u8990:
 13460  003FF2  EFAA  F01F         	goto	l8539
 13461  003FF6                     l8569:
 13462                           
 13463                           ; BSR set to: 0
 13464  003FF6  90D8               	bcf	status,0,c
 13465  003FF8  3772               	rlcf	___fltol@f1& (0+255),f,b
 13466  003FFA  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13467  003FFC  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13468  003FFE  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13469  004000  077B               	decf	___fltol@exp1& (0+255),f,b
 13470  004002                     l8571:
 13471                           
 13472                           ; BSR set to: 0
 13473  004002  517B               	movf	___fltol@exp1& (0+255),w,b
 13474  004004  A4D8               	btfss	status,2,c
 13475  004006  EF07  F020         	goto	u9001
 13476  00400A  EF09  F020         	goto	u9000
 13477  00400E                     u9001:
 13478  00400E  EFFB  F01F         	goto	l8569
 13479  004012                     u9000:
 13480  004012                     l8573:
 13481                           
 13482                           ; BSR set to: 0
 13483  004012  517A               	movf	___fltol@sign1& (0+255),w,b
 13484  004014  B4D8               	btfsc	status,2,c
 13485  004016  EF0F  F020         	goto	u9011
 13486  00401A  EF11  F020         	goto	u9010
 13487  00401E                     u9011:
 13488  00401E  EF19  F020         	goto	l8577
 13489  004022                     u9010:
 13490  004022                     
 13491                           ; BSR set to: 0
 13492  004022  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
 13493  004024  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
 13494  004026  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
 13495  004028  6D72               	negf	___fltol@f1& (0+255),b
 13496  00402A  0E00               	movlw	0
 13497  00402C  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13498  00402E  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13499  004030  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13500  004032                     l8577:
 13501                           
 13502                           ; BSR set to: 0
 13503  004032  C072  F072         	movff	___fltol@f1,?___fltol
 13504  004036  C073  F073         	movff	___fltol@f1+1,?___fltol+1
 13505  00403A  C074  F074         	movff	___fltol@f1+2,?___fltol+2
 13506  00403E  C075  F075         	movff	___fltol@f1+3,?___fltol+3
 13507  004042                     l1246:
 13508                           
 13509                           ; BSR set to: 0
 13510  004042  0012               	return		;funcret
 13511  004044                     __end_of___fltol:
 13512                           	opt callstack 0
 13513                           
 13514 ;; *************** function ___flmul *****************
 13515 ;; Defined at:
 13516 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 13517 ;; Parameters:    Size  Location     Type
 13518 ;;  b               4   26[COMRAM] long 
 13519 ;;  a               4   30[COMRAM] long 
 13520 ;; Auto vars:     Size  Location     Type
 13521 ;;  prod            4   45[COMRAM] struct .
 13522 ;;  grs             4   40[COMRAM] unsigned long 
 13523 ;;  temp            2   49[COMRAM] struct .
 13524 ;;  bexp            1   44[COMRAM] unsigned char 
 13525 ;;  aexp            1   39[COMRAM] unsigned char 
 13526 ;;  sign            1   38[COMRAM] unsigned char 
 13527 ;; Return value:  Size  Location     Type
 13528 ;;                  4   26[COMRAM] unsigned char 
 13529 ;; Registers used:
 13530 ;;		wreg, status,2, status,0, prodl, prodh
 13531 ;; Tracked objects:
 13532 ;;		On entry : 0/0
 13533 ;;		On exit  : 0/0
 13534 ;;		Unchanged: 0/0
 13535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13536 ;;      Params:         8       0       0       0       0       0       0       0       0
 13537 ;;      Locals:        13       0       0       0       0       0       0       0       0
 13538 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13539 ;;      Totals:        25       0       0       0       0       0       0       0       0
 13540 ;;Total ram usage:       25 bytes
 13541 ;; Hardware stack levels used:    1
 13542 ;; Hardware stack levels required when called:    2
 13543 ;; This function calls:
 13544 ;;		Nothing
 13545 ;; This function is called by:
 13546 ;;		_pwmDuty
 13547 ;;		_PID
 13548 ;;		_efgtoa
 13549 ;;		_roundf
 13550 ;; This function uses a non-reentrant model
 13551 ;;
 13552                           
 13553                           	psect	text60
 13554  001F16                     __ptext60:
 13555                           	opt callstack 0
 13556  001F16                     ___flmul:
 13557                           	opt callstack 23
 13558  001F16  501E               	movf	(___flmul@b+3)^0,w,c
 13559  001F18  0B80               	andlw	128
 13560  001F1A  6E27               	movwf	___flmul@sign^0,c
 13561  001F1C  501E               	movf	(___flmul@b+3)^0,w,c
 13562  001F1E  241E               	addwf	(___flmul@b+3)^0,w,c
 13563  001F20  6E2D               	movwf	___flmul@bexp^0,c
 13564  001F22  AE1D               	btfss	(___flmul@b+2)^0,7,c
 13565  001F24  EF96  F00F         	goto	u8761
 13566  001F28  EF98  F00F         	goto	u8760
 13567  001F2C                     u8761:
 13568  001F2C  EF99  F00F         	goto	l8413
 13569  001F30                     u8760:
 13570  001F30  802D               	bsf	___flmul@bexp^0,0,c
 13571  001F32                     l8413:
 13572  001F32  502D               	movf	___flmul@bexp^0,w,c
 13573  001F34  B4D8               	btfsc	status,2,c
 13574  001F36  EF9F  F00F         	goto	u8771
 13575  001F3A  EFA1  F00F         	goto	u8770
 13576  001F3E                     u8771:
 13577  001F3E  EFB4  F00F         	goto	l8421
 13578  001F42                     u8770:
 13579  001F42  282D               	incf	___flmul@bexp^0,w,c
 13580  001F44  A4D8               	btfss	status,2,c
 13581  001F46  EFA7  F00F         	goto	u8781
 13582  001F4A  EFA9  F00F         	goto	u8780
 13583  001F4E                     u8781:
 13584  001F4E  EFB1  F00F         	goto	l8419
 13585  001F52                     u8780:
 13586  001F52  0E00               	movlw	0
 13587  001F54  6E1B               	movwf	___flmul@b^0,c
 13588  001F56  0E00               	movlw	0
 13589  001F58  6E1C               	movwf	(___flmul@b+1)^0,c
 13590  001F5A  0E00               	movlw	0
 13591  001F5C  6E1D               	movwf	(___flmul@b+2)^0,c
 13592  001F5E  0E00               	movlw	0
 13593  001F60  6E1E               	movwf	(___flmul@b+3)^0,c
 13594  001F62                     l8419:
 13595  001F62  8E1D               	bsf	(___flmul@b+2)^0,7,c
 13596  001F64  EFBC  F00F         	goto	l8423
 13597  001F68                     l8421:
 13598  001F68  0E00               	movlw	0
 13599  001F6A  6E1B               	movwf	___flmul@b^0,c
 13600  001F6C  0E00               	movlw	0
 13601  001F6E  6E1C               	movwf	(___flmul@b+1)^0,c
 13602  001F70  0E00               	movlw	0
 13603  001F72  6E1D               	movwf	(___flmul@b+2)^0,c
 13604  001F74  0E00               	movlw	0
 13605  001F76  6E1E               	movwf	(___flmul@b+3)^0,c
 13606  001F78                     l8423:
 13607  001F78  5022               	movf	(___flmul@a+3)^0,w,c
 13608  001F7A  0B80               	andlw	128
 13609  001F7C  1A27               	xorwf	___flmul@sign^0,f,c
 13610  001F7E  5022               	movf	(___flmul@a+3)^0,w,c
 13611  001F80  2422               	addwf	(___flmul@a+3)^0,w,c
 13612  001F82  6E28               	movwf	___flmul@aexp^0,c
 13613  001F84  AE21               	btfss	(___flmul@a+2)^0,7,c
 13614  001F86  EFC7  F00F         	goto	u8791
 13615  001F8A  EFC9  F00F         	goto	u8790
 13616  001F8E                     u8791:
 13617  001F8E  EFCA  F00F         	goto	l8431
 13618  001F92                     u8790:
 13619  001F92  8028               	bsf	___flmul@aexp^0,0,c
 13620  001F94                     l8431:
 13621  001F94  5028               	movf	___flmul@aexp^0,w,c
 13622  001F96  B4D8               	btfsc	status,2,c
 13623  001F98  EFD0  F00F         	goto	u8801
 13624  001F9C  EFD2  F00F         	goto	u8800
 13625  001FA0                     u8801:
 13626  001FA0  EFE5  F00F         	goto	l8439
 13627  001FA4                     u8800:
 13628  001FA4  2828               	incf	___flmul@aexp^0,w,c
 13629  001FA6  A4D8               	btfss	status,2,c
 13630  001FA8  EFD8  F00F         	goto	u8811
 13631  001FAC  EFDA  F00F         	goto	u8810
 13632  001FB0                     u8811:
 13633  001FB0  EFE2  F00F         	goto	l8437
 13634  001FB4                     u8810:
 13635  001FB4  0E00               	movlw	0
 13636  001FB6  6E1F               	movwf	___flmul@a^0,c
 13637  001FB8  0E00               	movlw	0
 13638  001FBA  6E20               	movwf	(___flmul@a+1)^0,c
 13639  001FBC  0E00               	movlw	0
 13640  001FBE  6E21               	movwf	(___flmul@a+2)^0,c
 13641  001FC0  0E00               	movlw	0
 13642  001FC2  6E22               	movwf	(___flmul@a+3)^0,c
 13643  001FC4                     l8437:
 13644  001FC4  8E21               	bsf	(___flmul@a+2)^0,7,c
 13645  001FC6  EFED  F00F         	goto	l1563
 13646  001FCA                     l8439:
 13647  001FCA  0E00               	movlw	0
 13648  001FCC  6E1F               	movwf	___flmul@a^0,c
 13649  001FCE  0E00               	movlw	0
 13650  001FD0  6E20               	movwf	(___flmul@a+1)^0,c
 13651  001FD2  0E00               	movlw	0
 13652  001FD4  6E21               	movwf	(___flmul@a+2)^0,c
 13653  001FD6  0E00               	movlw	0
 13654  001FD8  6E22               	movwf	(___flmul@a+3)^0,c
 13655  001FDA                     l1563:
 13656  001FDA  5028               	movf	___flmul@aexp^0,w,c
 13657  001FDC  B4D8               	btfsc	status,2,c
 13658  001FDE  EFF3  F00F         	goto	u8821
 13659  001FE2  EFF5  F00F         	goto	u8820
 13660  001FE6                     u8821:
 13661  001FE6  EFFD  F00F         	goto	l8443
 13662  001FEA                     u8820:
 13663  001FEA  502D               	movf	___flmul@bexp^0,w,c
 13664  001FEC  A4D8               	btfss	status,2,c
 13665  001FEE  EFFB  F00F         	goto	u8831
 13666  001FF2  EFFD  F00F         	goto	u8830
 13667  001FF6                     u8831:
 13668  001FF6  EF07  F010         	goto	l8447
 13669  001FFA                     u8830:
 13670  001FFA                     l8443:
 13671  001FFA  0E00               	movlw	0
 13672  001FFC  6E1B               	movwf	?___flmul^0,c
 13673  001FFE  0E00               	movlw	0
 13674  002000  6E1C               	movwf	(?___flmul+1)^0,c
 13675  002002  0E00               	movlw	0
 13676  002004  6E1D               	movwf	(?___flmul+2)^0,c
 13677  002006  0E00               	movlw	0
 13678  002008  6E1E               	movwf	(?___flmul+3)^0,c
 13679  00200A  EF9F  F011         	goto	l1567
 13680  00200E                     l8447:
 13681  00200E  5021               	movf	(___flmul@a+2)^0,w,c
 13682  002010  021B               	mulwf	___flmul@b^0,c
 13683  002012  CFF3 F032          	movff	prodl,___flmul@temp
 13684  002016  CFF4 F033          	movff	prodh,___flmul@temp+1
 13685  00201A  5032               	movf	___flmul@temp^0,w,c
 13686  00201C  6E29               	movwf	___flmul@grs^0,c
 13687  00201E  6A2A               	clrf	(___flmul@grs+1)^0,c
 13688  002020  6A2B               	clrf	(___flmul@grs+2)^0,c
 13689  002022  6A2C               	clrf	(___flmul@grs+3)^0,c
 13690  002024  5033               	movf	(___flmul@temp+1)^0,w,c
 13691  002026  6E2E               	movwf	___flmul@prod^0,c
 13692  002028  6A2F               	clrf	(___flmul@prod+1)^0,c
 13693  00202A  6A30               	clrf	(___flmul@prod+2)^0,c
 13694  00202C  6A31               	clrf	(___flmul@prod+3)^0,c
 13695  00202E  5020               	movf	(___flmul@a+1)^0,w,c
 13696  002030  021C               	mulwf	(___flmul@b+1)^0,c
 13697  002032  CFF3 F032          	movff	prodl,___flmul@temp
 13698  002036  CFF4 F033          	movff	prodh,___flmul@temp+1
 13699  00203A  5032               	movf	___flmul@temp^0,w,c
 13700  00203C  2629               	addwf	___flmul@grs^0,f,c
 13701  00203E  0E00               	movlw	0
 13702  002040  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13703  002042  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13704  002044  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13705  002046  5033               	movf	(___flmul@temp+1)^0,w,c
 13706  002048  262E               	addwf	___flmul@prod^0,f,c
 13707  00204A  0E00               	movlw	0
 13708  00204C  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13709  00204E  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13710  002050  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13711  002052  501F               	movf	___flmul@a^0,w,c
 13712  002054  021D               	mulwf	(___flmul@b+2)^0,c
 13713  002056  CFF3 F032          	movff	prodl,___flmul@temp
 13714  00205A  CFF4 F033          	movff	prodh,___flmul@temp+1
 13715  00205E  5032               	movf	___flmul@temp^0,w,c
 13716  002060  2629               	addwf	___flmul@grs^0,f,c
 13717  002062  0E00               	movlw	0
 13718  002064  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13719  002066  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13720  002068  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13721  00206A  5033               	movf	(___flmul@temp+1)^0,w,c
 13722  00206C  262E               	addwf	___flmul@prod^0,f,c
 13723  00206E  0E00               	movlw	0
 13724  002070  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13725  002072  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13726  002074  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13727  002076  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13728  00207A  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13729  00207E  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13730  002082  6A29               	clrf	___flmul@grs^0,c
 13731  002084  501F               	movf	___flmul@a^0,w,c
 13732  002086  021C               	mulwf	(___flmul@b+1)^0,c
 13733  002088  CFF3 F032          	movff	prodl,___flmul@temp
 13734  00208C  CFF4 F033          	movff	prodh,___flmul@temp+1
 13735  002090  5032               	movf	___flmul@temp^0,w,c
 13736  002092  2629               	addwf	___flmul@grs^0,f,c
 13737  002094  5033               	movf	(___flmul@temp+1)^0,w,c
 13738  002096  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13739  002098  0E00               	movlw	0
 13740  00209A  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13741  00209C  0E00               	movlw	0
 13742  00209E  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13743  0020A0  5020               	movf	(___flmul@a+1)^0,w,c
 13744  0020A2  021B               	mulwf	___flmul@b^0,c
 13745  0020A4  CFF3 F032          	movff	prodl,___flmul@temp
 13746  0020A8  CFF4 F033          	movff	prodh,___flmul@temp+1
 13747  0020AC  5032               	movf	___flmul@temp^0,w,c
 13748  0020AE  2629               	addwf	___flmul@grs^0,f,c
 13749  0020B0  5033               	movf	(___flmul@temp+1)^0,w,c
 13750  0020B2  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13751  0020B4  0E00               	movlw	0
 13752  0020B6  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13753  0020B8  0E00               	movlw	0
 13754  0020BA  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13755  0020BC  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13756  0020C0  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13757  0020C4  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13758  0020C8  6A29               	clrf	___flmul@grs^0,c
 13759  0020CA  501F               	movf	___flmul@a^0,w,c
 13760  0020CC  021B               	mulwf	___flmul@b^0,c
 13761  0020CE  CFF3 F032          	movff	prodl,___flmul@temp
 13762  0020D2  CFF4 F033          	movff	prodh,___flmul@temp+1
 13763  0020D6  5032               	movf	___flmul@temp^0,w,c
 13764  0020D8  2629               	addwf	___flmul@grs^0,f,c
 13765  0020DA  5033               	movf	(___flmul@temp+1)^0,w,c
 13766  0020DC  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13767  0020DE  0E00               	movlw	0
 13768  0020E0  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13769  0020E2  0E00               	movlw	0
 13770  0020E4  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13771  0020E6  5021               	movf	(___flmul@a+2)^0,w,c
 13772  0020E8  021C               	mulwf	(___flmul@b+1)^0,c
 13773  0020EA  CFF3 F032          	movff	prodl,___flmul@temp
 13774  0020EE  CFF4 F033          	movff	prodh,___flmul@temp+1
 13775  0020F2  5032               	movf	___flmul@temp^0,w,c
 13776  0020F4  262E               	addwf	___flmul@prod^0,f,c
 13777  0020F6  5033               	movf	(___flmul@temp+1)^0,w,c
 13778  0020F8  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13779  0020FA  0E00               	movlw	0
 13780  0020FC  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13781  0020FE  0E00               	movlw	0
 13782  002100  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13783  002102  5020               	movf	(___flmul@a+1)^0,w,c
 13784  002104  021D               	mulwf	(___flmul@b+2)^0,c
 13785  002106  CFF3 F032          	movff	prodl,___flmul@temp
 13786  00210A  CFF4 F033          	movff	prodh,___flmul@temp+1
 13787  00210E  5032               	movf	___flmul@temp^0,w,c
 13788  002110  262E               	addwf	___flmul@prod^0,f,c
 13789  002112  5033               	movf	(___flmul@temp+1)^0,w,c
 13790  002114  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13791  002116  0E00               	movlw	0
 13792  002118  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13793  00211A  0E00               	movlw	0
 13794  00211C  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13795  00211E  5021               	movf	(___flmul@a+2)^0,w,c
 13796  002120  021D               	mulwf	(___flmul@b+2)^0,c
 13797  002122  CFF3 F032          	movff	prodl,___flmul@temp
 13798  002126  CFF4 F033          	movff	prodh,___flmul@temp+1
 13799  00212A  5032               	movf	___flmul@temp^0,w,c
 13800  00212C  6E23               	movwf	??___flmul^0,c
 13801  00212E  5033               	movf	(___flmul@temp+1)^0,w,c
 13802  002130  6E24               	movwf	(??___flmul+1)^0,c
 13803  002132  6A25               	clrf	(??___flmul+2)^0,c
 13804  002134  6A26               	clrf	(??___flmul+3)^0,c
 13805  002136  C025  F026         	movff	??___flmul+2,??___flmul+3
 13806  00213A  C024  F025         	movff	??___flmul+1,??___flmul+2
 13807  00213E  C023  F024         	movff	??___flmul,??___flmul+1
 13808  002142  6A23               	clrf	??___flmul^0,c
 13809  002144  5023               	movf	??___flmul^0,w,c
 13810  002146  262E               	addwf	___flmul@prod^0,f,c
 13811  002148  5024               	movf	(??___flmul+1)^0,w,c
 13812  00214A  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13813  00214C  5025               	movf	(??___flmul+2)^0,w,c
 13814  00214E  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13815  002150  5026               	movf	(??___flmul+3)^0,w,c
 13816  002152  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13817  002154  C029  F023         	movff	___flmul@grs,??___flmul
 13818  002158  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
 13819  00215C  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
 13820  002160  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
 13821  002164  0E19               	movlw	25
 13822  002166  EFBA  F010         	goto	u8840
 13823  00216A                     u8845:
 13824  00216A  90D8               	bcf	status,0,c
 13825  00216C  3226               	rrcf	(??___flmul+3)^0,f,c
 13826  00216E  3225               	rrcf	(??___flmul+2)^0,f,c
 13827  002170  3224               	rrcf	(??___flmul+1)^0,f,c
 13828  002172  3223               	rrcf	??___flmul^0,f,c
 13829  002174                     u8840:
 13830  002174  2EE8               	decfsz	wreg,f,c
 13831  002176  EFB5  F010         	goto	u8845
 13832  00217A  5023               	movf	??___flmul^0,w,c
 13833  00217C  262E               	addwf	___flmul@prod^0,f,c
 13834  00217E  5024               	movf	(??___flmul+1)^0,w,c
 13835  002180  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13836  002182  5025               	movf	(??___flmul+2)^0,w,c
 13837  002184  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13838  002186  5026               	movf	(??___flmul+3)^0,w,c
 13839  002188  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13840  00218A  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13841  00218E  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13842  002192  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13843  002196  6A29               	clrf	___flmul@grs^0,c
 13844  002198  5028               	movf	___flmul@aexp^0,w,c
 13845  00219A  C02D  F023         	movff	___flmul@bexp,??___flmul
 13846  00219E  6A24               	clrf	(??___flmul+1)^0,c
 13847  0021A0  2623               	addwf	??___flmul^0,f,c
 13848  0021A2  0E00               	movlw	0
 13849  0021A4  2224               	addwfc	(??___flmul+1)^0,f,c
 13850  0021A6  0E82               	movlw	130
 13851  0021A8  2423               	addwf	??___flmul^0,w,c
 13852  0021AA  6E32               	movwf	___flmul@temp^0,c
 13853  0021AC  0EFF               	movlw	255
 13854  0021AE  2024               	addwfc	(??___flmul+1)^0,w,c
 13855  0021B0  6E33               	movwf	(___flmul@temp+1)^0,c
 13856  0021B2  EFF0  F010         	goto	l8495
 13857  0021B6                     l8489:
 13858  0021B6  90D8               	bcf	status,0,c
 13859  0021B8  362E               	rlcf	___flmul@prod^0,f,c
 13860  0021BA  362F               	rlcf	(___flmul@prod+1)^0,f,c
 13861  0021BC  3630               	rlcf	(___flmul@prod+2)^0,f,c
 13862  0021BE  3631               	rlcf	(___flmul@prod+3)^0,f,c
 13863  0021C0  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 13864  0021C2  EFE5  F010         	goto	u8851
 13865  0021C6  EFE7  F010         	goto	u8850
 13866  0021CA                     u8851:
 13867  0021CA  EFE8  F010         	goto	l1570
 13868  0021CE                     u8850:
 13869  0021CE  802E               	bsf	___flmul@prod^0,0,c
 13870  0021D0                     l1570:
 13871  0021D0  90D8               	bcf	status,0,c
 13872  0021D2  3629               	rlcf	___flmul@grs^0,f,c
 13873  0021D4  362A               	rlcf	(___flmul@grs+1)^0,f,c
 13874  0021D6  362B               	rlcf	(___flmul@grs+2)^0,f,c
 13875  0021D8  362C               	rlcf	(___flmul@grs+3)^0,f,c
 13876  0021DA  0632               	decf	___flmul@temp^0,f,c
 13877  0021DC  A0D8               	btfss	status,0,c
 13878  0021DE  0633               	decf	(___flmul@temp+1)^0,f,c
 13879  0021E0                     l8495:
 13880  0021E0  AE30               	btfss	(___flmul@prod+2)^0,7,c
 13881  0021E2  EFF5  F010         	goto	u8861
 13882  0021E6  EFF7  F010         	goto	u8860
 13883  0021EA                     u8861:
 13884  0021EA  EFDB  F010         	goto	l8489
 13885  0021EE                     u8860:
 13886  0021EE  0E00               	movlw	0
 13887  0021F0  6E28               	movwf	___flmul@aexp^0,c
 13888  0021F2  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 13889  0021F4  EFFE  F010         	goto	u8871
 13890  0021F8  EF00  F011         	goto	u8870
 13891  0021FC                     u8871:
 13892  0021FC  EF24  F011         	goto	l1572
 13893  002200                     u8870:
 13894  002200  0EFF               	movlw	255
 13895  002202  1429               	andwf	___flmul@grs^0,w,c
 13896  002204  6E23               	movwf	??___flmul^0,c
 13897  002206  0EFF               	movlw	255
 13898  002208  142A               	andwf	(___flmul@grs+1)^0,w,c
 13899  00220A  6E24               	movwf	(??___flmul+1)^0,c
 13900  00220C  0EFF               	movlw	255
 13901  00220E  142B               	andwf	(___flmul@grs+2)^0,w,c
 13902  002210  6E25               	movwf	(??___flmul+2)^0,c
 13903  002212  0E7F               	movlw	127
 13904  002214  142C               	andwf	(___flmul@grs+3)^0,w,c
 13905  002216  6E26               	movwf	(??___flmul+3)^0,c
 13906  002218  5023               	movf	??___flmul^0,w,c
 13907  00221A  1024               	iorwf	(??___flmul+1)^0,w,c
 13908  00221C  1025               	iorwf	(??___flmul+2)^0,w,c
 13909  00221E  1026               	iorwf	(??___flmul+3)^0,w,c
 13910  002220  B4D8               	btfsc	status,2,c
 13911  002222  EF15  F011         	goto	u8881
 13912  002226  EF17  F011         	goto	u8880
 13913  00222A                     u8881:
 13914  00222A  EF1B  F011         	goto	l1573
 13915  00222E                     u8880:
 13916  00222E                     l8503:
 13917  00222E  0E01               	movlw	1
 13918  002230  6E28               	movwf	___flmul@aexp^0,c
 13919  002232  EF24  F011         	goto	l1572
 13920  002236                     l1573:
 13921  002236  A02E               	btfss	___flmul@prod^0,0,c
 13922  002238  EF20  F011         	goto	u8891
 13923  00223C  EF22  F011         	goto	u8890
 13924  002240                     u8891:
 13925  002240  EF24  F011         	goto	l1572
 13926  002244                     u8890:
 13927  002244  EF17  F011         	goto	l8503
 13928  002248                     l1572:
 13929  002248  5028               	movf	___flmul@aexp^0,w,c
 13930  00224A  B4D8               	btfsc	status,2,c
 13931  00224C  EF2A  F011         	goto	u8901
 13932  002250  EF2C  F011         	goto	u8900
 13933  002254                     u8901:
 13934  002254  EF50  F011         	goto	l8515
 13935  002258                     u8900:
 13936  002258  0E01               	movlw	1
 13937  00225A  262E               	addwf	___flmul@prod^0,f,c
 13938  00225C  0E00               	movlw	0
 13939  00225E  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13940  002260  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13941  002262  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13942  002264  A031               	btfss	(___flmul@prod+3)^0,0,c
 13943  002266  EF37  F011         	goto	u8911
 13944  00226A  EF39  F011         	goto	u8910
 13945  00226E                     u8911:
 13946  00226E  EF50  F011         	goto	l8515
 13947  002272                     u8910:
 13948  002272  C02E  F023         	movff	___flmul@prod,??___flmul
 13949  002276  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
 13950  00227A  C030  F025         	movff	___flmul@prod+2,??___flmul+2
 13951  00227E  C031  F026         	movff	___flmul@prod+3,??___flmul+3
 13952  002282  3426               	rlcf	(??___flmul+3)^0,w,c
 13953  002284  3226               	rrcf	(??___flmul+3)^0,f,c
 13954  002286  3225               	rrcf	(??___flmul+2)^0,f,c
 13955  002288  3224               	rrcf	(??___flmul+1)^0,f,c
 13956  00228A  3223               	rrcf	??___flmul^0,f,c
 13957  00228C  C023  F02E         	movff	??___flmul,___flmul@prod
 13958  002290  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
 13959  002294  C025  F030         	movff	??___flmul+2,___flmul@prod+2
 13960  002298  C026  F031         	movff	??___flmul+3,___flmul@prod+3
 13961  00229C  4A32               	infsnz	___flmul@temp^0,f,c
 13962  00229E  2A33               	incf	(___flmul@temp+1)^0,f,c
 13963  0022A0                     l8515:
 13964  0022A0  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 13965  0022A2  EF5B  F011         	goto	u8921
 13966  0022A6  5033               	movf	(___flmul@temp+1)^0,w,c
 13967  0022A8  E108               	bnz	u8920
 13968  0022AA  2832               	incf	___flmul@temp^0,w,c
 13969  0022AC  A0D8               	btfss	status,0,c
 13970  0022AE  EF5B  F011         	goto	u8921
 13971  0022B2  EF5D  F011         	goto	u8920
 13972  0022B6                     u8921:
 13973  0022B6  EF67  F011         	goto	l8519
 13974  0022BA                     u8920:
 13975  0022BA  0E00               	movlw	0
 13976  0022BC  6E2E               	movwf	___flmul@prod^0,c
 13977  0022BE  0E00               	movlw	0
 13978  0022C0  6E2F               	movwf	(___flmul@prod+1)^0,c
 13979  0022C2  0E80               	movlw	128
 13980  0022C4  6E30               	movwf	(___flmul@prod+2)^0,c
 13981  0022C6  0E7F               	movlw	127
 13982  0022C8  6E31               	movwf	(___flmul@prod+3)^0,c
 13983  0022CA  EF95  F011         	goto	l8531
 13984  0022CE                     l8519:
 13985  0022CE  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 13986  0022D0  EF74  F011         	goto	u8930
 13987  0022D4  5033               	movf	(___flmul@temp+1)^0,w,c
 13988  0022D6  E106               	bnz	u8931
 13989  0022D8  0432               	decf	___flmul@temp^0,w,c
 13990  0022DA  B0D8               	btfsc	status,0,c
 13991  0022DC  EF72  F011         	goto	u8931
 13992  0022E0  EF74  F011         	goto	u8930
 13993  0022E4                     u8931:
 13994  0022E4  EF80  F011         	goto	l1580
 13995  0022E8                     u8930:
 13996  0022E8  0E00               	movlw	0
 13997  0022EA  6E2E               	movwf	___flmul@prod^0,c
 13998  0022EC  0E00               	movlw	0
 13999  0022EE  6E2F               	movwf	(___flmul@prod+1)^0,c
 14000  0022F0  0E00               	movlw	0
 14001  0022F2  6E30               	movwf	(___flmul@prod+2)^0,c
 14002  0022F4  0E00               	movlw	0
 14003  0022F6  6E31               	movwf	(___flmul@prod+3)^0,c
 14004  0022F8  0E00               	movlw	0
 14005  0022FA  6E27               	movwf	___flmul@sign^0,c
 14006  0022FC  EF95  F011         	goto	l8531
 14007  002300                     l1580:
 14008  002300  C032  F02D         	movff	___flmul@temp,___flmul@bexp
 14009  002304  0EFF               	movlw	255
 14010  002306  162E               	andwf	___flmul@prod^0,f,c
 14011  002308  0EFF               	movlw	255
 14012  00230A  162F               	andwf	(___flmul@prod+1)^0,f,c
 14013  00230C  0E7F               	movlw	127
 14014  00230E  1630               	andwf	(___flmul@prod+2)^0,f,c
 14015  002310  0E00               	movlw	0
 14016  002312  1631               	andwf	(___flmul@prod+3)^0,f,c
 14017  002314  A02D               	btfss	___flmul@bexp^0,0,c
 14018  002316  EF8F  F011         	goto	u8941
 14019  00231A  EF91  F011         	goto	u8940
 14020  00231E                     u8941:
 14021  00231E  EF92  F011         	goto	l8529
 14022  002322                     u8940:
 14023  002322  8E30               	bsf	(___flmul@prod+2)^0,7,c
 14024  002324                     l8529:
 14025  002324  90D8               	bcf	status,0,c
 14026  002326  302D               	rrcf	___flmul@bexp^0,w,c
 14027  002328  6E31               	movwf	(___flmul@prod+3)^0,c
 14028  00232A                     l8531:
 14029  00232A  5027               	movf	___flmul@sign^0,w,c
 14030  00232C  1231               	iorwf	(___flmul@prod+3)^0,f,c
 14031  00232E  C02E  F01B         	movff	___flmul@prod,?___flmul
 14032  002332  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
 14033  002336  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
 14034  00233A  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
 14035  00233E                     l1567:
 14036  00233E  0012               	return		;funcret
 14037  002340                     __end_of___flmul:
 14038                           	opt callstack 0
 14039                           
 14040 ;; *************** function ___fldiv *****************
 14041 ;; Defined at:
 14042 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 14043 ;; Parameters:    Size  Location     Type
 14044 ;;  b               4   67[COMRAM] unsigned char 
 14045 ;;  a               4   71[COMRAM] unsigned char 
 14046 ;; Auto vars:     Size  Location     Type
 14047 ;;  grs             4    7[BANK0 ] unsigned long 
 14048 ;;  rem             4    0[BANK0 ] unsigned long 
 14049 ;;  new_exp         2    5[BANK0 ] short 
 14050 ;;  aexp            1   12[BANK0 ] unsigned char 
 14051 ;;  bexp            1   11[BANK0 ] unsigned char 
 14052 ;;  sign            1    4[BANK0 ] unsigned char 
 14053 ;; Return value:  Size  Location     Type
 14054 ;;                  4   67[COMRAM] unsigned char 
 14055 ;; Registers used:
 14056 ;;		wreg, status,2, status,0
 14057 ;; Tracked objects:
 14058 ;;		On entry : 0/0
 14059 ;;		On exit  : 0/0
 14060 ;;		Unchanged: 0/0
 14061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14062 ;;      Params:         8       0       0       0       0       0       0       0       0
 14063 ;;      Locals:         0      13       0       0       0       0       0       0       0
 14064 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14065 ;;      Totals:        12      13       0       0       0       0       0       0       0
 14066 ;;Total ram usage:       25 bytes
 14067 ;; Hardware stack levels used:    1
 14068 ;; Hardware stack levels required when called:    2
 14069 ;; This function calls:
 14070 ;;		Nothing
 14071 ;; This function is called by:
 14072 ;;		_pwmDuty
 14073 ;;		_leerSensores
 14074 ;;		_efgtoa
 14075 ;; This function uses a non-reentrant model
 14076 ;;
 14077                           
 14078                           	psect	text61
 14079  0026F2                     __ptext61:
 14080                           	opt callstack 0
 14081  0026F2                     ___fldiv:
 14082                           	opt callstack 23
 14083  0026F2  5047               	movf	(___fldiv@b+3)^0,w,c
 14084  0026F4  0B80               	andlw	128
 14085  0026F6  0100               	movlb	0	; () banked
 14086  0026F8  6F64               	movwf	___fldiv@sign& (0+255),b
 14087  0026FA  5047               	movf	(___fldiv@b+3)^0,w,c
 14088  0026FC  2447               	addwf	(___fldiv@b+3)^0,w,c
 14089  0026FE  6F6B               	movwf	___fldiv@bexp& (0+255),b
 14090  002700                     
 14091                           ; BSR set to: 0
 14092  002700  AE46               	btfss	(___fldiv@b+2)^0,7,c
 14093  002702  EF85  F013         	goto	u8531
 14094  002706  EF87  F013         	goto	u8530
 14095  00270A                     u8531:
 14096  00270A  EF88  F013         	goto	l8275
 14097  00270E                     u8530:
 14098  00270E                     
 14099                           ; BSR set to: 0
 14100  00270E  816B               	bsf	___fldiv@bexp& (0+255),0,b
 14101  002710                     l8275:
 14102                           
 14103                           ; BSR set to: 0
 14104  002710  516B               	movf	___fldiv@bexp& (0+255),w,b
 14105  002712  B4D8               	btfsc	status,2,c
 14106  002714  EF8E  F013         	goto	u8541
 14107  002718  EF90  F013         	goto	u8540
 14108  00271C                     u8541:
 14109  00271C  EFA5  F013         	goto	l8285
 14110  002720                     u8540:
 14111  002720                     
 14112                           ; BSR set to: 0
 14113  002720  296B               	incf	___fldiv@bexp& (0+255),w,b
 14114  002722  A4D8               	btfss	status,2,c
 14115  002724  EF96  F013         	goto	u8551
 14116  002728  EF98  F013         	goto	u8550
 14117  00272C                     u8551:
 14118  00272C  EFA0  F013         	goto	l8281
 14119  002730                     u8550:
 14120  002730                     
 14121                           ; BSR set to: 0
 14122  002730  0E00               	movlw	0
 14123  002732  6E44               	movwf	___fldiv@b^0,c
 14124  002734  0E00               	movlw	0
 14125  002736  6E45               	movwf	(___fldiv@b+1)^0,c
 14126  002738  0E00               	movlw	0
 14127  00273A  6E46               	movwf	(___fldiv@b+2)^0,c
 14128  00273C  0E00               	movlw	0
 14129  00273E  6E47               	movwf	(___fldiv@b+3)^0,c
 14130  002740                     l8281:
 14131                           
 14132                           ; BSR set to: 0
 14133  002740  8E46               	bsf	(___fldiv@b+2)^0,7,c
 14134  002742                     
 14135                           ; BSR set to: 0
 14136  002742  0E00               	movlw	0
 14137  002744  6E47               	movwf	(___fldiv@b+3)^0,c
 14138  002746  EFAD  F013         	goto	l8287
 14139  00274A                     l8285:
 14140                           
 14141                           ; BSR set to: 0
 14142  00274A  0E00               	movlw	0
 14143  00274C  6E44               	movwf	___fldiv@b^0,c
 14144  00274E  0E00               	movlw	0
 14145  002750  6E45               	movwf	(___fldiv@b+1)^0,c
 14146  002752  0E00               	movlw	0
 14147  002754  6E46               	movwf	(___fldiv@b+2)^0,c
 14148  002756  0E00               	movlw	0
 14149  002758  6E47               	movwf	(___fldiv@b+3)^0,c
 14150  00275A                     l8287:
 14151                           
 14152                           ; BSR set to: 0
 14153  00275A  504B               	movf	(___fldiv@a+3)^0,w,c
 14154  00275C  0B80               	andlw	128
 14155  00275E  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 14156  002760                     
 14157                           ; BSR set to: 0
 14158  002760  504B               	movf	(___fldiv@a+3)^0,w,c
 14159  002762  244B               	addwf	(___fldiv@a+3)^0,w,c
 14160  002764  6F6C               	movwf	___fldiv@aexp& (0+255),b
 14161  002766                     
 14162                           ; BSR set to: 0
 14163  002766  AE4A               	btfss	(___fldiv@a+2)^0,7,c
 14164  002768  EFB8  F013         	goto	u8561
 14165  00276C  EFBA  F013         	goto	u8560
 14166  002770                     u8561:
 14167  002770  EFBB  F013         	goto	l8295
 14168  002774                     u8560:
 14169  002774                     
 14170                           ; BSR set to: 0
 14171  002774  816C               	bsf	___fldiv@aexp& (0+255),0,b
 14172  002776                     l8295:
 14173                           
 14174                           ; BSR set to: 0
 14175  002776  516C               	movf	___fldiv@aexp& (0+255),w,b
 14176  002778  B4D8               	btfsc	status,2,c
 14177  00277A  EFC1  F013         	goto	u8571
 14178  00277E  EFC3  F013         	goto	u8570
 14179  002782                     u8571:
 14180  002782  EFD8  F013         	goto	l8305
 14181  002786                     u8570:
 14182  002786                     
 14183                           ; BSR set to: 0
 14184  002786  296C               	incf	___fldiv@aexp& (0+255),w,b
 14185  002788  A4D8               	btfss	status,2,c
 14186  00278A  EFC9  F013         	goto	u8581
 14187  00278E  EFCB  F013         	goto	u8580
 14188  002792                     u8581:
 14189  002792  EFD3  F013         	goto	l8301
 14190  002796                     u8580:
 14191  002796                     
 14192                           ; BSR set to: 0
 14193  002796  0E00               	movlw	0
 14194  002798  6E48               	movwf	___fldiv@a^0,c
 14195  00279A  0E00               	movlw	0
 14196  00279C  6E49               	movwf	(___fldiv@a+1)^0,c
 14197  00279E  0E00               	movlw	0
 14198  0027A0  6E4A               	movwf	(___fldiv@a+2)^0,c
 14199  0027A2  0E00               	movlw	0
 14200  0027A4  6E4B               	movwf	(___fldiv@a+3)^0,c
 14201  0027A6                     l8301:
 14202                           
 14203                           ; BSR set to: 0
 14204  0027A6  8E4A               	bsf	(___fldiv@a+2)^0,7,c
 14205  0027A8                     
 14206                           ; BSR set to: 0
 14207  0027A8  0E00               	movlw	0
 14208  0027AA  6E4B               	movwf	(___fldiv@a+3)^0,c
 14209  0027AC  EFE0  F013         	goto	l8307
 14210  0027B0                     l8305:
 14211                           
 14212                           ; BSR set to: 0
 14213  0027B0  0E00               	movlw	0
 14214  0027B2  6E48               	movwf	___fldiv@a^0,c
 14215  0027B4  0E00               	movlw	0
 14216  0027B6  6E49               	movwf	(___fldiv@a+1)^0,c
 14217  0027B8  0E00               	movlw	0
 14218  0027BA  6E4A               	movwf	(___fldiv@a+2)^0,c
 14219  0027BC  0E00               	movlw	0
 14220  0027BE  6E4B               	movwf	(___fldiv@a+3)^0,c
 14221  0027C0                     l8307:
 14222                           
 14223                           ; BSR set to: 0
 14224  0027C0  5048               	movf	___fldiv@a^0,w,c
 14225  0027C2  1049               	iorwf	(___fldiv@a+1)^0,w,c
 14226  0027C4  104A               	iorwf	(___fldiv@a+2)^0,w,c
 14227  0027C6  104B               	iorwf	(___fldiv@a+3)^0,w,c
 14228  0027C8  A4D8               	btfss	status,2,c
 14229  0027CA  EFE9  F013         	goto	u8591
 14230  0027CE  EFEB  F013         	goto	u8590
 14231  0027D2                     u8591:
 14232  0027D2  EF03  F014         	goto	l8319
 14233  0027D6                     u8590:
 14234  0027D6                     
 14235                           ; BSR set to: 0
 14236  0027D6  0E00               	movlw	0
 14237  0027D8  6E44               	movwf	___fldiv@b^0,c
 14238  0027DA  0E00               	movlw	0
 14239  0027DC  6E45               	movwf	(___fldiv@b+1)^0,c
 14240  0027DE  0E00               	movlw	0
 14241  0027E0  6E46               	movwf	(___fldiv@b+2)^0,c
 14242  0027E2  0E00               	movlw	0
 14243  0027E4  6E47               	movwf	(___fldiv@b+3)^0,c
 14244  0027E6                     
 14245                           ; BSR set to: 0
 14246  0027E6  0E80               	movlw	128
 14247  0027E8  1246               	iorwf	(___fldiv@b+2)^0,f,c
 14248  0027EA  0E7F               	movlw	127
 14249  0027EC  1247               	iorwf	(___fldiv@b+3)^0,f,c
 14250  0027EE                     l8313:
 14251                           
 14252                           ; BSR set to: 0
 14253  0027EE  5164               	movf	___fldiv@sign& (0+255),w,b
 14254  0027F0  1247               	iorwf	(___fldiv@b+3)^0,f,c
 14255  0027F2                     
 14256                           ; BSR set to: 0
 14257  0027F2  C044  F044         	movff	___fldiv@b,?___fldiv
 14258  0027F6  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
 14259  0027FA  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
 14260  0027FE  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
 14261  002802  EF46  F015         	goto	l1531
 14262  002806                     l8319:
 14263                           
 14264                           ; BSR set to: 0
 14265  002806  516B               	movf	___fldiv@bexp& (0+255),w,b
 14266  002808  A4D8               	btfss	status,2,c
 14267  00280A  EF09  F014         	goto	u8601
 14268  00280E  EF0B  F014         	goto	u8600
 14269  002812                     u8601:
 14270  002812  EF15  F014         	goto	l8327
 14271  002816                     u8600:
 14272  002816                     
 14273                           ; BSR set to: 0
 14274  002816  0E00               	movlw	0
 14275  002818  6E44               	movwf	?___fldiv^0,c
 14276  00281A  0E00               	movlw	0
 14277  00281C  6E45               	movwf	(?___fldiv+1)^0,c
 14278  00281E  0E00               	movlw	0
 14279  002820  6E46               	movwf	(?___fldiv+2)^0,c
 14280  002822  0E00               	movlw	0
 14281  002824  6E47               	movwf	(?___fldiv+3)^0,c
 14282  002826  EF46  F015         	goto	l1531
 14283  00282A                     l8327:
 14284                           
 14285                           ; BSR set to: 0
 14286  00282A  516C               	movf	___fldiv@aexp& (0+255),w,b
 14287  00282C  C06B  F04C         	movff	___fldiv@bexp,??___fldiv
 14288  002830  6A4D               	clrf	(??___fldiv+1)^0,c
 14289  002832  5E4C               	subwf	??___fldiv^0,f,c
 14290  002834  0E00               	movlw	0
 14291  002836  5A4D               	subwfb	(??___fldiv+1)^0,f,c
 14292  002838  0E7F               	movlw	127
 14293  00283A  244C               	addwf	??___fldiv^0,w,c
 14294  00283C  6F65               	movwf	___fldiv@new_exp& (0+255),b
 14295  00283E  0E00               	movlw	0
 14296  002840  204D               	addwfc	(??___fldiv+1)^0,w,c
 14297  002842  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14298  002844                     
 14299                           ; BSR set to: 0
 14300  002844  C044  F060         	movff	___fldiv@b,___fldiv@rem
 14301  002848  C045  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 14302  00284C  C046  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 14303  002850  C047  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 14304  002854                     
 14305                           ; BSR set to: 0
 14306  002854  0E00               	movlw	0
 14307  002856  6E44               	movwf	___fldiv@b^0,c
 14308  002858  0E00               	movlw	0
 14309  00285A  6E45               	movwf	(___fldiv@b+1)^0,c
 14310  00285C  0E00               	movlw	0
 14311  00285E  6E46               	movwf	(___fldiv@b+2)^0,c
 14312  002860  0E00               	movlw	0
 14313  002862  6E47               	movwf	(___fldiv@b+3)^0,c
 14314  002864                     
 14315                           ; BSR set to: 0
 14316  002864  0E00               	movlw	0
 14317  002866  6F67               	movwf	___fldiv@grs& (0+255),b
 14318  002868  0E00               	movlw	0
 14319  00286A  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 14320  00286C  0E00               	movlw	0
 14321  00286E  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 14322  002870  0E00               	movlw	0
 14323  002872  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 14324  002874                     
 14325                           ; BSR set to: 0
 14326  002874  0E00               	movlw	0
 14327  002876  6F6C               	movwf	___fldiv@aexp& (0+255),b
 14328  002878  EF76  F014         	goto	l1533
 14329  00287C                     l8337:
 14330                           
 14331                           ; BSR set to: 0
 14332  00287C  516C               	movf	___fldiv@aexp& (0+255),w,b
 14333  00287E  B4D8               	btfsc	status,2,c
 14334  002880  EF44  F014         	goto	u8611
 14335  002884  EF46  F014         	goto	u8610
 14336  002888                     u8611:
 14337  002888  EF5D  F014         	goto	l8345
 14338  00288C                     u8610:
 14339  00288C                     
 14340                           ; BSR set to: 0
 14341  00288C  90D8               	bcf	status,0,c
 14342  00288E  3760               	rlcf	___fldiv@rem& (0+255),f,b
 14343  002890  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 14344  002892  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 14345  002894  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 14346  002896  90D8               	bcf	status,0,c
 14347  002898  3644               	rlcf	___fldiv@b^0,f,c
 14348  00289A  3645               	rlcf	(___fldiv@b+1)^0,f,c
 14349  00289C  3646               	rlcf	(___fldiv@b+2)^0,f,c
 14350  00289E  3647               	rlcf	(___fldiv@b+3)^0,f,c
 14351  0028A0                     
 14352                           ; BSR set to: 0
 14353  0028A0  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14354  0028A2  EF55  F014         	goto	u8621
 14355  0028A6  EF57  F014         	goto	u8620
 14356  0028AA                     u8621:
 14357  0028AA  EF58  F014         	goto	l1536
 14358  0028AE                     u8620:
 14359  0028AE                     
 14360                           ; BSR set to: 0
 14361  0028AE  8044               	bsf	___fldiv@b^0,0,c
 14362  0028B0                     l1536:
 14363                           
 14364                           ; BSR set to: 0
 14365  0028B0  90D8               	bcf	status,0,c
 14366  0028B2  3767               	rlcf	___fldiv@grs& (0+255),f,b
 14367  0028B4  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14368  0028B6  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14369  0028B8  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14370  0028BA                     l8345:
 14371                           
 14372                           ; BSR set to: 0
 14373  0028BA  5048               	movf	___fldiv@a^0,w,c
 14374  0028BC  5D60               	subwf	___fldiv@rem& (0+255),w,b
 14375  0028BE  5049               	movf	(___fldiv@a+1)^0,w,c
 14376  0028C0  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 14377  0028C2  504A               	movf	(___fldiv@a+2)^0,w,c
 14378  0028C4  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 14379  0028C6  504B               	movf	(___fldiv@a+3)^0,w,c
 14380  0028C8  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 14381  0028CA  A0D8               	btfss	status,0,c
 14382  0028CC  EF6A  F014         	goto	u8631
 14383  0028D0  EF6C  F014         	goto	u8630
 14384  0028D4                     u8631:
 14385  0028D4  EF75  F014         	goto	l8351
 14386  0028D8                     u8630:
 14387  0028D8                     
 14388                           ; BSR set to: 0
 14389  0028D8  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 14390  0028DA                     
 14391                           ; BSR set to: 0
 14392  0028DA  5048               	movf	___fldiv@a^0,w,c
 14393  0028DC  5F60               	subwf	___fldiv@rem& (0+255),f,b
 14394  0028DE  5049               	movf	(___fldiv@a+1)^0,w,c
 14395  0028E0  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 14396  0028E2  504A               	movf	(___fldiv@a+2)^0,w,c
 14397  0028E4  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 14398  0028E6  504B               	movf	(___fldiv@a+3)^0,w,c
 14399  0028E8  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 14400  0028EA                     l8351:
 14401                           
 14402                           ; BSR set to: 0
 14403  0028EA  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 14404  0028EC                     l1533:
 14405                           
 14406                           ; BSR set to: 0
 14407  0028EC  0E19               	movlw	25
 14408  0028EE  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 14409  0028F0  EF7C  F014         	goto	u8641
 14410  0028F4  EF7E  F014         	goto	u8640
 14411  0028F8                     u8641:
 14412  0028F8  EF3E  F014         	goto	l8337
 14413  0028FC                     u8640:
 14414  0028FC                     
 14415                           ; BSR set to: 0
 14416  0028FC  5160               	movf	___fldiv@rem& (0+255),w,b
 14417  0028FE  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 14418  002900  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 14419  002902  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 14420  002904  B4D8               	btfsc	status,2,c
 14421  002906  EF87  F014         	goto	u8651
 14422  00290A  EF89  F014         	goto	u8650
 14423  00290E                     u8651:
 14424  00290E  EFA1  F014         	goto	l8363
 14425  002912                     u8650:
 14426  002912                     
 14427                           ; BSR set to: 0
 14428  002912  8167               	bsf	___fldiv@grs& (0+255),0,b
 14429  002914  EFA1  F014         	goto	l8363
 14430  002918                     l8357:
 14431                           
 14432                           ; BSR set to: 0
 14433  002918  90D8               	bcf	status,0,c
 14434  00291A  3644               	rlcf	___fldiv@b^0,f,c
 14435  00291C  3645               	rlcf	(___fldiv@b+1)^0,f,c
 14436  00291E  3646               	rlcf	(___fldiv@b+2)^0,f,c
 14437  002920  3647               	rlcf	(___fldiv@b+3)^0,f,c
 14438  002922                     
 14439                           ; BSR set to: 0
 14440  002922  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14441  002924  EF96  F014         	goto	u8661
 14442  002928  EF98  F014         	goto	u8660
 14443  00292C                     u8661:
 14444  00292C  EF99  F014         	goto	l1542
 14445  002930                     u8660:
 14446  002930                     
 14447                           ; BSR set to: 0
 14448  002930  8044               	bsf	___fldiv@b^0,0,c
 14449  002932                     l1542:
 14450                           
 14451                           ; BSR set to: 0
 14452  002932  90D8               	bcf	status,0,c
 14453  002934  3767               	rlcf	___fldiv@grs& (0+255),f,b
 14454  002936  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14455  002938  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14456  00293A  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14457  00293C  0765               	decf	___fldiv@new_exp& (0+255),f,b
 14458  00293E  A0D8               	btfss	status,0,c
 14459  002940  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 14460  002942                     l8363:
 14461                           
 14462                           ; BSR set to: 0
 14463  002942  AE46               	btfss	(___fldiv@b+2)^0,7,c
 14464  002944  EFA6  F014         	goto	u8671
 14465  002948  EFA8  F014         	goto	u8670
 14466  00294C                     u8671:
 14467  00294C  EF8C  F014         	goto	l8357
 14468  002950                     u8670:
 14469  002950                     
 14470                           ; BSR set to: 0
 14471  002950  0E00               	movlw	0
 14472  002952  6F6C               	movwf	___fldiv@aexp& (0+255),b
 14473  002954                     
 14474                           ; BSR set to: 0
 14475  002954  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14476  002956  EFAF  F014         	goto	u8681
 14477  00295A  EFB1  F014         	goto	u8680
 14478  00295E                     u8681:
 14479  00295E  EFD5  F014         	goto	l1544
 14480  002962                     u8680:
 14481  002962                     
 14482                           ; BSR set to: 0
 14483  002962  0EFF               	movlw	255
 14484  002964  1567               	andwf	___fldiv@grs& (0+255),w,b
 14485  002966  6E4C               	movwf	??___fldiv^0,c
 14486  002968  0EFF               	movlw	255
 14487  00296A  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14488  00296C  6E4D               	movwf	(??___fldiv+1)^0,c
 14489  00296E  0EFF               	movlw	255
 14490  002970  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14491  002972  6E4E               	movwf	(??___fldiv+2)^0,c
 14492  002974  0E7F               	movlw	127
 14493  002976  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14494  002978  6E4F               	movwf	(??___fldiv+3)^0,c
 14495  00297A  504C               	movf	??___fldiv^0,w,c
 14496  00297C  104D               	iorwf	(??___fldiv+1)^0,w,c
 14497  00297E  104E               	iorwf	(??___fldiv+2)^0,w,c
 14498  002980  104F               	iorwf	(??___fldiv+3)^0,w,c
 14499  002982  B4D8               	btfsc	status,2,c
 14500  002984  EFC6  F014         	goto	u8691
 14501  002988  EFC8  F014         	goto	u8690
 14502  00298C                     u8691:
 14503  00298C  EFCC  F014         	goto	l1545
 14504  002990                     u8690:
 14505  002990                     l8371:
 14506                           
 14507                           ; BSR set to: 0
 14508  002990  0E01               	movlw	1
 14509  002992  6F6C               	movwf	___fldiv@aexp& (0+255),b
 14510  002994  EFD5  F014         	goto	l1544
 14511  002998                     l1545:
 14512                           
 14513                           ; BSR set to: 0
 14514  002998  A044               	btfss	___fldiv@b^0,0,c
 14515  00299A  EFD1  F014         	goto	u8701
 14516  00299E  EFD3  F014         	goto	u8700
 14517  0029A2                     u8701:
 14518  0029A2  EFD5  F014         	goto	l1544
 14519  0029A6                     u8700:
 14520  0029A6  EFC8  F014         	goto	l8371
 14521  0029AA                     l1544:
 14522                           
 14523                           ; BSR set to: 0
 14524  0029AA  516C               	movf	___fldiv@aexp& (0+255),w,b
 14525  0029AC  B4D8               	btfsc	status,2,c
 14526  0029AE  EFDB  F014         	goto	u8711
 14527  0029B2  EFDD  F014         	goto	u8710
 14528  0029B6                     u8711:
 14529  0029B6  EF01  F015         	goto	l8383
 14530  0029BA                     u8710:
 14531  0029BA                     
 14532                           ; BSR set to: 0
 14533  0029BA  0E01               	movlw	1
 14534  0029BC  2644               	addwf	___fldiv@b^0,f,c
 14535  0029BE  0E00               	movlw	0
 14536  0029C0  2245               	addwfc	(___fldiv@b+1)^0,f,c
 14537  0029C2  2246               	addwfc	(___fldiv@b+2)^0,f,c
 14538  0029C4  2247               	addwfc	(___fldiv@b+3)^0,f,c
 14539  0029C6                     
 14540                           ; BSR set to: 0
 14541  0029C6  A047               	btfss	(___fldiv@b+3)^0,0,c
 14542  0029C8  EFE8  F014         	goto	u8721
 14543  0029CC  EFEA  F014         	goto	u8720
 14544  0029D0                     u8721:
 14545  0029D0  EF01  F015         	goto	l8383
 14546  0029D4                     u8720:
 14547  0029D4                     
 14548                           ; BSR set to: 0
 14549  0029D4  C044  F04C         	movff	___fldiv@b,??___fldiv
 14550  0029D8  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
 14551  0029DC  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
 14552  0029E0  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
 14553  0029E4  344F               	rlcf	(??___fldiv+3)^0,w,c
 14554  0029E6  324F               	rrcf	(??___fldiv+3)^0,f,c
 14555  0029E8  324E               	rrcf	(??___fldiv+2)^0,f,c
 14556  0029EA  324D               	rrcf	(??___fldiv+1)^0,f,c
 14557  0029EC  324C               	rrcf	??___fldiv^0,f,c
 14558  0029EE  C04C  F044         	movff	??___fldiv,___fldiv@b
 14559  0029F2  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
 14560  0029F6  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
 14561  0029FA  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
 14562  0029FE                     
 14563                           ; BSR set to: 0
 14564  0029FE  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 14565  002A00  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14566  002A02                     l8383:
 14567                           
 14568                           ; BSR set to: 0
 14569  002A02  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14570  002A04  EF0C  F015         	goto	u8731
 14571  002A08  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14572  002A0A  E108               	bnz	u8730
 14573  002A0C  2965               	incf	___fldiv@new_exp& (0+255),w,b
 14574  002A0E  A0D8               	btfss	status,0,c
 14575  002A10  EF0C  F015         	goto	u8731
 14576  002A14  EF0E  F015         	goto	u8730
 14577  002A18                     u8731:
 14578  002A18  EF19  F015         	goto	l8387
 14579  002A1C                     u8730:
 14580  002A1C                     
 14581                           ; BSR set to: 0
 14582  002A1C  0E00               	movlw	0
 14583  002A1E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14584  002A20  6965               	setf	___fldiv@new_exp& (0+255),b
 14585  002A22  0E00               	movlw	0
 14586  002A24  6E44               	movwf	___fldiv@b^0,c
 14587  002A26  0E00               	movlw	0
 14588  002A28  6E45               	movwf	(___fldiv@b+1)^0,c
 14589  002A2A  0E00               	movlw	0
 14590  002A2C  6E46               	movwf	(___fldiv@b+2)^0,c
 14591  002A2E  0E00               	movlw	0
 14592  002A30  6E47               	movwf	(___fldiv@b+3)^0,c
 14593  002A32                     l8387:
 14594                           
 14595                           ; BSR set to: 0
 14596  002A32  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14597  002A34  EF26  F015         	goto	u8740
 14598  002A38  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14599  002A3A  E106               	bnz	u8741
 14600  002A3C  0565               	decf	___fldiv@new_exp& (0+255),w,b
 14601  002A3E  B0D8               	btfsc	status,0,c
 14602  002A40  EF24  F015         	goto	u8741
 14603  002A44  EF26  F015         	goto	u8740
 14604  002A48                     u8741:
 14605  002A48  EF34  F015         	goto	l8391
 14606  002A4C                     u8740:
 14607  002A4C                     
 14608                           ; BSR set to: 0
 14609  002A4C  0E00               	movlw	0
 14610  002A4E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14611  002A50  0E00               	movlw	0
 14612  002A52  6F65               	movwf	___fldiv@new_exp& (0+255),b
 14613  002A54  0E00               	movlw	0
 14614  002A56  6E44               	movwf	___fldiv@b^0,c
 14615  002A58  0E00               	movlw	0
 14616  002A5A  6E45               	movwf	(___fldiv@b+1)^0,c
 14617  002A5C  0E00               	movlw	0
 14618  002A5E  6E46               	movwf	(___fldiv@b+2)^0,c
 14619  002A60  0E00               	movlw	0
 14620  002A62  6E47               	movwf	(___fldiv@b+3)^0,c
 14621  002A64  0E00               	movlw	0
 14622  002A66  6F64               	movwf	___fldiv@sign& (0+255),b
 14623  002A68                     l8391:
 14624                           
 14625                           ; BSR set to: 0
 14626  002A68  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 14627  002A6C                     
 14628                           ; BSR set to: 0
 14629  002A6C  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 14630  002A6E  EF3B  F015         	goto	u8751
 14631  002A72  EF3D  F015         	goto	u8750
 14632  002A76                     u8751:
 14633  002A76  EF40  F015         	goto	l8397
 14634  002A7A                     u8750:
 14635  002A7A                     
 14636                           ; BSR set to: 0
 14637  002A7A  8E46               	bsf	(___fldiv@b+2)^0,7,c
 14638  002A7C  EF41  F015         	goto	l8399
 14639  002A80                     l8397:
 14640                           
 14641                           ; BSR set to: 0
 14642  002A80  9E46               	bcf	(___fldiv@b+2)^0,7,c
 14643  002A82                     l8399:
 14644                           
 14645                           ; BSR set to: 0
 14646  002A82  90D8               	bcf	status,0,c
 14647  002A84  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 14648  002A86  6E47               	movwf	(___fldiv@b+3)^0,c
 14649  002A88  EFF7  F013         	goto	l8313
 14650  002A8C                     l1531:
 14651                           
 14652                           ; BSR set to: 0
 14653  002A8C  0012               	return		;funcret
 14654  002A8E                     __end_of___fldiv:
 14655                           	opt callstack 0
 14656                           
 14657 ;; *************** function _forzarReversa *****************
 14658 ;; Defined at:
 14659 ;;		line 496 in file "main.c"
 14660 ;; Parameters:    Size  Location     Type
 14661 ;;		None
 14662 ;; Auto vars:     Size  Location     Type
 14663 ;;		None
 14664 ;; Return value:  Size  Location     Type
 14665 ;;                  1    wreg      void 
 14666 ;; Registers used:
 14667 ;;		wreg
 14668 ;; Tracked objects:
 14669 ;;		On entry : 0/0
 14670 ;;		On exit  : 0/0
 14671 ;;		Unchanged: 0/0
 14672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14673 ;;      Params:         0       0       0       0       0       0       0       0       0
 14674 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14675 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14676 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14677 ;;Total ram usage:        2 bytes
 14678 ;; Hardware stack levels used:    1
 14679 ;; Hardware stack levels required when called:    2
 14680 ;; This function calls:
 14681 ;;		Nothing
 14682 ;; This function is called by:
 14683 ;;		_forzarEspejeoIzquierda
 14684 ;;		_forzarEspejeoDerecha
 14685 ;; This function uses a non-reentrant model
 14686 ;;
 14687                           
 14688                           	psect	text62
 14689  005552                     __ptext62:
 14690                           	opt callstack 0
 14691  005552                     _forzarReversa:
 14692                           	opt callstack 24
 14693  005552                     
 14694                           ;main.c: 497:     LATB4 = 0;
 14695  005552  988A               	bcf	3978,4,c	;volatile
 14696                           
 14697                           ;main.c: 498:     LATB5 = 1;
 14698  005554  8A8A               	bsf	3978,5,c	;volatile
 14699                           
 14700                           ;main.c: 499:     LATB6 = 0;
 14701  005556  9C8A               	bcf	3978,6,c	;volatile
 14702                           
 14703                           ;main.c: 500:     LATB7 = 1;
 14704  005558  8E8A               	bsf	3978,7,c	;volatile
 14705  00555A                     
 14706                           ;main.c: 502:     _delay((unsigned long)((400)*(4000000/4000.0)));
 14707  00555A  0E03               	movlw	3
 14708  00555C  6E07               	movwf	(??_forzarReversa+1)^0,c
 14709  00555E  0E08               	movlw	8
 14710  005560  6E06               	movwf	??_forzarReversa^0,c
 14711  005562  0E77               	movlw	119
 14712  005564                     u12017:
 14713  005564  2EE8               	decfsz	wreg,f,c
 14714  005566  D7FE               	bra	u12017
 14715  005568  2E06               	decfsz	??_forzarReversa^0,f,c
 14716  00556A  D7FC               	bra	u12017
 14717  00556C  2E07               	decfsz	(??_forzarReversa+1)^0,f,c
 14718  00556E  D7FA               	bra	u12017
 14719  005570  F000               	nop	
 14720  005572  0012               	return		;funcret
 14721  005574                     __end_of_forzarReversa:
 14722                           	opt callstack 0
 14723                           
 14724 ;; *************** function _forzarParoAuto *****************
 14725 ;; Defined at:
 14726 ;;		line 485 in file "main.c"
 14727 ;; Parameters:    Size  Location     Type
 14728 ;;		None
 14729 ;; Auto vars:     Size  Location     Type
 14730 ;;		None
 14731 ;; Return value:  Size  Location     Type
 14732 ;;                  1    wreg      void 
 14733 ;; Registers used:
 14734 ;;		wreg
 14735 ;; Tracked objects:
 14736 ;;		On entry : 0/0
 14737 ;;		On exit  : 0/0
 14738 ;;		Unchanged: 0/0
 14739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14740 ;;      Params:         0       0       0       0       0       0       0       0       0
 14741 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14742 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14743 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14744 ;;Total ram usage:        1 bytes
 14745 ;; Hardware stack levels used:    1
 14746 ;; Hardware stack levels required when called:    2
 14747 ;; This function calls:
 14748 ;;		Nothing
 14749 ;; This function is called by:
 14750 ;;		_comportamientoBasico
 14751 ;;		_finalizarRecorrido
 14752 ;;		_forzarEspejeoIzquierda
 14753 ;;		_forzarEspejeoDerecha
 14754 ;;		_main
 14755 ;; This function uses a non-reentrant model
 14756 ;;
 14757                           
 14758                           	psect	text63
 14759  0055E8                     __ptext63:
 14760                           	opt callstack 0
 14761  0055E8                     _forzarParoAuto:
 14762                           	opt callstack 28
 14763  0055E8                     
 14764                           ;main.c: 487:     LATB4 = 0;
 14765  0055E8  988A               	bcf	3978,4,c	;volatile
 14766                           
 14767                           ;main.c: 488:     LATB5 = 0;
 14768  0055EA  9A8A               	bcf	3978,5,c	;volatile
 14769                           
 14770                           ;main.c: 489:     LATB6 = 0;
 14771  0055EC  9C8A               	bcf	3978,6,c	;volatile
 14772                           
 14773                           ;main.c: 492:     if (!0)
 14774  0055EE  9E8A               	bcf	3978,7,c	;volatile
 14775  0055F0                     
 14776                           ;main.c: 493:         _delay((unsigned long)((35)*(4000000/4000.0)));
 14777  0055F0  0E2E               	movlw	46
 14778  0055F2  6E06               	movwf	??_forzarParoAuto^0,c
 14779  0055F4  0E73               	movlw	115
 14780  0055F6                     u12027:
 14781  0055F6  2EE8               	decfsz	wreg,f,c
 14782  0055F8  D7FE               	bra	u12027
 14783  0055FA  2E06               	decfsz	??_forzarParoAuto^0,f,c
 14784  0055FC  D7FC               	bra	u12027
 14785  0055FE  F000               	nop	
 14786  005600  0012               	return		;funcret
 14787  005602                     __end_of_forzarParoAuto:
 14788                           	opt callstack 0
 14789                           
 14790 ;; *************** function _forzarGiroDerecha *****************
 14791 ;; Defined at:
 14792 ;;		line 525 in file "main.c"
 14793 ;; Parameters:    Size  Location     Type
 14794 ;;		None
 14795 ;; Auto vars:     Size  Location     Type
 14796 ;;		None
 14797 ;; Return value:  Size  Location     Type
 14798 ;;                  1    wreg      void 
 14799 ;; Registers used:
 14800 ;;		wreg
 14801 ;; Tracked objects:
 14802 ;;		On entry : 0/0
 14803 ;;		On exit  : 0/0
 14804 ;;		Unchanged: 0/0
 14805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14806 ;;      Params:         0       0       0       0       0       0       0       0       0
 14807 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14808 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14809 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14810 ;;Total ram usage:        2 bytes
 14811 ;; Hardware stack levels used:    1
 14812 ;; Hardware stack levels required when called:    2
 14813 ;; This function calls:
 14814 ;;		Nothing
 14815 ;; This function is called by:
 14816 ;;		_forzarEspejeoDerecha
 14817 ;; This function uses a non-reentrant model
 14818 ;;
 14819                           
 14820                           	psect	text64
 14821  005594                     __ptext64:
 14822                           	opt callstack 0
 14823  005594                     _forzarGiroDerecha:
 14824                           	opt callstack 24
 14825  005594                     
 14826                           ;main.c: 526:     LATB4 = 1;
 14827  005594  888A               	bsf	3978,4,c	;volatile
 14828                           
 14829                           ;main.c: 527:     LATB5 = 0;
 14830  005596  9A8A               	bcf	3978,5,c	;volatile
 14831                           
 14832                           ;main.c: 528:     LATB6 = 0;
 14833  005598  9C8A               	bcf	3978,6,c	;volatile
 14834                           
 14835                           ;main.c: 529:     LATB7 = 0;
 14836  00559A  9E8A               	bcf	3978,7,c	;volatile
 14837  00559C                     
 14838                           ;main.c: 530:     _delay((unsigned long)((410)*(4000000/4000.0)));
 14839  00559C  0E03               	movlw	3
 14840  00559E  6E07               	movwf	(??_forzarGiroDerecha+1)^0,c
 14841  0055A0  0E15               	movlw	21
 14842  0055A2  6E06               	movwf	??_forzarGiroDerecha^0,c
 14843  0055A4  0E74               	movlw	116
 14844  0055A6                     u12037:
 14845  0055A6  2EE8               	decfsz	wreg,f,c
 14846  0055A8  D7FE               	bra	u12037
 14847  0055AA  2E06               	decfsz	??_forzarGiroDerecha^0,f,c
 14848  0055AC  D7FC               	bra	u12037
 14849  0055AE  2E07               	decfsz	(??_forzarGiroDerecha+1)^0,f,c
 14850  0055B0  D7FA               	bra	u12037
 14851  0055B2  0012               	return		;funcret
 14852  0055B4                     __end_of_forzarGiroDerecha:
 14853                           	opt callstack 0
 14854                           
 14855 ;; *************** function _decidirDireccion *****************
 14856 ;; Defined at:
 14857 ;;		line 880 in file "main.c"
 14858 ;; Parameters:    Size  Location     Type
 14859 ;;  caminosRecor    2   63[COMRAM] PTR unsigned char 
 14860 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 14861 ;;  investigando    2   65[COMRAM] PTR unsigned char 
 14862 ;;		 -> comportamientoBasico@investigandoCruce(1), 
 14863 ;;  posicionInvC    2   67[COMRAM] PTR unsigned char 
 14864 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
 14865 ;;  contCaminosR    2   69[COMRAM] PTR unsigned char 
 14866 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
 14867 ;;  caminoActual    2   71[COMRAM] PTR unsigned char 
 14868 ;;		 -> comportamientoBasico@caminoActual(1), 
 14869 ;;  cambioOrient    2   73[COMRAM] PTR unsigned char 
 14870 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
 14871 ;; Auto vars:     Size  Location     Type
 14872 ;;  direccionEle    1   77[COMRAM] unsigned char 
 14873 ;; Return value:  Size  Location     Type
 14874 ;;                  1    wreg      unsigned char 
 14875 ;; Registers used:
 14876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14877 ;; Tracked objects:
 14878 ;;		On entry : 0/0
 14879 ;;		On exit  : 0/0
 14880 ;;		Unchanged: 0/0
 14881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14882 ;;      Params:        12       0       0       0       0       0       0       0       0
 14883 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14884 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14885 ;;      Totals:        15       0       0       0       0       0       0       0       0
 14886 ;;Total ram usage:       15 bytes
 14887 ;; Hardware stack levels used:    1
 14888 ;; Hardware stack levels required when called:    4
 14889 ;; This function calls:
 14890 ;;		___flge
 14891 ;;		_seLlegoAlDestino
 14892 ;; This function is called by:
 14893 ;;		_comportamientoBasico
 14894 ;; This function uses a non-reentrant model
 14895 ;;
 14896                           
 14897                           	psect	text65
 14898  001AC4                     __ptext65:
 14899                           	opt callstack 0
 14900  001AC4                     _decidirDireccion:
 14901                           	opt callstack 25
 14902  001AC4                     
 14903                           ;main.c: 880: T_UBYTE decidirDireccion(T_UBYTE* caminosRecorrer, T_UBYTE* investigandoCr
      +                          uce, T_UBYTE* posicionInvCruce,;main.c: 881:         T_UBYTE* contCaminosRecorridos, T_U
      +                          BYTE* caminoActual, T_BOOL* cambioOrientacionCarro) {;main.c: 883:     T_UBYTE direccion
      +                          Elegida;;main.c: 884:     llegoDestino = seLlegoAlDestino();
 14904  001AC4  EC48  F02A         	call	_seLlegoAlDestino	;wreg free
 14905  001AC8  0100               	movlb	0	; () banked
 14906  001ACA  6FFE               	movwf	_llegoDestino& (0+255),b
 14907  001ACC                     
 14908                           ; BSR set to: 0
 14909                           ;main.c: 887:     if (*posicionInvCruce && *investigandoCruce) {
 14910  001ACC  C044  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
 14911  001AD0  C045  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
 14912  001AD4  50DF               	movf	indf2,w,c
 14913  001AD6  B4D8               	btfsc	status,2,c
 14914  001AD8  EF70  F00D         	goto	u11141
 14915  001ADC  EF72  F00D         	goto	u11140
 14916  001AE0                     u11141:
 14917  001AE0  EF28  F00F         	goto	l10085
 14918  001AE4                     u11140:
 14919  001AE4                     
 14920                           ; BSR set to: 0
 14921  001AE4  C042  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
 14922  001AE8  C043  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
 14923  001AEC  50DF               	movf	indf2,w,c
 14924  001AEE  B4D8               	btfsc	status,2,c
 14925  001AF0  EF7C  F00D         	goto	u11151
 14926  001AF4  EF7E  F00D         	goto	u11150
 14927  001AF8                     u11151:
 14928  001AF8  EF28  F00F         	goto	l10085
 14929  001AFC                     u11150:
 14930  001AFC                     
 14931                           ; BSR set to: 0
 14932                           ;main.c: 889:         if (*posicionInvCruce)
 14933  001AFC  C044  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
 14934  001B00  C045  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
 14935  001B04  50DF               	movf	indf2,w,c
 14936  001B06  B4D8               	btfsc	status,2,c
 14937  001B08  EF88  F00D         	goto	u11161
 14938  001B0C  EF8A  F00D         	goto	u11160
 14939  001B10                     u11161:
 14940  001B10  EF90  F00D         	goto	l9847
 14941  001B14                     u11160:
 14942  001B14                     
 14943                           ; BSR set to: 0
 14944                           ;main.c: 890:             *posicionInvCruce = 0;
 14945  001B14  C044  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
 14946  001B18  C045  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
 14947  001B1C  0E00               	movlw	0
 14948  001B1E  6EDF               	movwf	indf2,c
 14949  001B20                     l9847:
 14950                           
 14951                           ; BSR set to: 0
 14952                           ;main.c: 892:         if (llegoDestino) {
 14953  001B20  51FE               	movf	_llegoDestino& (0+255),w,b
 14954  001B22  B4D8               	btfsc	status,2,c
 14955  001B24  EF96  F00D         	goto	u11171
 14956  001B28  EF98  F00D         	goto	u11170
 14957  001B2C                     u11171:
 14958  001B2C  EFF6  F00D         	goto	l9871
 14959  001B30                     u11170:
 14960  001B30                     
 14961                           ; BSR set to: 0
 14962                           ;main.c: 893:             direccionElegida = ALTO;
 14963  001B30  0E04               	movlw	4
 14964  001B32  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14965                           
 14966                           ;main.c: 895:         } else {
 14967  001B34  EF13  F00E         	goto	l9873
 14968  001B38                     l9851:
 14969                           
 14970                           ; BSR set to: 0
 14971                           ;main.c: 899:                     if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1'
      +                          )
 14972  001B38  C040  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
 14973  001B3C  C041  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
 14974  001B40  0E31               	movlw	49
 14975  001B42  18DE               	xorwf	postinc2,w,c
 14976  001B44  A4D8               	btfss	status,2,c
 14977  001B46  EFA7  F00D         	goto	u11181
 14978  001B4A  EFA9  F00D         	goto	u11180
 14979  001B4E                     u11181:
 14980  001B4E  EFB1  F00D         	goto	l9855
 14981  001B52                     u11180:
 14982  001B52                     
 14983                           ; BSR set to: 0
 14984                           ;main.c: 900:                         caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] = 'X';
 14985  001B52  C040  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
 14986  001B56  C041  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
 14987  001B5A  0E58               	movlw	88
 14988  001B5C  6EDF               	movwf	indf2,c
 14989  001B5E  EF13  F00E         	goto	l9873
 14990  001B62                     l9855:
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;main.c: 903:                         if (caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1 ] =
      +                          = '1')
 14994  001B62  EE20 F001          	lfsr	2,1
 14995  001B66  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14996  001B68  26D9               	addwf	fsr2l,f,c
 14997  001B6A  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14998  001B6C  22DA               	addwfc	fsr2h,f,c
 14999  001B6E  0E31               	movlw	49
 15000  001B70  18DE               	xorwf	postinc2,w,c
 15001  001B72  A4D8               	btfss	status,2,c
 15002  001B74  EFBE  F00D         	goto	u11191
 15003  001B78  EFC0  F00D         	goto	u11190
 15004  001B7C                     u11191:
 15005  001B7C  EF13  F00E         	goto	l558
 15006  001B80                     u11190:
 15007  001B80                     l9857:
 15008                           
 15009                           ; BSR set to: 0
 15010                           ;main.c: 904:                             caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1 ] =
      +                           'X';
 15011  001B80  EE20 F001          	lfsr	2,1
 15012  001B84  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15013  001B86  26D9               	addwf	fsr2l,f,c
 15014  001B88  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15015  001B8A  22DA               	addwfc	fsr2h,f,c
 15016  001B8C  0E58               	movlw	88
 15017  001B8E  6EDF               	movwf	indf2,c
 15018  001B90  EF13  F00E         	goto	l9873
 15019  001B94                     l9859:
 15020                           
 15021                           ; BSR set to: 0
 15022                           ;main.c: 909:                     if (caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1 ] == '1
      +                          ')
 15023  001B94  EE20 F001          	lfsr	2,1
 15024  001B98  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15025  001B9A  26D9               	addwf	fsr2l,f,c
 15026  001B9C  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15027  001B9E  22DA               	addwfc	fsr2h,f,c
 15028  001BA0  0E31               	movlw	49
 15029  001BA2  18DE               	xorwf	postinc2,w,c
 15030  001BA4  A4D8               	btfss	status,2,c
 15031  001BA6  EFD7  F00D         	goto	u11201
 15032  001BAA  EFD9  F00D         	goto	u11200
 15033  001BAE                     u11201:
 15034  001BAE  EFDB  F00D         	goto	l9863
 15035  001BB2                     u11200:
 15036  001BB2  EFC0  F00D         	goto	l9857
 15037  001BB6                     l9863:
 15038                           
 15039                           ; BSR set to: 0
 15040                           ;main.c: 912:                         caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1 ] = 'X';
 15041  001BB6  EE20 F002          	lfsr	2,2
 15042  001BBA  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15043  001BBC  26D9               	addwf	fsr2l,f,c
 15044  001BBE  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15045  001BC0  22DA               	addwfc	fsr2h,f,c
 15046  001BC2  0E58               	movlw	88
 15047  001BC4  6EDF               	movwf	indf2,c
 15048  001BC6  EF13  F00E         	goto	l9873
 15049  001BCA                     l9865:
 15050                           
 15051                           ; BSR set to: 0
 15052                           ;main.c: 918:                     if (caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1 ] == '1'
      +                          )
 15053  001BCA  EE20 F002          	lfsr	2,2
 15054  001BCE  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15055  001BD0  26D9               	addwf	fsr2l,f,c
 15056  001BD2  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15057  001BD4  22DA               	addwfc	fsr2h,f,c
 15058  001BD6  0E31               	movlw	49
 15059  001BD8  18DE               	xorwf	postinc2,w,c
 15060  001BDA  A4D8               	btfss	status,2,c
 15061  001BDC  EFF2  F00D         	goto	u11211
 15062  001BE0  EFF4  F00D         	goto	u11210
 15063  001BE4                     u11211:
 15064  001BE4  EF13  F00E         	goto	l9873
 15065  001BE8                     u11210:
 15066  001BE8  EFDB  F00D         	goto	l9863
 15067  001BEC                     l9871:
 15068                           
 15069                           ; BSR set to: 0
 15070  001BEC  C046  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
 15071  001BF0  C047  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
 15072  001BF4  50DF               	movf	indf2,w,c
 15073  001BF6  6E4C               	movwf	??_decidirDireccion^0,c
 15074  001BF8  6A4D               	clrf	(??_decidirDireccion+1)^0,c
 15075                           
 15076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15077                           ; Switch size 1, requested type "simple"
 15078                           ; Number of cases is 1, Range of values is 0 to 0
 15079                           ; switch strategies available:
 15080                           ; Name         Instructions Cycles
 15081                           ; simple_byte            4     3 (average)
 15082                           ;	Chosen strategy is simple_byte
 15083  001BFA  504D               	movf	(??_decidirDireccion+1)^0,w,c
 15084  001BFC  0A00               	xorlw	0	; case 0
 15085  001BFE  B4D8               	btfsc	status,2,c
 15086  001C00  EF04  F00E         	goto	l11137
 15087  001C04  EF13  F00E         	goto	l9873
 15088  001C08                     l11137:
 15089                           
 15090                           ; BSR set to: 0
 15091                           ; Switch size 1, requested type "simple"
 15092                           ; Number of cases is 3, Range of values is 1 to 3
 15093                           ; switch strategies available:
 15094                           ; Name         Instructions Cycles
 15095                           ; simple_byte           10     6 (average)
 15096                           ;	Chosen strategy is simple_byte
 15097  001C08  504C               	movf	??_decidirDireccion^0,w,c
 15098  001C0A  0A01               	xorlw	1	; case 1
 15099  001C0C  B4D8               	btfsc	status,2,c
 15100  001C0E  EF9C  F00D         	goto	l9851
 15101  001C12  0A03               	xorlw	3	; case 2
 15102  001C14  B4D8               	btfsc	status,2,c
 15103  001C16  EFCA  F00D         	goto	l9859
 15104  001C1A  0A01               	xorlw	1	; case 3
 15105  001C1C  B4D8               	btfsc	status,2,c
 15106  001C1E  EFE5  F00D         	goto	l9865
 15107  001C22  EF13  F00E         	goto	l9873
 15108  001C26                     l558:
 15109  001C26                     l9873:
 15110                           
 15111                           ; BSR set to: 0
 15112                           ;main.c: 928:         if (!(*cambioOrientacionCarro)) {
 15113  001C26  C04A  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
 15114  001C2A  C04B  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
 15115  001C2E  50DF               	movf	indf2,w,c
 15116  001C30  A4D8               	btfss	status,2,c
 15117  001C32  EF1D  F00E         	goto	u11221
 15118  001C36  EF1F  F00E         	goto	u11220
 15119  001C3A                     u11221:
 15120  001C3A  EF0B  F00F         	goto	l10083
 15121  001C3E                     u11220:
 15122  001C3E                     
 15123                           ; BSR set to: 0
 15124                           ;main.c: 930:             if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1')
 15125  001C3E  C040  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
 15126  001C42  C041  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
 15127  001C46  0E31               	movlw	49
 15128  001C48  18DE               	xorwf	postinc2,w,c
 15129  001C4A  A4D8               	btfss	status,2,c
 15130  001C4C  EF2A  F00E         	goto	u11231
 15131  001C50  EF2C  F00E         	goto	u11230
 15132  001C54                     u11231:
 15133  001C54  EF30  F00E         	goto	l9879
 15134  001C58                     u11230:
 15135  001C58                     
 15136                           ; BSR set to: 0
 15137                           ;main.c: 931:                 direccionElegida = SENSOR_PRIORIDAD_ALTA;
 15138  001C58  0E01               	movlw	1
 15139  001C5A  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15140  001C5C  EF54  F00E         	goto	l9887
 15141  001C60                     l9879:
 15142                           
 15143                           ; BSR set to: 0
 15144  001C60  EE20 F001          	lfsr	2,1
 15145  001C64  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15146  001C66  26D9               	addwf	fsr2l,f,c
 15147  001C68  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15148  001C6A  22DA               	addwfc	fsr2h,f,c
 15149  001C6C  0E31               	movlw	49
 15150  001C6E  18DE               	xorwf	postinc2,w,c
 15151  001C70  A4D8               	btfss	status,2,c
 15152  001C72  EF3D  F00E         	goto	u11241
 15153  001C76  EF3F  F00E         	goto	u11240
 15154  001C7A                     u11241:
 15155  001C7A  EF43  F00E         	goto	l9883
 15156  001C7E                     u11240:
 15157  001C7E                     
 15158                           ; BSR set to: 0
 15159                           ;main.c: 933:                 direccionElegida = SENSOR_PRIORIDAD_MEDIA;
 15160  001C7E  0E02               	movlw	2
 15161  001C80  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15162  001C82  EF54  F00E         	goto	l9887
 15163  001C86                     l9883:
 15164                           
 15165                           ; BSR set to: 0
 15166  001C86  EE20 F002          	lfsr	2,2
 15167  001C8A  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15168  001C8C  26D9               	addwf	fsr2l,f,c
 15169  001C8E  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15170  001C90  22DA               	addwfc	fsr2h,f,c
 15171  001C92  0E31               	movlw	49
 15172  001C94  18DE               	xorwf	postinc2,w,c
 15173  001C96  A4D8               	btfss	status,2,c
 15174  001C98  EF50  F00E         	goto	u11251
 15175  001C9C  EF52  F00E         	goto	u11250
 15176  001CA0                     u11251:
 15177  001CA0  EF54  F00E         	goto	l9887
 15178  001CA4                     u11250:
 15179  001CA4                     
 15180                           ; BSR set to: 0
 15181                           ;main.c: 935:                 direccionElegida = SENSOR_PRIORIDAD_BAJA;
 15182  001CA4  0E03               	movlw	3
 15183  001CA6  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15184  001CA8                     l9887:
 15185                           
 15186                           ; BSR set to: 0
 15187                           ;main.c: 938:             *caminoActual = direccionElegida;
 15188  001CA8  C048  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
 15189  001CAC  C049  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
 15190  001CB0  C04E  FFDF         	movff	decidirDireccion@direccionElegida,indf2
 15191  001CB4                     
 15192                           ; BSR set to: 0
 15193                           ;main.c: 939:             *cambioOrientacionCarro = 1;
 15194  001CB4  C04A  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
 15195  001CB8  C04B  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
 15196  001CBC  0E01               	movlw	1
 15197  001CBE  6EDF               	movwf	indf2,c
 15198                           
 15199                           ;main.c: 941:         } else {
 15200  001CC0  EF89  F00F         	goto	l651
 15201  001CC4                     l588:
 15202                           
 15203                           ; BSR set to: 0
 15204  001CC4  EFA5  F00E         	goto	l9987
 15205  001CC8                     l9945:
 15206                           
 15207                           ; BSR set to: 0
 15208                           ;main.c: 997:                             if (SENSOR_PRIORIDAD_MEDIA == IZQUIERDA &&
 15209  001CC8  C040  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
 15210  001CCC  C041  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
 15211  001CD0  0E58               	movlw	88
 15212  001CD2  18DE               	xorwf	postinc2,w,c
 15213  001CD4  A4D8               	btfss	status,2,c
 15214  001CD6  EF6F  F00E         	goto	u11261
 15215  001CDA  EF71  F00E         	goto	u11260
 15216  001CDE                     u11261:
 15217  001CDE  EFA5  F00E         	goto	l9987
 15218  001CE2                     u11260:
 15219  001CE2                     
 15220                           ; BSR set to: 0
 15221  001CE2  EE20 F001          	lfsr	2,1
 15222  001CE6  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15223  001CE8  26D9               	addwf	fsr2l,f,c
 15224  001CEA  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15225  001CEC  22DA               	addwfc	fsr2h,f,c
 15226  001CEE  0E31               	movlw	49
 15227  001CF0  18DE               	xorwf	postinc2,w,c
 15228  001CF2  A4D8               	btfss	status,2,c
 15229  001CF4  EF7E  F00E         	goto	u11271
 15230  001CF8  EF80  F00E         	goto	u11270
 15231  001CFC                     u11271:
 15232  001CFC  EF8A  F00E         	goto	l9965
 15233  001D00                     u11270:
 15234  001D00                     
 15235                           ; BSR set to: 0
 15236                           ;main.c: 998:                                     caminosRecorrer[SENSOR_PRIORIDAD_MEDIA
      +                           - 1] == '1') {;main.c: 999:                                 *caminoActual = IZQUIERDA;
 15237  001D00  C048  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
 15238  001D04  C049  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
 15239  001D08  0E02               	movlw	2
 15240  001D0A  6EDF               	movwf	indf2,c
 15241  001D0C                     
 15242                           ; BSR set to: 0
 15243                           ;main.c: 1000:                                 direccionElegida = DERECHA;
 15244  001D0C  0E03               	movlw	3
 15245  001D0E  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15246                           
 15247                           ;main.c: 1001:                             } else if (SENSOR_PRIORIDAD_MEDIA == DERECHA 
      +                          &&
 15248  001D10  EFA5  F00E         	goto	l9987
 15249  001D14                     l9965:
 15250                           
 15251                           ; BSR set to: 0
 15252  001D14  EE20 F002          	lfsr	2,2
 15253  001D18  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15254  001D1A  26D9               	addwf	fsr2l,f,c
 15255  001D1C  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15256  001D1E  22DA               	addwfc	fsr2h,f,c
 15257  001D20  0E31               	movlw	49
 15258  001D22  18DE               	xorwf	postinc2,w,c
 15259  001D24  A4D8               	btfss	status,2,c
 15260  001D26  EF97  F00E         	goto	u11281
 15261  001D2A  EF99  F00E         	goto	u11280
 15262  001D2E                     u11281:
 15263  001D2E  EF62  F00E         	goto	l588
 15264  001D32                     u11280:
 15265  001D32                     
 15266                           ; BSR set to: 0
 15267                           ;main.c: 1010:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1011:                                 *caminoActual = DERECHA;
 15268  001D32  C048  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
 15269  001D36  C049  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
 15270  001D3A  0E03               	movlw	3
 15271  001D3C  6EDF               	movwf	indf2,c
 15272  001D3E                     
 15273                           ; BSR set to: 0
 15274                           ;main.c: 1012:                                 direccionElegida = IZQUIERDA;
 15275  001D3E  0E02               	movlw	2
 15276  001D40  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15277  001D42  EFA5  F00E         	goto	l9987
 15278  001D46                     l605:
 15279  001D46  EF89  F00F         	goto	l651
 15280  001D4A                     l9987:
 15281                           
 15282                           ; BSR set to: 0
 15283                           ;main.c: 1039:                             if (SENSOR_PRIORIDAD_BAJA == DERECHA &&
 15284  001D4A  EE20 F001          	lfsr	2,1
 15285  001D4E  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15286  001D50  26D9               	addwf	fsr2l,f,c
 15287  001D52  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15288  001D54  22DA               	addwfc	fsr2h,f,c
 15289  001D56  0E58               	movlw	88
 15290  001D58  18DE               	xorwf	postinc2,w,c
 15291  001D5A  A4D8               	btfss	status,2,c
 15292  001D5C  EFB2  F00E         	goto	u11291
 15293  001D60  EFB4  F00E         	goto	u11290
 15294  001D64                     u11291:
 15295  001D64  EF89  F00F         	goto	l651
 15296  001D68                     u11290:
 15297  001D68                     
 15298                           ; BSR set to: 0
 15299  001D68  EE20 F002          	lfsr	2,2
 15300  001D6C  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15301  001D6E  26D9               	addwf	fsr2l,f,c
 15302  001D70  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15303  001D72  22DA               	addwfc	fsr2h,f,c
 15304  001D74  0E31               	movlw	49
 15305  001D76  18DE               	xorwf	postinc2,w,c
 15306  001D78  A4D8               	btfss	status,2,c
 15307  001D7A  EFC1  F00E         	goto	u11301
 15308  001D7E  EFC3  F00E         	goto	u11300
 15309  001D82                     u11301:
 15310  001D82  EFA3  F00E         	goto	l605
 15311  001D86                     u11300:
 15312  001D86                     l9991:
 15313                           
 15314                           ; BSR set to: 0
 15315                           ;main.c: 1040:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1041:                                 *caminoActual = DERECHA;
 15316  001D86  C048  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
 15317  001D8A  C049  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
 15318  001D8E  0E03               	movlw	3
 15319  001D90  6EDF               	movwf	indf2,c
 15320  001D92                     l9993:
 15321                           
 15322                           ;main.c: 1042:                                 direccionElegida = ENFRENTE;
 15323  001D92  0E01               	movlw	1
 15324  001D94  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15325                           
 15326                           ;main.c: 1043:                             } else if (SENSOR_PRIORIDAD_BAJA == ENFRENTE 
      +                          &&
 15327  001D96  EF89  F00F         	goto	l651
 15328  001D9A                     l10033:
 15329                           
 15330                           ; BSR set to: 0
 15331                           ;main.c: 1094:                             if (SENSOR_PRIORIDAD_BAJA == DERECHA &&
 15332  001D9A  EE20 F001          	lfsr	2,1
 15333  001D9E  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15334  001DA0  26D9               	addwf	fsr2l,f,c
 15335  001DA2  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15336  001DA4  22DA               	addwfc	fsr2h,f,c
 15337  001DA6  0E58               	movlw	88
 15338  001DA8  18DE               	xorwf	postinc2,w,c
 15339  001DAA  A4D8               	btfss	status,2,c
 15340  001DAC  EFDA  F00E         	goto	u11311
 15341  001DB0  EFDC  F00E         	goto	u11310
 15342  001DB4                     u11311:
 15343  001DB4  EF89  F00F         	goto	l651
 15344  001DB8                     u11310:
 15345  001DB8                     
 15346                           ; BSR set to: 0
 15347  001DB8  EE20 F002          	lfsr	2,2
 15348  001DBC  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15349  001DBE  26D9               	addwf	fsr2l,f,c
 15350  001DC0  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15351  001DC2  22DA               	addwfc	fsr2h,f,c
 15352  001DC4  0E31               	movlw	49
 15353  001DC6  18DE               	xorwf	postinc2,w,c
 15354  001DC8  A4D8               	btfss	status,2,c
 15355  001DCA  EFE9  F00E         	goto	u11321
 15356  001DCE  EFEB  F00E         	goto	u11320
 15357  001DD2                     u11321:
 15358  001DD2  EFED  F00E         	goto	l10047
 15359  001DD6                     u11320:
 15360  001DD6  EFC3  F00E         	goto	l9991
 15361  001DDA                     l10047:
 15362                           
 15363                           ; BSR set to: 0
 15364                           ;main.c: 1103:                                 *contCaminosRecorridos = 3;
 15365  001DDA  C046  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
 15366  001DDE  C047  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
 15367  001DE2  0E03               	movlw	3
 15368  001DE4  6EDF               	movwf	indf2,c
 15369  001DE6  EF89  F00F         	goto	l651
 15370  001DEA                     l10077:
 15371                           
 15372                           ; BSR set to: 0
 15373                           ;main.c: 1142:                     *cambioOrientacionCarro = 0;
 15374  001DEA  C04A  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
 15375  001DEE  C04B  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
 15376  001DF2  0E00               	movlw	0
 15377  001DF4  6EDF               	movwf	indf2,c
 15378                           
 15379                           ;main.c: 1143:                     *contCaminosRecorridos = 0;
 15380  001DF6  C046  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
 15381  001DFA  C047  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
 15382  001DFE  0E00               	movlw	0
 15383  001E00  6EDF               	movwf	indf2,c
 15384                           
 15385                           ;main.c: 1144:                     *investigandoCruce = 0;
 15386  001E02  C042  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
 15387  001E06  C043  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
 15388  001E0A  0E00               	movlw	0
 15389  001E0C  6EDF               	movwf	indf2,c
 15390  001E0E                     l10079:
 15391                           
 15392                           ; BSR set to: 0
 15393                           ;main.c: 1145:                     direccionElegida = ALTO;
 15394  001E0E  0E04               	movlw	4
 15395  001E10  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15396                           
 15397                           ;main.c: 1147:                     break;
 15398  001E12  EF89  F00F         	goto	l651
 15399  001E16                     l10083:
 15400                           
 15401                           ; BSR set to: 0
 15402  001E16  C046  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
 15403  001E1A  C047  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
 15404  001E1E  50DF               	movf	indf2,w,c
 15405  001E20  6E4C               	movwf	??_decidirDireccion^0,c
 15406  001E22  6A4D               	clrf	(??_decidirDireccion+1)^0,c
 15407                           
 15408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15409                           ; Switch size 1, requested type "simple"
 15410                           ; Number of cases is 1, Range of values is 0 to 0
 15411                           ; switch strategies available:
 15412                           ; Name         Instructions Cycles
 15413                           ; simple_byte            4     3 (average)
 15414                           ;	Chosen strategy is simple_byte
 15415  001E24  504D               	movf	(??_decidirDireccion+1)^0,w,c
 15416  001E26  0A00               	xorlw	0	; case 0
 15417  001E28  B4D8               	btfsc	status,2,c
 15418  001E2A  EF19  F00F         	goto	l11139
 15419  001E2E  EF89  F00F         	goto	l651
 15420  001E32                     l11139:
 15421                           
 15422                           ; BSR set to: 0
 15423                           ; Switch size 1, requested type "simple"
 15424                           ; Number of cases is 3, Range of values is 1 to 3
 15425                           ; switch strategies available:
 15426                           ; Name         Instructions Cycles
 15427                           ; simple_byte           10     6 (average)
 15428                           ;	Chosen strategy is simple_byte
 15429  001E32  504C               	movf	??_decidirDireccion^0,w,c
 15430  001E34  0A01               	xorlw	1	; case 1
 15431  001E36  B4D8               	btfsc	status,2,c
 15432  001E38  EF64  F00E         	goto	l9945
 15433  001E3C  0A03               	xorlw	3	; case 2
 15434  001E3E  B4D8               	btfsc	status,2,c
 15435  001E40  EFCD  F00E         	goto	l10033
 15436  001E44  0A01               	xorlw	1	; case 3
 15437  001E46  B4D8               	btfsc	status,2,c
 15438  001E48  EFF5  F00E         	goto	l10077
 15439  001E4C  EF89  F00F         	goto	l651
 15440  001E50                     l10085:
 15441                           
 15442                           ; BSR set to: 0
 15443                           ;main.c: 1153:         if (llegoDestino) {
 15444  001E50  51FE               	movf	_llegoDestino& (0+255),w,b
 15445  001E52  B4D8               	btfsc	status,2,c
 15446  001E54  EF2E  F00F         	goto	u11331
 15447  001E58  EF30  F00F         	goto	u11330
 15448  001E5C                     u11331:
 15449  001E5C  EF32  F00F         	goto	l10089
 15450  001E60                     u11330:
 15451  001E60  EF07  F00F         	goto	l10079
 15452  001E64                     l10089:
 15453                           
 15454                           ; BSR set to: 0
 15455                           ;main.c: 1159:             if (DISTANCIA_PRIORIDAD_ALTA > 14)
 15456  001E64  0E00               	movlw	0
 15457  001E66  6E34               	movwf	___flge@ff1^0,c
 15458  001E68  0E00               	movlw	0
 15459  001E6A  6E35               	movwf	(___flge@ff1+1)^0,c
 15460  001E6C  0E60               	movlw	96
 15461  001E6E  6E36               	movwf	(___flge@ff1+2)^0,c
 15462  001E70  0E41               	movlw	65
 15463  001E72  6E37               	movwf	(___flge@ff1+3)^0,c
 15464  001E74  C114  F038         	movff	_DISTANCIA_PRIORIDAD_ALTA,___flge@ff2
 15465  001E78  C115  F039         	movff	_DISTANCIA_PRIORIDAD_ALTA+1,___flge@ff2+1
 15466  001E7C  C116  F03A         	movff	_DISTANCIA_PRIORIDAD_ALTA+2,___flge@ff2+2
 15467  001E80  C117  F03B         	movff	_DISTANCIA_PRIORIDAD_ALTA+3,___flge@ff2+3
 15468  001E84  EC22  F020         	call	___flge	;wreg free
 15469  001E88  B0D8               	btfsc	status,0,c
 15470  001E8A  EF49  F00F         	goto	u11341
 15471  001E8E  EF4B  F00F         	goto	u11340
 15472  001E92                     u11341:
 15473  001E92  EF4D  F00F         	goto	l10093
 15474  001E96                     u11340:
 15475  001E96  EFC9  F00E         	goto	l9993
 15476  001E9A                     l10093:
 15477  001E9A  0E00               	movlw	0
 15478  001E9C  6E34               	movwf	___flge@ff1^0,c
 15479  001E9E  0E00               	movlw	0
 15480  001EA0  6E35               	movwf	(___flge@ff1+1)^0,c
 15481  001EA2  0EC8               	movlw	200
 15482  001EA4  6E36               	movwf	(___flge@ff1+2)^0,c
 15483  001EA6  0E41               	movlw	65
 15484  001EA8  6E37               	movwf	(___flge@ff1+3)^0,c
 15485  001EAA  C110  F038         	movff	_DISTANCIA_PRIORIDAD_MEDIA,___flge@ff2
 15486  001EAE  C111  F039         	movff	_DISTANCIA_PRIORIDAD_MEDIA+1,___flge@ff2+1
 15487  001EB2  C112  F03A         	movff	_DISTANCIA_PRIORIDAD_MEDIA+2,___flge@ff2+2
 15488  001EB6  C113  F03B         	movff	_DISTANCIA_PRIORIDAD_MEDIA+3,___flge@ff2+3
 15489  001EBA  EC22  F020         	call	___flge	;wreg free
 15490  001EBE  B0D8               	btfsc	status,0,c
 15491  001EC0  EF64  F00F         	goto	u11351
 15492  001EC4  EF66  F00F         	goto	u11350
 15493  001EC8                     u11351:
 15494  001EC8  EF6A  F00F         	goto	l10097
 15495  001ECC                     u11350:
 15496  001ECC                     
 15497                           ;main.c: 1162:                 direccionElegida = SENSOR_PRIORIDAD_MEDIA;
 15498  001ECC  0E02               	movlw	2
 15499  001ECE  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15500  001ED0  EF89  F00F         	goto	l651
 15501  001ED4                     l10097:
 15502  001ED4  0E00               	movlw	0
 15503  001ED6  6E34               	movwf	___flge@ff1^0,c
 15504  001ED8  0E00               	movlw	0
 15505  001EDA  6E35               	movwf	(___flge@ff1+1)^0,c
 15506  001EDC  0EC8               	movlw	200
 15507  001EDE  6E36               	movwf	(___flge@ff1+2)^0,c
 15508  001EE0  0E41               	movlw	65
 15509  001EE2  6E37               	movwf	(___flge@ff1+3)^0,c
 15510  001EE4  C10C  F038         	movff	_DISTANCIA_PRIORIDAD_BAJA,___flge@ff2
 15511  001EE8  C10D  F039         	movff	_DISTANCIA_PRIORIDAD_BAJA+1,___flge@ff2+1
 15512  001EEC  C10E  F03A         	movff	_DISTANCIA_PRIORIDAD_BAJA+2,___flge@ff2+2
 15513  001EF0  C10F  F03B         	movff	_DISTANCIA_PRIORIDAD_BAJA+3,___flge@ff2+3
 15514  001EF4  EC22  F020         	call	___flge	;wreg free
 15515  001EF8  B0D8               	btfsc	status,0,c
 15516  001EFA  EF81  F00F         	goto	u11361
 15517  001EFE  EF83  F00F         	goto	u11360
 15518  001F02                     u11361:
 15519  001F02  EF87  F00F         	goto	l10101
 15520  001F06                     u11360:
 15521  001F06                     
 15522                           ;main.c: 1164:                 direccionElegida = SENSOR_PRIORIDAD_BAJA;
 15523  001F06  0E03               	movlw	3
 15524  001F08  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15525  001F0A  EF89  F00F         	goto	l651
 15526  001F0E                     l10101:
 15527                           
 15528                           ;main.c: 1166:                 direccionElegida = 0;
 15529  001F0E  0E00               	movlw	0
 15530  001F10  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15531  001F12                     l651:
 15532                           
 15533                           ;main.c: 1173:     return direccionElegida;
 15534  001F12  504E               	movf	decidirDireccion@direccionElegida^0,w,c
 15535  001F14  0012               	return		;funcret
 15536  001F16                     __end_of_decidirDireccion:
 15537                           	opt callstack 0
 15538                           
 15539 ;; *************** function _seLlegoAlDestino *****************
 15540 ;; Defined at:
 15541 ;;		line 868 in file "main.c"
 15542 ;; Parameters:    Size  Location     Type
 15543 ;;		None
 15544 ;; Auto vars:     Size  Location     Type
 15545 ;;  llegoDestino    1   10[COMRAM] unsigned char 
 15546 ;; Return value:  Size  Location     Type
 15547 ;;                  1    wreg      unsigned char 
 15548 ;; Registers used:
 15549 ;;		wreg, status,2, status,0, cstack
 15550 ;; Tracked objects:
 15551 ;;		On entry : 0/0
 15552 ;;		On exit  : 0/0
 15553 ;;		Unchanged: 0/0
 15554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15555 ;;      Params:         0       0       0       0       0       0       0       0       0
 15556 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15557 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15558 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15559 ;;Total ram usage:        1 bytes
 15560 ;; Hardware stack levels used:    1
 15561 ;; Hardware stack levels required when called:    3
 15562 ;; This function calls:
 15563 ;;		_dameLecturaAdc
 15564 ;; This function is called by:
 15565 ;;		_decidirDireccion
 15566 ;; This function uses a non-reentrant model
 15567 ;;
 15568                           
 15569                           	psect	text66
 15570  005490                     __ptext66:
 15571                           	opt callstack 0
 15572  005490                     _seLlegoAlDestino:
 15573                           	opt callstack 25
 15574  005490                     
 15575                           ;main.c: 870:     T_BOOL llegoDestino = 0;
 15576  005490  0E00               	movlw	0
 15577  005492  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15578  005494                     
 15579                           ;main.c: 873:     if (dameLecturaAdc(0) < 20)
 15580  005494  0E00               	movlw	0
 15581  005496  EC31  F029         	call	_dameLecturaAdc
 15582  00549A  BE07               	btfsc	(?_dameLecturaAdc+1)^0,7,c
 15583  00549C  EF5B  F02A         	goto	u11080
 15584  0054A0  5007               	movf	(?_dameLecturaAdc+1)^0,w,c
 15585  0054A2  E107               	bnz	u11081
 15586  0054A4  0E14               	movlw	20
 15587  0054A6  5C06               	subwf	?_dameLecturaAdc^0,w,c
 15588  0054A8  B0D8               	btfsc	status,0,c
 15589  0054AA  EF59  F02A         	goto	u11081
 15590  0054AE  EF5B  F02A         	goto	u11080
 15591  0054B2                     u11081:
 15592  0054B2  EF5D  F02A         	goto	l545
 15593  0054B6                     u11080:
 15594  0054B6                     
 15595                           ;main.c: 874:         llegoDestino = 1;
 15596  0054B6  0E01               	movlw	1
 15597  0054B8  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15598  0054BA                     l545:
 15599                           
 15600                           ;main.c: 876:     return llegoDestino;
 15601  0054BA  500B               	movf	seLlegoAlDestino@llegoDestino^0,w,c
 15602  0054BC  0012               	return		;funcret
 15603  0054BE                     __end_of_seLlegoAlDestino:
 15604                           	opt callstack 0
 15605                           
 15606 ;; *************** function _dameLecturaAdc *****************
 15607 ;; Defined at:
 15608 ;;		line 12 in file "./adc.h"
 15609 ;; Parameters:    Size  Location     Type
 15610 ;;  canalLeer       1    wreg     unsigned char 
 15611 ;; Auto vars:     Size  Location     Type
 15612 ;;  canalLeer       1    9[COMRAM] unsigned char 
 15613 ;; Return value:  Size  Location     Type
 15614 ;;                  2    5[COMRAM] short 
 15615 ;; Registers used:
 15616 ;;		wreg, status,2, status,0
 15617 ;; Tracked objects:
 15618 ;;		On entry : 0/0
 15619 ;;		On exit  : 0/0
 15620 ;;		Unchanged: 0/0
 15621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15622 ;;      Params:         2       0       0       0       0       0       0       0       0
 15623 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15624 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15625 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15626 ;;Total ram usage:        5 bytes
 15627 ;; Hardware stack levels used:    1
 15628 ;; Hardware stack levels required when called:    2
 15629 ;; This function calls:
 15630 ;;		Nothing
 15631 ;; This function is called by:
 15632 ;;		_seLlegoAlDestino
 15633 ;;		_probarSensores
 15634 ;; This function uses a non-reentrant model
 15635 ;;
 15636                           
 15637                           	psect	text67
 15638  005262                     __ptext67:
 15639                           	opt callstack 0
 15640  005262                     _dameLecturaAdc:
 15641                           	opt callstack 25
 15642                           
 15643                           ;incstack = 0
 15644                           ;dameLecturaAdc@canalLeer stored from wreg
 15645  005262  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
 15646  005264                     
 15647                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 15648  005264  0E06               	movlw	6
 15649  005266                     u12047:
 15650  005266  2EE8               	decfsz	wreg,f,c
 15651  005268  D7FE               	bra	u12047
 15652  00526A  D000               	nop2	
 15653  00526C                     
 15654                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
 15655  00526C  80C2               	bsf	194,0,c	;volatile
 15656  00526E                     
 15657                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
 15658  00526E  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
 15659  005272  4608               	rlncf	??_dameLecturaAdc^0,f,c
 15660  005274  4608               	rlncf	??_dameLecturaAdc^0,f,c
 15661  005276  50C2               	movf	194,w,c	;volatile
 15662  005278  1808               	xorwf	??_dameLecturaAdc^0,w,c
 15663  00527A  0BC3               	andlw	-61
 15664  00527C  1808               	xorwf	??_dameLecturaAdc^0,w,c
 15665  00527E  6EC2               	movwf	194,c	;volatile
 15666  005280                     
 15667                           ;./adc.h: 18:     ADCON0bits.GO = 1;
 15668  005280  82C2               	bsf	194,1,c	;volatile
 15669  005282                     
 15670                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
 15671  005282  82C2               	bsf	194,1,c	;volatile
 15672  005284                     l241:
 15673  005284  B2C2               	btfsc	194,1,c	;volatile
 15674  005286  EF47  F029         	goto	u10601
 15675  00528A  EF49  F029         	goto	u10600
 15676  00528E                     u10601:
 15677  00528E  EF42  F029         	goto	l241
 15678  005292                     u10600:
 15679  005292                     
 15680                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
 15681  005292  90C2               	bcf	194,0,c	;volatile
 15682  005294                     
 15683                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
 15684  005294  50C4               	movf	196,w,c	;volatile
 15685  005296  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
 15686  005298  6A08               	clrf	??_dameLecturaAdc^0,c
 15687  00529A  50C3               	movf	195,w,c	;volatile
 15688  00529C  2408               	addwf	??_dameLecturaAdc^0,w,c
 15689  00529E  6E06               	movwf	?_dameLecturaAdc^0,c
 15690  0052A0  0E00               	movlw	0
 15691  0052A2  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
 15692  0052A4  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
 15693  0052A6  0012               	return		;funcret
 15694  0052A8                     __end_of_dameLecturaAdc:
 15695                           	opt callstack 0
 15696                           
 15697 ;; *************** function ___flge *****************
 15698 ;; Defined at:
 15699 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 15700 ;; Parameters:    Size  Location     Type
 15701 ;;  ff1             4   51[COMRAM] short 
 15702 ;;  ff2             4   55[COMRAM] short 
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;		None
 15705 ;; Return value:  Size  Location     Type
 15706 ;;		None               void
 15707 ;; Registers used:
 15708 ;;		wreg, status,2, status,0
 15709 ;; Tracked objects:
 15710 ;;		On entry : 0/0
 15711 ;;		On exit  : 0/0
 15712 ;;		Unchanged: 0/0
 15713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15714 ;;      Params:         8       0       0       0       0       0       0       0       0
 15715 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15716 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15717 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15718 ;;Total ram usage:       12 bytes
 15719 ;; Hardware stack levels used:    1
 15720 ;; Hardware stack levels required when called:    2
 15721 ;; This function calls:
 15722 ;;		Nothing
 15723 ;; This function is called by:
 15724 ;;		_forzarEspejeo
 15725 ;;		_hayCruce
 15726 ;;		_decidirDireccion
 15727 ;;		_efgtoa
 15728 ;;		_roundf
 15729 ;;		_probarPID
 15730 ;;		_probarCruceT
 15731 ;; This function uses a non-reentrant model
 15732 ;;
 15733                           
 15734                           	psect	text68
 15735  004044                     __ptext68:
 15736                           	opt callstack 0
 15737  004044                     ___flge:
 15738                           	opt callstack 23
 15739  004044  0E00               	movlw	0
 15740  004046  1434               	andwf	___flge@ff1^0,w,c
 15741  004048  6E3C               	movwf	??___flge^0,c
 15742  00404A  0E00               	movlw	0
 15743  00404C  1435               	andwf	(___flge@ff1+1)^0,w,c
 15744  00404E  6E3D               	movwf	(??___flge+1)^0,c
 15745  004050  0E80               	movlw	128
 15746  004052  1436               	andwf	(___flge@ff1+2)^0,w,c
 15747  004054  6E3E               	movwf	(??___flge+2)^0,c
 15748  004056  0E7F               	movlw	127
 15749  004058  1437               	andwf	(___flge@ff1+3)^0,w,c
 15750  00405A  6E3F               	movwf	(??___flge+3)^0,c
 15751  00405C  503C               	movf	??___flge^0,w,c
 15752  00405E  103D               	iorwf	(??___flge+1)^0,w,c
 15753  004060  103E               	iorwf	(??___flge+2)^0,w,c
 15754  004062  103F               	iorwf	(??___flge+3)^0,w,c
 15755  004064  A4D8               	btfss	status,2,c
 15756  004066  EF37  F020         	goto	u9721
 15757  00406A  EF39  F020         	goto	u9720
 15758  00406E                     u9721:
 15759  00406E  EF41  F020         	goto	l8931
 15760  004072                     u9720:
 15761  004072  0E00               	movlw	0
 15762  004074  6E34               	movwf	___flge@ff1^0,c
 15763  004076  0E00               	movlw	0
 15764  004078  6E35               	movwf	(___flge@ff1+1)^0,c
 15765  00407A  0E00               	movlw	0
 15766  00407C  6E36               	movwf	(___flge@ff1+2)^0,c
 15767  00407E  0E00               	movlw	0
 15768  004080  6E37               	movwf	(___flge@ff1+3)^0,c
 15769  004082                     l8931:
 15770  004082  0E00               	movlw	0
 15771  004084  1438               	andwf	___flge@ff2^0,w,c
 15772  004086  6E3C               	movwf	??___flge^0,c
 15773  004088  0E00               	movlw	0
 15774  00408A  1439               	andwf	(___flge@ff2+1)^0,w,c
 15775  00408C  6E3D               	movwf	(??___flge+1)^0,c
 15776  00408E  0E80               	movlw	128
 15777  004090  143A               	andwf	(___flge@ff2+2)^0,w,c
 15778  004092  6E3E               	movwf	(??___flge+2)^0,c
 15779  004094  0E7F               	movlw	127
 15780  004096  143B               	andwf	(___flge@ff2+3)^0,w,c
 15781  004098  6E3F               	movwf	(??___flge+3)^0,c
 15782  00409A  503C               	movf	??___flge^0,w,c
 15783  00409C  103D               	iorwf	(??___flge+1)^0,w,c
 15784  00409E  103E               	iorwf	(??___flge+2)^0,w,c
 15785  0040A0  103F               	iorwf	(??___flge+3)^0,w,c
 15786  0040A2  A4D8               	btfss	status,2,c
 15787  0040A4  EF56  F020         	goto	u9731
 15788  0040A8  EF58  F020         	goto	u9730
 15789  0040AC                     u9731:
 15790  0040AC  EF60  F020         	goto	l8935
 15791  0040B0                     u9730:
 15792  0040B0  0E00               	movlw	0
 15793  0040B2  6E38               	movwf	___flge@ff2^0,c
 15794  0040B4  0E00               	movlw	0
 15795  0040B6  6E39               	movwf	(___flge@ff2+1)^0,c
 15796  0040B8  0E00               	movlw	0
 15797  0040BA  6E3A               	movwf	(___flge@ff2+2)^0,c
 15798  0040BC  0E00               	movlw	0
 15799  0040BE  6E3B               	movwf	(___flge@ff2+3)^0,c
 15800  0040C0                     l8935:
 15801  0040C0  AE37               	btfss	(___flge@ff1+3)^0,7,c
 15802  0040C2  EF65  F020         	goto	u9741
 15803  0040C6  EF67  F020         	goto	u9740
 15804  0040CA                     u9741:
 15805  0040CA  EF70  F020         	goto	l8939
 15806  0040CE                     u9740:
 15807  0040CE  6C34               	negf	___flge@ff1^0,c
 15808  0040D0  1E35               	comf	(___flge@ff1+1)^0,f,c
 15809  0040D2  B0D8               	btfsc	status,0,c
 15810  0040D4  2A35               	incf	(___flge@ff1+1)^0,f,c
 15811  0040D6  1E36               	comf	(___flge@ff1+2)^0,f,c
 15812  0040D8  B0D8               	btfsc	status,0,c
 15813  0040DA  2A36               	incf	(___flge@ff1+2)^0,f,c
 15814  0040DC  0E80               	movlw	128
 15815  0040DE  5637               	subfwb	(___flge@ff1+3)^0,f,c
 15816  0040E0                     l8939:
 15817  0040E0  AE3B               	btfss	(___flge@ff2+3)^0,7,c
 15818  0040E2  EF75  F020         	goto	u9751
 15819  0040E6  EF77  F020         	goto	u9750
 15820  0040EA                     u9751:
 15821  0040EA  EF80  F020         	goto	l1214
 15822  0040EE                     u9750:
 15823  0040EE  6C38               	negf	___flge@ff2^0,c
 15824  0040F0  1E39               	comf	(___flge@ff2+1)^0,f,c
 15825  0040F2  B0D8               	btfsc	status,0,c
 15826  0040F4  2A39               	incf	(___flge@ff2+1)^0,f,c
 15827  0040F6  1E3A               	comf	(___flge@ff2+2)^0,f,c
 15828  0040F8  B0D8               	btfsc	status,0,c
 15829  0040FA  2A3A               	incf	(___flge@ff2+2)^0,f,c
 15830  0040FC  0E80               	movlw	128
 15831  0040FE  563B               	subfwb	(___flge@ff2+3)^0,f,c
 15832  004100                     l1214:
 15833  004100  0E00               	movlw	0
 15834  004102  1A34               	xorwf	___flge@ff1^0,f,c
 15835  004104  0E00               	movlw	0
 15836  004106  1A35               	xorwf	(___flge@ff1+1)^0,f,c
 15837  004108  0E00               	movlw	0
 15838  00410A  1A36               	xorwf	(___flge@ff1+2)^0,f,c
 15839  00410C  0E80               	movlw	128
 15840  00410E  1A37               	xorwf	(___flge@ff1+3)^0,f,c
 15841  004110  0E00               	movlw	0
 15842  004112  1A38               	xorwf	___flge@ff2^0,f,c
 15843  004114  0E00               	movlw	0
 15844  004116  1A39               	xorwf	(___flge@ff2+1)^0,f,c
 15845  004118  0E00               	movlw	0
 15846  00411A  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
 15847  00411C  0E80               	movlw	128
 15848  00411E  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
 15849  004120  5038               	movf	___flge@ff2^0,w,c
 15850  004122  5C34               	subwf	___flge@ff1^0,w,c
 15851  004124  5039               	movf	(___flge@ff2+1)^0,w,c
 15852  004126  5835               	subwfb	(___flge@ff1+1)^0,w,c
 15853  004128  503A               	movf	(___flge@ff2+2)^0,w,c
 15854  00412A  5836               	subwfb	(___flge@ff1+2)^0,w,c
 15855  00412C  503B               	movf	(___flge@ff2+3)^0,w,c
 15856  00412E  5837               	subwfb	(___flge@ff1+3)^0,w,c
 15857  004130  B0D8               	btfsc	status,0,c
 15858  004132  EF9D  F020         	goto	u9761
 15859  004136  EF9F  F020         	goto	u9760
 15860  00413A                     u9761:
 15861  00413A  EFA2  F020         	goto	l8945
 15862  00413E                     u9760:
 15863  00413E  90D8               	bcf	status,0,c
 15864  004140  EFA3  F020         	goto	l1219
 15865  004144                     l8945:
 15866  004144  80D8               	bsf	status,0,c
 15867  004146                     l1219:
 15868  004146  0012               	return		;funcret
 15869  004148                     __end_of___flge:
 15870                           	opt callstack 0
 15871                           
 15872 ;; *************** function _caminoCorrecto *****************
 15873 ;; Defined at:
 15874 ;;		line 270 in file "main.c"
 15875 ;; Parameters:    Size  Location     Type
 15876 ;;  movimientos     2   17[COMRAM] PTR unsigned char 
 15877 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 15878 ;;  caminoFinal     2   19[COMRAM] PTR unsigned char 
 15879 ;;		 -> comportamientoBasico@caminoFinal(1000), 
 15880 ;;  numMovimient    2   21[COMRAM] unsigned int 
 15881 ;;  numMovimient    2   23[COMRAM] PTR unsigned int 
 15882 ;;		 -> comportamientoBasico@numMovimientosTotales(2), 
 15883 ;;  caminoActual    1   25[COMRAM] unsigned char 
 15884 ;; Auto vars:     Size  Location     Type
 15885 ;;		None
 15886 ;; Return value:  Size  Location     Type
 15887 ;;                  1    wreg      void 
 15888 ;; Registers used:
 15889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15890 ;; Tracked objects:
 15891 ;;		On entry : 0/0
 15892 ;;		On exit  : 0/0
 15893 ;;		Unchanged: 0/0
 15894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15895 ;;      Params:         9       0       0       0       0       0       0       0       0
 15896 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15897 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15898 ;;      Totals:         9       0       0       0       0       0       0       0       0
 15899 ;;Total ram usage:        9 bytes
 15900 ;; Hardware stack levels used:    1
 15901 ;; Hardware stack levels required when called:    3
 15902 ;; This function calls:
 15903 ;;		_combinarArreglos
 15904 ;;		_limpiarMovimientos
 15905 ;; This function is called by:
 15906 ;;		_comportamientoBasico
 15907 ;; This function uses a non-reentrant model
 15908 ;;
 15909                           
 15910                           	psect	text69
 15911  0052A8                     __ptext69:
 15912                           	opt callstack 0
 15913  0052A8                     _caminoCorrecto:
 15914                           	opt callstack 26
 15915  0052A8                     
 15916                           ;main.c: 270: void caminoCorrecto(T_UBYTE* movimientos, T_UBYTE* caminoFinal, T_UINT num
      +                          Movimientos,;main.c: 271:         T_UINT* numMovimientosFinal, T_UBYTE caminoActual) {;m
      +                          ain.c: 273:     movimientos[0] = caminoActual;
 15917  0052A8  C012  FFD9         	movff	caminoCorrecto@movimientos,fsr2l
 15918  0052AC  C013  FFDA         	movff	caminoCorrecto@movimientos+1,fsr2h
 15919  0052B0  C01A  FFDF         	movff	caminoCorrecto@caminoActual,indf2
 15920  0052B4                     
 15921                           ;main.c: 274:     combinarArreglos(movimientos, caminoFinal, numMovimientos, numMovimien
      +                          tosFinal);
 15922  0052B4  C012  F006         	movff	caminoCorrecto@movimientos,combinarArreglos@movimientos
 15923  0052B8  C013  F007         	movff	caminoCorrecto@movimientos+1,combinarArreglos@movimientos+1
 15924  0052BC  C014  F008         	movff	caminoCorrecto@caminoFinal,combinarArreglos@caminoFinal
 15925  0052C0  C015  F009         	movff	caminoCorrecto@caminoFinal+1,combinarArreglos@caminoFinal+1
 15926  0052C4  C016  F00A         	movff	caminoCorrecto@numMovimientos,combinarArreglos@numMovimientos
 15927  0052C8  C017  F00B         	movff	caminoCorrecto@numMovimientos+1,combinarArreglos@numMovimientos+1
 15928  0052CC  C018  F00C         	movff	caminoCorrecto@numMovimientosFinal,combinarArreglos@numMovimientosFinal
 15929  0052D0  C019  F00D         	movff	caminoCorrecto@numMovimientosFinal+1,combinarArreglos@numMovimientosFinal+1
 15930  0052D4  EC04  F027         	call	_combinarArreglos	;wreg free
 15931  0052D8                     
 15932                           ;main.c: 275:     limpiarMovimientos(movimientos, &numMovimientos);
 15933  0052D8  C012  F006         	movff	caminoCorrecto@movimientos,limpiarMovimientos@movimientos
 15934  0052DC  C013  F007         	movff	caminoCorrecto@movimientos+1,limpiarMovimientos@movimientos+1
 15935  0052E0  0E16               	movlw	low caminoCorrecto@numMovimientos
 15936  0052E2  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
 15937  0052E4  0E00               	movlw	high caminoCorrecto@numMovimientos
 15938  0052E6  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
 15939  0052E8  ECBF  F028         	call	_limpiarMovimientos	;wreg free
 15940  0052EC  0012               	return		;funcret
 15941  0052EE                     __end_of_caminoCorrecto:
 15942                           	opt callstack 0
 15943                           
 15944 ;; *************** function _limpiarMovimientos *****************
 15945 ;; Defined at:
 15946 ;;		line 860 in file "main.c"
 15947 ;; Parameters:    Size  Location     Type
 15948 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
 15949 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 15950 ;;  numMovimient    2    7[COMRAM] PTR unsigned int 
 15951 ;;		 -> comportamientoBasico@numMovimientos(2), caminoCorrecto@numMovimientos(2), 
 15952 ;; Auto vars:     Size  Location     Type
 15953 ;;  i               2   11[COMRAM] int 
 15954 ;; Return value:  Size  Location     Type
 15955 ;;                  1    wreg      void 
 15956 ;; Registers used:
 15957 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15958 ;; Tracked objects:
 15959 ;;		On entry : 0/0
 15960 ;;		On exit  : 0/0
 15961 ;;		Unchanged: 0/0
 15962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15963 ;;      Params:         4       0       0       0       0       0       0       0       0
 15964 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15965 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15966 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15967 ;;Total ram usage:        8 bytes
 15968 ;; Hardware stack levels used:    1
 15969 ;; Hardware stack levels required when called:    2
 15970 ;; This function calls:
 15971 ;;		Nothing
 15972 ;; This function is called by:
 15973 ;;		_caminoCorrecto
 15974 ;;		_comportamientoBasico
 15975 ;; This function uses a non-reentrant model
 15976 ;;
 15977                           
 15978                           	psect	text70
 15979  00517E                     __ptext70:
 15980                           	opt callstack 0
 15981  00517E                     _limpiarMovimientos:
 15982                           	opt callstack 27
 15983  00517E                     
 15984                           ;main.c: 862:     for (T_INT i = 0; i < *numMovimientos; i++)
 15985  00517E  0E00               	movlw	0
 15986  005180  6E0D               	movwf	(limpiarMovimientos@i+1)^0,c
 15987  005182  0E00               	movlw	0
 15988  005184  6E0C               	movwf	limpiarMovimientos@i^0,c
 15989  005186  EFCF  F028         	goto	l9703
 15990  00518A                     l9699:
 15991                           
 15992                           ;main.c: 863:         movimientos[i] = 0;
 15993  00518A  500C               	movf	limpiarMovimientos@i^0,w,c
 15994  00518C  2406               	addwf	limpiarMovimientos@movimientos^0,w,c
 15995  00518E  6ED9               	movwf	fsr2l,c
 15996  005190  500D               	movf	(limpiarMovimientos@i+1)^0,w,c
 15997  005192  2007               	addwfc	(limpiarMovimientos@movimientos+1)^0,w,c
 15998  005194  6EDA               	movwf	fsr2h,c
 15999  005196  0E00               	movlw	0
 16000  005198  6EDF               	movwf	indf2,c
 16001  00519A  4A0C               	infsnz	limpiarMovimientos@i^0,f,c
 16002  00519C  2A0D               	incf	(limpiarMovimientos@i+1)^0,f,c
 16003  00519E                     l9703:
 16004  00519E  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
 16005  0051A2  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
 16006  0051A6  50DE               	movf	postinc2,w,c
 16007  0051A8  5C0C               	subwf	limpiarMovimientos@i^0,w,c
 16008  0051AA  50DE               	movf	postinc2,w,c
 16009  0051AC  580D               	subwfb	(limpiarMovimientos@i+1)^0,w,c
 16010  0051AE  A0D8               	btfss	status,0,c
 16011  0051B0  EFDC  F028         	goto	u11021
 16012  0051B4  EFDE  F028         	goto	u11020
 16013  0051B8                     u11021:
 16014  0051B8  EFC5  F028         	goto	l9699
 16015  0051BC                     u11020:
 16016  0051BC                     
 16017                           ;main.c: 865:     *numMovimientos = 0;
 16018  0051BC  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
 16019  0051C0  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
 16020  0051C4  0E00               	movlw	0
 16021  0051C6  6EDE               	movwf	postinc2,c
 16022  0051C8  0E00               	movlw	0
 16023  0051CA  6EDD               	movwf	postdec2,c
 16024  0051CC  0012               	return		;funcret
 16025  0051CE                     __end_of_limpiarMovimientos:
 16026                           	opt callstack 0
 16027                           
 16028 ;; *************** function _combinarArreglos *****************
 16029 ;; Defined at:
 16030 ;;		line 1303 in file "main.c"
 16031 ;; Parameters:    Size  Location     Type
 16032 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
 16033 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 16034 ;;  caminoFinal     2    7[COMRAM] PTR unsigned char 
 16035 ;;		 -> comportamientoBasico@caminoFinal(1000), 
 16036 ;;  numMovimient    2    9[COMRAM] unsigned int 
 16037 ;;  numMovimient    2   11[COMRAM] PTR unsigned int 
 16038 ;;		 -> comportamientoBasico@numMovimientosTotales(2), 
 16039 ;; Auto vars:     Size  Location     Type
 16040 ;;  i               2   15[COMRAM] int 
 16041 ;; Return value:  Size  Location     Type
 16042 ;;                  1    wreg      void 
 16043 ;; Registers used:
 16044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16045 ;; Tracked objects:
 16046 ;;		On entry : 0/0
 16047 ;;		On exit  : 0/0
 16048 ;;		Unchanged: 0/0
 16049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16050 ;;      Params:         8       0       0       0       0       0       0       0       0
 16051 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16052 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16053 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16054 ;;Total ram usage:       12 bytes
 16055 ;; Hardware stack levels used:    1
 16056 ;; Hardware stack levels required when called:    2
 16057 ;; This function calls:
 16058 ;;		Nothing
 16059 ;; This function is called by:
 16060 ;;		_caminoCorrecto
 16061 ;; This function uses a non-reentrant model
 16062 ;;
 16063                           
 16064                           	psect	text71
 16065  004E08                     __ptext71:
 16066                           	opt callstack 0
 16067  004E08                     _combinarArreglos:
 16068                           	opt callstack 26
 16069  004E08                     
 16070                           ;main.c: 1303: void combinarArreglos(T_UBYTE* movimientos, T_UBYTE* caminoFinal, T_UINT 
      +                          numMovimientos,;main.c: 1304:         T_UINT* numMovimientosFinal) {;main.c: 1305:     f
      +                          or (T_INT i = 0; i < numMovimientos; i++) {
 16071  004E08  0E00               	movlw	0
 16072  004E0A  6E11               	movwf	(combinarArreglos@i+1)^0,c
 16073  004E0C  0E00               	movlw	0
 16074  004E0E  6E10               	movwf	combinarArreglos@i^0,c
 16075  004E10  EF29  F027         	goto	l9695
 16076  004E14                     l9689:
 16077                           
 16078                           ;main.c: 1307:         caminoFinal[*numMovimientosFinal] = movimientos[i];
 16079  004E14  5010               	movf	combinarArreglos@i^0,w,c
 16080  004E16  2406               	addwf	combinarArreglos@movimientos^0,w,c
 16081  004E18  6ED9               	movwf	fsr2l,c
 16082  004E1A  5011               	movf	(combinarArreglos@i+1)^0,w,c
 16083  004E1C  2007               	addwfc	(combinarArreglos@movimientos+1)^0,w,c
 16084  004E1E  6EDA               	movwf	fsr2h,c
 16085  004E20  C00C  FFE1         	movff	combinarArreglos@numMovimientosFinal,fsr1l
 16086  004E24  C00D  FFE2         	movff	combinarArreglos@numMovimientosFinal+1,fsr1h
 16087  004E28  CFE6 F00E          	movff	postinc1,??_combinarArreglos
 16088  004E2C  CFE5 F00F          	movff	postdec1,??_combinarArreglos+1
 16089  004E30  500E               	movf	??_combinarArreglos^0,w,c
 16090  004E32  2408               	addwf	combinarArreglos@caminoFinal^0,w,c
 16091  004E34  6EE1               	movwf	fsr1l,c
 16092  004E36  500F               	movf	(??_combinarArreglos+1)^0,w,c
 16093  004E38  2009               	addwfc	(combinarArreglos@caminoFinal+1)^0,w,c
 16094  004E3A  6EE2               	movwf	fsr1h,c
 16095  004E3C  CFDF FFE7          	movff	indf2,indf1
 16096  004E40                     
 16097                           ;main.c: 1308:         *numMovimientosFinal += 1;
 16098  004E40  C00C  FFD9         	movff	combinarArreglos@numMovimientosFinal,fsr2l
 16099  004E44  C00D  FFDA         	movff	combinarArreglos@numMovimientosFinal+1,fsr2h
 16100  004E48  2ADE               	incf	postinc2,f,c
 16101  004E4A  0E00               	movlw	0
 16102  004E4C  22DD               	addwfc	postdec2,f,c
 16103  004E4E                     
 16104                           ;main.c: 1309:     }
 16105  004E4E  4A10               	infsnz	combinarArreglos@i^0,f,c
 16106  004E50  2A11               	incf	(combinarArreglos@i+1)^0,f,c
 16107  004E52                     l9695:
 16108  004E52  500A               	movf	combinarArreglos@numMovimientos^0,w,c
 16109  004E54  5C10               	subwf	combinarArreglos@i^0,w,c
 16110  004E56  500B               	movf	(combinarArreglos@numMovimientos+1)^0,w,c
 16111  004E58  5811               	subwfb	(combinarArreglos@i+1)^0,w,c
 16112  004E5A  A0D8               	btfss	status,0,c
 16113  004E5C  EF32  F027         	goto	u11011
 16114  004E60  EF34  F027         	goto	u11010
 16115  004E64                     u11011:
 16116  004E64  EF0A  F027         	goto	l9689
 16117  004E68                     u11010:
 16118  004E68  0012               	return		;funcret
 16119  004E6A                     __end_of_combinarArreglos:
 16120                           	opt callstack 0
 16121                           
 16122 ;; *************** function _UART_printf *****************
 16123 ;; Defined at:
 16124 ;;		line 47 in file "./UART.h"
 16125 ;; Parameters:    Size  Location     Type
 16126 ;;  cadena          2    6[COMRAM] PTR unsigned char 
 16127 ;;		 -> STR_15(23), STR_13(63), STR_12(56), STR_10(6), 
 16128 ;;		 -> STR_9(9), STR_8(11), STR_7(10), buffer(50), 
 16129 ;;		 -> STR_2(25), STR_1(24), 
 16130 ;; Auto vars:     Size  Location     Type
 16131 ;;		None
 16132 ;; Return value:  Size  Location     Type
 16133 ;;                  1    wreg      void 
 16134 ;; Registers used:
 16135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16136 ;; Tracked objects:
 16137 ;;		On entry : 0/0
 16138 ;;		On exit  : 0/0
 16139 ;;		Unchanged: 0/0
 16140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16141 ;;      Params:         2       0       0       0       0       0       0       0       0
 16142 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16143 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16144 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16145 ;;Total ram usage:        2 bytes
 16146 ;; Hardware stack levels used:    1
 16147 ;; Hardware stack levels required when called:    3
 16148 ;; This function calls:
 16149 ;;		_UART_write
 16150 ;; This function is called by:
 16151 ;;		_visualizarPasosRealizados
 16152 ;;		_comportamientoBasico
 16153 ;;		_probarSensores
 16154 ;;		_probarUltrasonico
 16155 ;; This function uses a non-reentrant model
 16156 ;;
 16157                           
 16158                           	psect	text72
 16159  004ECA                     __ptext72:
 16160                           	opt callstack 0
 16161  004ECA                     _UART_printf:
 16162                           	opt callstack 26
 16163  004ECA                     
 16164                           ;./UART.h: 48:     while (*cadena) {
 16165  004ECA  EF7B  F027         	goto	l9773
 16166  004ECE                     l9769:
 16167                           
 16168                           ;./UART.h: 49:         UART_write(*cadena++);
 16169  004ECE  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 16170  004ED2  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 16171  004ED6  6AF8               	clrf	tblptru,c
 16172  004ED8  0E07               	movlw	(high __ramtop+-1)
 16173  004EDA  64F7               	cpfsgt	tblptrh,c
 16174  004EDC  D003               	bra	u11107
 16175  004EDE  0008               	tblrd		*
 16176  004EE0  50F5               	movf	tablat,w,c
 16177  004EE2  D005               	bra	u11100
 16178  004EE4                     u11107:
 16179  004EE4  CFF6 FFE9          	movff	tblptrl,fsr0l
 16180  004EE8  CFF7 FFEA          	movff	tblptrh,fsr0h
 16181  004EEC  50EF               	movf	indf0,w,c
 16182  004EEE                     u11100:
 16183  004EEE  EC01  F02B         	call	_UART_write
 16184  004EF2  4A07               	infsnz	UART_printf@cadena^0,f,c
 16185  004EF4  2A08               	incf	(UART_printf@cadena+1)^0,f,c
 16186  004EF6                     l9773:
 16187                           
 16188                           ;./UART.h: 48:     while (*cadena) {
 16189  004EF6  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 16190  004EFA  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 16191  004EFE  6AF8               	clrf	tblptru,c
 16192  004F00  0E07               	movlw	(high __ramtop+-1)
 16193  004F02  64F7               	cpfsgt	tblptrh,c
 16194  004F04  D003               	bra	u11117
 16195  004F06  0008               	tblrd		*
 16196  004F08  50F5               	movf	tablat,w,c
 16197  004F0A  D005               	bra	u11110
 16198  004F0C                     u11117:
 16199  004F0C  CFF6 FFE9          	movff	tblptrl,fsr0l
 16200  004F10  CFF7 FFEA          	movff	tblptrh,fsr0h
 16201  004F14  50EF               	movf	indf0,w,c
 16202  004F16                     u11110:
 16203  004F16  0900               	iorlw	0
 16204  004F18  A4D8               	btfss	status,2,c
 16205  004F1A  EF91  F027         	goto	u11121
 16206  004F1E  EF93  F027         	goto	u11120
 16207  004F22                     u11121:
 16208  004F22  EF67  F027         	goto	l9769
 16209  004F26                     u11120:
 16210  004F26  0012               	return		;funcret
 16211  004F28                     __end_of_UART_printf:
 16212                           	opt callstack 0
 16213                           
 16214 ;; *************** function _UART_write *****************
 16215 ;; Defined at:
 16216 ;;		line 42 in file "./UART.h"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;  dato            1    wreg     unsigned char 
 16219 ;; Auto vars:     Size  Location     Type
 16220 ;;  dato            1    5[COMRAM] unsigned char 
 16221 ;; Return value:  Size  Location     Type
 16222 ;;                  1    wreg      void 
 16223 ;; Registers used:
 16224 ;;		wreg
 16225 ;; Tracked objects:
 16226 ;;		On entry : 0/0
 16227 ;;		On exit  : 0/0
 16228 ;;		Unchanged: 0/0
 16229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16230 ;;      Params:         0       0       0       0       0       0       0       0       0
 16231 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16232 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16233 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16234 ;;Total ram usage:        1 bytes
 16235 ;; Hardware stack levels used:    1
 16236 ;; Hardware stack levels required when called:    2
 16237 ;; This function calls:
 16238 ;;		Nothing
 16239 ;; This function is called by:
 16240 ;;		_UART_printf
 16241 ;; This function uses a non-reentrant model
 16242 ;;
 16243                           
 16244                           	psect	text73
 16245  005602                     __ptext73:
 16246                           	opt callstack 0
 16247  005602                     _UART_write:
 16248                           	opt callstack 26
 16249                           
 16250                           ;incstack = 0
 16251                           ;UART_write@dato stored from wreg
 16252  005602  6E06               	movwf	UART_write@dato^0,c
 16253  005604                     
 16254                           ;./UART.h: 43:     TXREG = dato;
 16255  005604  C006  FFAD         	movff	UART_write@dato,4013	;volatile
 16256  005608                     l226:
 16257  005608  A2AC               	btfss	172,1,c	;volatile
 16258  00560A  EF09  F02B         	goto	u11001
 16259  00560E  EF0B  F02B         	goto	u11000
 16260  005612                     u11001:
 16261  005612  EF04  F02B         	goto	l226
 16262  005616                     u11000:
 16263  005616  0012               	return		;funcret
 16264  005618                     __end_of_UART_write:
 16265                           	opt callstack 0
 16266                           
 16267 ;; *************** function _UART_init *****************
 16268 ;; Defined at:
 16269 ;;		line 13 in file "./UART.h"
 16270 ;; Parameters:    Size  Location     Type
 16271 ;;  BAUD            4   31[COMRAM] long 
 16272 ;; Auto vars:     Size  Location     Type
 16273 ;;  frecuenciaCr    4    0        long 
 16274 ;; Return value:  Size  Location     Type
 16275 ;;                  1    wreg      void 
 16276 ;; Registers used:
 16277 ;;		wreg, status,2, status,0, cstack
 16278 ;; Tracked objects:
 16279 ;;		On entry : 0/0
 16280 ;;		On exit  : 0/0
 16281 ;;		Unchanged: 0/0
 16282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16283 ;;      Params:         4       0       0       0       0       0       0       0       0
 16284 ;;      Locals:         8       0       0       0       0       0       0       0       0
 16285 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16286 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16287 ;;Total ram usage:       12 bytes
 16288 ;; Hardware stack levels used:    1
 16289 ;; Hardware stack levels required when called:    3
 16290 ;; This function calls:
 16291 ;;		___aldiv
 16292 ;; This function is called by:
 16293 ;;		_main
 16294 ;; This function uses a non-reentrant model
 16295 ;;
 16296                           
 16297                           	psect	text74
 16298  004C56                     __ptext74:
 16299                           	opt callstack 0
 16300  004C56                     _UART_init:
 16301                           	opt callstack 27
 16302  004C56                     
 16303                           ;./UART.h: 16:     TRISC6 = 0;
 16304  004C56  9C94               	bcf	3988,6,c	;volatile
 16305  004C58                     
 16306                           ;./UART.h: 17:     TRISC7 = 1;
 16307  004C58  8E94               	bsf	3988,7,c	;volatile
 16308  004C5A                     
 16309                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16310  004C5A  0E10               	movlw	16
 16311  004C5C  6E16               	movwf	___aldiv@divisor^0,c
 16312  004C5E  0E00               	movlw	0
 16313  004C60  6E17               	movwf	(___aldiv@divisor+1)^0,c
 16314  004C62  0E00               	movlw	0
 16315  004C64  6E18               	movwf	(___aldiv@divisor+2)^0,c
 16316  004C66  0E00               	movlw	0
 16317  004C68  6E19               	movwf	(___aldiv@divisor+3)^0,c
 16318  004C6A  0E00               	movlw	0
 16319  004C6C  6E12               	movwf	___aldiv@dividend^0,c
 16320  004C6E  0E09               	movlw	9
 16321  004C70  6E13               	movwf	(___aldiv@dividend+1)^0,c
 16322  004C72  0E3D               	movlw	61
 16323  004C74  6E14               	movwf	(___aldiv@dividend+2)^0,c
 16324  004C76  0E00               	movlw	0
 16325  004C78  6E15               	movwf	(___aldiv@dividend+3)^0,c
 16326  004C7A  EC18  F01F         	call	___aldiv	;wreg free
 16327  004C7E  C012  F028         	movff	?___aldiv,_UART_init$1826
 16328  004C82  C013  F029         	movff	?___aldiv+1,_UART_init$1826+1
 16329  004C86  C014  F02A         	movff	?___aldiv+2,_UART_init$1826+2
 16330  004C8A  C015  F02B         	movff	?___aldiv+3,_UART_init$1826+3
 16331  004C8E                     
 16332                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16333  004C8E  C028  F012         	movff	_UART_init$1826,___aldiv@dividend
 16334  004C92  C029  F013         	movff	_UART_init$1826+1,___aldiv@dividend+1
 16335  004C96  C02A  F014         	movff	_UART_init$1826+2,___aldiv@dividend+2
 16336  004C9A  C02B  F015         	movff	_UART_init$1826+3,___aldiv@dividend+3
 16337  004C9E  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 16338  004CA2  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 16339  004CA6  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 16340  004CAA  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 16341  004CAE  EC18  F01F         	call	___aldiv	;wreg free
 16342  004CB2  0412               	decf	?___aldiv^0,w,c
 16343  004CB4  6EAF               	movwf	175,c	;volatile
 16344  004CB6                     
 16345                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 16346  004CB6  84AC               	bsf	172,2,c	;volatile
 16347  004CB8                     
 16348                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 16349  004CB8  98AC               	bcf	172,4,c	;volatile
 16350  004CBA                     
 16351                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 16352  004CBA  8EAB               	bsf	171,7,c	;volatile
 16353  004CBC                     
 16354                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 16355  004CBC  9CAC               	bcf	172,6,c	;volatile
 16356  004CBE                     
 16357                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 16358  004CBE  8AAC               	bsf	172,5,c	;volatile
 16359  004CC0                     
 16360                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 16361  004CC0  9CAB               	bcf	171,6,c	;volatile
 16362  004CC2                     
 16363                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 16364  004CC2  88AB               	bsf	171,4,c	;volatile
 16365  004CC4  0012               	return		;funcret
 16366  004CC6                     __end_of_UART_init:
 16367                           	opt callstack 0
 16368                           
 16369 ;; *************** function ___aldiv *****************
 16370 ;; Defined at:
 16371 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 16372 ;; Parameters:    Size  Location     Type
 16373 ;;  dividend        4   17[COMRAM] long 
 16374 ;;  divisor         4   21[COMRAM] long 
 16375 ;; Auto vars:     Size  Location     Type
 16376 ;;  quotient        4   27[COMRAM] long 
 16377 ;;  sign            1   26[COMRAM] unsigned char 
 16378 ;;  counter         1   25[COMRAM] unsigned char 
 16379 ;; Return value:  Size  Location     Type
 16380 ;;                  4   17[COMRAM] long 
 16381 ;; Registers used:
 16382 ;;		wreg, status,2, status,0
 16383 ;; Tracked objects:
 16384 ;;		On entry : 0/0
 16385 ;;		On exit  : 0/0
 16386 ;;		Unchanged: 0/0
 16387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16388 ;;      Params:         8       0       0       0       0       0       0       0       0
 16389 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16390 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16391 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16392 ;;Total ram usage:       14 bytes
 16393 ;; Hardware stack levels used:    1
 16394 ;; Hardware stack levels required when called:    2
 16395 ;; This function calls:
 16396 ;;		Nothing
 16397 ;; This function is called by:
 16398 ;;		_map
 16399 ;;		_UART_init
 16400 ;; This function uses a non-reentrant model
 16401 ;;
 16402                           
 16403                           	psect	text75
 16404  003E30                     __ptext75:
 16405                           	opt callstack 0
 16406  003E30                     ___aldiv:
 16407                           	opt callstack 24
 16408  003E30  0E00               	movlw	0
 16409  003E32  6E1B               	movwf	___aldiv@sign^0,c
 16410  003E34  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 16411  003E36  EF21  F01F         	goto	u8040
 16412  003E3A  EF1F  F01F         	goto	u8041
 16413  003E3E                     u8041:
 16414  003E3E  EF2B  F01F         	goto	l8005
 16415  003E42                     u8040:
 16416  003E42  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 16417  003E44  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 16418  003E46  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 16419  003E48  6C16               	negf	___aldiv@divisor^0,c
 16420  003E4A  0E00               	movlw	0
 16421  003E4C  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 16422  003E4E  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 16423  003E50  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 16424  003E52  0E01               	movlw	1
 16425  003E54  6E1B               	movwf	___aldiv@sign^0,c
 16426  003E56                     l8005:
 16427  003E56  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 16428  003E58  EF32  F01F         	goto	u8050
 16429  003E5C  EF30  F01F         	goto	u8051
 16430  003E60                     u8051:
 16431  003E60  EF3C  F01F         	goto	l8011
 16432  003E64                     u8050:
 16433  003E64  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 16434  003E66  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 16435  003E68  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 16436  003E6A  6C12               	negf	___aldiv@dividend^0,c
 16437  003E6C  0E00               	movlw	0
 16438  003E6E  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 16439  003E70  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 16440  003E72  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 16441  003E74  0E01               	movlw	1
 16442  003E76  1A1B               	xorwf	___aldiv@sign^0,f,c
 16443  003E78                     l8011:
 16444  003E78  0E00               	movlw	0
 16445  003E7A  6E1C               	movwf	___aldiv@quotient^0,c
 16446  003E7C  0E00               	movlw	0
 16447  003E7E  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 16448  003E80  0E00               	movlw	0
 16449  003E82  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 16450  003E84  0E00               	movlw	0
 16451  003E86  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 16452  003E88  5016               	movf	___aldiv@divisor^0,w,c
 16453  003E8A  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 16454  003E8C  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 16455  003E8E  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 16456  003E90  B4D8               	btfsc	status,2,c
 16457  003E92  EF4D  F01F         	goto	u8061
 16458  003E96  EF4F  F01F         	goto	u8060
 16459  003E9A                     u8061:
 16460  003E9A  EF85  F01F         	goto	l8033
 16461  003E9E                     u8060:
 16462  003E9E  0E01               	movlw	1
 16463  003EA0  6E1A               	movwf	___aldiv@counter^0,c
 16464  003EA2  EF59  F01F         	goto	l8019
 16465  003EA6                     l8017:
 16466  003EA6  90D8               	bcf	status,0,c
 16467  003EA8  3616               	rlcf	___aldiv@divisor^0,f,c
 16468  003EAA  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 16469  003EAC  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 16470  003EAE  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 16471  003EB0  2A1A               	incf	___aldiv@counter^0,f,c
 16472  003EB2                     l8019:
 16473  003EB2  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 16474  003EB4  EF5E  F01F         	goto	u8071
 16475  003EB8  EF60  F01F         	goto	u8070
 16476  003EBC                     u8071:
 16477  003EBC  EF53  F01F         	goto	l8017
 16478  003EC0                     u8070:
 16479  003EC0                     l8021:
 16480  003EC0  90D8               	bcf	status,0,c
 16481  003EC2  361C               	rlcf	___aldiv@quotient^0,f,c
 16482  003EC4  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 16483  003EC6  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 16484  003EC8  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 16485  003ECA  5016               	movf	___aldiv@divisor^0,w,c
 16486  003ECC  5C12               	subwf	___aldiv@dividend^0,w,c
 16487  003ECE  5017               	movf	(___aldiv@divisor+1)^0,w,c
 16488  003ED0  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 16489  003ED2  5018               	movf	(___aldiv@divisor+2)^0,w,c
 16490  003ED4  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 16491  003ED6  5019               	movf	(___aldiv@divisor+3)^0,w,c
 16492  003ED8  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 16493  003EDA  A0D8               	btfss	status,0,c
 16494  003EDC  EF72  F01F         	goto	u8081
 16495  003EE0  EF74  F01F         	goto	u8080
 16496  003EE4                     u8081:
 16497  003EE4  EF7D  F01F         	goto	l8029
 16498  003EE8                     u8080:
 16499  003EE8  5016               	movf	___aldiv@divisor^0,w,c
 16500  003EEA  5E12               	subwf	___aldiv@dividend^0,f,c
 16501  003EEC  5017               	movf	(___aldiv@divisor+1)^0,w,c
 16502  003EEE  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 16503  003EF0  5018               	movf	(___aldiv@divisor+2)^0,w,c
 16504  003EF2  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 16505  003EF4  5019               	movf	(___aldiv@divisor+3)^0,w,c
 16506  003EF6  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 16507  003EF8  801C               	bsf	___aldiv@quotient^0,0,c
 16508  003EFA                     l8029:
 16509  003EFA  90D8               	bcf	status,0,c
 16510  003EFC  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 16511  003EFE  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 16512  003F00  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 16513  003F02  3216               	rrcf	___aldiv@divisor^0,f,c
 16514  003F04  2E1A               	decfsz	___aldiv@counter^0,f,c
 16515  003F06  EF60  F01F         	goto	l8021
 16516  003F0A                     l8033:
 16517  003F0A  501B               	movf	___aldiv@sign^0,w,c
 16518  003F0C  B4D8               	btfsc	status,2,c
 16519  003F0E  EF8B  F01F         	goto	u8091
 16520  003F12  EF8D  F01F         	goto	u8090
 16521  003F16                     u8091:
 16522  003F16  EF95  F01F         	goto	l8037
 16523  003F1A                     u8090:
 16524  003F1A  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 16525  003F1C  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 16526  003F1E  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 16527  003F20  6C1C               	negf	___aldiv@quotient^0,c
 16528  003F22  0E00               	movlw	0
 16529  003F24  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 16530  003F26  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 16531  003F28  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 16532  003F2A                     l8037:
 16533  003F2A  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 16534  003F2E  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 16535  003F32  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 16536  003F36  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 16537  003F3A  0012               	return		;funcret
 16538  003F3C                     __end_of___aldiv:
 16539                           	opt callstack 0
 16540                           
 16541 ;; *************** function _boton *****************
 16542 ;; Defined at:
 16543 ;;		line 131 in file "main.c"
 16544 ;; Parameters:    Size  Location     Type
 16545 ;;		None
 16546 ;; Auto vars:     Size  Location     Type
 16547 ;;		None
 16548 ;; Return value:  Size  Location     Type
 16549 ;;                  1    wreg      void 
 16550 ;; Registers used:
 16551 ;;		wreg, status,2, status,0, cstack
 16552 ;; Tracked objects:
 16553 ;;		On entry : 0/0
 16554 ;;		On exit  : 0/0
 16555 ;;		Unchanged: 0/0
 16556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16557 ;;      Params:         0       0       0       0       0       0       0       0       0
 16558 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16559 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16560 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16561 ;;Total ram usage:        2 bytes
 16562 ;; Hardware stack levels used:    1
 16563 ;; Hardware stack levels required when called:    1
 16564 ;; This function calls:
 16565 ;;		_antiRebote
 16566 ;; This function is called by:
 16567 ;;		Interrupt level 2
 16568 ;; This function uses a non-reentrant model
 16569 ;;
 16570                           
 16571                           	psect	intcode
 16572  000008                     __pintcode:
 16573                           	opt callstack 0
 16574  000008                     _boton:
 16575                           	opt callstack 20
 16576                           
 16577                           ;incstack = 0
 16578  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16579  00000A  ED1B  F028         	call	int_func,f	;refresh shadow registers
 16580                           
 16581                           	psect	intcode_body
 16582  005036                     __pintcode_body:
 16583                           	opt callstack 20
 16584  005036                     int_func:
 16585                           	opt callstack 20
 16586  005036  0006               	pop		; remove dummy address from shadow register refresh
 16587  005038                     
 16588                           ;main.c: 133:     if (INT0IF)
 16589  005038  A2F2               	btfss	4082,1,c	;volatile
 16590  00503A  EF21  F028         	goto	i2u782_41
 16591  00503E  EF23  F028         	goto	i2u782_40
 16592  005042                     i2u782_41:
 16593  005042  EF43  F028         	goto	i2l286
 16594  005046                     i2u782_40:
 16595  005046                     
 16596                           ;main.c: 134:     {;main.c: 135:         antiRebote(1);
 16597  005046  0E01               	movlw	1
 16598  005048  ECEF  F027         	call	_antiRebote
 16599  00504C                     
 16600                           ;main.c: 136:         if (pausa) {
 16601  00504C  0101               	movlb	1	; () banked
 16602  00504E  51D5               	movf	_pausa& (0+255),w,b
 16603  005050  B4D8               	btfsc	status,2,c
 16604  005052  EF2D  F028         	goto	i2u783_41
 16605  005056  EF2F  F028         	goto	i2u783_40
 16606  00505A                     i2u783_41:
 16607  00505A  EF3F  F028         	goto	i2l284
 16608  00505E                     i2u783_40:
 16609  00505E                     
 16610                           ; BSR set to: 1
 16611                           ;main.c: 137:             pausa = 0;
 16612  00505E  0E00               	movlw	0
 16613  005060  6FD5               	movwf	_pausa& (0+255),b
 16614  005062                     
 16615                           ; BSR set to: 1
 16616                           ;main.c: 138:             LATD2 = 1;
 16617  005062  848C               	bsf	3980,2,c	;volatile
 16618  005064                     
 16619                           ; BSR set to: 1
 16620                           ;main.c: 139:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 16621  005064  0E10               	movlw	16
 16622  005066  6E05               	movwf	(??_boton+1)^0,c
 16623  005068  0E39               	movlw	57
 16624  00506A  6E04               	movwf	??_boton^0,c
 16625  00506C  0E0E               	movlw	14
 16626  00506E                     i2u1205_47:
 16627  00506E  2EE8               	decfsz	wreg,f,c
 16628  005070  D7FE               	bra	i2u1205_47
 16629  005072  2E04               	decfsz	??_boton^0,f,c
 16630  005074  D7FC               	bra	i2u1205_47
 16631  005076  2E05               	decfsz	(??_boton+1)^0,f,c
 16632  005078  D7FA               	bra	i2u1205_47
 16633                           
 16634                           ;main.c: 140:         } else {
 16635  00507A  EF42  F028         	goto	i2l7423
 16636  00507E                     i2l284:
 16637                           
 16638                           ; BSR set to: 1
 16639                           ;main.c: 141:             LATD2 = 0;
 16640  00507E  948C               	bcf	3980,2,c	;volatile
 16641  005080                     
 16642                           ; BSR set to: 1
 16643                           ;main.c: 142:             pausa = 1;
 16644  005080  0E01               	movlw	1
 16645  005082  6FD5               	movwf	_pausa& (0+255),b
 16646  005084                     i2l7423:
 16647                           
 16648                           ;main.c: 145:         INT0IF = 0;
 16649  005084  92F2               	bcf	4082,1,c	;volatile
 16650  005086                     i2l286:
 16651  005086  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16652  005088  0011               	retfie		f
 16653  00508A                     __end_of_boton:
 16654                           	opt callstack 0
 16655                           
 16656 ;; *************** function _antiRebote *****************
 16657 ;; Defined at:
 16658 ;;		line 243 in file "main.c"
 16659 ;; Parameters:    Size  Location     Type
 16660 ;;  pin             1    wreg     unsigned char 
 16661 ;; Auto vars:     Size  Location     Type
 16662 ;;  pin             1    2[COMRAM] unsigned char 
 16663 ;; Return value:  Size  Location     Type
 16664 ;;                  1    wreg      void 
 16665 ;; Registers used:
 16666 ;;		wreg, status,2, status,0
 16667 ;; Tracked objects:
 16668 ;;		On entry : 0/0
 16669 ;;		On exit  : 0/0
 16670 ;;		Unchanged: 0/0
 16671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16672 ;;      Params:         0       0       0       0       0       0       0       0       0
 16673 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16674 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16675 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16676 ;;Total ram usage:        3 bytes
 16677 ;; Hardware stack levels used:    1
 16678 ;; This function calls:
 16679 ;;		Nothing
 16680 ;; This function is called by:
 16681 ;;		_boton
 16682 ;; This function uses a non-reentrant model
 16683 ;;
 16684                           
 16685                           	psect	text77
 16686  004FDE                     __ptext77:
 16687                           	opt callstack 0
 16688  004FDE                     _antiRebote:
 16689                           	opt callstack 20
 16690                           
 16691                           ;incstack = 0
 16692                           ;antiRebote@pin stored from wreg
 16693  004FDE  6E03               	movwf	antiRebote@pin^0,c
 16694  004FE0                     
 16695                           ;main.c: 245:     switch (pin) {
 16696  004FE0  EF09  F028         	goto	i2l7207
 16697  004FE4                     i2l320:
 16698  004FE4  A081               	btfss	129,0,c	;volatile
 16699  004FE6  EFF7  F027         	goto	i2u759_41
 16700  004FEA  EFF9  F027         	goto	i2u759_40
 16701  004FEE                     i2u759_41:
 16702  004FEE  EFF2  F027         	goto	i2l320
 16703  004FF2                     i2u759_40:
 16704  004FF2                     i2l323:
 16705  004FF2  B081               	btfsc	129,0,c	;volatile
 16706  004FF4  EFFE  F027         	goto	i2u760_41
 16707  004FF8  EF00  F028         	goto	i2u760_40
 16708  004FFC                     i2u760_41:
 16709  004FFC  EFF9  F027         	goto	i2l323
 16710  005000                     i2u760_40:
 16711  005000                     
 16712                           ;main.c: 249:             _delay((unsigned long)((100)*(4000000/4000.0)));
 16713  005000  0E82               	movlw	130
 16714  005002  6E01               	movwf	??_antiRebote^0,c
 16715  005004  0EDE               	movlw	222
 16716  005006                     i2u1206_47:
 16717  005006  2EE8               	decfsz	wreg,f,c
 16718  005008  D7FE               	bra	i2u1206_47
 16719  00500A  2E01               	decfsz	??_antiRebote^0,f,c
 16720  00500C  D7FC               	bra	i2u1206_47
 16721                           
 16722                           ;main.c: 250:             break;
 16723  00500E  EF1A  F028         	goto	i2l328
 16724  005012                     i2l7207:
 16725  005012  5003               	movf	antiRebote@pin^0,w,c
 16726  005014  6E01               	movwf	??_antiRebote^0,c
 16727  005016  6A02               	clrf	(??_antiRebote+1)^0,c
 16728                           
 16729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16730                           ; Switch size 1, requested type "simple"
 16731                           ; Number of cases is 1, Range of values is 0 to 0
 16732                           ; switch strategies available:
 16733                           ; Name         Instructions Cycles
 16734                           ; simple_byte            4     3 (average)
 16735                           ;	Chosen strategy is simple_byte
 16736  005018  5002               	movf	(??_antiRebote+1)^0,w,c
 16737  00501A  0A00               	xorlw	0	; case 0
 16738  00501C  B4D8               	btfsc	status,2,c
 16739  00501E  EF13  F028         	goto	i2l11141
 16740  005022  EF1A  F028         	goto	i2l328
 16741  005026                     i2l11141:
 16742                           
 16743                           ; Switch size 1, requested type "simple"
 16744                           ; Number of cases is 1, Range of values is 1 to 1
 16745                           ; switch strategies available:
 16746                           ; Name         Instructions Cycles
 16747                           ; simple_byte            4     3 (average)
 16748                           ;	Chosen strategy is simple_byte
 16749  005026  5001               	movf	??_antiRebote^0,w,c
 16750  005028  0A01               	xorlw	1	; case 1
 16751  00502A  B4D8               	btfsc	status,2,c
 16752  00502C  EFF2  F027         	goto	i2l320
 16753  005030  EF1A  F028         	goto	i2l328
 16754  005034                     i2l328:
 16755  005034  0012               	return		;funcret
 16756  005036                     __end_of_antiRebote:
 16757                           	opt callstack 0
 16758                           
 16759                           	psect	rparam
 16760  0000                     
 16761                           	psect	temp
 16762  00005A                     btemp:
 16763                           	opt callstack 0
 16764  00005A                     	ds	1
 16765  0000                     int$flags	set	btemp
 16766  0000                     wtemp8	set	btemp+1
 16767  0000                     ttemp5	set	btemp+1
 16768  0000                     ttemp6	set	btemp+4
 16769  0000                     ttemp7	set	btemp+8
 16770                           tosu	equ	0xFFF
 16771                           tosh	equ	0xFFE
 16772                           tosl	equ	0xFFD
 16773                           stkptr	equ	0xFFC
 16774                           pclatu	equ	0xFFB
 16775                           pclath	equ	0xFFA
 16776                           pcl	equ	0xFF9
 16777                           tblptru	equ	0xFF8
 16778                           tblptrh	equ	0xFF7
 16779                           tblptrl	equ	0xFF6
 16780                           tablat	equ	0xFF5
 16781                           prodh	equ	0xFF4
 16782                           prodl	equ	0xFF3
 16783                           indf0	equ	0xFEF
 16784                           postinc0	equ	0xFEE
 16785                           postdec0	equ	0xFED
 16786                           preinc0	equ	0xFEC
 16787                           plusw0	equ	0xFEB
 16788                           fsr0h	equ	0xFEA
 16789                           fsr0l	equ	0xFE9
 16790                           wreg	equ	0xFE8
 16791                           indf1	equ	0xFE7
 16792                           postinc1	equ	0xFE6
 16793                           postdec1	equ	0xFE5
 16794                           preinc1	equ	0xFE4
 16795                           plusw1	equ	0xFE3
 16796                           fsr1h	equ	0xFE2
 16797                           fsr1l	equ	0xFE1
 16798                           bsr	equ	0xFE0
 16799                           indf2	equ	0xFDF
 16800                           postinc2	equ	0xFDE
 16801                           postdec2	equ	0xFDD
 16802                           preinc2	equ	0xFDC
 16803                           plusw2	equ	0xFDB
 16804                           fsr2h	equ	0xFDA
 16805                           fsr2l	equ	0xFD9
 16806                           status	equ	0xFD8


Data Sizes:
    Strings     400
    Constant    4
    Data        4
    BSS         1415
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    156     160
    BANK1           256      7     217
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_14(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1476_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_14(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_14(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_14(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    combinarArreglos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    combinarArreglos@numMovimientosFinal	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientosTotales(BANK1[2]), 

    combinarArreglos@caminoFinal	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    decidirDireccion@caminoActual	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@caminoActual(BANK1[1]), 

    decidirDireccion@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    decidirDireccion@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    decidirDireccion@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    decidirDireccion@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    limpiarMovimientos@numMovimientos	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientos(BANK1[2]), caminoCorrecto@numMovimientos(COMRAM[2]), 

    limpiarMovimientos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    hayCruce@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    recorrerCaminoEncontrado@movimientos	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    regresarAlCruce@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    regresarPuntoPartida@movimientos	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    moverCarrito@carroEspejeado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@carroEspejeado(BANK0[1]), 

    caminoCorrecto@numMovimientosFinal	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientosTotales(BANK1[2]), 

    caminoCorrecto@caminoFinal	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    caminoCorrecto@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 63
		 -> STR_15(CODE[23]), STR_13(CODE[63]), STR_12(CODE[56]), STR_10(CODE[6]), 
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[10]), buffer(BANK1[50]), 
		 -> STR_2(CODE[25]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _comportamientoBasico->_moverCarrito
    _comportamientoBasico->_recorrerCaminoEncontrado
    _comportamientoBasico->_regresarAlCruce
    _comportamientoBasico->_regresarPuntoPartida
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _mover->_forzarAvanceRecto
    _PID->_roundf
    _roundf->___flsub
    ___flsub->___fladd
    _leerSensores->___fldiv
    _dameDistancia->___xxtofl
    ___fladd->___flmul
    _hayCruce->___flge
    _map->___aldiv
    ___xxtofl->___lwdiv
    ___fltol->_roundf
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _decidirDireccion->___flge
    _seLlegoAlDestino->_dameLecturaAdc
    ___flge->___flmul
    _caminoCorrecto->_combinarArreglos
    _UART_printf->_UART_write
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _main->_comportamientoBasico
    _visualizarPasosRealizados->_sprintf
    _comportamientoBasico->_sprintf
    _velocidadBaja->_pwmDuty
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _regresarPuntoPartida->_PID
    _regresarAlCruce->_PID
    _recorrerCaminoEncontrado->_PID
    _PID->_pwmDuty
    _leerSensores->___fldiv
    _velocidadEstandar->_pwmDuty
    _pwmDuty->___fltol
    ___fltol->_roundf

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_visualizarPasosRealizados

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  516357
                                              4 BANK1      3     3      0
                          _UART_init
               _comportamientoBasico
                          _configPwm
                      _configurarAdc
                     _forzarParoAuto
    _inicializarComportamientoBasico
          _visualizarPasosRealizados
 ---------------------------------------------------------------------------------
 (1) _visualizarPasosRealizados                            4     2      2   60873
                                              0 BANK1      4     2      2
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13829
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _comportamientoBasico                                 3     3      0  440373
                                            155 BANK0      1     1      0
                                              0 BANK1      2     2      0
                                _PID
                        _UART_printf
                     _caminoCorrecto
                   _decidirDireccion
                 _finalizarRecorrido
                      _forzarEspejeo
                     _forzarParoAuto
                           _hayCruce
                       _leerSensores
                 _limpiarMovimientos
                       _moverCarrito
           _recorrerCaminoEncontrado
                    _regresarAlCruce
               _regresarPuntoPartida
                            _sprintf
                      _velocidadBaja
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadBaja                                        0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   59486
                                            135 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   58070
                                            127 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   57522
                                             97 BANK0     30    24      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   38677
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             79 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6763
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4776
                                             32 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4497
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1665
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     562
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _regresarPuntoPartida                                 7     3      4   64212
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarAlCruce                                      7     3      4   64032
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _recorrerCaminoEncontrado                             7     3      4   64001
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (3) _mover                                                2     2      0       0
                                              7 COMRAM     2     2      0
                  _forzarAvanceRecto
 ---------------------------------------------------------------------------------
 (3) _PID                                                 18    18      0   51106
                                             40 BANK0     18    18      0
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _pwmDuty
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   20827
                                             75 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6347
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _moverCarrito                                         5     3      2   28940
                                             83 COMRAM     1     1      0
                                             40 BANK0      4     2      2
                  _forzarAvanceRecto
                      _forzarEspejeo
 ---------------------------------------------------------------------------------
 (4) _forzarAvanceRecto                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10233
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (2) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5422
                                             51 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (2) _hayCruce                                             4     1      3    4709
                                             63 COMRAM     4     1      3
                             ___flge
 ---------------------------------------------------------------------------------
 (2) _finalizarRecorrido                                   0     0      0   28788
                      _forzarEspejeo
                     _forzarParoAuto
 ---------------------------------------------------------------------------------
 (3) _forzarEspejeo                                        0     0      0   28788
                             ___flge
               _forzarEspejeoDerecha
             _forzarEspejeoIzquierda
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoIzquierda                               0     0      0   12461
                _forzarGiroIzquierda
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarGiroIzquierda                                  2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoDerecha                                 0     0      0   12461
                  _forzarGiroDerecha
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12461
                                             28 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3953
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             67 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (5) _forzarReversa                                        2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _forzarParoAuto                                       1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _forzarGiroDerecha                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _decidirDireccion                                    15     3     12    7428
                                             63 COMRAM    15     3     12
                             ___flge
                   _seLlegoAlDestino
 ---------------------------------------------------------------------------------
 (3) _seLlegoAlDestino                                     1     1      0      68
                                             10 COMRAM     1     1      0
                     _dameLecturaAdc
 ---------------------------------------------------------------------------------
 (4) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    3866
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _caminoCorrecto                                       9     0      9    1811
                                             17 COMRAM     9     0      9
                   _combinarArreglos
                 _limpiarMovimientos
 ---------------------------------------------------------------------------------
 (2) _limpiarMovimientos                                   8     4      4     521
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _combinarArreglos                                    12     4      8     583
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2    1266
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (11) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _comportamientoBasico
     _PID
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _roundf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___xxtofl
         ___lwdiv (ARG)
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
       _roundf
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
     _UART_printf
       _UART_write
     _caminoCorrecto
       _combinarArreglos
       _limpiarMovimientos
     _decidirDireccion
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _seLlegoAlDestino
         _dameLecturaAdc
     _finalizarRecorrido
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
       _forzarParoAuto
     _forzarEspejeo
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _forzarEspejeoDerecha
         _forzarGiroDerecha
         _forzarParoAuto
         _forzarReversa
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl
               ___lwdiv (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
       _forzarEspejeoIzquierda
         _forzarGiroIzquierda
         _forzarParoAuto
         _forzarReversa
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl
               ___lwdiv (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
     _forzarParoAuto
     _hayCruce
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
     _leerSensores
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _limpiarMovimientos
     _moverCarrito
       _forzarAvanceRecto
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
     _recorrerCaminoEncontrado
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _regresarAlCruce
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _regresarPuntoPartida
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _velocidadBaja
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _configPwm
   _configurarAdc
   _forzarParoAuto
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _visualizarPasosRealizados
     _UART_printf
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     3E8      21       48.9%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      7      D9       7       84.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9C      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     29A      20        0.0%
DATA                 0      0     682       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Sep 14 19:55:24 2020

                              ___fldiv@aexp 006C                                ___fldiv@bexp 006B  
                    __end_of_caminoCorrecto 52EE                                ___fldiv@sign 0064  
                              ___awdiv@sign 000B                              ?_configurarAdc 0001  
                       ___wmul@multiplicand 0008                                 __CFG_BORV$3 000000  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
           comportamientoBasico@caminoFinal 02C8                                         l204 3D4E  
                                       l214 3E2E                                         l206 3D5C  
                                       l207 3D5E                                         l217 4CC4  
                                       l241 5284                                         l226 5608  
                                       l410 5626                                         l162 5130  
                                       l235 4F26                                         l243 5292  
                                       l331 521A                                         l315 4856  
                                       l244 52A6                                         l420 5550  
                                       l229 5616                                         l149 4BE0  
                                       l157 3392                                         l165 513C  
                                       l334 52EC                                         l414 5600  
                                       l166 517A                                         l238 5630  
                                       l423 5592                                         l407 1AC2  
                                       l167 5146                                         l432 55E6  
                                       l168 517C                                         l417 5572  
                                       l193 3DB0                                         l185 3CEE  
                                       l441 43EC                                         l426 55B2  
                                       l195 3D1E                                         l187 3CFC  
                                       l188 3CFE                                         l605 1D46  
                                       l429 55CC                                         l437 53B0  
                                       l197 3D2C                                         l445 442E  
                                       l453 49B0                                         l542 51CC  
                                       l526 3864                                         l198 3D2E  
                                       l447 4458                                         l391 1A6C  
                                       l448 4464                                         l456 49CC  
                                       l800 2B2E                                         l384 17BA  
                                       l545 54BA                                         l449 44AC  
                                       l457 49F2                                         l721 54E2  
                                       l546 54BC                                         l458 49FE  
                                       l802 2B36                                         l651 1F12  
                                       l459 4A46                                         l660 1F14  
                                       l468 49AA                                         l820 2D6E  
                                       l477 46F8                                         l558 1C26  
                                       l718 552E                                         l727 4E68  
                                       l663 3B38                                         l487 4B66  
                                       l675 3B68                                         l588 1CC4  
                                       l668 3B58                                         l669 3B48  
                                       l782 44F4                                         l838 0BD6  
                                       l960 4DF6                                         l696 2FC0  
                                       l856 0406                                         l928 117E  
                                       l961 4E06                                         l785 4536  
                                       l945 4D94                                         l794 4FDC  
                                       l882 07A2                                         l946 4D9C  
                                       l787 4572                                         l939 10C4  
                                       l949 5508                                __CFG_CPB$OFF 000000  
                                       _PR2 000FCB                                         _PID 2D70  
                              __CFG_CPD$OFF 000000                                __CFG_BOR$OFF 000000  
                                       _abs 5332                                         _map 4B68  
                                       _pad 44AE                                ___awmod@sign 000B  
                                       wreg 000FE8                                ___flmul@aexp 0028  
                              ___flmul@bexp 002D                    _DISTANCIA_PRIORIDAD_BAJA 010C  
                  _DISTANCIA_PRIORIDAD_ALTA 0114                                ___flmul@sign 0027  
                              ___flmul@temp 0032                                ___flmul@prod 002E  
               __size_of_limpiarMovimientos 0050                                __CFG_LVP$OFF 000000  
                                      ?_PID 0001                                ___fltol@exp1 007B  
                              __CFG_WDT$OFF 000000                                        ?_abs 0018  
                                      l1028 3F3A                                        l1214 4100  
                                      l1223 5458                                        l1063 39EC  
                                      l1208 4900                                        l1219 4146  
                                      l1076 3CCC                                        l1180 4636  
                                      l1246 4042                                        l1503 1558  
                                      l1504 1546                                        l1440 4C4C  
                                      l1193 47A8                                        l1531 2A8C  
                                      l1611 3482                                        l1604 33EA  
                                      l1533 28EC                                        l1542 2932  
                                      l1630 4244                                        l1607 3546  
                                      l1447 4C54                                        l1519 5260  
                                      l1544 29AA                                        l1536 28B0  
                                      l1545 2998                                        l1570 21D0  
                                      l1618 34DE                                        l1714 43E4  
                                      l1722 5330                                        l1563 1FDA  
                                      l1635 5368                                        l1580 2300  
                                      l1572 2248                                        l1740 26F0  
                                      l1732 5636                                        l1573 2236  
                                      l1477 136E                                        l1494 1488  
                                      l1486 163E                                        l1478 135C  
                                      l1638 5370                                        l1567 233E  
                                      l1479 1322                                        l1753 4F82  
                                      l1729 50DA                                        l1666 36CE  
                                      l1675 31D6                                        l1763 431A  
                                      l1685 5420                                        l1693 512C  
                                      l1669 36D6                                        l1773 4EC0  
                                      l1678 311A                                        l1759 548E  
                                      l1778 4EC8                                        l1699 53E8  
                                      ?_map 0020                                        ?_pad 0016  
                                      l8001 3E42                                        l8011 3E78  
                                      l8003 3E52                                        l8021 3EC0  
                                      l8013 3E88                                        l8005 3E56  
                                      l8101 1236                                        l8031 3F04  
                                      l8023 3ECA                                        l8015 3E9E  
                                      l8007 3E64                                        l8111 1272  
                                      l8103 1246                                        l8025 3EE8  
                                      l8017 3EA6                                        l8033 3F0A  
                                      l8009 3E74                                        l8041 4B68  
                                      l8201 1478                                        l8121 1290  
                                      l8113 1280                                        l8105 1248  
                                      l9001 2A8E                                        l8035 3F1A  
                                      l8027 3EF8                                        l8019 3EB2  
                                      l8211 14CC                                        l8203 149E  
                                      l8131 12A4                                        l8123 1294  
                                      l8115 1284                                        l8107 1250  
                                      l8051 5310                                        l9011 2B08  
                                      l9003 2AAE                                        l8037 3F2A  
                                      l8029 3EFA                                        l8301 27A6  
                                      l8221 14F6                                        l8213 14DA  
                                      l8205 14AE                                        l8141 12B8  
                                      l8133 12A8                                        l8125 1298  
                                      l8117 1288                                        l8109 1260  
                                      l8045 52EE                                        l8053 545A  
                                      l9021 2B64                                        l9013 2B22  
                                      l9005 2AD6                                        l9101 013E  
                                      l8311 27E6                                        l8303 27A8  
                                      l8231 1528                                        l8223 1506  
                                      l8215 14DC                                        l8151 130A  
                                      l8143 12BC                                        l8135 12AC  
                                      l8127 129C                                        l8119 128C  
                                      l8071 119A                                        l8047 52FA  
                                      l8055 5466                                        l9031 2C02  
                                      l9023 2B6C                                        l9015 2B3E  
                                      l9007 2AF6                                        l8063 53B2  
                                      l9103 015A                                        l9111 01A4  
                                      l8321 2816                                        l8313 27EE  
                                      l8305 27B0                                        l8241 1582  
                                      l8233 153E                                        l8217 14EA  
                                      l8209 14C2                                        l8225 1508  
                                      l8161 134E                                        l8153 131A  
                                      l8137 12B0                                        l8129 12A0  
                                      l8145 12C0                                        l8081 11CE  
                                      l8073 119C                                        l8049 530C  
                                      l8057 546A                                        l9041 2CBE  
                                      l9033 2C08                                        l9025 2B74  
                                      l9017 2B50                                        l9009 2B06  
                                      l9201 0540                                        l9121 022E  
                                      l9113 01CA                                        l9105 0172  
                                      l8331 2854                                        l8323 2816  
                                      l8315 27F2                                        l8307 27C0  
                                      l8411 1F30                                        l8251 15FE  
                                      l8243 15BC                                        l8219 14F2  
                                      l8227 1516                                        l8163 1350  
                                      l8155 1330                                        l8147 12C4  
                                      l8139 12B4                                        l8091 1200  
                                      l8075 11AC                                        l8083 11D6  
                                      l8067 1180                                        l8059 5482  
                                      l9051 2D10                                        l9043 2CD8  
                                      l9027 2B7A                                        l9035 2C6C  
                                      l9019 2B5E                                        l9203 0554  
                                      l9211 064A                                        l9131 0264  
                                      l9107 017C                                        l8341 28A0  
                                      l8333 2864                                        l8309 27D6  
                                      l8501 2200                                        l8421 1F68  
                                      l8413 1F32                                        l8261 161E  
                                      l8253 1602                                        l8237 1568  
                                      l8245 15BE                                        l8229 151A  
                                      l8181 13D8                                        l8173 13A0  
                                      l8165 135A                                        l8157 133C  
                                      l8149 12EE                                        l8093 1206  
                                      l8085 11E6                                        l8077 11BC  
                                      l8069 118C                                        l9053 2D22  
                                      l9037 2C86                                        l9045 2CE8  
                                      l9029 2BFC                                        l9301 0A3A  
                                      l9221 0716                                        l9213 0668  
                                      l9205 05B8                                        l9141 032E  
                                      l9117 0200                                        l8351 28EA  
                                      l8343 28AE                                        l8335 2874  
                                      l8327 282A                                        l8319 2806  
                                      l8271 2700                                        l8511 2272  
                                      l8503 222E                                        l8431 1F94  
                                      l8423 1F78                                        l8415 1F42  
                                      l8407 1F16                                        l8263 162C  
                                      l8255 1610                                        l8247 15CE  
                                      l8239 1574                                        l8183 13DC  
                                      l8175 13B0                                        l8167 137C  
                                      l8191 13FC                                        l8159 1340  
                                      l8095 1214                                        l8087 11EC  
                                      l8079 11CC                                        l9055 2D2E  
                                      l9047 2CFA                                        l9039 2CA4  
                                      l9311 0A70                                        l9303 0A4A  
                                      l9231 078E                                        l9223 0726  
                                      l9215 069C                                        l9207 0610  
                                      l9151 03B0                                        l9143 0362  
                                      l9135 029A                                        l9119 0212  
                                      l9071 0042                                        l9063 0012  
                                      l8361 2930                                        l8353 28FC  
                                      l8345 28BA                                        l8337 287C  
                                      l8329 2844                                        l8281 2740  
                                      l8273 270E                                        l8521 22E8  
                                      l8513 229C                                        l8441 1FEA  
                                      l8433 1FA4                                        l8425 1F7E  
                                      l8417 1F52                                        l8409 1F22  
                                      l8601 346C                                        l8265 162E  
                                      l8257 1616                                        l8249 15DE  
                                      l8193 1422                                        l8185 13EA  
                                      l8177 13BE                                        l8169 138C  
                                      l8097 1216                                        l8089 11FE  
                                      l9057 2D36                                        l9049 2D0A  
                                      l9321 0ACC                                        l9313 0A7C  
                                      l9305 0A52                                        l9241 0846  
                                      l9233 079A                                        l9225 0736  
                                      l9217 06CE                                        l9209 0644  
                                      l9153 03C2                                        l9161 0412  
                                      l9145 036A                                        l9137 02CE  
                                      l9129 024A                                        l9081 009A  
                                      l9073 0066                                        l9065 001C  
                                      l8371 2990                                        l8355 2912  
                                      l8363 2942                                        l8347 28D8  
                                      l8339 288C                                        l8291 2766  
                                      l8283 2742                                        l8275 2710  
                                      l8523 2304                                        l8531 232A  
                                      l8507 2258                                        l8515 22A0  
                                      l8451 2024                                        l8443 1FFA  
                                      l8435 1FB4                                        l8427 1F84  
                                      l8419 1F62                                        l8611 34EC  
                                      l8603 3478                                        l8259 1618  
                                      l8195 1456                                        l8187 13EC  
                                      l8179 13CC                                        l8099 1226  
                                      l9059 2D46                                        l9331 0B16  
                                      l9315 0A82                                        l9323 0AD2  
                                      l9307 0A60                                        l9251 0890  
                                      l9243 0858                                        l9235 07BE  
                                      l9227 076A                                        l9219 06E4  
                                      l9171 0456                                        l9155 03D6  
                                      l9139 02D4                                        l9147 039C  
                                      l9091 00CA                                        l9083 00AE  
                                      l9075 0070                                        l9067 002C  
                                      l9411 428A                                        l9403 4246  
                                      l8381 29FE                                        l8365 2950  
                                      l8357 2918                                        l8349 28DA  
                                      l8293 2774                                        l8277 2720  
                                      l8285 274A                                        l8269 26F2  
                                      l8533 232E                                        l8525 2314  
                                      l8517 22BA                                        l8509 2264  
                                      l8461 2076                                        l8453 203A  
                                      l8437 1FC4                                        l8429 1F92  
                                      l8621 3534                                        l8613 34EE  
                                      l8605 34B4                                        l8197 1458  
                                      l8189 13F6                                        l8701 4EA0  
                                      l9341 0B46                                        l9333 0B22  
                                      l9325 0AE4                                        l9317 0AA8  
                                      l9309 0A68                                        l9261 08C6  
                                      l9253 08A0                                        l9245 0866  
                                      l9237 0822                                        l9229 077A  
                                      l9181 04B2                                        l9173 048C  
                                      l9157 03DE                                        l9149 03AC  
                                      l9085 00BA                                        l9093 00D0  
                                      l9077 0078                                        l9069 003A  
                                      l9413 42A2                                        l9405 4270  
                                      l9501 0BFC                                        l9431 5282  
                                      l9423 5264                                        l8391 2A68  
                                      l8375 29BA                                        l8383 2A02  
                                      l8367 2954                                        l8359 2922  
                                      l8295 2776                                        l8287 275A  
                                      l8279 2730                                        l8527 2322  
                                      l8519 22CE                                        l8471 20BC  
                                      l8463 2084                                        l8455 2046  
                                      l8447 200E                                        l8439 1FCA  
                                      l8551 3FA8                                        l8543 3F68  
                                      l8623 3536                                        l8615 34F2  
                                      l8607 34C0                                        l8631 3258  
                                      l8199 1468                                        l8711 303A  
                                      l8703 4EB2                                        l9351 0BA0  
                                      l9335 0B2A                                        l9327 0AFE  
                                      l9319 0AC4                                        l9271 08FA  
                                      l9263 08CA                                        l9255 08A4  
                                      l9239 0832                                        l9247 086E  
                                      l9191 04F6                                        l9183 04C4  
                                      l9175 0494                                        l9167 0426  
                                      l9159 03F8                                        l9095 00F6  
                                      l9087 00C2                                        l9079 008A  
                                      l9415 42BE                                        l9511 0C4C  
                                      l9503 0C0A                                        l9433 5294  
                                      l9425 526C                                        l8393 2A6C  
                                      l8385 2A1C                                        l8377 29C6  
                                      l8369 2962                                        l8297 2786  
                                      l8289 2760                                        l8529 2324  
                                      l8481 212A                                        l8473 20D6  
                                      l8465 2090                                        l8457 205E  
                                      l8449 201A                                        l8561 3FD8  
                                      l8553 3FB6                                        l8545 3F92  
                                      l8537 3F3C                                        l8617 3516  
                                      l8609 34CE                                        l8633 32DE  
                                      l9441 55B4                                        l9361 3548  
                                      l8801 3BCE                                        l8721 310A  
                                      l8713 304E                                        l9353 0BB0  
                                      l9345 0B7A                                        l9337 0B3A  
                                      l9329 0B04                                        l9281 0998  
                                      l9273 08FE                                        l9265 08D0  
                                      l9257 08AA                                        l9249 0882  
                                      l9193 050E                                        l9185 04D2  
                                      l9169 043A                                        l9177 0498  
                                      l9089 00C6                                        l9417 42D0  
                                      l9409 427C                                        l9601 116C  
                                      l9521 0CE6                                        l9513 0C5A  
                                      l9505 0C1C                                        l9427 526E  
                                      l8395 2A7A                                        l8387 2A32  
                                      l8379 29D4                                        l8299 2796  
                                      l8491 21C0                                        l8483 2154  
                                      l8475 20E6                                        l8467 20A0  
                                      l8459 206A                                        l8571 4002  
                                      l8563 3FE2                                        l8547 3F94  
                                      l8539 3F54                                        l8619 3526  
                                      l8635 3322                                        l8627 31D8  
                                      l9451 55C8                                        l9443 55B8  
                                      l9611 4BFC                                        l9371 35B6  
                                      l9363 355C                                        l8651 44E0  
                                      l8811 3C44                                        l8803 3BEC  
                                      l8731 31C6                                        l8715 305C  
                                      l8723 313E                                        l8707 2FC2  
                                      l9355 0BB6                                        l9347 0B8C  
                                      l9339 0B40                                        l9291 09F8  
                                      l9259 08B6                                        l9267 08D6  
                                      l9275 0904                                        l9283 099C  
                                      l9195 0520                                        l9187 04D6  
                                      l9179 04A0                                        l9099 012C  
                                      l9419 42F8                                        l9531 0D72  
                                      l9515 0C7E                                        l9507 0C20  
                                      l9701 519A                                        l9429 5280  
                                      l8397 2A80                                        l8389 2A4C  
                                      l8493 21CE                                        l8485 218A  
                                      l8477 2102                                        l8469 20AC  
                                      l8573 4012                                        l8549 3FA4  
                                      l8581 3396                                        l8629 3238  
                                      l9461 55DE                                        l9453 55CE  
                                      l9445 55BC                                        l9621 4C36  
                                      l9613 4C04                                        l9437 5530  
                                      l8741 5500                                        l9381 35DE  
                                      l9373 35BA                                        l9365 3560  
                                      l8661 4546                                        l8653 44EC  
                                      l8645 44AE                                        l8821 3CAC  
                                      l8813 3C64                                        l8805 3BF4  
                                      l8901 4782                                        l8725 317A  
                                      l8709 2FE2                                        l9349 0B98  
                                      l9293 0A0A                                        l9285 09BA  
                                      l9277 095C                                        l9269 08E8  
                                      l9189 04E8                                        l9197 0528  
                                      l9541 0E3C                                        l9533 0DA4  
                                      l9525 0D2E                                        l9517 0CB8  
                                      l9509 0C44                                        l9703 519E  
                                      l8399 2A82                                        l8495 21E0  
                                      l8487 2198                                        l8479 210E  
                                      l8575 4022                                        l8559 3FCE  
                                      l8583 33A6                                        l8639 3366  
                                      l9463 55E2                                        l9455 55D2  
                                      l9447 55C0                                        l9623 4C3E  
                                      l9615 4C0C                                        l9607 4BE2  
                                      l9631 3CE0                                        l9439 5538  
                                      l9471 23BE                                        l9711 2DBA  
                                      l8735 53EA                                        l9383 35E6  
                                      l9367 3564                                        l8663 455A  
                                      l8655 4500                                        l8647 44BE  
                                      l8751 3898                                        l8815 3C76  
                                      l8807 3C08                                        l8831 4574  
                                      l8903 4788                                        l8911 4858  
                                      l8671 4148                                        l8727 318E  
                                      l8719 30CE                                        l9295 0A0E  
                                      l9287 09D6                                        l9279 0990  
                                      l9199 0530                                        l9551 0EE8  
                                      l9535 0DB4                                        l9519 0CD8  
                                      l9527 0D40                                        l9705 51BC  
                                      l8497 21EE                                        l8489 21B6  
                                      l8577 4032                                        l8569 3FF6  
                                      l8593 3424                                        l8585 33B4  
                                      l9457 55D6                                        l9449 55C4  
                                      l9625 4C40                                        l9617 4C1A  
                                      l9609 4BEA                                        l9641 3D6C  
                                      l9633 3CE2                                        l8825 521C  
                                      l9481 2474                                        l9473 23FA  
                                      l9465 2340                                        l9721 2F02  
                                      l9713 2E7C                                        l9393 368E  
                                      l9385 361A                                        l9377 35C0  
                                      l9369 3580                                        l8657 4514  
                                      l8649 44D2                                        l8761 38DA  
                                      l8753 389C                                        l8745 3866  
                                      l8809 3C16                                        l8817 3C7C  
                                      l8841 45A0                                        l8833 4578  
                                      l8905 4798                                        l8921 48F8  
                                      l8913 4886                                        l8673 4168  
                                      l8729 31B6                                        l9297 0A20  
                                      l9289 09E8                                        l9561 0F56  
                                      l9545 0E58                                        l9537 0DE6  
                                      l9529 0D62                                        l9803 52A8  
                                      l8931 4082                                        l8499 21F2  
                                      l8595 342C                                        l8587 33FA  
                                      l9459 55DA                                        l9627 4C46  
                                      l9619 4C20                                        l9651 3E0C  
                                      l9635 3CE8                                        l9811 43F4  
                                      l8827 522C                                        l9491 2680  
                                      l9483 2542                                        l9475 241E  
                                      l9467 2360                                        l9731 2F4A  
                                      l9723 2F16                                        l9715 2EAC  
                                      l9707 2D70                                        l8739 54E4  
                                      l9395 36A0                                        l9379 35D6  
                                      l8659 4518                                        l8771 3934  
                                      l8763 38F8                                        l8755 38AA  
                                      l8747 386A                                        l8819 3C8C  
                                      l8667 5332                                        l8851 45CE  
                                      l8843 45A8                                        l8835 4586  
                                      l8907 47A0                                        l8923 48FE  
                                      l8915 4896                                        l8675 41A6  
                                      l8683 41E6                                        l9299 0A32  
                                      l9563 0F86                                        l9555 0F20  
                                      l9547 0E7C                                        l9539 0E0A  
                                      l9805 52B4                                        l8941 40EE  
                                      l8933 40B0                                        l8597 3438  
                                      l8589 3410                                        l9653 3E0C  
                                      l9637 3D0C                                        l9645 3D7E  
                                      l9629 3CD0                                        l9821 4450  
                                      l9813 440A                                        l9493 26BC  
                                      l9485 25AE                                        l9477 243C  
                                      l9469 23AA                                        l9741 2F9E  
                                      l9733 2F72                                        l9725 2F1E  
                                      l9717 2EB4                                        l9709 2D7A  
                                      l9397 36B2                                        l9389 3650  
                                      l7981 4368                                        l7973 431C  
                                      l8773 3962                                        l8765 3900  
                                      l8781 399C                                        l8757 38CA  
                                      l8749 3878                                        l8669 534C  
                                      l8861 4608                                        l8853 45D6  
                                      l8845 45AC                                        l8837 458E  
                                      l8917 48C4                                        l8685 41F8  
                                      l8677 41CE                                        l8693 4F28  
                                      l9573 104E                                        l9557 0F32  
                                      l9549 0EA0                                        l9663 5604  
                                      l9807 52D8                                        l8943 413E  
                                      l8935 40C0                                        l8927 4044  
                                      l9751 5490                                        l8599 346A  
                                      l7991 4DBC                                        l9655 3E1E  
                                      l9647 3DC0                                        l9639 3D3C  
                                      l9815 441A                                        l8951 5438  
                                      l9495 26E0                                        l9487 25E0  
                                      l9743 2FAE                                        l9735 2F82  
                                      l9719 2ED6                                        l9727 2F2A  
                                      l9671 49EA                                        l7983 439E  
                                      l7975 432E                                        l8783 39AC  
                                      l8775 3982                                        l8767 3914  
                                      l8759 38CE                                        l8791 3B6E  
                                      l8871 462E                                        l8863 460A  
                                      l8855 45E4                                        l8847 45B4  
                                      l8839 4592                                        l8919 48D4  
                                      l8679 41DA                                        l8695 4F38  
                                      l9575 1060                                        l9583 10D8  
                                      l9559 0F48                                        l9567 0FB2  
                                      l8945 4144                                        l8937 40CE  
                                      l8929 4072                                        l9753 5494  
                                      l9841 1AE4                                        l7993 4DCC  
                                      l9745 5372                                        l9649 3DD2  
                                      l9817 441E                                        l9809 43E8  
                                      l8953 5448                                        l9489 264C  
                                      l9737 2F8A                                        l9729 2F32  
                                      l9665 49AC                                        l8961 50F4  
                                      l7977 4340                                        l8785 39CC  
                                      l8777 3984                                        l8769 3922  
                                      l8793 3B7C                                        l8865 4610  
                                      l8857 45EA                                        l8849 45C6  
                                      l8881 4714                                        l8689 423C  
                                      l8697 4E6A                                        l9585 10FC  
                                      l9593 112C                                        l9577 1094  
                                      l9569 0FE0                                        l9761 4D3C  
                                      l9771 4EF2                                        l9691 4E40  
                                      l8939 40E0                                        l9755 54B6  
                                      l9851 1B38                                        l9843 1AFC  
                                      l8971 55E8                                        l7995 4DD6  
                                      l7987 4D9E                                        l9747 53A4  
                                      l9819 4436                                        l9739 2F96  
                                      l9667 49B8                                        l8963 5122  
                                      l7979 434A                                        l8779 3996  
                                      l8795 3B9C                                        l8859 4600  
                                      l8867 4616                                        l8891 4748  
                                      l8883 4718                                        l8875 46FA  
                                      l9595 113A                                        l9587 110A  
                                      l9499 0BD8                                        l9763 4D4A  
                                      l7997 3E30                                        l9773 4EF6  
                                      l9693 4E4E                                        l9853 1B52  
                                      l9845 1B14                                        l9837 1AC4  
                                      l8973 55F0                                        l7989 4DAE  
                                      l8981 557C                                        l9749 53AC  
                                      l9781 3B28                                        l9829 4470  
                                      l8949 5422                                        l9669 49D4  
                                      l8965 5126                                        l8957 50DC  
                                      l8797 3BA0                                        l8789 3B6A  
                                      l8869 4626                                        l8893 4750  
                                      l8885 4726                                        l8877 46FE  
                                      l9589 111E                                        l9765 4D78  
                                      l7999 3E34                                        l9767 4ECA  
                                      l9695 4E52                                        l9687 4E08  
                                      l9951 1D0C                                        l9863 1BB6  
                                      l9855 1B62                                        l9871 1BEC  
                                      l9847 1B20                                        l9839 1ACC  
                                      l8983 5594                                        l8975 5552  
                                      l9775 39EE                                        l9679 4A0A  
                                      l8959 50E0                                        l8991 4FA4  
                                      l8799 3BAE                                        l8895 475E  
                                      l8887 472E                                        l8879 470C  
                                      l9599 1148                                        l9759 4D34  
                                      l9791 508A                                        STR_1 7F63  
                                      STR_2 7F4A                                        l9769 4ECE  
                                      l9689 4E14                                        l9697 517E  
                                      l9945 1CC8                                        l9881 1C7E  
                                      l9865 1BCA                                        l9857 1B80  
                                      l9873 1C26                                        l9849 1B30  
                                      l8985 559C                                        l8977 555A  
                                      l8969 550A                                        l9777 3B08  
                                      l8993 4FB0                                        l8897 4774  
                                      l8889 4740                                        l9793 509C  
                                      STR_3 7EE6                                        STR_4 7FA5  
                                      l9699 518A                                        l9947 1CE2  
                                      l9883 1C86                                        l9875 1C3E  
                                      l9859 1B94                                        l8979 5574  
                                      l9779 3B18                                        l8995 4FB4  
                                      l8987 4F84                                        l8899 477C  
                                      l9795 50A4                                        STR_5 7F92  
                                      STR_6 7FB7                                        l9949 1D00  
                                      l9965 1D14                                        l9885 1CA4  
                                      l9877 1C58                                        l8997 4FB8  
                                      l8989 4F98                                        l9797 50AC  
                                      STR_7 7FD3                                        STR_8 7FC8  
                                      l9991 1D86                                        l9967 1D32  
                                      l9887 1CA8                                        l9879 1C60  
                                      l9799 50C8                                        STR_9 7FDD  
                                      l9993 1D92                                        l9969 1D3E  
                                      l9889 1CB4                                        l9987 1D4A  
                                      l9989 1D68                                        u8000 4368  
                                      u8001 4364                                        u8010 439E  
                                      u8011 439A                                        u8020 4DBC  
                                      u8100 5330                                        _RCIF 007CF5  
                                      u8021 4DB8                                        u8101 532C  
                                      u8030 4DF6                                        u8110 5482  
                                      u8031 4DF2                                        u8111 547E  
                                      u8040 3E42                                        u9000 4012  
                                      u8200 1236                                        u8120 53E2  
                                      u8041 3E3E                                        u9001 400E  
                                      u8201 1232                                        u8121 53DC  
                                      u8050 3E64                                        u9010 4022  
                                      u8210 1272                                        u8130 53E4  
                                      u8051 3E60                                        u9011 401E  
                                      u8211 126E                                        u8060 3E9E  
                                      u9100 3526                                        u9020 33A6  
                                      u8300 138C                                        u8220 1280  
                                      u8140 119A                                        u8061 3E9A  
                                      u9101 3522                                        u9021 33A2  
                                      u8301 1388                                        u8221 127C  
                                      u8141 1196                                        u8070 3EC0  
                                      u9110 3534                                        u9030 33B4  
                                      u8310 13BE                                        u8230 12EE  
                                      u8150 11AC                                        u8071 3EBC  
                                      u9111 3530                                        u9031 33B0  
                                      u8311 13BA                                        u8231 12EA  
                                      u8151 11A8                                        u8080 3EE8  
                                      u9040 3410                                        u9120 3258  
                                      u8400 1506                                        u8320 13CC  
                                      u8240 1306                                        u8160 11BC  
                                      u9200 4188                                        u8081 3EE4  
                                      u9041 340C                                        u9121 3254  
                                      u8401 1502                                        u8321 13C8  
                                      u8241 1300                                        u8161 11B8  
                                      u8090 3F1A                                        u9050 3466  
                                      u8410 1516                                        u8330 13EA  
                                      u8250 1308                                        u8170 11FE  
                                      u9210 41A6                                        u8091 3F16  
                                      u9051 3462                                        u8411 1512  
                                      u8331 13E6                                        u8171 11FA  
                                      u9211 41A2                                        u9060 34B0  
                                      u8500 15FE                                        u8420 1528  
                                      u8340 1422                                        u8260 1330  
                                      u8180 1214                                        u9220 41CE  
                                      u9300 4E9C                                        u9061 34AC  
                                      u8501 15FA                                        u8421 1524  
                                      u8341 141E                                        u8261 132C  
                                      u8181 1210                                        u9221 41CA  
                                      u9205 417E                                        u9070 34CE  
                                      u8510 1610                                        u8430 153E  
                                      u8350 1468                                        u8270 134E  
                                      u8190 1226                                        u9150 44BE  
                                      u9230 41F8                                        u9310 4EB2  
                                      u9071 34CA                                        u9135 32F2  
                                      u8511 160C                                        u8431 153A  
                                      u8351 1464                                        u8271 134A  
                                      u8191 1222                                        u9151 44BA  
                                      u9231 41F4                                        u9311 4EAE  
                                      u8600 2816                                        u9080 34DE  
                                      u9136 32FC                                        u8520 162C  
                                      u8440 1554                                        u8360 149E  
                                      u8280 136E                                        u9160 44E0  
                                      u9400 317A                                        u9320 300C  
                                      u8601 2812                                        u9081 34DA  
                                      u9145 3336                                        u9137 330C  
                                      u8521 1628                                        u8441 1550  
                                      u8361 149A                                        u8281 136A  
                                      u9161 44DC                                        u9401 3176  
                                      u8610 288C                                        u8530 270E  
                                      u9090 34EC                                        u9146 3340  
                                      u8450 1568                                        u8370 14AE  
                                      u8290 137C                                        u9170 4536  
                                      u9250 4232                                        u9410 31B6  
                                      u9330 303A                                        u8611 2888  
                                      u8531 270A                                        u9091 34E8  
                                      u9147 3350                                        u8451 1564  
                                      u8371 14AA                                        u8291 1378  
                                      u9171 4532                                        u9251 422C  
                                      u9411 31B2                                        u9331 3036  
                                      u8700 29A6                                        u8620 28AE  
                                      u8540 2720                                        u8460 1582  
                                      u8380 14DA                                        u9420 541A  
                                      u9180 4546                                        u9500 39AC  
                                      u9260 4234                                        u9340 305C  
                                      u8701 29A2                                        u8621 28AA  
                                      u8541 271C                                        u8461 157E  
                                      u8381 14D6                                        u9421 5414  
                                      u9181 4542                                        u9501 39A8  
                                      u9245 420A                                        u9341 3058  
                                      u9325 3002                                        u8710 29BA  
                                      u8630 28D8                                        u8550 2730  
                                      u8470 15BC                                        u8390 14EA  
                                      u9430 541C                                        u9510 3B7C  
                                      u9190 534C                                        u9270 4F70  
                                      u8711 29B6                                        u8631 28D4  
                                      u8551 272C                                        u8471 15B8  
                                      u8391 14E6                                        u9511 3B78  
                                      u9191 5348                                        u8720 29D4  
                                      u8640 28FC                                        u8560 2774  
                                      u8800 1FA4                                        u8480 15CE  
                                      u9440 3878                                        u9520 3BAE  
                                      u9600 45E4                                        u9360 30CA  
                                      u9280 4F82                                        u8721 29D0  
                                      u8641 28F8                                        u8561 2770  
                                      u8801 1FA0                                        u8481 15CA  
                                      u9441 3874                                        u9521 3BAA  
                                      u9601 45E0                                        u9361 30C6  
                                      u9281 4F7E                                        u8730 2A1C  
                                      u8650 2912                                        u8570 2786  
                                      u8810 1FB4                                        u8490 15DE  
                                      u9450 38AA                                        u9530 3BEC  
                                      u9610 4600                                        u9370 30EE  
                                      u9290 4E9A                                        u8731 2A18  
                                      u8651 290E                                        u8571 2782  
                                      u8811 1FB0                                        u8491 15DA  
                                      u9451 38A6                                        u9531 3BE8  
                                      u9611 45FC                                        u9355 3070  
                                      u9291 4E94                                        u8740 2A4C  
                                      u8660 2930                                        u8580 2796  
                                      u8900 2258                                        u8820 1FEA  
                                      u9540 3C16                                        u9620 4626  
                                      u9700 48C4                                        u9380 310A  
                                      u9356 307A                                        u8741 2A48  
                                      u8661 292C                                        u8581 2792  
                                      u8901 2254                                        u8821 1FE6  
                                      u9461 38D4                                        u9541 3C12  
                                      u9621 4622                                        u9701 48C0  
                                      u9381 3106                                        u9357 308A  
                                      u9277 4F66                                        u8750 2A7A  
                                      u8670 2950                                        u8590 27D6  
                                      u8910 2272                                        u8830 1FFA  
                                      u9470 38F8                                        u9550 3C44  
                                      u9630 470C                                        u9710 48F8  
                                      u9390 315E                                        u8751 2A76  
                                      u8671 294C                                        u8591 27D2  
                                      u8911 226E                                        u8831 1FF6  
                                      u9471 38F4                                        u9551 3C40  
                                      u9631 4708                                        u9711 48F4  
                                      u9375 30E4                                        u9720 4072  
                                      u8680 2962                                        u8920 22BA  
                                      u8840 2174                                        u8760 1F30  
                                      u9800 4F98                                        u9480 3922  
                                      u9560 3C8C                                        u9640 4726  
                                      u9721 406E                                        u8681 295E  
                                      u8921 22B6                                        u8761 1F2C  
                                      u9801 4F94                                        u9481 391E  
                                      u9561 3C88                                        u9641 4722  
                                      u9730 40B0                                        u8690 2990  
                                      u8930 22E8                                        u8850 21CE  
                                      u8770 1F42                                        u9490 3962  
                                      u9810 2ABE                                        u9570 4586  
                                      u9650 4740                                        u9731 40AC  
                                      u8691 298C                                        u8931 22E4  
                                      u8851 21CA                                        u8771 1F3E  
                                      u9491 395E                                        u9811 2AB8  
                                      u9571 4582                                        u9651 473C  
                                      u9395 3154                                        u9740 40CE  
                                      u8940 2322                                        u8860 21EE  
                                      u8780 1F52                                        u7980 432E  
                                      u9900 2CBE                                        u9820 2AC0  
                                      u9580 45A0                                        u9660 475E  
                                      u9741 40CA                                        u8941 231E  
                                      u8861 21EA                                        u8845 216A  
                                      u8781 1F4E                                        u7981 432A  
                                      u9901 2CBA                                        u9581 459C  
                                      u9661 475A                                        u9750 40EE  
                                      u8870 2200                                        u8790 1F92  
                                      u8950 3F54                                        u7990 4340  
                                      u9910 2CD8                                        u9830 2AD6  
                                      u9590 45C6                                        u9670 4774  
                                      u9751 40EA                                        u8871 21FC  
                                      u8791 1F8E                                        u8951 3F50  
                                      u7991 433C                                        u9911 2CD4  
                                      u9831 2AD2                                        u9591 45C2  
                                      u9671 4770                                        u9760 413E  
                                      u8880 222E                                        u8960 3F88  
                                      u9920 2CE8                                        u9840 2B06  
                                      u9680 4798                                        u9761 413A  
                                      u8881 222A                                        u9921 2CE4  
                                      u9841 2B02                                        u9681 4794  
                                      u8890 2244                                        u8970 3FB6  
                                      u9770 5438                                        u9930 2CFA  
                                      u9850 2B22                                        u9690 4886  
                                      u8891 2240                                        u8971 3FB2  
                                      u9771 5434                                        u9931 2CF6  
                                      u9851 2B1E                                        u9691 4882  
                                      u8980 3FCA                                        u9780 50F4  
                                      u9940 2D0A                                        u9860 2B50  
                                      u8981 3FC6                                        u8965 3F7E  
                                      u9781 50F0                                        u9941 2D06  
                                      u9861 2B4C                                        u8990 3FF2  
                                      u9790 5122                                        u9950 2D22  
                                      u9870 2B5E                                        u8991 3FEE  
                                      u9791 511E                                        u9951 2D1E  
                                      u9871 2B5A                                        u9880 2C86  
                                      u9960 003A                                        u9881 2C82  
                                      u9961 0036                                        u9890 2CA4  
                                      u9970 008A                                        u9891 2CA0  
                                      u9971 0086                                        u9980 009A  
                                      u9981 0096                                        u9990 00AE  
                                      u9991 00AA        comportamientoBasico@caminoEncontrado 0136  
                          ??_forzarParoAuto 0006                                        abs@a 0018  
                                      _dbuf 0140                                        _atoi 3548  
                                      _ctoa 4F84                                        _main 4A48  
                                      _dtoa 2A8E                                        _prec 0130  
                                      _nout 012C                                        pad@i 001D  
                                      pad@p 001A                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        indf0 000FEF  
                                      fsr2h 000FDA                                        fsr0l 000FE9  
                                      indf1 000FE7                                        indf2 000FDF  
                                      fsr1l 000FE1                                        pad@w 001F  
                                      map@x 0020                                        fsr2l 000FD9  
                                      btemp 005A                               ___fpclassifyf 4148  
                  __end_of_decidirDireccion 1F16                                        prodh 000FF4  
                                      prodl 000FF3                                        start 000E  
                             __CFG_IESO$OFF 000000                             ___fldiv@new_exp 0065  
                              _tolower$1562 0012                               __CFG_MCLRE$ON 000000  
                             ?_leerSensores 0001                                ___param_bank 000000  
                                     ??_PID 0088                             ?_caminoCorrecto 0012  
                                     ??_abs 001A                                       ??_map 0034  
                                     ??_pad 001C                             ??_velocidadBaja 0054  
                             __CFG_PLLDIV$1 000000                              __CFG_CCP2MX$ON 000000  
                                     l10101 1F0E                                       l10033 1D9A  
                                     l10035 1DB8                                       l10131 36FA  
                                     l10141 376A                                       l10133 372C  
                                     l10221 4638                                       l10047 1DDA  
                                     l10215 3862                                       l10143 376C  
                                     l10135 3730                                       l10207 384C  
                                     l10231 4690                                       l10303 5134  
                                     l10321 4C8E                                       l10313 4C56  
                                     l10209 385C                                       l10161 37C8  
                                     l10145 379E                                       l10137 3732  
                                     l10129 36D8                                       l10233 46AE  
                                     l10241 46D2                                       l10225 4664  
                                     l10401 170E                                       l11121 5164  
                                     l10331 4CBE                                       l10323 4CB6  
                                     l10315 4C56                                       l10083 1E16  
                                     l10163 37DC                                       l10147 37A4  
                                     l10139 3764                                       l11131 4486  
                                     l10243 46D6                                       l10235 46B2  
                                     l10227 4682                                       l10251 4922  
                                     l10219 54BE                                       l11123 1862  
                                     l10411 175E                                       l10307 5150  
                                     l10333 4CC0                                       l10325 4CB8  
                                     l10317 4C58                                       l10093 1E9A  
                                     l10077 1DEA                                       l10085 1E50  
                                     l10149 37A6                                       l11133 3D92  
                                     l10245 46DE                                       l10237 46BC  
                                     l10229 4686                                       l10261 4970  
                                     l10253 4940                                       l11125 1A46  
                                     l10501 19D6                                       l10421 17B6  
                                     l10413 1770                                       l10341 47AE  
                                     l10335 4CC2                                       l10327 4CBA  
                                     l10319 4C5A                                       l10095 1ECC  
                                     l10079 1E0E                                       l11135 337C  
                                     l10191 3830                                       l10183 37EC  
                                     l10159 37B6                                       l10239 46C0  
                                     l10271 499C                                       l10263 497A  
                                     l10255 4944                                       l10247 4902  
                                     l11127 3604                                       l10511 1A24  
                                     l10503 19E2                                       l10431 1816  
                                     l10423 17C6                                       l10415 1790  
                                     l10407 171E                                       l11119 4806  
                                     l10343 47BE                                       l10351 47EE  
                                     l10329 4CBC                                       l10097 1ED4  
                                     l10089 1E64                                       l11137 1C08  
                                     l10273 5618                                       l10193 3840  
                                     l10185 37FC                                       l11129 4A20  
                                     l10281 4AEC                                       l10265 497E  
                                     l10257 494E                                       l10521 1A8A  
                                     l10513 1A28                                       l10441 1836  
                                     l10425 17EE                                       l10433 181A  
                                     l10417 1794                                       l10409 1722  
                                     l10337 5628                                       l10345 47CE  
                                     l10353 482C                                       l10099 1F06  
                                     l11139 1E32                                       l10275 561C  
                                     l10187 3810                                       l10291 4B46  
                                     l10283 4B0A                                       l10259 496C  
                                     l10267 4990                                       l10523 1AA4  
                                     l10507 1A00                                       l10451 18A2  
                                     l10443 1840                                       l10435 1824  
                                     l10419 17A6                                       l10427 17FE  
                                     l10371 5216                                       l10363 51CE  
                                     l10355 484A                                       l10347 47DE  
                                     l10339 47AA                                       l10277 5620  
                                     l10189 3820                                       l10293 4B4A  
                                     l10285 4B28                                       l10269 4994  
                                     l10525 1AA8                                       l10509 1A12  
                                     l10461 18EC                                       l10453 18B4  
                                     l10437 1828                                       l10429 180E  
                                     l10517 1A30                                       l10381 1688  
                                     l10373 1640                                       l10365 51D4  
                                     l10701 4A5E                                       l10287 4B30  
                                     l10295 4B50                                       l10279 4ADE  
                                     l10527 1ABE                                       l10471 191A  
                                     l10463 18F0                                       l10455 18BE  
                                     l10447 184A                                       l10439 1832  
                                     l10391 16C6                                       l10383 169E  
                                     l10375 1652                                       l10519 1A74  
                                     l10367 51EA                                       l10711 4A68  
                                     l10703 4A60                                       l10289 4B34  
                                     l10481 194C                                       l10473 192A  
                                     l10457 18D2                                       l10449 1890  
                                     l10385 16AE                                       l10393 16D0  
                                     l10377 1664                                       l10297 5130  
                                     l10369 5200                                       l10721 4A72  
                                     l10713 4A6A                                       l10705 4A62  
                                     l10491 1980                                       l10483 195C  
                                     l10459 18E6                                       l10467 18F6  
                                     l10395 16E0                                       l10387 16B6  
                                     l10379 1676                                       l10731 4A9C  
                                     l10723 4A78                                       l10715 4A6C  
                                     l10707 4A64                                       l10485 1960  
                                     l10493 1988                                       l10469 1908  
                                     l10397 16F6                                       l10389 16C2  
                                     l10733 4AAE                                       l10725 4A7E  
                                     l10717 4A6E                                       l10709 4A66  
                                     l10495 1998                                       l10487 1974  
                                     l10479 193A                                       l10399 1706  
                                     l10735 4ABE                                       l10743 4AC6  
                                     l10727 4A84                                       l10719 4A70  
                                     l10497 19A8                                       l10489 197A  
                                     l10745 4ACA                                       l10737 4AC2  
                                     l10729 4A88                                       l10499 19D0  
                                     l10747 4AD2                                       l10691 4A54  
                                     l10683 4A48                                       l10693 4A56  
                                     l10685 4A4E                                       l10695 4A58  
                                     l10687 4A50                                       l10697 4A5A  
                                     l10689 4A52                                       l10699 4A5C  
                             ___fltol@sign1 007A                             __end_of___aldiv 3F3C  
                           __end_of___aodiv 39EE                                       ?_atoi 000D  
                                     ?_ctoa 0021                             __end_of___fladd 1640  
                                     ?_main 0001                                       ?_dtoa 0021  
                           __end_of___aomod 3CCE                             __end_of___fldiv 2A8E  
                           __end_of___awdiv 4638                             __end_of___flneg 545A  
                                     STR_10 7FE6                                       STR_11 7F2A  
                                     STR_20 7FF0                                       STR_12 7EAE  
                                     STR_21 7FF8                                       STR_13 7E6F  
                                     STR_14 7F08                                       STR_15 7F7B  
                                     STR_24 7FFC                                       STR_16 7FEC  
                                     STR_17 7FF4                                       STR_26 7FFC  
                           __end_of___awmod 47AA                             __end_of___flmul 2340  
                           __end_of___flsub 5262                             __end_of___fltol 4044  
                                     u10000 00F6                                       u10001 00F2  
                                     u10010 0126                                       u10011 0120  
                                     u10100 039C                                       u10020 0128  
                                     u10101 0398                                       u10110 03C2  
                                     u10030 013E                                       u10111 03BE  
                                     u10031 013A                                       u11000 5616  
                                     u10200 04D2                                       u10120 03D6  
                                     u10040 01CA                                       u11001 5612  
                                     u10201 04CE                                       u10121 03D2  
                                     u10041 01C6                                       u11010 4E68  
                                     u10210 04E8                                       u10130 03F8  
                                     u10050 01FA                                       u11011 4E64  
                                     u10211 04E4                                       u10131 03F4  
                                     u10051 01F4                                       u11100 4EEE  
                                     u11020 51BC                                       u10300 0846  
                                     u10220 04F6                                       u10140 0422  
                                     u10060 01FC                                       u11021 51B8  
                                     u10301 0842                                       u10221 04F2  
                                     u10141 041E                                       u11110 4F16  
                                     u11030 2ED6                                       u10310 0858  
                                     u10230 0520                                       u10150 043A  
                                     u10070 0212                                       u11031 2ED2  
                                     u10311 0854                                       u10231 051C  
                                     u10151 0436                                       u10071 020E  
                                     u11120 4F26                                       u11200 1BB2  
                                     u11040 2F02                                       u10400 0A32  
                                     u10320 0866                                       u10240 0668  
                                     u10160 0456                                       u10080 0296  
                                     u11121 4F22                                       u11201 1BAE  
                                     u11041 2EFE                                       u10401 0A2E  
                                     u10321 0862                                       u10241 0664  
                                     u10161 0452                                       u10081 0292  
                                     u11210 1BE8                                       u11130 441A  
                                     u11050 2F4A                                       u10410 0A60  
                                     u10330 0882                                       u10250 06CE  
                                     u10170 048C                                       u10090 032A  
                                     u11107 4EE4                                       u11211 1BE4  
                                     u11131 4416                                       u11051 2F46  
                                     u10411 0A5C                                       u10331 087E  
                                     u10251 06CA                                       u10171 0488  
                                     u10091 0326                                       u11300 1D86  
                                     u11220 1C3E                                       u11140 1AE4  
                                     u11060 2F72                                       u10500 35D2  
                                     u10420 0AE4                                       u10340 0890  
                                     u10260 0716                                       u10180 04B2  
                                     u11117 4F0C                                       u11301 1D82  
                                     u11221 1C3A                                       u11141 1AE0  
                                     u11061 2F6E                                       u10501 35CE  
                                     u10421 0AE0                                       u10341 088C  
                                     u10261 0712                                       u10181 04AE  
                                     u11310 1DB8                                       u11230 1C58  
                                     u11150 1AFC                                       u11070 53A4  
                                     u10510 3688                                       u10430 0AFE  
                                     u10350 08E8                                       u10270 0726  
                                     u10190 04C4                                       u11311 1DB4  
                                     u11231 1C54                                       u11151 1AF8  
                                     u12007 5586                                       u11071 53A0  
                                     u10511 3682                                       u10431 0AFA  
                                     u10351 08E4                                       u10271 0722  
                                     u10191 04C0                                       u10600 5292  
                                     u11080 54B6                                       u11320 1DD6  
                                     u11240 1C7E                                       u11160 1B14  
                                     u11400 379E                                       u10520 368A  
                                     u10440 0B16                                       u10360 09BA  
                                     u10280 078E                                       u10601 528E  
                                     u11081 54B2                                       u11321 1DD2  
                                     u11241 1C7A                                       u11161 1B10  
                                     u12017 5564                                       u11401 379A  
                                     u10441 0B12                                       u10361 09B6  
                                     u10281 078A                                       u11330 1E60  
                                     u11250 1CA4                                       u11170 1B30  
                                     u11410 37B6                                       u10610 2380  
                                     u10530 36A0                                       u10450 0B74  
                                     u10370 09D6                                       u10290 0832  
                                     u11090 4D94                                       u11331 1E5C  
                                     u11251 1CA0                                       u11171 1B2C  
                                     u12027 55F6                                       u11411 37B2  
                                     u10531 369C                                       u10451 0B6E  
                                     u10371 09D2                                       u10291 082E  
                                     u11091 4D90                                       u11340 1E96  
                                     u11260 1CE2                                       u11180 1B52  
                                     u11420 37C8                                       u10620 23AA  
                                     u11500 491E                                       u10540 36B2  
                                     u10460 0B76                                       u10380 09E8  
                                     u10700 0BFC                             ___awdiv@divisor 0008  
                                     u11341 1E92                                       u11261 1CDE  
                                     u11181 1B4E                                       u12037 55A6  
                                     u11421 37C4                                       u10621 23A6  
                                     u11501 491A                                       u10541 36AE  
                                     u10381 09E4                                       u10701 0BF8  
                                     u11350 1ECC                                       u11270 1D00  
                                     u11190 1B80                                       u11430 37FC  
                                     u10630 23DE                                       u11510 4940  
                                     u10470 0B8C                                       u10390 09F8  
                                     u10550 4270                                       u10710 0C44  
                                     u12047 5266                                       u11351 1EC8  
                                     u11271 1CFC                                       u11191 1B7C  
                                     u11431 37F8                                       u10615 2376  
                                     u11511 493C                                       u10471 0B88  
                                     u10391 09F4                                       u10551 426C  
                                     u10711 0C40                                       u11360 1F06  
                                     u11280 1D32                                       u11440 3830  
                                     u10640 23FA                                       u11520 496C  
                                     u10480 3580                                       u10560 42A2  
                                     u10800 0EA0                                       u10720 0C7E  
                                     u11600 169E                                       _T1CON 000FCD  
                                     u11361 1F02                                       u11281 1D2E  
                                     u11441 382C                                       u10641 23F6  
                                     u11521 4968                                       u10481 357C  
                                     u10561 429E                                       u10801 0E9C  
                                     u10721 0C7A                                       u11601 169A  
                                     u11290 1D68                                       u11450 385C  
                                     u11370 36FA                                       u10650 243C  
                                     u11530 49AA                                       u10490 35B6  
                                     u10570 42BE                                       u10810 0F32  
                                     u10730 0D28                                       u11610 16E0  
                                     u11291 1D64                                       u11451 3858  
                                     u11371 36F6                                       u10651 2438  
                                     u10635 23D4                                       u11531 49A6  
                                     u10491 35B2                                       u10571 42BA  
                                     u10811 0F2E                                       u10731 0D22  
                                     u11611 16DC                                       u11380 372C  
                                     u10900 3CFC                                       u10660 2542  
                                     u11540 4B0A                                       u11460 4660  
                                     u10580 42D0                                       u10820 0FE0  
                                     u10740 0D2A                                       u11700 191A  
                                     u11620 16F6                                       u11381 3728  
                                     u10901 3CF8                                       u10661 253E  
                                     u11541 4B06                                       u11461 465C  
                                     u10581 42CC                                       u10821 0FDC  
                                     u11701 1916                                       u11621 16F2  
                                     u11390 3764                                       u10910 3D0C  
                                     u10670 25E0                                       u11550 4B28  
                                     u11470 4682                                       u10590 42F8  
                                     u10830 1048                                       u10750 0D40  
                                     u11710 192A                                       u11630 1790  
                                     u11391 3760                                       u10911 3D08  
                                     u10671 25DC                                       u11551 4B24  
                                     u11471 467E                                       u10591 42F4  
                                     u10831 1042                                       u10751 0D3C  
                                     u11711 1926                                       u11631 178C  
                                     u10920 3D1A                                       u10680 26A0  
                                     u11560 4B66                                       u11480 46AE  
                                     u10840 104A                                       u10760 0D72  
                                     u11720 194C                                       u11640 17A6  
                                     u10921 3D16                                       u11561 4B62  
                                     u11481 46AA                                       u10761 0D6E  
                                     u11721 1948                                       u11641 17A2  
                                     u10930 3D2C                                       u10690 26BC  
                                     u11490 46F8                                       u10850 1060  
                                     u10770 0DB4                                       u11730 195C  
                                     u11650 17B6                                       u11570 1652  
                                     u10931 3D28                                       u10691 26B8  
                                     u11491 46F4                                       u10851 105C  
                                     u10771 0DB0                                       u11731 1958  
                                     u11651 17B2                                       u11571 164E  
                                     u10940 3D3C                                       u10860 10FC  
                                     u10780 0E0A                                       u11740 1998  
                                     u11660 180E                                       u11580 1676  
                                     u11900 4AAE                                       u10941 3D38  
                                     u10685 2696                                       u10861 10F8  
                                     u10781 0E06                                       u11741 1994  
                                     u11661 180A                                       u11581 1672  
                                     u11901 4AAA                                       u10870 4BFC  
                                     u10950 3D4A                                       u10790 0E7C  
                                     u11750 19A8                                       u11670 18A2  
                                     u11590 1688                                       u11910 4ABE  
                                     u10871 4BF8                                       u10951 3D46  
                                     u10791 0E78                                       u11751 19A4  
                                     u11671 189E                                       u11591 1684  
                                     u11911 4ABA                                       u10880 4C1A  
                                     u10960 3D5C                                       u11760 1A12  
                                     u11680 18B4                                       _LATB4 007C54  
                                     u10881 4C16                                       u10961 3D58  
                                     u11761 1A0E                                       u11681 18B0  
                                     _LATB5 007C55                                       u10890 4C36  
                                     u10970 3D6C                                       u11770 1A24  
                                     u11690 1908                                       _LATD2 007C62  
                                     _LATB6 007C56                                       u10891 4C32  
                                     u10971 3D68                                       u11771 1A20  
                                     u11691 1904                                       _LATD3 007C63  
                                     _LATB7 007C57                                       u10980 3D7A  
                                     u10981 3D76                                       u10990 3DC0  
                                     u10991 3DBC                                       u11927 19EE  
                                     u11937 1A96                                       u11947 49BE  
                                     u11957 49DE                                       u11967 43FC  
                                     u11977 4442                                       u11987 5542  
                                     u11997 3CE4                             __end_of___lwdiv 4C56  
                                     i2l320 4FE4                                       i2l323 4FF2  
                                     i2l328 5034                                       i2l284 507E  
                                     i2l286 5086                                main@iniciado 01D4  
                           ___awdiv@counter 000A                                       _RCREG 000FAE  
                              vfpfcnvrt@fmt 00C3                  ??_recorrerCaminoEncontrado 0054  
                                     _TMR1H 000FCF                                       _TMR1L 000FCE  
                                     _SPBRG 000FAF            decidirDireccion@posicionInvCruce 0044  
                             __CFG_USBDIV$1 000000                                       _TXREG 000FAD  
                             __CFG_PWRT$OFF 000000                               __CFG_WRT0$OFF 000000  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                       ___lmul@multiplicand 000A                               __CFG_WRT3$OFF 000000  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                          _combinarArreglos 4E08                              __CFG_EBTR3$OFF 000000  
                 hayCruce@investigandoCruce 0042                               __CFG_WRTB$OFF 000000  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                            __CFG_EBTRB$OFF 000000                          __size_of_UART_init 0070  
                                     _flags 0132                                       _boton 0008  
                                     _fputc 431C                                       _fputs 52EE  
                           __end_of_isdigit 5422                                       _pausa 01D5  
                                     _mover 49AC                                       _mouse 00FC  
                               ?_UART_write 0001                                       atoi@n 001A  
                                     pad@fp 0016                                       atoi@s 000D  
                                     _width 012E                                       ctoa@c 0023  
                                     _putch 5636                                       _toint 7E6B  
                                     ctoa@w 0024                                       dtoa@d 0023  
                                     dtoa@i 0043                                       dtoa@n 003B  
                                     dtoa@p 0035                                       dtoa@s 0039  
                                     dtoa@w 0037                           ??_regresarAlCruce 0054  
                           __end_of_isspace 512E                             __end_of_isupper 53EA  
                                     tablat 000FF5                             __end_of_pwmDuty 3394  
                                     ttemp5 005B                                       ttemp6 005E  
                                     ttemp7 0062                                       status 000FD8  
                                     wtemp8 005B                             __end_of_sprintf 50DC  
                            ?___fpclassifyf 0006                             __end_of_tolower 4ECA  
                           __end_of_strncmp 431C                              __CFG_ICPRT$OFF 000000  
                            ??_leerSensores 0050                             __initialization 4CC6  
                          ??_dameLecturaAdc 0008                                __end_of_atoi 36D8  
                              __end_of_ctoa 4FDE                                __end_of_main 4ADE  
                              __end_of_dtoa 2D70                             ??_configurarAdc 0006  
                       dameDistancia@conteo 0026                      dameDistancia@distancia 0022  
          limpiarMovimientos@numMovimientos 0008                                      ??_atoi 000F  
                                    ??_ctoa 0024                                      ??_main 0055  
                                    ??_dtoa 002B                 combinarArreglos@movimientos 0006  
       comportamientoBasico@caminosRecorrer 01C2                               __activetblptr 000002  
              caminoCorrecto@numMovimientos 0016                                      PID@dif 0096  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                                    ?_boton 0001                                      _CCP1M2 007DEA  
                                    _CCP1M3 007DEB                                      _CCP2M2 007DD2  
                                    _CCP2M3 007DD3                                      ?_fputc 0006  
                                    ?_fputs 000F                                      _ADRESH 000FC4  
                                    _ADRESL 000FC3                                      _CCPR1L 000FBE  
                                    _CCPR2L 000FBB                            ___awdiv@dividend 0006  
                                    ?_mover 0001                                      ?_putch 0001  
                                    _INT0IF 007F91                                      i2l7201 4FE0  
                                    i2l7203 5000                                      i2l7207 5012  
                                    i2l7411 5046                                      i2l7421 5080  
                                    i2l7413 504C                                      i2l7423 5084  
                                    i2l7415 505E                                      i2l7417 5062  
                                    i2l7409 5038                __end_of_regresarPuntoPartida 49AC  
                                    i2l7419 5064                                      _TMR1IF 007CF0  
                                    _TMR1ON 007E68                                      _TMR2ON 007E52  
                                    _TRISB0 007C98                                      _TRISB1 007C99  
                                    _TRISB2 007C9A                                      _TRISC1 007CA1  
                                    _TRISB3 007C9B                                      _TRISC2 007CA2  
                                    _TRISB4 007C9C                                      _TRISB5 007C9D  
                                    _TRISB6 007C9E                                      _TRISD3 007CAB  
                                    _TRISB7 007C9F                                      _TRISC6 007CA6  
                                    _TRISC7 007CA7                            __end_of___xxtofl 3548  
                          __end_of_hayCruce 3866                              __CFG_XINST$OFF 000000  
                  __end_of_seLlegoAlDestino 54BE          comportamientoBasico@numMovimientos 01C7  
                              vfprintf@cfmt 00E5                   dameDistancia@numeroSensor 0021  
                                    ___flge 4044                                      ___fleq 4858  
                                    ___lmul 4D9E                                   ??___aldiv 001A  
                                 ??___aodiv 0016                                   ??___fladd 003C  
                                 ??___aomod 0016                                      ___wmul 54E4  
                         __end_of_UART_init 4CC6                                   ??___fldiv 004C  
                                 ??___awdiv 000A                                   ??___flneg 000A  
        comportamientoBasico@espejearCarroY 0139                                   ??___awmod 000A  
                                 ??___flmul 0023                                   ??___flsub 004C  
                                 ??___fltol 0076                                      _efgtoa 0012  
                                 ??___lwdiv 000A                  moverCarrito@espejearCarroY 0054  
                                    _buffer 0190                         _forzarGiroIzquierda 5574  
                                    _floorf 2FC2                         __size_of_UART_write 0016  
                              ?_UART_printf 0007                                      clear_0 4CEE  
                                    clear_1 4D00                                      clear_2 4D0C  
                          ___awdiv@quotient 000C                             ___awmod@divisor 0008  
                           ___awmod@counter 000A                                      pad@buf 0018  
                                    ctoa@fp 0021                                      _roundf 2340  
                                    dtoa@fp 0021                                      _strcpy 4F28  
               ??_visualizarPasosRealizados 01D0                                      _strlen 545A  
                 recorrerCaminoEncontrado@i 009E                           _oldSensorEnfrente 0118  
                                    fputc@c 0006                                      fputs@c 0013  
                                    fputs@i 0014                                      fputs@s 000F  
                                 ??_isdigit 0008                       _SENSOR_PRIORIDAD_BAJA 01D6  
                     _SENSOR_PRIORIDAD_ALTA 01D8                             ___fpclassifyf@e 000E  
                           ___fpclassifyf@u 0010                             ___fpclassifyf@x 0006  
                              __mediumconst 7E6A                                   ??_isspace 0008  
                   ?_forzarEspejeoIzquierda 0001                                      tblptrh 000FF7  
                                 ??_isupper 0008                                      tblptrl 000FF6  
                                    tblptru 000FF8                      __size_of_forzarEspejeo 0040  
                                 ??_pwmDuty 007F                                      putch@c 0001  
                          __end_of_vfprintf 4D9E                            _posicionDestinoX 013D  
                          _posicionDestinoY 013C                                   ??_sprintf 0054  
                                 ??_tolower 000E             regresarPuntoPartida@movimientos 009A  
                                 ??_strncmp 000C                        ?_forzarGiroIzquierda 0001  
                         _forzarAvanceRecto 5530                      __size_of_forzarReversa 0022  
                                ___flge@ff1 0034                           _velocidadEstandar 550A  
                                ___flge@ff2 0038                             ??___fpclassifyf 000A  
                              ___xxtofl@arg 0017                                ___xxtofl@exp 0016  
                              ___xxtofl@val 000D                                  ___fleq@ff1 0006  
                                ___fleq@ff2 000A                                  __accesstop 0060  
                   __end_of__initialization 4D26                          ?_forzarAvanceRecto 0001  
                           __CFG_PBADEN$OFF 000000                                  ___flneg@f1 0006  
                           __CFG_FOSC$XT_XT 000000                          ?_velocidadEstandar 0001  
   visualizarPasosRealizados@numMovimientos 01CE                  __end_of_finalizarRecorrido 5628  
                             ___rparam_used 000001               __size_of_forzarEspejeoDerecha 001A  
                                ___fltol@f1 0072                         ??_forzarAvanceRecto 0006  
                    __size_of_dameDistancia 0162                              __pcstackCOMRAM 0001  
                       ??_velocidadEstandar 0054                                __pidataBANK1 5632  
                           _sensorIzquierda 0128         combinarArreglos@numMovimientosFinal 000C  
                             __end_of_boton 508A                               __end_of_fputc 43E6  
                             __end_of_fputs 5332                               __end_of_mover 4A48  
                             __end_of_putch 5638                               __end_of_toint 7E6F  
                         _forzarGiroDerecha 5594            __end_of_recorrerCaminoEncontrado 4B68  
                        ?_forzarGiroDerecha 0001              __end_of_forzarEspejeoIzquierda 55CE  
 comportamientoBasico@numMovimientosTotales 01C5          regresarPuntoPartida@numMovimientos 009C  
 comportamientoBasico@movimientosRealizados 0200                        __end_of_leerSensores 3B6A  
                        __size_of_configPwm 0050                   __end_of_forzarAvanceRecto 5552  
                                 PID@difAnt 0134                   __end_of_velocidadEstandar 5530  
                                   ??_boton 0004                       ??_forzarGiroIzquierda 0006  
                                   ??_fputc 000A                                     ??_fputs 0013  
                       ??_forzarGiroDerecha 0006                                     ??_mover 0008  
                                   ??_putch 0006                                  __pbssBANK0 00FC  
                                __pbssBANK1 0100                                  __pbssBANK2 0200  
                             _paredEnfrente 0059               __size_of_comportamientoBasico 0484  
                 _visualizarPasosRealizados 47AA                            ??_caminoCorrecto 001B  
                         ?_decidirDireccion 0040                       PID@velocidadIzquierda 008E  
                                _efgtoa$933 0091                                  _efgtoa$928 008D  
                                _efgtoa$937 0093                                  _efgtoa$929 008F  
                                _efgtoa$938 0095                                  _efgtoa$939 0097  
                  __end_of_combinarArreglos 4E6A                               _forzarEspejeo 5372  
                        ??_decidirDireccion 004C                                     ?___flge 0034  
                                   ?___fleq 0006                                     ?___lmul 0006  
                                   ?___wmul 0006                   __end_of_forzarGiroDerecha 55B4  
                                   ?_efgtoa 007D                               _forzarReversa 5552  
                                   _CCP1CON 000FBD                                     _CCP2CON 000FBA  
                                   ?_floorf 0050               limpiarMovimientos@movimientos 0006  
                            ___lmul@product 000E      decidirDireccion@cambioOrientacionCarro 004A  
                                _antiRebote 4FDE                        _regresarPuntoPartida 4902  
                                   ?_roundf 004C                                     ?_strcpy 0006  
                                   ?_strlen 0006                                     _T2CKPS0 007E50  
                                   _T2CKPS1 007E51                             _regresarAlCruce 4638  
                                   _PID$751 0094                                     _PID$749 0090  
                                   i2l11141 5026                                   ?___xxtofl 000D  
                __end_of_limpiarMovimientos 51CE                               _dameDistancia 3CCE  
                        __size_of_vfpfcnvrt 05A8                                   ?_hayCruce 0040  
                              ??_UART_write 0006                               ?_moverCarrito 0088  
                           __CFG_VREGEN$OFF 000000   comportamientoBasico@contCaminosRecorridos 01CB  
                                   __Hparam 0000                              ?_forzarEspejeo 0001  
                                   __Lparam 0000                           __end_of_configPwm 517E  
                                   ___aldiv 3E30                             __size_of___flge 0104  
                            ?_forzarReversa 0001                             __size_of___fleq 00AA  
                                   ___aodiv 3866                                     ___fladd 1180  
                                   ___aomod 3B6A                                     ___fldiv 26F2  
                                   ___awdiv 4574                                     ___flneg 5422  
                           __size_of___lmul 006A                                     ___awmod 46FA  
                                   ___flmul 1F16                                     ___flsub 521C  
                                   ___fltol 3F3C                             __size_of___wmul 0026  
                                   ___lwdiv 4BE2                                   ?_vfprintf 00DF  
                           __size_of_efgtoa 0BC6         recorrerCaminoEncontrado@movimientos 009A  
                           __CFG_STVREN$OFF 000000                             __size_of_floorf 0216  
                                   __pcinit 4CC6                       ?_regresarPuntoPartida 009A  
                                   __ramtop 0800                          __end_of_UART_write 5618  
                     __end_of_velocidadBaja 54E4                                     __ptext0 4A48  
                                   __ptext1 47AA                                     __ptext2 51CE  
                                   __ptext3 5628                                     __ptext4 512E  
                                   __ptext5 1640                                     __ptext6 54BE  
                                   __ptext7 508A                                     __ptext8 4D34  
                                   __ptext9 0BD8                             __size_of_roundf 03B2  
                              __size_of_PID 0252                             __size_of_strcpy 005C  
                           __size_of_strlen 0036                        __size_of_UART_printf 005E  
                              __size_of_abs 0040                                __size_of_map 007A  
                              __size_of_pad 00C6                                     _isdigit 53EA  
                                ??___xxtofl 0011                            ___awmod@dividend 0006  
                            ?_dameDistancia 001B                            ___aldiv@dividend 0012  
                                   _isspace 50DC                                     _isupper 53B2  
                                   efgtoa@c 0083                                     efgtoa@d 00A1  
                                   efgtoa@e 00B9                                     efgtoa@f 007F  
                                   efgtoa@g 00B5                                     efgtoa@h 00AB  
                                   efgtoa@i 00B3                                     efgtoa@l 00AF  
                                   efgtoa@m 009D                                     efgtoa@n 00BB  
                                   efgtoa@p 00A5                                     efgtoa@t 0099  
                                   efgtoa@u 00BD                                     efgtoa@w 00A8  
                __size_of_forzarAvanceRecto 0022                                  ??_hayCruce 0043  
                                   _pwmDuty 31D8                                     atoi@neg 0013  
                __size_of_velocidadEstandar 0026                                     _sprintf 508A  
                                   _tolower 4E6A                                     _strncmp 4246  
                            __pintcode_body 5036                        end_of_initialization 4D26  
                            ??_moverCarrito 008A                                     floorf@e 0077  
                                   floorf@m 0073                                     floorf@u 0079  
                                   floorf@x 0050            decidirDireccion@direccionElegida 004E  
                                   fputc@fp 0008                               __Lmediumconst 7E6A  
                                   int_func 5036                                     fputs@fp 0011  
         __size_of_recorrerCaminoEncontrado 008A                                   i2u1205_47 506E  
                                 i2u1206_47 5006                      _SENSOR_PRIORIDAD_MEDIA 01D7  
                 ?_recorrerCaminoEncontrado 009A                           ?_seLlegoAlDestino 0001  
                         __end_of_vfpfcnvrt 1180                                  efgtoa@mode 00AA  
                                efgtoa@sign 00A3                                   _RCSTAbits 000FAB  
                          ___aldiv@quotient 001C                                     postdec1 000FE5  
                                   postdec2 000FDD                     __end_of_regresarAlCruce 46FA  
                                   postinc0 000FEE                                     postinc1 000FE6  
                                   postinc2 000FDE                     __size_of_forzarParoAuto 001A  
                                   roundf@e 0064                                     roundf@u 006A  
                                   roundf@x 004C                                     roundf@y 006E  
                __size_of_forzarGiroDerecha 0020                          ??_seLlegoAlDestino 000B  
                                ??_vfprintf 0054                       __end_of_configurarAdc 5632  
                                   strcpy@d 000E                                     strlen@a 0008  
                                   strcpy@s 000C                                     strlen@s 0006  
                               ?_antiRebote 0001                                   _PORTBbits 000F81  
                                 _UART_init 4C56                       __size_of_leerSensores 017C  
                               ___fladd@grs 0043                                 pwmDuty@duty 0084  
    recorrerCaminoEncontrado@numMovimientos 009C                               ___xxtofl@sign 0015  
                                 _TRISDbits 000F95                                 ___fldiv@grs 0067  
                        _oldSensorIzquierda 011C                                 ___fldiv@rem 0060  
      comportamientoBasico@posicionInvCruce 01CC                                  map@out_max 0030  
                                map@out_min 002C                                 ___flmul@grs 0029  
                            _UART_init$1826 0028                                   _TXSTAbits 000FAC  
                           ??_forzarEspejeo 0054                             ??_forzarReversa 0006  
             regresarAlCruce@numMovimientos 009C                                _leerSensores 39EE  
        __size_of_visualizarPasosRealizados 00AE                              __end_of___flge 4148  
                            __end_of___fleq 4902                      ??_regresarPuntoPartida 0054  
                            __end_of___lmul 4E08                                 vfpfcnvrt@ap 00C5  
                               vfpfcnvrt@ct 00DB                                 vfpfcnvrt@fp 00C1  
                               vfpfcnvrt@ll 00CB                              __end_of___wmul 550A  
                     regresarPuntoPartida@i 009E                              __end_of_efgtoa 0BD8  
                        _finalizarRecorrido 5618                              __end_of_floorf 31D8  
                                ?_UART_init 0020                                  floorf@F524 0104  
              __end_of_forzarEspejeoDerecha 55E8                             ??_dameDistancia 001F  
     comportamientoBasico@investigandoCruce 01CD                              __end_of_roundf 26F2  
                   __size_of_dameLecturaAdc 0046                              __end_of_strcpy 4F84  
                            __end_of_strlen 5490                         start_initialization 4CC6  
                       PID@velocidadDerecha 0092                                 __end_of_PID 2FC2  
                       ?_finalizarRecorrido 0001                                 __end_of_abs 5372  
                               __end_of_map 4BE2                                 __end_of_pad 4574  
                          regresarAlCruce@i 009E                         __size_of_antiRebote 0058  
                     __end_of___fpclassifyf 4246                         pwmDuty@cicloTrabajo 007C  
                      ??_finalizarRecorrido 0054                                 vfprintf@fmt 00E1  
                                  ??___flge 003C                                    ??___fleq 000E  
                         ?_combinarArreglos 0006                                    ??___lmul 000E  
                                  ??___wmul 000A                            ?_regresarAlCruce 009A  
                          _oldSensorDerecha 0120                  comportamientoBasico@mapear 0138  
                            _sensorEnfrente 0124                                    ??_efgtoa 0084  
                               __pdataBANK1 01D5                          ??_combinarArreglos 000E  
                                  ??_floorf 006D                            __CFG_LPT1OSC$OFF 000000  
              __end_of_comportamientoBasico 1AC4           __end_of_visualizarPasosRealizados 4858  
                      __end_of_moverCarrito 44AE                                    ??_roundf 0050  
                                  ??_strcpy 000A                                    ??_strlen 0008  
                                 ___fladd@a 0038                                   ___fladd@b 0034  
                 __size_of_decidirDireccion 0452                 __end_of_forzarGiroIzquierda 5594  
                                 ___fldiv@a 0048                                   ___fldiv@b 0044  
                               __pbssBIGRAM 02C8                                _llegoDestino 00FE  
                                 ___flmul@a 001F                                   ___flmul@b 001B  
                               __pbssCOMRAM 0055                                   ___flsub@a 0048  
                                 ___flsub@b 0044            comportamientoBasico@caminoActual 01CA  
                             __pcstackBANK0 0060                               __pcstackBANK1 01CE  
                          ___aodiv@dividend 0006                           __size_of___xxtofl 01B4  
                   hayCruce@caminosRecorrer 0040                           __size_of_hayCruce 018E  
           decidirDireccion@caminosRecorrer 0040                                _paredDerecha 013B  
                        _limpiarMovimientos 517E                           UART_printf@cadena 0007  
                                  PID@error 0098                                   _atoi$1432 0015  
                                 _atoi$1433 0019                                   _atoi$1434 0017  
                 _DISTANCIA_PRIORIDAD_MEDIA 0110                   caminoCorrecto@caminoFinal 0014  
                          ___lwdiv@dividend 0006                                   __pintcode 0008  
                       ?_limpiarMovimientos 0006                               __pmediumconst 7E6A  
                            _forzarParoAuto 55E8                                    ?___aldiv 0012  
                                  ?___aodiv 0006                                    ?___fladd 0034  
                                  ?___aomod 0006                                    ?___fldiv 0044  
                                  ?___awdiv 0006                            ___aodiv@quotient 0018  
                                  ?___flneg 0006                                    ?___awmod 0006  
                                  ?___flmul 001B                                    ?___flsub 0044  
                                  ?___fltol 0072                                    ?___lwdiv 0006  
                                 _configPwm 512E                              _paredIzquierda 013A  
                               ??_UART_init 0024                           __size_of_vfprintf 006A  
                                  ?_isdigit 0006                                    ?_isspace 0006  
                                  ?_isupper 0006  comportamientoBasico@cambioOrientacionCarro 01C9  
         caminoCorrecto@numMovimientosFinal 0018                                    ?_pwmDuty 007C  
                      ??_limpiarMovimientos 000A                            ___lwdiv@quotient 000B  
                            __size_of_boton 5082                                    ?_sprintf 00E7  
                                  ?_tolower 000C                              __size_of_fputc 00CA  
                            __size_of_fputs 0044                                    _PID$1827 008A  
                                  ?_strncmp 0006                              __size_of_mover 009C  
     decidirDireccion@contCaminosRecorridos 0046                              __size_of_putch 0002  
                           ___aldiv@divisor 0016                           combinarArreglos@i 0010  
                           ___aldiv@counter 001A                              ___wmul@product 000A  
         decidirDireccion@investigandoCruce 0042                seLlegoAlDestino@llegoDestino 000B  
                      _forzarEspejeoDerecha 55CE                      __end_of_forzarParoAuto 5602  
                                  i2u760_40 5000                                    i2u760_41 4FFC  
                                  i2u782_40 5046                                    i2u782_41 5042  
                                  i2u759_40 4FF2                                    i2u783_40 505E  
                                  i2u759_41 4FEE                                    i2u783_41 505A  
                          __CFG_WDTPS$32768 000000                    ??_forzarEspejeoIzquierda 0054  
                             ??_UART_printf 0009                                ??_antiRebote 0001  
                                 _vfpfcnvrt 0BD8                                  ?_configPwm 0001  
                                 map@in_max 0028                                   map@in_min 0024  
                   __size_of_caminoCorrecto 0046                                  _ADCON0bits 000FC2  
                         ___wmul@multiplier 0006                            configPwm@channel 0008  
                            _dameLecturaAdc 5262                              UART_write@dato 0006  
                 __size_of_seLlegoAlDestino 002E                                _isspace$1463 000C  
                                vfpfcnvrt@c 00DE                                  vfpfcnvrt@f 00D7  
                         ___lmul@multiplier 0006                                 _INTCON2bits 000FF1  
                                 copy_data0 4CDA                        _comportamientoBasico 1640  
                     ?_forzarEspejeoDerecha 0001                      __size_of_velocidadBaja 0026  
                        __end_of_antiRebote 5036                                  roundf@F525 0100  
                                  __Hrparam 0000                             ?_forzarParoAuto 0001  
                             UART_init@BAUD 0020                               _sensorDerecha 0055  
                                vfprintf@ap 00E3                                    __Lrparam 0000  
                                vfprintf@fp 00DF                       __size_of_moverCarrito 00C8  
                            _posicionCarroX 013F                              _posicionCarroY 013E  
                          __size_of___aldiv 010C                            __size_of___aodiv 0188  
                          __size_of___fladd 04C0                            __size_of___aomod 0164  
                          __size_of___fldiv 039C                            __size_of___awdiv 00C4  
                          __size_of___flneg 0038                            __size_of___awmod 00B0  
                          __size_of___flmul 042A                            __size_of___flsub 0046  
                          __size_of___fltol 0108                                  ?_vfpfcnvrt 00C1  
                          __size_of___lwdiv 0074                      __end_of_dameLecturaAdc 52A8  
                           ___aodiv@divisor 000E                             ___aodiv@counter 0016  
                        ___fpclassifyf@F463 0108                         hayCruce@contCaminos 0043  
               combinarArreglos@caminoFinal 0008                            _decidirDireccion 1AC4  
                                sprintf@fmt 00E9                                    ___xxtofl 3394  
                       __end_of_UART_printf 4F28                            __size_of_isdigit 0038  
                                  _dtoa$905 0033                             ___lwdiv@divisor 0008  
                                  _hayCruce 36D8                            __size_of_isspace 0052  
                           ___lwdiv@counter 000A                                    __ptext10 4246  
                                  __ptext11 0012                                    __ptext20 2A8E  
                                  __ptext12 4E6A                                    __ptext21 5332  
                                  __ptext13 53B2                                    __ptext30 3548  
                                  __ptext22 3B6A                                    __ptext14 4F28  
                                  __ptext31 50DC                                    __ptext23 3866  
                                  __ptext15 2FC2                                    __ptext40 521C  
                                  __ptext32 53EA                                    __ptext24 4F84  
                                  __ptext16 4148                                    __ptext41 5422  
                                  __ptext33 54E4                                    __ptext25 44AE  
                                  __ptext17 4858                                    __ptext50 5372  
                                  __ptext42 43E6                                    __ptext34 4902  
                                  __ptext26 545A                                    __ptext18 46FA  
                                  __ptext51 55B4                                    __ptext43 5530  
                                  __ptext35 4638                                    __ptext27 52EE  
                                  __ptext19 4574                                    __ptext60 1F16  
                                  __ptext52 5574                                    __ptext44 39EE  
                                  __ptext36 4ADE                                    __ptext28 431C  
                                  __ptext61 26F2                                    __ptext53 55CE  
                                  __ptext45 3CCE                                    __ptext37 49AC  
                                  __ptext29 5636                                    __ptext70 517E  
                                  __ptext62 5552                                    __ptext54 550A  
                                  __ptext46 4BE2                                    __ptext38 2D70  
                                  __ptext71 4E08                                    __ptext63 55E8  
                                  __ptext55 31D8                                    __ptext47 1180  
                                  __ptext39 2340                                    __ptext72 4ECA  
                                  __ptext64 5594                                    __ptext56 4B68  
                                  __ptext48 36D8                                    __ptext73 5602  
                                  __ptext65 1AC4                                    __ptext57 4D9E  
                                  __ptext49 5618                                    __ptext74 4C56  
                                  __ptext66 5490                                    __ptext58 3394  
                                  __ptext75 3E30                                    __ptext67 5262  
                                  __ptext59 3F3C                                    __ptext68 4044  
                                  __ptext77 4FDE                                    __ptext69 52A8  
                          __size_of_isupper 0038                            __size_of_pwmDuty 01BC  
   __end_of_inicializarComportamientoBasico 521C    __size_of_inicializarComportamientoBasico 004E  
         ??_inicializarComportamientoBasico 0054            ?_inicializarComportamientoBasico 0001  
           _inicializarComportamientoBasico 51CE                            __size_of_sprintf 0052  
                          __size_of_tolower 0060                               antiRebote@pin 0003  
                  _recorrerCaminoEncontrado 4ADE                                  strcpy@dest 0006  
                          __size_of_strncmp 00D6              combinarArreglos@numMovimientos 000A  
                     ?_comportamientoBasico 0001          comportamientoBasico@cruceDetectado 0137  
                              _moverCarrito 43E6                      __size_of_configurarAdc 000A  
                             __size_of_atoi 0190                               __size_of_ctoa 005A  
                             __size_of_main 0096                               __size_of_dtoa 02E2  
                     __end_of_forzarEspejeo 53B2                                    efgtoa@fp 007D  
                                  efgtoa@ne 009F                                    efgtoa@pp 009B  
                                  efgtoa@ou 0089        comportamientoBasico@direccionElegida 00FB  
                     __end_of_forzarReversa 5574                                    int$flags 005A  
                   dameLecturaAdc@canalLeer 000A                                    _vfprintf 4D34  
           __size_of_forzarEspejeoIzquierda 001A                                 ??_configPwm 0006  
                           ?_dameLecturaAdc 0006               __size_of_regresarPuntoPartida 00AA  
                          ___aomod@dividend 0006                       __CFG_CPUDIV$OSC1_PLL2 000000  
                             _velocidadBaja 54BE                decidirDireccion@caminoActual 0048  
                                _INTCONbits 000FF2                       __end_of_dameDistancia 3E30  
                 __size_of_combinarArreglos 0062                         limpiarMovimientos@i 000C  
                                  isdigit@c 0006                                    intlevel2 0000  
                                 sprintf@ap 00F3                  caminoCorrecto@caminoActual 001A  
                    ??_forzarEspejeoDerecha 0054                                    isspace@c 0006  
                                 strcpy@src 0008                                    isupper@c 0006  
                                 strncmp@_l 0006                                   strncmp@_r 0008  
               __size_of_finalizarRecorrido 0010                                 efgtoa@nmode 00A7  
                           ___aomod@divisor 000E                                 ??_vfpfcnvrt 00C7  
                           ___aomod@counter 0016                               _vfpfcnvrt$953 00D3  
                             _vfpfcnvrt$959 00D5                                 _UART_printf 4ECA  
                             _configurarAdc 5628                              _caminoCorrecto 52A8  
                            ?_velocidadBaja 0001                  ?_visualizarPasosRealizados 01CE  
                            pwmDuty@channel 007E                                    sprintf@f 00F5  
                                  tolower@c 000C                                    sprintf@s 00E7  
                    __size_of___fpclassifyf 00FE                    __size_of_regresarAlCruce 00C2  
                          _seLlegoAlDestino 5490                                    strncmp@l 000D  
                                  strncmp@n 000A                                    strncmp@r 000F  
        comportamientoBasico@carroEspejeado 00FF                                ___aldiv@sign 001B  
                moverCarrito@carroEspejeado 0088                               ___fladd@signs 0040  
                    ??_comportamientoBasico 01CE                                  _UART_write 5602  
                    _forzarEspejeoIzquierda 55B4                __size_of_forzarGiroIzquierda 0020  
                              ___aodiv@sign 0017                                ___fladd@aexp 0041  
                              ___fladd@bexp 0042                  regresarAlCruce@movimientos 009A  
                              ___aomod@sign 0017                   caminoCorrecto@movimientos 0012  
                               _roundf$1828 0066                                 _roundf$1829 0060  
