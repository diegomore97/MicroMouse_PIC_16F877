

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Sep 09 23:05:25 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98  0000                     
    99                           ; Version 2.10
   100                           ; Generated 31/07/2019 GMT
   101                           ; 
   102                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F4550 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     
   134                           	psect	idataBANK1
   135  0054D4                     __pidataBANK1:
   136                           	opt callstack 0
   137                           
   138                           ;initializer for _pausa
   139  0054D4  01                 	db	1
   140                           
   141                           ;initializer for _SENSOR_PRIORIDAD_BAJA
   142  0054D5  03                 	db	3
   143                           
   144                           ;initializer for _SENSOR_PRIORIDAD_MEDIA
   145  0054D6  02                 	db	2
   146                           
   147                           ;initializer for _SENSOR_PRIORIDAD_ALTA
   148  0054D7  01                 	db	1
   149                           
   150                           	psect	mediumconst
   151  007EA2                     __pmediumconst:
   152                           	opt callstack 0
   153  007EA2  00                 	db	0
   154  007EA3  0000               	dw	0
   155  007EA5  4B00               	dw	19200
   156  007EA7                     __end_of_toint:
   157                           	opt callstack 0
   158  0000                     _T1CON	set	4045
   159  0000                     _TRISDbits	set	3989
   160  0000                     _INTCON2bits	set	4081
   161  0000                     _INTCONbits	set	4082
   162  0000                     _ADRESL	set	4035
   163  0000                     _ADRESH	set	4036
   164  0000                     _ADCON0bits	set	4034
   165  0000                     _ADCON2	set	4032
   166  0000                     _ADCON1	set	4033
   167  0000                     _TXREG	set	4013
   168  0000                     _RCREG	set	4014
   169  0000                     _RCSTAbits	set	4011
   170  0000                     _TXSTAbits	set	4012
   171  0000                     _SPBRG	set	4015
   172  0000                     _PORTBbits	set	3969
   173  0000                     _TMR1L	set	4046
   174  0000                     _TMR1H	set	4047
   175  0000                     _PR2	set	4043
   176  0000                     _CCP2CON	set	4026
   177  0000                     _CCPR2L	set	4027
   178  0000                     _CCP1CON	set	4029
   179  0000                     _CCPR1L	set	4030
   180  0000                     _TRISB0	set	31896
   181  0000                     _TRISB7	set	31903
   182  0000                     _TRISB6	set	31902
   183  0000                     _TRISB5	set	31901
   184  0000                     _TRISB4	set	31900
   185  0000                     _TRISB3	set	31899
   186  0000                     _TRISB2	set	31898
   187  0000                     _TRISB1	set	31897
   188  0000                     _TRISD3	set	31915
   189  0000                     _LATB7	set	31831
   190  0000                     _LATB6	set	31830
   191  0000                     _LATB5	set	31829
   192  0000                     _LATB4	set	31828
   193  0000                     _LATD2	set	31842
   194  0000                     _INT0IF	set	32657
   195  0000                     _RCIF	set	31989
   196  0000                     _TRISC7	set	31911
   197  0000                     _TRISC6	set	31910
   198  0000                     _TMR1IF	set	31984
   199  0000                     _TMR1ON	set	32360
   200  0000                     _LATD3	set	31843
   201  0000                     _TMR2ON	set	32338
   202  0000                     _CCP2M2	set	32210
   203  0000                     _CCP2M3	set	32211
   204  0000                     _TRISC1	set	31905
   205  0000                     _CCP1M2	set	32234
   206  0000                     _CCP1M3	set	32235
   207  0000                     _TRISC2	set	31906
   208  0000                     _T2CKPS1	set	32337
   209  0000                     _T2CKPS0	set	32336
   210  007EA7                     STR_13:
   211  007EA7  0A                 	db	10
   212  007EA8  0A                 	db	10
   213  007EA9  4F                 	db	79	;'O'
   214  007EAA  56                 	db	86	;'V'
   215  007EAB  45                 	db	69	;'E'
   216  007EAC  52                 	db	82	;'R'
   217  007EAD  46                 	db	70	;'F'
   218  007EAE  4C                 	db	76	;'L'
   219  007EAF  4F                 	db	79	;'O'
   220  007EB0  57                 	db	87	;'W'
   221  007EB1  20                 	db	32
   222  007EB2  65                 	db	101	;'e'
   223  007EB3  6E                 	db	110	;'n'
   224  007EB4  20                 	db	32
   225  007EB5  65                 	db	101	;'e'
   226  007EB6  6C                 	db	108	;'l'
   227  007EB7  20                 	db	32
   228  007EB8  6D                 	db	109	;'m'
   229  007EB9  61                 	db	97	;'a'
   230  007EBA  70                 	db	112	;'p'
   231  007EBB  65                 	db	101	;'e'
   232  007EBC  6F                 	db	111	;'o'
   233  007EBD  20                 	db	32
   234  007EBE  64                 	db	100	;'d'
   235  007EBF  65                 	db	101	;'e'
   236  007EC0  20                 	db	32
   237  007EC1  70                 	db	112	;'p'
   238  007EC2  61                 	db	97	;'a'
   239  007EC3  73                 	db	115	;'s'
   240  007EC4  6F                 	db	111	;'o'
   241  007EC5  73                 	db	115	;'s'
   242  007EC6  20                 	db	32
   243  007EC7  52                 	db	82	;'R'
   244  007EC8  65                 	db	101	;'e'
   245  007EC9  61                 	db	97	;'a'
   246  007ECA  6C                 	db	108	;'l'
   247  007ECB  69                 	db	105	;'i'
   248  007ECC  7A                 	db	122	;'z'
   249  007ECD  61                 	db	97	;'a'
   250  007ECE  64                 	db	100	;'d'
   251  007ECF  6F                 	db	111	;'o'
   252  007ED0  73                 	db	115	;'s'
   253  007ED1  20                 	db	32
   254  007ED2  70                 	db	112	;'p'
   255  007ED3  61                 	db	97	;'a'
   256  007ED4  72                 	db	114	;'r'
   257  007ED5  61                 	db	97	;'a'
   258  007ED6  20                 	db	32
   259  007ED7  63                 	db	99	;'c'
   260  007ED8  61                 	db	97	;'a'
   261  007ED9  6D                 	db	109	;'m'
   262  007EDA  69                 	db	105	;'i'
   263  007EDB  6E                 	db	110	;'n'
   264  007EDC  6F                 	db	111	;'o'
   265  007EDD  20                 	db	32
   266  007EDE  54                 	db	84	;'T'
   267  007EDF  6F                 	db	111	;'o'
   268  007EE0  74                 	db	116	;'t'
   269  007EE1  61                 	db	97	;'a'
   270  007EE2  6C                 	db	108	;'l'
   271  007EE3  0A                 	db	10
   272  007EE4  0A                 	db	10
   273  007EE5  00                 	db	0
   274  007EE6                     STR_12:
   275  007EE6  0A                 	db	10
   276  007EE7  0A                 	db	10
   277  007EE8  4F                 	db	79	;'O'
   278  007EE9  56                 	db	86	;'V'
   279  007EEA  45                 	db	69	;'E'
   280  007EEB  52                 	db	82	;'R'
   281  007EEC  46                 	db	70	;'F'
   282  007EED  4C                 	db	76	;'L'
   283  007EEE  4F                 	db	79	;'O'
   284  007EEF  57                 	db	87	;'W'
   285  007EF0  20                 	db	32
   286  007EF1  65                 	db	101	;'e'
   287  007EF2  6E                 	db	110	;'n'
   288  007EF3  20                 	db	32
   289  007EF4  65                 	db	101	;'e'
   290  007EF5  6C                 	db	108	;'l'
   291  007EF6  20                 	db	32
   292  007EF7  6D                 	db	109	;'m'
   293  007EF8  61                 	db	97	;'a'
   294  007EF9  70                 	db	112	;'p'
   295  007EFA  65                 	db	101	;'e'
   296  007EFB  6F                 	db	111	;'o'
   297  007EFC  20                 	db	32
   298  007EFD  64                 	db	100	;'d'
   299  007EFE  65                 	db	101	;'e'
   300  007EFF  20                 	db	32
   301  007F00  70                 	db	112	;'p'
   302  007F01  61                 	db	97	;'a'
   303  007F02  73                 	db	115	;'s'
   304  007F03  6F                 	db	111	;'o'
   305  007F04  73                 	db	115	;'s'
   306  007F05  20                 	db	32
   307  007F06  52                 	db	82	;'R'
   308  007F07  65                 	db	101	;'e'
   309  007F08  61                 	db	97	;'a'
   310  007F09  6C                 	db	108	;'l'
   311  007F0A  69                 	db	105	;'i'
   312  007F0B  7A                 	db	122	;'z'
   313  007F0C  61                 	db	97	;'a'
   314  007F0D  64                 	db	100	;'d'
   315  007F0E  6F                 	db	111	;'o'
   316  007F0F  73                 	db	115	;'s'
   317  007F10  20                 	db	32
   318  007F11  70                 	db	112	;'p'
   319  007F12  61                 	db	97	;'a'
   320  007F13  72                 	db	114	;'r'
   321  007F14  61                 	db	97	;'a'
   322  007F15  20                 	db	32
   323  007F16  63                 	db	99	;'c'
   324  007F17  72                 	db	114	;'r'
   325  007F18  75                 	db	117	;'u'
   326  007F19  63                 	db	99	;'c'
   327  007F1A  65                 	db	101	;'e'
   328  007F1B  0A                 	db	10
   329  007F1C  0A                 	db	10
   330  007F1D  00                 	db	0
   331  007F1E  0D                 	db	13
   332  007F1F  4C                 	db	76	;'L'
   333  007F20  65                 	db	101	;'e'
   334  007F21  63                 	db	99	;'c'
   335  007F22  74                 	db	116	;'t'
   336  007F23  75                 	db	117	;'u'
   337  007F24  72                 	db	114	;'r'
   338  007F25  61                 	db	97	;'a'
   339  007F26  20                 	db	32
   340  007F27  64                 	db	100	;'d'
   341  007F28  65                 	db	101	;'e'
   342  007F29  20                 	db	32
   343  007F2A  73                 	db	115	;'s'
   344  007F2B  65                 	db	101	;'e'
   345  007F2C  6E                 	db	110	;'n'
   346  007F2D  73                 	db	115	;'s'
   347  007F2E  6F                 	db	111	;'o'
   348  007F2F  72                 	db	114	;'r'
   349  007F30  20                 	db	32
   350  007F31  4F                 	db	79	;'O'
   351  007F32  70                 	db	112	;'p'
   352  007F33  74                 	db	116	;'t'
   353  007F34  69                 	db	105	;'i'
   354  007F35  63                 	db	99	;'c'
   355  007F36  6F                 	db	111	;'o'
   356  007F37  20                 	db	32
   357  007F38  3D                 	db	61	;'='
   358  007F39  20                 	db	32
   359  007F3A  25                 	db	37
   360  007F3B  64                 	db	100	;'d'
   361  007F3C  0D                 	db	13
   362  007F3D  0A                 	db	10
   363  007F3E  0A                 	db	10
   364  007F3F  00                 	db	0
   365  007F40                     STR_11:
   366  007F40  0D                 	db	13
   367  007F41  4D                 	db	77	;'M'
   368  007F42  6F                 	db	111	;'o'
   369  007F43  76                 	db	118	;'v'
   370  007F44  69                 	db	105	;'i'
   371  007F45  6D                 	db	109	;'m'
   372  007F46  69                 	db	105	;'i'
   373  007F47  65                 	db	101	;'e'
   374  007F48  6E                 	db	110	;'n'
   375  007F49  74                 	db	116	;'t'
   376  007F4A  6F                 	db	111	;'o'
   377  007F4B  73                 	db	115	;'s'
   378  007F4C  20                 	db	32
   379  007F4D  52                 	db	82	;'R'
   380  007F4E  65                 	db	101	;'e'
   381  007F4F  61                 	db	97	;'a'
   382  007F50  6C                 	db	108	;'l'
   383  007F51  69                 	db	105	;'i'
   384  007F52  7A                 	db	122	;'z'
   385  007F53  61                 	db	97	;'a'
   386  007F54  64                 	db	100	;'d'
   387  007F55  6F                 	db	111	;'o'
   388  007F56  73                 	db	115	;'s'
   389  007F57  20                 	db	32
   390  007F58  3D                 	db	61	;'='
   391  007F59  20                 	db	32
   392  007F5A  25                 	db	37
   393  007F5B  64                 	db	100	;'d'
   394  007F5C  0D                 	db	13
   395  007F5D  0A                 	db	10
   396  007F5E  0A                 	db	10
   397  007F5F  00                 	db	0
   398  007F60  0D                 	db	13
   399  007F61  44                 	db	68	;'D'
   400  007F62  65                 	db	101	;'e'
   401  007F63  73                 	db	115	;'s'
   402  007F64  74                 	db	116	;'t'
   403  007F65  69                 	db	105	;'i'
   404  007F66  6E                 	db	110	;'n'
   405  007F67  6F                 	db	111	;'o'
   406  007F68  20                 	db	32
   407  007F69  6E                 	db	110	;'n'
   408  007F6A  6F                 	db	111	;'o'
   409  007F6B  20                 	db	32
   410  007F6C  64                 	db	100	;'d'
   411  007F6D  65                 	db	101	;'e'
   412  007F6E  74                 	db	116	;'t'
   413  007F6F  65                 	db	101	;'e'
   414  007F70  63                 	db	99	;'c'
   415  007F71  74                 	db	116	;'t'
   416  007F72  61                 	db	97	;'a'
   417  007F73  64                 	db	100	;'d'
   418  007F74  6F                 	db	111	;'o'
   419  007F75  20                 	db	32
   420  007F76  0D                 	db	13
   421  007F77  0A                 	db	10
   422  007F78  00                 	db	0
   423  007F79  0D                 	db	13
   424  007F7A  53                 	db	83	;'S'
   425  007F7B  65                 	db	101	;'e'
   426  007F7C  20                 	db	32
   427  007F7D  6C                 	db	108	;'l'
   428  007F7E  6C                 	db	108	;'l'
   429  007F7F  65                 	db	101	;'e'
   430  007F80  67                 	db	103	;'g'
   431  007F81  6F                 	db	111	;'o'
   432  007F82  20                 	db	32
   433  007F83  61                 	db	97	;'a'
   434  007F84  6C                 	db	108	;'l'
   435  007F85  20                 	db	32
   436  007F86  64                 	db	100	;'d'
   437  007F87  65                 	db	101	;'e'
   438  007F88  73                 	db	115	;'s'
   439  007F89  74                 	db	116	;'t'
   440  007F8A  69                 	db	105	;'i'
   441  007F8B  6E                 	db	110	;'n'
   442  007F8C  6F                 	db	111	;'o'
   443  007F8D  20                 	db	32
   444  007F8E  0D                 	db	13
   445  007F8F  0A                 	db	10
   446  007F90  00                 	db	0
   447  007F91  0D                 	db	13
   448  007F92  49                 	db	73	;'I'
   449  007F93  7A                 	db	122	;'z'
   450  007F94  71                 	db	113	;'q'
   451  007F95  75                 	db	117	;'u'
   452  007F96  69                 	db	105	;'i'
   453  007F97  65                 	db	101	;'e'
   454  007F98  72                 	db	114	;'r'
   455  007F99  64                 	db	100	;'d'
   456  007F9A  61                 	db	97	;'a'
   457  007F9B  3A                 	db	58	;':'
   458  007F9C  20                 	db	32
   459  007F9D  25                 	db	37
   460  007F9E  2E                 	db	46
   461  007F9F  32                 	db	50	;'2'
   462  007FA0  66                 	db	102	;'f'
   463  007FA1  0D                 	db	13
   464  007FA2  0A                 	db	10
   465  007FA3  00                 	db	0
   466  007FA4  0D                 	db	13
   467  007FA5  45                 	db	69	;'E'
   468  007FA6  6E                 	db	110	;'n'
   469  007FA7  66                 	db	102	;'f'
   470  007FA8  72                 	db	114	;'r'
   471  007FA9  65                 	db	101	;'e'
   472  007FAA  6E                 	db	110	;'n'
   473  007FAB  74                 	db	116	;'t'
   474  007FAC  65                 	db	101	;'e'
   475  007FAD  3A                 	db	58	;':'
   476  007FAE  20                 	db	32
   477  007FAF  25                 	db	37
   478  007FB0  2E                 	db	46
   479  007FB1  32                 	db	50	;'2'
   480  007FB2  66                 	db	102	;'f'
   481  007FB3  0D                 	db	13
   482  007FB4  0A                 	db	10
   483  007FB5  00                 	db	0
   484  007FB6  0D                 	db	13
   485  007FB7  44                 	db	68	;'D'
   486  007FB8  65                 	db	101	;'e'
   487  007FB9  72                 	db	114	;'r'
   488  007FBA  65                 	db	101	;'e'
   489  007FBB  63                 	db	99	;'c'
   490  007FBC  68                 	db	104	;'h'
   491  007FBD  61                 	db	97	;'a'
   492  007FBE  3A                 	db	58	;':'
   493  007FBF  20                 	db	32
   494  007FC0  25                 	db	37
   495  007FC1  2E                 	db	46
   496  007FC2  32                 	db	50	;'2'
   497  007FC3  66                 	db	102	;'f'
   498  007FC4  0D                 	db	13
   499  007FC5  0A                 	db	10
   500  007FC6  00                 	db	0
   501  007FC7                     STR_8:
   502  007FC7  49                 	db	73	;'I'
   503  007FC8  7A                 	db	122	;'z'
   504  007FC9  71                 	db	113	;'q'
   505  007FCA  75                 	db	117	;'u'
   506  007FCB  69                 	db	105	;'i'
   507  007FCC  65                 	db	101	;'e'
   508  007FCD  72                 	db	114	;'r'
   509  007FCE  64                 	db	100	;'d'
   510  007FCF  61                 	db	97	;'a'
   511  007FD0  0A                 	db	10
   512  007FD1  00                 	db	0
   513  007FD2                     STR_7:
   514  007FD2  45                 	db	69	;'E'
   515  007FD3  6E                 	db	110	;'n'
   516  007FD4  66                 	db	102	;'f'
   517  007FD5  72                 	db	114	;'r'
   518  007FD6  65                 	db	101	;'e'
   519  007FD7  6E                 	db	110	;'n'
   520  007FD8  74                 	db	116	;'t'
   521  007FD9  65                 	db	101	;'e'
   522  007FDA  0A                 	db	10
   523  007FDB  00                 	db	0
   524  007FDC                     STR_9:
   525  007FDC  44                 	db	68	;'D'
   526  007FDD  65                 	db	101	;'e'
   527  007FDE  72                 	db	114	;'r'
   528  007FDF  65                 	db	101	;'e'
   529  007FE0  63                 	db	99	;'c'
   530  007FE1  68                 	db	104	;'h'
   531  007FE2  61                 	db	97	;'a'
   532  007FE3  0A                 	db	10
   533  007FE4  00                 	db	0
   534  007FE5                     STR_10:
   535  007FE5  41                 	db	65	;'A'
   536  007FE6  6C                 	db	108	;'l'
   537  007FE7  74                 	db	116	;'t'
   538  007FE8  6F                 	db	111	;'o'
   539  007FE9  0A                 	db	10
   540  007FEA  00                 	db	0
   541  007FEB                     STR_14:
   542  007FEB  49                 	db	73	;'I'
   543  007FEC  4E                 	db	78	;'N'
   544  007FED  46                 	db	70	;'F'
   545  007FEE  00                 	db	0
   546  007FEF                     STR_18:
   547  007FEF  4E                 	db	78	;'N'
   548  007FF0  41                 	db	65	;'A'
   549  007FF1  4E                 	db	78	;'N'
   550  007FF2  00                 	db	0
   551  007FF3                     STR_15:
   552  007FF3  69                 	db	105	;'i'
   553  007FF4  6E                 	db	110	;'n'
   554  007FF5  66                 	db	102	;'f'
   555  007FF6  00                 	db	0
   556  007FF7                     STR_19:
   557  007FF7  6E                 	db	110	;'n'
   558  007FF8  61                 	db	97	;'a'
   559  007FF9  6E                 	db	110	;'n'
   560  007FFA  00                 	db	0
   561  007FFB                     STR_22:
   562  007FFB  6C                 	db	108	;'l'
   563  007FFC  66                 	db	102	;'f'
   564  007FFD  00                 	db	0
   565  0000                     
   566                           ; #config settings
   567  007FFE  00                 	db	0	; dummy byte at the end
   568  0000                     
   569                           	psect	cinit
   570  004B5E                     __pcinit:
   571                           	opt callstack 0
   572  004B5E                     start_initialization:
   573                           	opt callstack 0
   574  004B5E                     __initialization:
   575                           	opt callstack 0
   576                           
   577                           ; Initialize objects allocated to BANK1 (4 bytes)
   578                           ; load TBLPTR registers with __pidataBANK1
   579  004B5E  0ED4               	movlw	low __pidataBANK1
   580  004B60  6EF6               	movwf	tblptrl,c
   581  004B62  0E54               	movlw	high __pidataBANK1
   582  004B64  6EF7               	movwf	tblptrh,c
   583  004B66  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   584  004B68  6EF8               	movwf	tblptru,c
   585  004B6A  EE01  F0D0         	lfsr	0,__pdataBANK1
   586  004B6E  EE10 F004          	lfsr	1,4
   587  004B72                     copy_data0:
   588  004B72  0009               	tblrd		*+
   589  004B74  CFF5 FFEE          	movff	tablat,postinc0
   590  004B78  50E5               	movf	postdec1,w,c
   591  004B7A  50E1               	movf	fsr1l,w,c
   592  004B7C  E1FA               	bnz	copy_data0
   593                           
   594                           ; Clear objects allocated to BIGRAM (1000 bytes)
   595  004B7E  EE02  F0C8         	lfsr	0,__pbssBIGRAM
   596  004B82  EE13 F0E8          	lfsr	1,1000
   597  004B86                     clear_0:
   598  004B86  6AEE               	clrf	postinc0,c
   599  004B88  50E5               	movf	postdec1,w,c
   600  004B8A  50E1               	movf	fsr1l,w,c
   601  004B8C  E1FC               	bnz	clear_0
   602  004B8E  50E2               	movf	fsr1h,w,c
   603  004B90  E1FA               	bnz	clear_0
   604                           
   605                           ; Clear objects allocated to BANK2 (200 bytes)
   606  004B92  EE02  F000         	lfsr	0,__pbssBANK2
   607  004B96  0EC8               	movlw	200
   608  004B98                     clear_1:
   609  004B98  6AEE               	clrf	postinc0,c
   610  004B9A  06E8               	decf	wreg,f,c
   611  004B9C  E1FD               	bnz	clear_1
   612                           
   613                           ; Clear objects allocated to BANK1 (201 bytes)
   614  004B9E  EE01  F000         	lfsr	0,__pbssBANK1
   615  004BA2  0EC9               	movlw	201
   616  004BA4                     clear_2:
   617  004BA4  6AEE               	clrf	postinc0,c
   618  004BA6  06E8               	decf	wreg,f,c
   619  004BA8  E1FD               	bnz	clear_2
   620                           
   621                           ; Clear objects allocated to BANK0 (6 bytes)
   622  004BAA  0100               	movlb	0
   623  004BAC  6BFE               	clrf	(__pbssBANK0+5)& (0+255),b
   624  004BAE  6BFD               	clrf	(__pbssBANK0+4)& (0+255),b
   625  004BB0  6BFC               	clrf	(__pbssBANK0+3)& (0+255),b
   626  004BB2  6BFB               	clrf	(__pbssBANK0+2)& (0+255),b
   627  004BB4  6BFA               	clrf	(__pbssBANK0+1)& (0+255),b
   628  004BB6  6BF9               	clrf	__pbssBANK0& (0+255),b
   629                           
   630                           ; Clear objects allocated to COMRAM (5 bytes)
   631  004BB8  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   632  004BBA  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   633  004BBC  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   634  004BBE  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   635  004BC0  6A55               	clrf	__pbssCOMRAM& (0+255),c
   636  004BC2                     end_of_initialization:
   637                           	opt callstack 0
   638  004BC2                     __end_of__initialization:
   639                           	opt callstack 0
   640  004BC2  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   641  004BC4  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   642  004BC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   643  004BC8  6EF8               	movwf	tblptru,c
   644  004BCA  0100               	movlb	0
   645  004BCC  EFA8  F024         	goto	_main	;jump to C main() function
   646                           
   647                           	psect	bssCOMRAM
   648  000055                     __pbssCOMRAM:
   649                           	opt callstack 0
   650  000055                     _sensorIzquierda:
   651                           	opt callstack 0
   652  000055                     	ds	4
   653  000059                     _llegoDestino:
   654                           	opt callstack 0
   655  000059                     	ds	1
   656                           
   657                           	psect	bssBANK0
   658  0000F9                     __pbssBANK0:
   659                           	opt callstack 0
   660  0000F9                     _sensorDerecha:
   661                           	opt callstack 0
   662  0000F9                     	ds	4
   663  0000FD                     _mouse:
   664                           	opt callstack 0
   665  0000FD                     	ds	2
   666                           
   667                           	psect	bssBANK1
   668  000100                     __pbssBANK1:
   669                           	opt callstack 0
   670  000100                     roundf@F525:
   671                           	opt callstack 0
   672  000100                     	ds	4
   673  000104                     floorf@F524:
   674                           	opt callstack 0
   675  000104                     	ds	4
   676  000108                     ___fpclassifyf@F463:
   677                           	opt callstack 0
   678  000108                     	ds	4
   679  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   680                           	opt callstack 0
   681  00010C                     	ds	4
   682  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   683                           	opt callstack 0
   684  000110                     	ds	4
   685  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   686                           	opt callstack 0
   687  000114                     	ds	4
   688  000118                     _oldSensorEnfrente:
   689                           	opt callstack 0
   690  000118                     	ds	4
   691  00011C                     _oldSensorIzquierda:
   692                           	opt callstack 0
   693  00011C                     	ds	4
   694  000120                     _oldSensorDerecha:
   695                           	opt callstack 0
   696  000120                     	ds	4
   697  000124                     _sensorEnfrente:
   698                           	opt callstack 0
   699  000124                     	ds	4
   700  000128                     _nout:
   701                           	opt callstack 0
   702  000128                     	ds	2
   703  00012A                     _width:
   704                           	opt callstack 0
   705  00012A                     	ds	2
   706  00012C                     _prec:
   707                           	opt callstack 0
   708  00012C                     	ds	2
   709  00012E                     _flags:
   710                           	opt callstack 0
   711  00012E                     	ds	2
   712  000130                     PID@difAnt:
   713                           	opt callstack 0
   714  000130                     	ds	2
   715  000132                     comportamientoBasico@caminoEncontrado:
   716                           	opt callstack 0
   717  000132                     	ds	1
   718  000133                     comportamientoBasico@cruceDetectado:
   719                           	opt callstack 0
   720  000133                     	ds	1
   721  000134                     comportamientoBasico@mapear:
   722                           	opt callstack 0
   723  000134                     	ds	1
   724  000135                     comportamientoBasico@espejearCarroY:
   725                           	opt callstack 0
   726  000135                     	ds	1
   727  000136                     _posicionDestinoY:
   728                           	opt callstack 0
   729  000136                     	ds	1
   730  000137                     _posicionDestinoX:
   731                           	opt callstack 0
   732  000137                     	ds	1
   733  000138                     _posicionCarroY:
   734                           	opt callstack 0
   735  000138                     	ds	1
   736  000139                     _posicionCarroX:
   737                           	opt callstack 0
   738  000139                     	ds	1
   739  00013A                     _dbuf:
   740                           	opt callstack 0
   741  00013A                     	ds	80
   742  00018A                     _buffer:
   743                           	opt callstack 0
   744  00018A                     	ds	50
   745  0001BC                     comportamientoBasico@caminosRecorrer:
   746                           	opt callstack 0
   747  0001BC                     	ds	3
   748  0001BF                     comportamientoBasico@numMovimientosTotales:
   749                           	opt callstack 0
   750  0001BF                     	ds	2
   751  0001C1                     comportamientoBasico@numMovimientos:
   752                           	opt callstack 0
   753  0001C1                     	ds	2
   754  0001C3                     comportamientoBasico@cambioOrientacionCarro:
   755                           	opt callstack 0
   756  0001C3                     	ds	1
   757  0001C4                     comportamientoBasico@caminoActual:
   758                           	opt callstack 0
   759  0001C4                     	ds	1
   760  0001C5                     comportamientoBasico@contCaminosRecorridos:
   761                           	opt callstack 0
   762  0001C5                     	ds	1
   763  0001C6                     comportamientoBasico@posicionInvCruce:
   764                           	opt callstack 0
   765  0001C6                     	ds	1
   766  0001C7                     comportamientoBasico@investigandoCruce:
   767                           	opt callstack 0
   768  0001C7                     	ds	1
   769  0001C8                     comportamientoBasico@carroEspejeado:
   770                           	opt callstack 0
   771  0001C8                     	ds	1
   772                           
   773                           	psect	dataBANK1
   774  0001D0                     __pdataBANK1:
   775                           	opt callstack 0
   776  0001D0                     _pausa:
   777                           	opt callstack 0
   778  0001D0                     	ds	1
   779  0001D1                     _SENSOR_PRIORIDAD_BAJA:
   780                           	opt callstack 0
   781  0001D1                     	ds	1
   782  0001D2                     _SENSOR_PRIORIDAD_MEDIA:
   783                           	opt callstack 0
   784  0001D2                     	ds	1
   785  0001D3                     _SENSOR_PRIORIDAD_ALTA:
   786                           	opt callstack 0
   787  0001D3                     	ds	1
   788                           
   789                           	psect	bssBANK2
   790  000200                     __pbssBANK2:
   791                           	opt callstack 0
   792  000200                     comportamientoBasico@movimientosRealizados:
   793                           	opt callstack 0
   794  000200                     	ds	200
   795                           
   796                           	psect	bssBIGRAM
   797  0002C8                     __pbssBIGRAM:
   798                           	opt callstack 0
   799  0002C8                     comportamientoBasico@caminoFinal:
   800                           	opt callstack 0
   801  0002C8                     	ds	1000
   802                           
   803                           	psect	cstackBANK1
   804  0001C9                     __pcstackBANK1:
   805                           	opt callstack 0
   806  0001C9                     visualizarPasosRealizados@numMovimientos:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x0
   810  0001C9                     	ds	2
   811  0001CB                     ??_visualizarPasosRealizados:
   812                           
   813                           ; 1 bytes @ 0x2
   814  0001CB                     	ds	4
   815  0001CF                     main@iniciado:
   816                           	opt callstack 0
   817                           
   818                           ; 1 bytes @ 0x6
   819  0001CF                     	ds	1
   820                           
   821                           	psect	cstackBANK0
   822  000060                     __pcstackBANK0:
   823                           	opt callstack 0
   824  000060                     ___fldiv@rem:
   825                           	opt callstack 0
   826  000060                     _roundf$1819:
   827                           	opt callstack 0
   828                           
   829                           ; 4 bytes @ 0x0
   830  000060                     	ds	4
   831  000064                     ___fldiv@sign:
   832                           	opt callstack 0
   833  000064                     roundf@e:
   834                           	opt callstack 0
   835                           
   836                           ; 2 bytes @ 0x4
   837  000064                     	ds	1
   838  000065                     ___fldiv@new_exp:
   839                           	opt callstack 0
   840                           
   841                           ; 2 bytes @ 0x5
   842  000065                     	ds	1
   843  000066                     _roundf$1818:
   844                           	opt callstack 0
   845                           
   846                           ; 4 bytes @ 0x6
   847  000066                     	ds	1
   848  000067                     ___fldiv@grs:
   849                           	opt callstack 0
   850                           
   851                           ; 4 bytes @ 0x7
   852  000067                     	ds	3
   853  00006A                     roundf@u:
   854                           	opt callstack 0
   855                           
   856                           ; 4 bytes @ 0xA
   857  00006A                     	ds	1
   858  00006B                     ___fldiv@bexp:
   859                           	opt callstack 0
   860                           
   861                           ; 1 bytes @ 0xB
   862  00006B                     	ds	1
   863  00006C                     ___fldiv@aexp:
   864                           	opt callstack 0
   865                           
   866                           ; 1 bytes @ 0xC
   867  00006C                     	ds	1
   868  00006D                     ??_floorf:
   869                           
   870                           ; 1 bytes @ 0xD
   871  00006D                     	ds	1
   872  00006E                     roundf@y:
   873                           	opt callstack 0
   874                           
   875                           ; 4 bytes @ 0xE
   876  00006E                     	ds	4
   877  000072                     ?___fltol:
   878                           	opt callstack 0
   879  000072                     ___fltol@f1:
   880                           	opt callstack 0
   881                           
   882                           ; 4 bytes @ 0x12
   883  000072                     	ds	1
   884  000073                     floorf@m:
   885                           	opt callstack 0
   886                           
   887                           ; 4 bytes @ 0x13
   888  000073                     	ds	3
   889  000076                     ??___fltol:
   890                           
   891                           ; 1 bytes @ 0x16
   892  000076                     	ds	1
   893  000077                     floorf@e:
   894                           	opt callstack 0
   895                           
   896                           ; 2 bytes @ 0x17
   897  000077                     	ds	2
   898  000079                     floorf@u:
   899                           	opt callstack 0
   900                           
   901                           ; 4 bytes @ 0x19
   902  000079                     	ds	1
   903  00007A                     ___fltol@sign1:
   904                           	opt callstack 0
   905                           
   906                           ; 1 bytes @ 0x1A
   907  00007A                     	ds	1
   908  00007B                     ___fltol@exp1:
   909                           	opt callstack 0
   910                           
   911                           ; 1 bytes @ 0x1B
   912  00007B                     	ds	1
   913  00007C                     pwmDuty@cicloTrabajo:
   914                           	opt callstack 0
   915                           
   916                           ; 2 bytes @ 0x1C
   917  00007C                     	ds	1
   918  00007D                     ?_efgtoa:
   919                           	opt callstack 0
   920  00007D                     efgtoa@fp:
   921                           	opt callstack 0
   922                           
   923                           ; 2 bytes @ 0x1D
   924  00007D                     	ds	1
   925  00007E                     pwmDuty@channel:
   926                           	opt callstack 0
   927                           
   928                           ; 1 bytes @ 0x1E
   929  00007E                     	ds	1
   930  00007F                     ??_pwmDuty:
   931  00007F                     efgtoa@f:
   932                           	opt callstack 0
   933                           
   934                           ; 4 bytes @ 0x1F
   935  00007F                     	ds	4
   936  000083                     efgtoa@c:
   937                           	opt callstack 0
   938                           
   939                           ; 1 bytes @ 0x23
   940  000083                     	ds	1
   941  000084                     ??_efgtoa:
   942  000084                     pwmDuty@duty:
   943                           	opt callstack 0
   944                           
   945                           ; 4 bytes @ 0x24
   946  000084                     	ds	4
   947  000088                     ??_PID:
   948  000088                     moverCarrito@carroEspejeado:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0x28
   952  000088                     	ds	1
   953  000089                     efgtoa@ou:
   954                           	opt callstack 0
   955                           
   956                           ; 4 bytes @ 0x29
   957  000089                     	ds	1
   958  00008A                     ??_moverCarrito:
   959  00008A                     _PID$1817:
   960                           	opt callstack 0
   961                           
   962                           ; 4 bytes @ 0x2A
   963  00008A                     	ds	3
   964  00008D                     _efgtoa$921:
   965                           	opt callstack 0
   966                           
   967                           ; 2 bytes @ 0x2D
   968  00008D                     	ds	1
   969  00008E                     PID@velocidadIzquierda:
   970                           	opt callstack 0
   971                           
   972                           ; 2 bytes @ 0x2E
   973  00008E                     	ds	1
   974  00008F                     _efgtoa$922:
   975                           	opt callstack 0
   976                           
   977                           ; 2 bytes @ 0x2F
   978  00008F                     	ds	1
   979  000090                     _PID$747:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x30
   983  000090                     	ds	1
   984  000091                     _efgtoa$926:
   985                           	opt callstack 0
   986                           
   987                           ; 2 bytes @ 0x31
   988  000091                     	ds	1
   989  000092                     PID@velocidadDerecha:
   990                           	opt callstack 0
   991                           
   992                           ; 2 bytes @ 0x32
   993  000092                     	ds	1
   994  000093                     _efgtoa$930:
   995                           	opt callstack 0
   996                           
   997                           ; 2 bytes @ 0x33
   998  000093                     	ds	1
   999  000094                     _PID$749:
  1000                           	opt callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x34
  1003  000094                     	ds	1
  1004  000095                     _efgtoa$931:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x35
  1008  000095                     	ds	1
  1009  000096                     PID@dif:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x36
  1013  000096                     	ds	1
  1014  000097                     _efgtoa$932:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x37
  1018  000097                     	ds	1
  1019  000098                     PID@error:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x38
  1023  000098                     	ds	1
  1024  000099                     efgtoa@t:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x39
  1028  000099                     	ds	1
  1029  00009A                     regresarPuntoPartida@movimientos:
  1030                           	opt callstack 0
  1031  00009A                     regresarAlCruce@movimientos:
  1032                           	opt callstack 0
  1033  00009A                     recorrerCaminoEncontrado@movimientos:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x3A
  1037  00009A                     	ds	1
  1038  00009B                     efgtoa@pp:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x3B
  1042  00009B                     	ds	1
  1043  00009C                     regresarPuntoPartida@numMovimientos:
  1044                           	opt callstack 0
  1045  00009C                     regresarAlCruce@numMovimientos:
  1046                           	opt callstack 0
  1047  00009C                     recorrerCaminoEncontrado@numMovimientos:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x3C
  1051  00009C                     	ds	1
  1052  00009D                     efgtoa@m:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x3D
  1056  00009D                     	ds	1
  1057  00009E                     regresarPuntoPartida@i:
  1058                           	opt callstack 0
  1059  00009E                     regresarAlCruce@i:
  1060                           	opt callstack 0
  1061  00009E                     recorrerCaminoEncontrado@i:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x3E
  1065  00009E                     	ds	1
  1066  00009F                     efgtoa@ne:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x3F
  1070  00009F                     	ds	1
  1071  0000A0                     ??_comportamientoBasico:
  1072                           
  1073                           ; 1 bytes @ 0x40
  1074  0000A0                     	ds	1
  1075  0000A1                     efgtoa@d:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x41
  1079  0000A1                     	ds	1
  1080  0000A2                     comportamientoBasico@direccionElegida:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x42
  1084  0000A2                     	ds	1
  1085  0000A3                     efgtoa@sign:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x43
  1089  0000A3                     	ds	2
  1090  0000A5                     efgtoa@p:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x45
  1094  0000A5                     	ds	2
  1095  0000A7                     efgtoa@nmode:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x47
  1099  0000A7                     	ds	1
  1100  0000A8                     efgtoa@w:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x48
  1104  0000A8                     	ds	2
  1105  0000AA                     efgtoa@mode:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x4A
  1109  0000AA                     	ds	1
  1110  0000AB                     efgtoa@h:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x4B
  1114  0000AB                     	ds	4
  1115  0000AF                     efgtoa@l:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 4 bytes @ 0x4F
  1119  0000AF                     	ds	4
  1120  0000B3                     efgtoa@i:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x53
  1124  0000B3                     	ds	2
  1125  0000B5                     efgtoa@g:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x55
  1129  0000B5                     	ds	4
  1130  0000B9                     efgtoa@e:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x59
  1134  0000B9                     	ds	2
  1135  0000BB                     efgtoa@n:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x5B
  1139  0000BB                     	ds	2
  1140  0000BD                     efgtoa@u:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x5D
  1144  0000BD                     	ds	4
  1145  0000C1                     ?_vfpfcnvrt:
  1146                           	opt callstack 0
  1147  0000C1                     vfpfcnvrt@fp:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x61
  1151  0000C1                     	ds	2
  1152  0000C3                     vfpfcnvrt@fmt:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x63
  1156  0000C3                     	ds	2
  1157  0000C5                     vfpfcnvrt@ap:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x65
  1161  0000C5                     	ds	2
  1162  0000C7                     ??_vfpfcnvrt:
  1163                           
  1164                           ; 1 bytes @ 0x67
  1165  0000C7                     	ds	4
  1166  0000CB                     vfpfcnvrt@ll:
  1167                           	opt callstack 0
  1168                           
  1169                           ; 8 bytes @ 0x6B
  1170  0000CB                     	ds	8
  1171  0000D3                     _vfpfcnvrt$946:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x73
  1175  0000D3                     	ds	2
  1176  0000D5                     _vfpfcnvrt$951:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x75
  1180  0000D5                     	ds	2
  1181  0000D7                     vfpfcnvrt@f:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x77
  1185  0000D7                     	ds	4
  1186  0000DB                     vfpfcnvrt@ct:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 3 bytes @ 0x7B
  1190  0000DB                     	ds	3
  1191  0000DE                     vfpfcnvrt@c:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x7E
  1195  0000DE                     	ds	1
  1196  0000DF                     ?_vfprintf:
  1197                           	opt callstack 0
  1198  0000DF                     vfprintf@fp:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x7F
  1202  0000DF                     	ds	2
  1203  0000E1                     vfprintf@fmt:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x81
  1207  0000E1                     	ds	2
  1208  0000E3                     vfprintf@ap:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x83
  1212  0000E3                     	ds	2
  1213  0000E5                     vfprintf@cfmt:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x85
  1217  0000E5                     	ds	2
  1218  0000E7                     ?_sprintf:
  1219                           	opt callstack 0
  1220  0000E7                     sprintf@s:
  1221                           	opt callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x87
  1224  0000E7                     	ds	2
  1225  0000E9                     sprintf@fmt:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x89
  1229  0000E9                     	ds	8
  1230  0000F1                     sprintf@ap:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x91
  1234  0000F1                     	ds	2
  1235  0000F3                     sprintf@f:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 6 bytes @ 0x93
  1239  0000F3                     	ds	6
  1240                           
  1241                           	psect	cstackCOMRAM
  1242  000001                     __pcstackCOMRAM:
  1243                           	opt callstack 0
  1244  000001                     ??_antiRebote:
  1245  000001                     
  1246                           ; 1 bytes @ 0x0
  1247  000001                     	ds	2
  1248  000003                     antiRebote@pin:
  1249                           	opt callstack 0
  1250                           
  1251                           ; 1 bytes @ 0x2
  1252  000003                     	ds	1
  1253  000004                     ??_boton:
  1254                           
  1255                           ; 1 bytes @ 0x3
  1256  000004                     	ds	2
  1257  000006                     ??_configPwm:
  1258  000006                     ??_forzarReversa:
  1259  000006                     ??_forzarAvanceRecto:
  1260  000006                     ??_forzarGiroIzquierda:
  1261  000006                     ??_forzarGiroDerecha:
  1262  000006                     ?_strlen:
  1263                           	opt callstack 0
  1264  000006                     ?___fpclassifyf:
  1265                           	opt callstack 0
  1266  000006                     ?_isupper:
  1267                           	opt callstack 0
  1268  000006                     ?_isdigit:
  1269                           	opt callstack 0
  1270  000006                     ?_strncmp:
  1271                           	opt callstack 0
  1272  000006                     ?_isspace:
  1273                           	opt callstack 0
  1274  000006                     ?_dameLecturaAdc:
  1275                           	opt callstack 0
  1276  000006                     ?___wmul:
  1277                           	opt callstack 0
  1278  000006                     ?___awdiv:
  1279                           	opt callstack 0
  1280  000006                     ?___awmod:
  1281                           	opt callstack 0
  1282  000006                     ?___lwdiv:
  1283                           	opt callstack 0
  1284  000006                     ?___lmul:
  1285                           	opt callstack 0
  1286  000006                     ?___flneg:
  1287                           	opt callstack 0
  1288  000006                     ?___aodiv:
  1289                           	opt callstack 0
  1290  000006                     ?___aomod:
  1291                           	opt callstack 0
  1292  000006                     UART_write@dato:
  1293                           	opt callstack 0
  1294  000006                     limpiarMovimientos@movimientos:
  1295                           	opt callstack 0
  1296  000006                     combinarArreglos@movimientos:
  1297                           	opt callstack 0
  1298  000006                     ___wmul@multiplier:
  1299                           	opt callstack 0
  1300  000006                     ___awdiv@dividend:
  1301                           	opt callstack 0
  1302  000006                     ___awmod@dividend:
  1303                           	opt callstack 0
  1304  000006                     ___lwdiv@dividend:
  1305                           	opt callstack 0
  1306  000006                     isdigit@c:
  1307                           	opt callstack 0
  1308  000006                     isspace@c:
  1309                           	opt callstack 0
  1310  000006                     isupper@c:
  1311                           	opt callstack 0
  1312  000006                     fputc@c:
  1313                           	opt callstack 0
  1314  000006                     strcpy@dest:
  1315                           	opt callstack 0
  1316  000006                     strlen@s:
  1317                           	opt callstack 0
  1318  000006                     strncmp@_l:
  1319                           	opt callstack 0
  1320  000006                     ___lmul@multiplier:
  1321                           	opt callstack 0
  1322  000006                     ___fleq@ff1:
  1323                           	opt callstack 0
  1324  000006                     ___flneg@f1:
  1325                           	opt callstack 0
  1326  000006                     ___fpclassifyf@x:
  1327                           	opt callstack 0
  1328  000006                     ___aodiv@dividend:
  1329                           	opt callstack 0
  1330  000006                     ___aomod@dividend:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 8 bytes @ 0x5
  1334  000006                     	ds	1
  1335  000007                     UART_printf@cadena:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x6
  1339  000007                     	ds	1
  1340  000008                     ??_mover:
  1341  000008                     ??_isupper:
  1342  000008                     ??_isdigit:
  1343  000008                     ??_isspace:
  1344  000008                     ??_dameLecturaAdc:
  1345  000008                     configPwm@channel:
  1346                           	opt callstack 0
  1347  000008                     limpiarMovimientos@numMovimientos:
  1348                           	opt callstack 0
  1349  000008                     combinarArreglos@caminoFinal:
  1350                           	opt callstack 0
  1351  000008                     ___wmul@multiplicand:
  1352                           	opt callstack 0
  1353  000008                     ___awdiv@divisor:
  1354                           	opt callstack 0
  1355  000008                     ___awmod@divisor:
  1356                           	opt callstack 0
  1357  000008                     ___lwdiv@divisor:
  1358                           	opt callstack 0
  1359  000008                     fputc@fp:
  1360                           	opt callstack 0
  1361  000008                     strcpy@src:
  1362                           	opt callstack 0
  1363  000008                     strlen@a:
  1364                           	opt callstack 0
  1365  000008                     strncmp@_r:
  1366                           	opt callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x7
  1369  000008                     	ds	1
  1370  000009                     
  1371                           ; 1 bytes @ 0x8
  1372  000009                     	ds	1
  1373  00000A                     ??_fputc:
  1374  00000A                     ??___fpclassifyf:
  1375  00000A                     ??_strcpy:
  1376  00000A                     dameLecturaAdc@canalLeer:
  1377                           	opt callstack 0
  1378  00000A                     ___awdiv@counter:
  1379                           	opt callstack 0
  1380  00000A                     ___awmod@counter:
  1381                           	opt callstack 0
  1382  00000A                     ___lwdiv@counter:
  1383                           	opt callstack 0
  1384  00000A                     combinarArreglos@numMovimientos:
  1385                           	opt callstack 0
  1386  00000A                     ___wmul@product:
  1387                           	opt callstack 0
  1388  00000A                     strncmp@n:
  1389                           	opt callstack 0
  1390  00000A                     ___lmul@multiplicand:
  1391                           	opt callstack 0
  1392  00000A                     ___fleq@ff2:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 4 bytes @ 0x9
  1396  00000A                     	ds	1
  1397  00000B                     seLlegoAlDestino@llegoDestino:
  1398                           	opt callstack 0
  1399  00000B                     ___awdiv@sign:
  1400                           	opt callstack 0
  1401  00000B                     ___awmod@sign:
  1402                           	opt callstack 0
  1403  00000B                     ___lwdiv@quotient:
  1404                           	opt callstack 0
  1405                           
  1406                           ; 2 bytes @ 0xA
  1407  00000B                     	ds	1
  1408  00000C                     ??_strncmp:
  1409  00000C                     ?_tolower:
  1410                           	opt callstack 0
  1411  00000C                     _isspace$1455:
  1412                           	opt callstack 0
  1413  00000C                     limpiarMovimientos@i:
  1414                           	opt callstack 0
  1415  00000C                     combinarArreglos@numMovimientosFinal:
  1416                           	opt callstack 0
  1417  00000C                     ___awdiv@quotient:
  1418                           	opt callstack 0
  1419  00000C                     strcpy@s:
  1420                           	opt callstack 0
  1421  00000C                     tolower@c:
  1422                           	opt callstack 0
  1423                           
  1424                           ; 2 bytes @ 0xB
  1425  00000C                     	ds	1
  1426  00000D                     ?_atoi:
  1427                           	opt callstack 0
  1428  00000D                     ?___xxtofl:
  1429                           	opt callstack 0
  1430  00000D                     atoi@s:
  1431                           	opt callstack 0
  1432  00000D                     strncmp@l:
  1433                           	opt callstack 0
  1434  00000D                     ___xxtofl@val:
  1435                           	opt callstack 0
  1436                           
  1437                           ; 4 bytes @ 0xC
  1438  00000D                     	ds	1
  1439  00000E                     ??_combinarArreglos:
  1440  00000E                     ??_tolower:
  1441  00000E                     ??___fleq:
  1442  00000E                     ___fpclassifyf@e:
  1443                           	opt callstack 0
  1444  00000E                     strcpy@d:
  1445                           	opt callstack 0
  1446  00000E                     ___lmul@product:
  1447                           	opt callstack 0
  1448  00000E                     ___aodiv@divisor:
  1449                           	opt callstack 0
  1450  00000E                     ___aomod@divisor:
  1451                           	opt callstack 0
  1452                           
  1453                           ; 8 bytes @ 0xD
  1454  00000E                     	ds	1
  1455  00000F                     ??_atoi:
  1456  00000F                     fputs@s:
  1457                           	opt callstack 0
  1458  00000F                     strncmp@r:
  1459                           	opt callstack 0
  1460                           
  1461                           ; 2 bytes @ 0xE
  1462  00000F                     	ds	1
  1463  000010                     combinarArreglos@i:
  1464                           	opt callstack 0
  1465  000010                     ___fpclassifyf@u:
  1466                           	opt callstack 0
  1467                           
  1468                           ; 4 bytes @ 0xF
  1469  000010                     	ds	1
  1470  000011                     ??___xxtofl:
  1471  000011                     fputs@fp:
  1472                           	opt callstack 0
  1473                           
  1474                           ; 2 bytes @ 0x10
  1475  000011                     	ds	1
  1476  000012                     ?___aldiv:
  1477                           	opt callstack 0
  1478  000012                     caminoCorrecto@movimientos:
  1479                           	opt callstack 0
  1480  000012                     _tolower$1554:
  1481                           	opt callstack 0
  1482  000012                     ___aldiv@dividend:
  1483                           	opt callstack 0
  1484                           
  1485                           ; 4 bytes @ 0x11
  1486  000012                     	ds	1
  1487  000013                     fputs@c:
  1488                           	opt callstack 0
  1489  000013                     atoi@neg:
  1490                           	opt callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x12
  1493  000013                     	ds	1
  1494  000014                     caminoCorrecto@caminoFinal:
  1495                           	opt callstack 0
  1496  000014                     fputs@i:
  1497                           	opt callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x13
  1500  000014                     	ds	1
  1501  000015                     ___xxtofl@sign:
  1502                           	opt callstack 0
  1503  000015                     _atoi$1424:
  1504                           	opt callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x14
  1507  000015                     	ds	1
  1508  000016                     ?_pad:
  1509                           	opt callstack 0
  1510  000016                     ___aodiv@counter:
  1511                           	opt callstack 0
  1512  000016                     ___aomod@counter:
  1513                           	opt callstack 0
  1514  000016                     ___xxtofl@exp:
  1515                           	opt callstack 0
  1516  000016                     caminoCorrecto@numMovimientos:
  1517                           	opt callstack 0
  1518  000016                     pad@fp:
  1519                           	opt callstack 0
  1520  000016                     ___aldiv@divisor:
  1521                           	opt callstack 0
  1522                           
  1523                           ; 4 bytes @ 0x15
  1524  000016                     	ds	1
  1525  000017                     ___aodiv@sign:
  1526                           	opt callstack 0
  1527  000017                     ___aomod@sign:
  1528                           	opt callstack 0
  1529  000017                     _atoi$1426:
  1530                           	opt callstack 0
  1531  000017                     ___xxtofl@arg:
  1532                           	opt callstack 0
  1533                           
  1534                           ; 4 bytes @ 0x16
  1535  000017                     	ds	1
  1536  000018                     ?_abs:
  1537                           	opt callstack 0
  1538  000018                     caminoCorrecto@numMovimientosFinal:
  1539                           	opt callstack 0
  1540  000018                     pad@buf:
  1541                           	opt callstack 0
  1542  000018                     abs@a:
  1543                           	opt callstack 0
  1544  000018                     ___aodiv@quotient:
  1545                           	opt callstack 0
  1546                           
  1547                           ; 8 bytes @ 0x17
  1548  000018                     	ds	1
  1549  000019                     _atoi$1425:
  1550                           	opt callstack 0
  1551                           
  1552                           ; 1 bytes @ 0x18
  1553  000019                     	ds	1
  1554  00001A                     ??_abs:
  1555  00001A                     caminoCorrecto@caminoActual:
  1556                           	opt callstack 0
  1557  00001A                     ___aldiv@counter:
  1558                           	opt callstack 0
  1559  00001A                     pad@p:
  1560                           	opt callstack 0
  1561  00001A                     atoi@n:
  1562                           	opt callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x19
  1565  00001A                     	ds	1
  1566  00001B                     ?___flmul:
  1567                           	opt callstack 0
  1568  00001B                     ?_dameDistancia:
  1569                           	opt callstack 0
  1570  00001B                     ___aldiv@sign:
  1571                           	opt callstack 0
  1572  00001B                     ___flmul@b:
  1573                           	opt callstack 0
  1574                           
  1575                           ; 4 bytes @ 0x1A
  1576  00001B                     	ds	1
  1577  00001C                     ??_pad:
  1578  00001C                     ___aldiv@quotient:
  1579                           	opt callstack 0
  1580                           
  1581                           ; 4 bytes @ 0x1B
  1582  00001C                     	ds	1
  1583  00001D                     pad@i:
  1584                           	opt callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x1C
  1587  00001D                     	ds	2
  1588  00001F                     ??_dameDistancia:
  1589  00001F                     pad@w:
  1590                           	opt callstack 0
  1591  00001F                     ___flmul@a:
  1592                           	opt callstack 0
  1593                           
  1594                           ; 4 bytes @ 0x1E
  1595  00001F                     	ds	1
  1596  000020                     ?_map:
  1597                           	opt callstack 0
  1598  000020                     map@x:
  1599                           	opt callstack 0
  1600  000020                     UART_init@BAUD:
  1601                           	opt callstack 0
  1602                           
  1603                           ; 4 bytes @ 0x1F
  1604  000020                     	ds	1
  1605  000021                     ?_dtoa:
  1606                           	opt callstack 0
  1607  000021                     dameDistancia@numeroSensor:
  1608                           	opt callstack 0
  1609  000021                     dtoa@fp:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x20
  1613  000021                     	ds	1
  1614  000022                     dameDistancia@distancia:
  1615                           	opt callstack 0
  1616                           
  1617                           ; 4 bytes @ 0x21
  1618  000022                     	ds	1
  1619  000023                     ??___flmul:
  1620  000023                     dtoa@d:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 8 bytes @ 0x22
  1624  000023                     	ds	1
  1625  000024                     map@in_min:
  1626                           	opt callstack 0
  1627                           
  1628                           ; 4 bytes @ 0x23
  1629  000024                     	ds	2
  1630  000026                     dameDistancia@conteo:
  1631                           	opt callstack 0
  1632                           
  1633                           ; 2 bytes @ 0x25
  1634  000026                     	ds	1
  1635  000027                     ___flmul@sign:
  1636                           	opt callstack 0
  1637                           
  1638                           ; 1 bytes @ 0x26
  1639  000027                     	ds	1
  1640  000028                     ___flmul@aexp:
  1641                           	opt callstack 0
  1642  000028                     map@in_max:
  1643                           	opt callstack 0
  1644  000028                     _UART_init$1816:
  1645                           	opt callstack 0
  1646                           
  1647                           ; 4 bytes @ 0x27
  1648  000028                     	ds	1
  1649  000029                     ___flmul@grs:
  1650                           	opt callstack 0
  1651                           
  1652                           ; 4 bytes @ 0x28
  1653  000029                     	ds	2
  1654  00002B                     ??_dtoa:
  1655                           
  1656                           ; 1 bytes @ 0x2A
  1657  00002B                     	ds	1
  1658  00002C                     map@out_min:
  1659                           	opt callstack 0
  1660                           
  1661                           ; 4 bytes @ 0x2B
  1662  00002C                     	ds	1
  1663  00002D                     ___flmul@bexp:
  1664                           	opt callstack 0
  1665                           
  1666                           ; 1 bytes @ 0x2C
  1667  00002D                     	ds	1
  1668  00002E                     ___flmul@prod:
  1669                           	opt callstack 0
  1670                           
  1671                           ; 4 bytes @ 0x2D
  1672  00002E                     	ds	2
  1673  000030                     map@out_max:
  1674                           	opt callstack 0
  1675                           
  1676                           ; 4 bytes @ 0x2F
  1677  000030                     	ds	2
  1678  000032                     ___flmul@temp:
  1679                           	opt callstack 0
  1680                           
  1681                           ; 2 bytes @ 0x31
  1682  000032                     	ds	1
  1683  000033                     _dtoa$897:
  1684                           	opt callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x32
  1687  000033                     	ds	1
  1688  000034                     ?___fladd:
  1689                           	opt callstack 0
  1690  000034                     ___flge@ff1:
  1691                           	opt callstack 0
  1692  000034                     ___fladd@b:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 4 bytes @ 0x33
  1696  000034                     	ds	1
  1697  000035                     dtoa@p:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 2 bytes @ 0x34
  1701  000035                     	ds	2
  1702  000037                     dtoa@w:
  1703                           	opt callstack 0
  1704                           
  1705                           ; 2 bytes @ 0x36
  1706  000037                     	ds	1
  1707  000038                     ___flge@ff2:
  1708                           	opt callstack 0
  1709  000038                     ___fladd@a:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 4 bytes @ 0x37
  1713  000038                     	ds	1
  1714  000039                     dtoa@s:
  1715                           	opt callstack 0
  1716                           
  1717                           ; 2 bytes @ 0x38
  1718  000039                     	ds	2
  1719  00003B                     dtoa@n:
  1720                           	opt callstack 0
  1721                           
  1722                           ; 8 bytes @ 0x3A
  1723  00003B                     	ds	1
  1724  00003C                     ??___fladd:
  1725  00003C                     ??___flge:
  1726                           
  1727                           ; 1 bytes @ 0x3B
  1728  00003C                     	ds	4
  1729  000040                     ___fladd@signs:
  1730                           	opt callstack 0
  1731  000040                     hayCruce@caminosRecorrer:
  1732                           	opt callstack 0
  1733  000040                     decidirDireccion@caminosRecorrer:
  1734                           	opt callstack 0
  1735                           
  1736                           ; 2 bytes @ 0x3F
  1737  000040                     	ds	1
  1738  000041                     ___fladd@aexp:
  1739                           	opt callstack 0
  1740                           
  1741                           ; 1 bytes @ 0x40
  1742  000041                     	ds	1
  1743  000042                     hayCruce@investigandoCruce:
  1744                           	opt callstack 0
  1745  000042                     ___fladd@bexp:
  1746                           	opt callstack 0
  1747  000042                     decidirDireccion@investigandoCruce:
  1748                           	opt callstack 0
  1749                           
  1750                           ; 2 bytes @ 0x41
  1751  000042                     	ds	1
  1752  000043                     hayCruce@contCaminos:
  1753                           	opt callstack 0
  1754  000043                     ___fladd@grs:
  1755                           	opt callstack 0
  1756  000043                     dtoa@i:
  1757                           	opt callstack 0
  1758                           
  1759                           ; 2 bytes @ 0x42
  1760  000043                     	ds	1
  1761  000044                     ?___fldiv:
  1762                           	opt callstack 0
  1763  000044                     ?___flsub:
  1764                           	opt callstack 0
  1765  000044                     hayCruce@paredEnfrente:
  1766                           	opt callstack 0
  1767  000044                     decidirDireccion@posicionInvCruce:
  1768                           	opt callstack 0
  1769  000044                     ___flsub@b:
  1770                           	opt callstack 0
  1771  000044                     ___fldiv@b:
  1772                           	opt callstack 0
  1773                           
  1774                           ; 4 bytes @ 0x43
  1775  000044                     	ds	1
  1776  000045                     hayCruce@paredDerecha:
  1777                           	opt callstack 0
  1778                           
  1779                           ; 1 bytes @ 0x44
  1780  000045                     	ds	1
  1781  000046                     hayCruce@paredIzquierda:
  1782                           	opt callstack 0
  1783  000046                     decidirDireccion@contCaminosRecorridos:
  1784                           	opt callstack 0
  1785                           
  1786                           ; 2 bytes @ 0x45
  1787  000046                     	ds	2
  1788  000048                     decidirDireccion@caminoActual:
  1789                           	opt callstack 0
  1790  000048                     ___flsub@a:
  1791                           	opt callstack 0
  1792  000048                     ___fldiv@a:
  1793                           	opt callstack 0
  1794                           
  1795                           ; 4 bytes @ 0x47
  1796  000048                     	ds	2
  1797  00004A                     decidirDireccion@cambioOrientacionCarro:
  1798                           	opt callstack 0
  1799                           
  1800                           ; 2 bytes @ 0x49
  1801  00004A                     	ds	2
  1802  00004C                     ??_decidirDireccion:
  1803  00004C                     ??___fldiv:
  1804  00004C                     ?_roundf:
  1805                           	opt callstack 0
  1806  00004C                     roundf@x:
  1807                           	opt callstack 0
  1808                           
  1809                           ; 4 bytes @ 0x4B
  1810  00004C                     	ds	2
  1811  00004E                     decidirDireccion@direccionElegida:
  1812                           	opt callstack 0
  1813                           
  1814                           ; 1 bytes @ 0x4D
  1815  00004E                     	ds	2
  1816  000050                     ??_roundf:
  1817  000050                     ?_floorf:
  1818                           	opt callstack 0
  1819  000050                     floorf@x:
  1820                           	opt callstack 0
  1821                           
  1822                           ; 4 bytes @ 0x4F
  1823  000050                     	ds	4
  1824  000054                     moverCarrito@espejearCarroY:
  1825                           	opt callstack 0
  1826                           
  1827                           ; 1 bytes @ 0x53
  1828  000054                     	ds	1
  1829  000055                     
  1830                           ; 1 bytes @ 0x54
  1831 ;;
  1832 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1833 ;;
  1834 ;; *************** function _main *****************
  1835 ;; Defined at:
  1836 ;;		line 1284 in file "main.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  numMovimient    2    0        int 
  1841 ;;  iniciado        1    6[BANK1 ] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1851 ;;      Params:         0       0       0       0       0       0       0       0       0
  1852 ;;      Locals:         0       0       3       0       0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1854 ;;      Totals:         0       0       3       0       0       0       0       0       0
  1855 ;;Total ram usage:        3 bytes
  1856 ;; Hardware stack levels required when called:   11
  1857 ;; This function calls:
  1858 ;;		_UART_init
  1859 ;;		_comportamientoBasico
  1860 ;;		_configPwm
  1861 ;;		_configurarAdc
  1862 ;;		_forzarParoAuto
  1863 ;;		_inicializarComportamientoBasico
  1864 ;;		_visualizarPasosRealizados
  1865 ;; This function is called by:
  1866 ;;		Startup code after reset
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text0
  1871  004950                     __ptext0:
  1872                           	opt callstack 0
  1873  004950                     _main:
  1874                           	opt callstack 20
  1875  004950                     
  1876                           ;main.c: 1286:     T_BOOL iniciado = 0;
  1877  004950  0E00               	movlw	0
  1878  004952  0101               	movlb	1	; () banked
  1879  004954  6FCF               	movwf	main@iniciado& (0+255),b
  1880  004956                     
  1881                           ; BSR set to: 1
  1882                           ;main.c: 1290:     INTCONbits.GIE = 1;
  1883  004956  8EF2               	bsf	242,7,c	;volatile
  1884  004958                     
  1885                           ; BSR set to: 1
  1886                           ;main.c: 1291:     INTCONbits.INT0IE = 1;
  1887  004958  88F2               	bsf	242,4,c	;volatile
  1888  00495A                     
  1889                           ; BSR set to: 1
  1890                           ;main.c: 1292:     INTCON2bits.INTEDG0 = 1;
  1891  00495A  8CF1               	bsf	241,6,c	;volatile
  1892  00495C                     
  1893                           ; BSR set to: 1
  1894                           ;main.c: 1294:     TRISD3 = 0;
  1895  00495C  9695               	bcf	3989,3,c	;volatile
  1896  00495E                     
  1897                           ; BSR set to: 1
  1898                           ;main.c: 1295:     TRISB1 = 1;
  1899  00495E  8293               	bsf	3987,1,c	;volatile
  1900  004960                     
  1901                           ; BSR set to: 1
  1902                           ;main.c: 1296:     TRISB2 = 1;
  1903  004960  8493               	bsf	3987,2,c	;volatile
  1904  004962                     
  1905                           ; BSR set to: 1
  1906                           ;main.c: 1297:     TRISB3 = 1;
  1907  004962  8693               	bsf	3987,3,c	;volatile
  1908  004964                     
  1909                           ; BSR set to: 1
  1910                           ;main.c: 1299:     TRISB4 = 0;
  1911  004964  9893               	bcf	3987,4,c	;volatile
  1912  004966                     
  1913                           ; BSR set to: 1
  1914                           ;main.c: 1300:     TRISB5 = 0;
  1915  004966  9A93               	bcf	3987,5,c	;volatile
  1916  004968                     
  1917                           ; BSR set to: 1
  1918                           ;main.c: 1301:     TRISB6 = 0;
  1919  004968  9C93               	bcf	3987,6,c	;volatile
  1920  00496A                     
  1921                           ; BSR set to: 1
  1922                           ;main.c: 1302:     TRISB7 = 0;
  1923  00496A  9E93               	bcf	3987,7,c	;volatile
  1924  00496C                     
  1925                           ; BSR set to: 1
  1926                           ;main.c: 1304:     TRISDbits.RD2 = 0;
  1927  00496C  9495               	bcf	149,2,c	;volatile
  1928  00496E                     
  1929                           ; BSR set to: 1
  1930                           ;main.c: 1305:     TRISB0 = 1;
  1931  00496E  8093               	bsf	3987,0,c	;volatile
  1932  004970                     
  1933                           ; BSR set to: 1
  1934                           ;main.c: 1307:     LATD3 = 0;
  1935  004970  968C               	bcf	3980,3,c	;volatile
  1936  004972                     
  1937                           ; BSR set to: 1
  1938                           ;main.c: 1308:     LATB4 = 0;
  1939  004972  988A               	bcf	3978,4,c	;volatile
  1940  004974                     
  1941                           ; BSR set to: 1
  1942                           ;main.c: 1309:     LATB5 = 0;
  1943  004974  9A8A               	bcf	3978,5,c	;volatile
  1944  004976                     
  1945                           ; BSR set to: 1
  1946                           ;main.c: 1310:     LATB6 = 0;
  1947  004976  9C8A               	bcf	3978,6,c	;volatile
  1948  004978                     
  1949                           ; BSR set to: 1
  1950                           ;main.c: 1311:     LATB7 = 0;
  1951  004978  9E8A               	bcf	3978,7,c	;volatile
  1952  00497A                     
  1953                           ; BSR set to: 1
  1954                           ;main.c: 1312:     LATD2 = 0;
  1955  00497A  948C               	bcf	3980,2,c	;volatile
  1956                           
  1957                           ;main.c: 1315:     T1CON = 0b00000000;
  1958  00497C  0E00               	movlw	0
  1959  00497E  6ECD               	movwf	205,c	;volatile
  1960  004980                     
  1961                           ; BSR set to: 1
  1962                           ;main.c: 1317:     configPwm(1);
  1963  004980  0E01               	movlw	1
  1964  004982  ECF0  F027         	call	_configPwm
  1965  004986                     
  1966                           ;main.c: 1318:     configPwm(2);
  1967  004986  0E02               	movlw	2
  1968  004988  ECF0  F027         	call	_configPwm
  1969  00498C                     
  1970                           ;main.c: 1319:     configurarAdc();
  1971  00498C  EC60  F02A         	call	_configurarAdc	;wreg free
  1972  004990                     
  1973                           ;main.c: 1321:     UART_init(9600);
  1974  004990  0E80               	movlw	128
  1975  004992  6E20               	movwf	UART_init@BAUD^0,c
  1976  004994  0E25               	movlw	37
  1977  004996  6E21               	movwf	(UART_init@BAUD+1)^0,c
  1978  004998  0E00               	movlw	0
  1979  00499A  6E22               	movwf	(UART_init@BAUD+2)^0,c
  1980  00499C  0E00               	movlw	0
  1981  00499E  6E23               	movwf	(UART_init@BAUD+3)^0,c
  1982  0049A0  ECE8  F025         	call	_UART_init	;wreg free
  1983  0049A4                     l10527:
  1984                           
  1985                           ;main.c: 1326:         if (!pausa) {
  1986  0049A4  0101               	movlb	1	; () banked
  1987  0049A6  51D0               	movf	_pausa& (0+255),w,b
  1988  0049A8  A4D8               	btfss	status,2,c
  1989  0049AA  EFD9  F024         	goto	u11811
  1990  0049AE  EFDB  F024         	goto	u11810
  1991  0049B2                     u11811:
  1992  0049B2  EFED  F024         	goto	l10543
  1993  0049B6                     u11810:
  1994  0049B6                     
  1995                           ; BSR set to: 1
  1996                           ;main.c: 1328:             if (!iniciado) {
  1997  0049B6  51CF               	movf	main@iniciado& (0+255),w,b
  1998  0049B8  A4D8               	btfss	status,2,c
  1999  0049BA  EFE1  F024         	goto	u11821
  2000  0049BE  EFE3  F024         	goto	u11820
  2001  0049C2                     u11821:
  2002  0049C2  EFE7  F024         	goto	l10539
  2003  0049C6                     u11820:
  2004  0049C6                     
  2005                           ; BSR set to: 1
  2006                           ;main.c: 1329:                 iniciado = 1;
  2007  0049C6  0E01               	movlw	1
  2008  0049C8  6FCF               	movwf	main@iniciado& (0+255),b
  2009  0049CA                     
  2010                           ; BSR set to: 1
  2011                           ;main.c: 1330:                 inicializarComportamientoBasico();
  2012  0049CA  EC40  F028         	call	_inicializarComportamientoBasico	;wreg free
  2013  0049CE                     l10539:
  2014                           
  2015                           ;main.c: 1341:             comportamientoBasico();
  2016  0049CE  EC19  F00F         	call	_comportamientoBasico	;wreg free
  2017  0049D2                     
  2018                           ;main.c: 1342:             forzarParoAuto();
  2019  0049D2  EC65  F02A         	call	_forzarParoAuto	;wreg free
  2020                           
  2021                           ;main.c: 1344:         } else {
  2022  0049D6  EFD2  F024         	goto	l10527
  2023  0049DA                     l10543:
  2024                           
  2025                           ; BSR set to: 1
  2026                           ;main.c: 1346:             iniciado = 0;
  2027  0049DA  0E00               	movlw	0
  2028  0049DC  6FCF               	movwf	main@iniciado& (0+255),b
  2029  0049DE  EFD2  F024         	goto	l10527
  2030  0049E2  EF07  F000         	goto	start
  2031  0049E6                     __end_of_main:
  2032                           	opt callstack 0
  2033                           
  2034 ;; *************** function _visualizarPasosRealizados *****************
  2035 ;; Defined at:
  2036 ;;		line 214 in file "main.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  numMovimient    2    0[BANK1 ] unsigned int 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2050 ;;      Params:         0       0       2       0       0       0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2052 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2053 ;;      Totals:         0       0       4       0       0       0       0       0       0
  2054 ;;Total ram usage:        4 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:   10
  2057 ;; This function calls:
  2058 ;;		_UART_printf
  2059 ;;		_sprintf
  2060 ;; This function is called by:
  2061 ;;		_main
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text1
  2066  0046B2                     __ptext1:
  2067                           	opt callstack 0
  2068  0046B2                     _visualizarPasosRealizados:
  2069                           	opt callstack 20
  2070  0046B2                     
  2071                           ;main.c: 216:     switch (mouse.curr_state) {
  2072  0046B2  EF7B  F023         	goto	l10157
  2073  0046B6                     l10147:
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;main.c: 218:             UART_printf("Enfrente\n");
  2077  0046B6  0ED2               	movlw	low STR_7
  2078  0046B8  6E07               	movwf	UART_printf@cadena^0,c
  2079  0046BA  0E7F               	movlw	high STR_7
  2080  0046BC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2081  0046BE  ECEB  F026         	call	_UART_printf	;wreg free
  2082                           
  2083                           ;main.c: 219:             break;
  2084  0046C2  EF9A  F023         	goto	l10159
  2085  0046C6                     l10149:
  2086                           
  2087                           ; BSR set to: 1
  2088                           ;main.c: 222:             UART_printf("Izquierda\n");
  2089  0046C6  0EC7               	movlw	low STR_8
  2090  0046C8  6E07               	movwf	UART_printf@cadena^0,c
  2091  0046CA  0E7F               	movlw	high STR_8
  2092  0046CC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2093  0046CE  ECEB  F026         	call	_UART_printf	;wreg free
  2094                           
  2095                           ;main.c: 223:             break;
  2096  0046D2  EF9A  F023         	goto	l10159
  2097  0046D6                     l10151:
  2098                           
  2099                           ; BSR set to: 1
  2100                           ;main.c: 226:             UART_printf("Derecha\n");
  2101  0046D6  0EDC               	movlw	low STR_9
  2102  0046D8  6E07               	movwf	UART_printf@cadena^0,c
  2103  0046DA  0E7F               	movlw	high STR_9
  2104  0046DC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2105  0046DE  ECEB  F026         	call	_UART_printf	;wreg free
  2106                           
  2107                           ;main.c: 227:             break;
  2108  0046E2  EF9A  F023         	goto	l10159
  2109  0046E6                     l10153:
  2110                           
  2111                           ; BSR set to: 1
  2112                           ;main.c: 230:             UART_printf("Alto\n");
  2113  0046E6  0EE5               	movlw	low STR_10
  2114  0046E8  6E07               	movwf	UART_printf@cadena^0,c
  2115  0046EA  0E7F               	movlw	high STR_10
  2116  0046EC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2117  0046EE  ECEB  F026         	call	_UART_printf	;wreg free
  2118                           
  2119                           ;main.c: 231:             break;
  2120  0046F2  EF9A  F023         	goto	l10159
  2121  0046F6                     l10157:
  2122  0046F6  0100               	movlb	0	; () banked
  2123  0046F8  51FD               	movf	_mouse& (0+255),w,b
  2124  0046FA  0101               	movlb	1	; () banked
  2125  0046FC  6FCB               	movwf	??_visualizarPasosRealizados& (0+255),b
  2126  0046FE  6BCC               	clrf	(??_visualizarPasosRealizados+1)& (0+255),b
  2127                           
  2128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2129                           ; Switch size 1, requested type "simple"
  2130                           ; Number of cases is 1, Range of values is 0 to 0
  2131                           ; switch strategies available:
  2132                           ; Name         Instructions Cycles
  2133                           ; simple_byte            4     3 (average)
  2134                           ;	Chosen strategy is simple_byte
  2135  004700  51CC               	movf	(??_visualizarPasosRealizados+1)& (0+255),w,b
  2136  004702  0A00               	xorlw	0	; case 0
  2137  004704  B4D8               	btfsc	status,2,c
  2138  004706  EF87  F023         	goto	l10835
  2139  00470A  EF9A  F023         	goto	l10159
  2140  00470E                     l10835:
  2141                           
  2142                           ; BSR set to: 1
  2143                           ; Switch size 1, requested type "simple"
  2144                           ; Number of cases is 4, Range of values is 1 to 4
  2145                           ; switch strategies available:
  2146                           ; Name         Instructions Cycles
  2147                           ; simple_byte           13     7 (average)
  2148                           ;	Chosen strategy is simple_byte
  2149  00470E  51CB               	movf	??_visualizarPasosRealizados& (0+255),w,b
  2150  004710  0A01               	xorlw	1	; case 1
  2151  004712  B4D8               	btfsc	status,2,c
  2152  004714  EF5B  F023         	goto	l10147
  2153  004718  0A03               	xorlw	3	; case 2
  2154  00471A  B4D8               	btfsc	status,2,c
  2155  00471C  EF63  F023         	goto	l10149
  2156  004720  0A01               	xorlw	1	; case 3
  2157  004722  B4D8               	btfsc	status,2,c
  2158  004724  EF6B  F023         	goto	l10151
  2159  004728  0A07               	xorlw	7	; case 4
  2160  00472A  B4D8               	btfsc	status,2,c
  2161  00472C  EF73  F023         	goto	l10153
  2162  004730  EF9A  F023         	goto	l10159
  2163  004734                     l10159:
  2164                           
  2165                           ;main.c: 234:     sprintf(buffer, "\rMovimientos Realizados = %d\r\n\n", numMovimientos)
      +                          ;
  2166  004734  0E8A               	movlw	low _buffer
  2167  004736  0100               	movlb	0	; () banked
  2168  004738  6FE7               	movwf	sprintf@s& (0+255),b
  2169  00473A  0E01               	movlw	high _buffer
  2170  00473C  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  2171  00473E  0E40               	movlw	low STR_11
  2172  004740  6FE9               	movwf	sprintf@fmt& (0+255),b
  2173  004742  0E7F               	movlw	high STR_11
  2174  004744  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  2175  004746  C1C9  F0EB         	movff	visualizarPasosRealizados@numMovimientos,?_sprintf+4
  2176  00474A  C1CA  F0EC         	movff	visualizarPasosRealizados@numMovimientos+1,?_sprintf+5
  2177  00474E  EC9E  F027         	call	_sprintf	;wreg free
  2178  004752                     
  2179                           ;main.c: 235:     UART_printf(buffer);
  2180  004752  0E8A               	movlw	low _buffer
  2181  004754  6E07               	movwf	UART_printf@cadena^0,c
  2182  004756  0E01               	movlw	high _buffer
  2183  004758  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2184  00475A  ECEB  F026         	call	_UART_printf	;wreg free
  2185  00475E  0012               	return		;funcret
  2186  004760                     __end_of_visualizarPasosRealizados:
  2187                           	opt callstack 0
  2188                           
  2189 ;; *************** function _sprintf *****************
  2190 ;; Defined at:
  2191 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  s               2  135[BANK0 ] PTR unsigned char 
  2194 ;;		 -> buffer(50), 
  2195 ;;  fmt             2  137[BANK0 ] PTR const unsigned char 
  2196 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2197 ;;		 -> STR_3(34), 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  f               6  147[BANK0 ] struct _IO_FILE
  2200 ;;  ap              2  145[BANK0 ] PTR void [1]
  2201 ;;		 -> ?_sprintf(2), 
  2202 ;;  ret             2    0        int 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  2  135[BANK0 ] int 
  2205 ;; Registers used:
  2206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2212 ;;      Params:         0       8       0       0       0       0       0       0       0
  2213 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2215 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2216 ;;Total ram usage:       18 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    9
  2219 ;; This function calls:
  2220 ;;		_vfprintf
  2221 ;; This function is called by:
  2222 ;;		_visualizarPasosRealizados
  2223 ;;		_probarSensores
  2224 ;;		_probarUltrasonico
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text2
  2229  004F3C                     __ptext2:
  2230                           	opt callstack 0
  2231  004F3C                     _sprintf:
  2232                           	opt callstack 20
  2233  004F3C  0EEB               	movlw	low (?_sprintf+4)
  2234  004F3E  0100               	movlb	0	; () banked
  2235  004F40  6FF1               	movwf	sprintf@ap& (0+255),b
  2236  004F42  0E00               	movlw	high (?_sprintf+4)
  2237  004F44  6FF2               	movwf	(sprintf@ap+1)& (0+255),b
  2238  004F46  C0E7  F0F3         	movff	sprintf@s,sprintf@f
  2239  004F4A  C0E8  F0F4         	movff	sprintf@s+1,sprintf@f+1
  2240  004F4E                     
  2241                           ; BSR set to: 0
  2242  004F4E  0E00               	movlw	0
  2243  004F50  6FF6               	movwf	(sprintf@f+3)& (0+255),b
  2244  004F52  0E00               	movlw	0
  2245  004F54  6FF5               	movwf	(sprintf@f+2)& (0+255),b
  2246  004F56                     
  2247                           ; BSR set to: 0
  2248  004F56  0E00               	movlw	0
  2249  004F58  6FF8               	movwf	(sprintf@f+5)& (0+255),b
  2250  004F5A  0E00               	movlw	0
  2251  004F5C  6FF7               	movwf	(sprintf@f+4)& (0+255),b
  2252  004F5E                     
  2253                           ; BSR set to: 0
  2254  004F5E  0EF3               	movlw	low sprintf@f
  2255  004F60  6FDF               	movwf	vfprintf@fp& (0+255),b
  2256  004F62  0E00               	movlw	high sprintf@f
  2257  004F64  6FE0               	movwf	(vfprintf@fp+1)& (0+255),b
  2258  004F66  C0E9  F0E1         	movff	sprintf@fmt,vfprintf@fmt
  2259  004F6A  C0EA  F0E2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2260  004F6E  0EF1               	movlw	low sprintf@ap
  2261  004F70  6FE3               	movwf	vfprintf@ap& (0+255),b
  2262  004F72  0E00               	movlw	high sprintf@ap
  2263  004F74  6FE4               	movwf	(vfprintf@ap+1)& (0+255),b
  2264  004F76  EC20  F026         	call	_vfprintf	;wreg free
  2265  004F7A  0100               	movlb	0	; () banked
  2266  004F7C  51F5               	movf	(sprintf@f+2)& (0+255),w,b
  2267  004F7E  25E7               	addwf	sprintf@s& (0+255),w,b
  2268  004F80  6ED9               	movwf	fsr2l,c
  2269  004F82  51F6               	movf	(sprintf@f+3)& (0+255),w,b
  2270  004F84  21E8               	addwfc	(sprintf@s+1)& (0+255),w,b
  2271  004F86  6EDA               	movwf	fsr2h,c
  2272  004F88  0E00               	movlw	0
  2273  004F8A  6EDF               	movwf	indf2,c
  2274  004F8C                     
  2275                           ; BSR set to: 0
  2276  004F8C  0012               	return		;funcret
  2277  004F8E                     __end_of_sprintf:
  2278                           	opt callstack 0
  2279                           
  2280 ;; *************** function _vfprintf *****************
  2281 ;; Defined at:
  2282 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  fp              2  127[BANK0 ] PTR struct _IO_FILE
  2285 ;;		 -> sprintf@f(6), 
  2286 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  2287 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2288 ;;		 -> STR_3(34), 
  2289 ;;  ap              2  131[BANK0 ] PTR PTR void 
  2290 ;;		 -> sprintf@ap(2), 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  cfmt            2  133[BANK0 ] PTR unsigned char 
  2293 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2294 ;;		 -> STR_3(34), 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  2  127[BANK0 ] int 
  2297 ;; Registers used:
  2298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2304 ;;      Params:         0       6       0       0       0       0       0       0       0
  2305 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2307 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2308 ;;Total ram usage:        8 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    8
  2311 ;; This function calls:
  2312 ;;		_vfpfcnvrt
  2313 ;; This function is called by:
  2314 ;;		_sprintf
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text3
  2319  004C40                     __ptext3:
  2320                           	opt callstack 0
  2321  004C40                     _vfprintf:
  2322                           	opt callstack 20
  2323  004C40                     
  2324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2325  004C40  C0E1  F0E5         	movff	vfprintf@fmt,vfprintf@cfmt
  2326  004C44  C0E2  F0E6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2327  004C48                     
  2328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2329  004C48  0E00               	movlw	0
  2330  004C4A  0101               	movlb	1	; () banked
  2331  004C4C  6F29               	movwf	(_nout+1)& (0+255),b
  2332  004C4E  0E00               	movlw	0
  2333  004C50  6F28               	movwf	_nout& (0+255),b
  2334                           
  2335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2336  004C52  EF42  F026         	goto	l9585
  2337  004C56                     l9583:
  2338                           
  2339                           ; BSR set to: 1
  2340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2341  004C56  C0DF  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  2342  004C5A  C0E0  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2343  004C5E  0EE5               	movlw	low vfprintf@cfmt
  2344  004C60  0100               	movlb	0	; () banked
  2345  004C62  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  2346  004C64  0E00               	movlw	high vfprintf@cfmt
  2347  004C66  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2348  004C68  C0E3  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  2349  004C6C  C0E4  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2350  004C70  ECEC  F005         	call	_vfpfcnvrt	;wreg free
  2351  004C74  0100               	movlb	0	; () banked
  2352  004C76  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  2353  004C78  0101               	movlb	1	; () banked
  2354  004C7A  2728               	addwf	_nout& (0+255),f,b
  2355  004C7C  0100               	movlb	0	; () banked
  2356  004C7E  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2357  004C80  0101               	movlb	1	; () banked
  2358  004C82  2329               	addwfc	(_nout+1)& (0+255),f,b
  2359  004C84                     l9585:
  2360                           
  2361                           ; BSR set to: 1
  2362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2363  004C84  C0E5  FFF6         	movff	vfprintf@cfmt,tblptrl
  2364  004C88  C0E6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2365  004C8C                     	if	0	;tblptru may be non-zero
  2366  004C8C                     	endif
  2367  004C8C                     	if	0	;tblptru may be non-zero
  2368  004C8C                     	endif
  2369  004C8C  0008               	tblrd		*
  2370  004C8E  50F5               	movf	tablat,w,c
  2371  004C90  0900               	iorlw	0
  2372  004C92  A4D8               	btfss	status,2,c
  2373  004C94  EF4E  F026         	goto	u11011
  2374  004C98  EF50  F026         	goto	u11010
  2375  004C9C                     u11011:
  2376  004C9C  EF2B  F026         	goto	l9583
  2377  004CA0                     u11010:
  2378  004CA0                     
  2379                           ; BSR set to: 1
  2380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2381  004CA0  C128  F0DF         	movff	_nout,?_vfprintf
  2382  004CA4  C129  F0E0         	movff	_nout+1,?_vfprintf+1
  2383  004CA8                     
  2384                           ; BSR set to: 1
  2385  004CA8  0012               	return		;funcret
  2386  004CAA                     __end_of_vfprintf:
  2387                           	opt callstack 0
  2388                           
  2389 ;; *************** function _vfpfcnvrt *****************
  2390 ;; Defined at:
  2391 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  2394 ;;		 -> sprintf@f(6), 
  2395 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  2396 ;;		 -> vfprintf@cfmt(2), 
  2397 ;;  ap              2  101[BANK0 ] PTR PTR void 
  2398 ;;		 -> sprintf@ap(2), 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  ll              8  107[BANK0 ] long long 
  2401 ;;  llu             8    0        unsigned long long 
  2402 ;;  f               4  119[BANK0 ] unsigned long long 
  2403 ;;  ct              3  123[BANK0 ] unsigned char [3]
  2404 ;;  vp              3    0        PTR void 
  2405 ;;  cp              3    0        PTR unsigned char 
  2406 ;;  i               2    0        int 
  2407 ;;  done            2    0        int 
  2408 ;;  c               1  126[BANK0 ] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  2   97[BANK0 ] int 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2418 ;;      Params:         0       6       0       0       0       0       0       0       0
  2419 ;;      Locals:         0      20       0       0       0       0       0       0       0
  2420 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2421 ;;      Totals:         0      30       0       0       0       0       0       0       0
  2422 ;;Total ram usage:       30 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    7
  2425 ;; This function calls:
  2426 ;;		_atoi
  2427 ;;		_dtoa
  2428 ;;		_efgtoa
  2429 ;;		_fputc
  2430 ;;		_isdigit
  2431 ;;		_isupper
  2432 ;;		_strncmp
  2433 ;;		_tolower
  2434 ;; This function is called by:
  2435 ;;		_vfprintf
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text4
  2440  000BD8                     __ptext4:
  2441                           	opt callstack 0
  2442  000BD8                     _vfpfcnvrt:
  2443                           	opt callstack 20
  2444  000BD8                     
  2445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2446  000BD8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2447  000BDC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2448  000BE0  CFDE FFF6          	movff	postinc2,tblptrl
  2449  000BE4  CFDD FFF7          	movff	postdec2,tblptrh
  2450  000BE8                     	if	0	;tblptru may be non-zero
  2451  000BE8                     	endif
  2452  000BE8                     	if	0	;tblptru may be non-zero
  2453  000BE8                     	endif
  2454  000BE8  0008               	tblrd		*
  2455  000BEA  50F5               	movf	tablat,w,c
  2456  000BEC  0A25               	xorlw	37
  2457  000BEE  A4D8               	btfss	status,2,c
  2458  000BF0  EFFC  F005         	goto	u10631
  2459  000BF4  EFFE  F005         	goto	u10630
  2460  000BF8                     u10631:
  2461  000BF8  EF6B  F008         	goto	l9419
  2462  000BFC                     u10630:
  2463  000BFC                     
  2464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2465  000BFC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2466  000C00  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2467  000C04  2ADE               	incf	postinc2,f,c
  2468  000C06  0E00               	movlw	0
  2469  000C08  22DD               	addwfc	postdec2,f,c
  2470  000C0A                     
  2471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2472  000C0A  0E00               	movlw	0
  2473  000C0C  0101               	movlb	1	; () banked
  2474  000C0E  6F2B               	movwf	(_width+1)& (0+255),b
  2475  000C10  0E00               	movlw	0
  2476  000C12  6F2A               	movwf	_width& (0+255),b
  2477  000C14  C12A  F12E         	movff	_width,_flags
  2478  000C18  C12B  F12F         	movff	_width+1,_flags+1
  2479  000C1C                     
  2480                           ; BSR set to: 1
  2481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2482  000C1C  692C               	setf	_prec& (0+255),b
  2483  000C1E  692D               	setf	(_prec+1)& (0+255),b
  2484  000C20                     
  2485                           ; BSR set to: 1
  2486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2487  000C20  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2488  000C24  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2489  000C28  CFDE FFF6          	movff	postinc2,tblptrl
  2490  000C2C  CFDD FFF7          	movff	postdec2,tblptrh
  2491  000C30                     	if	0	;tblptru may be non-zero
  2492  000C30                     	endif
  2493  000C30                     	if	0	;tblptru may be non-zero
  2494  000C30                     	endif
  2495  000C30  0008               	tblrd		*
  2496  000C32  50F5               	movf	tablat,w,c
  2497  000C34  0A2E               	xorlw	46
  2498  000C36  A4D8               	btfss	status,2,c
  2499  000C38  EF20  F006         	goto	u10641
  2500  000C3C  EF22  F006         	goto	u10640
  2501  000C40                     u10641:
  2502  000C40  EFA0  F006         	goto	l9355
  2503  000C44                     u10640:
  2504  000C44                     
  2505                           ; BSR set to: 1
  2506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2507  000C44  0E00               	movlw	0
  2508  000C46  6F2D               	movwf	(_prec+1)& (0+255),b
  2509  000C48  0E00               	movlw	0
  2510  000C4A  6F2C               	movwf	_prec& (0+255),b
  2511  000C4C                     
  2512                           ; BSR set to: 1
  2513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2514  000C4C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2515  000C50  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2516  000C54  2ADE               	incf	postinc2,f,c
  2517  000C56  0E00               	movlw	0
  2518  000C58  22DD               	addwfc	postdec2,f,c
  2519  000C5A                     
  2520                           ; BSR set to: 1
  2521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2522  000C5A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2523  000C5E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2524  000C62  CFDE FFF6          	movff	postinc2,tblptrl
  2525  000C66  CFDD FFF7          	movff	postdec2,tblptrh
  2526  000C6A                     	if	0	;tblptru may be non-zero
  2527  000C6A                     	endif
  2528  000C6A                     	if	0	;tblptru may be non-zero
  2529  000C6A                     	endif
  2530  000C6A  0008               	tblrd		*
  2531  000C6C  50F5               	movf	tablat,w,c
  2532  000C6E  0A2A               	xorlw	42
  2533  000C70  A4D8               	btfss	status,2,c
  2534  000C72  EF3D  F006         	goto	u10651
  2535  000C76  EF3F  F006         	goto	u10650
  2536  000C7A                     u10651:
  2537  000C7A  EF5C  F006         	goto	l9345
  2538  000C7E                     u10650:
  2539  000C7E                     
  2540                           ; BSR set to: 1
  2541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2542  000C7E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2543  000C82  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2544  000C86  2ADE               	incf	postinc2,f,c
  2545  000C88  0E00               	movlw	0
  2546  000C8A  22DD               	addwfc	postdec2,f,c
  2547                           
  2548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2549  000C8C  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2550  000C90  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2551  000C94  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2552  000C98  0E02               	movlw	2
  2553  000C9A  26DE               	addwf	postinc2,f,c
  2554  000C9C  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2555  000CA0  0E00               	movlw	0
  2556  000CA2  22DD               	addwfc	postdec2,f,c
  2557  000CA4  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2558  000CA8  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2559  000CAC  CFDE F12C          	movff	postinc2,_prec
  2560  000CB0  CFDD F12D          	movff	postdec2,_prec+1
  2561                           
  2562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2563  000CB4  EFA0  F006         	goto	l9355
  2564  000CB8                     l9345:
  2565                           
  2566                           ; BSR set to: 1
  2567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2568  000CB8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2569  000CBC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2570  000CC0  CFDE F00D          	movff	postinc2,atoi@s
  2571  000CC4  CFDD F00E          	movff	postdec2,atoi@s+1
  2572  000CC8  EC2C  F01A         	call	_atoi	;wreg free
  2573  000CCC  C00D  F12C         	movff	?_atoi,_prec
  2574  000CD0  C00E  F12D         	movff	?_atoi+1,_prec+1
  2575                           
  2576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2577  000CD4  EF73  F006         	goto	l9349
  2578  000CD8                     l9347:
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2582  000CD8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2583  000CDC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2584  000CE0  2ADE               	incf	postinc2,f,c
  2585  000CE2  0E00               	movlw	0
  2586  000CE4  22DD               	addwfc	postdec2,f,c
  2587  000CE6                     l9349:
  2588  000CE6  0ED0               	movlw	208
  2589  000CE8  0100               	movlb	0	; () banked
  2590  000CEA  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  2591  000CEC  0EFF               	movlw	255
  2592  000CEE  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2593  000CF0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2594  000CF4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2595  000CF8  CFDE FFF6          	movff	postinc2,tblptrl
  2596  000CFC  CFDD FFF7          	movff	postdec2,tblptrh
  2597  000D00                     	if	0	;tblptru may be non-zero
  2598  000D00                     	endif
  2599  000D00                     	if	0	;tblptru may be non-zero
  2600  000D00                     	endif
  2601  000D00  0008               	tblrd		*
  2602  000D02  50F5               	movf	tablat,w,c
  2603  000D04  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2604  000D06  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2605  000D08  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  2606  000D0A  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2607  000D0C  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2608  000D0E  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2609  000D10  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2610  000D12  E10A               	bnz	u10660
  2611  000D14  0E0A               	movlw	10
  2612  000D16  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2613  000D18  A0D8               	btfss	status,0,c
  2614  000D1A  EF91  F006         	goto	u10661
  2615  000D1E  EF94  F006         	goto	u10660
  2616  000D22                     u10661:
  2617  000D22  0E01               	movlw	1
  2618  000D24  EF95  F006         	goto	u10670
  2619  000D28                     u10660:
  2620  000D28  0E00               	movlw	0
  2621  000D2A                     u10670:
  2622  000D2A  6FD3               	movwf	_vfpfcnvrt$946& (0+255),b
  2623  000D2C  6BD4               	clrf	(_vfpfcnvrt$946+1)& (0+255),b
  2624  000D2E                     
  2625                           ; BSR set to: 0
  2626  000D2E  51D3               	movf	_vfpfcnvrt$946& (0+255),w,b
  2627  000D30  11D4               	iorwf	(_vfpfcnvrt$946+1)& (0+255),w,b
  2628  000D32  A4D8               	btfss	status,2,c
  2629  000D34  EF9E  F006         	goto	u10681
  2630  000D38  EFA0  F006         	goto	u10680
  2631  000D3C                     u10681:
  2632  000D3C  EF6C  F006         	goto	l9347
  2633  000D40                     u10680:
  2634  000D40                     l9355:
  2635                           
  2636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2637  000D40  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2638  000D44  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2639  000D48  CFDE FFF6          	movff	postinc2,tblptrl
  2640  000D4C  CFDD FFF7          	movff	postdec2,tblptrh
  2641  000D50                     	if	0	;tblptru may be non-zero
  2642  000D50                     	endif
  2643  000D50                     	if	0	;tblptru may be non-zero
  2644  000D50                     	endif
  2645  000D50  0008               	tblrd		*
  2646  000D52  50F5               	movf	tablat,w,c
  2647  000D54  6E0C               	movwf	tolower@c^0,c
  2648  000D56  6A0D               	clrf	(tolower@c+1)^0,c
  2649  000D58  ECBB  F026         	call	_tolower	;wreg free
  2650  000D5C  500C               	movf	?_tolower^0,w,c
  2651  000D5E  0100               	movlb	0	; () banked
  2652  000D60  6FDB               	movwf	vfpfcnvrt@ct& (0+255),b
  2653  000D62                     
  2654                           ; BSR set to: 0
  2655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2656  000D62  51DB               	movf	vfpfcnvrt@ct& (0+255),w,b
  2657  000D64  B4D8               	btfsc	status,2,c
  2658  000D66  EFB7  F006         	goto	u10691
  2659  000D6A  EFB9  F006         	goto	u10690
  2660  000D6E                     u10691:
  2661  000D6E  EFF3  F006         	goto	l9365
  2662  000D72                     u10690:
  2663  000D72                     
  2664                           ; BSR set to: 0
  2665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2666  000D72  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2667  000D76  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2668  000D7A  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2669  000D7E  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2670  000D82  0E01               	movlw	1
  2671  000D84  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2672  000D86  0E00               	movlw	0
  2673  000D88  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2674  000D8A  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2675  000D8E  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2676  000D92                     	if	0	;tblptru may be non-zero
  2677  000D92                     	endif
  2678  000D92                     	if	0	;tblptru may be non-zero
  2679  000D92                     	endif
  2680  000D92  0008               	tblrd		*
  2681  000D94  50F5               	movf	tablat,w,c
  2682  000D96  6E0C               	movwf	tolower@c^0,c
  2683  000D98  6A0D               	clrf	(tolower@c+1)^0,c
  2684  000D9A  ECBB  F026         	call	_tolower	;wreg free
  2685  000D9E  500C               	movf	?_tolower^0,w,c
  2686  000DA0  0100               	movlb	0	; () banked
  2687  000DA2  6FDC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2688  000DA4                     
  2689                           ; BSR set to: 0
  2690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2691  000DA4  51DC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2692  000DA6  B4D8               	btfsc	status,2,c
  2693  000DA8  EFD8  F006         	goto	u10701
  2694  000DAC  EFDA  F006         	goto	u10700
  2695  000DB0                     u10701:
  2696  000DB0  EFF3  F006         	goto	l9365
  2697  000DB4                     u10700:
  2698  000DB4                     
  2699                           ; BSR set to: 0
  2700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2701  000DB4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2702  000DB8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2703  000DBC  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2704  000DC0  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2705  000DC4  0E02               	movlw	2
  2706  000DC6  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2707  000DC8  0E00               	movlw	0
  2708  000DCA  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2709  000DCC  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2710  000DD0  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2711  000DD4                     	if	0	;tblptru may be non-zero
  2712  000DD4                     	endif
  2713  000DD4                     	if	0	;tblptru may be non-zero
  2714  000DD4                     	endif
  2715  000DD4  0008               	tblrd		*
  2716  000DD6  50F5               	movf	tablat,w,c
  2717  000DD8  6E0C               	movwf	tolower@c^0,c
  2718  000DDA  6A0D               	clrf	(tolower@c+1)^0,c
  2719  000DDC  ECBB  F026         	call	_tolower	;wreg free
  2720  000DE0  500C               	movf	?_tolower^0,w,c
  2721  000DE2  0100               	movlb	0	; () banked
  2722  000DE4  6FDD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2723  000DE6                     l9365:
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2727  000DE6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2728  000DEA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2729  000DEE  CFDE FFF6          	movff	postinc2,tblptrl
  2730  000DF2  CFDD FFF7          	movff	postdec2,tblptrh
  2731  000DF6                     	if	0	;tblptru may be non-zero
  2732  000DF6                     	endif
  2733  000DF6                     	if	0	;tblptru may be non-zero
  2734  000DF6                     	endif
  2735  000DF6  0008               	tblrd		*
  2736  000DF8  50F5               	movf	tablat,w,c
  2737  000DFA  0A64               	xorlw	100
  2738  000DFC  B4D8               	btfsc	status,2,c
  2739  000DFE  EF03  F007         	goto	u10711
  2740  000E02  EF05  F007         	goto	u10710
  2741  000E06                     u10711:
  2742  000E06  EF17  F007         	goto	l9369
  2743  000E0A                     u10710:
  2744  000E0A                     
  2745                           ; BSR set to: 0
  2746  000E0A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2747  000E0E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2748  000E12  CFDE FFF6          	movff	postinc2,tblptrl
  2749  000E16  CFDD FFF7          	movff	postdec2,tblptrh
  2750  000E1A                     	if	0	;tblptru may be non-zero
  2751  000E1A                     	endif
  2752  000E1A                     	if	0	;tblptru may be non-zero
  2753  000E1A                     	endif
  2754  000E1A  0008               	tblrd		*
  2755  000E1C  50F5               	movf	tablat,w,c
  2756  000E1E  0A69               	xorlw	105
  2757  000E20  A4D8               	btfss	status,2,c
  2758  000E22  EF15  F007         	goto	u10721
  2759  000E26  EF17  F007         	goto	u10720
  2760  000E2A                     u10721:
  2761  000E2A  EF57  F007         	goto	l9375
  2762  000E2E                     u10720:
  2763  000E2E                     l9369:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2767  000E2E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2768  000E32  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2769  000E36  2ADE               	incf	postinc2,f,c
  2770  000E38  0E00               	movlw	0
  2771  000E3A  22DD               	addwfc	postdec2,f,c
  2772                           
  2773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2774  000E3C  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2775  000E40  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2776  000E44  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2777  000E48  0E02               	movlw	2
  2778  000E4A  26DE               	addwf	postinc2,f,c
  2779  000E4C  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2780  000E50  0E00               	movlw	0
  2781  000E52  22DD               	addwfc	postdec2,f,c
  2782  000E54  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2783  000E58  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2784  000E5C  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  2785  000E60  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  2786  000E64  0E00               	movlw	0
  2787  000E66  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2788  000E68  0EFF               	movlw	-1
  2789  000E6A  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2790  000E6C  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2791  000E6E  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2792  000E70  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2793  000E72  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2794  000E74  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2795  000E76                     
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2798  000E76  C0C1  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  2799  000E7A  C0C2  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2800  000E7E  C0CB  F023         	movff	vfpfcnvrt@ll,dtoa@d
  2801  000E82  C0CC  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2802  000E86  C0CD  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2803  000E8A  C0CE  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2804  000E8E  C0CF  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2805  000E92  C0D0  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2806  000E96  C0D1  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2807  000E9A  C0D2  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2808  000E9E  ECCF  F014         	call	_dtoa	;wreg free
  2809  000EA2  C021  F0C1         	movff	?_dtoa,?_vfpfcnvrt
  2810  000EA6  C022  F0C2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2811  000EAA  EF86  F008         	goto	l911
  2812  000EAE                     l9375:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2816  000EAE  0E66               	movlw	102
  2817  000EB0  19DB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2818  000EB2  A4D8               	btfss	status,2,c
  2819  000EB4  EF5E  F007         	goto	u10731
  2820  000EB8  EF60  F007         	goto	u10730
  2821  000EBC                     u10731:
  2822  000EBC  EFA0  F007         	goto	l9387
  2823  000EC0                     u10730:
  2824  000EC0                     
  2825                           ; BSR set to: 0
  2826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2827  000EC0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2828  000EC4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2829  000EC8  CFDE FFF6          	movff	postinc2,tblptrl
  2830  000ECC  CFDD FFF7          	movff	postdec2,tblptrh
  2831  000ED0                     	if	0	;tblptru may be non-zero
  2832  000ED0                     	endif
  2833  000ED0                     	if	0	;tblptru may be non-zero
  2834  000ED0                     	endif
  2835  000ED0  0008               	tblrd		*
  2836  000ED2  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  2837  000ED6                     
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2840  000ED6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2841  000EDA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2842  000EDE  2ADE               	incf	postinc2,f,c
  2843  000EE0  0E00               	movlw	0
  2844  000EE2  22DD               	addwfc	postdec2,f,c
  2845  000EE4                     
  2846                           ; BSR set to: 0
  2847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2848  000EE4  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2849  000EE8  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2850  000EEC  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2851  000EF0  0E04               	movlw	4
  2852  000EF2  26DE               	addwf	postinc2,f,c
  2853  000EF4  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2854  000EF8  0E00               	movlw	0
  2855  000EFA  22DD               	addwfc	postdec2,f,c
  2856  000EFC  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2857  000F00  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2858  000F04  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  2859  000F08  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  2860  000F0C  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  2861  000F10  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  2862  000F14                     l9383:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2866  000F14  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  2867  000F18  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2868  000F1C  C0D7  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  2869  000F20  C0D8  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2870  000F24  C0D9  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2871  000F28  C0DA  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2872  000F2C  C0DE  F083         	movff	vfpfcnvrt@c,efgtoa@c
  2873  000F30  EC09  F000         	call	_efgtoa	;wreg free
  2874  000F34  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  2875  000F38  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2876  000F3C  EF86  F008         	goto	l911
  2877  000F40                     l9387:
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2881  000F40  0EDB               	movlw	low vfpfcnvrt@ct
  2882  000F42  6E06               	movwf	strncmp@_l^0,c
  2883  000F44  0E00               	movlw	high vfpfcnvrt@ct
  2884  000F46  6E07               	movwf	(strncmp@_l+1)^0,c
  2885  000F48  0EFB               	movlw	low STR_22
  2886  000F4A  6E08               	movwf	strncmp@_r^0,c
  2887  000F4C  0E7F               	movlw	high STR_22
  2888  000F4E  6E09               	movwf	(strncmp@_r+1)^0,c
  2889  000F50  0E00               	movlw	0
  2890  000F52  6E0B               	movwf	(strncmp@n+1)^0,c
  2891  000F54  0E02               	movlw	2
  2892  000F56  6E0A               	movwf	strncmp@n^0,c
  2893  000F58  ECA7  F020         	call	_strncmp	;wreg free
  2894  000F5C  5006               	movf	?_strncmp^0,w,c
  2895  000F5E  1007               	iorwf	(?_strncmp+1)^0,w,c
  2896  000F60  A4D8               	btfss	status,2,c
  2897  000F62  EFB5  F007         	goto	u10741
  2898  000F66  EFB7  F007         	goto	u10740
  2899  000F6A                     u10741:
  2900  000F6A  EF33  F008         	goto	l9403
  2901  000F6E                     u10740:
  2902  000F6E                     
  2903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2904  000F6E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2905  000F72  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2906  000F76  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2907  000F7A  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2908  000F7E  0E01               	movlw	1
  2909  000F80  0100               	movlb	0	; () banked
  2910  000F82  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2911  000F84  0E00               	movlw	0
  2912  000F86  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2913  000F88  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2914  000F8C  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2915  000F90                     	if	0	;tblptru may be non-zero
  2916  000F90                     	endif
  2917  000F90                     	if	0	;tblptru may be non-zero
  2918  000F90                     	endif
  2919  000F90  0008               	tblrd		*
  2920  000F92  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  2921  000F96  0EBF               	movlw	191
  2922  000F98  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  2923  000F9A  0EFF               	movlw	255
  2924  000F9C  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2925  000F9E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2926  000FA2  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2927  000FA6  CFDE FFF6          	movff	postinc2,tblptrl
  2928  000FAA  CFDD FFF7          	movff	postdec2,tblptrh
  2929  000FAE                     	if	0	;tblptru may be non-zero
  2930  000FAE                     	endif
  2931  000FAE                     	if	0	;tblptru may be non-zero
  2932  000FAE                     	endif
  2933  000FAE  0008               	tblrd		*
  2934  000FB0  50F5               	movf	tablat,w,c
  2935  000FB2  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2936  000FB4  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2937  000FB6  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  2938  000FB8  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2939  000FBA  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2940  000FBC  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2941  000FBE  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2942  000FC0  E10A               	bnz	u10750
  2943  000FC2  0E1A               	movlw	26
  2944  000FC4  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2945  000FC6  A0D8               	btfss	status,0,c
  2946  000FC8  EFE8  F007         	goto	u10751
  2947  000FCC  EFEB  F007         	goto	u10750
  2948  000FD0                     u10751:
  2949  000FD0  0E01               	movlw	1
  2950  000FD2  EFEC  F007         	goto	u10760
  2951  000FD6                     u10750:
  2952  000FD6  0E00               	movlw	0
  2953  000FD8                     u10760:
  2954  000FD8  6FD5               	movwf	_vfpfcnvrt$951& (0+255),b
  2955  000FDA  6BD6               	clrf	(_vfpfcnvrt$951+1)& (0+255),b
  2956  000FDC                     
  2957                           ; BSR set to: 0
  2958  000FDC  51D5               	movf	_vfpfcnvrt$951& (0+255),w,b
  2959  000FDE  11D6               	iorwf	(_vfpfcnvrt$951+1)& (0+255),w,b
  2960  000FE0  B4D8               	btfsc	status,2,c
  2961  000FE2  EFF5  F007         	goto	u10771
  2962  000FE6  EFF7  F007         	goto	u10770
  2963  000FEA                     u10771:
  2964  000FEA  EF11  F008         	goto	l9397
  2965  000FEE                     u10770:
  2966  000FEE                     
  2967                           ; BSR set to: 0
  2968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2969  000FEE  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2970  000FF2  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2971  000FF6  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2972  000FFA  0E04               	movlw	4
  2973  000FFC  26DE               	addwf	postinc2,f,c
  2974  000FFE  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2975  001002  0E00               	movlw	0
  2976  001004  22DD               	addwfc	postdec2,f,c
  2977  001006  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2978  00100A  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2979  00100E  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  2980  001012  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  2981  001016  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  2982  00101A  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  2983                           
  2984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2985  00101E  EF29  F008         	goto	l919
  2986  001022                     l9397:
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2990  001022  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2991  001026  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2992  00102A  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2993  00102E  0E04               	movlw	4
  2994  001030  26DE               	addwf	postinc2,f,c
  2995  001032  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2996  001036  0E00               	movlw	0
  2997  001038  22DD               	addwfc	postdec2,f,c
  2998  00103A  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2999  00103E  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3000  001042  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  3001  001046  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  3002  00104A  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  3003  00104E  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  3004  001052                     l919:
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3008  001052  0E02               	movlw	2
  3009  001054  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3010  001058  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3011  00105C  26DE               	addwf	postinc2,f,c
  3012  00105E  0E00               	movlw	0
  3013  001060  22DD               	addwfc	postdec2,f,c
  3014  001062  EF8A  F007         	goto	l9383
  3015  001066                     l9403:
  3016                           
  3017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3018  001066  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3019  00106A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3020  00106E  CFDE FFF6          	movff	postinc2,tblptrl
  3021  001072  CFDD FFF7          	movff	postdec2,tblptrh
  3022  001076                     	if	0	;tblptru may be non-zero
  3023  001076                     	endif
  3024  001076                     	if	0	;tblptru may be non-zero
  3025  001076                     	endif
  3026  001076  0008               	tblrd		*
  3027  001078  50F5               	movf	tablat,w,c
  3028  00107A  0A25               	xorlw	37
  3029  00107C  A4D8               	btfss	status,2,c
  3030  00107E  EF43  F008         	goto	u10781
  3031  001082  EF45  F008         	goto	u10780
  3032  001086                     u10781:
  3033  001086  EF5D  F008         	goto	l9413
  3034  00108A                     u10780:
  3035  00108A                     
  3036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3037  00108A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3038  00108E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3039  001092  2ADE               	incf	postinc2,f,c
  3040  001094  0E00               	movlw	0
  3041  001096  22DD               	addwfc	postdec2,f,c
  3042  001098                     
  3043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3044  001098  0E00               	movlw	0
  3045  00109A  6E07               	movwf	(fputc@c+1)^0,c
  3046  00109C  0E25               	movlw	37
  3047  00109E  6E06               	movwf	fputc@c^0,c
  3048  0010A0  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  3049  0010A4  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3050  0010A8  EC12  F021         	call	_fputc	;wreg free
  3051  0010AC                     l9409:
  3052                           
  3053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3054  0010AC  0E00               	movlw	0
  3055  0010AE  0100               	movlb	0	; () banked
  3056  0010B0  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3057  0010B2  0E01               	movlw	1
  3058  0010B4  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  3059  0010B6  EF86  F008         	goto	l911
  3060  0010BA                     l9413:
  3061                           
  3062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3063  0010BA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3064  0010BE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3065  0010C2  2ADE               	incf	postinc2,f,c
  3066  0010C4  0E00               	movlw	0
  3067  0010C6  22DD               	addwfc	postdec2,f,c
  3068  0010C8                     
  3069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3070  0010C8  0E00               	movlw	0
  3071  0010CA  0100               	movlb	0	; () banked
  3072  0010CC  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3073  0010CE  0E00               	movlw	0
  3074  0010D0  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  3075  0010D2  EF86  F008         	goto	l911
  3076  0010D6                     l9419:
  3077                           
  3078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3079  0010D6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3080  0010DA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3081  0010DE  CFDE FFF6          	movff	postinc2,tblptrl
  3082  0010E2  CFDD FFF7          	movff	postdec2,tblptrh
  3083  0010E6                     	if	0	;tblptru may be non-zero
  3084  0010E6                     	endif
  3085  0010E6                     	if	0	;tblptru may be non-zero
  3086  0010E6                     	endif
  3087  0010E6  0008               	tblrd		*
  3088  0010E8  50F5               	movf	tablat,w,c
  3089  0010EA  6E06               	movwf	fputc@c^0,c
  3090  0010EC  6A07               	clrf	(fputc@c+1)^0,c
  3091  0010EE  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  3092  0010F2  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3093  0010F6  EC12  F021         	call	_fputc	;wreg free
  3094  0010FA                     
  3095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3096  0010FA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3097  0010FE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3098  001102  2ADE               	incf	postinc2,f,c
  3099  001104  0E00               	movlw	0
  3100  001106  22DD               	addwfc	postdec2,f,c
  3101  001108  EF56  F008         	goto	l9409
  3102  00110C                     l911:
  3103  00110C  0012               	return		;funcret
  3104  00110E                     __end_of_vfpfcnvrt:
  3105                           	opt callstack 0
  3106                           
  3107 ;; *************** function _strncmp *****************
  3108 ;; Defined at:
  3109 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  3112 ;;		 -> vfpfcnvrt@ct(3), 
  3113 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  3114 ;;		 -> STR_24(3), 
  3115 ;;  n               2    9[COMRAM] unsigned int 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  r               2   14[COMRAM] PTR const unsigned char 
  3118 ;;		 -> STR_24(3), 
  3119 ;;  l               2   12[COMRAM] PTR const unsigned char 
  3120 ;;		 -> vfpfcnvrt@ct(3), 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  2    5[COMRAM] int 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3130 ;;      Params:         6       0       0       0       0       0       0       0       0
  3131 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3132 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3133 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3134 ;;Total ram usage:       11 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    2
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_vfpfcnvrt
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text5
  3145  00414E                     __ptext5:
  3146                           	opt callstack 0
  3147  00414E                     _strncmp:
  3148                           	opt callstack 24
  3149  00414E  C006  F00D         	movff	strncmp@_l,strncmp@l
  3150  004152  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  3151  004156  C008  F00F         	movff	strncmp@_r,strncmp@r
  3152  00415A  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  3153  00415E  060A               	decf	strncmp@n^0,f,c
  3154  004160  A0D8               	btfss	status,0,c
  3155  004162  060B               	decf	(strncmp@n+1)^0,f,c
  3156  004164  280A               	incf	strncmp@n^0,w,c
  3157  004166  E106               	bnz	u10481
  3158  004168  280B               	incf	(strncmp@n+1)^0,w,c
  3159  00416A  A4D8               	btfss	status,2,c
  3160  00416C  EFBA  F020         	goto	u10481
  3161  004170  EFBC  F020         	goto	u10480
  3162  004174                     u10481:
  3163  004174  EFC9  F020         	goto	l9239
  3164  004178                     u10480:
  3165  004178  0E00               	movlw	0
  3166  00417A  6E07               	movwf	(?_strncmp+1)^0,c
  3167  00417C  0E00               	movlw	0
  3168  00417E  6E06               	movwf	?_strncmp^0,c
  3169  004180  EF11  F021         	goto	l1743
  3170  004184                     l9237:
  3171  004184  4A0D               	infsnz	strncmp@l^0,f,c
  3172  004186  2A0E               	incf	(strncmp@l+1)^0,f,c
  3173  004188  4A0F               	infsnz	strncmp@r^0,f,c
  3174  00418A  2A10               	incf	(strncmp@r+1)^0,f,c
  3175  00418C  060A               	decf	strncmp@n^0,f,c
  3176  00418E  A0D8               	btfss	status,0,c
  3177  004190  060B               	decf	(strncmp@n+1)^0,f,c
  3178  004192                     l9239:
  3179  004192  C00D  FFD9         	movff	strncmp@l,fsr2l
  3180  004196  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  3181  00419A  50DF               	movf	indf2,w,c
  3182  00419C  B4D8               	btfsc	status,2,c
  3183  00419E  EFD3  F020         	goto	u10491
  3184  0041A2  EFD5  F020         	goto	u10490
  3185  0041A6                     u10491:
  3186  0041A6  EF00  F021         	goto	l9247
  3187  0041AA                     u10490:
  3188  0041AA  C00F  FFF6         	movff	strncmp@r,tblptrl
  3189  0041AE  C010  FFF7         	movff	strncmp@r+1,tblptrh
  3190  0041B2                     	if	0	;tblptru may be non-zero
  3191  0041B2                     	endif
  3192  0041B2                     	if	0	;tblptru may be non-zero
  3193  0041B2                     	endif
  3194  0041B2  0008               	tblrd		*
  3195  0041B4  50F5               	movf	tablat,w,c
  3196  0041B6  0900               	iorlw	0
  3197  0041B8  B4D8               	btfsc	status,2,c
  3198  0041BA  EFE1  F020         	goto	u10501
  3199  0041BE  EFE3  F020         	goto	u10500
  3200  0041C2                     u10501:
  3201  0041C2  EF00  F021         	goto	l9247
  3202  0041C6                     u10500:
  3203  0041C6  500A               	movf	strncmp@n^0,w,c
  3204  0041C8  100B               	iorwf	(strncmp@n+1)^0,w,c
  3205  0041CA  B4D8               	btfsc	status,2,c
  3206  0041CC  EFEA  F020         	goto	u10511
  3207  0041D0  EFEC  F020         	goto	u10510
  3208  0041D4                     u10511:
  3209  0041D4  EF00  F021         	goto	l9247
  3210  0041D8                     u10510:
  3211  0041D8  C00D  FFD9         	movff	strncmp@l,fsr2l
  3212  0041DC  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  3213  0041E0  50DF               	movf	indf2,w,c
  3214  0041E2  6E0C               	movwf	??_strncmp^0,c
  3215  0041E4  C00F  FFF6         	movff	strncmp@r,tblptrl
  3216  0041E8  C010  FFF7         	movff	strncmp@r+1,tblptrh
  3217  0041EC                     	if	0	;tblptru may be non-zero
  3218  0041EC                     	endif
  3219  0041EC                     	if	0	;tblptru may be non-zero
  3220  0041EC                     	endif
  3221  0041EC  0008               	tblrd		*
  3222  0041EE  50F5               	movf	tablat,w,c
  3223  0041F0  180C               	xorwf	??_strncmp^0,w,c
  3224  0041F2  B4D8               	btfsc	status,2,c
  3225  0041F4  EFFE  F020         	goto	u10521
  3226  0041F8  EF00  F021         	goto	u10520
  3227  0041FC                     u10521:
  3228  0041FC  EFC2  F020         	goto	l9237
  3229  004200                     u10520:
  3230  004200                     l9247:
  3231  004200  C00D  FFD9         	movff	strncmp@l,fsr2l
  3232  004204  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  3233  004208  50DF               	movf	indf2,w,c
  3234  00420A  6E0C               	movwf	??_strncmp^0,c
  3235  00420C  C00F  FFF6         	movff	strncmp@r,tblptrl
  3236  004210  C010  FFF7         	movff	strncmp@r+1,tblptrh
  3237  004214                     	if	0	;tblptru may be non-zero
  3238  004214                     	endif
  3239  004214                     	if	0	;tblptru may be non-zero
  3240  004214                     	endif
  3241  004214  0008               	tblrd		*
  3242  004216  50F5               	movf	tablat,w,c
  3243  004218  5C0C               	subwf	??_strncmp^0,w,c
  3244  00421A  6E06               	movwf	?_strncmp^0,c
  3245  00421C  6A07               	clrf	(?_strncmp+1)^0,c
  3246  00421E  A0D8               	btfss	status,0,c
  3247  004220  0607               	decf	(?_strncmp+1)^0,f,c
  3248  004222                     l1743:
  3249  004222  0012               	return		;funcret
  3250  004224                     __end_of_strncmp:
  3251                           	opt callstack 0
  3252                           
  3253 ;; *************** function _efgtoa *****************
  3254 ;; Defined at:
  3255 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  3258 ;;		 -> sprintf@f(6), 
  3259 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  3260 ;;  c               1   35[BANK0 ] unsigned char 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  u               4   93[BANK0 ] unsigned char 
  3263 ;;  g               4   85[BANK0 ] unsigned char 
  3264 ;;  l               4   79[BANK0 ] unsigned char 
  3265 ;;  h               4   75[BANK0 ] unsigned char 
  3266 ;;  ou              4   41[BANK0 ] unsigned char 
  3267 ;;  n               2   91[BANK0 ] int 
  3268 ;;  e               2   89[BANK0 ] int 
  3269 ;;  i               2   83[BANK0 ] int 
  3270 ;;  w               2   72[BANK0 ] int 
  3271 ;;  p               2   69[BANK0 ] int 
  3272 ;;  sign            2   67[BANK0 ] int 
  3273 ;;  d               2   65[BANK0 ] int 
  3274 ;;  ne              2   63[BANK0 ] int 
  3275 ;;  m               2   61[BANK0 ] int 
  3276 ;;  pp              2   59[BANK0 ] int 
  3277 ;;  t               2   57[BANK0 ] int 
  3278 ;;  mode            1   74[BANK0 ] unsigned char 
  3279 ;;  nmode           1   71[BANK0 ] unsigned char 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  2   29[BANK0 ] int 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3289 ;;      Params:         0       7       0       0       0       0       0       0       0
  3290 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3291 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3292 ;;      Totals:         0      68       0       0       0       0       0       0       0
  3293 ;;Total ram usage:       68 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    6
  3296 ;; This function calls:
  3297 ;;		___awdiv
  3298 ;;		___awmod
  3299 ;;		___fladd
  3300 ;;		___fldiv
  3301 ;;		___fleq
  3302 ;;		___flge
  3303 ;;		___flmul
  3304 ;;		___flneg
  3305 ;;		___flsub
  3306 ;;		___fltol
  3307 ;;		___fpclassifyf
  3308 ;;		_floorf
  3309 ;;		_isupper
  3310 ;;		_pad
  3311 ;;		_strcpy
  3312 ;;		_tolower
  3313 ;; This function is called by:
  3314 ;;		_vfpfcnvrt
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text6
  3319  000012                     __ptext6:
  3320                           	opt callstack 0
  3321  000012                     _efgtoa:
  3322                           	opt callstack 20
  3323  000012                     
  3324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3325  000012  0E00               	movlw	0
  3326  000014  0100               	movlb	0	; () banked
  3327  000016  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  3328  000018  0E00               	movlw	0
  3329  00001A  6FA3               	movwf	efgtoa@sign& (0+255),b
  3330  00001C                     
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3333  00001C  C07F  F0B5         	movff	efgtoa@f,efgtoa@g
  3334  000020  C080  F0B6         	movff	efgtoa@f+1,efgtoa@g+1
  3335  000024  C081  F0B7         	movff	efgtoa@f+2,efgtoa@g+2
  3336  000028  C082  F0B8         	movff	efgtoa@f+3,efgtoa@g+3
  3337  00002C                     
  3338                           ; BSR set to: 0
  3339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3340  00002C  BFB8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3341  00002E  EF1D  F000         	goto	u9890
  3342  000032  EF1B  F000         	goto	u9891
  3343  000036                     u9891:
  3344  000036  EF33  F000         	goto	l8901
  3345  00003A                     u9890:
  3346  00003A                     
  3347                           ; BSR set to: 0
  3348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3349  00003A  0E00               	movlw	0
  3350  00003C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  3351  00003E  0E01               	movlw	1
  3352  000040  6FA3               	movwf	efgtoa@sign& (0+255),b
  3353  000042                     
  3354                           ; BSR set to: 0
  3355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3356  000042  C0B5  F006         	movff	efgtoa@g,___flneg@f1
  3357  000046  C0B6  F007         	movff	efgtoa@g+1,___flneg@f1+1
  3358  00004A  C0B7  F008         	movff	efgtoa@g+2,___flneg@f1+2
  3359  00004E  C0B8  F009         	movff	efgtoa@g+3,___flneg@f1+3
  3360  000052  EC6A  F029         	call	___flneg	;wreg free
  3361  000056  C006  F0B5         	movff	?___flneg,efgtoa@g
  3362  00005A  C007  F0B6         	movff	?___flneg+1,efgtoa@g+1
  3363  00005E  C008  F0B7         	movff	?___flneg+2,efgtoa@g+2
  3364  000062  C009  F0B8         	movff	?___flneg+3,efgtoa@g+3
  3365  000066                     l8901:
  3366                           
  3367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3368  000066  0E00               	movlw	0
  3369  000068  0100               	movlb	0	; () banked
  3370  00006A  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  3371  00006C  0E00               	movlw	0
  3372  00006E  6FBB               	movwf	efgtoa@n& (0+255),b
  3373  000070                     
  3374                           ; BSR set to: 0
  3375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3376  000070  C12A  F0A8         	movff	_width,efgtoa@w
  3377  000074  C12B  F0A9         	movff	_width+1,efgtoa@w+1
  3378  000078                     
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3381  000078  51A3               	movf	efgtoa@sign& (0+255),w,b
  3382  00007A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3383  00007C  A4D8               	btfss	status,2,c
  3384  00007E  EF43  F000         	goto	u9901
  3385  000082  EF45  F000         	goto	u9900
  3386  000086                     u9901:
  3387  000086  EF4D  F000         	goto	l8909
  3388  00008A                     u9900:
  3389  00008A                     
  3390                           ; BSR set to: 0
  3391  00008A  0101               	movlb	1	; () banked
  3392  00008C  A52E               	btfss	_flags& (0+255),2,b
  3393  00008E  EF4B  F000         	goto	u9911
  3394  000092  EF4D  F000         	goto	u9910
  3395  000096                     u9911:
  3396  000096  EF68  F000         	goto	l8921
  3397  00009A                     u9910:
  3398  00009A                     l8909:
  3399                           
  3400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3401  00009A  0100               	movlb	0	; () banked
  3402  00009C  51A3               	movf	efgtoa@sign& (0+255),w,b
  3403  00009E  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3404  0000A0  A4D8               	btfss	status,2,c
  3405  0000A2  EF55  F000         	goto	u9921
  3406  0000A6  EF57  F000         	goto	u9920
  3407  0000AA                     u9921:
  3408  0000AA  EF5D  F000         	goto	l8913
  3409  0000AE                     u9920:
  3410  0000AE                     
  3411                           ; BSR set to: 0
  3412  0000AE  0E00               	movlw	0
  3413  0000B0  6F8E               	movwf	(_efgtoa$921+1)& (0+255),b
  3414  0000B2  0E2B               	movlw	43
  3415  0000B4  6F8D               	movwf	_efgtoa$921& (0+255),b
  3416  0000B6  EF61  F000         	goto	l8915
  3417  0000BA                     l8913:
  3418                           
  3419                           ; BSR set to: 0
  3420  0000BA  0E00               	movlw	0
  3421  0000BC  6F8E               	movwf	(_efgtoa$921+1)& (0+255),b
  3422  0000BE  0E2D               	movlw	45
  3423  0000C0  6F8D               	movwf	_efgtoa$921& (0+255),b
  3424  0000C2                     l8915:
  3425                           
  3426                           ; BSR set to: 0
  3427  0000C2  C08D  F13A         	movff	_efgtoa$921,_dbuf
  3428  0000C6                     
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3431  0000C6  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  3432  0000C8  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  3433  0000CA                     
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3436  0000CA  07A8               	decf	efgtoa@w& (0+255),f,b
  3437  0000CC  A0D8               	btfss	status,0,c
  3438  0000CE  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  3439  0000D0                     l8921:
  3440                           
  3441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3442  0000D0  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  3443  0000D4  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3444  0000D8  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3445  0000DC  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3446  0000E0  EC28  F020         	call	___fpclassifyf	;wreg free
  3447  0000E4  0406               	decf	?___fpclassifyf^0,w,c
  3448  0000E6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3449  0000E8  A4D8               	btfss	status,2,c
  3450  0000EA  EF79  F000         	goto	u9931
  3451  0000EE  EF7B  F000         	goto	u9930
  3452  0000F2                     u9931:
  3453  0000F2  EFD2  F000         	goto	l8939
  3454  0000F6                     u9930:
  3455  0000F6  0EBF               	movlw	191
  3456  0000F8  0100               	movlb	0	; () banked
  3457  0000FA  6F84               	movwf	??_efgtoa& (0+255),b
  3458  0000FC  0EFF               	movlw	255
  3459  0000FE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3460  000100  5183               	movf	efgtoa@c& (0+255),w,b
  3461  000102  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  3462  000104  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  3463  000106  5184               	movf	??_efgtoa& (0+255),w,b
  3464  000108  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3465  00010A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3466  00010C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3467  00010E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3468  000110  E10A               	bnz	u9940
  3469  000112  0E1A               	movlw	26
  3470  000114  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3471  000116  A0D8               	btfss	status,0,c
  3472  000118  EF90  F000         	goto	u9941
  3473  00011C  EF93  F000         	goto	u9940
  3474  000120                     u9941:
  3475  000120  0E01               	movlw	1
  3476  000122  EF94  F000         	goto	u9950
  3477  000126                     u9940:
  3478  000126  0E00               	movlw	0
  3479  000128                     u9950:
  3480  000128  6F8F               	movwf	_efgtoa$922& (0+255),b
  3481  00012A  6B90               	clrf	(_efgtoa$922+1)& (0+255),b
  3482  00012C                     
  3483                           ; BSR set to: 0
  3484  00012C  518F               	movf	_efgtoa$922& (0+255),w,b
  3485  00012E  1190               	iorwf	(_efgtoa$922+1)& (0+255),w,b
  3486  000130  B4D8               	btfsc	status,2,c
  3487  000132  EF9D  F000         	goto	u9961
  3488  000136  EF9F  F000         	goto	u9960
  3489  00013A                     u9961:
  3490  00013A  EFAD  F000         	goto	l8931
  3491  00013E                     u9960:
  3492  00013E                     
  3493                           ; BSR set to: 0
  3494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3495  00013E  0E3A               	movlw	low _dbuf
  3496  000140  25BB               	addwf	efgtoa@n& (0+255),w,b
  3497  000142  6E06               	movwf	strcpy@dest^0,c
  3498  000144  0E01               	movlw	high _dbuf
  3499  000146  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3500  000148  6E07               	movwf	(strcpy@dest+1)^0,c
  3501  00014A  0EEB               	movlw	low STR_14
  3502  00014C  6E08               	movwf	strcpy@src^0,c
  3503  00014E  0E7F               	movlw	high STR_14
  3504  000150  6E09               	movwf	(strcpy@src+1)^0,c
  3505  000152  EC1A  F027         	call	_strcpy	;wreg free
  3506                           
  3507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3508  000156  EFB9  F000         	goto	l8933
  3509  00015A                     l8931:
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3513  00015A  0E3A               	movlw	low _dbuf
  3514  00015C  25BB               	addwf	efgtoa@n& (0+255),w,b
  3515  00015E  6E06               	movwf	strcpy@dest^0,c
  3516  000160  0E01               	movlw	high _dbuf
  3517  000162  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3518  000164  6E07               	movwf	(strcpy@dest+1)^0,c
  3519  000166  0EF3               	movlw	low STR_15
  3520  000168  6E08               	movwf	strcpy@src^0,c
  3521  00016A  0E7F               	movlw	high STR_15
  3522  00016C  6E09               	movwf	(strcpy@src+1)^0,c
  3523  00016E  EC1A  F027         	call	_strcpy	;wreg free
  3524  000172                     l8933:
  3525                           
  3526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3527  000172  0100               	movlb	0	; () banked
  3528  000174  0EFD               	movlw	253
  3529  000176  27A8               	addwf	efgtoa@w& (0+255),f,b
  3530  000178  0EFF               	movlw	255
  3531  00017A  23A9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3532  00017C                     l8935:
  3533                           
  3534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3535  00017C  C07D  F016         	movff	efgtoa@fp,pad@fp
  3536  000180  C07E  F017         	movff	efgtoa@fp+1,pad@fp+1
  3537  000184  0E3A               	movlw	low _dbuf
  3538  000186  6E18               	movwf	pad@buf^0,c
  3539  000188  0E01               	movlw	high _dbuf
  3540  00018A  6E19               	movwf	(pad@buf+1)^0,c
  3541  00018C  C0A8  F01A         	movff	efgtoa@w,pad@p
  3542  000190  C0A9  F01B         	movff	efgtoa@w+1,pad@p+1
  3543  000194  ECDB  F021         	call	_pad	;wreg free
  3544  000198  C016  F07D         	movff	?_pad,?_efgtoa
  3545  00019C  C017  F07E         	movff	?_pad+1,?_efgtoa+1
  3546  0001A0  EFEB  F005         	goto	l819
  3547  0001A4                     l8939:
  3548                           
  3549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3550  0001A4  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  3551  0001A8  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3552  0001AC  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3553  0001B0  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3554  0001B4  EC28  F020         	call	___fpclassifyf	;wreg free
  3555  0001B8  5006               	movf	?___fpclassifyf^0,w,c
  3556  0001BA  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3557  0001BC  A4D8               	btfss	status,2,c
  3558  0001BE  EFE3  F000         	goto	u9971
  3559  0001C2  EFE5  F000         	goto	u9970
  3560  0001C6                     u9971:
  3561  0001C6  EF25  F001         	goto	l8957
  3562  0001CA                     u9970:
  3563  0001CA  0EBF               	movlw	191
  3564  0001CC  0100               	movlb	0	; () banked
  3565  0001CE  6F84               	movwf	??_efgtoa& (0+255),b
  3566  0001D0  0EFF               	movlw	255
  3567  0001D2  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3568  0001D4  5183               	movf	efgtoa@c& (0+255),w,b
  3569  0001D6  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  3570  0001D8  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  3571  0001DA  5184               	movf	??_efgtoa& (0+255),w,b
  3572  0001DC  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3573  0001DE  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3574  0001E0  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3575  0001E2  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3576  0001E4  E10A               	bnz	u9980
  3577  0001E6  0E1A               	movlw	26
  3578  0001E8  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3579  0001EA  A0D8               	btfss	status,0,c
  3580  0001EC  EFFA  F000         	goto	u9981
  3581  0001F0  EFFD  F000         	goto	u9980
  3582  0001F4                     u9981:
  3583  0001F4  0E01               	movlw	1
  3584  0001F6  EFFE  F000         	goto	u9990
  3585  0001FA                     u9980:
  3586  0001FA  0E00               	movlw	0
  3587  0001FC                     u9990:
  3588  0001FC  6F91               	movwf	_efgtoa$926& (0+255),b
  3589  0001FE  6B92               	clrf	(_efgtoa$926+1)& (0+255),b
  3590  000200                     
  3591                           ; BSR set to: 0
  3592  000200  5191               	movf	_efgtoa$926& (0+255),w,b
  3593  000202  1192               	iorwf	(_efgtoa$926+1)& (0+255),w,b
  3594  000204  B4D8               	btfsc	status,2,c
  3595  000206  EF07  F001         	goto	u10001
  3596  00020A  EF09  F001         	goto	u10000
  3597  00020E                     u10001:
  3598  00020E  EF17  F001         	goto	l8949
  3599  000212                     u10000:
  3600  000212                     
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3603  000212  0E3A               	movlw	low _dbuf
  3604  000214  25BB               	addwf	efgtoa@n& (0+255),w,b
  3605  000216  6E06               	movwf	strcpy@dest^0,c
  3606  000218  0E01               	movlw	high _dbuf
  3607  00021A  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3608  00021C  6E07               	movwf	(strcpy@dest+1)^0,c
  3609  00021E  0EEF               	movlw	low STR_18
  3610  000220  6E08               	movwf	strcpy@src^0,c
  3611  000222  0E7F               	movlw	high STR_18
  3612  000224  6E09               	movwf	(strcpy@src+1)^0,c
  3613  000226  EC1A  F027         	call	_strcpy	;wreg free
  3614                           
  3615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3616  00022A  EFB9  F000         	goto	l8933
  3617  00022E                     l8949:
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3621  00022E  0E3A               	movlw	low _dbuf
  3622  000230  25BB               	addwf	efgtoa@n& (0+255),w,b
  3623  000232  6E06               	movwf	strcpy@dest^0,c
  3624  000234  0E01               	movlw	high _dbuf
  3625  000236  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3626  000238  6E07               	movwf	(strcpy@dest+1)^0,c
  3627  00023A  0EF7               	movlw	low STR_19
  3628  00023C  6E08               	movwf	strcpy@src^0,c
  3629  00023E  0E7F               	movlw	high STR_19
  3630  000240  6E09               	movwf	(strcpy@src+1)^0,c
  3631  000242  EC1A  F027         	call	_strcpy	;wreg free
  3632  000246  EFB9  F000         	goto	l8933
  3633  00024A                     l8957:
  3634                           
  3635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3636  00024A  0E00               	movlw	0
  3637  00024C  0100               	movlb	0	; () banked
  3638  00024E  6FBD               	movwf	efgtoa@u& (0+255),b
  3639  000250  0E00               	movlw	0
  3640  000252  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  3641  000254  0E80               	movlw	128
  3642  000256  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  3643  000258  0E3F               	movlw	63
  3644  00025A  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  3645                           
  3646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3647  00025C  0E00               	movlw	0
  3648  00025E  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  3649  000260  0E00               	movlw	0
  3650  000262  6FB9               	movwf	efgtoa@e& (0+255),b
  3651  000264                     
  3652                           ; BSR set to: 0
  3653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3654  000264  C0B5  F006         	movff	efgtoa@g,___fleq@ff1
  3655  000268  C0B6  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  3656  00026C  C0B7  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  3657  000270  C0B8  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  3658  000274  0E00               	movlw	0
  3659  000276  6E0A               	movwf	___fleq@ff2^0,c
  3660  000278  0E00               	movlw	0
  3661  00027A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  3662  00027C  0E00               	movlw	0
  3663  00027E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  3664  000280  0E00               	movlw	0
  3665  000282  6E0D               	movwf	(___fleq@ff2+3)^0,c
  3666  000284  ECB0  F023         	call	___fleq	;wreg free
  3667  000288  B0D8               	btfsc	status,0,c
  3668  00028A  EF49  F001         	goto	u10011
  3669  00028E  EF4B  F001         	goto	u10010
  3670  000292                     u10011:
  3671  000292  EFCE  F001         	goto	l8975
  3672  000296                     u10010:
  3673  000296  EF6A  F001         	goto	l8967
  3674  00029A                     l8963:
  3675                           
  3676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3677  00029A  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  3678  00029E  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  3679  0002A2  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  3680  0002A6  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  3681  0002AA  0E00               	movlw	0
  3682  0002AC  6E1F               	movwf	___flmul@a^0,c
  3683  0002AE  0E00               	movlw	0
  3684  0002B0  6E20               	movwf	(___flmul@a+1)^0,c
  3685  0002B2  0E20               	movlw	32
  3686  0002B4  6E21               	movwf	(___flmul@a+2)^0,c
  3687  0002B6  0E41               	movlw	65
  3688  0002B8  6E22               	movwf	(___flmul@a+3)^0,c
  3689  0002BA  EC04  F00D         	call	___flmul	;wreg free
  3690  0002BE  C01B  F0BD         	movff	?___flmul,efgtoa@u
  3691  0002C2  C01C  F0BE         	movff	?___flmul+1,efgtoa@u+1
  3692  0002C6  C01D  F0BF         	movff	?___flmul+2,efgtoa@u+2
  3693  0002CA  C01E  F0C0         	movff	?___flmul+3,efgtoa@u+3
  3694  0002CE                     
  3695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3696  0002CE  0100               	movlb	0	; () banked
  3697  0002D0  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  3698  0002D2  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  3699  0002D4                     l8967:
  3700                           
  3701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3702  0002D4  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  3703  0002D8  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  3704  0002DC  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  3705  0002E0  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  3706  0002E4  0E00               	movlw	0
  3707  0002E6  6E1F               	movwf	___flmul@a^0,c
  3708  0002E8  0E00               	movlw	0
  3709  0002EA  6E20               	movwf	(___flmul@a+1)^0,c
  3710  0002EC  0E20               	movlw	32
  3711  0002EE  6E21               	movwf	(___flmul@a+2)^0,c
  3712  0002F0  0E41               	movlw	65
  3713  0002F2  6E22               	movwf	(___flmul@a+3)^0,c
  3714  0002F4  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  3715  0002F8  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  3716  0002FC  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  3717  000300  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  3718  000304  EC04  F00D         	call	___flmul	;wreg free
  3719  000308  C01B  F038         	movff	?___flmul,___flge@ff2
  3720  00030C  C01C  F039         	movff	?___flmul+1,___flge@ff2+1
  3721  000310  C01D  F03A         	movff	?___flmul+2,___flge@ff2+2
  3722  000314  C01E  F03B         	movff	?___flmul+3,___flge@ff2+3
  3723  000318  ECA6  F01F         	call	___flge	;wreg free
  3724  00031C  B0D8               	btfsc	status,0,c
  3725  00031E  EF93  F001         	goto	u10021
  3726  000322  EF95  F001         	goto	u10020
  3727  000326                     u10021:
  3728  000326  EF4D  F001         	goto	l8963
  3729  00032A                     u10020:
  3730  00032A  EFB5  F001         	goto	l8973
  3731  00032E                     l8969:
  3732                           
  3733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3734  00032E  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  3735  000332  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  3736  000336  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  3737  00033A  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  3738  00033E  0E00               	movlw	0
  3739  000340  6E48               	movwf	___fldiv@a^0,c
  3740  000342  0E00               	movlw	0
  3741  000344  6E49               	movwf	(___fldiv@a+1)^0,c
  3742  000346  0E20               	movlw	32
  3743  000348  6E4A               	movwf	(___fldiv@a+2)^0,c
  3744  00034A  0E41               	movlw	65
  3745  00034C  6E4B               	movwf	(___fldiv@a+3)^0,c
  3746  00034E  EC01  F013         	call	___fldiv	;wreg free
  3747  000352  C044  F0BD         	movff	?___fldiv,efgtoa@u
  3748  000356  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  3749  00035A  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  3750  00035E  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  3751  000362                     
  3752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3753  000362  0100               	movlb	0	; () banked
  3754  000364  07B9               	decf	efgtoa@e& (0+255),f,b
  3755  000366  A0D8               	btfss	status,0,c
  3756  000368  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  3757  00036A                     l8973:
  3758                           
  3759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3760  00036A  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  3761  00036E  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  3762  000372  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  3763  000376  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  3764  00037A  C0BD  F038         	movff	efgtoa@u,___flge@ff2
  3765  00037E  C0BE  F039         	movff	efgtoa@u+1,___flge@ff2+1
  3766  000382  C0BF  F03A         	movff	efgtoa@u+2,___flge@ff2+2
  3767  000386  C0C0  F03B         	movff	efgtoa@u+3,___flge@ff2+3
  3768  00038A  ECA6  F01F         	call	___flge	;wreg free
  3769  00038E  A0D8               	btfss	status,0,c
  3770  000390  EFCC  F001         	goto	u10031
  3771  000394  EFCE  F001         	goto	u10030
  3772  000398                     u10031:
  3773  000398  EF97  F001         	goto	l8969
  3774  00039C                     u10030:
  3775  00039C                     l8975:
  3776                           
  3777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3778  00039C  C083  F00C         	movff	efgtoa@c,tolower@c
  3779  0003A0  6A0D               	clrf	(tolower@c+1)^0,c
  3780  0003A2  ECBB  F026         	call	_tolower	;wreg free
  3781  0003A6  500C               	movf	?_tolower^0,w,c
  3782  0003A8  0100               	movlb	0	; () banked
  3783  0003AA  6FAA               	movwf	efgtoa@mode& (0+255),b
  3784  0003AC                     
  3785                           ; BSR set to: 0
  3786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3787  0003AC  C0AA  F0A7         	movff	efgtoa@mode,efgtoa@nmode
  3788  0003B0                     
  3789                           ; BSR set to: 0
  3790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3791  0003B0  0E67               	movlw	103
  3792  0003B2  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3793  0003B4  A4D8               	btfss	status,2,c
  3794  0003B6  EFDF  F001         	goto	u10041
  3795  0003BA  EFE1  F001         	goto	u10040
  3796  0003BE                     u10041:
  3797  0003BE  EF09  F002         	goto	l8989
  3798  0003C2                     u10040:
  3799  0003C2                     
  3800                           ; BSR set to: 0
  3801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3802  0003C2  0101               	movlb	1	; () banked
  3803  0003C4  512C               	movf	_prec& (0+255),w,b
  3804  0003C6  112D               	iorwf	(_prec+1)& (0+255),w,b
  3805  0003C8  A4D8               	btfss	status,2,c
  3806  0003CA  EFE9  F001         	goto	u10051
  3807  0003CE  EFEB  F001         	goto	u10050
  3808  0003D2                     u10051:
  3809  0003D2  EFEF  F001         	goto	l8985
  3810  0003D6                     u10050:
  3811  0003D6                     
  3812                           ; BSR set to: 1
  3813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3814  0003D6  0E00               	movlw	0
  3815  0003D8  6F2D               	movwf	(_prec+1)& (0+255),b
  3816  0003DA  0E01               	movlw	1
  3817  0003DC  6F2C               	movwf	_prec& (0+255),b
  3818  0003DE                     l8985:
  3819                           
  3820                           ; BSR set to: 1
  3821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3822  0003DE  BF2D               	btfsc	(_prec+1)& (0+255),7,b
  3823  0003E0  EFFC  F001         	goto	u10060
  3824  0003E4  512D               	movf	(_prec+1)& (0+255),w,b
  3825  0003E6  E106               	bnz	u10061
  3826  0003E8  052C               	decf	_prec& (0+255),w,b
  3827  0003EA  B0D8               	btfsc	status,0,c
  3828  0003EC  EFFA  F001         	goto	u10061
  3829  0003F0  EFFC  F001         	goto	u10060
  3830  0003F4                     u10061:
  3831  0003F4  EF03  F002         	goto	l837
  3832  0003F8                     u10060:
  3833  0003F8                     l8987:
  3834                           
  3835                           ; BSR set to: 1
  3836  0003F8  0E00               	movlw	0
  3837  0003FA  0100               	movlb	0	; () banked
  3838  0003FC  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  3839  0003FE  0E06               	movlw	6
  3840  000400  6FA5               	movwf	efgtoa@p& (0+255),b
  3841  000402  EF13  F002         	goto	l8995
  3842  000406                     l837:
  3843                           
  3844                           ; BSR set to: 1
  3845  000406  C12C  F0A5         	movff	_prec,efgtoa@p
  3846  00040A  C12D  F0A6         	movff	_prec+1,efgtoa@p+1
  3847  00040E  EF13  F002         	goto	l8995
  3848  000412                     l8989:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3852  000412  0101               	movlb	1	; () banked
  3853  000414  BF2D               	btfsc	(_prec+1)& (0+255),7,b
  3854  000416  EF0F  F002         	goto	u10071
  3855  00041A  EF11  F002         	goto	u10070
  3856  00041E                     u10071:
  3857  00041E  EFFC  F001         	goto	l8987
  3858  000422                     u10070:
  3859  000422  EF03  F002         	goto	l837
  3860  000426                     l8995:
  3861                           
  3862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3863  000426  0E67               	movlw	103
  3864  000428  0100               	movlb	0	; () banked
  3865  00042A  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3866  00042C  A4D8               	btfss	status,2,c
  3867  00042E  EF1B  F002         	goto	u10081
  3868  000432  EF1D  F002         	goto	u10080
  3869  000436                     u10081:
  3870  000436  EF4C  F002         	goto	l9005
  3871  00043A                     u10080:
  3872  00043A                     
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3875  00043A  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3876  00043C  EF2B  F002         	goto	u10090
  3877  000440  0EFC               	movlw	252
  3878  000442  5DB9               	subwf	efgtoa@e& (0+255),w,b
  3879  000444  0EFF               	movlw	255
  3880  000446  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3881  000448  A0D8               	btfss	status,0,c
  3882  00044A  EF29  F002         	goto	u10091
  3883  00044E  EF2B  F002         	goto	u10090
  3884  000452                     u10091:
  3885  000452  EF4A  F002         	goto	l9003
  3886  000456                     u10090:
  3887  000456                     
  3888                           ; BSR set to: 0
  3889  000456  0EFF               	movlw	255
  3890  000458  6F84               	movwf	??_efgtoa& (0+255),b
  3891  00045A  0EFF               	movlw	255
  3892  00045C  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3893  00045E  C0A5  F086         	movff	efgtoa@p,??_efgtoa+2
  3894  000462  C0A6  F087         	movff	efgtoa@p+1,??_efgtoa+3
  3895  000466  5184               	movf	??_efgtoa& (0+255),w,b
  3896  000468  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3897  00046A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3898  00046C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3899  00046E  51B9               	movf	efgtoa@e& (0+255),w,b
  3900  000470  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3901  000472  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3902  000474  0A80               	xorlw	128
  3903  000476  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  3904  000478  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  3905  00047A  0A80               	xorlw	128
  3906  00047C  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3907  00047E  A0D8               	btfss	status,0,c
  3908  000480  EF44  F002         	goto	u10101
  3909  000484  EF46  F002         	goto	u10100
  3910  000488                     u10101:
  3911  000488  EF4A  F002         	goto	l9003
  3912  00048C                     u10100:
  3913  00048C                     
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3916  00048C  0E66               	movlw	102
  3917  00048E  6FA7               	movwf	efgtoa@nmode& (0+255),b
  3918                           
  3919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3920  000490  EF4C  F002         	goto	l9005
  3921  000494                     l9003:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3925  000494  0E65               	movlw	101
  3926  000496  6FA7               	movwf	efgtoa@nmode& (0+255),b
  3927  000498                     l9005:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3931  000498  C0A5  F09D         	movff	efgtoa@p,efgtoa@m
  3932  00049C  C0A6  F09E         	movff	efgtoa@p+1,efgtoa@m+1
  3933  0004A0                     
  3934                           ; BSR set to: 0
  3935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3936  0004A0  0E67               	movlw	103
  3937  0004A2  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3938  0004A4  A4D8               	btfss	status,2,c
  3939  0004A6  EF57  F002         	goto	u10111
  3940  0004AA  EF59  F002         	goto	u10110
  3941  0004AE                     u10111:
  3942  0004AE  EF69  F002         	goto	l9013
  3943  0004B2                     u10110:
  3944  0004B2                     
  3945                           ; BSR set to: 0
  3946  0004B2  0E66               	movlw	102
  3947  0004B4  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  3948  0004B6  A4D8               	btfss	status,2,c
  3949  0004B8  EF60  F002         	goto	u10121
  3950  0004BC  EF62  F002         	goto	u10120
  3951  0004C0                     u10121:
  3952  0004C0  EF6B  F002         	goto	l9015
  3953  0004C4                     u10120:
  3954  0004C4                     
  3955                           ; BSR set to: 0
  3956  0004C4  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3957  0004C6  EF69  F002         	goto	u10130
  3958  0004CA  EF67  F002         	goto	u10131
  3959  0004CE                     u10131:
  3960  0004CE  EF6B  F002         	goto	l9015
  3961  0004D2                     u10130:
  3962  0004D2                     l9013:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3966  0004D2  4B9D               	infsnz	efgtoa@m& (0+255),f,b
  3967  0004D4  2B9E               	incf	(efgtoa@m+1)& (0+255),f,b
  3968  0004D6                     l9015:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3972  0004D6  0E66               	movlw	102
  3973  0004D8  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  3974  0004DA  A4D8               	btfss	status,2,c
  3975  0004DC  EF72  F002         	goto	u10141
  3976  0004E0  EF74  F002         	goto	u10140
  3977  0004E4                     u10141:
  3978  0004E4  EF94  F002         	goto	l9025
  3979  0004E8                     u10140:
  3980  0004E8                     
  3981                           ; BSR set to: 0
  3982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3983  0004E8  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3984  0004EA  EF7B  F002         	goto	u10150
  3985  0004EE  EF79  F002         	goto	u10151
  3986  0004F2                     u10151:
  3987  0004F2  EF87  F002         	goto	l9021
  3988  0004F6                     u10150:
  3989  0004F6                     
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3992  0004F6  0E00               	movlw	0
  3993  0004F8  6FBD               	movwf	efgtoa@u& (0+255),b
  3994  0004FA  0E00               	movlw	0
  3995  0004FC  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  3996  0004FE  0E80               	movlw	128
  3997  000500  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  3998  000502  0E3F               	movlw	63
  3999  000504  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  4000                           
  4001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4002  000506  0E00               	movlw	0
  4003  000508  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  4004  00050A  0E00               	movlw	0
  4005  00050C  6FB9               	movwf	efgtoa@e& (0+255),b
  4006  00050E                     l9021:
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4010  00050E  0E67               	movlw	103
  4011  000510  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  4012  000512  B4D8               	btfsc	status,2,c
  4013  000514  EF8E  F002         	goto	u10161
  4014  000518  EF90  F002         	goto	u10160
  4015  00051C                     u10161:
  4016  00051C  EF94  F002         	goto	l9025
  4017  000520                     u10160:
  4018  000520                     
  4019                           ; BSR set to: 0
  4020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4021  000520  51B9               	movf	efgtoa@e& (0+255),w,b
  4022  000522  279D               	addwf	efgtoa@m& (0+255),f,b
  4023  000524  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  4024  000526  239E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4025  000528                     l9025:
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4029  000528  0E00               	movlw	0
  4030  00052A  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  4031  00052C  0E00               	movlw	0
  4032  00052E  6FB3               	movwf	efgtoa@i& (0+255),b
  4033  000530                     
  4034                           ; BSR set to: 0
  4035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4036  000530  C0B5  F0AB         	movff	efgtoa@g,efgtoa@h
  4037  000534  C0B6  F0AC         	movff	efgtoa@g+1,efgtoa@h+1
  4038  000538  C0B7  F0AD         	movff	efgtoa@g+2,efgtoa@h+2
  4039  00053C  C0B8  F0AE         	movff	efgtoa@g+3,efgtoa@h+3
  4040  000540                     
  4041                           ; BSR set to: 0
  4042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4043  000540  C0BD  F089         	movff	efgtoa@u,efgtoa@ou
  4044  000544  C0BE  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
  4045  000548  C0BF  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
  4046  00054C  C0C0  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
  4047                           
  4048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4049  000550  EF25  F003         	goto	l9039
  4050  000554                     l9031:
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4054  000554  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  4055  000558  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  4056  00055C  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  4057  000560  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  4058  000564  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  4059  000568  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  4060  00056C  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  4061  000570  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  4062  000574  EC01  F013         	call	___fldiv	;wreg free
  4063  000578  C044  F050         	movff	?___fldiv,floorf@x
  4064  00057C  C045  F051         	movff	?___fldiv+1,floorf@x+1
  4065  000580  C046  F052         	movff	?___fldiv+2,floorf@x+2
  4066  000584  C047  F053         	movff	?___fldiv+3,floorf@x+3
  4067  000588  EC69  F017         	call	_floorf	;wreg free
  4068  00058C  C050  F0AF         	movff	?_floorf,efgtoa@l
  4069  000590  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  4070  000594  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  4071  000598  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  4072                           
  4073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4074  00059C  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  4075  0005A0  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  4076  0005A4  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  4077  0005A8  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  4078  0005AC  EC22  F01F         	call	___fltol	;wreg free
  4079  0005B0  C072  F0A1         	movff	?___fltol,efgtoa@d
  4080  0005B4  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  4081  0005B8                     
  4082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4083  0005B8  C0AB  F044         	movff	efgtoa@h,___flsub@b
  4084  0005BC  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  4085  0005C0  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  4086  0005C4  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  4087  0005C8  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  4088  0005CC  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  4089  0005D0  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  4090  0005D4  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  4091  0005D8  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  4092  0005DC  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  4093  0005E0  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  4094  0005E4  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  4095  0005E8  EC04  F00D         	call	___flmul	;wreg free
  4096  0005EC  C01B  F048         	movff	?___flmul,___flsub@a
  4097  0005F0  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  4098  0005F4  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  4099  0005F8  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  4100  0005FC  EC67  F028         	call	___flsub	;wreg free
  4101  000600  C044  F0AB         	movff	?___flsub,efgtoa@h
  4102  000604  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  4103  000608  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  4104  00060C  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  4105  000610                     
  4106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4107  000610  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  4108  000614  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  4109  000618  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  4110  00061C  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  4111  000620  0E00               	movlw	0
  4112  000622  6E48               	movwf	___fldiv@a^0,c
  4113  000624  0E00               	movlw	0
  4114  000626  6E49               	movwf	(___fldiv@a+1)^0,c
  4115  000628  0E20               	movlw	32
  4116  00062A  6E4A               	movwf	(___fldiv@a+2)^0,c
  4117  00062C  0E41               	movlw	65
  4118  00062E  6E4B               	movwf	(___fldiv@a+3)^0,c
  4119  000630  EC01  F013         	call	___fldiv	;wreg free
  4120  000634  C044  F0BD         	movff	?___fldiv,efgtoa@u
  4121  000638  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  4122  00063C  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  4123  000640  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  4124  000644                     
  4125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4126  000644  0100               	movlb	0	; () banked
  4127  000646  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  4128  000648  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  4129  00064A                     l9039:
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4133  00064A  519D               	movf	efgtoa@m& (0+255),w,b
  4134  00064C  5DB3               	subwf	efgtoa@i& (0+255),w,b
  4135  00064E  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  4136  000650  0A80               	xorlw	128
  4137  000652  6F84               	movwf	??_efgtoa& (0+255),b
  4138  000654  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  4139  000656  0A80               	xorlw	128
  4140  000658  5984               	subwfb	??_efgtoa& (0+255),w,b
  4141  00065A  A0D8               	btfss	status,0,c
  4142  00065C  EF32  F003         	goto	u10171
  4143  000660  EF34  F003         	goto	u10170
  4144  000664                     u10171:
  4145  000664  EFAA  F002         	goto	l9031
  4146  000668                     u10170:
  4147  000668                     
  4148                           ; BSR set to: 0
  4149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4150  000668  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  4151  00066C  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  4152  000670  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  4153  000674  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  4154  000678  0E00               	movlw	0
  4155  00067A  6E1F               	movwf	___flmul@a^0,c
  4156  00067C  0E00               	movlw	0
  4157  00067E  6E20               	movwf	(___flmul@a+1)^0,c
  4158  000680  0EA0               	movlw	160
  4159  000682  6E21               	movwf	(___flmul@a+2)^0,c
  4160  000684  0E40               	movlw	64
  4161  000686  6E22               	movwf	(___flmul@a+3)^0,c
  4162  000688  EC04  F00D         	call	___flmul	;wreg free
  4163  00068C  C01B  F0AF         	movff	?___flmul,efgtoa@l
  4164  000690  C01C  F0B0         	movff	?___flmul+1,efgtoa@l+1
  4165  000694  C01D  F0B1         	movff	?___flmul+2,efgtoa@l+2
  4166  000698  C01E  F0B2         	movff	?___flmul+3,efgtoa@l+3
  4167  00069C                     
  4168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4169  00069C  C0AB  F034         	movff	efgtoa@h,___flge@ff1
  4170  0006A0  C0AC  F035         	movff	efgtoa@h+1,___flge@ff1+1
  4171  0006A4  C0AD  F036         	movff	efgtoa@h+2,___flge@ff1+2
  4172  0006A8  C0AE  F037         	movff	efgtoa@h+3,___flge@ff1+3
  4173  0006AC  C0AF  F038         	movff	efgtoa@l,___flge@ff2
  4174  0006B0  C0B0  F039         	movff	efgtoa@l+1,___flge@ff2+1
  4175  0006B4  C0B1  F03A         	movff	efgtoa@l+2,___flge@ff2+2
  4176  0006B8  C0B2  F03B         	movff	efgtoa@l+3,___flge@ff2+3
  4177  0006BC  ECA6  F01F         	call	___flge	;wreg free
  4178  0006C0  B0D8               	btfsc	status,0,c
  4179  0006C2  EF65  F003         	goto	u10181
  4180  0006C6  EF67  F003         	goto	u10180
  4181  0006CA                     u10181:
  4182  0006CA  EF72  F003         	goto	l9047
  4183  0006CE                     u10180:
  4184  0006CE                     
  4185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4186  0006CE  0E00               	movlw	0
  4187  0006D0  0100               	movlb	0	; () banked
  4188  0006D2  6FAF               	movwf	efgtoa@l& (0+255),b
  4189  0006D4  0E00               	movlw	0
  4190  0006D6  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  4191  0006D8  0E00               	movlw	0
  4192  0006DA  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  4193  0006DC  0E00               	movlw	0
  4194  0006DE  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  4195                           
  4196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  4197  0006E0  EF9B  F003         	goto	l9053
  4198  0006E4                     l9047:
  4199                           
  4200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4201  0006E4  C0AB  F006         	movff	efgtoa@h,___fleq@ff1
  4202  0006E8  C0AC  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  4203  0006EC  C0AD  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  4204  0006F0  C0AE  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  4205  0006F4  C0AF  F00A         	movff	efgtoa@l,___fleq@ff2
  4206  0006F8  C0B0  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  4207  0006FC  C0B1  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  4208  000700  C0B2  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  4209  000704  ECB0  F023         	call	___fleq	;wreg free
  4210  000708  A0D8               	btfss	status,0,c
  4211  00070A  EF89  F003         	goto	u10191
  4212  00070E  EF8B  F003         	goto	u10190
  4213  000712                     u10191:
  4214  000712  EF9B  F003         	goto	l9053
  4215  000716                     u10190:
  4216  000716  0100               	movlb	0	; () banked
  4217  000718  B1A1               	btfsc	efgtoa@d& (0+255),0,b
  4218  00071A  EF91  F003         	goto	u10201
  4219  00071E  EF93  F003         	goto	u10200
  4220  000722                     u10201:
  4221  000722  EF9B  F003         	goto	l9053
  4222  000726                     u10200:
  4223  000726                     
  4224                           ; BSR set to: 0
  4225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4226  000726  0E00               	movlw	0
  4227  000728  6FAF               	movwf	efgtoa@l& (0+255),b
  4228  00072A  0E00               	movlw	0
  4229  00072C  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  4230  00072E  0E00               	movlw	0
  4231  000730  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  4232  000732  0E00               	movlw	0
  4233  000734  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  4234  000736                     l9053:
  4235                           
  4236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4237  000736  C0B5  F034         	movff	efgtoa@g,___fladd@b
  4238  00073A  C0B6  F035         	movff	efgtoa@g+1,___fladd@b+1
  4239  00073E  C0B7  F036         	movff	efgtoa@g+2,___fladd@b+2
  4240  000742  C0B8  F037         	movff	efgtoa@g+3,___fladd@b+3
  4241  000746  C0AF  F038         	movff	efgtoa@l,___fladd@a
  4242  00074A  C0B0  F039         	movff	efgtoa@l+1,___fladd@a+1
  4243  00074E  C0B1  F03A         	movff	efgtoa@l+2,___fladd@a+2
  4244  000752  C0B2  F03B         	movff	efgtoa@l+3,___fladd@a+3
  4245  000756  EC87  F008         	call	___fladd	;wreg free
  4246  00075A  C034  F0AB         	movff	?___fladd,efgtoa@h
  4247  00075E  C035  F0AC         	movff	?___fladd+1,efgtoa@h+1
  4248  000762  C036  F0AD         	movff	?___fladd+2,efgtoa@h+2
  4249  000766  C037  F0AE         	movff	?___fladd+3,efgtoa@h+3
  4250  00076A                     
  4251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4252  00076A  C089  F0BD         	movff	efgtoa@ou,efgtoa@u
  4253  00076E  C08A  F0BE         	movff	efgtoa@ou+1,efgtoa@u+1
  4254  000772  C08B  F0BF         	movff	efgtoa@ou+2,efgtoa@u+2
  4255  000776  C08C  F0C0         	movff	efgtoa@ou+3,efgtoa@u+3
  4256  00077A                     
  4257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4258  00077A  0E65               	movlw	101
  4259  00077C  0100               	movlb	0	; () banked
  4260  00077E  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  4261  000780  B4D8               	btfsc	status,2,c
  4262  000782  EFC5  F003         	goto	u10211
  4263  000786  EFC7  F003         	goto	u10210
  4264  00078A                     u10211:
  4265  00078A  EFCD  F003         	goto	l9061
  4266  00078E                     u10210:
  4267  00078E                     
  4268                           ; BSR set to: 0
  4269  00078E  C0B9  F09F         	movff	efgtoa@e,efgtoa@ne
  4270  000792  C0BA  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  4271  000796  EFD1  F003         	goto	l863
  4272  00079A                     l9061:
  4273                           
  4274                           ; BSR set to: 0
  4275  00079A  0E00               	movlw	0
  4276  00079C  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  4277  00079E  0E00               	movlw	0
  4278  0007A0  6F9F               	movwf	efgtoa@ne& (0+255),b
  4279  0007A2                     l863:
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4283  0007A2  0E00               	movlw	0
  4284  0007A4  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  4285  0007A6  0E00               	movlw	0
  4286  0007A8  6F9B               	movwf	efgtoa@pp& (0+255),b
  4287                           
  4288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4289  0007AA  0E00               	movlw	0
  4290  0007AC  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
  4291  0007AE  0E00               	movlw	0
  4292  0007B0  6F99               	movwf	efgtoa@t& (0+255),b
  4293                           
  4294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4295  0007B2  0E00               	movlw	0
  4296  0007B4  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  4297  0007B6  0E00               	movlw	0
  4298  0007B8  6FB3               	movwf	efgtoa@i& (0+255),b
  4299                           
  4300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4301  0007BA  EFCE  F004         	goto	l9111
  4302  0007BE                     l9063:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4306  0007BE  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  4307  0007C2  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  4308  0007C6  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  4309  0007CA  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  4310  0007CE  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  4311  0007D2  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  4312  0007D6  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  4313  0007DA  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  4314  0007DE  EC01  F013         	call	___fldiv	;wreg free
  4315  0007E2  C044  F050         	movff	?___fldiv,floorf@x
  4316  0007E6  C045  F051         	movff	?___fldiv+1,floorf@x+1
  4317  0007EA  C046  F052         	movff	?___fldiv+2,floorf@x+2
  4318  0007EE  C047  F053         	movff	?___fldiv+3,floorf@x+3
  4319  0007F2  EC69  F017         	call	_floorf	;wreg free
  4320  0007F6  C050  F0AF         	movff	?_floorf,efgtoa@l
  4321  0007FA  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  4322  0007FE  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  4323  000802  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  4324                           
  4325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4326  000806  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  4327  00080A  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  4328  00080E  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  4329  000812  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  4330  000816  EC22  F01F         	call	___fltol	;wreg free
  4331  00081A  C072  F0A1         	movff	?___fltol,efgtoa@d
  4332  00081E  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  4333  000822                     
  4334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4335  000822  0101               	movlb	1	; () banked
  4336  000824  B92E               	btfsc	_flags& (0+255),4,b
  4337  000826  EF17  F004         	goto	u10221
  4338  00082A  EF19  F004         	goto	u10220
  4339  00082E                     u10221:
  4340  00082E  EF37  F004         	goto	l9075
  4341  000832                     u10220:
  4342  000832                     
  4343                           ; BSR set to: 1
  4344  000832  0100               	movlb	0	; () banked
  4345  000834  51A1               	movf	efgtoa@d& (0+255),w,b
  4346  000836  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4347  000838  A4D8               	btfss	status,2,c
  4348  00083A  EF21  F004         	goto	u10231
  4349  00083E  EF23  F004         	goto	u10230
  4350  000842                     u10231:
  4351  000842  EF37  F004         	goto	l9075
  4352  000846                     u10230:
  4353  000846                     
  4354                           ; BSR set to: 0
  4355  000846  0E67               	movlw	103
  4356  000848  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  4357  00084A  A4D8               	btfss	status,2,c
  4358  00084C  EF2A  F004         	goto	u10241
  4359  000850  EF2C  F004         	goto	u10240
  4360  000854                     u10241:
  4361  000854  EF37  F004         	goto	l9075
  4362  000858                     u10240:
  4363  000858                     
  4364                           ; BSR set to: 0
  4365  000858  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4366  00085A  EF33  F004         	goto	u10250
  4367  00085E  EF31  F004         	goto	u10251
  4368  000862                     u10251:
  4369  000862  EF37  F004         	goto	l9075
  4370  000866                     u10250:
  4371  000866                     
  4372                           ; BSR set to: 0
  4373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4374  000866  4B99               	infsnz	efgtoa@t& (0+255),f,b
  4375  000868  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
  4376                           
  4377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4378  00086A  EF82  F004         	goto	l9103
  4379  00086E                     l9075:
  4380                           
  4381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4382  00086E  0100               	movlb	0	; () banked
  4383  000870  519B               	movf	efgtoa@pp& (0+255),w,b
  4384  000872  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4385  000874  A4D8               	btfss	status,2,c
  4386  000876  EF3F  F004         	goto	u10261
  4387  00087A  EF41  F004         	goto	u10260
  4388  00087E                     u10261:
  4389  00087E  EF6B  F004         	goto	l9095
  4390  000882                     u10260:
  4391  000882                     
  4392                           ; BSR set to: 0
  4393  000882  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4394  000884  EF48  F004         	goto	u10270
  4395  000888  EF46  F004         	goto	u10271
  4396  00088C                     u10271:
  4397  00088C  EF6B  F004         	goto	l9095
  4398  000890                     u10270:
  4399  000890                     
  4400                           ; BSR set to: 0
  4401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4402  000890  0E3A               	movlw	low _dbuf
  4403  000892  25BB               	addwf	efgtoa@n& (0+255),w,b
  4404  000894  6ED9               	movwf	fsr2l,c
  4405  000896  0E01               	movlw	high _dbuf
  4406  000898  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4407  00089A  6EDA               	movwf	fsr2h,c
  4408  00089C  0E2E               	movlw	46
  4409  00089E  6EDF               	movwf	indf2,c
  4410  0008A0                     
  4411                           ; BSR set to: 0
  4412  0008A0  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4413  0008A2  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4414  0008A4                     
  4415                           ; BSR set to: 0
  4416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4417  0008A4  07A8               	decf	efgtoa@w& (0+255),f,b
  4418  0008A6  A0D8               	btfss	status,0,c
  4419  0008A8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4420  0008AA                     
  4421                           ; BSR set to: 0
  4422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4423  0008AA  0E00               	movlw	0
  4424  0008AC  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  4425  0008AE  0E01               	movlw	1
  4426  0008B0  6F9B               	movwf	efgtoa@pp& (0+255),b
  4427  0008B2  EF6B  F004         	goto	l9095
  4428  0008B6                     l9087:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4432  0008B6  0E3A               	movlw	low _dbuf
  4433  0008B8  25BB               	addwf	efgtoa@n& (0+255),w,b
  4434  0008BA  6ED9               	movwf	fsr2l,c
  4435  0008BC  0E01               	movlw	high _dbuf
  4436  0008BE  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4437  0008C0  6EDA               	movwf	fsr2h,c
  4438  0008C2  0E30               	movlw	48
  4439  0008C4  6EDF               	movwf	indf2,c
  4440  0008C6                     
  4441                           ; BSR set to: 0
  4442  0008C6  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4443  0008C8  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4444  0008CA                     
  4445                           ; BSR set to: 0
  4446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4447  0008CA  07A8               	decf	efgtoa@w& (0+255),f,b
  4448  0008CC  A0D8               	btfss	status,0,c
  4449  0008CE  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4450  0008D0                     
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4453  0008D0  0799               	decf	efgtoa@t& (0+255),f,b
  4454  0008D2  A0D8               	btfss	status,0,c
  4455  0008D4  079A               	decf	(efgtoa@t+1)& (0+255),f,b
  4456  0008D6                     l9095:
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4460  0008D6  5199               	movf	efgtoa@t& (0+255),w,b
  4461  0008D8  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4462  0008DA  A4D8               	btfss	status,2,c
  4463  0008DC  EF72  F004         	goto	u10281
  4464  0008E0  EF74  F004         	goto	u10280
  4465  0008E4                     u10281:
  4466  0008E4  EF5B  F004         	goto	l9087
  4467  0008E8                     u10280:
  4468  0008E8                     
  4469                           ; BSR set to: 0
  4470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4471  0008E8  0E3A               	movlw	low _dbuf
  4472  0008EA  25BB               	addwf	efgtoa@n& (0+255),w,b
  4473  0008EC  6ED9               	movwf	fsr2l,c
  4474  0008EE  0E01               	movlw	high _dbuf
  4475  0008F0  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4476  0008F2  6EDA               	movwf	fsr2h,c
  4477  0008F4  51A1               	movf	efgtoa@d& (0+255),w,b
  4478  0008F6  0F30               	addlw	48
  4479  0008F8  6EDF               	movwf	indf2,c
  4480  0008FA                     
  4481                           ; BSR set to: 0
  4482  0008FA  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4483  0008FC  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4484  0008FE                     
  4485                           ; BSR set to: 0
  4486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4487  0008FE  07A8               	decf	efgtoa@w& (0+255),f,b
  4488  000900  A0D8               	btfss	status,0,c
  4489  000902  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4490  000904                     l9103:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4494  000904  C0AB  F044         	movff	efgtoa@h,___flsub@b
  4495  000908  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  4496  00090C  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  4497  000910  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  4498  000914  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  4499  000918  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  4500  00091C  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  4501  000920  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  4502  000924  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  4503  000928  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  4504  00092C  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  4505  000930  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  4506  000934  EC04  F00D         	call	___flmul	;wreg free
  4507  000938  C01B  F048         	movff	?___flmul,___flsub@a
  4508  00093C  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  4509  000940  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  4510  000944  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  4511  000948  EC67  F028         	call	___flsub	;wreg free
  4512  00094C  C044  F0AB         	movff	?___flsub,efgtoa@h
  4513  000950  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  4514  000954  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  4515  000958  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  4516  00095C                     
  4517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4518  00095C  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  4519  000960  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  4520  000964  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  4521  000968  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  4522  00096C  0E00               	movlw	0
  4523  00096E  6E48               	movwf	___fldiv@a^0,c
  4524  000970  0E00               	movlw	0
  4525  000972  6E49               	movwf	(___fldiv@a+1)^0,c
  4526  000974  0E20               	movlw	32
  4527  000976  6E4A               	movwf	(___fldiv@a+2)^0,c
  4528  000978  0E41               	movlw	65
  4529  00097A  6E4B               	movwf	(___fldiv@a+3)^0,c
  4530  00097C  EC01  F013         	call	___fldiv	;wreg free
  4531  000980  C044  F0BD         	movff	?___fldiv,efgtoa@u
  4532  000984  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  4533  000988  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  4534  00098C  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  4535  000990                     
  4536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4537  000990  0100               	movlb	0	; () banked
  4538  000992  079F               	decf	efgtoa@ne& (0+255),f,b
  4539  000994  A0D8               	btfss	status,0,c
  4540  000996  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  4541  000998                     
  4542                           ; BSR set to: 0
  4543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4544  000998  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  4545  00099A  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  4546  00099C                     l9111:
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4550  00099C  519D               	movf	efgtoa@m& (0+255),w,b
  4551  00099E  5DB3               	subwf	efgtoa@i& (0+255),w,b
  4552  0009A0  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  4553  0009A2  0A80               	xorlw	128
  4554  0009A4  6F84               	movwf	??_efgtoa& (0+255),b
  4555  0009A6  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  4556  0009A8  0A80               	xorlw	128
  4557  0009AA  5984               	subwfb	??_efgtoa& (0+255),w,b
  4558  0009AC  B0D8               	btfsc	status,0,c
  4559  0009AE  EFDB  F004         	goto	u10291
  4560  0009B2  EFDD  F004         	goto	u10290
  4561  0009B6                     u10291:
  4562  0009B6  EFEB  F004         	goto	l9115
  4563  0009BA                     u10290:
  4564  0009BA                     
  4565                           ; BSR set to: 0
  4566  0009BA  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4567  0009BC  EFE9  F004         	goto	u10301
  4568  0009C0  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
  4569  0009C2  E109               	bnz	u10300
  4570  0009C4  0E4B               	movlw	75
  4571  0009C6  5DBB               	subwf	efgtoa@n& (0+255),w,b
  4572  0009C8  A0D8               	btfss	status,0,c
  4573  0009CA  EFE9  F004         	goto	u10301
  4574  0009CE  EFEB  F004         	goto	u10300
  4575  0009D2                     u10301:
  4576  0009D2  EFDF  F003         	goto	l9063
  4577  0009D6                     u10300:
  4578  0009D6                     l9115:
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4582  0009D6  519B               	movf	efgtoa@pp& (0+255),w,b
  4583  0009D8  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4584  0009DA  A4D8               	btfss	status,2,c
  4585  0009DC  EFF2  F004         	goto	u10311
  4586  0009E0  EFF4  F004         	goto	u10310
  4587  0009E4                     u10311:
  4588  0009E4  EF07  F005         	goto	l9123
  4589  0009E8                     u10310:
  4590  0009E8                     
  4591                           ; BSR set to: 0
  4592  0009E8  0101               	movlb	1	; () banked
  4593  0009EA  A92E               	btfss	_flags& (0+255),4,b
  4594  0009EC  EFFA  F004         	goto	u10321
  4595  0009F0  EFFC  F004         	goto	u10320
  4596  0009F4                     u10321:
  4597  0009F4  EF07  F005         	goto	l9123
  4598  0009F8                     u10320:
  4599  0009F8                     
  4600                           ; BSR set to: 1
  4601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4602  0009F8  0E3A               	movlw	low _dbuf
  4603  0009FA  0100               	movlb	0	; () banked
  4604  0009FC  25BB               	addwf	efgtoa@n& (0+255),w,b
  4605  0009FE  6ED9               	movwf	fsr2l,c
  4606  000A00  0E01               	movlw	high _dbuf
  4607  000A02  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4608  000A04  6EDA               	movwf	fsr2h,c
  4609  000A06  0E2E               	movlw	46
  4610  000A08  6EDF               	movwf	indf2,c
  4611  000A0A                     
  4612                           ; BSR set to: 0
  4613  000A0A  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4614  000A0C  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4615  000A0E                     l9123:
  4616                           
  4617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4618  000A0E  0E3A               	movlw	low _dbuf
  4619  000A10  0100               	movlb	0	; () banked
  4620  000A12  25BB               	addwf	efgtoa@n& (0+255),w,b
  4621  000A14  6ED9               	movwf	fsr2l,c
  4622  000A16  0E01               	movlw	high _dbuf
  4623  000A18  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4624  000A1A  6EDA               	movwf	fsr2h,c
  4625  000A1C  0E00               	movlw	0
  4626  000A1E  6EDF               	movwf	indf2,c
  4627  000A20                     
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4630  000A20  0E65               	movlw	101
  4631  000A22  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  4632  000A24  A4D8               	btfss	status,2,c
  4633  000A26  EF17  F005         	goto	u10331
  4634  000A2A  EF19  F005         	goto	u10330
  4635  000A2E                     u10331:
  4636  000A2E  EFBE  F000         	goto	l8935
  4637  000A32                     u10330:
  4638  000A32                     
  4639                           ; BSR set to: 0
  4640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4641  000A32  0E00               	movlw	0
  4642  000A34  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  4643  000A36  0E4F               	movlw	79
  4644  000A38  6FB3               	movwf	efgtoa@i& (0+255),b
  4645  000A3A                     
  4646                           ; BSR set to: 0
  4647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4648  000A3A  0E3A               	movlw	low _dbuf
  4649  000A3C  25B3               	addwf	efgtoa@i& (0+255),w,b
  4650  000A3E  6ED9               	movwf	fsr2l,c
  4651  000A40  0E01               	movlw	high _dbuf
  4652  000A42  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4653  000A44  6EDA               	movwf	fsr2h,c
  4654  000A46  0E00               	movlw	0
  4655  000A48  6EDF               	movwf	indf2,c
  4656  000A4A                     
  4657                           ; BSR set to: 0
  4658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4659  000A4A  0E00               	movlw	0
  4660  000A4C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4661  000A4E  0E00               	movlw	0
  4662  000A50  6FA3               	movwf	efgtoa@sign& (0+255),b
  4663  000A52                     
  4664                           ; BSR set to: 0
  4665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4666  000A52  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4667  000A54  EF30  F005         	goto	u10340
  4668  000A58  EF2E  F005         	goto	u10341
  4669  000A5C                     u10341:
  4670  000A5C  EF38  F005         	goto	l9139
  4671  000A60                     u10340:
  4672  000A60                     
  4673                           ; BSR set to: 0
  4674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4675  000A60  0E00               	movlw	0
  4676  000A62  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4677  000A64  0E01               	movlw	1
  4678  000A66  6FA3               	movwf	efgtoa@sign& (0+255),b
  4679  000A68                     
  4680                           ; BSR set to: 0
  4681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4682  000A68  6DB9               	negf	efgtoa@e& (0+255),b
  4683  000A6A  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
  4684  000A6C  B0D8               	btfsc	status,0,c
  4685  000A6E  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  4686  000A70                     l9139:
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4690  000A70  0E00               	movlw	0
  4691  000A72  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  4692  000A74  0E02               	movlw	2
  4693  000A76  6FA5               	movwf	efgtoa@p& (0+255),b
  4694                           
  4695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4696  000A78  EF69  F005         	goto	l9151
  4697  000A7C                     l9141:
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4701  000A7C  07B3               	decf	efgtoa@i& (0+255),f,b
  4702  000A7E  A0D8               	btfss	status,0,c
  4703  000A80  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4704  000A82                     
  4705                           ; BSR set to: 0
  4706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4707  000A82  0E3A               	movlw	low _dbuf
  4708  000A84  25B3               	addwf	efgtoa@i& (0+255),w,b
  4709  000A86  6ED9               	movwf	fsr2l,c
  4710  000A88  0E01               	movlw	high _dbuf
  4711  000A8A  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4712  000A8C  6EDA               	movwf	fsr2h,c
  4713  000A8E  C0B9  F006         	movff	efgtoa@e,___awmod@dividend
  4714  000A92  C0BA  F007         	movff	efgtoa@e+1,___awmod@dividend+1
  4715  000A96  0E00               	movlw	0
  4716  000A98  6E09               	movwf	(___awmod@divisor+1)^0,c
  4717  000A9A  0E0A               	movlw	10
  4718  000A9C  6E08               	movwf	___awmod@divisor^0,c
  4719  000A9E  EC01  F023         	call	___awmod	;wreg free
  4720  000AA2  5006               	movf	?___awmod^0,w,c
  4721  000AA4  0F30               	addlw	48
  4722  000AA6  6EDF               	movwf	indf2,c
  4723  000AA8                     
  4724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4725  000AA8  C0B9  F006         	movff	efgtoa@e,___awdiv@dividend
  4726  000AAC  C0BA  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  4727  000AB0  0E00               	movlw	0
  4728  000AB2  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4729  000AB4  0E0A               	movlw	10
  4730  000AB6  6E08               	movwf	___awdiv@divisor^0,c
  4731  000AB8  EC3E  F022         	call	___awdiv	;wreg free
  4732  000ABC  C006  F0B9         	movff	?___awdiv,efgtoa@e
  4733  000AC0  C007  F0BA         	movff	?___awdiv+1,efgtoa@e+1
  4734  000AC4                     
  4735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4736  000AC4  0100               	movlb	0	; () banked
  4737  000AC6  07A5               	decf	efgtoa@p& (0+255),f,b
  4738  000AC8  A0D8               	btfss	status,0,c
  4739  000ACA  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
  4740  000ACC                     
  4741                           ; BSR set to: 0
  4742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4743  000ACC  07A8               	decf	efgtoa@w& (0+255),f,b
  4744  000ACE  A0D8               	btfss	status,0,c
  4745  000AD0  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4746  000AD2                     l9151:
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4750  000AD2  51B9               	movf	efgtoa@e& (0+255),w,b
  4751  000AD4  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4752  000AD6  A4D8               	btfss	status,2,c
  4753  000AD8  EF70  F005         	goto	u10351
  4754  000ADC  EF72  F005         	goto	u10350
  4755  000AE0                     u10351:
  4756  000AE0  EF3E  F005         	goto	l9141
  4757  000AE4                     u10350:
  4758  000AE4                     
  4759                           ; BSR set to: 0
  4760  000AE4  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4761  000AE6  EF7F  F005         	goto	u10360
  4762  000AEA  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
  4763  000AEC  E106               	bnz	u10361
  4764  000AEE  05A5               	decf	efgtoa@p& (0+255),w,b
  4765  000AF0  B0D8               	btfsc	status,0,c
  4766  000AF2  EF7D  F005         	goto	u10361
  4767  000AF6  EF7F  F005         	goto	u10360
  4768  000AFA                     u10361:
  4769  000AFA  EF3E  F005         	goto	l9141
  4770  000AFE                     u10360:
  4771  000AFE                     
  4772                           ; BSR set to: 0
  4773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4774  000AFE  07B3               	decf	efgtoa@i& (0+255),f,b
  4775  000B00  A0D8               	btfss	status,0,c
  4776  000B02  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4777  000B04                     
  4778                           ; BSR set to: 0
  4779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4780  000B04  51A3               	movf	efgtoa@sign& (0+255),w,b
  4781  000B06  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4782  000B08  A4D8               	btfss	status,2,c
  4783  000B0A  EF89  F005         	goto	u10371
  4784  000B0E  EF8B  F005         	goto	u10370
  4785  000B12                     u10371:
  4786  000B12  EF91  F005         	goto	l9161
  4787  000B16                     u10370:
  4788  000B16                     
  4789                           ; BSR set to: 0
  4790  000B16  0E00               	movlw	0
  4791  000B18  6F94               	movwf	(_efgtoa$930+1)& (0+255),b
  4792  000B1A  0E2B               	movlw	43
  4793  000B1C  6F93               	movwf	_efgtoa$930& (0+255),b
  4794  000B1E  EF95  F005         	goto	l9163
  4795  000B22                     l9161:
  4796                           
  4797                           ; BSR set to: 0
  4798  000B22  0E00               	movlw	0
  4799  000B24  6F94               	movwf	(_efgtoa$930+1)& (0+255),b
  4800  000B26  0E2D               	movlw	45
  4801  000B28  6F93               	movwf	_efgtoa$930& (0+255),b
  4802  000B2A                     l9163:
  4803                           
  4804                           ; BSR set to: 0
  4805  000B2A  0E3A               	movlw	low _dbuf
  4806  000B2C  25B3               	addwf	efgtoa@i& (0+255),w,b
  4807  000B2E  6ED9               	movwf	fsr2l,c
  4808  000B30  0E01               	movlw	high _dbuf
  4809  000B32  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4810  000B34  6EDA               	movwf	fsr2h,c
  4811  000B36  C093  FFDF         	movff	_efgtoa$930,indf2
  4812  000B3A                     
  4813                           ; BSR set to: 0
  4814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4815  000B3A  07A8               	decf	efgtoa@w& (0+255),f,b
  4816  000B3C  A0D8               	btfss	status,0,c
  4817  000B3E  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4818  000B40                     
  4819                           ; BSR set to: 0
  4820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4821  000B40  07B3               	decf	efgtoa@i& (0+255),f,b
  4822  000B42  A0D8               	btfss	status,0,c
  4823  000B44  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4824  000B46                     
  4825                           ; BSR set to: 0
  4826  000B46  0EBF               	movlw	191
  4827  000B48  6F84               	movwf	??_efgtoa& (0+255),b
  4828  000B4A  0EFF               	movlw	255
  4829  000B4C  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  4830  000B4E  5183               	movf	efgtoa@c& (0+255),w,b
  4831  000B50  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  4832  000B52  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  4833  000B54  5184               	movf	??_efgtoa& (0+255),w,b
  4834  000B56  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  4835  000B58  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  4836  000B5A  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4837  000B5C  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  4838  000B5E  E10A               	bnz	u10380
  4839  000B60  0E1A               	movlw	26
  4840  000B62  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  4841  000B64  A0D8               	btfss	status,0,c
  4842  000B66  EFB7  F005         	goto	u10381
  4843  000B6A  EFBA  F005         	goto	u10380
  4844  000B6E                     u10381:
  4845  000B6E  0E01               	movlw	1
  4846  000B70  EFBB  F005         	goto	u10390
  4847  000B74                     u10380:
  4848  000B74  0E00               	movlw	0
  4849  000B76                     u10390:
  4850  000B76  6F97               	movwf	_efgtoa$932& (0+255),b
  4851  000B78  6B98               	clrf	(_efgtoa$932+1)& (0+255),b
  4852  000B7A                     
  4853                           ; BSR set to: 0
  4854  000B7A  5197               	movf	_efgtoa$932& (0+255),w,b
  4855  000B7C  1198               	iorwf	(_efgtoa$932+1)& (0+255),w,b
  4856  000B7E  A4D8               	btfss	status,2,c
  4857  000B80  EFC4  F005         	goto	u10401
  4858  000B84  EFC6  F005         	goto	u10400
  4859  000B88                     u10401:
  4860  000B88  EFCC  F005         	goto	l9177
  4861  000B8C                     u10400:
  4862  000B8C                     
  4863                           ; BSR set to: 0
  4864  000B8C  0E00               	movlw	0
  4865  000B8E  6F96               	movwf	(_efgtoa$931+1)& (0+255),b
  4866  000B90  0E65               	movlw	101
  4867  000B92  6F95               	movwf	_efgtoa$931& (0+255),b
  4868  000B94  EFD0  F005         	goto	l9179
  4869  000B98                     l9177:
  4870                           
  4871                           ; BSR set to: 0
  4872  000B98  0E00               	movlw	0
  4873  000B9A  6F96               	movwf	(_efgtoa$931+1)& (0+255),b
  4874  000B9C  0E45               	movlw	69
  4875  000B9E  6F95               	movwf	_efgtoa$931& (0+255),b
  4876  000BA0                     l9179:
  4877                           
  4878                           ; BSR set to: 0
  4879  000BA0  0E3A               	movlw	low _dbuf
  4880  000BA2  25B3               	addwf	efgtoa@i& (0+255),w,b
  4881  000BA4  6ED9               	movwf	fsr2l,c
  4882  000BA6  0E01               	movlw	high _dbuf
  4883  000BA8  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4884  000BAA  6EDA               	movwf	fsr2h,c
  4885  000BAC  C095  FFDF         	movff	_efgtoa$931,indf2
  4886  000BB0                     
  4887                           ; BSR set to: 0
  4888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4889  000BB0  07A8               	decf	efgtoa@w& (0+255),f,b
  4890  000BB2  A0D8               	btfss	status,0,c
  4891  000BB4  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4892  000BB6                     
  4893                           ; BSR set to: 0
  4894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4895  000BB6  0E3A               	movlw	low _dbuf
  4896  000BB8  25BB               	addwf	efgtoa@n& (0+255),w,b
  4897  000BBA  6E06               	movwf	strcpy@dest^0,c
  4898  000BBC  0E01               	movlw	high _dbuf
  4899  000BBE  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4900  000BC0  6E07               	movwf	(strcpy@dest+1)^0,c
  4901  000BC2  0E3A               	movlw	low _dbuf
  4902  000BC4  25B3               	addwf	efgtoa@i& (0+255),w,b
  4903  000BC6  6E08               	movwf	strcpy@src^0,c
  4904  000BC8  0E01               	movlw	high _dbuf
  4905  000BCA  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4906  000BCC  6E09               	movwf	(strcpy@src+1)^0,c
  4907  000BCE  EC1A  F027         	call	_strcpy	;wreg free
  4908  000BD2  EFBE  F000         	goto	l8935
  4909  000BD6                     l819:
  4910  000BD6  0012               	return		;funcret
  4911  000BD8                     __end_of_efgtoa:
  4912                           	opt callstack 0
  4913                           
  4914 ;; *************** function _tolower *****************
  4915 ;; Defined at:
  4916 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  c               2   11[COMRAM] int 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  2   11[COMRAM] int 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4930 ;;      Params:         2       0       0       0       0       0       0       0       0
  4931 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4932 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4933 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4934 ;;Total ram usage:        8 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    3
  4937 ;; This function calls:
  4938 ;;		_isupper
  4939 ;; This function is called by:
  4940 ;;		_efgtoa
  4941 ;;		_vfpfcnvrt
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text7
  4946  004D76                     __ptext7:
  4947                           	opt callstack 0
  4948  004D76                     _tolower:
  4949                           	opt callstack 23
  4950  004D76  0EBF               	movlw	191
  4951  004D78  6E0E               	movwf	??_tolower^0,c
  4952  004D7A  0EFF               	movlw	255
  4953  004D7C  6E0F               	movwf	(??_tolower+1)^0,c
  4954  004D7E  C00C  F010         	movff	tolower@c,??_tolower+2
  4955  004D82  C00D  F011         	movff	tolower@c+1,??_tolower+3
  4956  004D86  500E               	movf	??_tolower^0,w,c
  4957  004D88  2610               	addwf	(??_tolower+2)^0,f,c
  4958  004D8A  500F               	movf	(??_tolower+1)^0,w,c
  4959  004D8C  2211               	addwfc	(??_tolower+3)^0,f,c
  4960  004D8E  5011               	movf	(??_tolower+3)^0,w,c
  4961  004D90  E10A               	bnz	u9230
  4962  004D92  0E1A               	movlw	26
  4963  004D94  5C10               	subwf	(??_tolower+2)^0,w,c
  4964  004D96  A0D8               	btfss	status,0,c
  4965  004D98  EFD0  F026         	goto	u9231
  4966  004D9C  EFD3  F026         	goto	u9230
  4967  004DA0                     u9231:
  4968  004DA0  0E01               	movlw	1
  4969  004DA2  EFD4  F026         	goto	u9240
  4970  004DA6                     u9230:
  4971  004DA6  0E00               	movlw	0
  4972  004DA8                     u9240:
  4973  004DA8  6E12               	movwf	_tolower$1554^0,c
  4974  004DAA  6A13               	clrf	(_tolower$1554+1)^0,c
  4975  004DAC  5012               	movf	_tolower$1554^0,w,c
  4976  004DAE  1013               	iorwf	(_tolower$1554+1)^0,w,c
  4977  004DB0  B4D8               	btfsc	status,2,c
  4978  004DB2  EFDD  F026         	goto	u9251
  4979  004DB6  EFDF  F026         	goto	u9250
  4980  004DBA                     u9251:
  4981  004DBA  EFE6  F026         	goto	l1753
  4982  004DBE                     u9250:
  4983  004DBE  0E20               	movlw	32
  4984  004DC0  100C               	iorwf	tolower@c^0,w,c
  4985  004DC2  6E0C               	movwf	?_tolower^0,c
  4986  004DC4  500D               	movf	(tolower@c+1)^0,w,c
  4987  004DC6  6E0D               	movwf	(?_tolower+1)^0,c
  4988  004DC8  EFEA  F026         	goto	l1758
  4989  004DCC                     l1753:
  4990  004DCC  C00C  F00C         	movff	tolower@c,?_tolower
  4991  004DD0  C00D  F00D         	movff	tolower@c+1,?_tolower+1
  4992  004DD4                     l1758:
  4993  004DD4  0012               	return		;funcret
  4994  004DD6                     __end_of_tolower:
  4995                           	opt callstack 0
  4996                           
  4997 ;; *************** function _isupper *****************
  4998 ;; Defined at:
  4999 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;  c               2    5[COMRAM] int 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  2    5[COMRAM] int 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5013 ;;      Params:         2       0       0       0       0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5015 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5016 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5017 ;;Total ram usage:        6 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    2
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_efgtoa
  5024 ;;		_vfpfcnvrt
  5025 ;;		_tolower
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text8
  5030  005264                     __ptext8:
  5031                           	opt callstack 0
  5032  005264                     _isupper:
  5033                           	opt callstack 23
  5034  005264  0EBF               	movlw	191
  5035  005266  6E08               	movwf	??_isupper^0,c
  5036  005268  0EFF               	movlw	255
  5037  00526A  6E09               	movwf	(??_isupper+1)^0,c
  5038  00526C  C006  F00A         	movff	isupper@c,??_isupper+2
  5039  005270  C007  F00B         	movff	isupper@c+1,??_isupper+3
  5040  005274  5008               	movf	??_isupper^0,w,c
  5041  005276  260A               	addwf	(??_isupper+2)^0,f,c
  5042  005278  5009               	movf	(??_isupper+1)^0,w,c
  5043  00527A  220B               	addwfc	(??_isupper+3)^0,f,c
  5044  00527C  500B               	movf	(??_isupper+3)^0,w,c
  5045  00527E  E10A               	bnz	u8060
  5046  005280  0E1A               	movlw	26
  5047  005282  5C0A               	subwf	(??_isupper+2)^0,w,c
  5048  005284  A0D8               	btfss	status,0,c
  5049  005286  EF47  F029         	goto	u8061
  5050  00528A  EF4A  F029         	goto	u8060
  5051  00528E                     u8061:
  5052  00528E  0E01               	movlw	1
  5053  005290  EF4B  F029         	goto	u8070
  5054  005294                     u8060:
  5055  005294  0E00               	movlw	0
  5056  005296                     u8070:
  5057  005296  6E06               	movwf	?_isupper^0,c
  5058  005298  6A07               	clrf	(?_isupper+1)^0,c
  5059  00529A  0012               	return		;funcret
  5060  00529C                     __end_of_isupper:
  5061                           	opt callstack 0
  5062                           
  5063 ;; *************** function _strcpy *****************
  5064 ;; Defined at:
  5065 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  dest            2    5[COMRAM] PTR unsigned char 
  5068 ;;		 -> dbuf(80), 
  5069 ;;  src             2    7[COMRAM] PTR const unsigned char 
  5070 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  5071 ;;		 -> dbuf(80), 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  d               2   13[COMRAM] PTR unsigned char 
  5074 ;;		 -> dbuf(80), 
  5075 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5076 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  5077 ;;		 -> dbuf(80), 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  2    5[COMRAM] PTR unsigned char 
  5080 ;; Registers used:
  5081 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5087 ;;      Params:         4       0       0       0       0       0       0       0       0
  5088 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5089 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5090 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5091 ;;Total ram usage:       10 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    2
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_efgtoa
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text9
  5102  004E34                     __ptext9:
  5103                           	opt callstack 0
  5104  004E34                     _strcpy:
  5105                           	opt callstack 23
  5106  004E34  C008  F00C         	movff	strcpy@src,strcpy@s
  5107  004E38  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
  5108  004E3C  C006  F00E         	movff	strcpy@dest,strcpy@d
  5109  004E40  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
  5110  004E44                     l8539:
  5111  004E44  500C               	movf	strcpy@s^0,w,c
  5112  004E46  6E0A               	movwf	??_strcpy^0,c
  5113  004E48  500D               	movf	(strcpy@s+1)^0,w,c
  5114  004E4A  6E0B               	movwf	(??_strcpy+1)^0,c
  5115  004E4C  4A0C               	infsnz	strcpy@s^0,f,c
  5116  004E4E  2A0D               	incf	(strcpy@s+1)^0,f,c
  5117  004E50  C00A  FFF6         	movff	??_strcpy,tblptrl
  5118  004E54  C00B  FFF7         	movff	??_strcpy+1,tblptrh
  5119  004E58  6AF8               	clrf	tblptru,c
  5120  004E5A  C00E  FFD9         	movff	strcpy@d,fsr2l
  5121  004E5E  C00F  FFDA         	movff	strcpy@d+1,fsr2h
  5122  004E62  4A0E               	infsnz	strcpy@d^0,f,c
  5123  004E64  2A0F               	incf	(strcpy@d+1)^0,f,c
  5124  004E66  0E07               	movlw	(high __ramtop+-1)
  5125  004E68  64F7               	cpfsgt	tblptrh,c
  5126  004E6A  D003               	bra	u9217
  5127  004E6C  0008               	tblrd		*
  5128  004E6E  50F5               	movf	tablat,w,c
  5129  004E70  D005               	bra	u9210
  5130  004E72                     u9217:
  5131  004E72  CFF6 FFE9          	movff	tblptrl,fsr0l
  5132  004E76  CFF7 FFEA          	movff	tblptrh,fsr0h
  5133  004E7A  50EF               	movf	indf0,w,c
  5134  004E7C                     u9210:
  5135  004E7C  6EDF               	movwf	indf2,c
  5136  004E7E  50DF               	movf	indf2,w,c
  5137  004E80  A4D8               	btfss	status,2,c
  5138  004E82  EF45  F027         	goto	u9221
  5139  004E86  EF47  F027         	goto	u9220
  5140  004E8A                     u9221:
  5141  004E8A  EF22  F027         	goto	l8539
  5142  004E8E                     u9220:
  5143  004E8E  0012               	return		;funcret
  5144  004E90                     __end_of_strcpy:
  5145                           	opt callstack 0
  5146                           
  5147 ;; *************** function _floorf *****************
  5148 ;; Defined at:
  5149 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  x               4   79[COMRAM] float 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  u               4   25[BANK0 ] struct .
  5154 ;;  m               4   19[BANK0 ] unsigned long 
  5155 ;;  e               2   23[BANK0 ] int 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  4   79[COMRAM] float 
  5158 ;; Registers used:
  5159 ;;		wreg, status,2, status,0
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5165 ;;      Params:         4       0       0       0       0       0       0       0       0
  5166 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5167 ;;      Temps:          0       6       0       0       0       0       0       0       0
  5168 ;;      Totals:         4      16       0       0       0       0       0       0       0
  5169 ;;Total ram usage:       20 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:    2
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_efgtoa
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text10
  5180  002ED2                     __ptext10:
  5181                           	opt callstack 0
  5182  002ED2                     _floorf:
  5183                           	opt callstack 23
  5184  002ED2  C104  F079         	movff	floorf@F524,floorf@u
  5185  002ED6  C105  F07A         	movff	floorf@F524+1,floorf@u+1
  5186  002EDA  C106  F07B         	movff	floorf@F524+2,floorf@u+2
  5187  002EDE  C107  F07C         	movff	floorf@F524+3,floorf@u+3
  5188  002EE2  C050  F079         	movff	floorf@x,floorf@u
  5189  002EE6  C051  F07A         	movff	floorf@x+1,floorf@u+1
  5190  002EEA  C052  F07B         	movff	floorf@x+2,floorf@u+2
  5191  002EEE  C053  F07C         	movff	floorf@x+3,floorf@u+3
  5192  002EF2  0E81               	movlw	129
  5193  002EF4  0100               	movlb	0	; () banked
  5194  002EF6  6F6D               	movwf	??_floorf& (0+255),b
  5195  002EF8  0EFF               	movlw	255
  5196  002EFA  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5197  002EFC  C079  F06F         	movff	floorf@u,??_floorf+2
  5198  002F00  C07A  F070         	movff	floorf@u+1,??_floorf+3
  5199  002F04  C07B  F071         	movff	floorf@u+2,??_floorf+4
  5200  002F08  C07C  F072         	movff	floorf@u+3,??_floorf+5
  5201  002F0C  0E18               	movlw	24
  5202  002F0E  EF8E  F017         	goto	u9260
  5203  002F12                     u9265:
  5204  002F12  90D8               	bcf	status,0,c
  5205  002F14  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  5206  002F16  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5207  002F18  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5208  002F1A  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5209  002F1C                     u9260:
  5210  002F1C  2EE8               	decfsz	wreg,f,c
  5211  002F1E  EF89  F017         	goto	u9265
  5212  002F22  516F               	movf	(??_floorf+2)& (0+255),w,b
  5213  002F24  256D               	addwf	??_floorf& (0+255),w,b
  5214  002F26  6F77               	movwf	floorf@e& (0+255),b
  5215  002F28  0E00               	movlw	0
  5216  002F2A  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  5217  002F2C  6F78               	movwf	(floorf@e+1)& (0+255),b
  5218  002F2E  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5219  002F30  EFA3  F017         	goto	u9271
  5220  002F34  5178               	movf	(floorf@e+1)& (0+255),w,b
  5221  002F36  E109               	bnz	u9270
  5222  002F38  0E17               	movlw	23
  5223  002F3A  5D77               	subwf	floorf@e& (0+255),w,b
  5224  002F3C  A0D8               	btfss	status,0,c
  5225  002F3E  EFA3  F017         	goto	u9271
  5226  002F42  EFA5  F017         	goto	u9270
  5227  002F46                     u9271:
  5228  002F46  EFAF  F017         	goto	l8557
  5229  002F4A                     u9270:
  5230  002F4A                     l8555:
  5231                           
  5232                           ; BSR set to: 0
  5233  002F4A  C050  F050         	movff	floorf@x,?_floorf
  5234  002F4E  C051  F051         	movff	floorf@x+1,?_floorf+1
  5235  002F52  C052  F052         	movff	floorf@x+2,?_floorf+2
  5236  002F56  C053  F053         	movff	floorf@x+3,?_floorf+3
  5237  002F5A  EF73  F018         	goto	l1655
  5238  002F5E                     l8557:
  5239                           
  5240                           ; BSR set to: 0
  5241  002F5E  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5242  002F60  EFB4  F017         	goto	u9281
  5243  002F64  EFB6  F017         	goto	u9280
  5244  002F68                     u9281:
  5245  002F68  EF27  F018         	goto	l8567
  5246  002F6C                     u9280:
  5247  002F6C                     
  5248                           ; BSR set to: 0
  5249  002F6C  C077  F06D         	movff	floorf@e,??_floorf
  5250  002F70  0EFF               	movlw	255
  5251  002F72  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5252  002F74  0EFF               	movlw	255
  5253  002F76  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5254  002F78  0E7F               	movlw	127
  5255  002F7A  6F70               	movwf	(??_floorf+3)& (0+255),b
  5256  002F7C  0E00               	movlw	0
  5257  002F7E  6F71               	movwf	(??_floorf+4)& (0+255),b
  5258  002F80                     u9295:
  5259  002F80  676D               	tstfsz	??_floorf& (0+255),b
  5260  002F82  EFC5  F017         	goto	u9296
  5261  002F86  EFCD  F017         	goto	u9297
  5262  002F8A                     u9296:
  5263  002F8A  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  5264  002F8C  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5265  002F8E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5266  002F90  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5267  002F92  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5268  002F94  2F6D               	decfsz	??_floorf& (0+255),f,b
  5269  002F96  EFC0  F017         	goto	u9295
  5270  002F9A                     u9297:
  5271  002F9A  C06E  F073         	movff	??_floorf+1,floorf@m
  5272  002F9E  C06F  F074         	movff	??_floorf+2,floorf@m+1
  5273  002FA2  C070  F075         	movff	??_floorf+3,floorf@m+2
  5274  002FA6  C071  F076         	movff	??_floorf+4,floorf@m+3
  5275  002FAA  0100               	movlb	0	; () banked
  5276  002FAC  5173               	movf	floorf@m& (0+255),w,b
  5277  002FAE  1579               	andwf	floorf@u& (0+255),w,b
  5278  002FB0  6F6D               	movwf	??_floorf& (0+255),b
  5279  002FB2  5174               	movf	(floorf@m+1)& (0+255),w,b
  5280  002FB4  157A               	andwf	(floorf@u+1)& (0+255),w,b
  5281  002FB6  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5282  002FB8  5175               	movf	(floorf@m+2)& (0+255),w,b
  5283  002FBA  157B               	andwf	(floorf@u+2)& (0+255),w,b
  5284  002FBC  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5285  002FBE  5176               	movf	(floorf@m+3)& (0+255),w,b
  5286  002FC0  157C               	andwf	(floorf@u+3)& (0+255),w,b
  5287  002FC2  6F70               	movwf	(??_floorf+3)& (0+255),b
  5288  002FC4  516D               	movf	??_floorf& (0+255),w,b
  5289  002FC6  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5290  002FC8  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5291  002FCA  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5292  002FCC  A4D8               	btfss	status,2,c
  5293  002FCE  EFEB  F017         	goto	u9301
  5294  002FD2  EFED  F017         	goto	u9300
  5295  002FD6                     u9301:
  5296  002FD6  EFEF  F017         	goto	l8563
  5297  002FDA                     u9300:
  5298  002FDA  EFA5  F017         	goto	l8555
  5299  002FDE                     l8563:
  5300                           
  5301                           ; BSR set to: 0
  5302  002FDE  C079  F06D         	movff	floorf@u,??_floorf
  5303  002FE2  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5304  002FE6  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5305  002FEA  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5306  002FEE  0E20               	movlw	32
  5307  002FF0  EFFF  F017         	goto	u9310
  5308  002FF4                     u9315:
  5309  002FF4  90D8               	bcf	status,0,c
  5310  002FF6  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5311  002FF8  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5312  002FFA  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5313  002FFC  336D               	rrcf	??_floorf& (0+255),f,b
  5314  002FFE                     u9310:
  5315  002FFE  2EE8               	decfsz	wreg,f,c
  5316  003000  EFFA  F017         	goto	u9315
  5317  003004  516D               	movf	??_floorf& (0+255),w,b
  5318  003006  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5319  003008  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5320  00300A  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5321  00300C  B4D8               	btfsc	status,2,c
  5322  00300E  EF0B  F018         	goto	u9321
  5323  003012  EF0D  F018         	goto	u9320
  5324  003016                     u9321:
  5325  003016  EF15  F018         	goto	l1658
  5326  00301A                     u9320:
  5327  00301A                     
  5328                           ; BSR set to: 0
  5329  00301A  5173               	movf	floorf@m& (0+255),w,b
  5330  00301C  2779               	addwf	floorf@u& (0+255),f,b
  5331  00301E  5174               	movf	(floorf@m+1)& (0+255),w,b
  5332  003020  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  5333  003022  5175               	movf	(floorf@m+2)& (0+255),w,b
  5334  003024  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  5335  003026  5176               	movf	(floorf@m+3)& (0+255),w,b
  5336  003028  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  5337  00302A                     l1658:
  5338                           
  5339                           ; BSR set to: 0
  5340  00302A  1D73               	comf	floorf@m& (0+255),w,b
  5341  00302C  6F6D               	movwf	??_floorf& (0+255),b
  5342  00302E  1D74               	comf	(floorf@m+1)& (0+255),w,b
  5343  003030  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5344  003032  1D75               	comf	(floorf@m+2)& (0+255),w,b
  5345  003034  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5346  003036  1D76               	comf	(floorf@m+3)& (0+255),w,b
  5347  003038  6F70               	movwf	(??_floorf+3)& (0+255),b
  5348  00303A  516D               	movf	??_floorf& (0+255),w,b
  5349  00303C  1779               	andwf	floorf@u& (0+255),f,b
  5350  00303E  516E               	movf	(??_floorf+1)& (0+255),w,b
  5351  003040  177A               	andwf	(floorf@u+1)& (0+255),f,b
  5352  003042  516F               	movf	(??_floorf+2)& (0+255),w,b
  5353  003044  177B               	andwf	(floorf@u+2)& (0+255),f,b
  5354  003046  5170               	movf	(??_floorf+3)& (0+255),w,b
  5355  003048  177C               	andwf	(floorf@u+3)& (0+255),f,b
  5356  00304A  EF6B  F018         	goto	l8575
  5357  00304E                     l8567:
  5358                           
  5359                           ; BSR set to: 0
  5360  00304E  C079  F06D         	movff	floorf@u,??_floorf
  5361  003052  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5362  003056  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5363  00305A  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5364  00305E  0E20               	movlw	32
  5365  003060  EF37  F018         	goto	u9330
  5366  003064                     u9335:
  5367  003064  90D8               	bcf	status,0,c
  5368  003066  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5369  003068  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5370  00306A  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5371  00306C  336D               	rrcf	??_floorf& (0+255),f,b
  5372  00306E                     u9330:
  5373  00306E  2EE8               	decfsz	wreg,f,c
  5374  003070  EF32  F018         	goto	u9335
  5375  003074  516D               	movf	??_floorf& (0+255),w,b
  5376  003076  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5377  003078  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5378  00307A  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5379  00307C  A4D8               	btfss	status,2,c
  5380  00307E  EF43  F018         	goto	u9341
  5381  003082  EF45  F018         	goto	u9340
  5382  003086                     u9341:
  5383  003086  EF4F  F018         	goto	l8571
  5384  00308A                     u9340:
  5385  00308A                     
  5386                           ; BSR set to: 0
  5387  00308A  0E00               	movlw	0
  5388  00308C  6F79               	movwf	floorf@u& (0+255),b
  5389  00308E  0E00               	movlw	0
  5390  003090  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5391  003092  0E00               	movlw	0
  5392  003094  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5393  003096  0E00               	movlw	0
  5394  003098  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5395  00309A  EF6B  F018         	goto	l8575
  5396  00309E                     l8571:
  5397                           
  5398                           ; BSR set to: 0
  5399  00309E  90D8               	bcf	status,0,c
  5400  0030A0  3579               	rlcf	floorf@u& (0+255),w,b
  5401  0030A2  6F6D               	movwf	??_floorf& (0+255),b
  5402  0030A4  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  5403  0030A6  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5404  0030A8  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  5405  0030AA  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5406  0030AC  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  5407  0030AE  6F70               	movwf	(??_floorf+3)& (0+255),b
  5408  0030B0  516D               	movf	??_floorf& (0+255),w,b
  5409  0030B2  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5410  0030B4  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5411  0030B6  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5412  0030B8  B4D8               	btfsc	status,2,c
  5413  0030BA  EF61  F018         	goto	u9351
  5414  0030BE  EF63  F018         	goto	u9350
  5415  0030C2                     u9351:
  5416  0030C2  EF6B  F018         	goto	l8575
  5417  0030C6                     u9350:
  5418  0030C6                     
  5419                           ; BSR set to: 0
  5420  0030C6  0E00               	movlw	0
  5421  0030C8  6F79               	movwf	floorf@u& (0+255),b
  5422  0030CA  0E00               	movlw	0
  5423  0030CC  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5424  0030CE  0E80               	movlw	128
  5425  0030D0  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5426  0030D2  0EBF               	movlw	191
  5427  0030D4  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5428  0030D6                     l8575:
  5429                           
  5430                           ; BSR set to: 0
  5431  0030D6  C079  F050         	movff	floorf@u,?_floorf
  5432  0030DA  C07A  F051         	movff	floorf@u+1,?_floorf+1
  5433  0030DE  C07B  F052         	movff	floorf@u+2,?_floorf+2
  5434  0030E2  C07C  F053         	movff	floorf@u+3,?_floorf+3
  5435  0030E6                     l1655:
  5436                           
  5437                           ; BSR set to: 0
  5438  0030E6  0012               	return		;funcret
  5439  0030E8                     __end_of_floorf:
  5440                           	opt callstack 0
  5441                           
  5442 ;; *************** function ___fpclassifyf *****************
  5443 ;; Defined at:
  5444 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  x               4    5[COMRAM] float 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  u               4   15[COMRAM] struct .
  5449 ;;  e               2   13[COMRAM] int 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  2    5[COMRAM] int 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5459 ;;      Params:         4       0       0       0       0       0       0       0       0
  5460 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5461 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5462 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5463 ;;Total ram usage:       14 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    2
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_efgtoa
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           	psect	text11
  5474  004050                     __ptext11:
  5475                           	opt callstack 0
  5476  004050                     ___fpclassifyf:
  5477                           	opt callstack 23
  5478  004050  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5479  004054  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5480  004058  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5481  00405C  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5482  004060  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  5483  004064  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5484  004068  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5485  00406C  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5486  004070  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5487  004074  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5488  004078  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5489  00407C  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5490  004080  0E18               	movlw	24
  5491  004082  EF48  F020         	goto	u9140
  5492  004086                     u9145:
  5493  004086  90D8               	bcf	status,0,c
  5494  004088  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  5495  00408A  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  5496  00408C  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  5497  00408E  320A               	rrcf	??___fpclassifyf^0,f,c
  5498  004090                     u9140:
  5499  004090  2EE8               	decfsz	wreg,f,c
  5500  004092  EF43  F020         	goto	u9145
  5501  004096  500A               	movf	??___fpclassifyf^0,w,c
  5502  004098  6E0E               	movwf	___fpclassifyf@e^0,c
  5503  00409A  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  5504  00409C  500E               	movf	___fpclassifyf@e^0,w,c
  5505  00409E  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5506  0040A0  A4D8               	btfss	status,2,c
  5507  0040A2  EF55  F020         	goto	u9151
  5508  0040A6  EF57  F020         	goto	u9150
  5509  0040AA                     u9151:
  5510  0040AA  EF77  F020         	goto	l8527
  5511  0040AE                     u9150:
  5512  0040AE  90D8               	bcf	status,0,c
  5513  0040B0  3410               	rlcf	___fpclassifyf@u^0,w,c
  5514  0040B2  6E0A               	movwf	??___fpclassifyf^0,c
  5515  0040B4  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5516  0040B6  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  5517  0040B8  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5518  0040BA  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  5519  0040BC  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5520  0040BE  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  5521  0040C0  500A               	movf	??___fpclassifyf^0,w,c
  5522  0040C2  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5523  0040C4  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5524  0040C6  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5525  0040C8  A4D8               	btfss	status,2,c
  5526  0040CA  EF69  F020         	goto	u9161
  5527  0040CE  EF6B  F020         	goto	u9160
  5528  0040D2                     u9161:
  5529  0040D2  EF71  F020         	goto	l8523
  5530  0040D6                     u9160:
  5531  0040D6  0E00               	movlw	0
  5532  0040D8  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5533  0040DA  0E02               	movlw	2
  5534  0040DC  6E06               	movwf	?___fpclassifyf^0,c
  5535  0040DE  EFA6  F020         	goto	l1610
  5536  0040E2                     l8523:
  5537  0040E2  0E00               	movlw	0
  5538  0040E4  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5539  0040E6  0E03               	movlw	3
  5540  0040E8  6E06               	movwf	?___fpclassifyf^0,c
  5541  0040EA  EFA6  F020         	goto	l1610
  5542  0040EE                     l8527:
  5543  0040EE  280E               	incf	___fpclassifyf@e^0,w,c
  5544  0040F0  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5545  0040F2  A4D8               	btfss	status,2,c
  5546  0040F4  EF7E  F020         	goto	u9171
  5547  0040F8  EF80  F020         	goto	u9170
  5548  0040FC                     u9171:
  5549  0040FC  EFA2  F020         	goto	l8533
  5550  004100                     u9170:
  5551  004100  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5552  004104  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5553  004108  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5554  00410C  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5555  004110  0E09               	movlw	9
  5556  004112                     u9185:
  5557  004112  90D8               	bcf	status,0,c
  5558  004114  360A               	rlcf	??___fpclassifyf^0,f,c
  5559  004116  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  5560  004118  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  5561  00411A  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  5562  00411C  2EE8               	decfsz	wreg,f,c
  5563  00411E  EF89  F020         	goto	u9185
  5564  004122  500A               	movf	??___fpclassifyf^0,w,c
  5565  004124  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5566  004126  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5567  004128  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5568  00412A  B4D8               	btfsc	status,2,c
  5569  00412C  EF9A  F020         	goto	u9191
  5570  004130  EF9D  F020         	goto	u9190
  5571  004134                     u9191:
  5572  004134  0E01               	movlw	1
  5573  004136  EF9E  F020         	goto	u9200
  5574  00413A                     u9190:
  5575  00413A  0E00               	movlw	0
  5576  00413C                     u9200:
  5577  00413C  6E06               	movwf	?___fpclassifyf^0,c
  5578  00413E  6A07               	clrf	(?___fpclassifyf+1)^0,c
  5579  004140  EFA6  F020         	goto	l1610
  5580  004144                     l8533:
  5581  004144  0E00               	movlw	0
  5582  004146  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5583  004148  0E04               	movlw	4
  5584  00414A  6E06               	movwf	?___fpclassifyf^0,c
  5585  00414C                     l1610:
  5586  00414C  0012               	return		;funcret
  5587  00414E                     __end_of___fpclassifyf:
  5588                           	opt callstack 0
  5589                           
  5590 ;; *************** function ___fleq *****************
  5591 ;; Defined at:
  5592 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  ff1             4    5[COMRAM] int 
  5595 ;;  ff2             4    9[COMRAM] int 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;		None               void
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5607 ;;      Params:         8       0       0       0       0       0       0       0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5609 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5610 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5611 ;;Total ram usage:       12 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    2
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_efgtoa
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text12
  5622  004760                     __ptext12:
  5623                           	opt callstack 0
  5624  004760                     ___fleq:
  5625                           	opt callstack 23
  5626  004760  0E00               	movlw	0
  5627  004762  1406               	andwf	___fleq@ff1^0,w,c
  5628  004764  6E0E               	movwf	??___fleq^0,c
  5629  004766  0E00               	movlw	0
  5630  004768  1407               	andwf	(___fleq@ff1+1)^0,w,c
  5631  00476A  6E0F               	movwf	(??___fleq+1)^0,c
  5632  00476C  0E80               	movlw	128
  5633  00476E  1408               	andwf	(___fleq@ff1+2)^0,w,c
  5634  004770  6E10               	movwf	(??___fleq+2)^0,c
  5635  004772  0E7F               	movlw	127
  5636  004774  1409               	andwf	(___fleq@ff1+3)^0,w,c
  5637  004776  6E11               	movwf	(??___fleq+3)^0,c
  5638  004778  500E               	movf	??___fleq^0,w,c
  5639  00477A  100F               	iorwf	(??___fleq+1)^0,w,c
  5640  00477C  1010               	iorwf	(??___fleq+2)^0,w,c
  5641  00477E  1011               	iorwf	(??___fleq+3)^0,w,c
  5642  004780  A4D8               	btfss	status,2,c
  5643  004782  EFC5  F023         	goto	u9631
  5644  004786  EFC7  F023         	goto	u9630
  5645  00478A                     u9631:
  5646  00478A  EFCF  F023         	goto	l8759
  5647  00478E                     u9630:
  5648  00478E  0E00               	movlw	0
  5649  004790  6E06               	movwf	___fleq@ff1^0,c
  5650  004792  0E00               	movlw	0
  5651  004794  6E07               	movwf	(___fleq@ff1+1)^0,c
  5652  004796  0E00               	movlw	0
  5653  004798  6E08               	movwf	(___fleq@ff1+2)^0,c
  5654  00479A  0E00               	movlw	0
  5655  00479C  6E09               	movwf	(___fleq@ff1+3)^0,c
  5656  00479E                     l8759:
  5657  00479E  0E00               	movlw	0
  5658  0047A0  140A               	andwf	___fleq@ff2^0,w,c
  5659  0047A2  6E0E               	movwf	??___fleq^0,c
  5660  0047A4  0E00               	movlw	0
  5661  0047A6  140B               	andwf	(___fleq@ff2+1)^0,w,c
  5662  0047A8  6E0F               	movwf	(??___fleq+1)^0,c
  5663  0047AA  0E80               	movlw	128
  5664  0047AC  140C               	andwf	(___fleq@ff2+2)^0,w,c
  5665  0047AE  6E10               	movwf	(??___fleq+2)^0,c
  5666  0047B0  0E7F               	movlw	127
  5667  0047B2  140D               	andwf	(___fleq@ff2+3)^0,w,c
  5668  0047B4  6E11               	movwf	(??___fleq+3)^0,c
  5669  0047B6  500E               	movf	??___fleq^0,w,c
  5670  0047B8  100F               	iorwf	(??___fleq+1)^0,w,c
  5671  0047BA  1010               	iorwf	(??___fleq+2)^0,w,c
  5672  0047BC  1011               	iorwf	(??___fleq+3)^0,w,c
  5673  0047BE  A4D8               	btfss	status,2,c
  5674  0047C0  EFE4  F023         	goto	u9641
  5675  0047C4  EFE6  F023         	goto	u9640
  5676  0047C8                     u9641:
  5677  0047C8  EFEE  F023         	goto	l8763
  5678  0047CC                     u9640:
  5679  0047CC  0E00               	movlw	0
  5680  0047CE  6E0A               	movwf	___fleq@ff2^0,c
  5681  0047D0  0E00               	movlw	0
  5682  0047D2  6E0B               	movwf	(___fleq@ff2+1)^0,c
  5683  0047D4  0E00               	movlw	0
  5684  0047D6  6E0C               	movwf	(___fleq@ff2+2)^0,c
  5685  0047D8  0E00               	movlw	0
  5686  0047DA  6E0D               	movwf	(___fleq@ff2+3)^0,c
  5687  0047DC                     l8763:
  5688  0047DC  500A               	movf	___fleq@ff2^0,w,c
  5689  0047DE  1806               	xorwf	___fleq@ff1^0,w,c
  5690  0047E0  E10F               	bnz	u9650
  5691  0047E2  500B               	movf	(___fleq@ff2+1)^0,w,c
  5692  0047E4  1807               	xorwf	(___fleq@ff1+1)^0,w,c
  5693  0047E6  E10C               	bnz	u9650
  5694  0047E8  500C               	movf	(___fleq@ff2+2)^0,w,c
  5695  0047EA  1808               	xorwf	(___fleq@ff1+2)^0,w,c
  5696  0047EC  E109               	bnz	u9650
  5697  0047EE  500D               	movf	(___fleq@ff2+3)^0,w,c
  5698  0047F0  1809               	xorwf	(___fleq@ff1+3)^0,w,c
  5699  0047F2  B4D8               	btfsc	status,2,c
  5700  0047F4  EFFE  F023         	goto	u9651
  5701  0047F8  EF00  F024         	goto	u9650
  5702  0047FC                     u9651:
  5703  0047FC  EF03  F024         	goto	l8767
  5704  004800                     u9650:
  5705  004800  90D8               	bcf	status,0,c
  5706  004802  EF04  F024         	goto	l1188
  5707  004806                     l8767:
  5708  004806  80D8               	bsf	status,0,c
  5709  004808                     l1188:
  5710  004808  0012               	return		;funcret
  5711  00480A                     __end_of___fleq:
  5712                           	opt callstack 0
  5713                           
  5714 ;; *************** function ___awmod *****************
  5715 ;; Defined at:
  5716 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  dividend        2    5[COMRAM] int 
  5719 ;;  divisor         2    7[COMRAM] int 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  sign            1   10[COMRAM] unsigned char 
  5722 ;;  counter         1    9[COMRAM] unsigned char 
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  2    5[COMRAM] int 
  5725 ;; Registers used:
  5726 ;;		wreg, status,2, status,0
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5732 ;;      Params:         4       0       0       0       0       0       0       0       0
  5733 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5735 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5736 ;;Total ram usage:        6 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; Hardware stack levels required when called:    2
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_efgtoa
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text13
  5747  004602                     __ptext13:
  5748                           	opt callstack 0
  5749  004602                     ___awmod:
  5750                           	opt callstack 23
  5751  004602  0E00               	movlw	0
  5752  004604  6E0B               	movwf	___awmod@sign^0,c
  5753  004606  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  5754  004608  EF0A  F023         	goto	u9570
  5755  00460C  EF08  F023         	goto	u9571
  5756  004610                     u9571:
  5757  004610  EF10  F023         	goto	l8727
  5758  004614                     u9570:
  5759  004614  6C06               	negf	___awmod@dividend^0,c
  5760  004616  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5761  004618  B0D8               	btfsc	status,0,c
  5762  00461A  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5763  00461C  0E01               	movlw	1
  5764  00461E  6E0B               	movwf	___awmod@sign^0,c
  5765  004620                     l8727:
  5766  004620  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  5767  004622  EF17  F023         	goto	u9580
  5768  004626  EF15  F023         	goto	u9581
  5769  00462A                     u9581:
  5770  00462A  EF1B  F023         	goto	l8731
  5771  00462E                     u9580:
  5772  00462E  6C08               	negf	___awmod@divisor^0,c
  5773  004630  1E09               	comf	(___awmod@divisor+1)^0,f,c
  5774  004632  B0D8               	btfsc	status,0,c
  5775  004634  2A09               	incf	(___awmod@divisor+1)^0,f,c
  5776  004636                     l8731:
  5777  004636  5008               	movf	___awmod@divisor^0,w,c
  5778  004638  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  5779  00463A  B4D8               	btfsc	status,2,c
  5780  00463C  EF22  F023         	goto	u9591
  5781  004640  EF24  F023         	goto	u9590
  5782  004644                     u9591:
  5783  004644  EF48  F023         	goto	l8747
  5784  004648                     u9590:
  5785  004648  0E01               	movlw	1
  5786  00464A  6E0A               	movwf	___awmod@counter^0,c
  5787  00464C  EF2C  F023         	goto	l8737
  5788  004650                     l8735:
  5789  004650  90D8               	bcf	status,0,c
  5790  004652  3608               	rlcf	___awmod@divisor^0,f,c
  5791  004654  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  5792  004656  2A0A               	incf	___awmod@counter^0,f,c
  5793  004658                     l8737:
  5794  004658  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  5795  00465A  EF31  F023         	goto	u9601
  5796  00465E  EF33  F023         	goto	u9600
  5797  004662                     u9601:
  5798  004662  EF28  F023         	goto	l8735
  5799  004666                     u9600:
  5800  004666                     l8739:
  5801  004666  5008               	movf	___awmod@divisor^0,w,c
  5802  004668  5C06               	subwf	___awmod@dividend^0,w,c
  5803  00466A  5009               	movf	(___awmod@divisor+1)^0,w,c
  5804  00466C  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  5805  00466E  A0D8               	btfss	status,0,c
  5806  004670  EF3C  F023         	goto	u9611
  5807  004674  EF3E  F023         	goto	u9610
  5808  004678                     u9611:
  5809  004678  EF42  F023         	goto	l8743
  5810  00467C                     u9610:
  5811  00467C  5008               	movf	___awmod@divisor^0,w,c
  5812  00467E  5E06               	subwf	___awmod@dividend^0,f,c
  5813  004680  5009               	movf	(___awmod@divisor+1)^0,w,c
  5814  004682  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  5815  004684                     l8743:
  5816  004684  90D8               	bcf	status,0,c
  5817  004686  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  5818  004688  3208               	rrcf	___awmod@divisor^0,f,c
  5819  00468A  2E0A               	decfsz	___awmod@counter^0,f,c
  5820  00468C  EF33  F023         	goto	l8739
  5821  004690                     l8747:
  5822  004690  500B               	movf	___awmod@sign^0,w,c
  5823  004692  B4D8               	btfsc	status,2,c
  5824  004694  EF4E  F023         	goto	u9621
  5825  004698  EF50  F023         	goto	u9620
  5826  00469C                     u9621:
  5827  00469C  EF54  F023         	goto	l8751
  5828  0046A0                     u9620:
  5829  0046A0  6C06               	negf	___awmod@dividend^0,c
  5830  0046A2  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5831  0046A4  B0D8               	btfsc	status,0,c
  5832  0046A6  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5833  0046A8                     l8751:
  5834  0046A8  C006  F006         	movff	___awmod@dividend,?___awmod
  5835  0046AC  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  5836  0046B0  0012               	return		;funcret
  5837  0046B2                     __end_of___awmod:
  5838                           	opt callstack 0
  5839                           
  5840 ;; *************** function ___awdiv *****************
  5841 ;; Defined at:
  5842 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  dividend        2    5[COMRAM] int 
  5845 ;;  divisor         2    7[COMRAM] int 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  quotient        2   11[COMRAM] int 
  5848 ;;  sign            1   10[COMRAM] unsigned char 
  5849 ;;  counter         1    9[COMRAM] unsigned char 
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  2    5[COMRAM] int 
  5852 ;; Registers used:
  5853 ;;		wreg, status,2, status,0
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5859 ;;      Params:         4       0       0       0       0       0       0       0       0
  5860 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5862 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5863 ;;Total ram usage:        8 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    2
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_efgtoa
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text14
  5874  00447C                     __ptext14:
  5875                           	opt callstack 0
  5876  00447C                     ___awdiv:
  5877                           	opt callstack 23
  5878  00447C  0E00               	movlw	0
  5879  00447E  6E0B               	movwf	___awdiv@sign^0,c
  5880  004480  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  5881  004482  EF47  F022         	goto	u9510
  5882  004486  EF45  F022         	goto	u9511
  5883  00448A                     u9511:
  5884  00448A  EF4D  F022         	goto	l8683
  5885  00448E                     u9510:
  5886  00448E  6C08               	negf	___awdiv@divisor^0,c
  5887  004490  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  5888  004492  B0D8               	btfsc	status,0,c
  5889  004494  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  5890  004496  0E01               	movlw	1
  5891  004498  6E0B               	movwf	___awdiv@sign^0,c
  5892  00449A                     l8683:
  5893  00449A  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  5894  00449C  EF54  F022         	goto	u9520
  5895  0044A0  EF52  F022         	goto	u9521
  5896  0044A4                     u9521:
  5897  0044A4  EF5A  F022         	goto	l8689
  5898  0044A8                     u9520:
  5899  0044A8  6C06               	negf	___awdiv@dividend^0,c
  5900  0044AA  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  5901  0044AC  B0D8               	btfsc	status,0,c
  5902  0044AE  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  5903  0044B0  0E01               	movlw	1
  5904  0044B2  1A0B               	xorwf	___awdiv@sign^0,f,c
  5905  0044B4                     l8689:
  5906  0044B4  0E00               	movlw	0
  5907  0044B6  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  5908  0044B8  0E00               	movlw	0
  5909  0044BA  6E0C               	movwf	___awdiv@quotient^0,c
  5910  0044BC  5008               	movf	___awdiv@divisor^0,w,c
  5911  0044BE  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  5912  0044C0  B4D8               	btfsc	status,2,c
  5913  0044C2  EF65  F022         	goto	u9531
  5914  0044C6  EF67  F022         	goto	u9530
  5915  0044CA                     u9531:
  5916  0044CA  EF8F  F022         	goto	l8711
  5917  0044CE                     u9530:
  5918  0044CE  0E01               	movlw	1
  5919  0044D0  6E0A               	movwf	___awdiv@counter^0,c
  5920  0044D2  EF6F  F022         	goto	l8697
  5921  0044D6                     l8695:
  5922  0044D6  90D8               	bcf	status,0,c
  5923  0044D8  3608               	rlcf	___awdiv@divisor^0,f,c
  5924  0044DA  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  5925  0044DC  2A0A               	incf	___awdiv@counter^0,f,c
  5926  0044DE                     l8697:
  5927  0044DE  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  5928  0044E0  EF74  F022         	goto	u9541
  5929  0044E4  EF76  F022         	goto	u9540
  5930  0044E8                     u9541:
  5931  0044E8  EF6B  F022         	goto	l8695
  5932  0044EC                     u9540:
  5933  0044EC                     l8699:
  5934  0044EC  90D8               	bcf	status,0,c
  5935  0044EE  360C               	rlcf	___awdiv@quotient^0,f,c
  5936  0044F0  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  5937  0044F2  5008               	movf	___awdiv@divisor^0,w,c
  5938  0044F4  5C06               	subwf	___awdiv@dividend^0,w,c
  5939  0044F6  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5940  0044F8  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  5941  0044FA  A0D8               	btfss	status,0,c
  5942  0044FC  EF82  F022         	goto	u9551
  5943  004500  EF84  F022         	goto	u9550
  5944  004504                     u9551:
  5945  004504  EF89  F022         	goto	l8707
  5946  004508                     u9550:
  5947  004508  5008               	movf	___awdiv@divisor^0,w,c
  5948  00450A  5E06               	subwf	___awdiv@dividend^0,f,c
  5949  00450C  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5950  00450E  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  5951  004510  800C               	bsf	___awdiv@quotient^0,0,c
  5952  004512                     l8707:
  5953  004512  90D8               	bcf	status,0,c
  5954  004514  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  5955  004516  3208               	rrcf	___awdiv@divisor^0,f,c
  5956  004518  2E0A               	decfsz	___awdiv@counter^0,f,c
  5957  00451A  EF76  F022         	goto	l8699
  5958  00451E                     l8711:
  5959  00451E  500B               	movf	___awdiv@sign^0,w,c
  5960  004520  B4D8               	btfsc	status,2,c
  5961  004522  EF95  F022         	goto	u9561
  5962  004526  EF97  F022         	goto	u9560
  5963  00452A                     u9561:
  5964  00452A  EF9B  F022         	goto	l8715
  5965  00452E                     u9560:
  5966  00452E  6C0C               	negf	___awdiv@quotient^0,c
  5967  004530  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  5968  004532  B0D8               	btfsc	status,0,c
  5969  004534  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  5970  004536                     l8715:
  5971  004536  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5972  00453A  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5973  00453E  0012               	return		;funcret
  5974  004540                     __end_of___awdiv:
  5975                           	opt callstack 0
  5976                           
  5977 ;; *************** function _dtoa *****************
  5978 ;; Defined at:
  5979 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  5982 ;;		 -> sprintf@f(6), 
  5983 ;;  d               8   34[COMRAM] long long 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  n               8   58[COMRAM] long long 
  5986 ;;  i               2   66[COMRAM] int 
  5987 ;;  s               2   56[COMRAM] int 
  5988 ;;  w               2   54[COMRAM] int 
  5989 ;;  p               2   52[COMRAM] int 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  2   32[COMRAM] int 
  5992 ;; Registers used:
  5993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5999 ;;      Params:        10       0       0       0       0       0       0       0       0
  6000 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6001 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6002 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6003 ;;Total ram usage:       36 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    6
  6006 ;; This function calls:
  6007 ;;		___aodiv
  6008 ;;		___aomod
  6009 ;;		_abs
  6010 ;;		_pad
  6011 ;; This function is called by:
  6012 ;;		_vfpfcnvrt
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text15
  6017  00299E                     __ptext15:
  6018                           	opt callstack 0
  6019  00299E                     _dtoa:
  6020                           	opt callstack 20
  6021  00299E                     
  6022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6023  00299E  C023  F03B         	movff	dtoa@d,dtoa@n
  6024  0029A2  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
  6025  0029A6  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
  6026  0029AA  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
  6027  0029AE  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
  6028  0029B2  C028  F040         	movff	dtoa@d+5,dtoa@n+5
  6029  0029B6  C029  F041         	movff	dtoa@d+6,dtoa@n+6
  6030  0029BA  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
  6031  0029BE                     
  6032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6033  0029BE  BE42               	btfsc	(dtoa@n+7)^0,7,c
  6034  0029C0  EFE4  F014         	goto	u9741
  6035  0029C4  EFE7  F014         	goto	u9740
  6036  0029C8                     u9741:
  6037  0029C8  0E01               	movlw	1
  6038  0029CA  EFE8  F014         	goto	u9750
  6039  0029CE                     u9740:
  6040  0029CE  0E00               	movlw	0
  6041  0029D0                     u9750:
  6042  0029D0  6E39               	movwf	dtoa@s^0,c
  6043  0029D2  6A3A               	clrf	(dtoa@s+1)^0,c
  6044                           
  6045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6046  0029D4  5039               	movf	dtoa@s^0,w,c
  6047  0029D6  103A               	iorwf	(dtoa@s+1)^0,w,c
  6048  0029D8  B4D8               	btfsc	status,2,c
  6049  0029DA  EFF1  F014         	goto	u9761
  6050  0029DE  EFF3  F014         	goto	u9760
  6051  0029E2                     u9761:
  6052  0029E2  EF03  F015         	goto	l8835
  6053  0029E6                     u9760:
  6054  0029E6                     
  6055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6056  0029E6  1E42               	comf	(dtoa@n+7)^0,f,c
  6057  0029E8  1E41               	comf	(dtoa@n+6)^0,f,c
  6058  0029EA  1E40               	comf	(dtoa@n+5)^0,f,c
  6059  0029EC  1E3F               	comf	(dtoa@n+4)^0,f,c
  6060  0029EE  1E3E               	comf	(dtoa@n+3)^0,f,c
  6061  0029F0  1E3D               	comf	(dtoa@n+2)^0,f,c
  6062  0029F2  1E3C               	comf	(dtoa@n+1)^0,f,c
  6063  0029F4  6C3B               	negf	dtoa@n^0,c
  6064  0029F6  0E00               	movlw	0
  6065  0029F8  223C               	addwfc	(dtoa@n+1)^0,f,c
  6066  0029FA  223D               	addwfc	(dtoa@n+2)^0,f,c
  6067  0029FC  223E               	addwfc	(dtoa@n+3)^0,f,c
  6068  0029FE  223F               	addwfc	(dtoa@n+4)^0,f,c
  6069  002A00  2240               	addwfc	(dtoa@n+5)^0,f,c
  6070  002A02  2241               	addwfc	(dtoa@n+6)^0,f,c
  6071  002A04  2242               	addwfc	(dtoa@n+7)^0,f,c
  6072  002A06                     l8835:
  6073                           
  6074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6075  002A06  0101               	movlb	1	; () banked
  6076  002A08  BF2D               	btfsc	(_prec+1)& (0+255),7,b
  6077  002A0A  EF09  F015         	goto	u9771
  6078  002A0E  EF0B  F015         	goto	u9770
  6079  002A12                     u9771:
  6080  002A12  EF0C  F015         	goto	l8839
  6081  002A16                     u9770:
  6082  002A16                     
  6083                           ; BSR set to: 1
  6084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6085  002A16  932E               	bcf	_flags& (0+255),1,b
  6086  002A18                     l8839:
  6087                           
  6088                           ; BSR set to: 1
  6089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6090  002A18  BF2D               	btfsc	(_prec+1)& (0+255),7,b
  6091  002A1A  EF19  F015         	goto	u9780
  6092  002A1E  512D               	movf	(_prec+1)& (0+255),w,b
  6093  002A20  E106               	bnz	u9781
  6094  002A22  052C               	decf	_prec& (0+255),w,b
  6095  002A24  B0D8               	btfsc	status,0,c
  6096  002A26  EF17  F015         	goto	u9781
  6097  002A2A  EF19  F015         	goto	u9780
  6098  002A2E                     u9781:
  6099  002A2E  EF1F  F015         	goto	l781
  6100  002A32                     u9780:
  6101  002A32                     
  6102                           ; BSR set to: 1
  6103  002A32  0E00               	movlw	0
  6104  002A34  6E36               	movwf	(dtoa@p+1)^0,c
  6105  002A36  0E01               	movlw	1
  6106  002A38  6E35               	movwf	dtoa@p^0,c
  6107  002A3A  EF23  F015         	goto	l783
  6108  002A3E                     l781:
  6109                           
  6110                           ; BSR set to: 1
  6111  002A3E  C12C  F035         	movff	_prec,dtoa@p
  6112  002A42  C12D  F036         	movff	_prec+1,dtoa@p+1
  6113  002A46                     l783:
  6114                           
  6115                           ; BSR set to: 1
  6116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6117  002A46  C12A  F037         	movff	_width,dtoa@w
  6118  002A4A  C12B  F038         	movff	_width+1,dtoa@w+1
  6119  002A4E                     
  6120                           ; BSR set to: 1
  6121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6122  002A4E  5039               	movf	dtoa@s^0,w,c
  6123  002A50  103A               	iorwf	(dtoa@s+1)^0,w,c
  6124  002A52  A4D8               	btfss	status,2,c
  6125  002A54  EF2E  F015         	goto	u9791
  6126  002A58  EF30  F015         	goto	u9790
  6127  002A5C                     u9791:
  6128  002A5C  EF37  F015         	goto	l8847
  6129  002A60                     u9790:
  6130  002A60                     
  6131                           ; BSR set to: 1
  6132  002A60  A52E               	btfss	_flags& (0+255),2,b
  6133  002A62  EF35  F015         	goto	u9801
  6134  002A66  EF37  F015         	goto	u9800
  6135  002A6A                     u9801:
  6136  002A6A  EF3A  F015         	goto	l8849
  6137  002A6E                     u9800:
  6138  002A6E                     l8847:
  6139                           
  6140                           ; BSR set to: 1
  6141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6142  002A6E  0637               	decf	dtoa@w^0,f,c
  6143  002A70  A0D8               	btfss	status,0,c
  6144  002A72  0638               	decf	(dtoa@w+1)^0,f,c
  6145  002A74                     l8849:
  6146                           
  6147                           ; BSR set to: 1
  6148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6149  002A74  0E00               	movlw	0
  6150  002A76  6E44               	movwf	(dtoa@i+1)^0,c
  6151  002A78  0E4F               	movlw	79
  6152  002A7A  6E43               	movwf	dtoa@i^0,c
  6153  002A7C                     
  6154                           ; BSR set to: 1
  6155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6156  002A7C  0E00               	movlw	0
  6157  002A7E  6F89               	movwf	(_dbuf+79)& (0+255),b
  6158                           
  6159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6160  002A80  EFBE  F015         	goto	l8863
  6161  002A84                     l8853:
  6162                           
  6163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6164  002A84  0643               	decf	dtoa@i^0,f,c
  6165  002A86  A0D8               	btfss	status,0,c
  6166  002A88  0644               	decf	(dtoa@i+1)^0,f,c
  6167  002A8A                     
  6168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6169  002A8A  0E3A               	movlw	low _dbuf
  6170  002A8C  2443               	addwf	dtoa@i^0,w,c
  6171  002A8E  6ED9               	movwf	fsr2l,c
  6172  002A90  0E01               	movlw	high _dbuf
  6173  002A92  2044               	addwfc	(dtoa@i+1)^0,w,c
  6174  002A94  6EDA               	movwf	fsr2h,c
  6175  002A96  C03B  F006         	movff	dtoa@n,___aomod@dividend
  6176  002A9A  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
  6177  002A9E  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
  6178  002AA2  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
  6179  002AA6  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  6180  002AAA  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  6181  002AAE  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  6182  002AB2  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  6183  002AB6  0E0A               	movlw	10
  6184  002AB8  6E0E               	movwf	___aomod@divisor^0,c
  6185  002ABA  0E00               	movlw	0
  6186  002ABC  6E0F               	movwf	(___aomod@divisor+1)^0,c
  6187  002ABE  0E00               	movlw	0
  6188  002AC0  6E10               	movwf	(___aomod@divisor+2)^0,c
  6189  002AC2  0E00               	movlw	0
  6190  002AC4  6E11               	movwf	(___aomod@divisor+3)^0,c
  6191  002AC6  0E00               	movlw	0
  6192  002AC8  6E12               	movwf	(___aomod@divisor+4)^0,c
  6193  002ACA  0E00               	movlw	0
  6194  002ACC  6E13               	movwf	(___aomod@divisor+5)^0,c
  6195  002ACE  0E00               	movlw	0
  6196  002AD0  6E14               	movwf	(___aomod@divisor+6)^0,c
  6197  002AD2  0E00               	movlw	0
  6198  002AD4  6E15               	movwf	(___aomod@divisor+7)^0,c
  6199  002AD6  EC39  F01D         	call	___aomod	;wreg free
  6200  002ADA  C006  F02B         	movff	?___aomod,??_dtoa
  6201  002ADE  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  6202  002AE2  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  6203  002AE6  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  6204  002AEA  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  6205  002AEE  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  6206  002AF2  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  6207  002AF6  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  6208  002AFA  C02B  F018         	movff	??_dtoa,abs@a
  6209  002AFE  C02D  F019         	movff	??_dtoa+2,abs@a+1
  6210  002B02  ECF2  F028         	call	_abs	;wreg free
  6211  002B06  5018               	movf	?_abs^0,w,c
  6212  002B08  0F30               	addlw	48
  6213  002B0A  6EDF               	movwf	indf2,c
  6214  002B0C                     
  6215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6216  002B0C  0635               	decf	dtoa@p^0,f,c
  6217  002B0E  A0D8               	btfss	status,0,c
  6218  002B10  0636               	decf	(dtoa@p+1)^0,f,c
  6219  002B12                     
  6220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6221  002B12  0637               	decf	dtoa@w^0,f,c
  6222  002B14  A0D8               	btfss	status,0,c
  6223  002B16  0638               	decf	(dtoa@w+1)^0,f,c
  6224  002B18                     
  6225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6226  002B18  C03B  F006         	movff	dtoa@n,___aodiv@dividend
  6227  002B1C  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  6228  002B20  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  6229  002B24  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  6230  002B28  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  6231  002B2C  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  6232  002B30  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  6233  002B34  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  6234  002B38  0E0A               	movlw	10
  6235  002B3A  6E0E               	movwf	___aodiv@divisor^0,c
  6236  002B3C  0E00               	movlw	0
  6237  002B3E  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  6238  002B40  0E00               	movlw	0
  6239  002B42  6E10               	movwf	(___aodiv@divisor+2)^0,c
  6240  002B44  0E00               	movlw	0
  6241  002B46  6E11               	movwf	(___aodiv@divisor+3)^0,c
  6242  002B48  0E00               	movlw	0
  6243  002B4A  6E12               	movwf	(___aodiv@divisor+4)^0,c
  6244  002B4C  0E00               	movlw	0
  6245  002B4E  6E13               	movwf	(___aodiv@divisor+5)^0,c
  6246  002B50  0E00               	movlw	0
  6247  002B52  6E14               	movwf	(___aodiv@divisor+6)^0,c
  6248  002B54  0E00               	movlw	0
  6249  002B56  6E15               	movwf	(___aodiv@divisor+7)^0,c
  6250  002B58  ECF4  F01A         	call	___aodiv	;wreg free
  6251  002B5C  C006  F03B         	movff	?___aodiv,dtoa@n
  6252  002B60  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
  6253  002B64  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
  6254  002B68  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
  6255  002B6C  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
  6256  002B70  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
  6257  002B74  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
  6258  002B78  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
  6259  002B7C                     l8863:
  6260                           
  6261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6262  002B7C  BE44               	btfsc	(dtoa@i+1)^0,7,c
  6263  002B7E  EFC9  F015         	goto	u9811
  6264  002B82  5044               	movf	(dtoa@i+1)^0,w,c
  6265  002B84  E108               	bnz	u9810
  6266  002B86  0443               	decf	dtoa@i^0,w,c
  6267  002B88  A0D8               	btfss	status,0,c
  6268  002B8A  EFC9  F015         	goto	u9811
  6269  002B8E  EFCB  F015         	goto	u9810
  6270  002B92                     u9811:
  6271  002B92  EFFC  F015         	goto	l8873
  6272  002B96                     u9810:
  6273  002B96  503B               	movf	dtoa@n^0,w,c
  6274  002B98  103C               	iorwf	(dtoa@n+1)^0,w,c
  6275  002B9A  103D               	iorwf	(dtoa@n+2)^0,w,c
  6276  002B9C  103E               	iorwf	(dtoa@n+3)^0,w,c
  6277  002B9E  103F               	iorwf	(dtoa@n+4)^0,w,c
  6278  002BA0  1040               	iorwf	(dtoa@n+5)^0,w,c
  6279  002BA2  1041               	iorwf	(dtoa@n+6)^0,w,c
  6280  002BA4  1042               	iorwf	(dtoa@n+7)^0,w,c
  6281  002BA6  A4D8               	btfss	status,2,c
  6282  002BA8  EFD8  F015         	goto	u9821
  6283  002BAC  EFDA  F015         	goto	u9820
  6284  002BB0                     u9821:
  6285  002BB0  EF42  F015         	goto	l8853
  6286  002BB4                     u9820:
  6287  002BB4  BE36               	btfsc	(dtoa@p+1)^0,7,c
  6288  002BB6  EFE7  F015         	goto	u9830
  6289  002BBA  5036               	movf	(dtoa@p+1)^0,w,c
  6290  002BBC  E106               	bnz	u9831
  6291  002BBE  0435               	decf	dtoa@p^0,w,c
  6292  002BC0  B0D8               	btfsc	status,0,c
  6293  002BC2  EFE5  F015         	goto	u9831
  6294  002BC6  EFE7  F015         	goto	u9830
  6295  002BCA                     u9831:
  6296  002BCA  EF42  F015         	goto	l8853
  6297  002BCE                     u9830:
  6298  002BCE  BE38               	btfsc	(dtoa@w+1)^0,7,c
  6299  002BD0  EFF2  F015         	goto	u9841
  6300  002BD4  5038               	movf	(dtoa@w+1)^0,w,c
  6301  002BD6  E108               	bnz	u9840
  6302  002BD8  0437               	decf	dtoa@w^0,w,c
  6303  002BDA  A0D8               	btfss	status,0,c
  6304  002BDC  EFF2  F015         	goto	u9841
  6305  002BE0  EFF4  F015         	goto	u9840
  6306  002BE4                     u9841:
  6307  002BE4  EFFC  F015         	goto	l8873
  6308  002BE8                     u9840:
  6309  002BE8  0101               	movlb	1	; () banked
  6310  002BEA  B32E               	btfsc	_flags& (0+255),1,b
  6311  002BEC  EFFA  F015         	goto	u9851
  6312  002BF0  EFFC  F015         	goto	u9850
  6313  002BF4                     u9851:
  6314  002BF4  EF42  F015         	goto	l8853
  6315  002BF8                     u9850:
  6316  002BF8                     l8873:
  6317                           
  6318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6319  002BF8  5039               	movf	dtoa@s^0,w,c
  6320  002BFA  103A               	iorwf	(dtoa@s+1)^0,w,c
  6321  002BFC  A4D8               	btfss	status,2,c
  6322  002BFE  EF03  F016         	goto	u9861
  6323  002C02  EF05  F016         	goto	u9860
  6324  002C06                     u9861:
  6325  002C06  EF0D  F016         	goto	l8877
  6326  002C0A                     u9860:
  6327  002C0A  0101               	movlb	1	; () banked
  6328  002C0C  A52E               	btfss	_flags& (0+255),2,b
  6329  002C0E  EF0B  F016         	goto	u9871
  6330  002C12  EF0D  F016         	goto	u9870
  6331  002C16                     u9871:
  6332  002C16  EF2B  F016         	goto	l8887
  6333  002C1A                     u9870:
  6334  002C1A                     l8877:
  6335                           
  6336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6337  002C1A  0643               	decf	dtoa@i^0,f,c
  6338  002C1C  A0D8               	btfss	status,0,c
  6339  002C1E  0644               	decf	(dtoa@i+1)^0,f,c
  6340  002C20                     
  6341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6342  002C20  5039               	movf	dtoa@s^0,w,c
  6343  002C22  103A               	iorwf	(dtoa@s+1)^0,w,c
  6344  002C24  A4D8               	btfss	status,2,c
  6345  002C26  EF17  F016         	goto	u9881
  6346  002C2A  EF19  F016         	goto	u9880
  6347  002C2E                     u9881:
  6348  002C2E  EF1F  F016         	goto	l8883
  6349  002C32                     u9880:
  6350  002C32  0E00               	movlw	0
  6351  002C34  6E34               	movwf	(_dtoa$897+1)^0,c
  6352  002C36  0E2B               	movlw	43
  6353  002C38  6E33               	movwf	_dtoa$897^0,c
  6354  002C3A  EF23  F016         	goto	l8885
  6355  002C3E                     l8883:
  6356  002C3E  0E00               	movlw	0
  6357  002C40  6E34               	movwf	(_dtoa$897+1)^0,c
  6358  002C42  0E2D               	movlw	45
  6359  002C44  6E33               	movwf	_dtoa$897^0,c
  6360  002C46                     l8885:
  6361  002C46  0E3A               	movlw	low _dbuf
  6362  002C48  2443               	addwf	dtoa@i^0,w,c
  6363  002C4A  6ED9               	movwf	fsr2l,c
  6364  002C4C  0E01               	movlw	high _dbuf
  6365  002C4E  2044               	addwfc	(dtoa@i+1)^0,w,c
  6366  002C50  6EDA               	movwf	fsr2h,c
  6367  002C52  C033  FFDF         	movff	_dtoa$897,indf2
  6368  002C56                     l8887:
  6369                           
  6370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6371  002C56  C021  F016         	movff	dtoa@fp,pad@fp
  6372  002C5A  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  6373  002C5E  0E3A               	movlw	low _dbuf
  6374  002C60  2443               	addwf	dtoa@i^0,w,c
  6375  002C62  6E18               	movwf	pad@buf^0,c
  6376  002C64  0E01               	movlw	high _dbuf
  6377  002C66  2044               	addwfc	(dtoa@i+1)^0,w,c
  6378  002C68  6E19               	movwf	(pad@buf+1)^0,c
  6379  002C6A  C037  F01A         	movff	dtoa@w,pad@p
  6380  002C6E  C038  F01B         	movff	dtoa@w+1,pad@p+1
  6381  002C72  ECDB  F021         	call	_pad	;wreg free
  6382  002C76  C016  F021         	movff	?_pad,?_dtoa
  6383  002C7A  C017  F022         	movff	?_pad+1,?_dtoa+1
  6384  002C7E  0012               	return		;funcret
  6385  002C80                     __end_of_dtoa:
  6386                           	opt callstack 0
  6387                           
  6388 ;; *************** function _pad *****************
  6389 ;; Defined at:
  6390 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  6393 ;;		 -> sprintf@f(6), 
  6394 ;;  buf             2   23[COMRAM] PTR unsigned char 
  6395 ;;		 -> dbuf(80), 
  6396 ;;  p               2   25[COMRAM] int 
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;  w               2   30[COMRAM] int 
  6399 ;;  i               2   28[COMRAM] int 
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  2   21[COMRAM] int 
  6402 ;; Registers used:
  6403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6409 ;;      Params:         6       0       0       0       0       0       0       0       0
  6410 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6411 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6412 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6413 ;;Total ram usage:       11 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; Hardware stack levels required when called:    5
  6416 ;; This function calls:
  6417 ;;		_fputc
  6418 ;;		_fputs
  6419 ;;		_strlen
  6420 ;; This function is called by:
  6421 ;;		_dtoa
  6422 ;;		_efgtoa
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text16
  6427  0043B6                     __ptext16:
  6428                           	opt callstack 0
  6429  0043B6                     _pad:
  6430                           	opt callstack 20
  6431  0043B6                     
  6432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6433  0043B6  0101               	movlb	1	; () banked
  6434  0043B8  A12E               	btfss	_flags& (0+255),0,b
  6435  0043BA  EFE1  F021         	goto	u9091
  6436  0043BE  EFE3  F021         	goto	u9090
  6437  0043C2                     u9091:
  6438  0043C2  EFED  F021         	goto	l8493
  6439  0043C6                     u9090:
  6440  0043C6                     
  6441                           ; BSR set to: 1
  6442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6443  0043C6  C018  F00F         	movff	pad@buf,fputs@s
  6444  0043CA  C019  F010         	movff	pad@buf+1,fputs@s+1
  6445  0043CE  C016  F011         	movff	pad@fp,fputs@fp
  6446  0043D2  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6447  0043D6  ECD0  F028         	call	_fputs	;wreg free
  6448  0043DA                     l8493:
  6449                           
  6450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6451  0043DA  BE1B               	btfsc	(pad@p+1)^0,7,c
  6452  0043DC  EFF2  F021         	goto	u9101
  6453  0043E0  EFF4  F021         	goto	u9100
  6454  0043E4                     u9101:
  6455  0043E4  EFFA  F021         	goto	l8497
  6456  0043E8                     u9100:
  6457  0043E8  C01A  F01F         	movff	pad@p,pad@w
  6458  0043EC  C01B  F020         	movff	pad@p+1,pad@w+1
  6459  0043F0  EFFE  F021         	goto	l770
  6460  0043F4                     l8497:
  6461  0043F4  0E00               	movlw	0
  6462  0043F6  6E20               	movwf	(pad@w+1)^0,c
  6463  0043F8  0E00               	movlw	0
  6464  0043FA  6E1F               	movwf	pad@w^0,c
  6465  0043FC                     l770:
  6466                           
  6467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6468  0043FC  0E00               	movlw	0
  6469  0043FE  6E1E               	movwf	(pad@i+1)^0,c
  6470  004400  0E00               	movlw	0
  6471  004402  6E1D               	movwf	pad@i^0,c
  6472                           
  6473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6474  004404  EF10  F022         	goto	l8503
  6475  004408                     l8499:
  6476                           
  6477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6478  004408  0E00               	movlw	0
  6479  00440A  6E07               	movwf	(fputc@c+1)^0,c
  6480  00440C  0E20               	movlw	32
  6481  00440E  6E06               	movwf	fputc@c^0,c
  6482  004410  C016  F008         	movff	pad@fp,fputc@fp
  6483  004414  C017  F009         	movff	pad@fp+1,fputc@fp+1
  6484  004418  EC12  F021         	call	_fputc	;wreg free
  6485  00441C                     
  6486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6487  00441C  4A1D               	infsnz	pad@i^0,f,c
  6488  00441E  2A1E               	incf	(pad@i+1)^0,f,c
  6489  004420                     l8503:
  6490                           
  6491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6492  004420  501F               	movf	pad@w^0,w,c
  6493  004422  5C1D               	subwf	pad@i^0,w,c
  6494  004424  501E               	movf	(pad@i+1)^0,w,c
  6495  004426  0A80               	xorlw	128
  6496  004428  6E1C               	movwf	??_pad^0,c
  6497  00442A  5020               	movf	(pad@w+1)^0,w,c
  6498  00442C  0A80               	xorlw	128
  6499  00442E  581C               	subwfb	??_pad^0,w,c
  6500  004430  A0D8               	btfss	status,0,c
  6501  004432  EF1D  F022         	goto	u9111
  6502  004436  EF1F  F022         	goto	u9110
  6503  00443A                     u9111:
  6504  00443A  EF04  F022         	goto	l8499
  6505  00443E                     u9110:
  6506  00443E                     
  6507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6508  00443E  0101               	movlb	1	; () banked
  6509  004440  B12E               	btfsc	_flags& (0+255),0,b
  6510  004442  EF25  F022         	goto	u9121
  6511  004446  EF27  F022         	goto	u9120
  6512  00444A                     u9121:
  6513  00444A  EF31  F022         	goto	l8507
  6514  00444E                     u9120:
  6515  00444E                     
  6516                           ; BSR set to: 1
  6517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6518  00444E  C018  F00F         	movff	pad@buf,fputs@s
  6519  004452  C019  F010         	movff	pad@buf+1,fputs@s+1
  6520  004456  C016  F011         	movff	pad@fp,fputs@fp
  6521  00445A  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6522  00445E  ECD0  F028         	call	_fputs	;wreg free
  6523  004462                     l8507:
  6524                           
  6525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6526  004462  C018  F006         	movff	pad@buf,strlen@s
  6527  004466  C019  F007         	movff	pad@buf+1,strlen@s+1
  6528  00446A  EC86  F029         	call	_strlen	;wreg free
  6529  00446E  501F               	movf	pad@w^0,w,c
  6530  004470  2406               	addwf	?_strlen^0,w,c
  6531  004472  6E16               	movwf	?_pad^0,c
  6532  004474  5020               	movf	(pad@w+1)^0,w,c
  6533  004476  2007               	addwfc	(?_strlen+1)^0,w,c
  6534  004478  6E17               	movwf	(?_pad+1)^0,c
  6535  00447A  0012               	return		;funcret
  6536  00447C                     __end_of_pad:
  6537                           	opt callstack 0
  6538                           
  6539 ;; *************** function _strlen *****************
  6540 ;; Defined at:
  6541 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  s               2    5[COMRAM] PTR const unsigned char 
  6544 ;;		 -> dbuf(80), 
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  a               2    7[COMRAM] PTR const unsigned char 
  6547 ;;		 -> dbuf(80), 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  2    5[COMRAM] unsigned int 
  6550 ;; Registers used:
  6551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6557 ;;      Params:         2       0       0       0       0       0       0       0       0
  6558 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6560 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6561 ;;Total ram usage:        4 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; Hardware stack levels required when called:    2
  6564 ;; This function calls:
  6565 ;;		Nothing
  6566 ;; This function is called by:
  6567 ;;		_pad
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text17
  6572  00530C                     __ptext17:
  6573                           	opt callstack 0
  6574  00530C                     _strlen:
  6575                           	opt callstack 22
  6576  00530C  C006  F008         	movff	strlen@s,strlen@a
  6577  005310  C007  F009         	movff	strlen@s+1,strlen@a+1
  6578  005314  EF8E  F029         	goto	l7901
  6579  005318                     l7899:
  6580  005318  4A06               	infsnz	strlen@s^0,f,c
  6581  00531A  2A07               	incf	(strlen@s+1)^0,f,c
  6582  00531C                     l7901:
  6583  00531C  C006  FFD9         	movff	strlen@s,fsr2l
  6584  005320  C007  FFDA         	movff	strlen@s+1,fsr2h
  6585  005324  50DF               	movf	indf2,w,c
  6586  005326  A4D8               	btfss	status,2,c
  6587  005328  EF98  F029         	goto	u8051
  6588  00532C  EF9A  F029         	goto	u8050
  6589  005330                     u8051:
  6590  005330  EF8C  F029         	goto	l7899
  6591  005334                     u8050:
  6592  005334  5008               	movf	strlen@a^0,w,c
  6593  005336  5C06               	subwf	strlen@s^0,w,c
  6594  005338  6E06               	movwf	?_strlen^0,c
  6595  00533A  5009               	movf	(strlen@a+1)^0,w,c
  6596  00533C  5807               	subwfb	(strlen@s+1)^0,w,c
  6597  00533E  6E07               	movwf	(?_strlen+1)^0,c
  6598  005340  0012               	return		;funcret
  6599  005342                     __end_of_strlen:
  6600                           	opt callstack 0
  6601                           
  6602 ;; *************** function _fputs *****************
  6603 ;; Defined at:
  6604 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  s               2   14[COMRAM] PTR const unsigned char 
  6607 ;;		 -> dbuf(80), 
  6608 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6609 ;;		 -> sprintf@f(6), 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  i               2   19[COMRAM] int 
  6612 ;;  c               1   18[COMRAM] unsigned char 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  2   14[COMRAM] int 
  6615 ;; Registers used:
  6616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6622 ;;      Params:         4       0       0       0       0       0       0       0       0
  6623 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6625 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6626 ;;Total ram usage:        7 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    4
  6629 ;; This function calls:
  6630 ;;		_fputc
  6631 ;; This function is called by:
  6632 ;;		_pad
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text18
  6637  0051A0                     __ptext18:
  6638                           	opt callstack 0
  6639  0051A0                     _fputs:
  6640                           	opt callstack 20
  6641  0051A0  0E00               	movlw	0
  6642  0051A2  6E15               	movwf	(fputs@i+1)^0,c
  6643  0051A4  0E00               	movlw	0
  6644  0051A6  6E14               	movwf	fputs@i^0,c
  6645  0051A8  EFE1  F028         	goto	l7895
  6646  0051AC                     l7891:
  6647  0051AC  C013  F006         	movff	fputs@c,fputc@c
  6648  0051B0  6A07               	clrf	(fputc@c+1)^0,c
  6649  0051B2  C011  F008         	movff	fputs@fp,fputc@fp
  6650  0051B6  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  6651  0051BA  EC12  F021         	call	_fputc	;wreg free
  6652  0051BE  4A14               	infsnz	fputs@i^0,f,c
  6653  0051C0  2A15               	incf	(fputs@i+1)^0,f,c
  6654  0051C2                     l7895:
  6655  0051C2  5014               	movf	fputs@i^0,w,c
  6656  0051C4  240F               	addwf	fputs@s^0,w,c
  6657  0051C6  6ED9               	movwf	fsr2l,c
  6658  0051C8  5015               	movf	(fputs@i+1)^0,w,c
  6659  0051CA  2010               	addwfc	(fputs@s+1)^0,w,c
  6660  0051CC  6EDA               	movwf	fsr2h,c
  6661  0051CE  50DF               	movf	indf2,w,c
  6662  0051D0  6E13               	movwf	fputs@c^0,c
  6663  0051D2  5013               	movf	fputs@c^0,w,c
  6664  0051D4  A4D8               	btfss	status,2,c
  6665  0051D6  EFEF  F028         	goto	u8041
  6666  0051DA  EFF1  F028         	goto	u8040
  6667  0051DE                     u8041:
  6668  0051DE  EFD6  F028         	goto	l7891
  6669  0051E2                     u8040:
  6670  0051E2  0012               	return		;funcret
  6671  0051E4                     __end_of_fputs:
  6672                           	opt callstack 0
  6673                           
  6674 ;; *************** function _fputc *****************
  6675 ;; Defined at:
  6676 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  c               2    5[COMRAM] int 
  6679 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  6680 ;;		 -> sprintf@f(6), 
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;		None
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  2    5[COMRAM] int 
  6685 ;; Registers used:
  6686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6692 ;;      Params:         4       0       0       0       0       0       0       0       0
  6693 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6694 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6695 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6696 ;;Total ram usage:        9 bytes
  6697 ;; Hardware stack levels used:    1
  6698 ;; Hardware stack levels required when called:    3
  6699 ;; This function calls:
  6700 ;;		_putch
  6701 ;; This function is called by:
  6702 ;;		_pad
  6703 ;;		_vfpfcnvrt
  6704 ;;		_fputs
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           	psect	text19
  6709  004224                     __ptext19:
  6710                           	opt callstack 0
  6711  004224                     _fputc:
  6712                           	opt callstack 23
  6713  004224  5008               	movf	fputc@fp^0,w,c
  6714  004226  1009               	iorwf	(fputc@fp+1)^0,w,c
  6715  004228  B4D8               	btfsc	status,2,c
  6716  00422A  EF19  F021         	goto	u7921
  6717  00422E  EF1B  F021         	goto	u7920
  6718  004232                     u7921:
  6719  004232  EF24  F021         	goto	l7821
  6720  004236                     u7920:
  6721  004236  5008               	movf	fputc@fp^0,w,c
  6722  004238  1009               	iorwf	(fputc@fp+1)^0,w,c
  6723  00423A  A4D8               	btfss	status,2,c
  6724  00423C  EF22  F021         	goto	u7931
  6725  004240  EF24  F021         	goto	u7930
  6726  004244                     u7931:
  6727  004244  EF29  F021         	goto	l7823
  6728  004248                     u7930:
  6729  004248                     l7821:
  6730  004248  5006               	movf	fputc@c^0,w,c
  6731  00424A  EC6C  F02A         	call	_putch
  6732  00424E  EF76  F021         	goto	l1694
  6733  004252                     l7823:
  6734  004252  EE20 F004          	lfsr	2,4
  6735  004256  5008               	movf	fputc@fp^0,w,c
  6736  004258  26D9               	addwf	fsr2l,f,c
  6737  00425A  5009               	movf	(fputc@fp+1)^0,w,c
  6738  00425C  22DA               	addwfc	fsr2h,f,c
  6739  00425E  50DE               	movf	postinc2,w,c
  6740  004260  10DE               	iorwf	postinc2,w,c
  6741  004262  B4D8               	btfsc	status,2,c
  6742  004264  EF36  F021         	goto	u7941
  6743  004268  EF38  F021         	goto	u7940
  6744  00426C                     u7941:
  6745  00426C  EF53  F021         	goto	l7827
  6746  004270                     u7940:
  6747  004270  EE20 F004          	lfsr	2,4
  6748  004274  5008               	movf	fputc@fp^0,w,c
  6749  004276  26D9               	addwf	fsr2l,f,c
  6750  004278  5009               	movf	(fputc@fp+1)^0,w,c
  6751  00427A  22DA               	addwfc	fsr2h,f,c
  6752  00427C  EE10 F002          	lfsr	1,2
  6753  004280  5008               	movf	fputc@fp^0,w,c
  6754  004282  26E1               	addwf	fsr1l,f,c
  6755  004284  5009               	movf	(fputc@fp+1)^0,w,c
  6756  004286  22E2               	addwfc	fsr1h,f,c
  6757  004288  50DE               	movf	postinc2,w,c
  6758  00428A  5CE6               	subwf	postinc1,w,c
  6759  00428C  50E6               	movf	postinc1,w,c
  6760  00428E  0A80               	xorlw	128
  6761  004290  6E0E               	movwf	(??_fputc+4)^0,c
  6762  004292  50DE               	movf	postinc2,w,c
  6763  004294  0A80               	xorlw	128
  6764  004296  580E               	subwfb	(??_fputc+4)^0,w,c
  6765  004298  B0D8               	btfsc	status,0,c
  6766  00429A  EF51  F021         	goto	u7951
  6767  00429E  EF53  F021         	goto	u7950
  6768  0042A2                     u7951:
  6769  0042A2  EF76  F021         	goto	l1694
  6770  0042A6                     u7950:
  6771  0042A6                     l7827:
  6772  0042A6  EE20 F002          	lfsr	2,2
  6773  0042AA  5008               	movf	fputc@fp^0,w,c
  6774  0042AC  26D9               	addwf	fsr2l,f,c
  6775  0042AE  5009               	movf	(fputc@fp+1)^0,w,c
  6776  0042B0  22DA               	addwfc	fsr2h,f,c
  6777  0042B2  CFDE F00A          	movff	postinc2,??_fputc
  6778  0042B6  CFDD F00B          	movff	postdec2,??_fputc+1
  6779  0042BA  C008  FFD9         	movff	fputc@fp,fsr2l
  6780  0042BE  C009  FFDA         	movff	fputc@fp+1,fsr2h
  6781  0042C2  CFDE F00C          	movff	postinc2,??_fputc+2
  6782  0042C6  CFDD F00D          	movff	postdec2,??_fputc+3
  6783  0042CA  500A               	movf	??_fputc^0,w,c
  6784  0042CC  240C               	addwf	(??_fputc+2)^0,w,c
  6785  0042CE  6ED9               	movwf	fsr2l,c
  6786  0042D0  500B               	movf	(??_fputc+1)^0,w,c
  6787  0042D2  200D               	addwfc	(??_fputc+3)^0,w,c
  6788  0042D4  6EDA               	movwf	fsr2h,c
  6789  0042D6  C006  FFDF         	movff	fputc@c,indf2
  6790  0042DA  EE20 F002          	lfsr	2,2
  6791  0042DE  5008               	movf	fputc@fp^0,w,c
  6792  0042E0  26D9               	addwf	fsr2l,f,c
  6793  0042E2  5009               	movf	(fputc@fp+1)^0,w,c
  6794  0042E4  22DA               	addwfc	fsr2h,f,c
  6795  0042E6  2ADE               	incf	postinc2,f,c
  6796  0042E8  0E00               	movlw	0
  6797  0042EA  22DD               	addwfc	postdec2,f,c
  6798  0042EC                     l1694:
  6799  0042EC  0012               	return		;funcret
  6800  0042EE                     __end_of_fputc:
  6801                           	opt callstack 0
  6802                           
  6803 ;; *************** function _putch *****************
  6804 ;; Defined at:
  6805 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;  c               1    wreg     unsigned char 
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  c               1    0[COMRAM] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      void 
  6812 ;; Registers used:
  6813 ;;		wreg
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0
  6820 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6822 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6823 ;;Total ram usage:        0 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:    2
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_fputc
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text20
  6834  0054D8                     __ptext20:
  6835                           	opt callstack 0
  6836  0054D8                     _putch:
  6837                           	opt callstack 23
  6838  0054D8  0012               	return		;funcret
  6839  0054DA                     __end_of_putch:
  6840                           	opt callstack 0
  6841                           
  6842 ;; *************** function _abs *****************
  6843 ;; Defined at:
  6844 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  a               2   23[COMRAM] int 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;		None
  6849 ;; Return value:  Size  Location     Type
  6850 ;;                  2   23[COMRAM] int 
  6851 ;; Registers used:
  6852 ;;		wreg, status,2, status,0
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 0/0
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6858 ;;      Params:         2       0       0       0       0       0       0       0       0
  6859 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6860 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6861 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6862 ;;Total ram usage:        4 bytes
  6863 ;; Hardware stack levels used:    1
  6864 ;; Hardware stack levels required when called:    2
  6865 ;; This function calls:
  6866 ;;		Nothing
  6867 ;; This function is called by:
  6868 ;;		_dtoa
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           	psect	text21
  6873  0051E4                     __ptext21:
  6874                           	opt callstack 0
  6875  0051E4                     _abs:
  6876                           	opt callstack 23
  6877  0051E4  BE19               	btfsc	(abs@a+1)^0,7,c
  6878  0051E6  EFFF  F028         	goto	u9130
  6879  0051EA  5019               	movf	(abs@a+1)^0,w,c
  6880  0051EC  E106               	bnz	u9131
  6881  0051EE  0418               	decf	abs@a^0,w,c
  6882  0051F0  B0D8               	btfsc	status,0,c
  6883  0051F2  EFFD  F028         	goto	u9131
  6884  0051F6  EFFF  F028         	goto	u9130
  6885  0051FA                     u9131:
  6886  0051FA  EF0D  F029         	goto	l1615
  6887  0051FE                     u9130:
  6888  0051FE  C018  F01A         	movff	abs@a,??_abs
  6889  005202  C019  F01B         	movff	abs@a+1,??_abs+1
  6890  005206  1E1A               	comf	??_abs^0,f,c
  6891  005208  1E1B               	comf	(??_abs+1)^0,f,c
  6892  00520A  4A1A               	infsnz	??_abs^0,f,c
  6893  00520C  2A1B               	incf	(??_abs+1)^0,f,c
  6894  00520E  C01A  F018         	movff	??_abs,?_abs
  6895  005212  C01B  F019         	movff	??_abs+1,?_abs+1
  6896  005216  EF11  F029         	goto	l1618
  6897  00521A                     l1615:
  6898  00521A  C018  F018         	movff	abs@a,?_abs
  6899  00521E  C019  F019         	movff	abs@a+1,?_abs+1
  6900  005222                     l1618:
  6901  005222  0012               	return		;funcret
  6902  005224                     __end_of_abs:
  6903                           	opt callstack 0
  6904                           
  6905 ;; *************** function ___aomod *****************
  6906 ;; Defined at:
  6907 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  dividend        8    5[COMRAM] long long 
  6910 ;;  divisor         8   13[COMRAM] long long 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;  sign            1   22[COMRAM] unsigned char 
  6913 ;;  counter         1   21[COMRAM] unsigned char 
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  8    5[COMRAM] long long 
  6916 ;; Registers used:
  6917 ;;		wreg, status,2, status,0
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6923 ;;      Params:        16       0       0       0       0       0       0       0       0
  6924 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6926 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6927 ;;Total ram usage:       18 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    2
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_dtoa
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text22
  6938  003A72                     __ptext22:
  6939                           	opt callstack 0
  6940  003A72                     ___aomod:
  6941                           	opt callstack 23
  6942  003A72  0E00               	movlw	0
  6943  003A74  6E17               	movwf	___aomod@sign^0,c
  6944  003A76  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  6945  003A78  EF42  F01D         	goto	u9450
  6946  003A7C  EF40  F01D         	goto	u9451
  6947  003A80                     u9451:
  6948  003A80  EF54  F01D         	goto	l8641
  6949  003A84                     u9450:
  6950  003A84  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  6951  003A86  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  6952  003A88  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  6953  003A8A  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  6954  003A8C  1E09               	comf	(___aomod@dividend+3)^0,f,c
  6955  003A8E  1E08               	comf	(___aomod@dividend+2)^0,f,c
  6956  003A90  1E07               	comf	(___aomod@dividend+1)^0,f,c
  6957  003A92  6C06               	negf	___aomod@dividend^0,c
  6958  003A94  0E00               	movlw	0
  6959  003A96  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  6960  003A98  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  6961  003A9A  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  6962  003A9C  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  6963  003A9E  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  6964  003AA0  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  6965  003AA2  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  6966  003AA4  0E01               	movlw	1
  6967  003AA6  6E17               	movwf	___aomod@sign^0,c
  6968  003AA8                     l8641:
  6969  003AA8  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  6970  003AAA  EF5B  F01D         	goto	u9460
  6971  003AAE  EF59  F01D         	goto	u9461
  6972  003AB2                     u9461:
  6973  003AB2  EF6B  F01D         	goto	l8645
  6974  003AB6                     u9460:
  6975  003AB6  1E15               	comf	(___aomod@divisor+7)^0,f,c
  6976  003AB8  1E14               	comf	(___aomod@divisor+6)^0,f,c
  6977  003ABA  1E13               	comf	(___aomod@divisor+5)^0,f,c
  6978  003ABC  1E12               	comf	(___aomod@divisor+4)^0,f,c
  6979  003ABE  1E11               	comf	(___aomod@divisor+3)^0,f,c
  6980  003AC0  1E10               	comf	(___aomod@divisor+2)^0,f,c
  6981  003AC2  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  6982  003AC4  6C0E               	negf	___aomod@divisor^0,c
  6983  003AC6  0E00               	movlw	0
  6984  003AC8  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  6985  003ACA  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  6986  003ACC  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  6987  003ACE  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  6988  003AD0  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  6989  003AD2  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  6990  003AD4  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  6991  003AD6                     l8645:
  6992  003AD6  500E               	movf	___aomod@divisor^0,w,c
  6993  003AD8  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  6994  003ADA  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  6995  003ADC  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  6996  003ADE  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  6997  003AE0  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  6998  003AE2  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  6999  003AE4  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  7000  003AE6  B4D8               	btfsc	status,2,c
  7001  003AE8  EF78  F01D         	goto	u9471
  7002  003AEC  EF7A  F01D         	goto	u9470
  7003  003AF0                     u9471:
  7004  003AF0  EFC2  F01D         	goto	l8661
  7005  003AF4                     u9470:
  7006  003AF4  0E01               	movlw	1
  7007  003AF6  6E16               	movwf	___aomod@counter^0,c
  7008  003AF8  EF88  F01D         	goto	l8651
  7009  003AFC                     l8649:
  7010  003AFC  90D8               	bcf	status,0,c
  7011  003AFE  360E               	rlcf	___aomod@divisor^0,f,c
  7012  003B00  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  7013  003B02  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  7014  003B04  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  7015  003B06  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  7016  003B08  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  7017  003B0A  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  7018  003B0C  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  7019  003B0E  2A16               	incf	___aomod@counter^0,f,c
  7020  003B10                     l8651:
  7021  003B10  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7022  003B12  EF8D  F01D         	goto	u9481
  7023  003B16  EF8F  F01D         	goto	u9480
  7024  003B1A                     u9481:
  7025  003B1A  EF7E  F01D         	goto	l8649
  7026  003B1E                     u9480:
  7027  003B1E                     l8653:
  7028  003B1E  500E               	movf	___aomod@divisor^0,w,c
  7029  003B20  5C06               	subwf	___aomod@dividend^0,w,c
  7030  003B22  500F               	movf	(___aomod@divisor+1)^0,w,c
  7031  003B24  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  7032  003B26  5010               	movf	(___aomod@divisor+2)^0,w,c
  7033  003B28  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  7034  003B2A  5011               	movf	(___aomod@divisor+3)^0,w,c
  7035  003B2C  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  7036  003B2E  5012               	movf	(___aomod@divisor+4)^0,w,c
  7037  003B30  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  7038  003B32  5013               	movf	(___aomod@divisor+5)^0,w,c
  7039  003B34  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  7040  003B36  5014               	movf	(___aomod@divisor+6)^0,w,c
  7041  003B38  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  7042  003B3A  5015               	movf	(___aomod@divisor+7)^0,w,c
  7043  003B3C  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  7044  003B3E  A0D8               	btfss	status,0,c
  7045  003B40  EFA4  F01D         	goto	u9491
  7046  003B44  EFA6  F01D         	goto	u9490
  7047  003B48                     u9491:
  7048  003B48  EFB6  F01D         	goto	l8657
  7049  003B4C                     u9490:
  7050  003B4C  500E               	movf	___aomod@divisor^0,w,c
  7051  003B4E  5E06               	subwf	___aomod@dividend^0,f,c
  7052  003B50  500F               	movf	(___aomod@divisor+1)^0,w,c
  7053  003B52  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  7054  003B54  5010               	movf	(___aomod@divisor+2)^0,w,c
  7055  003B56  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  7056  003B58  5011               	movf	(___aomod@divisor+3)^0,w,c
  7057  003B5A  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  7058  003B5C  5012               	movf	(___aomod@divisor+4)^0,w,c
  7059  003B5E  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  7060  003B60  5013               	movf	(___aomod@divisor+5)^0,w,c
  7061  003B62  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  7062  003B64  5014               	movf	(___aomod@divisor+6)^0,w,c
  7063  003B66  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  7064  003B68  5015               	movf	(___aomod@divisor+7)^0,w,c
  7065  003B6A  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  7066  003B6C                     l8657:
  7067  003B6C  90D8               	bcf	status,0,c
  7068  003B6E  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  7069  003B70  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  7070  003B72  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  7071  003B74  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  7072  003B76  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  7073  003B78  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  7074  003B7A  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  7075  003B7C  320E               	rrcf	___aomod@divisor^0,f,c
  7076  003B7E  2E16               	decfsz	___aomod@counter^0,f,c
  7077  003B80  EF8F  F01D         	goto	l8653
  7078  003B84                     l8661:
  7079  003B84  5017               	movf	___aomod@sign^0,w,c
  7080  003B86  B4D8               	btfsc	status,2,c
  7081  003B88  EFC8  F01D         	goto	u9501
  7082  003B8C  EFCA  F01D         	goto	u9500
  7083  003B90                     u9501:
  7084  003B90  EFDA  F01D         	goto	l8665
  7085  003B94                     u9500:
  7086  003B94  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7087  003B96  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7088  003B98  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7089  003B9A  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7090  003B9C  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7091  003B9E  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7092  003BA0  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7093  003BA2  6C06               	negf	___aomod@dividend^0,c
  7094  003BA4  0E00               	movlw	0
  7095  003BA6  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7096  003BA8  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7097  003BAA  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7098  003BAC  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7099  003BAE  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7100  003BB0  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7101  003BB2  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7102  003BB4                     l8665:
  7103  003BB4  C006  F006         	movff	___aomod@dividend,?___aomod
  7104  003BB8  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  7105  003BBC  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  7106  003BC0  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  7107  003BC4  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  7108  003BC8  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  7109  003BCC  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  7110  003BD0  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  7111  003BD4  0012               	return		;funcret
  7112  003BD6                     __end_of___aomod:
  7113                           	opt callstack 0
  7114                           
  7115 ;; *************** function ___aodiv *****************
  7116 ;; Defined at:
  7117 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;  dividend        8    5[COMRAM] long long 
  7120 ;;  divisor         8   13[COMRAM] long long 
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;  quotient        8   23[COMRAM] long long 
  7123 ;;  sign            1   22[COMRAM] unsigned char 
  7124 ;;  counter         1   21[COMRAM] unsigned char 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  8    5[COMRAM] long long 
  7127 ;; Registers used:
  7128 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7134 ;;      Params:        16       0       0       0       0       0       0       0       0
  7135 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7137 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7138 ;;Total ram usage:       26 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; Hardware stack levels required when called:    2
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_dtoa
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text23
  7149  0035E8                     __ptext23:
  7150                           	opt callstack 0
  7151  0035E8                     ___aodiv:
  7152                           	opt callstack 23
  7153  0035E8  0E00               	movlw	0
  7154  0035EA  6E17               	movwf	___aodiv@sign^0,c
  7155  0035EC  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  7156  0035EE  EFFD  F01A         	goto	u9380
  7157  0035F2  EFFB  F01A         	goto	u9381
  7158  0035F6                     u9381:
  7159  0035F6  EF0F  F01B         	goto	l8597
  7160  0035FA                     u9380:
  7161  0035FA  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  7162  0035FC  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  7163  0035FE  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  7164  003600  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  7165  003602  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  7166  003604  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  7167  003606  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  7168  003608  6C0E               	negf	___aodiv@divisor^0,c
  7169  00360A  0E00               	movlw	0
  7170  00360C  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  7171  00360E  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  7172  003610  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  7173  003612  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  7174  003614  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  7175  003616  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  7176  003618  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  7177  00361A  0E01               	movlw	1
  7178  00361C  6E17               	movwf	___aodiv@sign^0,c
  7179  00361E                     l8597:
  7180  00361E  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  7181  003620  EF16  F01B         	goto	u9390
  7182  003624  EF14  F01B         	goto	u9391
  7183  003628                     u9391:
  7184  003628  EF28  F01B         	goto	l8603
  7185  00362C                     u9390:
  7186  00362C  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  7187  00362E  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  7188  003630  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  7189  003632  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  7190  003634  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  7191  003636  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  7192  003638  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  7193  00363A  6C06               	negf	___aodiv@dividend^0,c
  7194  00363C  0E00               	movlw	0
  7195  00363E  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  7196  003640  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  7197  003642  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  7198  003644  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  7199  003646  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  7200  003648  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  7201  00364A  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  7202  00364C  0E01               	movlw	1
  7203  00364E  1A17               	xorwf	___aodiv@sign^0,f,c
  7204  003650                     l8603:
  7205  003650  EE20  F018         	lfsr	2,___aodiv@quotient
  7206  003654  0E07               	movlw	7
  7207  003656                     u9401:
  7208  003656  6ADE               	clrf	postinc2,c
  7209  003658  06E8               	decf	wreg,f,c
  7210  00365A  E2FD               	bc	u9401
  7211  00365C  500E               	movf	___aodiv@divisor^0,w,c
  7212  00365E  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  7213  003660  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  7214  003662  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  7215  003664  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  7216  003666  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  7217  003668  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  7218  00366A  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  7219  00366C  B4D8               	btfsc	status,2,c
  7220  00366E  EF3B  F01B         	goto	u9411
  7221  003672  EF3D  F01B         	goto	u9410
  7222  003676                     u9411:
  7223  003676  EF8F  F01B         	goto	l8625
  7224  00367A                     u9410:
  7225  00367A  0E01               	movlw	1
  7226  00367C  6E16               	movwf	___aodiv@counter^0,c
  7227  00367E  EF4B  F01B         	goto	l8611
  7228  003682                     l8609:
  7229  003682  90D8               	bcf	status,0,c
  7230  003684  360E               	rlcf	___aodiv@divisor^0,f,c
  7231  003686  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  7232  003688  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  7233  00368A  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  7234  00368C  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  7235  00368E  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  7236  003690  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  7237  003692  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  7238  003694  2A16               	incf	___aodiv@counter^0,f,c
  7239  003696                     l8611:
  7240  003696  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7241  003698  EF50  F01B         	goto	u9421
  7242  00369C  EF52  F01B         	goto	u9420
  7243  0036A0                     u9421:
  7244  0036A0  EF41  F01B         	goto	l8609
  7245  0036A4                     u9420:
  7246  0036A4                     l8613:
  7247  0036A4  90D8               	bcf	status,0,c
  7248  0036A6  3618               	rlcf	___aodiv@quotient^0,f,c
  7249  0036A8  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  7250  0036AA  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  7251  0036AC  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  7252  0036AE  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  7253  0036B0  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  7254  0036B2  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  7255  0036B4  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  7256  0036B6  500E               	movf	___aodiv@divisor^0,w,c
  7257  0036B8  5C06               	subwf	___aodiv@dividend^0,w,c
  7258  0036BA  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7259  0036BC  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  7260  0036BE  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7261  0036C0  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  7262  0036C2  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7263  0036C4  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  7264  0036C6  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7265  0036C8  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  7266  0036CA  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7267  0036CC  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  7268  0036CE  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7269  0036D0  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  7270  0036D2  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7271  0036D4  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  7272  0036D6  A0D8               	btfss	status,0,c
  7273  0036D8  EF70  F01B         	goto	u9431
  7274  0036DC  EF72  F01B         	goto	u9430
  7275  0036E0                     u9431:
  7276  0036E0  EF83  F01B         	goto	l8621
  7277  0036E4                     u9430:
  7278  0036E4  500E               	movf	___aodiv@divisor^0,w,c
  7279  0036E6  5E06               	subwf	___aodiv@dividend^0,f,c
  7280  0036E8  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7281  0036EA  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  7282  0036EC  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7283  0036EE  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  7284  0036F0  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7285  0036F2  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  7286  0036F4  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7287  0036F6  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  7288  0036F8  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7289  0036FA  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  7290  0036FC  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7291  0036FE  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  7292  003700  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7293  003702  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  7294  003704  8018               	bsf	___aodiv@quotient^0,0,c
  7295  003706                     l8621:
  7296  003706  90D8               	bcf	status,0,c
  7297  003708  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  7298  00370A  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  7299  00370C  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  7300  00370E  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  7301  003710  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  7302  003712  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  7303  003714  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  7304  003716  320E               	rrcf	___aodiv@divisor^0,f,c
  7305  003718  2E16               	decfsz	___aodiv@counter^0,f,c
  7306  00371A  EF52  F01B         	goto	l8613
  7307  00371E                     l8625:
  7308  00371E  5017               	movf	___aodiv@sign^0,w,c
  7309  003720  B4D8               	btfsc	status,2,c
  7310  003722  EF95  F01B         	goto	u9441
  7311  003726  EF97  F01B         	goto	u9440
  7312  00372A                     u9441:
  7313  00372A  EFA7  F01B         	goto	l8629
  7314  00372E                     u9440:
  7315  00372E  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  7316  003730  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  7317  003732  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  7318  003734  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  7319  003736  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  7320  003738  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  7321  00373A  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  7322  00373C  6C18               	negf	___aodiv@quotient^0,c
  7323  00373E  0E00               	movlw	0
  7324  003740  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  7325  003742  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  7326  003744  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  7327  003746  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  7328  003748  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  7329  00374A  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  7330  00374C  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  7331  00374E                     l8629:
  7332  00374E  C018  F006         	movff	___aodiv@quotient,?___aodiv
  7333  003752  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  7334  003756  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  7335  00375A  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  7336  00375E  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  7337  003762  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  7338  003766  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  7339  00376A  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  7340  00376E  0012               	return		;funcret
  7341  003770                     __end_of___aodiv:
  7342                           	opt callstack 0
  7343                           
  7344 ;; *************** function _atoi *****************
  7345 ;; Defined at:
  7346 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;  s               2   12[COMRAM] PTR const unsigned char 
  7349 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  7350 ;;		 -> STR_3(34), 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;  n               2   25[COMRAM] int 
  7353 ;;  neg             2   18[COMRAM] int 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  2   12[COMRAM] int 
  7356 ;; Registers used:
  7357 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7363 ;;      Params:         2       0       0       0       0       0       0       0       0
  7364 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7365 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7366 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7367 ;;Total ram usage:       15 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    3
  7370 ;; This function calls:
  7371 ;;		___wmul
  7372 ;;		_isdigit
  7373 ;;		_isspace
  7374 ;; This function is called by:
  7375 ;;		_vfpfcnvrt
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           	psect	text24
  7380  003458                     __ptext24:
  7381                           	opt callstack 0
  7382  003458                     _atoi:
  7383                           	opt callstack 23
  7384  003458  0E00               	movlw	0
  7385  00345A  6E1B               	movwf	(atoi@n+1)^0,c
  7386  00345C  0E00               	movlw	0
  7387  00345E  6E1A               	movwf	atoi@n^0,c
  7388  003460  0E00               	movlw	0
  7389  003462  6E14               	movwf	(atoi@neg+1)^0,c
  7390  003464  0E00               	movlw	0
  7391  003466  6E13               	movwf	atoi@neg^0,c
  7392  003468  EF38  F01A         	goto	l9193
  7393  00346C                     l9191:
  7394  00346C  4A0D               	infsnz	atoi@s^0,f,c
  7395  00346E  2A0E               	incf	(atoi@s+1)^0,f,c
  7396  003470                     l9193:
  7397  003470  0E01               	movlw	1
  7398  003472  6E19               	movwf	_atoi$1425^0,c
  7399  003474  C00D  FFF6         	movff	atoi@s,tblptrl
  7400  003478  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7401  00347C                     	if	0	;tblptru may be non-zero
  7402  00347C                     	endif
  7403  00347C                     	if	0	;tblptru may be non-zero
  7404  00347C                     	endif
  7405  00347C  0008               	tblrd		*
  7406  00347E  50F5               	movf	tablat,w,c
  7407  003480  0A20               	xorlw	32
  7408  003482  B4D8               	btfsc	status,2,c
  7409  003484  EF46  F01A         	goto	u10411
  7410  003488  EF48  F01A         	goto	u10410
  7411  00348C                     u10411:
  7412  00348C  EF65  F01A         	goto	l9201
  7413  003490                     u10410:
  7414  003490  0EF7               	movlw	247
  7415  003492  6E0F               	movwf	??_atoi^0,c
  7416  003494  0EFF               	movlw	255
  7417  003496  6E10               	movwf	(??_atoi+1)^0,c
  7418  003498  C00D  FFF6         	movff	atoi@s,tblptrl
  7419  00349C  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7420  0034A0                     	if	0	;tblptru may be non-zero
  7421  0034A0                     	endif
  7422  0034A0                     	if	0	;tblptru may be non-zero
  7423  0034A0                     	endif
  7424  0034A0  0008               	tblrd		*
  7425  0034A2  50F5               	movf	tablat,w,c
  7426  0034A4  6E11               	movwf	(??_atoi+2)^0,c
  7427  0034A6  6A12               	clrf	(??_atoi+3)^0,c
  7428  0034A8  500F               	movf	??_atoi^0,w,c
  7429  0034AA  2611               	addwf	(??_atoi+2)^0,f,c
  7430  0034AC  5010               	movf	(??_atoi+1)^0,w,c
  7431  0034AE  2212               	addwfc	(??_atoi+3)^0,f,c
  7432  0034B0  5012               	movf	(??_atoi+3)^0,w,c
  7433  0034B2  E109               	bnz	u10420
  7434  0034B4  0E05               	movlw	5
  7435  0034B6  5C11               	subwf	(??_atoi+2)^0,w,c
  7436  0034B8  A0D8               	btfss	status,0,c
  7437  0034BA  EF61  F01A         	goto	u10421
  7438  0034BE  EF63  F01A         	goto	u10420
  7439  0034C2                     u10421:
  7440  0034C2  EF65  F01A         	goto	l9201
  7441  0034C6                     u10420:
  7442  0034C6  0E00               	movlw	0
  7443  0034C8  6E19               	movwf	_atoi$1425^0,c
  7444  0034CA                     l9201:
  7445  0034CA  C019  F015         	movff	_atoi$1425,_atoi$1424
  7446  0034CE  6A16               	clrf	(_atoi$1424+1)^0,c
  7447  0034D0  5015               	movf	_atoi$1424^0,w,c
  7448  0034D2  1016               	iorwf	(_atoi$1424+1)^0,w,c
  7449  0034D4  A4D8               	btfss	status,2,c
  7450  0034D6  EF6F  F01A         	goto	u10431
  7451  0034DA  EF71  F01A         	goto	u10430
  7452  0034DE                     u10431:
  7453  0034DE  EF36  F01A         	goto	l9191
  7454  0034E2                     u10430:
  7455  0034E2  EF7B  F01A         	goto	l9211
  7456  0034E6                     l9207:
  7457  0034E6  0E00               	movlw	0
  7458  0034E8  6E14               	movwf	(atoi@neg+1)^0,c
  7459  0034EA  0E01               	movlw	1
  7460  0034EC  6E13               	movwf	atoi@neg^0,c
  7461  0034EE                     l9209:
  7462  0034EE  4A0D               	infsnz	atoi@s^0,f,c
  7463  0034F0  2A0E               	incf	(atoi@s+1)^0,f,c
  7464  0034F2  EFB0  F01A         	goto	l9217
  7465  0034F6                     l9211:
  7466  0034F6  C00D  FFF6         	movff	atoi@s,tblptrl
  7467  0034FA  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7468  0034FE                     	if	0	;tblptru may be non-zero
  7469  0034FE                     	endif
  7470  0034FE                     	if	0	;tblptru may be non-zero
  7471  0034FE                     	endif
  7472  0034FE  0008               	tblrd		*
  7473  003500  50F5               	movf	tablat,w,c
  7474  003502  6E0F               	movwf	??_atoi^0,c
  7475  003504  6A10               	clrf	(??_atoi+1)^0,c
  7476                           
  7477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7478                           ; Switch size 1, requested type "simple"
  7479                           ; Number of cases is 1, Range of values is 0 to 0
  7480                           ; switch strategies available:
  7481                           ; Name         Instructions Cycles
  7482                           ; simple_byte            4     3 (average)
  7483                           ;	Chosen strategy is simple_byte
  7484  003506  5010               	movf	(??_atoi+1)^0,w,c
  7485  003508  0A00               	xorlw	0	; case 0
  7486  00350A  B4D8               	btfsc	status,2,c
  7487  00350C  EF8A  F01A         	goto	l10837
  7488  003510  EFB0  F01A         	goto	l9217
  7489  003514                     l10837:
  7490                           
  7491                           ; Switch size 1, requested type "simple"
  7492                           ; Number of cases is 2, Range of values is 43 to 45
  7493                           ; switch strategies available:
  7494                           ; Name         Instructions Cycles
  7495                           ; simple_byte            7     4 (average)
  7496                           ;	Chosen strategy is simple_byte
  7497  003514  500F               	movf	??_atoi^0,w,c
  7498  003516  0A2B               	xorlw	43	; case 43
  7499  003518  B4D8               	btfsc	status,2,c
  7500  00351A  EF77  F01A         	goto	l9209
  7501  00351E  0A06               	xorlw	6	; case 45
  7502  003520  B4D8               	btfsc	status,2,c
  7503  003522  EF73  F01A         	goto	l9207
  7504  003526  EFB0  F01A         	goto	l9217
  7505  00352A                     l9213:
  7506  00352A  C01A  F006         	movff	atoi@n,___wmul@multiplier
  7507  00352E  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  7508  003532  0E00               	movlw	0
  7509  003534  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7510  003536  0E0A               	movlw	10
  7511  003538  6E08               	movwf	___wmul@multiplicand^0,c
  7512  00353A  ECB8  F029         	call	___wmul	;wreg free
  7513  00353E  C00D  FFF6         	movff	atoi@s,tblptrl
  7514  003542  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7515  003546                     	if	0	;tblptru may be non-zero
  7516  003546                     	endif
  7517  003546                     	if	0	;tblptru may be non-zero
  7518  003546                     	endif
  7519  003546  0008               	tblrd		*
  7520  003548  50F5               	movf	tablat,w,c
  7521  00354A  5E06               	subwf	?___wmul^0,f,c
  7522  00354C  0E00               	movlw	0
  7523  00354E  5A07               	subwfb	(?___wmul+1)^0,f,c
  7524  003550  0E30               	movlw	48
  7525  003552  2406               	addwf	?___wmul^0,w,c
  7526  003554  6E1A               	movwf	atoi@n^0,c
  7527  003556  0E00               	movlw	0
  7528  003558  2007               	addwfc	(?___wmul+1)^0,w,c
  7529  00355A  6E1B               	movwf	(atoi@n+1)^0,c
  7530  00355C  EF77  F01A         	goto	l9209
  7531  003560                     l9217:
  7532  003560  0ED0               	movlw	208
  7533  003562  6E0F               	movwf	??_atoi^0,c
  7534  003564  0EFF               	movlw	255
  7535  003566  6E10               	movwf	(??_atoi+1)^0,c
  7536  003568  C00D  FFF6         	movff	atoi@s,tblptrl
  7537  00356C  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7538  003570                     	if	0	;tblptru may be non-zero
  7539  003570                     	endif
  7540  003570                     	if	0	;tblptru may be non-zero
  7541  003570                     	endif
  7542  003570  0008               	tblrd		*
  7543  003572  50F5               	movf	tablat,w,c
  7544  003574  6E11               	movwf	(??_atoi+2)^0,c
  7545  003576  6A12               	clrf	(??_atoi+3)^0,c
  7546  003578  500F               	movf	??_atoi^0,w,c
  7547  00357A  2611               	addwf	(??_atoi+2)^0,f,c
  7548  00357C  5010               	movf	(??_atoi+1)^0,w,c
  7549  00357E  2212               	addwfc	(??_atoi+3)^0,f,c
  7550  003580  5012               	movf	(??_atoi+3)^0,w,c
  7551  003582  E10A               	bnz	u10440
  7552  003584  0E0A               	movlw	10
  7553  003586  5C11               	subwf	(??_atoi+2)^0,w,c
  7554  003588  A0D8               	btfss	status,0,c
  7555  00358A  EFC9  F01A         	goto	u10441
  7556  00358E  EFCC  F01A         	goto	u10440
  7557  003592                     u10441:
  7558  003592  0E01               	movlw	1
  7559  003594  EFCD  F01A         	goto	u10450
  7560  003598                     u10440:
  7561  003598  0E00               	movlw	0
  7562  00359A                     u10450:
  7563  00359A  6E17               	movwf	_atoi$1426^0,c
  7564  00359C  6A18               	clrf	(_atoi$1426+1)^0,c
  7565  00359E  5017               	movf	_atoi$1426^0,w,c
  7566  0035A0  1018               	iorwf	(_atoi$1426+1)^0,w,c
  7567  0035A2  A4D8               	btfss	status,2,c
  7568  0035A4  EFD6  F01A         	goto	u10461
  7569  0035A8  EFD8  F01A         	goto	u10460
  7570  0035AC                     u10461:
  7571  0035AC  EF95  F01A         	goto	l9213
  7572  0035B0                     u10460:
  7573  0035B0  5013               	movf	atoi@neg^0,w,c
  7574  0035B2  1014               	iorwf	(atoi@neg+1)^0,w,c
  7575  0035B4  A4D8               	btfss	status,2,c
  7576  0035B6  EFDF  F01A         	goto	u10471
  7577  0035BA  EFE1  F01A         	goto	u10470
  7578  0035BE                     u10471:
  7579  0035BE  EFEF  F01A         	goto	l1646
  7580  0035C2                     u10470:
  7581  0035C2  C01A  F00F         	movff	atoi@n,??_atoi
  7582  0035C6  C01B  F010         	movff	atoi@n+1,??_atoi+1
  7583  0035CA  1E0F               	comf	??_atoi^0,f,c
  7584  0035CC  1E10               	comf	(??_atoi+1)^0,f,c
  7585  0035CE  4A0F               	infsnz	??_atoi^0,f,c
  7586  0035D0  2A10               	incf	(??_atoi+1)^0,f,c
  7587  0035D2  C00F  F00D         	movff	??_atoi,?_atoi
  7588  0035D6  C010  F00E         	movff	??_atoi+1,?_atoi+1
  7589  0035DA  EFF3  F01A         	goto	l1649
  7590  0035DE                     l1646:
  7591  0035DE  C01A  F00D         	movff	atoi@n,?_atoi
  7592  0035E2  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  7593  0035E6                     l1649:
  7594  0035E6  0012               	return		;funcret
  7595  0035E8                     __end_of_atoi:
  7596                           	opt callstack 0
  7597                           
  7598 ;; *************** function _isspace *****************
  7599 ;; Defined at:
  7600 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  c               2    5[COMRAM] int 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;		None
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  2    5[COMRAM] int 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2, status,0
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7614 ;;      Params:         2       0       0       0       0       0       0       0       0
  7615 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7616 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7617 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7618 ;;Total ram usage:        7 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; Hardware stack levels required when called:    2
  7621 ;; This function calls:
  7622 ;;		Nothing
  7623 ;; This function is called by:
  7624 ;;		_atoi
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           	psect	text25
  7629  004F8E                     __ptext25:
  7630                           	opt callstack 0
  7631  004F8E                     _isspace:
  7632                           	opt callstack 23
  7633  004F8E  0E01               	movlw	1
  7634  004F90  6E0C               	movwf	_isspace$1455^0,c
  7635  004F92  0E20               	movlw	32
  7636  004F94  1806               	xorwf	isspace@c^0,w,c
  7637  004F96  1007               	iorwf	(isspace@c+1)^0,w,c
  7638  004F98  B4D8               	btfsc	status,2,c
  7639  004F9A  EFD1  F027         	goto	u9721
  7640  004F9E  EFD3  F027         	goto	u9720
  7641  004FA2                     u9721:
  7642  004FA2  EFEC  F027         	goto	l8809
  7643  004FA6                     u9720:
  7644  004FA6  0EF7               	movlw	247
  7645  004FA8  6E08               	movwf	??_isspace^0,c
  7646  004FAA  0EFF               	movlw	255
  7647  004FAC  6E09               	movwf	(??_isspace+1)^0,c
  7648  004FAE  C006  F00A         	movff	isspace@c,??_isspace+2
  7649  004FB2  C007  F00B         	movff	isspace@c+1,??_isspace+3
  7650  004FB6  5008               	movf	??_isspace^0,w,c
  7651  004FB8  260A               	addwf	(??_isspace+2)^0,f,c
  7652  004FBA  5009               	movf	(??_isspace+1)^0,w,c
  7653  004FBC  220B               	addwfc	(??_isspace+3)^0,f,c
  7654  004FBE  500B               	movf	(??_isspace+3)^0,w,c
  7655  004FC0  E109               	bnz	u9730
  7656  004FC2  0E05               	movlw	5
  7657  004FC4  5C0A               	subwf	(??_isspace+2)^0,w,c
  7658  004FC6  A0D8               	btfss	status,0,c
  7659  004FC8  EFE8  F027         	goto	u9731
  7660  004FCC  EFEA  F027         	goto	u9730
  7661  004FD0                     u9731:
  7662  004FD0  EFEC  F027         	goto	l8809
  7663  004FD4                     u9730:
  7664  004FD4  0E00               	movlw	0
  7665  004FD6  6E0C               	movwf	_isspace$1455^0,c
  7666  004FD8                     l8809:
  7667  004FD8  C00C  F006         	movff	_isspace$1455,?_isspace
  7668  004FDC  6A07               	clrf	(?_isspace+1)^0,c
  7669  004FDE  0012               	return		;funcret
  7670  004FE0                     __end_of_isspace:
  7671                           	opt callstack 0
  7672                           
  7673 ;; *************** function _isdigit *****************
  7674 ;; Defined at:
  7675 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  c               2    5[COMRAM] int 
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;		None
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  2    5[COMRAM] int 
  7682 ;; Registers used:
  7683 ;;		wreg, status,2, status,0
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7689 ;;      Params:         2       0       0       0       0       0       0       0       0
  7690 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7691 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7692 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7693 ;;Total ram usage:        6 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:    2
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_vfpfcnvrt
  7700 ;;		_atoi
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text26
  7705  00529C                     __ptext26:
  7706                           	opt callstack 0
  7707  00529C                     _isdigit:
  7708                           	opt callstack 24
  7709  00529C  0ED0               	movlw	208
  7710  00529E  6E08               	movwf	??_isdigit^0,c
  7711  0052A0  0EFF               	movlw	255
  7712  0052A2  6E09               	movwf	(??_isdigit+1)^0,c
  7713  0052A4  C006  F00A         	movff	isdigit@c,??_isdigit+2
  7714  0052A8  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  7715  0052AC  5008               	movf	??_isdigit^0,w,c
  7716  0052AE  260A               	addwf	(??_isdigit+2)^0,f,c
  7717  0052B0  5009               	movf	(??_isdigit+1)^0,w,c
  7718  0052B2  220B               	addwfc	(??_isdigit+3)^0,f,c
  7719  0052B4  500B               	movf	(??_isdigit+3)^0,w,c
  7720  0052B6  E10A               	bnz	u9360
  7721  0052B8  0E0A               	movlw	10
  7722  0052BA  5C0A               	subwf	(??_isdigit+2)^0,w,c
  7723  0052BC  A0D8               	btfss	status,0,c
  7724  0052BE  EF63  F029         	goto	u9361
  7725  0052C2  EF66  F029         	goto	u9360
  7726  0052C6                     u9361:
  7727  0052C6  0E01               	movlw	1
  7728  0052C8  EF67  F029         	goto	u9370
  7729  0052CC                     u9360:
  7730  0052CC  0E00               	movlw	0
  7731  0052CE                     u9370:
  7732  0052CE  6E06               	movwf	?_isdigit^0,c
  7733  0052D0  6A07               	clrf	(?_isdigit+1)^0,c
  7734  0052D2  0012               	return		;funcret
  7735  0052D4                     __end_of_isdigit:
  7736                           	opt callstack 0
  7737                           
  7738 ;; *************** function ___wmul *****************
  7739 ;; Defined at:
  7740 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  multiplier      2    5[COMRAM] unsigned int 
  7743 ;;  multiplicand    2    7[COMRAM] unsigned int 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;  product         2    9[COMRAM] unsigned int 
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  2    5[COMRAM] unsigned int 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2, status,0, prodl, prodh
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7755 ;;      Params:         4       0       0       0       0       0       0       0       0
  7756 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7758 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7759 ;;Total ram usage:        6 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:    2
  7762 ;; This function calls:
  7763 ;;		Nothing
  7764 ;; This function is called by:
  7765 ;;		_atoi
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text27
  7770  005370                     __ptext27:
  7771                           	opt callstack 0
  7772  005370                     ___wmul:
  7773                           	opt callstack 23
  7774  005370  5006               	movf	___wmul@multiplier^0,w,c
  7775  005372  0208               	mulwf	___wmul@multiplicand^0,c
  7776  005374  CFF3 F00A          	movff	prodl,___wmul@product
  7777  005378  CFF4 F00B          	movff	prodh,___wmul@product+1
  7778  00537C  5006               	movf	___wmul@multiplier^0,w,c
  7779  00537E  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7780  005380  50F3               	movf	243,w,c
  7781  005382  260B               	addwf	(___wmul@product+1)^0,f,c
  7782  005384  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7783  005386  0208               	mulwf	___wmul@multiplicand^0,c
  7784  005388  50F3               	movf	243,w,c
  7785  00538A  260B               	addwf	(___wmul@product+1)^0,f,c
  7786  00538C  C00A  F006         	movff	___wmul@product,?___wmul
  7787  005390  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7788  005394  0012               	return		;funcret
  7789  005396                     __end_of___wmul:
  7790                           	opt callstack 0
  7791                           
  7792 ;; *************** function _inicializarComportamientoBasico *****************
  7793 ;; Defined at:
  7794 ;;		line 253 in file "main.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;		None
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      void 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7808 ;;      Params:         0       0       0       0       0       0       0       0       0
  7809 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7811 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7812 ;;Total ram usage:        0 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; Hardware stack levels required when called:    6
  7815 ;; This function calls:
  7816 ;;		_dameDistancia
  7817 ;;		_velocidadEstandar
  7818 ;; This function is called by:
  7819 ;;		_main
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           
  7823                           	psect	text28
  7824  005080                     __ptext28:
  7825                           	opt callstack 0
  7826  005080                     _inicializarComportamientoBasico:
  7827                           	opt callstack 24
  7828  005080                     
  7829                           ;main.c: 255:     mouse.curr_state = ENFRENTE;
  7830  005080  0E01               	movlw	1
  7831  005082  0100               	movlb	0	; () banked
  7832  005084  6FFD               	movwf	_mouse& (0+255),b
  7833  005086                     
  7834                           ; BSR set to: 0
  7835                           ;main.c: 257:     oldSensorDerecha = dameDistancia(DERECHA);
  7836  005086  0E03               	movlw	3
  7837  005088  ECEB  F01D         	call	_dameDistancia
  7838  00508C  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
  7839  005090  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  7840  005094  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  7841  005098  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  7842  00509C                     
  7843                           ;main.c: 258:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  7844  00509C  0E02               	movlw	2
  7845  00509E  ECEB  F01D         	call	_dameDistancia
  7846  0050A2  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  7847  0050A6  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  7848  0050AA  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  7849  0050AE  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  7850  0050B2                     
  7851                           ;main.c: 259:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  7852  0050B2  0E01               	movlw	1
  7853  0050B4  ECEB  F01D         	call	_dameDistancia
  7854  0050B8  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  7855  0050BC  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  7856  0050C0  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  7857  0050C4  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  7858  0050C8                     
  7859                           ;main.c: 261:     velocidadEstandar();
  7860  0050C8  ECDE  F029         	call	_velocidadEstandar	;wreg free
  7861  0050CC  0012               	return		;funcret
  7862  0050CE                     __end_of_inicializarComportamientoBasico:
  7863                           	opt callstack 0
  7864                           
  7865 ;; *************** function _configurarAdc *****************
  7866 ;; Defined at:
  7867 ;;		line 7 in file "./adc.h"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;		None
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;		None
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  1    wreg      void 
  7874 ;; Registers used:
  7875 ;;		wreg, status,2
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7881 ;;      Params:         0       0       0       0       0       0       0       0       0
  7882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7884 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7885 ;;Total ram usage:        0 bytes
  7886 ;; Hardware stack levels used:    1
  7887 ;; Hardware stack levels required when called:    2
  7888 ;; This function calls:
  7889 ;;		Nothing
  7890 ;; This function is called by:
  7891 ;;		_main
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           	psect	text29
  7896  0054C0                     __ptext29:
  7897                           	opt callstack 0
  7898  0054C0                     _configurarAdc:
  7899                           	opt callstack 28
  7900  0054C0                     
  7901                           ;./adc.h: 8:     ADCON1 = 0b00001110;
  7902  0054C0  0E0E               	movlw	14
  7903  0054C2  6EC1               	movwf	193,c	;volatile
  7904                           
  7905                           ;./adc.h: 9:     ADCON2 = 0b10100101;
  7906  0054C4  0EA5               	movlw	165
  7907  0054C6  6EC0               	movwf	192,c	;volatile
  7908  0054C8  0012               	return		;funcret
  7909  0054CA                     __end_of_configurarAdc:
  7910                           	opt callstack 0
  7911                           
  7912 ;; *************** function _configPwm *****************
  7913 ;; Defined at:
  7914 ;;		line 47 in file "./pwm.h"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  channel         1    wreg     unsigned char 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  channel         1    7[COMRAM] unsigned char 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      void 
  7921 ;; Registers used:
  7922 ;;		wreg, status,2, status,0
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7928 ;;      Params:         0       0       0       0       0       0       0       0       0
  7929 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7930 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7931 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7932 ;;Total ram usage:        3 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; Hardware stack levels required when called:    2
  7935 ;; This function calls:
  7936 ;;		Nothing
  7937 ;; This function is called by:
  7938 ;;		_main
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942                           	psect	text30
  7943  004FE0                     __ptext30:
  7944                           	opt callstack 0
  7945  004FE0                     _configPwm:
  7946                           	opt callstack 28
  7947                           
  7948                           ;incstack = 0
  7949                           ;configPwm@channel stored from wreg
  7950  004FE0  6E08               	movwf	configPwm@channel^0,c
  7951  004FE2                     
  7952                           ;./pwm.h: 56:         T2CKPS0 = 1;
  7953  004FE2  80CA               	bsf	4042,0,c	;volatile
  7954                           
  7955                           ;./pwm.h: 57:         T2CKPS1 = 1;
  7956  004FE4  82CA               	bsf	4042,1,c	;volatile
  7957  004FE6                     
  7958                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
  7959  004FE6  0E7C               	movlw	124
  7960  004FE8  6ECB               	movwf	203,c	;volatile
  7961                           
  7962                           ;./pwm.h: 63:     switch (channel) {
  7963  004FEA  EF01  F028         	goto	l10113
  7964  004FEE                     l165:
  7965                           
  7966                           ;./pwm.h: 66:             TRISC2 = 0;
  7967  004FEE  9494               	bcf	3988,2,c	;volatile
  7968                           
  7969                           ;./pwm.h: 67:             CCP1M3 = 1;
  7970  004FF0  86BD               	bsf	4029,3,c	;volatile
  7971                           
  7972                           ;./pwm.h: 68:             CCP1M2 = 1;
  7973  004FF2  84BD               	bsf	4029,2,c	;volatile
  7974                           
  7975                           ;./pwm.h: 71:             break;
  7976  004FF4  EF16  F028         	goto	l166
  7977  004FF8                     l167:
  7978                           
  7979                           ;./pwm.h: 74:             TRISC1 = 0;
  7980  004FF8  9294               	bcf	3988,1,c	;volatile
  7981                           
  7982                           ;./pwm.h: 75:             CCP2M3 = 1;
  7983  004FFA  86BA               	bsf	4026,3,c	;volatile
  7984                           
  7985                           ;./pwm.h: 76:             CCP2M2 = 1;
  7986  004FFC  84BA               	bsf	4026,2,c	;volatile
  7987                           
  7988                           ;./pwm.h: 77:             break;
  7989  004FFE  EF16  F028         	goto	l166
  7990  005002                     l10113:
  7991  005002  5008               	movf	configPwm@channel^0,w,c
  7992  005004  6E06               	movwf	??_configPwm^0,c
  7993  005006  6A07               	clrf	(??_configPwm+1)^0,c
  7994                           
  7995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7996                           ; Switch size 1, requested type "simple"
  7997                           ; Number of cases is 1, Range of values is 0 to 0
  7998                           ; switch strategies available:
  7999                           ; Name         Instructions Cycles
  8000                           ; simple_byte            4     3 (average)
  8001                           ;	Chosen strategy is simple_byte
  8002  005008  5007               	movf	(??_configPwm+1)^0,w,c
  8003  00500A  0A00               	xorlw	0	; case 0
  8004  00500C  B4D8               	btfsc	status,2,c
  8005  00500E  EF0B  F028         	goto	l10839
  8006  005012  EF16  F028         	goto	l166
  8007  005016                     l10839:
  8008                           
  8009                           ; Switch size 1, requested type "simple"
  8010                           ; Number of cases is 2, Range of values is 1 to 2
  8011                           ; switch strategies available:
  8012                           ; Name         Instructions Cycles
  8013                           ; simple_byte            7     4 (average)
  8014                           ;	Chosen strategy is simple_byte
  8015  005016  5006               	movf	??_configPwm^0,w,c
  8016  005018  0A01               	xorlw	1	; case 1
  8017  00501A  B4D8               	btfsc	status,2,c
  8018  00501C  EFF7  F027         	goto	l165
  8019  005020  0A03               	xorlw	3	; case 2
  8020  005022  B4D8               	btfsc	status,2,c
  8021  005024  EFFC  F027         	goto	l167
  8022  005028  EF16  F028         	goto	l166
  8023  00502C                     l166:
  8024                           
  8025                           ;./pwm.h: 81:     TMR2ON = 1;
  8026  00502C  84CA               	bsf	4042,2,c	;volatile
  8027  00502E  0012               	return		;funcret
  8028  005030                     __end_of_configPwm:
  8029                           	opt callstack 0
  8030                           
  8031 ;; *************** function _comportamientoBasico *****************
  8032 ;; Defined at:
  8033 ;;		line 273 in file "main.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;		None
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;  direccionEle    1   66[BANK0 ] unsigned char 
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0
  8048 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8049 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8050 ;;      Totals:         0       3       0       0       0       0       0       0       0
  8051 ;;Total ram usage:        3 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:    9
  8054 ;; This function calls:
  8055 ;;		_PID
  8056 ;;		_UART_printf
  8057 ;;		_caminoCorrecto
  8058 ;;		_decidirDireccion
  8059 ;;		_finalizarRecorrido
  8060 ;;		_forzarEspejeo
  8061 ;;		_forzarParoAuto
  8062 ;;		_hayCruce
  8063 ;;		_leerSensores
  8064 ;;		_limpiarMovimientos
  8065 ;;		_moverCarrito
  8066 ;;		_recorrerCaminoEncontrado
  8067 ;;		_regresarAlCruce
  8068 ;;		_regresarPuntoPartida
  8069 ;;		_velocidadBaja
  8070 ;;		_velocidadEstandar
  8071 ;; This function is called by:
  8072 ;;		_main
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           	psect	text31
  8077  001E32                     __ptext31:
  8078                           	opt callstack 0
  8079  001E32                     _comportamientoBasico:
  8080                           	opt callstack 21
  8081  001E32                     
  8082                           ;main.c: 292:     if (!caminoEncontrado) {
  8083  001E32  0101               	movlb	1	; () banked
  8084  001E34  5132               	movf	comportamientoBasico@caminoEncontrado& (0+255),w,b
  8085  001E36  A4D8               	btfss	status,2,c
  8086  001E38  EF20  F00F         	goto	u11491
  8087  001E3C  EF22  F00F         	goto	u11490
  8088  001E40                     u11491:
  8089  001E40  EF00  F011         	goto	l10315
  8090  001E44                     u11490:
  8091  001E44                     
  8092                           ; BSR set to: 1
  8093                           ;main.c: 294:         moverCarrito(espejearCarroY, &carroEspejeado);
  8094  001E44  0EC8               	movlw	low comportamientoBasico@carroEspejeado
  8095  001E46  0100               	movlb	0	; () banked
  8096  001E48  6F88               	movwf	moverCarrito@carroEspejeado& (0+255),b
  8097  001E4A  0E01               	movlw	high comportamientoBasico@carroEspejeado
  8098  001E4C  6F89               	movwf	(moverCarrito@carroEspejeado+1)& (0+255),b
  8099  001E4E  0101               	movlb	1	; () banked
  8100  001E50  5135               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  8101  001E52  EC77  F021         	call	_moverCarrito
  8102  001E56                     
  8103                           ;main.c: 297:         if (!llegoDestino) {
  8104  001E56  5059               	movf	_llegoDestino^0,w,c
  8105  001E58  A4D8               	btfss	status,2,c
  8106  001E5A  EF31  F00F         	goto	u11501
  8107  001E5E  EF33  F00F         	goto	u11500
  8108  001E62                     u11501:
  8109  001E62  EF87  F00F         	goto	l10213
  8110  001E66                     u11500:
  8111  001E66                     
  8112                           ;main.c: 299:             if (mapear)
  8113  001E66  0101               	movlb	1	; () banked
  8114  001E68  5134               	movf	comportamientoBasico@mapear& (0+255),w,b
  8115  001E6A  B4D8               	btfsc	status,2,c
  8116  001E6C  EF3A  F00F         	goto	u11511
  8117  001E70  EF3C  F00F         	goto	u11510
  8118  001E74                     u11511:
  8119  001E74  EF60  F00F         	goto	l10199
  8120  001E78                     u11510:
  8121  001E78                     
  8122                           ; BSR set to: 1
  8123                           ;main.c: 300:             {;main.c: 301:                 if (numMovimientos < 200)
  8124  001E78  51C2               	movf	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  8125  001E7A  E107               	bnz	u11521
  8126  001E7C  0EC8               	movlw	200
  8127  001E7E  5DC1               	subwf	comportamientoBasico@numMovimientos& (0+255),w,b
  8128  001E80  B0D8               	btfsc	status,0,c
  8129  001E82  EF45  F00F         	goto	u11521
  8130  001E86  EF47  F00F         	goto	u11520
  8131  001E8A                     u11521:
  8132  001E8A  EF53  F00F         	goto	l10193
  8133  001E8E                     u11520:
  8134  001E8E                     
  8135                           ; BSR set to: 1
  8136                           ;main.c: 302:                     movimientosRealizados[numMovimientos++] = mouse.curr_s
      +                          tate;
  8137  001E8E  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  8138  001E90  25C1               	addwf	comportamientoBasico@numMovimientos& (0+255),w,b
  8139  001E92  6ED9               	movwf	fsr2l,c
  8140  001E94  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  8141  001E96  21C2               	addwfc	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  8142  001E98  6EDA               	movwf	fsr2h,c
  8143  001E9A  C0FD  FFDF         	movff	_mouse,indf2
  8144  001E9E                     
  8145                           ; BSR set to: 1
  8146  001E9E  4BC1               	infsnz	comportamientoBasico@numMovimientos& (0+255),f,b
  8147  001EA0  2BC2               	incf	(comportamientoBasico@numMovimientos+1)& (0+255),f,b
  8148  001EA2  EF87  F00F         	goto	l10213
  8149  001EA6                     l10193:
  8150                           
  8151                           ; BSR set to: 1
  8152                           ;main.c: 304:                     UART_printf("\n\nOVERFLOW en el mapeo de pasos Realiza
      +                          dos para cruce\n\n");
  8153  001EA6  0EE6               	movlw	low STR_12
  8154  001EA8  6E07               	movwf	UART_printf@cadena^0,c
  8155  001EAA  0E7E               	movlw	high STR_12
  8156  001EAC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  8157  001EAE  ECEB  F026         	call	_UART_printf	;wreg free
  8158  001EB2                     l10195:
  8159                           
  8160                           ;main.c: 305:                     forzarParoAuto();
  8161  001EB2  EC65  F02A         	call	_forzarParoAuto	;wreg free
  8162  001EB6                     
  8163                           ;main.c: 306:                     pausa = 1;
  8164  001EB6  0E01               	movlw	1
  8165  001EB8  0101               	movlb	1	; () banked
  8166  001EBA  6FD0               	movwf	_pausa& (0+255),b
  8167  001EBC  EF87  F00F         	goto	l10213
  8168  001EC0                     l10199:
  8169                           
  8170                           ; BSR set to: 1
  8171                           ;main.c: 327:                 if (!investigandoCruce) {
  8172  001EC0  51C7               	movf	comportamientoBasico@investigandoCruce& (0+255),w,b
  8173  001EC2  A4D8               	btfss	status,2,c
  8174  001EC4  EF66  F00F         	goto	u11531
  8175  001EC8  EF68  F00F         	goto	u11530
  8176  001ECC                     u11531:
  8177  001ECC  EF87  F00F         	goto	l10213
  8178  001ED0                     u11530:
  8179  001ED0                     
  8180                           ; BSR set to: 1
  8181                           ;main.c: 328:                     if (numMovimientosTotales < 1000)
  8182  001ED0  0EE8               	movlw	232
  8183  001ED2  5DBF               	subwf	comportamientoBasico@numMovimientosTotales& (0+255),w,b
  8184  001ED4  0E03               	movlw	3
  8185  001ED6  59C0               	subwfb	(comportamientoBasico@numMovimientosTotales+1)& (0+255),w,b
  8186  001ED8  B0D8               	btfsc	status,0,c
  8187  001EDA  EF71  F00F         	goto	u11541
  8188  001EDE  EF73  F00F         	goto	u11540
  8189  001EE2                     u11541:
  8190  001EE2  EF7F  F00F         	goto	l10207
  8191  001EE6                     u11540:
  8192  001EE6                     
  8193                           ; BSR set to: 1
  8194                           ;main.c: 329:                         caminoFinal[numMovimientosTotales++] = mouse.curr_
      +                          state;
  8195  001EE6  0EC8               	movlw	low comportamientoBasico@caminoFinal
  8196  001EE8  25BF               	addwf	comportamientoBasico@numMovimientosTotales& (0+255),w,b
  8197  001EEA  6ED9               	movwf	fsr2l,c
  8198  001EEC  0E02               	movlw	high comportamientoBasico@caminoFinal
  8199  001EEE  21C0               	addwfc	(comportamientoBasico@numMovimientosTotales+1)& (0+255),w,b
  8200  001EF0  6EDA               	movwf	fsr2h,c
  8201  001EF2  C0FD  FFDF         	movff	_mouse,indf2
  8202  001EF6                     
  8203                           ; BSR set to: 1
  8204  001EF6  4BBF               	infsnz	comportamientoBasico@numMovimientosTotales& (0+255),f,b
  8205  001EF8  2BC0               	incf	(comportamientoBasico@numMovimientosTotales+1)& (0+255),f,b
  8206  001EFA  EF87  F00F         	goto	l10213
  8207  001EFE                     l10207:
  8208                           
  8209                           ; BSR set to: 1
  8210                           ;main.c: 331:                         UART_printf("\n\nOVERFLOW en el mapeo de pasos Rea
      +                          lizados para camino Total\n\n");
  8211  001EFE  0EA7               	movlw	low STR_13
  8212  001F00  6E07               	movwf	UART_printf@cadena^0,c
  8213  001F02  0E7E               	movlw	high STR_13
  8214  001F04  6E08               	movwf	(UART_printf@cadena+1)^0,c
  8215  001F06  ECEB  F026         	call	_UART_printf	;wreg free
  8216  001F0A  EF59  F00F         	goto	l10195
  8217  001F0E                     l10213:
  8218                           
  8219                           ;main.c: 340:         leerSensores();
  8220  001F0E  EC7B  F01C         	call	_leerSensores	;wreg free
  8221  001F12                     
  8222                           ;main.c: 342:         if (hayCruce(caminosRecorrer, investigandoCruce) && !cruceDetectad
      +                          o) {
  8223  001F12  0EBC               	movlw	low comportamientoBasico@caminosRecorrer
  8224  001F14  6E40               	movwf	hayCruce@caminosRecorrer^0,c
  8225  001F16  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  8226  001F18  6E41               	movwf	(hayCruce@caminosRecorrer+1)^0,c
  8227  001F1A  C1C7  F042         	movff	comportamientoBasico@investigandoCruce,hayCruce@investigandoCruce
  8228  001F1E  ECB8  F01B         	call	_hayCruce	;wreg free
  8229  001F22  0900               	iorlw	0
  8230  001F24  B4D8               	btfsc	status,2,c
  8231  001F26  EF97  F00F         	goto	u11551
  8232  001F2A  EF99  F00F         	goto	u11550
  8233  001F2E                     u11551:
  8234  001F2E  EFB4  F00F         	goto	l10225
  8235  001F32                     u11550:
  8236  001F32  0101               	movlb	1	; () banked
  8237  001F34  5133               	movf	comportamientoBasico@cruceDetectado& (0+255),w,b
  8238  001F36  A4D8               	btfss	status,2,c
  8239  001F38  EFA0  F00F         	goto	u11561
  8240  001F3C  EFA2  F00F         	goto	u11560
  8241  001F40                     u11561:
  8242  001F40  EFB4  F00F         	goto	l10225
  8243  001F44                     u11560:
  8244  001F44                     
  8245                           ; BSR set to: 1
  8246                           ;main.c: 344:             if (!investigandoCruce)
  8247  001F44  51C7               	movf	comportamientoBasico@investigandoCruce& (0+255),w,b
  8248  001F46  A4D8               	btfss	status,2,c
  8249  001F48  EFA8  F00F         	goto	u11571
  8250  001F4C  EFAA  F00F         	goto	u11570
  8251  001F50                     u11571:
  8252  001F50  EFAC  F00F         	goto	l371
  8253  001F54                     u11570:
  8254  001F54                     
  8255                           ; BSR set to: 1
  8256                           ;main.c: 345:                 posicionInvCruce = 1;
  8257  001F54  0E01               	movlw	1
  8258  001F56  6FC6               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  8259  001F58                     l371:
  8260                           
  8261                           ; BSR set to: 1
  8262                           ;main.c: 347:             mapear = 1;
  8263  001F58  0E01               	movlw	1
  8264  001F5A  6F34               	movwf	comportamientoBasico@mapear& (0+255),b
  8265                           
  8266                           ;main.c: 348:             cruceDetectado = 1;
  8267  001F5C  0E01               	movlw	1
  8268  001F5E  6F33               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  8269                           
  8270                           ;main.c: 349:             investigandoCruce = 1;
  8271  001F60  0E01               	movlw	1
  8272  001F62  6FC7               	movwf	comportamientoBasico@investigandoCruce& (0+255),b
  8273  001F64                     
  8274                           ; BSR set to: 1
  8275                           ;main.c: 350:             velocidadBaja();
  8276  001F64  ECCB  F029         	call	_velocidadBaja	;wreg free
  8277  001F68                     l10225:
  8278                           
  8279                           ;main.c: 353:         direccionElegida = decidirDireccion(caminosRecorrer, &investigando
      +                          Cruce,
  8280  001F68  0EBC               	movlw	low comportamientoBasico@caminosRecorrer
  8281  001F6A  6E40               	movwf	decidirDireccion@caminosRecorrer^0,c
  8282  001F6C  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  8283  001F6E  6E41               	movwf	(decidirDireccion@caminosRecorrer+1)^0,c
  8284  001F70  0EC7               	movlw	low comportamientoBasico@investigandoCruce
  8285  001F72  6E42               	movwf	decidirDireccion@investigandoCruce^0,c
  8286  001F74  0E01               	movlw	high comportamientoBasico@investigandoCruce
  8287  001F76  6E43               	movwf	(decidirDireccion@investigandoCruce+1)^0,c
  8288  001F78  0EC6               	movlw	low comportamientoBasico@posicionInvCruce
  8289  001F7A  6E44               	movwf	decidirDireccion@posicionInvCruce^0,c
  8290  001F7C  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  8291  001F7E  6E45               	movwf	(decidirDireccion@posicionInvCruce+1)^0,c
  8292  001F80  0EC5               	movlw	low comportamientoBasico@contCaminosRecorridos
  8293  001F82  6E46               	movwf	decidirDireccion@contCaminosRecorridos^0,c
  8294  001F84  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  8295  001F86  6E47               	movwf	(decidirDireccion@contCaminosRecorridos+1)^0,c
  8296  001F88  0EC4               	movlw	low comportamientoBasico@caminoActual
  8297  001F8A  6E48               	movwf	decidirDireccion@caminoActual^0,c
  8298  001F8C  0E01               	movlw	high comportamientoBasico@caminoActual
  8299  001F8E  6E49               	movwf	(decidirDireccion@caminoActual+1)^0,c
  8300  001F90  0EC3               	movlw	low comportamientoBasico@cambioOrientacionCarro
  8301  001F92  6E4A               	movwf	decidirDireccion@cambioOrientacionCarro^0,c
  8302  001F94  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  8303  001F96  6E4B               	movwf	(decidirDireccion@cambioOrientacionCarro+1)^0,c
  8304  001F98  ECE7  F00A         	call	_decidirDireccion	;wreg free
  8305  001F9C  0100               	movlb	0	; () banked
  8306  001F9E  6FA2               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  8307                           
  8308                           ;main.c: 357:         switch (mouse.curr_state) {
  8309  001FA0  EFDF  F010         	goto	l10313
  8310  001FA4                     l10227:
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;main.c: 364:                         mapear = 0;
  8314  001FA4  0E00               	movlw	0
  8315  001FA6  0101               	movlb	1	; () banked
  8316  001FA8  6F34               	movwf	comportamientoBasico@mapear& (0+255),b
  8317                           
  8318                           ;main.c: 365:                         espejearCarroY = 1;
  8319  001FAA  0E01               	movlw	1
  8320  001FAC  6F35               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  8321                           
  8322                           ;main.c: 366:                         mouse.Next_state = IZQUIERDA;
  8323  001FAE  0E02               	movlw	2
  8324  001FB0  0100               	movlb	0	; () banked
  8325  001FB2  6FFE               	movwf	(_mouse+1)& (0+255),b
  8326                           
  8327                           ;main.c: 367:                         break;
  8328  001FB4  EFFC  F010         	goto	l381
  8329  001FB8                     l10229:
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;main.c: 370:                         PID();
  8333  001FB8  EC40  F016         	call	_PID	;wreg free
  8334  001FBC                     l10231:
  8335                           
  8336                           ;main.c: 371:                         mouse.Next_state = ENFRENTE;
  8337  001FBC  0E01               	movlw	1
  8338  001FBE  0100               	movlb	0	; () banked
  8339  001FC0  6FFE               	movwf	(_mouse+1)& (0+255),b
  8340                           
  8341                           ;main.c: 372:                         break;
  8342  001FC2  EFFC  F010         	goto	l381
  8343  001FC6                     l10233:
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;main.c: 375:                         velocidadEstandar();
  8347  001FC6  ECDE  F029         	call	_velocidadEstandar	;wreg free
  8348  001FCA                     l10235:
  8349                           
  8350                           ;main.c: 376:                         mouse.Next_state = IZQUIERDA;
  8351  001FCA  0E02               	movlw	2
  8352  001FCC  0100               	movlb	0	; () banked
  8353  001FCE  6FFE               	movwf	(_mouse+1)& (0+255),b
  8354                           
  8355                           ;main.c: 377:                         break;
  8356  001FD0  EFFC  F010         	goto	l381
  8357  001FD4                     l10237:
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;main.c: 380:                         velocidadEstandar();
  8361  001FD4  ECDE  F029         	call	_velocidadEstandar	;wreg free
  8362  001FD8                     
  8363                           ;main.c: 381:                         mouse.Next_state = DERECHA;
  8364  001FD8  0E03               	movlw	3
  8365  001FDA  0100               	movlb	0	; () banked
  8366  001FDC  6FFE               	movwf	(_mouse+1)& (0+255),b
  8367                           
  8368                           ;main.c: 382:                         break;
  8369  001FDE  EFFC  F010         	goto	l381
  8370  001FE2                     l10241:
  8371                           
  8372                           ;main.c: 386:                         mouse.Next_state = ALTO;
  8373  001FE2  0E04               	movlw	4
  8374  001FE4  0100               	movlb	0	; () banked
  8375  001FE6  6FFE               	movwf	(_mouse+1)& (0+255),b
  8376                           
  8377                           ;main.c: 387:                         break;
  8378  001FE8  EFFC  F010         	goto	l381
  8379  001FEC                     l10245:
  8380                           
  8381                           ; BSR set to: 0
  8382  001FEC  51A2               	movf	comportamientoBasico@direccionElegida& (0+255),w,b
  8383  001FEE  6FA0               	movwf	??_comportamientoBasico& (0+255),b
  8384  001FF0  6BA1               	clrf	(??_comportamientoBasico+1)& (0+255),b
  8385                           
  8386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8387                           ; Switch size 1, requested type "simple"
  8388                           ; Number of cases is 1, Range of values is 0 to 0
  8389                           ; switch strategies available:
  8390                           ; Name         Instructions Cycles
  8391                           ; simple_byte            4     3 (average)
  8392                           ;	Chosen strategy is simple_byte
  8393  001FF2  51A1               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  8394  001FF4  0A00               	xorlw	0	; case 0
  8395  001FF6  B4D8               	btfsc	status,2,c
  8396  001FF8  EF00  F010         	goto	l10841
  8397  001FFC  EFFC  F010         	goto	l381
  8398  002000                     l10841:
  8399                           
  8400                           ; BSR set to: 0
  8401                           ; Switch size 1, requested type "simple"
  8402                           ; Number of cases is 5, Range of values is 0 to 4
  8403                           ; switch strategies available:
  8404                           ; Name         Instructions Cycles
  8405                           ; simple_byte           16     9 (average)
  8406                           ;	Chosen strategy is simple_byte
  8407  002000  51A0               	movf	??_comportamientoBasico& (0+255),w,b
  8408  002002  0A00               	xorlw	0	; case 0
  8409  002004  B4D8               	btfsc	status,2,c
  8410  002006  EFD2  F00F         	goto	l10227
  8411  00200A  0A01               	xorlw	1	; case 1
  8412  00200C  B4D8               	btfsc	status,2,c
  8413  00200E  EFDC  F00F         	goto	l10229
  8414  002012  0A03               	xorlw	3	; case 2
  8415  002014  B4D8               	btfsc	status,2,c
  8416  002016  EFE3  F00F         	goto	l10233
  8417  00201A  0A01               	xorlw	1	; case 3
  8418  00201C  B4D8               	btfsc	status,2,c
  8419  00201E  EFEA  F00F         	goto	l10237
  8420  002022  0A07               	xorlw	7	; case 4
  8421  002024  B4D8               	btfsc	status,2,c
  8422  002026  EFF1  F00F         	goto	l10241
  8423  00202A  EFFC  F010         	goto	l381
  8424  00202E                     l10247:
  8425                           
  8426                           ; BSR set to: 0
  8427                           ;main.c: 395:                 if (carroEspejeado && espejearCarroY) {
  8428  00202E  0101               	movlb	1	; () banked
  8429  002030  51C8               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  8430  002032  B4D8               	btfsc	status,2,c
  8431  002034  EF1E  F010         	goto	u11581
  8432  002038  EF20  F010         	goto	u11580
  8433  00203C                     u11581:
  8434  00203C  EF49  F010         	goto	l10265
  8435  002040                     u11580:
  8436  002040                     
  8437                           ; BSR set to: 1
  8438  002040  5135               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  8439  002042  B4D8               	btfsc	status,2,c
  8440  002044  EF26  F010         	goto	u11591
  8441  002048  EF28  F010         	goto	u11590
  8442  00204C                     u11591:
  8443  00204C  EF49  F010         	goto	l10265
  8444  002050                     u11590:
  8445  002050                     
  8446                           ; BSR set to: 1
  8447                           ;main.c: 397:                     espejearCarroY = 0;
  8448  002050  0E00               	movlw	0
  8449  002052  6F35               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  8450                           
  8451                           ;main.c: 398:                     carroEspejeado = 0;
  8452  002054  0E00               	movlw	0
  8453  002056  6FC8               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  8454  002058                     
  8455                           ; BSR set to: 1
  8456                           ;main.c: 400:                     regresarAlCruce(movimientosRealizados, numMovimientos)
      +                          ;
  8457  002058  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  8458  00205A  0100               	movlb	0	; () banked
  8459  00205C  6F9A               	movwf	regresarAlCruce@movimientos& (0+255),b
  8460  00205E  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  8461  002060  6F9B               	movwf	(regresarAlCruce@movimientos+1)& (0+255),b
  8462  002062  C1C1  F09C         	movff	comportamientoBasico@numMovimientos,regresarAlCruce@numMovimientos
  8463  002066  C1C2  F09D         	movff	comportamientoBasico@numMovimientos+1,regresarAlCruce@numMovimientos+1
  8464  00206A  ECA0  F022         	call	_regresarAlCruce	;wreg free
  8465  00206E                     
  8466                           ;main.c: 401:                     limpiarMovimientos(movimientosRealizados, &numMovimien
      +                          tos);
  8467  00206E  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  8468  002070  6E06               	movwf	limpiarMovimientos@movimientos^0,c
  8469  002072  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  8470  002074  6E07               	movwf	(limpiarMovimientos@movimientos+1)^0,c
  8471  002076  0EC1               	movlw	low comportamientoBasico@numMovimientos
  8472  002078  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
  8473  00207A  0E01               	movlw	high comportamientoBasico@numMovimientos
  8474  00207C  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
  8475  00207E  EC18  F028         	call	_limpiarMovimientos	;wreg free
  8476  002082                     
  8477                           ;main.c: 403:                     cruceDetectado = 0;
  8478  002082  0E00               	movlw	0
  8479  002084  0101               	movlb	1	; () banked
  8480  002086  6F33               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  8481  002088                     
  8482                           ; BSR set to: 1
  8483                           ;main.c: 404:                     posicionInvCruce = 1;
  8484  002088  0E01               	movlw	1
  8485  00208A  6FC6               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  8486  00208C                     
  8487                           ; BSR set to: 1
  8488                           ;main.c: 405:                     contCaminosRecorridos++;
  8489  00208C  2BC5               	incf	comportamientoBasico@contCaminosRecorridos& (0+255),f,b
  8490  00208E  EFF1  F00F         	goto	l10241
  8491  002092                     l10265:
  8492                           
  8493                           ; BSR set to: 1
  8494  002092  5135               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  8495  002094  B4D8               	btfsc	status,2,c
  8496  002096  EF4F  F010         	goto	u11601
  8497  00209A  EF51  F010         	goto	u11600
  8498  00209E                     u11601:
  8499  00209E  EFDE  F00F         	goto	l10231
  8500  0020A2                     u11600:
  8501  0020A2                     
  8502                           ; BSR set to: 1
  8503  0020A2  51C8               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  8504  0020A4  B4D8               	btfsc	status,2,c
  8505  0020A6  EF57  F010         	goto	u11611
  8506  0020AA  EF59  F010         	goto	u11610
  8507  0020AE                     u11611:
  8508  0020AE  EFDE  F00F         	goto	l10231
  8509  0020B2                     u11610:
  8510  0020B2                     
  8511                           ; BSR set to: 1
  8512  0020B2  5059               	movf	_llegoDestino^0,w,c
  8513  0020B4  B4D8               	btfsc	status,2,c
  8514  0020B6  EF5F  F010         	goto	u11621
  8515  0020BA  EF61  F010         	goto	u11620
  8516  0020BE                     u11621:
  8517  0020BE  EFDE  F00F         	goto	l10231
  8518  0020C2                     u11620:
  8519  0020C2                     
  8520                           ; BSR set to: 1
  8521                           ;main.c: 408:                     espejearCarroY = 0;
  8522  0020C2  0E00               	movlw	0
  8523  0020C4  6F35               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  8524                           
  8525                           ;main.c: 409:                     mouse.Next_state = ALTO;
  8526  0020C6  0E04               	movlw	4
  8527  0020C8  0100               	movlb	0	; () banked
  8528  0020CA  6FFE               	movwf	(_mouse+1)& (0+255),b
  8529                           
  8530                           ;main.c: 411:                 } else {
  8531  0020CC  EFFC  F010         	goto	l381
  8532  0020D0                     l10277:
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;main.c: 423:                 if (llegoDestino && carroEspejeado) {
  8536  0020D0  5059               	movf	_llegoDestino^0,w,c
  8537  0020D2  B4D8               	btfsc	status,2,c
  8538  0020D4  EF6E  F010         	goto	u11631
  8539  0020D8  EF70  F010         	goto	u11630
  8540  0020DC                     u11631:
  8541  0020DC  EF8F  F010         	goto	l10291
  8542  0020E0                     u11630:
  8543  0020E0                     
  8544                           ; BSR set to: 0
  8545  0020E0  0101               	movlb	1	; () banked
  8546  0020E2  51C8               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  8547  0020E4  B4D8               	btfsc	status,2,c
  8548  0020E6  EF77  F010         	goto	u11641
  8549  0020EA  EF79  F010         	goto	u11640
  8550  0020EE                     u11641:
  8551  0020EE  EF8F  F010         	goto	l10291
  8552  0020F2                     u11640:
  8553  0020F2                     
  8554                           ; BSR set to: 1
  8555                           ;main.c: 425:                     carroEspejeado = 0;
  8556  0020F2  0E00               	movlw	0
  8557  0020F4  6FC8               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  8558  0020F6                     
  8559                           ; BSR set to: 1
  8560                           ;main.c: 426:                     regresarPuntoPartida(caminoFinal, numMovimientosTotale
      +                          s);
  8561  0020F6  0EC8               	movlw	low comportamientoBasico@caminoFinal
  8562  0020F8  0100               	movlb	0	; () banked
  8563  0020FA  6F9A               	movwf	regresarPuntoPartida@movimientos& (0+255),b
  8564  0020FC  0E02               	movlw	high comportamientoBasico@caminoFinal
  8565  0020FE  6F9B               	movwf	(regresarPuntoPartida@movimientos+1)& (0+255),b
  8566  002100  C1BF  F09C         	movff	comportamientoBasico@numMovimientosTotales,regresarPuntoPartida@numMovimientos
  8567  002104  C1C0  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,regresarPuntoPartida@numMovimientos+
      +                          1
  8568  002108  EC05  F024         	call	_regresarPuntoPartida	;wreg free
  8569  00210C                     
  8570                           ;main.c: 427:                     llegoDestino = 0;
  8571  00210C  0E00               	movlw	0
  8572  00210E  6E59               	movwf	_llegoDestino^0,c
  8573  002110                     
  8574                           ;main.c: 428:                     caminoEncontrado = 1;
  8575  002110  0E01               	movlw	1
  8576  002112  0101               	movlb	1	; () banked
  8577  002114  6F32               	movwf	comportamientoBasico@caminoEncontrado& (0+255),b
  8578  002116                     
  8579                           ; BSR set to: 1
  8580                           ;main.c: 429:                     finalizarRecorrido();
  8581  002116  EC58  F02A         	call	_finalizarRecorrido	;wreg free
  8582                           
  8583                           ;main.c: 430:                 } else if (llegoDestino && !carroEspejeado) {
  8584  00211A  EFFC  F010         	goto	l381
  8585  00211E                     l10291:
  8586  00211E  5059               	movf	_llegoDestino^0,w,c
  8587  002120  B4D8               	btfsc	status,2,c
  8588  002122  EF95  F010         	goto	u11651
  8589  002126  EF97  F010         	goto	u11650
  8590  00212A                     u11651:
  8591  00212A  EFC6  F010         	goto	l10303
  8592  00212E                     u11650:
  8593  00212E  0101               	movlb	1	; () banked
  8594  002130  51C8               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  8595  002132  A4D8               	btfss	status,2,c
  8596  002134  EF9E  F010         	goto	u11661
  8597  002138  EFA0  F010         	goto	u11660
  8598  00213C                     u11661:
  8599  00213C  EFC6  F010         	goto	l10303
  8600  002140                     u11660:
  8601  002140                     
  8602                           ; BSR set to: 1
  8603                           ;main.c: 432:                     caminoCorrecto(movimientosRealizados, caminoFinal, num
      +                          Movimientos,
  8604  002140  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  8605  002142  6E12               	movwf	caminoCorrecto@movimientos^0,c
  8606  002144  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  8607  002146  6E13               	movwf	(caminoCorrecto@movimientos+1)^0,c
  8608  002148  0EC8               	movlw	low comportamientoBasico@caminoFinal
  8609  00214A  6E14               	movwf	caminoCorrecto@caminoFinal^0,c
  8610  00214C  0E02               	movlw	high comportamientoBasico@caminoFinal
  8611  00214E  6E15               	movwf	(caminoCorrecto@caminoFinal+1)^0,c
  8612  002150  C1C1  F016         	movff	comportamientoBasico@numMovimientos,caminoCorrecto@numMovimientos
  8613  002154  C1C2  F017         	movff	comportamientoBasico@numMovimientos+1,caminoCorrecto@numMovimientos+1
  8614  002158  0EBF               	movlw	low comportamientoBasico@numMovimientosTotales
  8615  00215A  6E18               	movwf	caminoCorrecto@numMovimientosFinal^0,c
  8616  00215C  0E01               	movlw	high comportamientoBasico@numMovimientosTotales
  8617  00215E  6E19               	movwf	(caminoCorrecto@numMovimientosFinal+1)^0,c
  8618  002160  C1C4  F01A         	movff	comportamientoBasico@caminoActual,caminoCorrecto@caminoActual
  8619  002164  ECAD  F028         	call	_caminoCorrecto	;wreg free
  8620  002168                     
  8621                           ;main.c: 435:                     espejearCarroY = 1;
  8622  002168  0E01               	movlw	1
  8623  00216A  0101               	movlb	1	; () banked
  8624  00216C  6F35               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  8625  00216E                     
  8626                           ; BSR set to: 1
  8627                           ;main.c: 436:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
  8628  00216E  0E10               	movlw	16
  8629  002170  0100               	movlb	0	; () banked
  8630  002172  6FA1               	movwf	(??_comportamientoBasico+1)& (0+255),b
  8631  002174  0E39               	movlw	57
  8632  002176  6FA0               	movwf	??_comportamientoBasico& (0+255),b
  8633  002178  0E0D               	movlw	13
  8634  00217A                     u11837:
  8635  00217A  2EE8               	decfsz	wreg,f,c
  8636  00217C  D7FE               	bra	u11837
  8637  00217E  2FA0               	decfsz	??_comportamientoBasico& (0+255),f,b
  8638  002180  D7FC               	bra	u11837
  8639  002182  2FA1               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  8640  002184  D7FA               	bra	u11837
  8641  002186  D000               	nop2	
  8642  002188  EFE5  F00F         	goto	l10235
  8643  00218C                     l10303:
  8644                           
  8645                           ;main.c: 440:                     if (direccionElegida == IZQUIERDA || direccionElegida 
      +                          == DERECHA)
  8646  00218C  0E02               	movlw	2
  8647  00218E  0100               	movlb	0	; () banked
  8648  002190  19A2               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  8649  002192  B4D8               	btfsc	status,2,c
  8650  002194  EFCE  F010         	goto	u11671
  8651  002198  EFD0  F010         	goto	u11670
  8652  00219C                     u11671:
  8653  00219C  EFD9  F010         	goto	l10307
  8654  0021A0                     u11670:
  8655  0021A0                     
  8656                           ; BSR set to: 0
  8657  0021A0  0E03               	movlw	3
  8658  0021A2  19A2               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  8659  0021A4  A4D8               	btfss	status,2,c
  8660  0021A6  EFD7  F010         	goto	u11681
  8661  0021AA  EFD9  F010         	goto	u11680
  8662  0021AE                     u11681:
  8663  0021AE  EFDB  F010         	goto	l10309
  8664  0021B2                     u11680:
  8665  0021B2                     l10307:
  8666                           
  8667                           ; BSR set to: 0
  8668                           ;main.c: 441:                         velocidadEstandar();
  8669  0021B2  ECDE  F029         	call	_velocidadEstandar	;wreg free
  8670  0021B6                     l10309:
  8671                           
  8672                           ;main.c: 443:                     mouse.Next_state = direccionElegida;
  8673  0021B6  C0A2  F0FE         	movff	comportamientoBasico@direccionElegida,_mouse+1
  8674  0021BA  EFFC  F010         	goto	l381
  8675  0021BE                     l10313:
  8676                           
  8677                           ; BSR set to: 0
  8678  0021BE  51FD               	movf	_mouse& (0+255),w,b
  8679  0021C0  6FA0               	movwf	??_comportamientoBasico& (0+255),b
  8680  0021C2  6BA1               	clrf	(??_comportamientoBasico+1)& (0+255),b
  8681                           
  8682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8683                           ; Switch size 1, requested type "simple"
  8684                           ; Number of cases is 1, Range of values is 0 to 0
  8685                           ; switch strategies available:
  8686                           ; Name         Instructions Cycles
  8687                           ; simple_byte            4     3 (average)
  8688                           ;	Chosen strategy is simple_byte
  8689  0021C4  51A1               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  8690  0021C6  0A00               	xorlw	0	; case 0
  8691  0021C8  B4D8               	btfsc	status,2,c
  8692  0021CA  EFE9  F010         	goto	l10843
  8693  0021CE  EFFC  F010         	goto	l381
  8694  0021D2                     l10843:
  8695                           
  8696                           ; BSR set to: 0
  8697                           ; Switch size 1, requested type "simple"
  8698                           ; Number of cases is 4, Range of values is 1 to 4
  8699                           ; switch strategies available:
  8700                           ; Name         Instructions Cycles
  8701                           ; simple_byte           13     7 (average)
  8702                           ;	Chosen strategy is simple_byte
  8703  0021D2  51A0               	movf	??_comportamientoBasico& (0+255),w,b
  8704  0021D4  0A01               	xorlw	1	; case 1
  8705  0021D6  B4D8               	btfsc	status,2,c
  8706  0021D8  EFF6  F00F         	goto	l10245
  8707  0021DC  0A03               	xorlw	3	; case 2
  8708  0021DE  B4D8               	btfsc	status,2,c
  8709  0021E0  EF17  F010         	goto	l10247
  8710  0021E4  0A01               	xorlw	1	; case 3
  8711  0021E6  B4D8               	btfsc	status,2,c
  8712  0021E8  EFDE  F00F         	goto	l10231
  8713  0021EC  0A07               	xorlw	7	; case 4
  8714  0021EE  B4D8               	btfsc	status,2,c
  8715  0021F0  EF68  F010         	goto	l10277
  8716  0021F4  EFFC  F010         	goto	l381
  8717  0021F8                     l381:
  8718                           
  8719                           ;main.c: 449:         mouse.curr_state = mouse.Next_state;
  8720  0021F8  C0FE  F0FD         	movff	_mouse+1,_mouse
  8721                           
  8722                           ;main.c: 451:     } else {
  8723  0021FC  EF27  F011         	goto	l397
  8724  002200                     l10315:
  8725                           
  8726                           ; BSR set to: 1
  8727                           ;main.c: 452:         recorrerCaminoEncontrado(caminoFinal, numMovimientosTotales);
  8728  002200  0EC8               	movlw	low comportamientoBasico@caminoFinal
  8729  002202  0100               	movlb	0	; () banked
  8730  002204  6F9A               	movwf	recorrerCaminoEncontrado@movimientos& (0+255),b
  8731  002206  0E02               	movlw	high comportamientoBasico@caminoFinal
  8732  002208  6F9B               	movwf	(recorrerCaminoEncontrado@movimientos+1)& (0+255),b
  8733  00220A  C1BF  F09C         	movff	comportamientoBasico@numMovimientosTotales,recorrerCaminoEncontrado@numMovimiento
      +                          s
  8734  00220E  C1C0  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,recorrerCaminoEncontrado@numMovimien
      +                          tos+1
  8735  002212  ECF3  F024         	call	_recorrerCaminoEncontrado	;wreg free
  8736  002216                     
  8737                           ;main.c: 453:         _delay((unsigned long)((3000)*(4000000/4000.0)));
  8738  002216  0E10               	movlw	16
  8739  002218  0100               	movlb	0	; () banked
  8740  00221A  6FA1               	movwf	(??_comportamientoBasico+1)& (0+255),b
  8741  00221C  0E39               	movlw	57
  8742  00221E  6FA0               	movwf	??_comportamientoBasico& (0+255),b
  8743  002220  0E0D               	movlw	13
  8744  002222                     u11847:
  8745  002222  2EE8               	decfsz	wreg,f,c
  8746  002224  D7FE               	bra	u11847
  8747  002226  2FA0               	decfsz	??_comportamientoBasico& (0+255),f,b
  8748  002228  D7FC               	bra	u11847
  8749  00222A  2FA1               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  8750  00222C  D7FA               	bra	u11847
  8751  00222E  D000               	nop2	
  8752  002230                     
  8753                           ;main.c: 454:         forzarEspejeo();
  8754  002230  EC12  F029         	call	_forzarEspejeo	;wreg free
  8755  002234                     
  8756                           ;main.c: 455:         regresarPuntoPartida(caminoFinal, numMovimientosTotales);
  8757  002234  0EC8               	movlw	low comportamientoBasico@caminoFinal
  8758  002236  0100               	movlb	0	; () banked
  8759  002238  6F9A               	movwf	regresarPuntoPartida@movimientos& (0+255),b
  8760  00223A  0E02               	movlw	high comportamientoBasico@caminoFinal
  8761  00223C  6F9B               	movwf	(regresarPuntoPartida@movimientos+1)& (0+255),b
  8762  00223E  C1BF  F09C         	movff	comportamientoBasico@numMovimientosTotales,regresarPuntoPartida@numMovimientos
  8763  002242  C1C0  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,regresarPuntoPartida@numMovimientos+
      +                          1
  8764  002246  EC05  F024         	call	_regresarPuntoPartida	;wreg free
  8765  00224A                     
  8766                           ;main.c: 456:         finalizarRecorrido();
  8767  00224A  EC58  F02A         	call	_finalizarRecorrido	;wreg free
  8768  00224E                     l397:
  8769  00224E  0012               	return		;funcret
  8770  002250                     __end_of_comportamientoBasico:
  8771                           	opt callstack 0
  8772                           
  8773 ;; *************** function _velocidadBaja *****************
  8774 ;; Defined at:
  8775 ;;		line 1268 in file "main.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;		None
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;		None
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      void 
  8782 ;; Registers used:
  8783 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8789 ;;      Params:         0       0       0       0       0       0       0       0       0
  8790 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8792 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8793 ;;Total ram usage:        0 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    5
  8796 ;; This function calls:
  8797 ;;		_pwmDuty
  8798 ;; This function is called by:
  8799 ;;		_comportamientoBasico
  8800 ;;		_probarCruceT
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           	psect	text32
  8805  005396                     __ptext32:
  8806                           	opt callstack 0
  8807  005396                     _velocidadBaja:
  8808                           	opt callstack 24
  8809  005396                     
  8810                           ;main.c: 1270:     pwmDuty(70, 1);
  8811  005396  0E00               	movlw	0
  8812  005398  0100               	movlb	0	; () banked
  8813  00539A  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  8814  00539C  0E46               	movlw	70
  8815  00539E  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  8816  0053A0  0E01               	movlw	1
  8817  0053A2  6F7E               	movwf	pwmDuty@channel& (0+255),b
  8818  0053A4  EC74  F018         	call	_pwmDuty	;wreg free
  8819                           
  8820                           ;main.c: 1271:     pwmDuty(70, 2);
  8821  0053A8  0E00               	movlw	0
  8822  0053AA  0100               	movlb	0	; () banked
  8823  0053AC  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  8824  0053AE  0E46               	movlw	70
  8825  0053B0  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  8826  0053B2  0E02               	movlw	2
  8827  0053B4  6F7E               	movwf	pwmDuty@channel& (0+255),b
  8828  0053B6  EC74  F018         	call	_pwmDuty	;wreg free
  8829  0053BA  0012               	return		;funcret
  8830  0053BC                     __end_of_velocidadBaja:
  8831                           	opt callstack 0
  8832                           
  8833 ;; *************** function _regresarPuntoPartida *****************
  8834 ;; Defined at:
  8835 ;;		line 655 in file "main.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  8838 ;;		 -> comportamientoBasico@caminoFinal(1000), 
  8839 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  i               2   62[BANK0 ] int 
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      void 
  8844 ;; Registers used:
  8845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8851 ;;      Params:         0       4       0       0       0       0       0       0       0
  8852 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8853 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8854 ;;      Totals:         1       6       0       0       0       0       0       0       0
  8855 ;;Total ram usage:        7 bytes
  8856 ;; Hardware stack levels used:    1
  8857 ;; Hardware stack levels required when called:    6
  8858 ;; This function calls:
  8859 ;;		_PID
  8860 ;;		_mover
  8861 ;;		_velocidadEstandar
  8862 ;; This function is called by:
  8863 ;;		_comportamientoBasico
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text33
  8868  00480A                     __ptext33:
  8869                           	opt callstack 0
  8870  00480A                     _regresarPuntoPartida:
  8871                           	opt callstack 23
  8872  00480A                     
  8873                           ;main.c: 657:     for (T_INT i = numMovimientos - 1; i >= 0; i--) {
  8874  00480A  0EFF               	movlw	255
  8875  00480C  0100               	movlb	0	; () banked
  8876  00480E  259C               	addwf	regresarPuntoPartida@numMovimientos& (0+255),w,b
  8877  004810  6F9E               	movwf	regresarPuntoPartida@i& (0+255),b
  8878  004812  0EFF               	movlw	255
  8879  004814  219D               	addwfc	(regresarPuntoPartida@numMovimientos+1)& (0+255),w,b
  8880  004816  6F9F               	movwf	(regresarPuntoPartida@i+1)& (0+255),b
  8881  004818  BF9F               	btfsc	(regresarPuntoPartida@i+1)& (0+255),7,b
  8882  00481A  EF13  F024         	goto	u11420
  8883  00481E  EF11  F024         	goto	u11421
  8884  004822                     u11421:
  8885  004822  EF15  F024         	goto	l10057
  8886  004826                     u11420:
  8887  004826  EF59  F024         	goto	l457
  8888  00482A                     l10057:
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;main.c: 659:         if (movimientos[i] == IZQUIERDA) {
  8892  00482A  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  8893  00482C  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  8894  00482E  6ED9               	movwf	fsr2l,c
  8895  004830  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  8896  004832  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  8897  004834  6EDA               	movwf	fsr2h,c
  8898  004836  0E02               	movlw	2
  8899  004838  18DE               	xorwf	postinc2,w,c
  8900  00483A  A4D8               	btfss	status,2,c
  8901  00483C  EF22  F024         	goto	u11431
  8902  004840  EF24  F024         	goto	u11430
  8903  004844                     u11431:
  8904  004844  EF2B  F024         	goto	l10063
  8905  004848                     u11430:
  8906  004848                     
  8907                           ; BSR set to: 0
  8908                           ;main.c: 660:             velocidadEstandar();
  8909  004848  ECDE  F029         	call	_velocidadEstandar	;wreg free
  8910  00484C                     
  8911                           ;main.c: 661:             mouse.curr_state = DERECHA;
  8912  00484C  0E03               	movlw	3
  8913  00484E  0100               	movlb	0	; () banked
  8914  004850  6FFD               	movwf	_mouse& (0+255),b
  8915                           
  8916                           ;main.c: 662:         } else if (movimientos[i] == DERECHA) {
  8917  004852  EF4C  F024         	goto	l10073
  8918  004856                     l10063:
  8919                           
  8920                           ; BSR set to: 0
  8921  004856  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  8922  004858  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  8923  00485A  6ED9               	movwf	fsr2l,c
  8924  00485C  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  8925  00485E  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  8926  004860  6EDA               	movwf	fsr2h,c
  8927  004862  0E03               	movlw	3
  8928  004864  18DE               	xorwf	postinc2,w,c
  8929  004866  A4D8               	btfss	status,2,c
  8930  004868  EF38  F024         	goto	u11441
  8931  00486C  EF3A  F024         	goto	u11440
  8932  004870                     u11441:
  8933  004870  EF41  F024         	goto	l10069
  8934  004874                     u11440:
  8935  004874                     
  8936                           ; BSR set to: 0
  8937                           ;main.c: 663:             velocidadEstandar();
  8938  004874  ECDE  F029         	call	_velocidadEstandar	;wreg free
  8939  004878                     
  8940                           ;main.c: 664:             mouse.curr_state = IZQUIERDA;
  8941  004878  0E02               	movlw	2
  8942  00487A  0100               	movlb	0	; () banked
  8943  00487C  6FFD               	movwf	_mouse& (0+255),b
  8944                           
  8945                           ;main.c: 665:         } else {
  8946  00487E  EF4C  F024         	goto	l10073
  8947  004882                     l10069:
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;main.c: 667:             PID();
  8951  004882  EC40  F016         	call	_PID	;wreg free
  8952  004886                     
  8953                           ;main.c: 668:             mouse.curr_state = movimientos[i];
  8954  004886  0100               	movlb	0	; () banked
  8955  004888  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  8956  00488A  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  8957  00488C  6ED9               	movwf	fsr2l,c
  8958  00488E  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  8959  004890  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  8960  004892  6EDA               	movwf	fsr2h,c
  8961  004894  50DF               	movf	indf2,w,c
  8962  004896  6FFD               	movwf	_mouse& (0+255),b
  8963  004898                     l10073:
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;main.c: 671:         mover();
  8967  004898  EC5A  F024         	call	_mover	;wreg free
  8968  00489C                     
  8969                           ;main.c: 672:     }
  8970  00489C  0100               	movlb	0	; () banked
  8971  00489E  079E               	decf	regresarPuntoPartida@i& (0+255),f,b
  8972  0048A0  A0D8               	btfss	status,0,c
  8973  0048A2  079F               	decf	(regresarPuntoPartida@i+1)& (0+255),f,b
  8974  0048A4                     
  8975                           ; BSR set to: 0
  8976  0048A4  BF9F               	btfsc	(regresarPuntoPartida@i+1)& (0+255),7,b
  8977  0048A6  EF59  F024         	goto	u11450
  8978  0048AA  EF57  F024         	goto	u11451
  8979  0048AE                     u11451:
  8980  0048AE  EF15  F024         	goto	l10057
  8981  0048B2                     u11450:
  8982  0048B2                     l457:
  8983                           
  8984                           ; BSR set to: 0
  8985  0048B2  0012               	return		;funcret
  8986  0048B4                     __end_of_regresarPuntoPartida:
  8987                           	opt callstack 0
  8988                           
  8989 ;; *************** function _regresarAlCruce *****************
  8990 ;; Defined at:
  8991 ;;		line 675 in file "main.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  8994 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  8995 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;  i               2   62[BANK0 ] int 
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  1    wreg      void 
  9000 ;; Registers used:
  9001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9007 ;;      Params:         0       4       0       0       0       0       0       0       0
  9008 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9009 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9010 ;;      Totals:         1       6       0       0       0       0       0       0       0
  9011 ;;Total ram usage:        7 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    6
  9014 ;; This function calls:
  9015 ;;		_PID
  9016 ;;		_mover
  9017 ;;		_velocidadEstandar
  9018 ;; This function is called by:
  9019 ;;		_comportamientoBasico
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           	psect	text34
  9024  004540                     __ptext34:
  9025                           	opt callstack 0
  9026  004540                     _regresarAlCruce:
  9027                           	opt callstack 23
  9028  004540                     
  9029                           ;main.c: 677:     for (T_INT i = numMovimientos - 1; i > 0; i--) {
  9030  004540  0EFF               	movlw	255
  9031  004542  0100               	movlb	0	; () banked
  9032  004544  259C               	addwf	regresarAlCruce@numMovimientos& (0+255),w,b
  9033  004546  6F9E               	movwf	regresarAlCruce@i& (0+255),b
  9034  004548  0EFF               	movlw	255
  9035  00454A  219D               	addwfc	(regresarAlCruce@numMovimientos+1)& (0+255),w,b
  9036  00454C  6F9F               	movwf	(regresarAlCruce@i+1)& (0+255),b
  9037  00454E  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  9038  004550  EFB4  F022         	goto	u11380
  9039  004554  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9040  004556  E106               	bnz	u11381
  9041  004558  059E               	decf	regresarAlCruce@i& (0+255),w,b
  9042  00455A  B0D8               	btfsc	status,0,c
  9043  00455C  EFB2  F022         	goto	u11381
  9044  004560  EFB4  F022         	goto	u11380
  9045  004564                     u11381:
  9046  004564  EFB6  F022         	goto	l10031
  9047  004568                     u11380:
  9048  004568  EF00  F023         	goto	l466
  9049  00456C                     l10031:
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;main.c: 681:         if (movimientos[i] == IZQUIERDA) {
  9053  00456C  519E               	movf	regresarAlCruce@i& (0+255),w,b
  9054  00456E  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  9055  004570  6ED9               	movwf	fsr2l,c
  9056  004572  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9057  004574  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  9058  004576  6EDA               	movwf	fsr2h,c
  9059  004578  0E02               	movlw	2
  9060  00457A  18DE               	xorwf	postinc2,w,c
  9061  00457C  A4D8               	btfss	status,2,c
  9062  00457E  EFC3  F022         	goto	u11391
  9063  004582  EFC5  F022         	goto	u11390
  9064  004586                     u11391:
  9065  004586  EFCC  F022         	goto	l10037
  9066  00458A                     u11390:
  9067  00458A                     
  9068                           ; BSR set to: 0
  9069                           ;main.c: 682:             velocidadEstandar();
  9070  00458A  ECDE  F029         	call	_velocidadEstandar	;wreg free
  9071  00458E                     
  9072                           ;main.c: 683:             mouse.curr_state = DERECHA;
  9073  00458E  0E03               	movlw	3
  9074  004590  0100               	movlb	0	; () banked
  9075  004592  6FFD               	movwf	_mouse& (0+255),b
  9076                           
  9077                           ;main.c: 684:         } else if (movimientos[i] == DERECHA) {
  9078  004594  EFED  F022         	goto	l10047
  9079  004598                     l10037:
  9080                           
  9081                           ; BSR set to: 0
  9082  004598  519E               	movf	regresarAlCruce@i& (0+255),w,b
  9083  00459A  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  9084  00459C  6ED9               	movwf	fsr2l,c
  9085  00459E  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9086  0045A0  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  9087  0045A2  6EDA               	movwf	fsr2h,c
  9088  0045A4  0E03               	movlw	3
  9089  0045A6  18DE               	xorwf	postinc2,w,c
  9090  0045A8  A4D8               	btfss	status,2,c
  9091  0045AA  EFD9  F022         	goto	u11401
  9092  0045AE  EFDB  F022         	goto	u11400
  9093  0045B2                     u11401:
  9094  0045B2  EFE2  F022         	goto	l10043
  9095  0045B6                     u11400:
  9096  0045B6                     
  9097                           ; BSR set to: 0
  9098                           ;main.c: 685:             velocidadEstandar();
  9099  0045B6  ECDE  F029         	call	_velocidadEstandar	;wreg free
  9100  0045BA                     
  9101                           ;main.c: 686:             mouse.curr_state = IZQUIERDA;
  9102  0045BA  0E02               	movlw	2
  9103  0045BC  0100               	movlb	0	; () banked
  9104  0045BE  6FFD               	movwf	_mouse& (0+255),b
  9105                           
  9106                           ;main.c: 687:         } else {
  9107  0045C0  EFED  F022         	goto	l10047
  9108  0045C4                     l10043:
  9109                           
  9110                           ; BSR set to: 0
  9111                           ;main.c: 689:             PID();
  9112  0045C4  EC40  F016         	call	_PID	;wreg free
  9113  0045C8                     
  9114                           ;main.c: 690:             mouse.curr_state = movimientos[i];
  9115  0045C8  0100               	movlb	0	; () banked
  9116  0045CA  519E               	movf	regresarAlCruce@i& (0+255),w,b
  9117  0045CC  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  9118  0045CE  6ED9               	movwf	fsr2l,c
  9119  0045D0  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9120  0045D2  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  9121  0045D4  6EDA               	movwf	fsr2h,c
  9122  0045D6  50DF               	movf	indf2,w,c
  9123  0045D8  6FFD               	movwf	_mouse& (0+255),b
  9124  0045DA                     l10047:
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;main.c: 693:         mover();
  9128  0045DA  EC5A  F024         	call	_mover	;wreg free
  9129  0045DE                     
  9130                           ;main.c: 694:     }
  9131  0045DE  0100               	movlb	0	; () banked
  9132  0045E0  079E               	decf	regresarAlCruce@i& (0+255),f,b
  9133  0045E2  A0D8               	btfss	status,0,c
  9134  0045E4  079F               	decf	(regresarAlCruce@i+1)& (0+255),f,b
  9135  0045E6                     
  9136                           ; BSR set to: 0
  9137  0045E6  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  9138  0045E8  EF00  F023         	goto	u11410
  9139  0045EC  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9140  0045EE  E106               	bnz	u11411
  9141  0045F0  059E               	decf	regresarAlCruce@i& (0+255),w,b
  9142  0045F2  B0D8               	btfsc	status,0,c
  9143  0045F4  EFFE  F022         	goto	u11411
  9144  0045F8  EF00  F023         	goto	u11410
  9145  0045FC                     u11411:
  9146  0045FC  EFB6  F022         	goto	l10031
  9147  004600                     u11410:
  9148  004600                     l466:
  9149                           
  9150                           ; BSR set to: 0
  9151  004600  0012               	return		;funcret
  9152  004602                     __end_of_regresarAlCruce:
  9153                           	opt callstack 0
  9154                           
  9155 ;; *************** function _recorrerCaminoEncontrado *****************
  9156 ;; Defined at:
  9157 ;;		line 697 in file "main.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  9160 ;;		 -> comportamientoBasico@caminoFinal(1000), 
  9161 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;  i               2   62[BANK0 ] int 
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  1    wreg      void 
  9166 ;; Registers used:
  9167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9173 ;;      Params:         0       4       0       0       0       0       0       0       0
  9174 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9175 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9176 ;;      Totals:         1       6       0       0       0       0       0       0       0
  9177 ;;Total ram usage:        7 bytes
  9178 ;; Hardware stack levels used:    1
  9179 ;; Hardware stack levels required when called:    6
  9180 ;; This function calls:
  9181 ;;		_PID
  9182 ;;		_mover
  9183 ;;		_velocidadEstandar
  9184 ;; This function is called by:
  9185 ;;		_comportamientoBasico
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189                           	psect	text35
  9190  0049E6                     __ptext35:
  9191                           	opt callstack 0
  9192  0049E6                     _recorrerCaminoEncontrado:
  9193                           	opt callstack 23
  9194  0049E6                     
  9195                           ;main.c: 699:     for (T_INT i = 0; i < numMovimientos; i++) {
  9196  0049E6  0E00               	movlw	0
  9197  0049E8  0100               	movlb	0	; () banked
  9198  0049EA  6F9F               	movwf	(recorrerCaminoEncontrado@i+1)& (0+255),b
  9199  0049EC  0E00               	movlw	0
  9200  0049EE  6F9E               	movwf	recorrerCaminoEncontrado@i& (0+255),b
  9201  0049F0  EF2C  F025         	goto	l10101
  9202  0049F4                     l10087:
  9203                           
  9204                           ; BSR set to: 0
  9205                           ;main.c: 701:         if (movimientos[i] == IZQUIERDA || movimientos[i] == DERECHA)
  9206  0049F4  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  9207  0049F6  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  9208  0049F8  6ED9               	movwf	fsr2l,c
  9209  0049FA  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  9210  0049FC  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  9211  0049FE  6EDA               	movwf	fsr2h,c
  9212  004A00  0E02               	movlw	2
  9213  004A02  18DE               	xorwf	postinc2,w,c
  9214  004A04  B4D8               	btfsc	status,2,c
  9215  004A06  EF07  F025         	goto	u11461
  9216  004A0A  EF09  F025         	goto	u11460
  9217  004A0E                     u11461:
  9218  004A0E  EF18  F025         	goto	l10091
  9219  004A12                     u11460:
  9220  004A12                     
  9221                           ; BSR set to: 0
  9222  004A12  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  9223  004A14  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  9224  004A16  6ED9               	movwf	fsr2l,c
  9225  004A18  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  9226  004A1A  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  9227  004A1C  6EDA               	movwf	fsr2h,c
  9228  004A1E  0E03               	movlw	3
  9229  004A20  18DE               	xorwf	postinc2,w,c
  9230  004A22  A4D8               	btfss	status,2,c
  9231  004A24  EF16  F025         	goto	u11471
  9232  004A28  EF18  F025         	goto	u11470
  9233  004A2C                     u11471:
  9234  004A2C  EF1C  F025         	goto	l10093
  9235  004A30                     u11470:
  9236  004A30                     l10091:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;main.c: 702:             velocidadEstandar();
  9240  004A30  ECDE  F029         	call	_velocidadEstandar	;wreg free
  9241  004A34  EF1E  F025         	goto	l10095
  9242  004A38                     l10093:
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;main.c: 705:             PID();
  9246  004A38  EC40  F016         	call	_PID	;wreg free
  9247  004A3C                     l10095:
  9248                           
  9249                           ;main.c: 707:         mouse.curr_state = movimientos[i];
  9250  004A3C  0100               	movlb	0	; () banked
  9251  004A3E  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  9252  004A40  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  9253  004A42  6ED9               	movwf	fsr2l,c
  9254  004A44  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  9255  004A46  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  9256  004A48  6EDA               	movwf	fsr2h,c
  9257  004A4A  50DF               	movf	indf2,w,c
  9258  004A4C  6FFD               	movwf	_mouse& (0+255),b
  9259  004A4E                     
  9260                           ; BSR set to: 0
  9261                           ;main.c: 708:         mover();
  9262  004A4E  EC5A  F024         	call	_mover	;wreg free
  9263  004A52                     
  9264                           ;main.c: 709:     }
  9265  004A52  0100               	movlb	0	; () banked
  9266  004A54  4B9E               	infsnz	recorrerCaminoEncontrado@i& (0+255),f,b
  9267  004A56  2B9F               	incf	(recorrerCaminoEncontrado@i+1)& (0+255),f,b
  9268  004A58                     l10101:
  9269                           
  9270                           ; BSR set to: 0
  9271  004A58  519C               	movf	recorrerCaminoEncontrado@numMovimientos& (0+255),w,b
  9272  004A5A  5D9E               	subwf	recorrerCaminoEncontrado@i& (0+255),w,b
  9273  004A5C  519D               	movf	(recorrerCaminoEncontrado@numMovimientos+1)& (0+255),w,b
  9274  004A5E  599F               	subwfb	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  9275  004A60  A0D8               	btfss	status,0,c
  9276  004A62  EF35  F025         	goto	u11481
  9277  004A66  EF37  F025         	goto	u11480
  9278  004A6A                     u11481:
  9279  004A6A  EFFA  F024         	goto	l10087
  9280  004A6E                     u11480:
  9281  004A6E                     
  9282                           ; BSR set to: 0
  9283  004A6E  0012               	return		;funcret
  9284  004A70                     __end_of_recorrerCaminoEncontrado:
  9285                           	opt callstack 0
  9286                           
  9287 ;; *************** function _mover *****************
  9288 ;; Defined at:
  9289 ;;		line 600 in file "main.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;		None
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;		None
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  1    wreg      void 
  9296 ;; Registers used:
  9297 ;;		wreg, status,2, status,0, cstack
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9303 ;;      Params:         0       0       0       0       0       0       0       0       0
  9304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9305 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9306 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9307 ;;Total ram usage:        2 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:    3
  9310 ;; This function calls:
  9311 ;;		_forzarAvanceRecto
  9312 ;; This function is called by:
  9313 ;;		_regresarPuntoPartida
  9314 ;;		_regresarAlCruce
  9315 ;;		_recorrerCaminoEncontrado
  9316 ;;		_probarGirosAuto
  9317 ;;		_probarPID
  9318 ;;		_probarCruceT
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           	psect	text36
  9323  0048B4                     __ptext36:
  9324                           	opt callstack 0
  9325  0048B4                     _mover:
  9326                           	opt callstack 25
  9327  0048B4                     
  9328                           ;main.c: 602:     switch (mouse.curr_state) {
  9329  0048B4  EF89  F024         	goto	l9499
  9330  0048B8                     l442:
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;main.c: 606:             LATB4 = 1;
  9334  0048B8  888A               	bsf	3978,4,c	;volatile
  9335                           
  9336                           ;main.c: 607:             LATB5 = 0;
  9337  0048BA  9A8A               	bcf	3978,5,c	;volatile
  9338                           
  9339                           ;main.c: 608:             LATB6 = 1;
  9340  0048BC  8C8A               	bsf	3978,6,c	;volatile
  9341                           
  9342                           ;main.c: 611:             if (!0)
  9343  0048BE  9E8A               	bcf	3978,7,c	;volatile
  9344  0048C0                     
  9345                           ; BSR set to: 0
  9346                           ;main.c: 612:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  9347  0048C0  0E48               	movlw	72
  9348  0048C2  6E08               	movwf	??_mover^0,c
  9349  0048C4  0E6C               	movlw	108
  9350  0048C6                     u11857:
  9351  0048C6  2EE8               	decfsz	wreg,f,c
  9352  0048C8  D7FE               	bra	u11857
  9353  0048CA  2E08               	decfsz	??_mover^0,f,c
  9354  0048CC  D7FC               	bra	u11857
  9355  0048CE  D000               	nop2	
  9356  0048D0  EFA7  F024         	goto	l448
  9357  0048D4                     l445:
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;main.c: 618:             LATB4 = 0;
  9361  0048D4  988A               	bcf	3978,4,c	;volatile
  9362                           
  9363                           ;main.c: 619:             LATB5 = 0;
  9364  0048D6  9A8A               	bcf	3978,5,c	;volatile
  9365                           
  9366                           ;main.c: 620:             LATB6 = 1;
  9367  0048D8  8C8A               	bsf	3978,6,c	;volatile
  9368                           
  9369                           ;main.c: 621:             LATB7 = 0;
  9370  0048DA  9E8A               	bcf	3978,7,c	;volatile
  9371  0048DC                     l9489:
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;main.c: 623:             _delay((unsigned long)((410)*(4000000/4000.0)));
  9375  0048DC  0E03               	movlw	3
  9376  0048DE  6E09               	movwf	(??_mover+1)^0,c
  9377  0048E0  0E15               	movlw	21
  9378  0048E2  6E08               	movwf	??_mover^0,c
  9379  0048E4  0E74               	movlw	116
  9380  0048E6                     u11867:
  9381  0048E6  2EE8               	decfsz	wreg,f,c
  9382  0048E8  D7FE               	bra	u11867
  9383  0048EA  2E08               	decfsz	??_mover^0,f,c
  9384  0048EC  D7FC               	bra	u11867
  9385  0048EE  2E09               	decfsz	(??_mover+1)^0,f,c
  9386  0048F0  D7FA               	bra	u11867
  9387  0048F2                     
  9388                           ;main.c: 625:             forzarAvanceRecto();
  9389  0048F2  ECF1  F029         	call	_forzarAvanceRecto	;wreg free
  9390                           
  9391                           ;main.c: 627:             break;
  9392  0048F6  EFA7  F024         	goto	l448
  9393  0048FA                     l446:
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;main.c: 631:             LATB4 = 1;
  9397  0048FA  888A               	bsf	3978,4,c	;volatile
  9398                           
  9399                           ;main.c: 632:             LATB5 = 0;
  9400  0048FC  9A8A               	bcf	3978,5,c	;volatile
  9401                           
  9402                           ;main.c: 633:             LATB6 = 0;
  9403  0048FE  9C8A               	bcf	3978,6,c	;volatile
  9404                           
  9405                           ;main.c: 634:             LATB7 = 0;
  9406  004900  9E8A               	bcf	3978,7,c	;volatile
  9407  004902  EF6E  F024         	goto	l9489
  9408  004906                     l447:
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;main.c: 644:             LATB4 = 0;
  9412  004906  988A               	bcf	3978,4,c	;volatile
  9413                           
  9414                           ;main.c: 645:             LATB5 = 0;
  9415  004908  9A8A               	bcf	3978,5,c	;volatile
  9416                           
  9417                           ;main.c: 646:             LATB6 = 0;
  9418  00490A  9C8A               	bcf	3978,6,c	;volatile
  9419                           
  9420                           ;main.c: 647:             LATB7 = 0;
  9421  00490C  9E8A               	bcf	3978,7,c	;volatile
  9422                           
  9423                           ;main.c: 649:             break;
  9424  00490E  EFA7  F024         	goto	l448
  9425  004912                     l9499:
  9426  004912  0100               	movlb	0	; () banked
  9427  004914  51FD               	movf	_mouse& (0+255),w,b
  9428  004916  6E08               	movwf	??_mover^0,c
  9429  004918  6A09               	clrf	(??_mover+1)^0,c
  9430                           
  9431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9432                           ; Switch size 1, requested type "simple"
  9433                           ; Number of cases is 1, Range of values is 0 to 0
  9434                           ; switch strategies available:
  9435                           ; Name         Instructions Cycles
  9436                           ; simple_byte            4     3 (average)
  9437                           ;	Chosen strategy is simple_byte
  9438  00491A  5009               	movf	(??_mover+1)^0,w,c
  9439  00491C  0A00               	xorlw	0	; case 0
  9440  00491E  B4D8               	btfsc	status,2,c
  9441  004920  EF94  F024         	goto	l10845
  9442  004924  EFA7  F024         	goto	l448
  9443  004928                     l10845:
  9444                           
  9445                           ; BSR set to: 0
  9446                           ; Switch size 1, requested type "simple"
  9447                           ; Number of cases is 4, Range of values is 1 to 4
  9448                           ; switch strategies available:
  9449                           ; Name         Instructions Cycles
  9450                           ; simple_byte           13     7 (average)
  9451                           ;	Chosen strategy is simple_byte
  9452  004928  5008               	movf	??_mover^0,w,c
  9453  00492A  0A01               	xorlw	1	; case 1
  9454  00492C  B4D8               	btfsc	status,2,c
  9455  00492E  EF5C  F024         	goto	l442
  9456  004932  0A03               	xorlw	3	; case 2
  9457  004934  B4D8               	btfsc	status,2,c
  9458  004936  EF6A  F024         	goto	l445
  9459  00493A  0A01               	xorlw	1	; case 3
  9460  00493C  B4D8               	btfsc	status,2,c
  9461  00493E  EF7D  F024         	goto	l446
  9462  004942  0A07               	xorlw	7	; case 4
  9463  004944  B4D8               	btfsc	status,2,c
  9464  004946  EF83  F024         	goto	l447
  9465  00494A  EFA7  F024         	goto	l448
  9466  00494E                     l448:
  9467  00494E  0012               	return		;funcret
  9468  004950                     __end_of_mover:
  9469                           	opt callstack 0
  9470                           
  9471 ;; *************** function _PID *****************
  9472 ;; Defined at:
  9473 ;;		line 1181 in file "main.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;		None
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;  error           2   56[BANK0 ] int 
  9478 ;;  dif             2   54[BANK0 ] int 
  9479 ;;  velocidadDer    2   50[BANK0 ] int 
  9480 ;;  velocidadIzq    2   46[BANK0 ] int 
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  1    wreg      void 
  9483 ;; Registers used:
  9484 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9490 ;;      Params:         0       0       0       0       0       0       0       0       0
  9491 ;;      Locals:         0      16       0       0       0       0       0       0       0
  9492 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9493 ;;      Totals:         0      18       0       0       0       0       0       0       0
  9494 ;;Total ram usage:       18 bytes
  9495 ;; Hardware stack levels used:    1
  9496 ;; Hardware stack levels required when called:    5
  9497 ;; This function calls:
  9498 ;;		___fladd
  9499 ;;		___flmul
  9500 ;;		___flsub
  9501 ;;		___fltol
  9502 ;;		___xxtofl
  9503 ;;		_pwmDuty
  9504 ;;		_roundf
  9505 ;; This function is called by:
  9506 ;;		_comportamientoBasico
  9507 ;;		_regresarPuntoPartida
  9508 ;;		_regresarAlCruce
  9509 ;;		_recorrerCaminoEncontrado
  9510 ;;		_probarPID
  9511 ;;		_probarCruceT
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           	psect	text37
  9516  002C80                     __ptext37:
  9517                           	opt callstack 0
  9518  002C80                     _PID:
  9519                           	opt callstack 23
  9520  002C80                     
  9521                           ;main.c: 1184:     T_INT error = 0;
  9522  002C80  0E00               	movlw	0
  9523  002C82  0100               	movlb	0	; () banked
  9524  002C84  6F99               	movwf	(PID@error+1)& (0+255),b
  9525  002C86  0E00               	movlw	0
  9526  002C88  6F98               	movwf	PID@error& (0+255),b
  9527  002C8A                     
  9528                           ; BSR set to: 0
  9529                           ;main.c: 1185:     static T_INT difAnt = 0;;main.c: 1188:     dif = sensorIzquierda - se
      +                          nsorDerecha;
  9530  002C8A  C0F9  F048         	movff	_sensorDerecha,___flsub@a
  9531  002C8E  C0FA  F049         	movff	_sensorDerecha+1,___flsub@a+1
  9532  002C92  C0FB  F04A         	movff	_sensorDerecha+2,___flsub@a+2
  9533  002C96  C0FC  F04B         	movff	_sensorDerecha+3,___flsub@a+3
  9534  002C9A  C055  F044         	movff	_sensorIzquierda,___flsub@b
  9535  002C9E  C056  F045         	movff	_sensorIzquierda+1,___flsub@b+1
  9536  002CA2  C057  F046         	movff	_sensorIzquierda+2,___flsub@b+2
  9537  002CA6  C058  F047         	movff	_sensorIzquierda+3,___flsub@b+3
  9538  002CAA  EC67  F028         	call	___flsub	;wreg free
  9539  002CAE  C044  F072         	movff	?___flsub,___fltol@f1
  9540  002CB2  C045  F073         	movff	?___flsub+1,___fltol@f1+1
  9541  002CB6  C046  F074         	movff	?___flsub+2,___fltol@f1+2
  9542  002CBA  C047  F075         	movff	?___flsub+3,___fltol@f1+3
  9543  002CBE  EC22  F01F         	call	___fltol	;wreg free
  9544  002CC2  C072  F096         	movff	?___fltol,PID@dif
  9545  002CC6  C073  F097         	movff	?___fltol+1,PID@dif+1
  9546  002CCA                     
  9547                           ;main.c: 1190:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  9548  002CCA  0ECD               	movlw	205
  9549  002CCC  6E1F               	movwf	___flmul@a^0,c
  9550  002CCE  0ECC               	movlw	204
  9551  002CD0  6E20               	movwf	(___flmul@a+1)^0,c
  9552  002CD2  0ECC               	movlw	204
  9553  002CD4  6E21               	movwf	(___flmul@a+2)^0,c
  9554  002CD6  0E3D               	movlw	61
  9555  002CD8  6E22               	movwf	(___flmul@a+3)^0,c
  9556  002CDA  0100               	movlb	0	; () banked
  9557  002CDC  5196               	movf	PID@dif& (0+255),w,b
  9558  002CDE  0101               	movlb	1	; () banked
  9559  002CE0  5D30               	subwf	PID@difAnt& (0+255),w,b
  9560  002CE2  0100               	movlb	0	; () banked
  9561  002CE4  6F88               	movwf	??_PID& (0+255),b
  9562  002CE6  5197               	movf	(PID@dif+1)& (0+255),w,b
  9563  002CE8  0101               	movlb	1	; () banked
  9564  002CEA  5931               	subwfb	(PID@difAnt+1)& (0+255),w,b
  9565  002CEC  0100               	movlb	0	; () banked
  9566  002CEE  6F89               	movwf	(??_PID+1)& (0+255),b
  9567  002CF0  C088  F00D         	movff	??_PID,___xxtofl@val
  9568  002CF4  C089  F00E         	movff	??_PID+1,___xxtofl@val+1
  9569  002CF8  0E00               	movlw	0
  9570  002CFA  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  9571  002CFC  0EFF               	movlw	-1
  9572  002CFE  6E0F               	movwf	(___xxtofl@val+2)^0,c
  9573  002D00  6E10               	movwf	(___xxtofl@val+3)^0,c
  9574  002D02  0E01               	movlw	1
  9575  002D04  EC52  F019         	call	___xxtofl
  9576  002D08  C00D  F01B         	movff	?___xxtofl,___flmul@b
  9577  002D0C  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  9578  002D10  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  9579  002D14  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  9580  002D18  EC04  F00D         	call	___flmul	;wreg free
  9581  002D1C  C01B  F038         	movff	?___flmul,___fladd@a
  9582  002D20  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  9583  002D24  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  9584  002D28  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  9585  002D2C  0E66               	movlw	102
  9586  002D2E  6E1F               	movwf	___flmul@a^0,c
  9587  002D30  0E66               	movlw	102
  9588  002D32  6E20               	movwf	(___flmul@a+1)^0,c
  9589  002D34  0E66               	movlw	102
  9590  002D36  6E21               	movwf	(___flmul@a+2)^0,c
  9591  002D38  0E3F               	movlw	63
  9592  002D3A  6E22               	movwf	(___flmul@a+3)^0,c
  9593  002D3C  C096  F00D         	movff	PID@dif,___xxtofl@val
  9594  002D40  C097  F00E         	movff	PID@dif+1,___xxtofl@val+1
  9595  002D44  0E00               	movlw	0
  9596  002D46  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  9597  002D48  0EFF               	movlw	-1
  9598  002D4A  6E0F               	movwf	(___xxtofl@val+2)^0,c
  9599  002D4C  6E10               	movwf	(___xxtofl@val+3)^0,c
  9600  002D4E  0E01               	movlw	1
  9601  002D50  EC52  F019         	call	___xxtofl
  9602  002D54  C00D  F01B         	movff	?___xxtofl,___flmul@b
  9603  002D58  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  9604  002D5C  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  9605  002D60  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  9606  002D64  EC04  F00D         	call	___flmul	;wreg free
  9607  002D68  C01B  F034         	movff	?___flmul,___fladd@b
  9608  002D6C  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  9609  002D70  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  9610  002D74  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  9611  002D78  EC87  F008         	call	___fladd	;wreg free
  9612  002D7C  C034  F08A         	movff	?___fladd,_PID$1817
  9613  002D80  C035  F08B         	movff	?___fladd+1,_PID$1817+1
  9614  002D84  C036  F08C         	movff	?___fladd+2,_PID$1817+2
  9615  002D88  C037  F08D         	movff	?___fladd+3,_PID$1817+3
  9616  002D8C                     
  9617                           ;main.c: 1190:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  9618  002D8C  C08A  F04C         	movff	_PID$1817,roundf@x
  9619  002D90  C08B  F04D         	movff	_PID$1817+1,roundf@x+1
  9620  002D94  C08C  F04E         	movff	_PID$1817+2,roundf@x+2
  9621  002D98  C08D  F04F         	movff	_PID$1817+3,roundf@x+3
  9622  002D9C  EC28  F011         	call	_roundf	;wreg free
  9623  002DA0  C04C  F072         	movff	?_roundf,___fltol@f1
  9624  002DA4  C04D  F073         	movff	?_roundf+1,___fltol@f1+1
  9625  002DA8  C04E  F074         	movff	?_roundf+2,___fltol@f1+2
  9626  002DAC  C04F  F075         	movff	?_roundf+3,___fltol@f1+3
  9627  002DB0  EC22  F01F         	call	___fltol	;wreg free
  9628  002DB4  C072  F098         	movff	?___fltol,PID@error
  9629  002DB8  C073  F099         	movff	?___fltol+1,PID@error+1
  9630  002DBC                     
  9631                           ;main.c: 1192:     difAnt = dif;
  9632  002DBC  C096  F130         	movff	PID@dif,PID@difAnt
  9633  002DC0  C097  F131         	movff	PID@dif+1,PID@difAnt+1
  9634  002DC4                     
  9635                           ;main.c: 1194:     T_INT velocidadIzquierda = ((100 - error)<(0)?(0):((100 - error)>(100
      +                          )?(100):(100 - error)));
  9636  002DC4  0E64               	movlw	100
  9637  002DC6  0100               	movlb	0	; () banked
  9638  002DC8  6F88               	movwf	??_PID& (0+255),b
  9639  002DCA  0E00               	movlw	0
  9640  002DCC  6F89               	movwf	(??_PID+1)& (0+255),b
  9641  002DCE  5198               	movf	PID@error& (0+255),w,b
  9642  002DD0  5D88               	subwf	??_PID& (0+255),w,b
  9643  002DD2  5199               	movf	(PID@error+1)& (0+255),w,b
  9644  002DD4  5989               	subwfb	(??_PID+1)& (0+255),w,b
  9645  002DD6  0B80               	andlw	128
  9646  002DD8  A4D8               	btfss	status,2,c
  9647  002DDA  EFF1  F016         	goto	u10951
  9648  002DDE  EFF3  F016         	goto	u10950
  9649  002DE2                     u10951:
  9650  002DE2  EF1D  F017         	goto	l9547
  9651  002DE6                     u10950:
  9652  002DE6                     
  9653                           ; BSR set to: 0
  9654  002DE6  0E64               	movlw	100
  9655  002DE8  6F88               	movwf	??_PID& (0+255),b
  9656  002DEA  0E00               	movlw	0
  9657  002DEC  6F89               	movwf	(??_PID+1)& (0+255),b
  9658  002DEE  5198               	movf	PID@error& (0+255),w,b
  9659  002DF0  5F88               	subwf	??_PID& (0+255),f,b
  9660  002DF2  5199               	movf	(PID@error+1)& (0+255),w,b
  9661  002DF4  5B89               	subwfb	(??_PID+1)& (0+255),f,b
  9662  002DF6  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  9663  002DF8  EF09  F017         	goto	u10960
  9664  002DFC  5189               	movf	(??_PID+1)& (0+255),w,b
  9665  002DFE  E107               	bnz	u10961
  9666  002E00  0E65               	movlw	101
  9667  002E02  5D88               	subwf	??_PID& (0+255),w,b
  9668  002E04  B0D8               	btfsc	status,0,c
  9669  002E06  EF07  F017         	goto	u10961
  9670  002E0A  EF09  F017         	goto	u10960
  9671  002E0E                     u10961:
  9672  002E0E  EF13  F017         	goto	l9543
  9673  002E12                     u10960:
  9674  002E12                     
  9675                           ; BSR set to: 0
  9676  002E12  5198               	movf	PID@error& (0+255),w,b
  9677  002E14  0864               	sublw	100
  9678  002E16  6F90               	movwf	_PID$747& (0+255),b
  9679  002E18  5199               	movf	(PID@error+1)& (0+255),w,b
  9680  002E1A  A0D8               	btfss	status,0,c
  9681  002E1C  2AE8               	incf	wreg,f,c
  9682  002E1E  0800               	sublw	0
  9683  002E20  6F91               	movwf	(_PID$747+1)& (0+255),b
  9684  002E22  EF17  F017         	goto	l9545
  9685  002E26                     l9543:
  9686                           
  9687                           ; BSR set to: 0
  9688  002E26  0E00               	movlw	0
  9689  002E28  6F91               	movwf	(_PID$747+1)& (0+255),b
  9690  002E2A  0E64               	movlw	100
  9691  002E2C  6F90               	movwf	_PID$747& (0+255),b
  9692  002E2E                     l9545:
  9693                           
  9694                           ; BSR set to: 0
  9695  002E2E  C090  F08E         	movff	_PID$747,PID@velocidadIzquierda
  9696  002E32  C091  F08F         	movff	_PID$747+1,PID@velocidadIzquierda+1
  9697  002E36  EF21  F017         	goto	l9549
  9698  002E3A                     l9547:
  9699                           
  9700                           ; BSR set to: 0
  9701  002E3A  0E00               	movlw	0
  9702  002E3C  6F8F               	movwf	(PID@velocidadIzquierda+1)& (0+255),b
  9703  002E3E  0E00               	movlw	0
  9704  002E40  6F8E               	movwf	PID@velocidadIzquierda& (0+255),b
  9705  002E42                     l9549:
  9706                           
  9707                           ; BSR set to: 0
  9708                           ;main.c: 1195:     T_INT velocidadDerecha = ((100 + error)<(0)?(0):((100 + error)>(100)?
      +                          (100):(100 + error)));
  9709  002E42  0E64               	movlw	100
  9710  002E44  2598               	addwf	PID@error& (0+255),w,b
  9711  002E46  0E00               	movlw	0
  9712  002E48  2199               	addwfc	(PID@error+1)& (0+255),w,b
  9713  002E4A  0B80               	andlw	128
  9714  002E4C  A4D8               	btfss	status,2,c
  9715  002E4E  EF2B  F017         	goto	u10971
  9716  002E52  EF2D  F017         	goto	u10970
  9717  002E56                     u10971:
  9718  002E56  EF53  F017         	goto	l9559
  9719  002E5A                     u10970:
  9720  002E5A                     
  9721                           ; BSR set to: 0
  9722  002E5A  0E64               	movlw	100
  9723  002E5C  2598               	addwf	PID@error& (0+255),w,b
  9724  002E5E  6F88               	movwf	??_PID& (0+255),b
  9725  002E60  0E00               	movlw	0
  9726  002E62  2199               	addwfc	(PID@error+1)& (0+255),w,b
  9727  002E64  6F89               	movwf	(??_PID+1)& (0+255),b
  9728  002E66  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  9729  002E68  EF41  F017         	goto	u10980
  9730  002E6C  5189               	movf	(??_PID+1)& (0+255),w,b
  9731  002E6E  E107               	bnz	u10981
  9732  002E70  0E65               	movlw	101
  9733  002E72  5D88               	subwf	??_PID& (0+255),w,b
  9734  002E74  B0D8               	btfsc	status,0,c
  9735  002E76  EF3F  F017         	goto	u10981
  9736  002E7A  EF41  F017         	goto	u10980
  9737  002E7E                     u10981:
  9738  002E7E  EF49  F017         	goto	l9555
  9739  002E82                     u10980:
  9740  002E82                     
  9741                           ; BSR set to: 0
  9742  002E82  0E64               	movlw	100
  9743  002E84  2598               	addwf	PID@error& (0+255),w,b
  9744  002E86  6F94               	movwf	_PID$749& (0+255),b
  9745  002E88  0E00               	movlw	0
  9746  002E8A  2199               	addwfc	(PID@error+1)& (0+255),w,b
  9747  002E8C  6F95               	movwf	(_PID$749+1)& (0+255),b
  9748  002E8E  EF4D  F017         	goto	l9557
  9749  002E92                     l9555:
  9750                           
  9751                           ; BSR set to: 0
  9752  002E92  0E00               	movlw	0
  9753  002E94  6F95               	movwf	(_PID$749+1)& (0+255),b
  9754  002E96  0E64               	movlw	100
  9755  002E98  6F94               	movwf	_PID$749& (0+255),b
  9756  002E9A                     l9557:
  9757                           
  9758                           ; BSR set to: 0
  9759  002E9A  C094  F092         	movff	_PID$749,PID@velocidadDerecha
  9760  002E9E  C095  F093         	movff	_PID$749+1,PID@velocidadDerecha+1
  9761  002EA2  EF57  F017         	goto	l9561
  9762  002EA6                     l9559:
  9763                           
  9764                           ; BSR set to: 0
  9765  002EA6  0E00               	movlw	0
  9766  002EA8  6F93               	movwf	(PID@velocidadDerecha+1)& (0+255),b
  9767  002EAA  0E00               	movlw	0
  9768  002EAC  6F92               	movwf	PID@velocidadDerecha& (0+255),b
  9769  002EAE                     l9561:
  9770                           
  9771                           ; BSR set to: 0
  9772                           ;main.c: 1197:     pwmDuty(velocidadIzquierda, 1);
  9773  002EAE  C08E  F07C         	movff	PID@velocidadIzquierda,pwmDuty@cicloTrabajo
  9774  002EB2  C08F  F07D         	movff	PID@velocidadIzquierda+1,pwmDuty@cicloTrabajo+1
  9775  002EB6  0E01               	movlw	1
  9776  002EB8  6F7E               	movwf	pwmDuty@channel& (0+255),b
  9777  002EBA  EC74  F018         	call	_pwmDuty	;wreg free
  9778  002EBE                     
  9779                           ;main.c: 1198:     pwmDuty(velocidadDerecha, 2);
  9780  002EBE  C092  F07C         	movff	PID@velocidadDerecha,pwmDuty@cicloTrabajo
  9781  002EC2  C093  F07D         	movff	PID@velocidadDerecha+1,pwmDuty@cicloTrabajo+1
  9782  002EC6  0E02               	movlw	2
  9783  002EC8  0100               	movlb	0	; () banked
  9784  002ECA  6F7E               	movwf	pwmDuty@channel& (0+255),b
  9785  002ECC  EC74  F018         	call	_pwmDuty	;wreg free
  9786  002ED0  0012               	return		;funcret
  9787  002ED2                     __end_of_PID:
  9788                           	opt callstack 0
  9789                           
  9790 ;; *************** function _roundf *****************
  9791 ;; Defined at:
  9792 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;  x               4   75[COMRAM] float 
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;  y               4   14[BANK0 ] float 
  9797 ;;  u               4   10[BANK0 ] struct .
  9798 ;;  e               2    4[BANK0 ] int 
  9799 ;; Return value:  Size  Location     Type
  9800 ;;                  4   75[COMRAM] float 
  9801 ;; Registers used:
  9802 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9803 ;; Tracked objects:
  9804 ;;		On entry : 0/0
  9805 ;;		On exit  : 0/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9808 ;;      Params:         4       0       0       0       0       0       0       0       0
  9809 ;;      Locals:         0      18       0       0       0       0       0       0       0
  9810 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9811 ;;      Totals:         8      18       0       0       0       0       0       0       0
  9812 ;;Total ram usage:       26 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; Hardware stack levels required when called:    4
  9815 ;; This function calls:
  9816 ;;		___fladd
  9817 ;;		___flge
  9818 ;;		___flmul
  9819 ;;		___flneg
  9820 ;;		___flsub
  9821 ;; This function is called by:
  9822 ;;		_PID
  9823 ;; This function uses a non-reentrant model
  9824 ;;
  9825                           
  9826                           	psect	text38
  9827  002250                     __ptext38:
  9828                           	opt callstack 0
  9829  002250                     _roundf:
  9830                           	opt callstack 23
  9831  002250  C100  F06A         	movff	roundf@F525,roundf@u
  9832  002254  C101  F06B         	movff	roundf@F525+1,roundf@u+1
  9833  002258  C102  F06C         	movff	roundf@F525+2,roundf@u+2
  9834  00225C  C103  F06D         	movff	roundf@F525+3,roundf@u+3
  9835  002260  C04C  F06A         	movff	roundf@x,roundf@u
  9836  002264  C04D  F06B         	movff	roundf@x+1,roundf@u+1
  9837  002268  C04E  F06C         	movff	roundf@x+2,roundf@u+2
  9838  00226C  C04F  F06D         	movff	roundf@x+3,roundf@u+3
  9839  002270  C06A  F050         	movff	roundf@u,??_roundf
  9840  002274  C06B  F051         	movff	roundf@u+1,??_roundf+1
  9841  002278  C06C  F052         	movff	roundf@u+2,??_roundf+2
  9842  00227C  C06D  F053         	movff	roundf@u+3,??_roundf+3
  9843  002280  0E18               	movlw	24
  9844  002282  EF48  F011         	goto	u10540
  9845  002286                     u10545:
  9846  002286  90D8               	bcf	status,0,c
  9847  002288  3253               	rrcf	(??_roundf+3)^0,f,c
  9848  00228A  3252               	rrcf	(??_roundf+2)^0,f,c
  9849  00228C  3251               	rrcf	(??_roundf+1)^0,f,c
  9850  00228E  3250               	rrcf	??_roundf^0,f,c
  9851  002290                     u10540:
  9852  002290  2EE8               	decfsz	wreg,f,c
  9853  002292  EF43  F011         	goto	u10545
  9854  002296  5050               	movf	??_roundf^0,w,c
  9855  002298  0100               	movlb	0	; () banked
  9856  00229A  6F64               	movwf	roundf@e& (0+255),b
  9857  00229C  6B65               	clrf	(roundf@e+1)& (0+255),b
  9858  00229E  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  9859  0022A0  EF5B  F011         	goto	u10551
  9860  0022A4  5165               	movf	(roundf@e+1)& (0+255),w,b
  9861  0022A6  E109               	bnz	u10550
  9862  0022A8  0E96               	movlw	150
  9863  0022AA  5D64               	subwf	roundf@e& (0+255),w,b
  9864  0022AC  A0D8               	btfss	status,0,c
  9865  0022AE  EF5B  F011         	goto	u10551
  9866  0022B2  EF5D  F011         	goto	u10550
  9867  0022B6                     u10551:
  9868  0022B6  EF67  F011         	goto	l9299
  9869  0022BA                     u10550:
  9870  0022BA                     
  9871                           ; BSR set to: 0
  9872  0022BA  C04C  F04C         	movff	roundf@x,?_roundf
  9873  0022BE  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  9874  0022C2  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  9875  0022C6  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  9876  0022CA  EF00  F013         	goto	l1720
  9877  0022CE                     l9299:
  9878                           
  9879                           ; BSR set to: 0
  9880  0022CE  C06A  F050         	movff	roundf@u,??_roundf
  9881  0022D2  C06B  F051         	movff	roundf@u+1,??_roundf+1
  9882  0022D6  C06C  F052         	movff	roundf@u+2,??_roundf+2
  9883  0022DA  C06D  F053         	movff	roundf@u+3,??_roundf+3
  9884  0022DE  0E20               	movlw	32
  9885  0022E0  EF77  F011         	goto	u10560
  9886  0022E4                     u10565:
  9887  0022E4  90D8               	bcf	status,0,c
  9888  0022E6  3253               	rrcf	(??_roundf+3)^0,f,c
  9889  0022E8  3252               	rrcf	(??_roundf+2)^0,f,c
  9890  0022EA  3251               	rrcf	(??_roundf+1)^0,f,c
  9891  0022EC  3250               	rrcf	??_roundf^0,f,c
  9892  0022EE                     u10560:
  9893  0022EE  2EE8               	decfsz	wreg,f,c
  9894  0022F0  EF72  F011         	goto	u10565
  9895  0022F4  5050               	movf	??_roundf^0,w,c
  9896  0022F6  1051               	iorwf	(??_roundf+1)^0,w,c
  9897  0022F8  1052               	iorwf	(??_roundf+2)^0,w,c
  9898  0022FA  1053               	iorwf	(??_roundf+3)^0,w,c
  9899  0022FC  B4D8               	btfsc	status,2,c
  9900  0022FE  EF83  F011         	goto	u10571
  9901  002302  EF85  F011         	goto	u10570
  9902  002306                     u10571:
  9903  002306  EF97  F011         	goto	l9303
  9904  00230A                     u10570:
  9905  00230A                     
  9906                           ; BSR set to: 0
  9907  00230A  C04C  F006         	movff	roundf@x,___flneg@f1
  9908  00230E  C04D  F007         	movff	roundf@x+1,___flneg@f1+1
  9909  002312  C04E  F008         	movff	roundf@x+2,___flneg@f1+2
  9910  002316  C04F  F009         	movff	roundf@x+3,___flneg@f1+3
  9911  00231A  EC6A  F029         	call	___flneg	;wreg free
  9912  00231E  C006  F04C         	movff	?___flneg,roundf@x
  9913  002322  C007  F04D         	movff	?___flneg+1,roundf@x+1
  9914  002326  C008  F04E         	movff	?___flneg+2,roundf@x+2
  9915  00232A  C009  F04F         	movff	?___flneg+3,roundf@x+3
  9916  00232E                     l9303:
  9917  00232E  0100               	movlb	0	; () banked
  9918  002330  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  9919  002332  EFA6  F011         	goto	u10580
  9920  002336  5165               	movf	(roundf@e+1)& (0+255),w,b
  9921  002338  E107               	bnz	u10581
  9922  00233A  0E7E               	movlw	126
  9923  00233C  5D64               	subwf	roundf@e& (0+255),w,b
  9924  00233E  B0D8               	btfsc	status,0,c
  9925  002340  EFA4  F011         	goto	u10581
  9926  002344  EFA6  F011         	goto	u10580
  9927  002348                     u10581:
  9928  002348  EFC2  F011         	goto	l9309
  9929  00234C                     u10580:
  9930  00234C                     
  9931                           ; BSR set to: 0
  9932  00234C  C06A  F01B         	movff	roundf@u,___flmul@b
  9933  002350  C06B  F01C         	movff	roundf@u+1,___flmul@b+1
  9934  002354  C06C  F01D         	movff	roundf@u+2,___flmul@b+2
  9935  002358  C06D  F01E         	movff	roundf@u+3,___flmul@b+3
  9936  00235C  0E00               	movlw	0
  9937  00235E  6E1F               	movwf	___flmul@a^0,c
  9938  002360  0E00               	movlw	0
  9939  002362  6E20               	movwf	(___flmul@a+1)^0,c
  9940  002364  0E00               	movlw	0
  9941  002366  6E21               	movwf	(___flmul@a+2)^0,c
  9942  002368  0E00               	movlw	0
  9943  00236A  6E22               	movwf	(___flmul@a+3)^0,c
  9944  00236C  EC04  F00D         	call	___flmul	;wreg free
  9945  002370  C01B  F04C         	movff	?___flmul,?_roundf
  9946  002374  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  9947  002378  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  9948  00237C  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  9949  002380  EF00  F013         	goto	l1720
  9950  002384                     l9309:
  9951                           
  9952                           ; BSR set to: 0
  9953  002384  0E00               	movlw	0
  9954  002386  6E38               	movwf	___fladd@a^0,c
  9955  002388  0E00               	movlw	0
  9956  00238A  6E39               	movwf	(___fladd@a+1)^0,c
  9957  00238C  0E00               	movlw	0
  9958  00238E  6E3A               	movwf	(___fladd@a+2)^0,c
  9959  002390  0E4B               	movlw	75
  9960  002392  6E3B               	movwf	(___fladd@a+3)^0,c
  9961  002394  C04C  F034         	movff	roundf@x,___fladd@b
  9962  002398  C04D  F035         	movff	roundf@x+1,___fladd@b+1
  9963  00239C  C04E  F036         	movff	roundf@x+2,___fladd@b+2
  9964  0023A0  C04F  F037         	movff	roundf@x+3,___fladd@b+3
  9965  0023A4  EC87  F008         	call	___fladd	;wreg free
  9966  0023A8  C034  F066         	movff	?___fladd,_roundf$1818
  9967  0023AC  C035  F067         	movff	?___fladd+1,_roundf$1818+1
  9968  0023B0  C036  F068         	movff	?___fladd+2,_roundf$1818+2
  9969  0023B4  C037  F069         	movff	?___fladd+3,_roundf$1818+3
  9970  0023B8  0E00               	movlw	0
  9971  0023BA  6E38               	movwf	___fladd@a^0,c
  9972  0023BC  0E00               	movlw	0
  9973  0023BE  6E39               	movwf	(___fladd@a+1)^0,c
  9974  0023C0  0E00               	movlw	0
  9975  0023C2  6E3A               	movwf	(___fladd@a+2)^0,c
  9976  0023C4  0ECB               	movlw	203
  9977  0023C6  6E3B               	movwf	(___fladd@a+3)^0,c
  9978  0023C8  C066  F034         	movff	_roundf$1818,___fladd@b
  9979  0023CC  C067  F035         	movff	_roundf$1818+1,___fladd@b+1
  9980  0023D0  C068  F036         	movff	_roundf$1818+2,___fladd@b+2
  9981  0023D4  C069  F037         	movff	_roundf$1818+3,___fladd@b+3
  9982  0023D8  EC87  F008         	call	___fladd	;wreg free
  9983  0023DC  C034  F060         	movff	?___fladd,_roundf$1819
  9984  0023E0  C035  F061         	movff	?___fladd+1,_roundf$1819+1
  9985  0023E4  C036  F062         	movff	?___fladd+2,_roundf$1819+2
  9986  0023E8  C037  F063         	movff	?___fladd+3,_roundf$1819+3
  9987  0023EC  C060  F044         	movff	_roundf$1819,___flsub@b
  9988  0023F0  C061  F045         	movff	_roundf$1819+1,___flsub@b+1
  9989  0023F4  C062  F046         	movff	_roundf$1819+2,___flsub@b+2
  9990  0023F8  C063  F047         	movff	_roundf$1819+3,___flsub@b+3
  9991  0023FC  C04C  F048         	movff	roundf@x,___flsub@a
  9992  002400  C04D  F049         	movff	roundf@x+1,___flsub@a+1
  9993  002404  C04E  F04A         	movff	roundf@x+2,___flsub@a+2
  9994  002408  C04F  F04B         	movff	roundf@x+3,___flsub@a+3
  9995  00240C  EC67  F028         	call	___flsub	;wreg free
  9996  002410  C044  F06E         	movff	?___flsub,roundf@y
  9997  002414  C045  F06F         	movff	?___flsub+1,roundf@y+1
  9998  002418  C046  F070         	movff	?___flsub+2,roundf@y+2
  9999  00241C  C047  F071         	movff	?___flsub+3,roundf@y+3
 10000  002420  0E00               	movlw	0
 10001  002422  6E34               	movwf	___flge@ff1^0,c
 10002  002424  0E00               	movlw	0
 10003  002426  6E35               	movwf	(___flge@ff1+1)^0,c
 10004  002428  0E00               	movlw	0
 10005  00242A  6E36               	movwf	(___flge@ff1+2)^0,c
 10006  00242C  0E3F               	movlw	63
 10007  00242E  6E37               	movwf	(___flge@ff1+3)^0,c
 10008  002430  C06E  F038         	movff	roundf@y,___flge@ff2
 10009  002434  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
 10010  002438  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
 10011  00243C  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
 10012  002440  ECA6  F01F         	call	___flge	;wreg free
 10013  002444  B0D8               	btfsc	status,0,c
 10014  002446  EF27  F012         	goto	u10591
 10015  00244A  EF29  F012         	goto	u10590
 10016  00244E                     u10591:
 10017  00244E  EF5F  F012         	goto	l9313
 10018  002452                     u10590:
 10019  002452  C04C  F038         	movff	roundf@x,___fladd@a
 10020  002456  C04D  F039         	movff	roundf@x+1,___fladd@a+1
 10021  00245A  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
 10022  00245E  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
 10023  002462  C06E  F034         	movff	roundf@y,___fladd@b
 10024  002466  C06F  F035         	movff	roundf@y+1,___fladd@b+1
 10025  00246A  C070  F036         	movff	roundf@y+2,___fladd@b+2
 10026  00246E  C071  F037         	movff	roundf@y+3,___fladd@b+3
 10027  002472  EC87  F008         	call	___fladd	;wreg free
 10028  002476  C034  F066         	movff	?___fladd,_roundf$1818
 10029  00247A  C035  F067         	movff	?___fladd+1,_roundf$1818+1
 10030  00247E  C036  F068         	movff	?___fladd+2,_roundf$1818+2
 10031  002482  C037  F069         	movff	?___fladd+3,_roundf$1818+3
 10032  002486  C066  F034         	movff	_roundf$1818,___fladd@b
 10033  00248A  C067  F035         	movff	_roundf$1818+1,___fladd@b+1
 10034  00248E  C068  F036         	movff	_roundf$1818+2,___fladd@b+2
 10035  002492  C069  F037         	movff	_roundf$1818+3,___fladd@b+3
 10036  002496  0E00               	movlw	0
 10037  002498  6E38               	movwf	___fladd@a^0,c
 10038  00249A  0E00               	movlw	0
 10039  00249C  6E39               	movwf	(___fladd@a+1)^0,c
 10040  00249E  0E80               	movlw	128
 10041  0024A0  6E3A               	movwf	(___fladd@a+2)^0,c
 10042  0024A2  0EBF               	movlw	191
 10043  0024A4  6E3B               	movwf	(___fladd@a+3)^0,c
 10044  0024A6  EC87  F008         	call	___fladd	;wreg free
 10045  0024AA  C034  F06E         	movff	?___fladd,roundf@y
 10046  0024AE  C035  F06F         	movff	?___fladd+1,roundf@y+1
 10047  0024B2  C036  F070         	movff	?___fladd+2,roundf@y+2
 10048  0024B6  C037  F071         	movff	?___fladd+3,roundf@y+3
 10049  0024BA  EFC8  F012         	goto	l9319
 10050  0024BE                     l9313:
 10051  0024BE  0E00               	movlw	0
 10052  0024C0  6E34               	movwf	___flge@ff1^0,c
 10053  0024C2  0E00               	movlw	0
 10054  0024C4  6E35               	movwf	(___flge@ff1+1)^0,c
 10055  0024C6  0E00               	movlw	0
 10056  0024C8  6E36               	movwf	(___flge@ff1+2)^0,c
 10057  0024CA  0EBF               	movlw	191
 10058  0024CC  6E37               	movwf	(___flge@ff1+3)^0,c
 10059  0024CE  C06E  F038         	movff	roundf@y,___flge@ff2
 10060  0024D2  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
 10061  0024D6  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
 10062  0024DA  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
 10063  0024DE  ECA6  F01F         	call	___flge	;wreg free
 10064  0024E2  A0D8               	btfss	status,0,c
 10065  0024E4  EF76  F012         	goto	u10601
 10066  0024E8  EF78  F012         	goto	u10600
 10067  0024EC                     u10601:
 10068  0024EC  EFAE  F012         	goto	l9317
 10069  0024F0                     u10600:
 10070  0024F0  C04C  F038         	movff	roundf@x,___fladd@a
 10071  0024F4  C04D  F039         	movff	roundf@x+1,___fladd@a+1
 10072  0024F8  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
 10073  0024FC  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
 10074  002500  C06E  F034         	movff	roundf@y,___fladd@b
 10075  002504  C06F  F035         	movff	roundf@y+1,___fladd@b+1
 10076  002508  C070  F036         	movff	roundf@y+2,___fladd@b+2
 10077  00250C  C071  F037         	movff	roundf@y+3,___fladd@b+3
 10078  002510  EC87  F008         	call	___fladd	;wreg free
 10079  002514  C034  F066         	movff	?___fladd,_roundf$1818
 10080  002518  C035  F067         	movff	?___fladd+1,_roundf$1818+1
 10081  00251C  C036  F068         	movff	?___fladd+2,_roundf$1818+2
 10082  002520  C037  F069         	movff	?___fladd+3,_roundf$1818+3
 10083  002524  C066  F034         	movff	_roundf$1818,___fladd@b
 10084  002528  C067  F035         	movff	_roundf$1818+1,___fladd@b+1
 10085  00252C  C068  F036         	movff	_roundf$1818+2,___fladd@b+2
 10086  002530  C069  F037         	movff	_roundf$1818+3,___fladd@b+3
 10087  002534  0E00               	movlw	0
 10088  002536  6E38               	movwf	___fladd@a^0,c
 10089  002538  0E00               	movlw	0
 10090  00253A  6E39               	movwf	(___fladd@a+1)^0,c
 10091  00253C  0E80               	movlw	128
 10092  00253E  6E3A               	movwf	(___fladd@a+2)^0,c
 10093  002540  0E3F               	movlw	63
 10094  002542  6E3B               	movwf	(___fladd@a+3)^0,c
 10095  002544  EC87  F008         	call	___fladd	;wreg free
 10096  002548  C034  F06E         	movff	?___fladd,roundf@y
 10097  00254C  C035  F06F         	movff	?___fladd+1,roundf@y+1
 10098  002550  C036  F070         	movff	?___fladd+2,roundf@y+2
 10099  002554  C037  F071         	movff	?___fladd+3,roundf@y+3
 10100  002558  EFC8  F012         	goto	l9319
 10101  00255C                     l9317:
 10102  00255C  C06E  F034         	movff	roundf@y,___fladd@b
 10103  002560  C06F  F035         	movff	roundf@y+1,___fladd@b+1
 10104  002564  C070  F036         	movff	roundf@y+2,___fladd@b+2
 10105  002568  C071  F037         	movff	roundf@y+3,___fladd@b+3
 10106  00256C  C04C  F038         	movff	roundf@x,___fladd@a
 10107  002570  C04D  F039         	movff	roundf@x+1,___fladd@a+1
 10108  002574  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
 10109  002578  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
 10110  00257C  EC87  F008         	call	___fladd	;wreg free
 10111  002580  C034  F06E         	movff	?___fladd,roundf@y
 10112  002584  C035  F06F         	movff	?___fladd+1,roundf@y+1
 10113  002588  C036  F070         	movff	?___fladd+2,roundf@y+2
 10114  00258C  C037  F071         	movff	?___fladd+3,roundf@y+3
 10115  002590                     l9319:
 10116  002590  C06A  F050         	movff	roundf@u,??_roundf
 10117  002594  C06B  F051         	movff	roundf@u+1,??_roundf+1
 10118  002598  C06C  F052         	movff	roundf@u+2,??_roundf+2
 10119  00259C  C06D  F053         	movff	roundf@u+3,??_roundf+3
 10120  0025A0  0E20               	movlw	32
 10121  0025A2  EFD8  F012         	goto	u10610
 10122  0025A6                     u10615:
 10123  0025A6  90D8               	bcf	status,0,c
 10124  0025A8  3253               	rrcf	(??_roundf+3)^0,f,c
 10125  0025AA  3252               	rrcf	(??_roundf+2)^0,f,c
 10126  0025AC  3251               	rrcf	(??_roundf+1)^0,f,c
 10127  0025AE  3250               	rrcf	??_roundf^0,f,c
 10128  0025B0                     u10610:
 10129  0025B0  2EE8               	decfsz	wreg,f,c
 10130  0025B2  EFD3  F012         	goto	u10615
 10131  0025B6  5050               	movf	??_roundf^0,w,c
 10132  0025B8  1051               	iorwf	(??_roundf+1)^0,w,c
 10133  0025BA  1052               	iorwf	(??_roundf+2)^0,w,c
 10134  0025BC  1053               	iorwf	(??_roundf+3)^0,w,c
 10135  0025BE  B4D8               	btfsc	status,2,c
 10136  0025C0  EFE4  F012         	goto	u10621
 10137  0025C4  EFE6  F012         	goto	u10620
 10138  0025C8                     u10621:
 10139  0025C8  EFF8  F012         	goto	l9323
 10140  0025CC                     u10620:
 10141  0025CC  C06E  F006         	movff	roundf@y,___flneg@f1
 10142  0025D0  C06F  F007         	movff	roundf@y+1,___flneg@f1+1
 10143  0025D4  C070  F008         	movff	roundf@y+2,___flneg@f1+2
 10144  0025D8  C071  F009         	movff	roundf@y+3,___flneg@f1+3
 10145  0025DC  EC6A  F029         	call	___flneg	;wreg free
 10146  0025E0  C006  F06E         	movff	?___flneg,roundf@y
 10147  0025E4  C007  F06F         	movff	?___flneg+1,roundf@y+1
 10148  0025E8  C008  F070         	movff	?___flneg+2,roundf@y+2
 10149  0025EC  C009  F071         	movff	?___flneg+3,roundf@y+3
 10150  0025F0                     l9323:
 10151  0025F0  C06E  F04C         	movff	roundf@y,?_roundf
 10152  0025F4  C06F  F04D         	movff	roundf@y+1,?_roundf+1
 10153  0025F8  C070  F04E         	movff	roundf@y+2,?_roundf+2
 10154  0025FC  C071  F04F         	movff	roundf@y+3,?_roundf+3
 10155  002600                     l1720:
 10156  002600  0012               	return		;funcret
 10157  002602                     __end_of_roundf:
 10158                           	opt callstack 0
 10159                           
 10160 ;; *************** function ___flsub *****************
 10161 ;; Defined at:
 10162 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  b               4   67[COMRAM] float 
 10165 ;;  a               4   71[COMRAM] float 
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;		None
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  4   67[COMRAM] float 
 10170 ;; Registers used:
 10171 ;;		wreg, status,2, status,0, cstack
 10172 ;; Tracked objects:
 10173 ;;		On entry : 0/0
 10174 ;;		On exit  : 0/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10177 ;;      Params:         8       0       0       0       0       0       0       0       0
 10178 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10179 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10180 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10181 ;;Total ram usage:        8 bytes
 10182 ;; Hardware stack levels used:    1
 10183 ;; Hardware stack levels required when called:    3
 10184 ;; This function calls:
 10185 ;;		___fladd
 10186 ;; This function is called by:
 10187 ;;		_PID
 10188 ;;		_efgtoa
 10189 ;;		_roundf
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192                           
 10193                           	psect	text39
 10194  0050CE                     __ptext39:
 10195                           	opt callstack 0
 10196  0050CE                     ___flsub:
 10197                           	opt callstack 22
 10198  0050CE  0E00               	movlw	0
 10199  0050D0  1A48               	xorwf	___flsub@a^0,f,c
 10200  0050D2  0E00               	movlw	0
 10201  0050D4  1A49               	xorwf	(___flsub@a+1)^0,f,c
 10202  0050D6  0E00               	movlw	0
 10203  0050D8  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 10204  0050DA  0E80               	movlw	128
 10205  0050DC  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 10206  0050DE  C044  F034         	movff	___flsub@b,___fladd@b
 10207  0050E2  C045  F035         	movff	___flsub@b+1,___fladd@b+1
 10208  0050E6  C046  F036         	movff	___flsub@b+2,___fladd@b+2
 10209  0050EA  C047  F037         	movff	___flsub@b+3,___fladd@b+3
 10210  0050EE  C048  F038         	movff	___flsub@a,___fladd@a
 10211  0050F2  C049  F039         	movff	___flsub@a+1,___fladd@a+1
 10212  0050F6  C04A  F03A         	movff	___flsub@a+2,___fladd@a+2
 10213  0050FA  C04B  F03B         	movff	___flsub@a+3,___fladd@a+3
 10214  0050FE  EC87  F008         	call	___fladd	;wreg free
 10215  005102  C034  F044         	movff	?___fladd,?___flsub
 10216  005106  C035  F045         	movff	?___fladd+1,?___flsub+1
 10217  00510A  C036  F046         	movff	?___fladd+2,?___flsub+2
 10218  00510E  C037  F047         	movff	?___fladd+3,?___flsub+3
 10219  005112  0012               	return		;funcret
 10220  005114                     __end_of___flsub:
 10221                           	opt callstack 0
 10222                           
 10223 ;; *************** function ___flneg *****************
 10224 ;; Defined at:
 10225 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;  f1              4    5[COMRAM] float 
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;		None
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  4    5[COMRAM] float 
 10232 ;; Registers used:
 10233 ;;		wreg, status,2, status,0
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10239 ;;      Params:         4       0       0       0       0       0       0       0       0
 10240 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10241 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10242 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10243 ;;Total ram usage:        4 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; Hardware stack levels required when called:    2
 10246 ;; This function calls:
 10247 ;;		Nothing
 10248 ;; This function is called by:
 10249 ;;		_efgtoa
 10250 ;;		_roundf
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           	psect	text40
 10255  0052D4                     __ptext40:
 10256                           	opt callstack 0
 10257  0052D4                     ___flneg:
 10258                           	opt callstack 23
 10259  0052D4  5006               	movf	___flneg@f1^0,w,c
 10260  0052D6  1007               	iorwf	(___flneg@f1+1)^0,w,c
 10261  0052D8  1008               	iorwf	(___flneg@f1+2)^0,w,c
 10262  0052DA  1009               	iorwf	(___flneg@f1+3)^0,w,c
 10263  0052DC  B4D8               	btfsc	status,2,c
 10264  0052DE  EF73  F029         	goto	u9711
 10265  0052E2  EF75  F029         	goto	u9710
 10266  0052E6                     u9711:
 10267  0052E6  EF7D  F029         	goto	l8797
 10268  0052EA                     u9710:
 10269  0052EA  0E00               	movlw	0
 10270  0052EC  1A06               	xorwf	___flneg@f1^0,f,c
 10271  0052EE  0E00               	movlw	0
 10272  0052F0  1A07               	xorwf	(___flneg@f1+1)^0,f,c
 10273  0052F2  0E00               	movlw	0
 10274  0052F4  1A08               	xorwf	(___flneg@f1+2)^0,f,c
 10275  0052F6  0E80               	movlw	128
 10276  0052F8  1A09               	xorwf	(___flneg@f1+3)^0,f,c
 10277  0052FA                     l8797:
 10278  0052FA  C006  F006         	movff	___flneg@f1,?___flneg
 10279  0052FE  C007  F007         	movff	___flneg@f1+1,?___flneg+1
 10280  005302  C008  F008         	movff	___flneg@f1+2,?___flneg+2
 10281  005306  C009  F009         	movff	___flneg@f1+3,?___flneg+3
 10282  00530A  0012               	return		;funcret
 10283  00530C                     __end_of___flneg:
 10284                           	opt callstack 0
 10285                           
 10286 ;; *************** function _moverCarrito *****************
 10287 ;; Defined at:
 10288 ;;		line 542 in file "main.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;  espejearCarr    1    wreg     unsigned char 
 10291 ;;  carroEspejea    2   40[BANK0 ] PTR unsigned char 
 10292 ;;		 -> comportamientoBasico@carroEspejeado(1), 
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;  espejearCarr    1   83[COMRAM] unsigned char 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  1    wreg      void 
 10297 ;; Registers used:
 10298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10304 ;;      Params:         0       2       0       0       0       0       0       0       0
 10305 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10306 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10307 ;;      Totals:         1       4       0       0       0       0       0       0       0
 10308 ;;Total ram usage:        5 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:    8
 10311 ;; This function calls:
 10312 ;;		_forzarAvanceRecto
 10313 ;;		_forzarEspejeo
 10314 ;; This function is called by:
 10315 ;;		_comportamientoBasico
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319                           	psect	text41
 10320  0042EE                     __ptext41:
 10321                           	opt callstack 0
 10322  0042EE                     _moverCarrito:
 10323                           	opt callstack 21
 10324                           
 10325                           ;incstack = 0
 10326                           ;moverCarrito@espejearCarroY stored from wreg
 10327  0042EE  6E54               	movwf	moverCarrito@espejearCarroY^0,c
 10328  0042F0                     
 10329                           ;main.c: 544:     switch (mouse.curr_state) {
 10330  0042F0  EFBC  F021         	goto	l9649
 10331  0042F4                     l430:
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;main.c: 548:             LATB4 = 1;
 10335  0042F4  888A               	bsf	3978,4,c	;volatile
 10336                           
 10337                           ;main.c: 549:             LATB5 = 0;
 10338  0042F6  9A8A               	bcf	3978,5,c	;volatile
 10339                           
 10340                           ;main.c: 550:             LATB6 = 1;
 10341  0042F8  8C8A               	bsf	3978,6,c	;volatile
 10342                           
 10343                           ;main.c: 553:             if (!0)
 10344  0042FA  9E8A               	bcf	3978,7,c	;volatile
 10345  0042FC                     
 10346                           ; BSR set to: 0
 10347                           ;main.c: 554:                 _delay((unsigned long)((55)*(4000000/4000.0)));
 10348  0042FC  0E48               	movlw	72
 10349  0042FE  0100               	movlb	0	; () banked
 10350  004300  6F8A               	movwf	??_moverCarrito& (0+255),b
 10351  004302  0E6C               	movlw	108
 10352  004304                     u11877:
 10353  004304  2EE8               	decfsz	wreg,f,c
 10354  004306  D7FE               	bra	u11877
 10355  004308  2F8A               	decfsz	??_moverCarrito& (0+255),f,b
 10356  00430A  D7FC               	bra	u11877
 10357  00430C  F000               	nop	
 10358  00430E  EFDA  F021         	goto	l438
 10359  004312                     l9633:
 10360                           
 10361                           ; BSR set to: 0
 10362                           ;main.c: 560:             if (espejearCarroY) {
 10363  004312  5054               	movf	moverCarrito@espejearCarroY^0,w,c
 10364  004314  B4D8               	btfsc	status,2,c
 10365  004316  EF8F  F021         	goto	u11051
 10366  00431A  EF91  F021         	goto	u11050
 10367  00431E                     u11051:
 10368  00431E  EF9B  F021         	goto	l434
 10369  004322                     u11050:
 10370  004322                     
 10371                           ; BSR set to: 0
 10372                           ;main.c: 561:                 forzarEspejeo();
 10373  004322  EC12  F029         	call	_forzarEspejeo	;wreg free
 10374  004326                     
 10375                           ;main.c: 562:                 *carroEspejeado = 1;
 10376  004326  C088  FFD9         	movff	moverCarrito@carroEspejeado,fsr2l
 10377  00432A  C089  FFDA         	movff	moverCarrito@carroEspejeado+1,fsr2h
 10378  00432E  0E01               	movlw	1
 10379  004330  6EDF               	movwf	indf2,c
 10380                           
 10381                           ;main.c: 563:             } else {
 10382  004332  EFDA  F021         	goto	l438
 10383  004336                     l434:
 10384                           
 10385                           ; BSR set to: 0
 10386                           ;main.c: 564:                 LATB4 = 0;
 10387  004336  988A               	bcf	3978,4,c	;volatile
 10388                           
 10389                           ;main.c: 565:                 LATB5 = 0;
 10390  004338  9A8A               	bcf	3978,5,c	;volatile
 10391                           
 10392                           ;main.c: 566:                 LATB6 = 1;
 10393  00433A  8C8A               	bsf	3978,6,c	;volatile
 10394                           
 10395                           ;main.c: 567:                 LATB7 = 0;
 10396  00433C  9E8A               	bcf	3978,7,c	;volatile
 10397  00433E                     l9639:
 10398                           
 10399                           ; BSR set to: 0
 10400                           ;main.c: 568:                 _delay((unsigned long)((410)*(4000000/4000.0)));
 10401  00433E  0E03               	movlw	3
 10402  004340  0100               	movlb	0	; () banked
 10403  004342  6F8B               	movwf	(??_moverCarrito+1)& (0+255),b
 10404  004344  0E15               	movlw	21
 10405  004346  6F8A               	movwf	??_moverCarrito& (0+255),b
 10406  004348  0E73               	movlw	115
 10407  00434A                     u11887:
 10408  00434A  2EE8               	decfsz	wreg,f,c
 10409  00434C  D7FE               	bra	u11887
 10410  00434E  2F8A               	decfsz	??_moverCarrito& (0+255),f,b
 10411  004350  D7FC               	bra	u11887
 10412  004352  2F8B               	decfsz	(??_moverCarrito+1)& (0+255),f,b
 10413  004354  D7FA               	bra	u11887
 10414  004356  D000               	nop2	
 10415  004358                     
 10416                           ;main.c: 569:                 forzarAvanceRecto();
 10417  004358  ECF1  F029         	call	_forzarAvanceRecto	;wreg free
 10418  00435C  EFDA  F021         	goto	l438
 10419  004360                     l436:
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;main.c: 577:             LATB4 = 1;
 10423  004360  888A               	bsf	3978,4,c	;volatile
 10424                           
 10425                           ;main.c: 578:             LATB5 = 0;
 10426  004362  9A8A               	bcf	3978,5,c	;volatile
 10427                           
 10428                           ;main.c: 579:             LATB6 = 0;
 10429  004364  9C8A               	bcf	3978,6,c	;volatile
 10430                           
 10431                           ;main.c: 580:             LATB7 = 0;
 10432  004366  9E8A               	bcf	3978,7,c	;volatile
 10433  004368  EF9F  F021         	goto	l9639
 10434  00436C                     l437:
 10435                           
 10436                           ; BSR set to: 0
 10437                           ;main.c: 589:             LATB4 = 0;
 10438  00436C  988A               	bcf	3978,4,c	;volatile
 10439                           
 10440                           ;main.c: 590:             LATB5 = 0;
 10441  00436E  9A8A               	bcf	3978,5,c	;volatile
 10442                           
 10443                           ;main.c: 591:             LATB6 = 0;
 10444  004370  9C8A               	bcf	3978,6,c	;volatile
 10445                           
 10446                           ;main.c: 592:             LATB7 = 0;
 10447  004372  9E8A               	bcf	3978,7,c	;volatile
 10448                           
 10449                           ;main.c: 594:             break;
 10450  004374  EFDA  F021         	goto	l438
 10451  004378                     l9649:
 10452  004378  0100               	movlb	0	; () banked
 10453  00437A  51FD               	movf	_mouse& (0+255),w,b
 10454  00437C  6F8A               	movwf	??_moverCarrito& (0+255),b
 10455  00437E  6B8B               	clrf	(??_moverCarrito+1)& (0+255),b
 10456                           
 10457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10458                           ; Switch size 1, requested type "simple"
 10459                           ; Number of cases is 1, Range of values is 0 to 0
 10460                           ; switch strategies available:
 10461                           ; Name         Instructions Cycles
 10462                           ; simple_byte            4     3 (average)
 10463                           ;	Chosen strategy is simple_byte
 10464  004380  518B               	movf	(??_moverCarrito+1)& (0+255),w,b
 10465  004382  0A00               	xorlw	0	; case 0
 10466  004384  B4D8               	btfsc	status,2,c
 10467  004386  EFC7  F021         	goto	l10847
 10468  00438A  EFDA  F021         	goto	l438
 10469  00438E                     l10847:
 10470                           
 10471                           ; BSR set to: 0
 10472                           ; Switch size 1, requested type "simple"
 10473                           ; Number of cases is 4, Range of values is 1 to 4
 10474                           ; switch strategies available:
 10475                           ; Name         Instructions Cycles
 10476                           ; simple_byte           13     7 (average)
 10477                           ;	Chosen strategy is simple_byte
 10478  00438E  518A               	movf	??_moverCarrito& (0+255),w,b
 10479  004390  0A01               	xorlw	1	; case 1
 10480  004392  B4D8               	btfsc	status,2,c
 10481  004394  EF7A  F021         	goto	l430
 10482  004398  0A03               	xorlw	3	; case 2
 10483  00439A  B4D8               	btfsc	status,2,c
 10484  00439C  EF89  F021         	goto	l9633
 10485  0043A0  0A01               	xorlw	1	; case 3
 10486  0043A2  B4D8               	btfsc	status,2,c
 10487  0043A4  EFB0  F021         	goto	l436
 10488  0043A8  0A07               	xorlw	7	; case 4
 10489  0043AA  B4D8               	btfsc	status,2,c
 10490  0043AC  EFB6  F021         	goto	l437
 10491  0043B0  EFDA  F021         	goto	l438
 10492  0043B4                     l438:
 10493  0043B4  0012               	return		;funcret
 10494  0043B6                     __end_of_moverCarrito:
 10495                           	opt callstack 0
 10496                           
 10497 ;; *************** function _forzarAvanceRecto *****************
 10498 ;; Defined at:
 10499 ;;		line 486 in file "main.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;		None
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;		None
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      void 
 10506 ;; Registers used:
 10507 ;;		wreg
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10513 ;;      Params:         0       0       0       0       0       0       0       0       0
 10514 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10515 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10516 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10517 ;;Total ram usage:        2 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    2
 10520 ;; This function calls:
 10521 ;;		Nothing
 10522 ;; This function is called by:
 10523 ;;		_moverCarrito
 10524 ;;		_mover
 10525 ;; This function uses a non-reentrant model
 10526 ;;
 10527                           
 10528                           	psect	text42
 10529  0053E2                     __ptext42:
 10530                           	opt callstack 0
 10531  0053E2                     _forzarAvanceRecto:
 10532                           	opt callstack 25
 10533  0053E2                     
 10534                           ;main.c: 487:     LATB4 = 1;
 10535  0053E2  888A               	bsf	3978,4,c	;volatile
 10536                           
 10537                           ;main.c: 488:     LATB5 = 0;
 10538  0053E4  9A8A               	bcf	3978,5,c	;volatile
 10539                           
 10540                           ;main.c: 489:     LATB6 = 1;
 10541  0053E6  8C8A               	bsf	3978,6,c	;volatile
 10542                           
 10543                           ;main.c: 490:     LATB7 = 0;
 10544  0053E8  9E8A               	bcf	3978,7,c	;volatile
 10545  0053EA                     
 10546                           ;main.c: 492:     _delay((unsigned long)((550)*(4000000/4000.0)));
 10547  0053EA  0E03               	movlw	3
 10548  0053EC  6E07               	movwf	(??_forzarAvanceRecto+1)^0,c
 10549  0053EE  0ECB               	movlw	203
 10550  0053F0  6E06               	movwf	??_forzarAvanceRecto^0,c
 10551  0053F2  0E45               	movlw	69
 10552  0053F4                     u11897:
 10553  0053F4  2EE8               	decfsz	wreg,f,c
 10554  0053F6  D7FE               	bra	u11897
 10555  0053F8  2E06               	decfsz	??_forzarAvanceRecto^0,f,c
 10556  0053FA  D7FC               	bra	u11897
 10557  0053FC  2E07               	decfsz	(??_forzarAvanceRecto+1)^0,f,c
 10558  0053FE  D7FA               	bra	u11897
 10559  005400  F000               	nop	
 10560  005402  0012               	return		;funcret
 10561  005404                     __end_of_forzarAvanceRecto:
 10562                           	opt callstack 0
 10563                           
 10564 ;; *************** function _leerSensores *****************
 10565 ;; Defined at:
 10566 ;;		line 1148 in file "main.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;		None
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;		None
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		wreg, status,2, status,0, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10580 ;;      Params:         0       0       0       0       0       0       0       0       0
 10581 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10582 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10583 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10584 ;;Total ram usage:        0 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:    4
 10587 ;; This function calls:
 10588 ;;		___fladd
 10589 ;;		___fldiv
 10590 ;;		_dameDistancia
 10591 ;; This function is called by:
 10592 ;;		_comportamientoBasico
 10593 ;;		_probarSensores
 10594 ;;		_probarPID
 10595 ;;		_probarCruceT
 10596 ;; This function uses a non-reentrant model
 10597 ;;
 10598                           
 10599                           	psect	text43
 10600  0038F6                     __ptext43:
 10601                           	opt callstack 0
 10602  0038F6                     _leerSensores:
 10603                           	opt callstack 25
 10604  0038F6                     
 10605                           ;main.c: 1150:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
 10606  0038F6  C120  F038         	movff	_oldSensorDerecha,___fladd@a
 10607  0038FA  C121  F039         	movff	_oldSensorDerecha+1,___fladd@a+1
 10608  0038FE  C122  F03A         	movff	_oldSensorDerecha+2,___fladd@a+2
 10609  003902  C123  F03B         	movff	_oldSensorDerecha+3,___fladd@a+3
 10610  003906  0E03               	movlw	3
 10611  003908  ECEB  F01D         	call	_dameDistancia
 10612  00390C  C01B  F034         	movff	?_dameDistancia,___fladd@b
 10613  003910  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
 10614  003914  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
 10615  003918  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
 10616  00391C  EC87  F008         	call	___fladd	;wreg free
 10617  003920  C034  F044         	movff	?___fladd,___fldiv@b
 10618  003924  C035  F045         	movff	?___fladd+1,___fldiv@b+1
 10619  003928  C036  F046         	movff	?___fladd+2,___fldiv@b+2
 10620  00392C  C037  F047         	movff	?___fladd+3,___fldiv@b+3
 10621  003930  0E00               	movlw	0
 10622  003932  6E48               	movwf	___fldiv@a^0,c
 10623  003934  0E00               	movlw	0
 10624  003936  6E49               	movwf	(___fldiv@a+1)^0,c
 10625  003938  0E00               	movlw	0
 10626  00393A  6E4A               	movwf	(___fldiv@a+2)^0,c
 10627  00393C  0E40               	movlw	64
 10628  00393E  6E4B               	movwf	(___fldiv@a+3)^0,c
 10629  003940  EC01  F013         	call	___fldiv	;wreg free
 10630  003944  C044  F0F9         	movff	?___fldiv,_sensorDerecha
 10631  003948  C045  F0FA         	movff	?___fldiv+1,_sensorDerecha+1
 10632  00394C  C046  F0FB         	movff	?___fldiv+2,_sensorDerecha+2
 10633  003950  C047  F0FC         	movff	?___fldiv+3,_sensorDerecha+3
 10634                           
 10635                           ;main.c: 1151:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
 10636  003954  C11C  F038         	movff	_oldSensorIzquierda,___fladd@a
 10637  003958  C11D  F039         	movff	_oldSensorIzquierda+1,___fladd@a+1
 10638  00395C  C11E  F03A         	movff	_oldSensorIzquierda+2,___fladd@a+2
 10639  003960  C11F  F03B         	movff	_oldSensorIzquierda+3,___fladd@a+3
 10640  003964  0E02               	movlw	2
 10641  003966  ECEB  F01D         	call	_dameDistancia
 10642  00396A  C01B  F034         	movff	?_dameDistancia,___fladd@b
 10643  00396E  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
 10644  003972  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
 10645  003976  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
 10646  00397A  EC87  F008         	call	___fladd	;wreg free
 10647  00397E  C034  F044         	movff	?___fladd,___fldiv@b
 10648  003982  C035  F045         	movff	?___fladd+1,___fldiv@b+1
 10649  003986  C036  F046         	movff	?___fladd+2,___fldiv@b+2
 10650  00398A  C037  F047         	movff	?___fladd+3,___fldiv@b+3
 10651  00398E  0E00               	movlw	0
 10652  003990  6E48               	movwf	___fldiv@a^0,c
 10653  003992  0E00               	movlw	0
 10654  003994  6E49               	movwf	(___fldiv@a+1)^0,c
 10655  003996  0E00               	movlw	0
 10656  003998  6E4A               	movwf	(___fldiv@a+2)^0,c
 10657  00399A  0E40               	movlw	64
 10658  00399C  6E4B               	movwf	(___fldiv@a+3)^0,c
 10659  00399E  EC01  F013         	call	___fldiv	;wreg free
 10660  0039A2  C044  F055         	movff	?___fldiv,_sensorIzquierda
 10661  0039A6  C045  F056         	movff	?___fldiv+1,_sensorIzquierda+1
 10662  0039AA  C046  F057         	movff	?___fldiv+2,_sensorIzquierda+2
 10663  0039AE  C047  F058         	movff	?___fldiv+3,_sensorIzquierda+3
 10664                           
 10665                           ;main.c: 1152:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
 10666  0039B2  C118  F038         	movff	_oldSensorEnfrente,___fladd@a
 10667  0039B6  C119  F039         	movff	_oldSensorEnfrente+1,___fladd@a+1
 10668  0039BA  C11A  F03A         	movff	_oldSensorEnfrente+2,___fladd@a+2
 10669  0039BE  C11B  F03B         	movff	_oldSensorEnfrente+3,___fladd@a+3
 10670  0039C2  0E01               	movlw	1
 10671  0039C4  ECEB  F01D         	call	_dameDistancia
 10672  0039C8  C01B  F034         	movff	?_dameDistancia,___fladd@b
 10673  0039CC  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
 10674  0039D0  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
 10675  0039D4  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
 10676  0039D8  EC87  F008         	call	___fladd	;wreg free
 10677  0039DC  C034  F044         	movff	?___fladd,___fldiv@b
 10678  0039E0  C035  F045         	movff	?___fladd+1,___fldiv@b+1
 10679  0039E4  C036  F046         	movff	?___fladd+2,___fldiv@b+2
 10680  0039E8  C037  F047         	movff	?___fladd+3,___fldiv@b+3
 10681  0039EC  0E00               	movlw	0
 10682  0039EE  6E48               	movwf	___fldiv@a^0,c
 10683  0039F0  0E00               	movlw	0
 10684  0039F2  6E49               	movwf	(___fldiv@a+1)^0,c
 10685  0039F4  0E00               	movlw	0
 10686  0039F6  6E4A               	movwf	(___fldiv@a+2)^0,c
 10687  0039F8  0E40               	movlw	64
 10688  0039FA  6E4B               	movwf	(___fldiv@a+3)^0,c
 10689  0039FC  EC01  F013         	call	___fldiv	;wreg free
 10690  003A00  C044  F124         	movff	?___fldiv,_sensorEnfrente
 10691  003A04  C045  F125         	movff	?___fldiv+1,_sensorEnfrente+1
 10692  003A08  C046  F126         	movff	?___fldiv+2,_sensorEnfrente+2
 10693  003A0C  C047  F127         	movff	?___fldiv+3,_sensorEnfrente+3
 10694  003A10                     
 10695                           ;main.c: 1154:     oldSensorDerecha = sensorDerecha;
 10696  003A10  C0F9  F120         	movff	_sensorDerecha,_oldSensorDerecha
 10697  003A14  C0FA  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
 10698  003A18  C0FB  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
 10699  003A1C  C0FC  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
 10700  003A20                     
 10701                           ;main.c: 1155:     oldSensorIzquierda = sensorIzquierda;
 10702  003A20  C055  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
 10703  003A24  C056  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
 10704  003A28  C057  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
 10705  003A2C  C058  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
 10706  003A30                     
 10707                           ;main.c: 1156:     oldSensorEnfrente = sensorEnfrente;
 10708  003A30  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
 10709  003A34  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
 10710  003A38  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
 10711  003A3C  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
 10712  003A40                     
 10713                           ;main.c: 1161:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
 10714  003A40  C0F9  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
 10715  003A44  C0FA  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
 10716  003A48  C0FB  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
 10717  003A4C  C0FC  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
 10718  003A50                     
 10719                           ;main.c: 1170:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
 10720  003A50  C055  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
 10721  003A54  C056  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
 10722  003A58  C057  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
 10723  003A5C  C058  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
 10724  003A60                     
 10725                           ;main.c: 1173:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
 10726  003A60  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
 10727  003A64  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
 10728  003A68  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
 10729  003A6C  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
 10730  003A70  0012               	return		;funcret
 10731  003A72                     __end_of_leerSensores:
 10732                           	opt callstack 0
 10733                           
 10734 ;; *************** function _dameDistancia *****************
 10735 ;; Defined at:
 10736 ;;		line 26 in file "./ultrasonico.h"
 10737 ;; Parameters:    Size  Location     Type
 10738 ;;  numeroSensor    1    wreg     unsigned char 
 10739 ;; Auto vars:     Size  Location     Type
 10740 ;;  numeroSensor    1   32[COMRAM] unsigned char 
 10741 ;;  distancia       4   33[COMRAM] float 
 10742 ;;  conteo          2   37[COMRAM] unsigned int 
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  4   26[COMRAM] float 
 10745 ;; Registers used:
 10746 ;;		wreg, status,2, status,0, cstack
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10752 ;;      Params:         4       0       0       0       0       0       0       0       0
 10753 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10754 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10755 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10756 ;;Total ram usage:       13 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; Hardware stack levels required when called:    3
 10759 ;; This function calls:
 10760 ;;		___lwdiv
 10761 ;;		___xxtofl
 10762 ;; This function is called by:
 10763 ;;		_inicializarComportamientoBasico
 10764 ;;		_leerSensores
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768                           	psect	text44
 10769  003BD6                     __ptext44:
 10770                           	opt callstack 0
 10771  003BD6                     _dameDistancia:
 10772                           	opt callstack 26
 10773                           
 10774                           ;incstack = 0
 10775                           ;dameDistancia@numeroSensor stored from wreg
 10776  003BD6  6E21               	movwf	dameDistancia@numeroSensor^0,c
 10777  003BD8                     
 10778                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
 10779  003BD8  0E00               	movlw	0
 10780  003BDA  6ECF               	movwf	207,c	;volatile
 10781                           
 10782                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
 10783  003BDC  0E00               	movlw	0
 10784  003BDE  6ECE               	movwf	206,c	;volatile
 10785                           
 10786                           ;./ultrasonico.h: 33:     conteo = 0;
 10787  003BE0  0E00               	movlw	0
 10788  003BE2  6E27               	movwf	(dameDistancia@conteo+1)^0,c
 10789  003BE4  0E00               	movlw	0
 10790  003BE6  6E26               	movwf	dameDistancia@conteo^0,c
 10791  003BE8                     
 10792                           ;./ultrasonico.h: 34:     LATD3 = 1;
 10793  003BE8  868C               	bsf	3980,3,c	;volatile
 10794  003BEA                     
 10795                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
 10796  003BEA  0E04               	movlw	4
 10797  003BEC                     u11907:
 10798  003BEC  2EE8               	decfsz	wreg,f,c
 10799  003BEE  D7FE               	bra	u11907
 10800  003BF0                     
 10801                           ;./ultrasonico.h: 36:     LATD3 = 0;
 10802  003BF0  968C               	bcf	3980,3,c	;volatile
 10803                           
 10804                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
 10805  003BF2  EF43  F01E         	goto	l9465
 10806  003BF6                     l185:
 10807  003BF6  A281               	btfss	129,1,c	;volatile
 10808  003BF8  EF00  F01E         	goto	u10821
 10809  003BFC  EF02  F01E         	goto	u10820
 10810  003C00                     u10821:
 10811  003C00  EFFB  F01D         	goto	l185
 10812  003C04                     u10820:
 10813  003C04                     
 10814                           ;./ultrasonico.h: 43:             TMR1ON = 1;
 10815  003C04  80CD               	bsf	4045,0,c	;volatile
 10816  003C06                     l188:
 10817  003C06  A281               	btfss	129,1,c	;volatile
 10818  003C08  EF08  F01E         	goto	u10831
 10819  003C0C  EF0A  F01E         	goto	u10830
 10820  003C10                     u10831:
 10821  003C10  EF5C  F01E         	goto	l193
 10822  003C14                     u10830:
 10823  003C14  A09E               	btfss	3998,0,c	;volatile
 10824  003C16  EF0F  F01E         	goto	u10841
 10825  003C1A  EF11  F01E         	goto	u10840
 10826  003C1E                     u10841:
 10827  003C1E  EF03  F01E         	goto	l188
 10828  003C22                     u10840:
 10829  003C22  EF5C  F01E         	goto	l193
 10830  003C26                     l195:
 10831  003C26  A481               	btfss	129,2,c	;volatile
 10832  003C28  EF18  F01E         	goto	u10851
 10833  003C2C  EF1A  F01E         	goto	u10850
 10834  003C30                     u10851:
 10835  003C30  EF13  F01E         	goto	l195
 10836  003C34                     u10850:
 10837  003C34                     
 10838                           ;./ultrasonico.h: 51:             TMR1ON = 1;
 10839  003C34  80CD               	bsf	4045,0,c	;volatile
 10840  003C36                     l198:
 10841  003C36  A481               	btfss	129,2,c	;volatile
 10842  003C38  EF20  F01E         	goto	u10861
 10843  003C3C  EF22  F01E         	goto	u10860
 10844  003C40                     u10861:
 10845  003C40  EF5C  F01E         	goto	l193
 10846  003C44                     u10860:
 10847  003C44  A09E               	btfss	3998,0,c	;volatile
 10848  003C46  EF27  F01E         	goto	u10871
 10849  003C4A  EF29  F01E         	goto	u10870
 10850  003C4E                     u10871:
 10851  003C4E  EF1B  F01E         	goto	l198
 10852  003C52                     u10870:
 10853  003C52  EF5C  F01E         	goto	l193
 10854  003C56                     l204:
 10855  003C56  A681               	btfss	129,3,c	;volatile
 10856  003C58  EF30  F01E         	goto	u10881
 10857  003C5C  EF32  F01E         	goto	u10880
 10858  003C60                     u10881:
 10859  003C60  EF2B  F01E         	goto	l204
 10860  003C64                     u10880:
 10861  003C64                     
 10862                           ;./ultrasonico.h: 59:             TMR1ON = 1;
 10863  003C64  80CD               	bsf	4045,0,c	;volatile
 10864  003C66                     l207:
 10865  003C66  A681               	btfss	129,3,c	;volatile
 10866  003C68  EF38  F01E         	goto	u10891
 10867  003C6C  EF3A  F01E         	goto	u10890
 10868  003C70                     u10891:
 10869  003C70  EF5C  F01E         	goto	l193
 10870  003C74                     u10890:
 10871  003C74  A09E               	btfss	3998,0,c	;volatile
 10872  003C76  EF3F  F01E         	goto	u10901
 10873  003C7A  EF41  F01E         	goto	u10900
 10874  003C7E                     u10901:
 10875  003C7E  EF33  F01E         	goto	l207
 10876  003C82                     u10900:
 10877  003C82  EF5C  F01E         	goto	l193
 10878  003C86                     l9465:
 10879  003C86  5021               	movf	dameDistancia@numeroSensor^0,w,c
 10880  003C88  6E1F               	movwf	??_dameDistancia^0,c
 10881  003C8A  6A20               	clrf	(??_dameDistancia+1)^0,c
 10882                           
 10883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10884                           ; Switch size 1, requested type "simple"
 10885                           ; Number of cases is 1, Range of values is 0 to 0
 10886                           ; switch strategies available:
 10887                           ; Name         Instructions Cycles
 10888                           ; simple_byte            4     3 (average)
 10889                           ;	Chosen strategy is simple_byte
 10890  003C8C  5020               	movf	(??_dameDistancia+1)^0,w,c
 10891  003C8E  0A00               	xorlw	0	; case 0
 10892  003C90  B4D8               	btfsc	status,2,c
 10893  003C92  EF4D  F01E         	goto	l10849
 10894  003C96  EF5C  F01E         	goto	l193
 10895  003C9A                     l10849:
 10896                           
 10897                           ; Switch size 1, requested type "simple"
 10898                           ; Number of cases is 3, Range of values is 1 to 3
 10899                           ; switch strategies available:
 10900                           ; Name         Instructions Cycles
 10901                           ; simple_byte           10     6 (average)
 10902                           ;	Chosen strategy is simple_byte
 10903  003C9A  501F               	movf	??_dameDistancia^0,w,c
 10904  003C9C  0A01               	xorlw	1	; case 1
 10905  003C9E  B4D8               	btfsc	status,2,c
 10906  003CA0  EFFB  F01D         	goto	l185
 10907  003CA4  0A03               	xorlw	3	; case 2
 10908  003CA6  B4D8               	btfsc	status,2,c
 10909  003CA8  EF13  F01E         	goto	l195
 10910  003CAC  0A01               	xorlw	1	; case 3
 10911  003CAE  B4D8               	btfsc	status,2,c
 10912  003CB0  EF2B  F01E         	goto	l204
 10913  003CB4  EF5C  F01E         	goto	l193
 10914  003CB8                     l193:
 10915                           
 10916                           ;./ultrasonico.h: 66:     TMR1ON = 0;
 10917  003CB8  90CD               	bcf	4045,0,c	;volatile
 10918                           
 10919                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
 10920  003CBA  B09E               	btfsc	3998,0,c	;volatile
 10921  003CBC  EF62  F01E         	goto	u10911
 10922  003CC0  EF64  F01E         	goto	u10910
 10923  003CC4                     u10911:
 10924  003CC4  EF8A  F01E         	goto	l9471
 10925  003CC8                     u10910:
 10926  003CC8                     
 10927                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
 10928  003CC8  50CF               	movf	207,w,c	;volatile
 10929  003CCA  6E20               	movwf	(??_dameDistancia+1)^0,c
 10930  003CCC  6A1F               	clrf	??_dameDistancia^0,c
 10931  003CCE  501F               	movf	??_dameDistancia^0,w,c
 10932  003CD0  1226               	iorwf	dameDistancia@conteo^0,f,c
 10933  003CD2  5020               	movf	(??_dameDistancia+1)^0,w,c
 10934  003CD4  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
 10935                           
 10936                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
 10937  003CD6  50CE               	movf	206,w,c	;volatile
 10938  003CD8  1226               	iorwf	dameDistancia@conteo^0,f,c
 10939  003CDA                     
 10940                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
 10941  003CDA  0E00               	movlw	0
 10942  003CDC  6E09               	movwf	(___lwdiv@divisor+1)^0,c
 10943  003CDE  0E3A               	movlw	58
 10944  003CE0  6E08               	movwf	___lwdiv@divisor^0,c
 10945  003CE2  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
 10946  003CE6  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
 10947  003CEA  EC75  F025         	call	___lwdiv	;wreg free
 10948  003CEE  C006  F00D         	movff	?___lwdiv,___xxtofl@val
 10949  003CF2  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
 10950  003CF6  6A0F               	clrf	(___xxtofl@val+2)^0,c
 10951  003CF8  6A10               	clrf	(___xxtofl@val+3)^0,c
 10952  003CFA  0E00               	movlw	0
 10953  003CFC  EC52  F019         	call	___xxtofl
 10954  003D00  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
 10955  003D04  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
 10956  003D08  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
 10957  003D0C  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
 10958                           
 10959                           ;./ultrasonico.h: 73:     } else {
 10960  003D10  EF93  F01E         	goto	l9475
 10961  003D14                     l9471:
 10962  003D14                     
 10963                           ;./ultrasonico.h: 75:         TMR1IF = 0;
 10964  003D14  909E               	bcf	3998,0,c	;volatile
 10965                           
 10966                           ;./ultrasonico.h: 76:         distancia = 0;
 10967  003D16  0E00               	movlw	0
 10968  003D18  6E22               	movwf	dameDistancia@distancia^0,c
 10969  003D1A  0E00               	movlw	0
 10970  003D1C  6E23               	movwf	(dameDistancia@distancia+1)^0,c
 10971  003D1E  0E00               	movlw	0
 10972  003D20  6E24               	movwf	(dameDistancia@distancia+2)^0,c
 10973  003D22  0E00               	movlw	0
 10974  003D24  6E25               	movwf	(dameDistancia@distancia+3)^0,c
 10975  003D26                     l9475:
 10976                           
 10977                           ;./ultrasonico.h: 80:     return distancia;
 10978  003D26  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
 10979  003D2A  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
 10980  003D2E  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
 10981  003D32  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
 10982  003D36  0012               	return		;funcret
 10983  003D38                     __end_of_dameDistancia:
 10984                           	opt callstack 0
 10985                           
 10986 ;; *************** function ___lwdiv *****************
 10987 ;; Defined at:
 10988 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 10989 ;; Parameters:    Size  Location     Type
 10990 ;;  dividend        2    5[COMRAM] unsigned int 
 10991 ;;  divisor         2    7[COMRAM] unsigned int 
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;  quotient        2   10[COMRAM] unsigned int 
 10994 ;;  counter         1    9[COMRAM] unsigned char 
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  2    5[COMRAM] unsigned int 
 10997 ;; Registers used:
 10998 ;;		wreg, status,2, status,0
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/0
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11004 ;;      Params:         4       0       0       0       0       0       0       0       0
 11005 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11006 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11007 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11008 ;;Total ram usage:        7 bytes
 11009 ;; Hardware stack levels used:    1
 11010 ;; Hardware stack levels required when called:    2
 11011 ;; This function calls:
 11012 ;;		Nothing
 11013 ;; This function is called by:
 11014 ;;		_dameDistancia
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           	psect	text45
 11019  004AEA                     __ptext45:
 11020                           	opt callstack 0
 11021  004AEA                     ___lwdiv:
 11022                           	opt callstack 26
 11023  004AEA  0E00               	movlw	0
 11024  004AEC  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11025  004AEE  0E00               	movlw	0
 11026  004AF0  6E0B               	movwf	___lwdiv@quotient^0,c
 11027  004AF2  5008               	movf	___lwdiv@divisor^0,w,c
 11028  004AF4  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11029  004AF6  B4D8               	btfsc	status,2,c
 11030  004AF8  EF80  F025         	goto	u10791
 11031  004AFC  EF82  F025         	goto	u10790
 11032  004B00                     u10791:
 11033  004B00  EFAA  F025         	goto	l1420
 11034  004B04                     u10790:
 11035  004B04  0E01               	movlw	1
 11036  004B06  6E0A               	movwf	___lwdiv@counter^0,c
 11037  004B08  EF8A  F025         	goto	l9435
 11038  004B0C                     l9433:
 11039  004B0C  90D8               	bcf	status,0,c
 11040  004B0E  3608               	rlcf	___lwdiv@divisor^0,f,c
 11041  004B10  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11042  004B12  2A0A               	incf	___lwdiv@counter^0,f,c
 11043  004B14                     l9435:
 11044  004B14  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
 11045  004B16  EF8F  F025         	goto	u10801
 11046  004B1A  EF91  F025         	goto	u10800
 11047  004B1E                     u10801:
 11048  004B1E  EF86  F025         	goto	l9433
 11049  004B22                     u10800:
 11050  004B22                     l9437:
 11051  004B22  90D8               	bcf	status,0,c
 11052  004B24  360B               	rlcf	___lwdiv@quotient^0,f,c
 11053  004B26  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11054  004B28  5008               	movf	___lwdiv@divisor^0,w,c
 11055  004B2A  5C06               	subwf	___lwdiv@dividend^0,w,c
 11056  004B2C  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 11057  004B2E  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11058  004B30  A0D8               	btfss	status,0,c
 11059  004B32  EF9D  F025         	goto	u10811
 11060  004B36  EF9F  F025         	goto	u10810
 11061  004B3A                     u10811:
 11062  004B3A  EFA4  F025         	goto	l9445
 11063  004B3E                     u10810:
 11064  004B3E  5008               	movf	___lwdiv@divisor^0,w,c
 11065  004B40  5E06               	subwf	___lwdiv@dividend^0,f,c
 11066  004B42  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 11067  004B44  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11068  004B46  800B               	bsf	___lwdiv@quotient^0,0,c
 11069  004B48                     l9445:
 11070  004B48  90D8               	bcf	status,0,c
 11071  004B4A  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11072  004B4C  3208               	rrcf	___lwdiv@divisor^0,f,c
 11073  004B4E  2E0A               	decfsz	___lwdiv@counter^0,f,c
 11074  004B50  EF91  F025         	goto	l9437
 11075  004B54                     l1420:
 11076  004B54  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
 11077  004B58  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11078  004B5C  0012               	return		;funcret
 11079  004B5E                     __end_of___lwdiv:
 11080                           	opt callstack 0
 11081                           
 11082 ;; *************** function ___fladd *****************
 11083 ;; Defined at:
 11084 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;  b               4   51[COMRAM] unsigned int 
 11087 ;;  a               4   55[COMRAM] unsigned int 
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;  grs             1   66[COMRAM] unsigned char 
 11090 ;;  bexp            1   65[COMRAM] unsigned char 
 11091 ;;  aexp            1   64[COMRAM] unsigned char 
 11092 ;;  signs           1   63[COMRAM] unsigned char 
 11093 ;; Return value:  Size  Location     Type
 11094 ;;                  4   51[COMRAM] unsigned char 
 11095 ;; Registers used:
 11096 ;;		wreg, status,2, status,0
 11097 ;; Tracked objects:
 11098 ;;		On entry : 0/0
 11099 ;;		On exit  : 0/0
 11100 ;;		Unchanged: 0/0
 11101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11102 ;;      Params:         8       0       0       0       0       0       0       0       0
 11103 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11104 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11105 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11106 ;;Total ram usage:       16 bytes
 11107 ;; Hardware stack levels used:    1
 11108 ;; Hardware stack levels required when called:    2
 11109 ;; This function calls:
 11110 ;;		Nothing
 11111 ;; This function is called by:
 11112 ;;		_leerSensores
 11113 ;;		_PID
 11114 ;;		_efgtoa
 11115 ;;		___flsub
 11116 ;;		_roundf
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           	psect	text46
 11121  00110E                     __ptext46:
 11122                           	opt callstack 0
 11123  00110E                     ___fladd:
 11124                           	opt callstack 22
 11125  00110E  5037               	movf	(___fladd@b+3)^0,w,c
 11126  001110  0B80               	andlw	128
 11127  001112  6E40               	movwf	___fladd@signs^0,c
 11128  001114  5037               	movf	(___fladd@b+3)^0,w,c
 11129  001116  2437               	addwf	(___fladd@b+3)^0,w,c
 11130  001118  6E42               	movwf	___fladd@bexp^0,c
 11131  00111A  AE36               	btfss	(___fladd@b+2)^0,7,c
 11132  00111C  EF92  F008         	goto	u8081
 11133  001120  EF94  F008         	goto	u8080
 11134  001124                     u8081:
 11135  001124  EF95  F008         	goto	l7917
 11136  001128                     u8080:
 11137  001128  8042               	bsf	___fladd@bexp^0,0,c
 11138  00112A                     l7917:
 11139  00112A  5042               	movf	___fladd@bexp^0,w,c
 11140  00112C  B4D8               	btfsc	status,2,c
 11141  00112E  EF9B  F008         	goto	u8091
 11142  001132  EF9D  F008         	goto	u8090
 11143  001136                     u8091:
 11144  001136  EFB2  F008         	goto	l7927
 11145  00113A                     u8090:
 11146  00113A  2842               	incf	___fladd@bexp^0,w,c
 11147  00113C  A4D8               	btfss	status,2,c
 11148  00113E  EFA3  F008         	goto	u8101
 11149  001142  EFA5  F008         	goto	u8100
 11150  001146                     u8101:
 11151  001146  EFAD  F008         	goto	l7923
 11152  00114A                     u8100:
 11153  00114A  0E00               	movlw	0
 11154  00114C  6E34               	movwf	___fladd@b^0,c
 11155  00114E  0E00               	movlw	0
 11156  001150  6E35               	movwf	(___fladd@b+1)^0,c
 11157  001152  0E00               	movlw	0
 11158  001154  6E36               	movwf	(___fladd@b+2)^0,c
 11159  001156  0E00               	movlw	0
 11160  001158  6E37               	movwf	(___fladd@b+3)^0,c
 11161  00115A                     l7923:
 11162  00115A  8E36               	bsf	(___fladd@b+2)^0,7,c
 11163  00115C  0E00               	movlw	0
 11164  00115E  6E37               	movwf	(___fladd@b+3)^0,c
 11165  001160  EFBA  F008         	goto	l7929
 11166  001164                     l7927:
 11167  001164  0E00               	movlw	0
 11168  001166  6E34               	movwf	___fladd@b^0,c
 11169  001168  0E00               	movlw	0
 11170  00116A  6E35               	movwf	(___fladd@b+1)^0,c
 11171  00116C  0E00               	movlw	0
 11172  00116E  6E36               	movwf	(___fladd@b+2)^0,c
 11173  001170  0E00               	movlw	0
 11174  001172  6E37               	movwf	(___fladd@b+3)^0,c
 11175  001174                     l7929:
 11176  001174  503B               	movf	(___fladd@a+3)^0,w,c
 11177  001176  0B80               	andlw	128
 11178  001178  6E41               	movwf	___fladd@aexp^0,c
 11179  00117A  5040               	movf	___fladd@signs^0,w,c
 11180  00117C  1841               	xorwf	___fladd@aexp^0,w,c
 11181  00117E  B4D8               	btfsc	status,2,c
 11182  001180  EFC4  F008         	goto	u8111
 11183  001184  EFC6  F008         	goto	u8110
 11184  001188                     u8111:
 11185  001188  EFC7  F008         	goto	l7935
 11186  00118C                     u8110:
 11187  00118C  8C40               	bsf	___fladd@signs^0,6,c
 11188  00118E                     l7935:
 11189  00118E  503B               	movf	(___fladd@a+3)^0,w,c
 11190  001190  243B               	addwf	(___fladd@a+3)^0,w,c
 11191  001192  6E41               	movwf	___fladd@aexp^0,c
 11192  001194  AE3A               	btfss	(___fladd@a+2)^0,7,c
 11193  001196  EFCF  F008         	goto	u8121
 11194  00119A  EFD1  F008         	goto	u8120
 11195  00119E                     u8121:
 11196  00119E  EFD2  F008         	goto	l7941
 11197  0011A2                     u8120:
 11198  0011A2  8041               	bsf	___fladd@aexp^0,0,c
 11199  0011A4                     l7941:
 11200  0011A4  5041               	movf	___fladd@aexp^0,w,c
 11201  0011A6  B4D8               	btfsc	status,2,c
 11202  0011A8  EFD8  F008         	goto	u8131
 11203  0011AC  EFDA  F008         	goto	u8130
 11204  0011B0                     u8131:
 11205  0011B0  EFEF  F008         	goto	l7951
 11206  0011B4                     u8130:
 11207  0011B4  2841               	incf	___fladd@aexp^0,w,c
 11208  0011B6  A4D8               	btfss	status,2,c
 11209  0011B8  EFE0  F008         	goto	u8141
 11210  0011BC  EFE2  F008         	goto	u8140
 11211  0011C0                     u8141:
 11212  0011C0  EFEA  F008         	goto	l7947
 11213  0011C4                     u8140:
 11214  0011C4  0E00               	movlw	0
 11215  0011C6  6E38               	movwf	___fladd@a^0,c
 11216  0011C8  0E00               	movlw	0
 11217  0011CA  6E39               	movwf	(___fladd@a+1)^0,c
 11218  0011CC  0E00               	movlw	0
 11219  0011CE  6E3A               	movwf	(___fladd@a+2)^0,c
 11220  0011D0  0E00               	movlw	0
 11221  0011D2  6E3B               	movwf	(___fladd@a+3)^0,c
 11222  0011D4                     l7947:
 11223  0011D4  8E3A               	bsf	(___fladd@a+2)^0,7,c
 11224  0011D6  0E00               	movlw	0
 11225  0011D8  6E3B               	movwf	(___fladd@a+3)^0,c
 11226  0011DA  EFF7  F008         	goto	l7953
 11227  0011DE                     l7951:
 11228  0011DE  0E00               	movlw	0
 11229  0011E0  6E38               	movwf	___fladd@a^0,c
 11230  0011E2  0E00               	movlw	0
 11231  0011E4  6E39               	movwf	(___fladd@a+1)^0,c
 11232  0011E6  0E00               	movlw	0
 11233  0011E8  6E3A               	movwf	(___fladd@a+2)^0,c
 11234  0011EA  0E00               	movlw	0
 11235  0011EC  6E3B               	movwf	(___fladd@a+3)^0,c
 11236  0011EE                     l7953:
 11237  0011EE  5042               	movf	___fladd@bexp^0,w,c
 11238  0011F0  5C41               	subwf	___fladd@aexp^0,w,c
 11239  0011F2  B0D8               	btfsc	status,0,c
 11240  0011F4  EFFE  F008         	goto	u8151
 11241  0011F8  EF00  F009         	goto	u8150
 11242  0011FC                     u8151:
 11243  0011FC  EF27  F009         	goto	l7989
 11244  001200                     u8150:
 11245  001200  AC40               	btfss	___fladd@signs^0,6,c
 11246  001202  EF05  F009         	goto	u8161
 11247  001206  EF07  F009         	goto	u8160
 11248  00120A                     u8161:
 11249  00120A  EF09  F009         	goto	l7959
 11250  00120E                     u8160:
 11251  00120E  0E80               	movlw	128
 11252  001210  1A40               	xorwf	___fladd@signs^0,f,c
 11253  001212                     l7959:
 11254  001212  C042  F043         	movff	___fladd@bexp,___fladd@grs
 11255  001216  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11256  00121A  C043  F041         	movff	___fladd@grs,___fladd@aexp
 11257  00121E  C034  F043         	movff	___fladd@b,___fladd@grs
 11258  001222  C038  F034         	movff	___fladd@a,___fladd@b
 11259  001226  C043  F038         	movff	___fladd@grs,___fladd@a
 11260  00122A  C035  F043         	movff	___fladd@b+1,___fladd@grs
 11261  00122E  C039  F035         	movff	___fladd@a+1,___fladd@b+1
 11262  001232  C043  F039         	movff	___fladd@grs,___fladd@a+1
 11263  001236  C036  F043         	movff	___fladd@b+2,___fladd@grs
 11264  00123A  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
 11265  00123E  C043  F03A         	movff	___fladd@grs,___fladd@a+2
 11266  001242  C037  F043         	movff	___fladd@b+3,___fladd@grs
 11267  001246  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
 11268  00124A  C043  F03B         	movff	___fladd@grs,___fladd@a+3
 11269  00124E                     l7989:
 11270  00124E  0E00               	movlw	0
 11271  001250  6E43               	movwf	___fladd@grs^0,c
 11272  001252  5042               	movf	___fladd@bexp^0,w,c
 11273  001254  C041  F03C         	movff	___fladd@aexp,??___fladd
 11274  001258  6A3D               	clrf	(??___fladd+1)^0,c
 11275  00125A  5E3C               	subwf	??___fladd^0,f,c
 11276  00125C  0E00               	movlw	0
 11277  00125E  5A3D               	subwfb	(??___fladd+1)^0,f,c
 11278  001260  BE3D               	btfsc	(??___fladd+1)^0,7,c
 11279  001262  EF3C  F009         	goto	u8171
 11280  001266  503D               	movf	(??___fladd+1)^0,w,c
 11281  001268  E109               	bnz	u8170
 11282  00126A  0E1A               	movlw	26
 11283  00126C  5C3C               	subwf	??___fladd^0,w,c
 11284  00126E  A0D8               	btfss	status,0,c
 11285  001270  EF3C  F009         	goto	u8171
 11286  001274  EF3E  F009         	goto	u8170
 11287  001278                     u8171:
 11288  001278  EF75  F009         	goto	l1458
 11289  00127C                     u8170:
 11290  00127C  5034               	movf	___fladd@b^0,w,c
 11291  00127E  1035               	iorwf	(___fladd@b+1)^0,w,c
 11292  001280  1036               	iorwf	(___fladd@b+2)^0,w,c
 11293  001282  1037               	iorwf	(___fladd@b+3)^0,w,c
 11294  001284  A4D8               	btfss	status,2,c
 11295  001286  EF47  F009         	goto	u8181
 11296  00128A  EF4A  F009         	goto	u8180
 11297  00128E                     u8181:
 11298  00128E  0E01               	movlw	1
 11299  001290  EF4B  F009         	goto	u8190
 11300  001294                     u8180:
 11301  001294  0E00               	movlw	0
 11302  001296                     u8190:
 11303  001296  6E43               	movwf	___fladd@grs^0,c
 11304  001298  0E00               	movlw	0
 11305  00129A  6E34               	movwf	___fladd@b^0,c
 11306  00129C  0E00               	movlw	0
 11307  00129E  6E35               	movwf	(___fladd@b+1)^0,c
 11308  0012A0  0E00               	movlw	0
 11309  0012A2  6E36               	movwf	(___fladd@b+2)^0,c
 11310  0012A4  0E00               	movlw	0
 11311  0012A6  6E37               	movwf	(___fladd@b+3)^0,c
 11312  0012A8  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11313  0012AC  EF7E  F009         	goto	l1457
 11314  0012B0                     l1459:
 11315  0012B0  A043               	btfss	___fladd@grs^0,0,c
 11316  0012B2  EF5D  F009         	goto	u8201
 11317  0012B6  EF5F  F009         	goto	u8200
 11318  0012BA                     u8201:
 11319  0012BA  EF65  F009         	goto	l8001
 11320  0012BE                     u8200:
 11321  0012BE  90D8               	bcf	status,0,c
 11322  0012C0  3043               	rrcf	___fladd@grs^0,w,c
 11323  0012C2  0901               	iorlw	1
 11324  0012C4  6E43               	movwf	___fladd@grs^0,c
 11325  0012C6  EF67  F009         	goto	l8003
 11326  0012CA                     l8001:
 11327  0012CA  90D8               	bcf	status,0,c
 11328  0012CC  3243               	rrcf	___fladd@grs^0,f,c
 11329  0012CE                     l8003:
 11330  0012CE  A034               	btfss	___fladd@b^0,0,c
 11331  0012D0  EF6C  F009         	goto	u8211
 11332  0012D4  EF6E  F009         	goto	u8210
 11333  0012D8                     u8211:
 11334  0012D8  EF6F  F009         	goto	l8007
 11335  0012DC                     u8210:
 11336  0012DC  8E43               	bsf	___fladd@grs^0,7,c
 11337  0012DE                     l8007:
 11338  0012DE  3437               	rlcf	(___fladd@b+3)^0,w,c
 11339  0012E0  3237               	rrcf	(___fladd@b+3)^0,f,c
 11340  0012E2  3236               	rrcf	(___fladd@b+2)^0,f,c
 11341  0012E4  3235               	rrcf	(___fladd@b+1)^0,f,c
 11342  0012E6  3234               	rrcf	___fladd@b^0,f,c
 11343  0012E8  2A42               	incf	___fladd@bexp^0,f,c
 11344  0012EA                     l1458:
 11345  0012EA  5041               	movf	___fladd@aexp^0,w,c
 11346  0012EC  5C42               	subwf	___fladd@bexp^0,w,c
 11347  0012EE  A0D8               	btfss	status,0,c
 11348  0012F0  EF7C  F009         	goto	u8221
 11349  0012F4  EF7E  F009         	goto	u8220
 11350  0012F8                     u8221:
 11351  0012F8  EF58  F009         	goto	l1459
 11352  0012FC                     u8220:
 11353  0012FC                     l1457:
 11354  0012FC  BC40               	btfsc	___fladd@signs^0,6,c
 11355  0012FE  EF83  F009         	goto	u8231
 11356  001302  EF85  F009         	goto	u8230
 11357  001306                     u8231:
 11358  001306  EFC5  F009         	goto	l8035
 11359  00130A                     u8230:
 11360  00130A  5042               	movf	___fladd@bexp^0,w,c
 11361  00130C  A4D8               	btfss	status,2,c
 11362  00130E  EF8B  F009         	goto	u8241
 11363  001312  EF8D  F009         	goto	u8240
 11364  001316                     u8241:
 11365  001316  EF97  F009         	goto	l8017
 11366  00131A                     u8240:
 11367  00131A  0E00               	movlw	0
 11368  00131C  6E34               	movwf	?___fladd^0,c
 11369  00131E  0E00               	movlw	0
 11370  001320  6E35               	movwf	(?___fladd+1)^0,c
 11371  001322  0E00               	movlw	0
 11372  001324  6E36               	movwf	(?___fladd+2)^0,c
 11373  001326  0E00               	movlw	0
 11374  001328  6E37               	movwf	(?___fladd+3)^0,c
 11375  00132A  EFE6  F00A         	goto	l1466
 11376  00132E                     l8017:
 11377  00132E  5038               	movf	___fladd@a^0,w,c
 11378  001330  2634               	addwf	___fladd@b^0,f,c
 11379  001332  5039               	movf	(___fladd@a+1)^0,w,c
 11380  001334  2235               	addwfc	(___fladd@b+1)^0,f,c
 11381  001336  503A               	movf	(___fladd@a+2)^0,w,c
 11382  001338  2236               	addwfc	(___fladd@b+2)^0,f,c
 11383  00133A  503B               	movf	(___fladd@a+3)^0,w,c
 11384  00133C  2237               	addwfc	(___fladd@b+3)^0,f,c
 11385  00133E  A037               	btfss	(___fladd@b+3)^0,0,c
 11386  001340  EFA4  F009         	goto	u8251
 11387  001344  EFA6  F009         	goto	u8250
 11388  001348                     u8251:
 11389  001348  EF52  F00A         	goto	l8071
 11390  00134C                     u8250:
 11391  00134C  A043               	btfss	___fladd@grs^0,0,c
 11392  00134E  EFAB  F009         	goto	u8261
 11393  001352  EFAD  F009         	goto	u8260
 11394  001356                     u8261:
 11395  001356  EFB3  F009         	goto	l8025
 11396  00135A                     u8260:
 11397  00135A  90D8               	bcf	status,0,c
 11398  00135C  3043               	rrcf	___fladd@grs^0,w,c
 11399  00135E  0901               	iorlw	1
 11400  001360  6E43               	movwf	___fladd@grs^0,c
 11401  001362  EFB5  F009         	goto	l8027
 11402  001366                     l8025:
 11403  001366  90D8               	bcf	status,0,c
 11404  001368  3243               	rrcf	___fladd@grs^0,f,c
 11405  00136A                     l8027:
 11406  00136A  A034               	btfss	___fladd@b^0,0,c
 11407  00136C  EFBA  F009         	goto	u8271
 11408  001370  EFBC  F009         	goto	u8270
 11409  001374                     u8271:
 11410  001374  EFBD  F009         	goto	l8031
 11411  001378                     u8270:
 11412  001378  8E43               	bsf	___fladd@grs^0,7,c
 11413  00137A                     l8031:
 11414  00137A  3437               	rlcf	(___fladd@b+3)^0,w,c
 11415  00137C  3237               	rrcf	(___fladd@b+3)^0,f,c
 11416  00137E  3236               	rrcf	(___fladd@b+2)^0,f,c
 11417  001380  3235               	rrcf	(___fladd@b+1)^0,f,c
 11418  001382  3234               	rrcf	___fladd@b^0,f,c
 11419  001384  2A42               	incf	___fladd@bexp^0,f,c
 11420  001386  EF52  F00A         	goto	l8071
 11421  00138A                     l8035:
 11422  00138A  5038               	movf	___fladd@a^0,w,c
 11423  00138C  5C34               	subwf	___fladd@b^0,w,c
 11424  00138E  5039               	movf	(___fladd@a+1)^0,w,c
 11425  001390  5835               	subwfb	(___fladd@b+1)^0,w,c
 11426  001392  503A               	movf	(___fladd@a+2)^0,w,c
 11427  001394  5836               	subwfb	(___fladd@b+2)^0,w,c
 11428  001396  5037               	movf	(___fladd@b+3)^0,w,c
 11429  001398  0A80               	xorlw	128
 11430  00139A  6E3C               	movwf	??___fladd^0,c
 11431  00139C  503B               	movf	(___fladd@a+3)^0,w,c
 11432  00139E  0A80               	xorlw	128
 11433  0013A0  583C               	subwfb	??___fladd^0,w,c
 11434  0013A2  B0D8               	btfsc	status,0,c
 11435  0013A4  EFD6  F009         	goto	u8281
 11436  0013A8  EFD8  F009         	goto	u8280
 11437  0013AC                     u8281:
 11438  0013AC  EF03  F00A         	goto	l8045
 11439  0013B0                     u8280:
 11440  0013B0  5034               	movf	___fladd@b^0,w,c
 11441  0013B2  5C38               	subwf	___fladd@a^0,w,c
 11442  0013B4  6E3C               	movwf	??___fladd^0,c
 11443  0013B6  5035               	movf	(___fladd@b+1)^0,w,c
 11444  0013B8  5839               	subwfb	(___fladd@a+1)^0,w,c
 11445  0013BA  6E3D               	movwf	(??___fladd+1)^0,c
 11446  0013BC  5036               	movf	(___fladd@b+2)^0,w,c
 11447  0013BE  583A               	subwfb	(___fladd@a+2)^0,w,c
 11448  0013C0  6E3E               	movwf	(??___fladd+2)^0,c
 11449  0013C2  5037               	movf	(___fladd@b+3)^0,w,c
 11450  0013C4  583B               	subwfb	(___fladd@a+3)^0,w,c
 11451  0013C6  6E3F               	movwf	(??___fladd+3)^0,c
 11452  0013C8  0EFF               	movlw	255
 11453  0013CA  243C               	addwf	??___fladd^0,w,c
 11454  0013CC  6E34               	movwf	___fladd@b^0,c
 11455  0013CE  0EFF               	movlw	255
 11456  0013D0  203D               	addwfc	(??___fladd+1)^0,w,c
 11457  0013D2  6E35               	movwf	(___fladd@b+1)^0,c
 11458  0013D4  0EFF               	movlw	255
 11459  0013D6  203E               	addwfc	(??___fladd+2)^0,w,c
 11460  0013D8  6E36               	movwf	(___fladd@b+2)^0,c
 11461  0013DA  0EFF               	movlw	255
 11462  0013DC  203F               	addwfc	(??___fladd+3)^0,w,c
 11463  0013DE  6E37               	movwf	(___fladd@b+3)^0,c
 11464  0013E0  0E80               	movlw	128
 11465  0013E2  1A40               	xorwf	___fladd@signs^0,f,c
 11466  0013E4  6C43               	negf	___fladd@grs^0,c
 11467  0013E6  5043               	movf	___fladd@grs^0,w,c
 11468  0013E8  A4D8               	btfss	status,2,c
 11469  0013EA  EFF9  F009         	goto	u8291
 11470  0013EE  EFFB  F009         	goto	u8290
 11471  0013F2                     u8291:
 11472  0013F2  EF0B  F00A         	goto	l1474
 11473  0013F6                     u8290:
 11474  0013F6  0E01               	movlw	1
 11475  0013F8  2634               	addwf	___fladd@b^0,f,c
 11476  0013FA  0E00               	movlw	0
 11477  0013FC  2235               	addwfc	(___fladd@b+1)^0,f,c
 11478  0013FE  2236               	addwfc	(___fladd@b+2)^0,f,c
 11479  001400  2237               	addwfc	(___fladd@b+3)^0,f,c
 11480  001402  EF0B  F00A         	goto	l1474
 11481  001406                     l8045:
 11482  001406  5038               	movf	___fladd@a^0,w,c
 11483  001408  5E34               	subwf	___fladd@b^0,f,c
 11484  00140A  5039               	movf	(___fladd@a+1)^0,w,c
 11485  00140C  5A35               	subwfb	(___fladd@b+1)^0,f,c
 11486  00140E  503A               	movf	(___fladd@a+2)^0,w,c
 11487  001410  5A36               	subwfb	(___fladd@b+2)^0,f,c
 11488  001412  503B               	movf	(___fladd@a+3)^0,w,c
 11489  001414  5A37               	subwfb	(___fladd@b+3)^0,f,c
 11490  001416                     l1474:
 11491  001416  5034               	movf	___fladd@b^0,w,c
 11492  001418  1035               	iorwf	(___fladd@b+1)^0,w,c
 11493  00141A  1036               	iorwf	(___fladd@b+2)^0,w,c
 11494  00141C  1037               	iorwf	(___fladd@b+3)^0,w,c
 11495  00141E  A4D8               	btfss	status,2,c
 11496  001420  EF14  F00A         	goto	u8301
 11497  001424  EF16  F00A         	goto	u8300
 11498  001428                     u8301:
 11499  001428  EF4B  F00A         	goto	l8069
 11500  00142C                     u8300:
 11501  00142C  5043               	movf	___fladd@grs^0,w,c
 11502  00142E  A4D8               	btfss	status,2,c
 11503  001430  EF1C  F00A         	goto	u8311
 11504  001434  EF1E  F00A         	goto	u8310
 11505  001438                     u8311:
 11506  001438  EF4B  F00A         	goto	l8069
 11507  00143C                     u8310:
 11508  00143C  0E00               	movlw	0
 11509  00143E  6E34               	movwf	?___fladd^0,c
 11510  001440  0E00               	movlw	0
 11511  001442  6E35               	movwf	(?___fladd+1)^0,c
 11512  001444  0E00               	movlw	0
 11513  001446  6E36               	movwf	(?___fladd+2)^0,c
 11514  001448  0E00               	movlw	0
 11515  00144A  6E37               	movwf	(?___fladd+3)^0,c
 11516  00144C  EFE6  F00A         	goto	l1466
 11517  001450                     l8053:
 11518  001450  90D8               	bcf	status,0,c
 11519  001452  3634               	rlcf	___fladd@b^0,f,c
 11520  001454  3635               	rlcf	(___fladd@b+1)^0,f,c
 11521  001456  3636               	rlcf	(___fladd@b+2)^0,f,c
 11522  001458  3637               	rlcf	(___fladd@b+3)^0,f,c
 11523  00145A  AE43               	btfss	___fladd@grs^0,7,c
 11524  00145C  EF32  F00A         	goto	u8321
 11525  001460  EF34  F00A         	goto	u8320
 11526  001464                     u8321:
 11527  001464  EF35  F00A         	goto	l8059
 11528  001468                     u8320:
 11529  001468  8034               	bsf	___fladd@b^0,0,c
 11530  00146A                     l8059:
 11531  00146A  A043               	btfss	___fladd@grs^0,0,c
 11532  00146C  EF3A  F00A         	goto	u8331
 11533  001470  EF3C  F00A         	goto	u8330
 11534  001474                     u8331:
 11535  001474  EF40  F00A         	goto	l8063
 11536  001478                     u8330:
 11537  001478  80D8               	bsf	status,0,c
 11538  00147A  3643               	rlcf	___fladd@grs^0,f,c
 11539  00147C  EF42  F00A         	goto	l8065
 11540  001480                     l8063:
 11541  001480  90D8               	bcf	status,0,c
 11542  001482  3643               	rlcf	___fladd@grs^0,f,c
 11543  001484                     l8065:
 11544  001484  5042               	movf	___fladd@bexp^0,w,c
 11545  001486  B4D8               	btfsc	status,2,c
 11546  001488  EF48  F00A         	goto	u8341
 11547  00148C  EF4A  F00A         	goto	u8340
 11548  001490                     u8341:
 11549  001490  EF4B  F00A         	goto	l8069
 11550  001494                     u8340:
 11551  001494  0642               	decf	___fladd@bexp^0,f,c
 11552  001496                     l8069:
 11553  001496  AE36               	btfss	(___fladd@b+2)^0,7,c
 11554  001498  EF50  F00A         	goto	u8351
 11555  00149C  EF52  F00A         	goto	u8350
 11556  0014A0                     u8351:
 11557  0014A0  EF28  F00A         	goto	l8053
 11558  0014A4                     u8350:
 11559  0014A4                     l8071:
 11560  0014A4  0E00               	movlw	0
 11561  0014A6  6E41               	movwf	___fladd@aexp^0,c
 11562  0014A8  AE43               	btfss	___fladd@grs^0,7,c
 11563  0014AA  EF59  F00A         	goto	u8361
 11564  0014AE  EF5B  F00A         	goto	u8360
 11565  0014B2                     u8361:
 11566  0014B2  EF73  F00A         	goto	l1483
 11567  0014B6                     u8360:
 11568  0014B6  C043  F03C         	movff	___fladd@grs,??___fladd
 11569  0014BA  0E7F               	movlw	127
 11570  0014BC  163C               	andwf	??___fladd^0,f,c
 11571  0014BE  B4D8               	btfsc	status,2,c
 11572  0014C0  EF64  F00A         	goto	u8371
 11573  0014C4  EF66  F00A         	goto	u8370
 11574  0014C8                     u8371:
 11575  0014C8  EF6A  F00A         	goto	l1484
 11576  0014CC                     u8370:
 11577  0014CC                     l8077:
 11578  0014CC  0E01               	movlw	1
 11579  0014CE  6E41               	movwf	___fladd@aexp^0,c
 11580  0014D0  EF73  F00A         	goto	l1483
 11581  0014D4                     l1484:
 11582  0014D4  A034               	btfss	___fladd@b^0,0,c
 11583  0014D6  EF6F  F00A         	goto	u8381
 11584  0014DA  EF71  F00A         	goto	u8380
 11585  0014DE                     u8381:
 11586  0014DE  EF73  F00A         	goto	l1483
 11587  0014E2                     u8380:
 11588  0014E2  EF66  F00A         	goto	l8077
 11589  0014E6                     l1483:
 11590  0014E6  5041               	movf	___fladd@aexp^0,w,c
 11591  0014E8  B4D8               	btfsc	status,2,c
 11592  0014EA  EF79  F00A         	goto	u8391
 11593  0014EE  EF7B  F00A         	goto	u8390
 11594  0014F2                     u8391:
 11595  0014F2  EFA6  F00A         	goto	l8089
 11596  0014F6                     u8390:
 11597  0014F6  0E01               	movlw	1
 11598  0014F8  2634               	addwf	___fladd@b^0,f,c
 11599  0014FA  0E00               	movlw	0
 11600  0014FC  2235               	addwfc	(___fladd@b+1)^0,f,c
 11601  0014FE  2236               	addwfc	(___fladd@b+2)^0,f,c
 11602  001500  2237               	addwfc	(___fladd@b+3)^0,f,c
 11603  001502  A037               	btfss	(___fladd@b+3)^0,0,c
 11604  001504  EF86  F00A         	goto	u8401
 11605  001508  EF88  F00A         	goto	u8400
 11606  00150C                     u8401:
 11607  00150C  EFA6  F00A         	goto	l8089
 11608  001510                     u8400:
 11609  001510  C034  F03C         	movff	___fladd@b,??___fladd
 11610  001514  C035  F03D         	movff	___fladd@b+1,??___fladd+1
 11611  001518  C036  F03E         	movff	___fladd@b+2,??___fladd+2
 11612  00151C  C037  F03F         	movff	___fladd@b+3,??___fladd+3
 11613  001520  343F               	rlcf	(??___fladd+3)^0,w,c
 11614  001522  323F               	rrcf	(??___fladd+3)^0,f,c
 11615  001524  323E               	rrcf	(??___fladd+2)^0,f,c
 11616  001526  323D               	rrcf	(??___fladd+1)^0,f,c
 11617  001528  323C               	rrcf	??___fladd^0,f,c
 11618  00152A  C03C  F034         	movff	??___fladd,___fladd@b
 11619  00152E  C03D  F035         	movff	??___fladd+1,___fladd@b+1
 11620  001532  C03E  F036         	movff	??___fladd+2,___fladd@b+2
 11621  001536  C03F  F037         	movff	??___fladd+3,___fladd@b+3
 11622  00153A  2842               	incf	___fladd@bexp^0,w,c
 11623  00153C  B4D8               	btfsc	status,2,c
 11624  00153E  EFA3  F00A         	goto	u8411
 11625  001542  EFA5  F00A         	goto	u8410
 11626  001546                     u8411:
 11627  001546  EFA6  F00A         	goto	l8089
 11628  00154A                     u8410:
 11629  00154A  2A42               	incf	___fladd@bexp^0,f,c
 11630  00154C                     l8089:
 11631  00154C  2842               	incf	___fladd@bexp^0,w,c
 11632  00154E  B4D8               	btfsc	status,2,c
 11633  001550  EFAC  F00A         	goto	u8421
 11634  001554  EFAE  F00A         	goto	u8420
 11635  001558                     u8421:
 11636  001558  EFB6  F00A         	goto	l8093
 11637  00155C                     u8420:
 11638  00155C  5042               	movf	___fladd@bexp^0,w,c
 11639  00155E  A4D8               	btfss	status,2,c
 11640  001560  EFB4  F00A         	goto	u8431
 11641  001564  EFB6  F00A         	goto	u8430
 11642  001568                     u8431:
 11643  001568  EFC8  F00A         	goto	l8097
 11644  00156C                     u8430:
 11645  00156C                     l8093:
 11646  00156C  0E00               	movlw	0
 11647  00156E  6E34               	movwf	___fladd@b^0,c
 11648  001570  0E00               	movlw	0
 11649  001572  6E35               	movwf	(___fladd@b+1)^0,c
 11650  001574  0E00               	movlw	0
 11651  001576  6E36               	movwf	(___fladd@b+2)^0,c
 11652  001578  0E00               	movlw	0
 11653  00157A  6E37               	movwf	(___fladd@b+3)^0,c
 11654  00157C  5042               	movf	___fladd@bexp^0,w,c
 11655  00157E  A4D8               	btfss	status,2,c
 11656  001580  EFC4  F00A         	goto	u8441
 11657  001584  EFC6  F00A         	goto	u8440
 11658  001588                     u8441:
 11659  001588  EFC8  F00A         	goto	l8097
 11660  00158C                     u8440:
 11661  00158C  0E00               	movlw	0
 11662  00158E  6E40               	movwf	___fladd@signs^0,c
 11663  001590                     l8097:
 11664  001590  A042               	btfss	___fladd@bexp^0,0,c
 11665  001592  EFCD  F00A         	goto	u8451
 11666  001596  EFCF  F00A         	goto	u8450
 11667  00159A                     u8451:
 11668  00159A  EFD2  F00A         	goto	l8101
 11669  00159E                     u8450:
 11670  00159E  8E36               	bsf	(___fladd@b+2)^0,7,c
 11671  0015A0  EFD3  F00A         	goto	l8103
 11672  0015A4                     l8101:
 11673  0015A4  9E36               	bcf	(___fladd@b+2)^0,7,c
 11674  0015A6                     l8103:
 11675  0015A6  90D8               	bcf	status,0,c
 11676  0015A8  3042               	rrcf	___fladd@bexp^0,w,c
 11677  0015AA  6E37               	movwf	(___fladd@b+3)^0,c
 11678  0015AC  AE40               	btfss	___fladd@signs^0,7,c
 11679  0015AE  EFDB  F00A         	goto	u8461
 11680  0015B2  EFDD  F00A         	goto	u8460
 11681  0015B6                     u8461:
 11682  0015B6  EFDE  F00A         	goto	l8109
 11683  0015BA                     u8460:
 11684  0015BA  8E37               	bsf	(___fladd@b+3)^0,7,c
 11685  0015BC                     l8109:
 11686  0015BC  C034  F034         	movff	___fladd@b,?___fladd
 11687  0015C0  C035  F035         	movff	___fladd@b+1,?___fladd+1
 11688  0015C4  C036  F036         	movff	___fladd@b+2,?___fladd+2
 11689  0015C8  C037  F037         	movff	___fladd@b+3,?___fladd+3
 11690  0015CC                     l1466:
 11691  0015CC  0012               	return		;funcret
 11692  0015CE                     __end_of___fladd:
 11693                           	opt callstack 0
 11694                           
 11695 ;; *************** function _hayCruce *****************
 11696 ;; Defined at:
 11697 ;;		line 712 in file "main.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;  caminosRecor    2   63[COMRAM] PTR unsigned char 
 11700 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 11701 ;;  investigando    1   65[COMRAM] unsigned char 
 11702 ;; Auto vars:     Size  Location     Type
 11703 ;;  paredIzquier    1   69[COMRAM] unsigned char 
 11704 ;;  paredDerecha    1   68[COMRAM] unsigned char 
 11705 ;;  paredEnfrent    1   67[COMRAM] unsigned char 
 11706 ;;  contCaminos     1   66[COMRAM] unsigned char 
 11707 ;; Return value:  Size  Location     Type
 11708 ;;                  1    wreg      unsigned char 
 11709 ;; Registers used:
 11710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11711 ;; Tracked objects:
 11712 ;;		On entry : 0/0
 11713 ;;		On exit  : 0/0
 11714 ;;		Unchanged: 0/0
 11715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11716 ;;      Params:         3       0       0       0       0       0       0       0       0
 11717 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11718 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11719 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11720 ;;Total ram usage:        7 bytes
 11721 ;; Hardware stack levels used:    1
 11722 ;; Hardware stack levels required when called:    3
 11723 ;; This function calls:
 11724 ;;		___flge
 11725 ;; This function is called by:
 11726 ;;		_comportamientoBasico
 11727 ;; This function uses a non-reentrant model
 11728 ;;
 11729                           
 11730                           	psect	text47
 11731  003770                     __ptext47:
 11732                           	opt callstack 0
 11733  003770                     _hayCruce:
 11734                           	opt callstack 26
 11735  003770                     
 11736                           ;main.c: 714:     T_UBYTE contCaminos = 0;
 11737  003770  0E00               	movlw	0
 11738  003772  6E43               	movwf	hayCruce@contCaminos^0,c
 11739                           
 11740                           ;main.c: 715:     T_BOOL paredEnfrente = 0, paredDerecha = 0, paredIzquierda = 0;
 11741  003774  0E00               	movlw	0
 11742  003776  6E44               	movwf	hayCruce@paredEnfrente^0,c
 11743  003778  0E00               	movlw	0
 11744  00377A  6E45               	movwf	hayCruce@paredDerecha^0,c
 11745  00377C  0E00               	movlw	0
 11746  00377E  6E46               	movwf	hayCruce@paredIzquierda^0,c
 11747  003780                     
 11748                           ;main.c: 717:     if (sensorEnfrente > 14) {
 11749  003780  0E00               	movlw	0
 11750  003782  6E34               	movwf	___flge@ff1^0,c
 11751  003784  0E00               	movlw	0
 11752  003786  6E35               	movwf	(___flge@ff1+1)^0,c
 11753  003788  0E60               	movlw	96
 11754  00378A  6E36               	movwf	(___flge@ff1+2)^0,c
 11755  00378C  0E41               	movlw	65
 11756  00378E  6E37               	movwf	(___flge@ff1+3)^0,c
 11757  003790  C124  F038         	movff	_sensorEnfrente,___flge@ff2
 11758  003794  C125  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
 11759  003798  C126  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
 11760  00379C  C127  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
 11761  0037A0  ECA6  F01F         	call	___flge	;wreg free
 11762  0037A4  B0D8               	btfsc	status,0,c
 11763  0037A6  EFD7  F01B         	goto	u11061
 11764  0037AA  EFD9  F01B         	goto	u11060
 11765  0037AE                     u11061:
 11766  0037AE  EFDC  F01B         	goto	l9665
 11767  0037B2                     u11060:
 11768  0037B2                     
 11769                           ;main.c: 718:         paredEnfrente = 1;
 11770  0037B2  0E01               	movlw	1
 11771  0037B4  6E44               	movwf	hayCruce@paredEnfrente^0,c
 11772  0037B6                     
 11773                           ;main.c: 719:         contCaminos++;
 11774  0037B6  2A43               	incf	hayCruce@contCaminos^0,f,c
 11775  0037B8                     l9665:
 11776                           
 11777                           ;main.c: 722:     if (sensorIzquierda > 25) {
 11778  0037B8  0E00               	movlw	0
 11779  0037BA  6E34               	movwf	___flge@ff1^0,c
 11780  0037BC  0E00               	movlw	0
 11781  0037BE  6E35               	movwf	(___flge@ff1+1)^0,c
 11782  0037C0  0EC8               	movlw	200
 11783  0037C2  6E36               	movwf	(___flge@ff1+2)^0,c
 11784  0037C4  0E41               	movlw	65
 11785  0037C6  6E37               	movwf	(___flge@ff1+3)^0,c
 11786  0037C8  C055  F038         	movff	_sensorIzquierda,___flge@ff2
 11787  0037CC  C056  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
 11788  0037D0  C057  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
 11789  0037D4  C058  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
 11790  0037D8  ECA6  F01F         	call	___flge	;wreg free
 11791  0037DC  B0D8               	btfsc	status,0,c
 11792  0037DE  EFF3  F01B         	goto	u11071
 11793  0037E2  EFF5  F01B         	goto	u11070
 11794  0037E6                     u11071:
 11795  0037E6  EFF8  F01B         	goto	l9671
 11796  0037EA                     u11070:
 11797  0037EA                     
 11798                           ;main.c: 723:         paredIzquierda = 1;
 11799  0037EA  0E01               	movlw	1
 11800  0037EC  6E46               	movwf	hayCruce@paredIzquierda^0,c
 11801  0037EE                     
 11802                           ;main.c: 724:         contCaminos++;
 11803  0037EE  2A43               	incf	hayCruce@contCaminos^0,f,c
 11804  0037F0                     l9671:
 11805                           
 11806                           ;main.c: 727:     if (sensorDerecha > 25) {
 11807  0037F0  0E00               	movlw	0
 11808  0037F2  6E34               	movwf	___flge@ff1^0,c
 11809  0037F4  0E00               	movlw	0
 11810  0037F6  6E35               	movwf	(___flge@ff1+1)^0,c
 11811  0037F8  0EC8               	movlw	200
 11812  0037FA  6E36               	movwf	(___flge@ff1+2)^0,c
 11813  0037FC  0E41               	movlw	65
 11814  0037FE  6E37               	movwf	(___flge@ff1+3)^0,c
 11815  003800  C0F9  F038         	movff	_sensorDerecha,___flge@ff2
 11816  003804  C0FA  F039         	movff	_sensorDerecha+1,___flge@ff2+1
 11817  003808  C0FB  F03A         	movff	_sensorDerecha+2,___flge@ff2+2
 11818  00380C  C0FC  F03B         	movff	_sensorDerecha+3,___flge@ff2+3
 11819  003810  ECA6  F01F         	call	___flge	;wreg free
 11820  003814  B0D8               	btfsc	status,0,c
 11821  003816  EF0F  F01C         	goto	u11081
 11822  00381A  EF11  F01C         	goto	u11080
 11823  00381E                     u11081:
 11824  00381E  EF14  F01C         	goto	l9677
 11825  003822                     u11080:
 11826  003822                     
 11827                           ;main.c: 728:         paredDerecha = 1;
 11828  003822  0E01               	movlw	1
 11829  003824  6E45               	movwf	hayCruce@paredDerecha^0,c
 11830  003826                     
 11831                           ;main.c: 729:         contCaminos++;
 11832  003826  2A43               	incf	hayCruce@contCaminos^0,f,c
 11833  003828                     l9677:
 11834                           
 11835                           ;main.c: 732:     if (contCaminos > 1 && !investigandoCruce) {
 11836  003828  0E01               	movlw	1
 11837  00382A  6443               	cpfsgt	hayCruce@contCaminos^0,c
 11838  00382C  EF1A  F01C         	goto	u11091
 11839  003830  EF1C  F01C         	goto	u11090
 11840  003834                     u11091:
 11841  003834  EF6E  F01C         	goto	l9737
 11842  003838                     u11090:
 11843  003838  5042               	movf	hayCruce@investigandoCruce^0,w,c
 11844  00383A  A4D8               	btfss	status,2,c
 11845  00383C  EF22  F01C         	goto	u11101
 11846  003840  EF24  F01C         	goto	u11100
 11847  003844                     u11101:
 11848  003844  EF6E  F01C         	goto	l9737
 11849  003848                     u11100:
 11850  003848                     
 11851                           ;main.c: 743:             if (paredDerecha)
 11852  003848  5045               	movf	hayCruce@paredDerecha^0,w,c
 11853  00384A  B4D8               	btfsc	status,2,c
 11854  00384C  EF2A  F01C         	goto	u11111
 11855  003850  EF2C  F01C         	goto	u11110
 11856  003854                     u11111:
 11857  003854  EF36  F01C         	goto	l9693
 11858  003858                     u11110:
 11859  003858                     
 11860                           ;main.c: 744:                 caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1] = 1;
 11861  003858  EE20 F002          	lfsr	2,2
 11862  00385C  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 11863  00385E  26D9               	addwf	fsr2l,f,c
 11864  003860  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 11865  003862  22DA               	addwfc	fsr2h,f,c
 11866  003864  0E01               	movlw	1
 11867  003866  6EDF               	movwf	indf2,c
 11868  003868  EF3E  F01C         	goto	l9713
 11869  00386C                     l9693:
 11870                           
 11871                           ;main.c: 746:                 caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1] = 0;
 11872  00386C  EE20 F002          	lfsr	2,2
 11873  003870  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 11874  003872  26D9               	addwf	fsr2l,f,c
 11875  003874  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 11876  003876  22DA               	addwfc	fsr2h,f,c
 11877  003878  0E00               	movlw	0
 11878  00387A  6EDF               	movwf	indf2,c
 11879  00387C                     l9713:
 11880                           
 11881                           ;main.c: 773:             if (paredIzquierda)
 11882  00387C  5046               	movf	hayCruce@paredIzquierda^0,w,c
 11883  00387E  B4D8               	btfsc	status,2,c
 11884  003880  EF44  F01C         	goto	u11121
 11885  003884  EF46  F01C         	goto	u11120
 11886  003888                     u11121:
 11887  003888  EF50  F01C         	goto	l9717
 11888  00388C                     u11120:
 11889  00388C                     
 11890                           ;main.c: 774:                 caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1] = 1;
 11891  00388C  EE20 F001          	lfsr	2,1
 11892  003890  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 11893  003892  26D9               	addwf	fsr2l,f,c
 11894  003894  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 11895  003896  22DA               	addwfc	fsr2h,f,c
 11896  003898  0E01               	movlw	1
 11897  00389A  6EDF               	movwf	indf2,c
 11898  00389C  EF58  F01C         	goto	l9719
 11899  0038A0                     l9717:
 11900                           
 11901                           ;main.c: 776:                 caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1] = 0;
 11902  0038A0  EE20 F001          	lfsr	2,1
 11903  0038A4  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 11904  0038A6  26D9               	addwf	fsr2l,f,c
 11905  0038A8  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 11906  0038AA  22DA               	addwfc	fsr2h,f,c
 11907  0038AC  0E00               	movlw	0
 11908  0038AE  6EDF               	movwf	indf2,c
 11909  0038B0                     l9719:
 11910                           
 11911                           ;main.c: 782:             if (paredEnfrente)
 11912  0038B0  5044               	movf	hayCruce@paredEnfrente^0,w,c
 11913  0038B2  B4D8               	btfsc	status,2,c
 11914  0038B4  EF5E  F01C         	goto	u11131
 11915  0038B8  EF60  F01C         	goto	u11130
 11916  0038BC                     u11131:
 11917  0038BC  EF68  F01C         	goto	l9723
 11918  0038C0                     u11130:
 11919  0038C0                     
 11920                           ;main.c: 783:                 caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = 1;
 11921  0038C0  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 11922  0038C4  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 11923  0038C8  0E01               	movlw	1
 11924  0038CA  6EDF               	movwf	indf2,c
 11925  0038CC  EF6E  F01C         	goto	l9737
 11926  0038D0                     l9723:
 11927                           
 11928                           ;main.c: 785:                 caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = 0;
 11929  0038D0  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 11930  0038D4  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 11931  0038D8  0E00               	movlw	0
 11932  0038DA  6EDF               	movwf	indf2,c
 11933  0038DC                     l9737:
 11934                           
 11935                           ;main.c: 808:     if (contCaminos > 1)
 11936  0038DC  0E01               	movlw	1
 11937  0038DE  6443               	cpfsgt	hayCruce@contCaminos^0,c
 11938  0038E0  EF74  F01C         	goto	u11141
 11939  0038E4  EF76  F01C         	goto	u11140
 11940  0038E8                     u11141:
 11941  0038E8  EF79  F01C         	goto	l9745
 11942  0038EC                     u11140:
 11943  0038EC                     
 11944                           ;main.c: 809:         return 1;
 11945  0038EC  0E01               	movlw	1
 11946  0038EE  EF7A  F01C         	goto	l514
 11947  0038F2                     l9745:
 11948                           
 11949                           ;main.c: 812:         return 0;
 11950  0038F2  0E00               	movlw	0
 11951  0038F4                     l514:
 11952  0038F4  0012               	return		;funcret
 11953  0038F6                     __end_of_hayCruce:
 11954                           	opt callstack 0
 11955                           
 11956 ;; *************** function _finalizarRecorrido *****************
 11957 ;; Defined at:
 11958 ;;		line 461 in file "main.c"
 11959 ;; Parameters:    Size  Location     Type
 11960 ;;		None
 11961 ;; Auto vars:     Size  Location     Type
 11962 ;;		None
 11963 ;; Return value:  Size  Location     Type
 11964 ;;                  1    wreg      void 
 11965 ;; Registers used:
 11966 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11967 ;; Tracked objects:
 11968 ;;		On entry : 0/0
 11969 ;;		On exit  : 0/0
 11970 ;;		Unchanged: 0/0
 11971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11972 ;;      Params:         0       0       0       0       0       0       0       0       0
 11973 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11974 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11975 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11976 ;;Total ram usage:        0 bytes
 11977 ;; Hardware stack levels used:    1
 11978 ;; Hardware stack levels required when called:    8
 11979 ;; This function calls:
 11980 ;;		_forzarEspejeo
 11981 ;;		_forzarParoAuto
 11982 ;; This function is called by:
 11983 ;;		_comportamientoBasico
 11984 ;;		_probarPID
 11985 ;;		_probarCruceT
 11986 ;; This function uses a non-reentrant model
 11987 ;;
 11988                           
 11989                           	psect	text48
 11990  0054B0                     __ptext48:
 11991                           	opt callstack 0
 11992  0054B0                     _finalizarRecorrido:
 11993                           	opt callstack 21
 11994  0054B0                     
 11995                           ;main.c: 462:     forzarEspejeo();
 11996  0054B0  EC12  F029         	call	_forzarEspejeo	;wreg free
 11997  0054B4                     
 11998                           ;main.c: 463:     forzarParoAuto();
 11999  0054B4  EC65  F02A         	call	_forzarParoAuto	;wreg free
 12000  0054B8                     
 12001                           ;main.c: 464:     pausa = 1;
 12002  0054B8  0E01               	movlw	1
 12003  0054BA  0101               	movlb	1	; () banked
 12004  0054BC  6FD0               	movwf	_pausa& (0+255),b
 12005  0054BE                     
 12006                           ; BSR set to: 1
 12007  0054BE  0012               	return		;funcret
 12008  0054C0                     __end_of_finalizarRecorrido:
 12009                           	opt callstack 0
 12010                           
 12011 ;; *************** function _forzarEspejeo *****************
 12012 ;; Defined at:
 12013 ;;		line 534 in file "main.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;		None
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;		None
 12018 ;; Return value:  Size  Location     Type
 12019 ;;                  1    wreg      void 
 12020 ;; Registers used:
 12021 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/0
 12024 ;;		On exit  : 0/0
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12027 ;;      Params:         0       0       0       0       0       0       0       0       0
 12028 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12029 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12030 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12031 ;;Total ram usage:        0 bytes
 12032 ;; Hardware stack levels used:    1
 12033 ;; Hardware stack levels required when called:    7
 12034 ;; This function calls:
 12035 ;;		___flge
 12036 ;;		_forzarEspejeoDerecha
 12037 ;;		_forzarEspejeoIzquierda
 12038 ;; This function is called by:
 12039 ;;		_comportamientoBasico
 12040 ;;		_finalizarRecorrido
 12041 ;;		_moverCarrito
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           	psect	text49
 12046  005224                     __ptext49:
 12047                           	opt callstack 0
 12048  005224                     _forzarEspejeo:
 12049                           	opt callstack 21
 12050  005224                     
 12051                           ;main.c: 536:     if (sensorIzquierda > sensorDerecha)
 12052  005224  C0F9  F034         	movff	_sensorDerecha,___flge@ff1
 12053  005228  C0FA  F035         	movff	_sensorDerecha+1,___flge@ff1+1
 12054  00522C  C0FB  F036         	movff	_sensorDerecha+2,___flge@ff1+2
 12055  005230  C0FC  F037         	movff	_sensorDerecha+3,___flge@ff1+3
 12056  005234  C055  F038         	movff	_sensorIzquierda,___flge@ff2
 12057  005238  C056  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
 12058  00523C  C057  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
 12059  005240  C058  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
 12060  005244  ECA6  F01F         	call	___flge	;wreg free
 12061  005248  B0D8               	btfsc	status,0,c
 12062  00524A  EF29  F029         	goto	u10991
 12063  00524E  EF2B  F029         	goto	u10990
 12064  005252                     u10991:
 12065  005252  EF2F  F029         	goto	l9569
 12066  005256                     u10990:
 12067  005256                     
 12068                           ;main.c: 537:         forzarEspejeoIzquierda();
 12069  005256  EC33  F02A         	call	_forzarEspejeoIzquierda	;wreg free
 12070  00525A  EF31  F029         	goto	l426
 12071  00525E                     l9569:
 12072                           
 12073                           ;main.c: 539:         forzarEspejeoDerecha();
 12074  00525E  EC40  F02A         	call	_forzarEspejeoDerecha	;wreg free
 12075  005262                     l426:
 12076  005262  0012               	return		;funcret
 12077  005264                     __end_of_forzarEspejeo:
 12078                           	opt callstack 0
 12079                           
 12080 ;; *************** function _forzarEspejeoIzquierda *****************
 12081 ;; Defined at:
 12082 ;;		line 514 in file "main.c"
 12083 ;; Parameters:    Size  Location     Type
 12084 ;;		None
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;		None
 12087 ;; Return value:  Size  Location     Type
 12088 ;;                  1    wreg      void 
 12089 ;; Registers used:
 12090 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12091 ;; Tracked objects:
 12092 ;;		On entry : 0/0
 12093 ;;		On exit  : 0/0
 12094 ;;		Unchanged: 0/0
 12095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12096 ;;      Params:         0       0       0       0       0       0       0       0       0
 12097 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12098 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12099 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12100 ;;Total ram usage:        0 bytes
 12101 ;; Hardware stack levels used:    1
 12102 ;; Hardware stack levels required when called:    6
 12103 ;; This function calls:
 12104 ;;		_forzarGiroIzquierda
 12105 ;;		_forzarParoAuto
 12106 ;;		_forzarReversa
 12107 ;;		_velocidadEstandar
 12108 ;; This function is called by:
 12109 ;;		_forzarEspejeo
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           
 12113                           	psect	text50
 12114  005466                     __ptext50:
 12115                           	opt callstack 0
 12116  005466                     _forzarEspejeoIzquierda:
 12117                           	opt callstack 21
 12118  005466                     
 12119                           ;main.c: 516:     forzarParoAuto();
 12120  005466  EC65  F02A         	call	_forzarParoAuto	;wreg free
 12121  00546A                     
 12122                           ;main.c: 517:     velocidadEstandar();
 12123  00546A  ECDE  F029         	call	_velocidadEstandar	;wreg free
 12124  00546E                     
 12125                           ;main.c: 518:     forzarReversa();
 12126  00546E  EC02  F02A         	call	_forzarReversa	;wreg free
 12127  005472                     
 12128                           ;main.c: 519:     forzarGiroIzquierda();
 12129  005472  EC13  F02A         	call	_forzarGiroIzquierda	;wreg free
 12130  005476                     
 12131                           ;main.c: 520:     forzarReversa();
 12132  005476  EC02  F02A         	call	_forzarReversa	;wreg free
 12133  00547A                     
 12134                           ;main.c: 521:     forzarGiroIzquierda();
 12135  00547A  EC13  F02A         	call	_forzarGiroIzquierda	;wreg free
 12136  00547E  0012               	return		;funcret
 12137  005480                     __end_of_forzarEspejeoIzquierda:
 12138                           	opt callstack 0
 12139                           
 12140 ;; *************** function _forzarGiroIzquierda *****************
 12141 ;; Defined at:
 12142 ;;		line 496 in file "main.c"
 12143 ;; Parameters:    Size  Location     Type
 12144 ;;		None
 12145 ;; Auto vars:     Size  Location     Type
 12146 ;;		None
 12147 ;; Return value:  Size  Location     Type
 12148 ;;                  1    wreg      void 
 12149 ;; Registers used:
 12150 ;;		wreg
 12151 ;; Tracked objects:
 12152 ;;		On entry : 0/0
 12153 ;;		On exit  : 0/0
 12154 ;;		Unchanged: 0/0
 12155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12156 ;;      Params:         0       0       0       0       0       0       0       0       0
 12157 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12158 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12159 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12160 ;;Total ram usage:        2 bytes
 12161 ;; Hardware stack levels used:    1
 12162 ;; Hardware stack levels required when called:    2
 12163 ;; This function calls:
 12164 ;;		Nothing
 12165 ;; This function is called by:
 12166 ;;		_forzarEspejeoIzquierda
 12167 ;; This function uses a non-reentrant model
 12168 ;;
 12169                           
 12170                           	psect	text51
 12171  005426                     __ptext51:
 12172                           	opt callstack 0
 12173  005426                     _forzarGiroIzquierda:
 12174                           	opt callstack 24
 12175  005426                     
 12176                           ;main.c: 497:     LATB4 = 0;
 12177  005426  988A               	bcf	3978,4,c	;volatile
 12178                           
 12179                           ;main.c: 498:     LATB5 = 0;
 12180  005428  9A8A               	bcf	3978,5,c	;volatile
 12181                           
 12182                           ;main.c: 499:     LATB6 = 1;
 12183  00542A  8C8A               	bsf	3978,6,c	;volatile
 12184                           
 12185                           ;main.c: 500:     LATB7 = 0;
 12186  00542C  9E8A               	bcf	3978,7,c	;volatile
 12187  00542E                     
 12188                           ;main.c: 501:     _delay((unsigned long)((410)*(4000000/4000.0)));
 12189  00542E  0E03               	movlw	3
 12190  005430  6E07               	movwf	(??_forzarGiroIzquierda+1)^0,c
 12191  005432  0E15               	movlw	21
 12192  005434  6E06               	movwf	??_forzarGiroIzquierda^0,c
 12193  005436  0E74               	movlw	116
 12194  005438                     u11917:
 12195  005438  2EE8               	decfsz	wreg,f,c
 12196  00543A  D7FE               	bra	u11917
 12197  00543C  2E06               	decfsz	??_forzarGiroIzquierda^0,f,c
 12198  00543E  D7FC               	bra	u11917
 12199  005440  2E07               	decfsz	(??_forzarGiroIzquierda+1)^0,f,c
 12200  005442  D7FA               	bra	u11917
 12201  005444  0012               	return		;funcret
 12202  005446                     __end_of_forzarGiroIzquierda:
 12203                           	opt callstack 0
 12204                           
 12205 ;; *************** function _forzarEspejeoDerecha *****************
 12206 ;; Defined at:
 12207 ;;		line 524 in file "main.c"
 12208 ;; Parameters:    Size  Location     Type
 12209 ;;		None
 12210 ;; Auto vars:     Size  Location     Type
 12211 ;;		None
 12212 ;; Return value:  Size  Location     Type
 12213 ;;                  1    wreg      void 
 12214 ;; Registers used:
 12215 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12216 ;; Tracked objects:
 12217 ;;		On entry : 0/0
 12218 ;;		On exit  : 0/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12221 ;;      Params:         0       0       0       0       0       0       0       0       0
 12222 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12223 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12224 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12225 ;;Total ram usage:        0 bytes
 12226 ;; Hardware stack levels used:    1
 12227 ;; Hardware stack levels required when called:    6
 12228 ;; This function calls:
 12229 ;;		_forzarGiroDerecha
 12230 ;;		_forzarParoAuto
 12231 ;;		_forzarReversa
 12232 ;;		_velocidadEstandar
 12233 ;; This function is called by:
 12234 ;;		_forzarEspejeo
 12235 ;; This function uses a non-reentrant model
 12236 ;;
 12237                           
 12238                           	psect	text52
 12239  005480                     __ptext52:
 12240                           	opt callstack 0
 12241  005480                     _forzarEspejeoDerecha:
 12242                           	opt callstack 21
 12243  005480                     
 12244                           ;main.c: 526:     forzarParoAuto();
 12245  005480  EC65  F02A         	call	_forzarParoAuto	;wreg free
 12246  005484                     
 12247                           ;main.c: 527:     velocidadEstandar();
 12248  005484  ECDE  F029         	call	_velocidadEstandar	;wreg free
 12249  005488                     
 12250                           ;main.c: 528:     forzarReversa();
 12251  005488  EC02  F02A         	call	_forzarReversa	;wreg free
 12252  00548C                     
 12253                           ;main.c: 529:     forzarGiroDerecha();
 12254  00548C  EC23  F02A         	call	_forzarGiroDerecha	;wreg free
 12255  005490                     
 12256                           ;main.c: 530:     forzarReversa();
 12257  005490  EC02  F02A         	call	_forzarReversa	;wreg free
 12258  005494                     
 12259                           ;main.c: 531:     forzarGiroDerecha();
 12260  005494  EC23  F02A         	call	_forzarGiroDerecha	;wreg free
 12261  005498  0012               	return		;funcret
 12262  00549A                     __end_of_forzarEspejeoDerecha:
 12263                           	opt callstack 0
 12264                           
 12265 ;; *************** function _velocidadEstandar *****************
 12266 ;; Defined at:
 12267 ;;		line 1261 in file "main.c"
 12268 ;; Parameters:    Size  Location     Type
 12269 ;;		None
 12270 ;; Auto vars:     Size  Location     Type
 12271 ;;		None
 12272 ;; Return value:  Size  Location     Type
 12273 ;;                  1    wreg      void 
 12274 ;; Registers used:
 12275 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12276 ;; Tracked objects:
 12277 ;;		On entry : 0/0
 12278 ;;		On exit  : 0/0
 12279 ;;		Unchanged: 0/0
 12280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12281 ;;      Params:         0       0       0       0       0       0       0       0       0
 12282 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12283 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12284 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12285 ;;Total ram usage:        0 bytes
 12286 ;; Hardware stack levels used:    1
 12287 ;; Hardware stack levels required when called:    5
 12288 ;; This function calls:
 12289 ;;		_pwmDuty
 12290 ;; This function is called by:
 12291 ;;		_inicializarComportamientoBasico
 12292 ;;		_comportamientoBasico
 12293 ;;		_forzarEspejeoIzquierda
 12294 ;;		_forzarEspejeoDerecha
 12295 ;;		_regresarPuntoPartida
 12296 ;;		_regresarAlCruce
 12297 ;;		_recorrerCaminoEncontrado
 12298 ;;		_probarCruceT
 12299 ;; This function uses a non-reentrant model
 12300 ;;
 12301                           
 12302                           	psect	text53
 12303  0053BC                     __ptext53:
 12304                           	opt callstack 0
 12305  0053BC                     _velocidadEstandar:
 12306                           	opt callstack 24
 12307  0053BC                     
 12308                           ;main.c: 1263:     pwmDuty(100, 1);
 12309  0053BC  0E00               	movlw	0
 12310  0053BE  0100               	movlb	0	; () banked
 12311  0053C0  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
 12312  0053C2  0E64               	movlw	100
 12313  0053C4  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
 12314  0053C6  0E01               	movlw	1
 12315  0053C8  6F7E               	movwf	pwmDuty@channel& (0+255),b
 12316  0053CA  EC74  F018         	call	_pwmDuty	;wreg free
 12317                           
 12318                           ;main.c: 1264:     pwmDuty(100, 2);
 12319  0053CE  0E00               	movlw	0
 12320  0053D0  0100               	movlb	0	; () banked
 12321  0053D2  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
 12322  0053D4  0E64               	movlw	100
 12323  0053D6  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
 12324  0053D8  0E02               	movlw	2
 12325  0053DA  6F7E               	movwf	pwmDuty@channel& (0+255),b
 12326  0053DC  EC74  F018         	call	_pwmDuty	;wreg free
 12327  0053E0  0012               	return		;funcret
 12328  0053E2                     __end_of_velocidadEstandar:
 12329                           	opt callstack 0
 12330                           
 12331 ;; *************** function _pwmDuty *****************
 12332 ;; Defined at:
 12333 ;;		line 20 in file "./pwm.h"
 12334 ;; Parameters:    Size  Location     Type
 12335 ;;  cicloTrabajo    2   28[BANK0 ] unsigned int 
 12336 ;;  channel         1   30[BANK0 ] unsigned char 
 12337 ;; Auto vars:     Size  Location     Type
 12338 ;;  duty            4   36[BANK0 ] long 
 12339 ;; Return value:  Size  Location     Type
 12340 ;;                  1    wreg      void 
 12341 ;; Registers used:
 12342 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12343 ;; Tracked objects:
 12344 ;;		On entry : 0/0
 12345 ;;		On exit  : 0/0
 12346 ;;		Unchanged: 0/0
 12347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12348 ;;      Params:         0       3       0       0       0       0       0       0       0
 12349 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12350 ;;      Temps:          0       5       0       0       0       0       0       0       0
 12351 ;;      Totals:         0      12       0       0       0       0       0       0       0
 12352 ;;Total ram usage:       12 bytes
 12353 ;; Hardware stack levels used:    1
 12354 ;; Hardware stack levels required when called:    4
 12355 ;; This function calls:
 12356 ;;		___fldiv
 12357 ;;		___flmul
 12358 ;;		___fltol
 12359 ;;		___xxtofl
 12360 ;;		_map
 12361 ;; This function is called by:
 12362 ;;		_PID
 12363 ;;		_velocidadEstandar
 12364 ;;		_velocidadBaja
 12365 ;; This function uses a non-reentrant model
 12366 ;;
 12367                           
 12368                           	psect	text54
 12369  0030E8                     __ptext54:
 12370                           	opt callstack 0
 12371  0030E8                     _pwmDuty:
 12372                           	opt callstack 24
 12373  0030E8                     
 12374                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
 12375  0030E8  C07C  F020         	movff	pwmDuty@cicloTrabajo,map@x
 12376  0030EC  C07D  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
 12377  0030F0  6A22               	clrf	(map@x+2)^0,c
 12378  0030F2  6A23               	clrf	(map@x+3)^0,c
 12379  0030F4  0E00               	movlw	0
 12380  0030F6  6E24               	movwf	map@in_min^0,c
 12381  0030F8  0E00               	movlw	0
 12382  0030FA  6E25               	movwf	(map@in_min+1)^0,c
 12383  0030FC  0E00               	movlw	0
 12384  0030FE  6E26               	movwf	(map@in_min+2)^0,c
 12385  003100  0E00               	movlw	0
 12386  003102  6E27               	movwf	(map@in_min+3)^0,c
 12387  003104  0E64               	movlw	100
 12388  003106  6E28               	movwf	map@in_max^0,c
 12389  003108  0E00               	movlw	0
 12390  00310A  6E29               	movwf	(map@in_max+1)^0,c
 12391  00310C  0E00               	movlw	0
 12392  00310E  6E2A               	movwf	(map@in_max+2)^0,c
 12393  003110  0E00               	movlw	0
 12394  003112  6E2B               	movwf	(map@in_max+3)^0,c
 12395  003114  0E00               	movlw	0
 12396  003116  6E2C               	movwf	map@out_min^0,c
 12397  003118  0E00               	movlw	0
 12398  00311A  6E2D               	movwf	(map@out_min+1)^0,c
 12399  00311C  0E00               	movlw	0
 12400  00311E  6E2E               	movwf	(map@out_min+2)^0,c
 12401  003120  0E00               	movlw	0
 12402  003122  6E2F               	movwf	(map@out_min+3)^0,c
 12403  003124  0EFF               	movlw	255
 12404  003126  6E30               	movwf	map@out_max^0,c
 12405  003128  0E03               	movlw	3
 12406  00312A  6E31               	movwf	(map@out_max+1)^0,c
 12407  00312C  0E00               	movlw	0
 12408  00312E  6E32               	movwf	(map@out_max+2)^0,c
 12409  003130  0E00               	movlw	0
 12410  003132  6E33               	movwf	(map@out_max+3)^0,c
 12411  003134  EC38  F025         	call	_map	;wreg free
 12412  003138  C020  F084         	movff	?_map,pwmDuty@duty
 12413  00313C  C021  F085         	movff	?_map+1,pwmDuty@duty+1
 12414  003140  C022  F086         	movff	?_map+2,pwmDuty@duty+2
 12415  003144  C023  F087         	movff	?_map+3,pwmDuty@duty+3
 12416  003148                     
 12417                           ;./pwm.h: 24:     if (duty < 1024) {
 12418  003148  0100               	movlb	0	; () banked
 12419  00314A  BF87               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
 12420  00314C  EFB4  F018         	goto	u9060
 12421  003150  5187               	movf	(pwmDuty@duty+3)& (0+255),w,b
 12422  003152  1186               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
 12423  003154  E107               	bnz	u9061
 12424  003156  0E04               	movlw	4
 12425  003158  5D85               	subwf	(pwmDuty@duty+1)& (0+255),w,b
 12426  00315A  B0D8               	btfsc	status,0,c
 12427  00315C  EFB2  F018         	goto	u9061
 12428  003160  EFB4  F018         	goto	u9060
 12429  003164                     u9061:
 12430  003164  EF51  F019         	goto	l157
 12431  003168                     u9060:
 12432  003168                     
 12433                           ; BSR set to: 0
 12434                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
 12435  003168  0E00               	movlw	0
 12436  00316A  6E1F               	movwf	___flmul@a^0,c
 12437  00316C  0E00               	movlw	0
 12438  00316E  6E20               	movwf	(___flmul@a+1)^0,c
 12439  003170  0EFA               	movlw	250
 12440  003172  6E21               	movwf	(___flmul@a+2)^0,c
 12441  003174  0E43               	movlw	67
 12442  003176  6E22               	movwf	(___flmul@a+3)^0,c
 12443  003178  0E00               	movlw	0
 12444  00317A  6E48               	movwf	___fldiv@a^0,c
 12445  00317C  0EC0               	movlw	192
 12446  00317E  6E49               	movwf	(___fldiv@a+1)^0,c
 12447  003180  0E7F               	movlw	127
 12448  003182  6E4A               	movwf	(___fldiv@a+2)^0,c
 12449  003184  0E44               	movlw	68
 12450  003186  6E4B               	movwf	(___fldiv@a+3)^0,c
 12451  003188  C084  F00D         	movff	pwmDuty@duty,___xxtofl@val
 12452  00318C  C085  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
 12453  003190  C086  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
 12454  003194  C087  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
 12455  003198  0E01               	movlw	1
 12456  00319A  EC52  F019         	call	___xxtofl
 12457  00319E  C00D  F044         	movff	?___xxtofl,___fldiv@b
 12458  0031A2  C00E  F045         	movff	?___xxtofl+1,___fldiv@b+1
 12459  0031A6  C00F  F046         	movff	?___xxtofl+2,___fldiv@b+2
 12460  0031AA  C010  F047         	movff	?___xxtofl+3,___fldiv@b+3
 12461  0031AE  EC01  F013         	call	___fldiv	;wreg free
 12462  0031B2  C044  F01B         	movff	?___fldiv,___flmul@b
 12463  0031B6  C045  F01C         	movff	?___fldiv+1,___flmul@b+1
 12464  0031BA  C046  F01D         	movff	?___fldiv+2,___flmul@b+2
 12465  0031BE  C047  F01E         	movff	?___fldiv+3,___flmul@b+3
 12466  0031C2  EC04  F00D         	call	___flmul	;wreg free
 12467  0031C6  C01B  F072         	movff	?___flmul,___fltol@f1
 12468  0031CA  C01C  F073         	movff	?___flmul+1,___fltol@f1+1
 12469  0031CE  C01D  F074         	movff	?___flmul+2,___fltol@f1+2
 12470  0031D2  C01E  F075         	movff	?___flmul+3,___fltol@f1+3
 12471  0031D6  EC22  F01F         	call	___fltol	;wreg free
 12472  0031DA  C072  F084         	movff	?___fltol,pwmDuty@duty
 12473  0031DE  C073  F085         	movff	?___fltol+1,pwmDuty@duty+1
 12474  0031E2  C074  F086         	movff	?___fltol+2,pwmDuty@duty+2
 12475  0031E6  C075  F087         	movff	?___fltol+3,pwmDuty@duty+3
 12476                           
 12477                           ;./pwm.h: 28:         switch (channel) {
 12478  0031EA  EF3B  F019         	goto	l8483
 12479  0031EE                     l8477:
 12480                           
 12481                           ; BSR set to: 0
 12482                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
 12483  0031EE  0E02               	movlw	2
 12484  0031F0  6F7F               	movwf	??_pwmDuty& (0+255),b
 12485  0031F2  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
 12486  0031F6  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
 12487  0031FA  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
 12488  0031FE  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
 12489  003202                     u9075:
 12490  003202  677F               	tstfsz	??_pwmDuty& (0+255),b
 12491  003204  EF06  F019         	goto	u9076
 12492  003208  EF0E  F019         	goto	u9077
 12493  00320C                     u9076:
 12494  00320C  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
 12495  00320E  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
 12496  003210  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
 12497  003212  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
 12498  003214  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
 12499  003216  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
 12500  003218  EF01  F019         	goto	u9075
 12501  00321C                     u9077:
 12502  00321C  0100               	movlb	0	; () banked
 12503  00321E  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 12504  003220  6EBE               	movwf	190,c	;volatile
 12505                           
 12506                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
 12507  003222  0ECF               	movlw	207
 12508  003224  16BD               	andwf	189,f,c	;volatile
 12509                           
 12510                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
 12511  003226  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
 12512  003228  0BF0               	andlw	240
 12513  00322A  0B30               	andlw	48
 12514  00322C  12BD               	iorwf	189,f,c	;volatile
 12515                           
 12516                           ;./pwm.h: 34:                 break;
 12517  00322E  EF51  F019         	goto	l157
 12518  003232                     l8479:
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
 12522  003232  0E02               	movlw	2
 12523  003234  6F7F               	movwf	??_pwmDuty& (0+255),b
 12524  003236  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
 12525  00323A  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
 12526  00323E  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
 12527  003242  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
 12528  003246                     u9085:
 12529  003246  677F               	tstfsz	??_pwmDuty& (0+255),b
 12530  003248  EF28  F019         	goto	u9086
 12531  00324C  EF30  F019         	goto	u9087
 12532  003250                     u9086:
 12533  003250  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
 12534  003252  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
 12535  003254  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
 12536  003256  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
 12537  003258  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
 12538  00325A  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
 12539  00325C  EF23  F019         	goto	u9085
 12540  003260                     u9087:
 12541  003260  0100               	movlb	0	; () banked
 12542  003262  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 12543  003264  6EBB               	movwf	187,c	;volatile
 12544                           
 12545                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
 12546  003266  0ECF               	movlw	207
 12547  003268  16BA               	andwf	186,f,c	;volatile
 12548                           
 12549                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
 12550  00326A  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
 12551  00326C  0BF0               	andlw	240
 12552  00326E  0B30               	andlw	48
 12553  003270  12BA               	iorwf	186,f,c	;volatile
 12554                           
 12555                           ;./pwm.h: 40:                 break;
 12556  003272  EF51  F019         	goto	l157
 12557  003276                     l8483:
 12558  003276  0100               	movlb	0	; () banked
 12559  003278  517E               	movf	pwmDuty@channel& (0+255),w,b
 12560  00327A  6F7F               	movwf	??_pwmDuty& (0+255),b
 12561  00327C  6B80               	clrf	(??_pwmDuty+1)& (0+255),b
 12562                           
 12563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12564                           ; Switch size 1, requested type "simple"
 12565                           ; Number of cases is 1, Range of values is 0 to 0
 12566                           ; switch strategies available:
 12567                           ; Name         Instructions Cycles
 12568                           ; simple_byte            4     3 (average)
 12569                           ;	Chosen strategy is simple_byte
 12570  00327E  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 12571  003280  0A00               	xorlw	0	; case 0
 12572  003282  B4D8               	btfsc	status,2,c
 12573  003284  EF46  F019         	goto	l10851
 12574  003288  EF51  F019         	goto	l157
 12575  00328C                     l10851:
 12576                           
 12577                           ; BSR set to: 0
 12578                           ; Switch size 1, requested type "simple"
 12579                           ; Number of cases is 2, Range of values is 1 to 2
 12580                           ; switch strategies available:
 12581                           ; Name         Instructions Cycles
 12582                           ; simple_byte            7     4 (average)
 12583                           ;	Chosen strategy is simple_byte
 12584  00328C  517F               	movf	??_pwmDuty& (0+255),w,b
 12585  00328E  0A01               	xorlw	1	; case 1
 12586  003290  B4D8               	btfsc	status,2,c
 12587  003292  EFF7  F018         	goto	l8477
 12588  003296  0A03               	xorlw	3	; case 2
 12589  003298  B4D8               	btfsc	status,2,c
 12590  00329A  EF19  F019         	goto	l8479
 12591  00329E  EF51  F019         	goto	l157
 12592  0032A2                     l157:
 12593                           
 12594                           ; BSR set to: 0
 12595  0032A2  0012               	return		;funcret
 12596  0032A4                     __end_of_pwmDuty:
 12597                           	opt callstack 0
 12598                           
 12599 ;; *************** function _map *****************
 12600 ;; Defined at:
 12601 ;;		line 16 in file "./pwm.h"
 12602 ;; Parameters:    Size  Location     Type
 12603 ;;  x               4   31[COMRAM] long 
 12604 ;;  in_min          4   35[COMRAM] long 
 12605 ;;  in_max          4   39[COMRAM] long 
 12606 ;;  out_min         4   43[COMRAM] long 
 12607 ;;  out_max         4   47[COMRAM] long 
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;		None
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  4   31[COMRAM] long 
 12612 ;; Registers used:
 12613 ;;		wreg, status,2, status,0, cstack
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12619 ;;      Params:        20       0       0       0       0       0       0       0       0
 12620 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12621 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12622 ;;      Totals:        20       0       0       0       0       0       0       0       0
 12623 ;;Total ram usage:       20 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; Hardware stack levels required when called:    3
 12626 ;; This function calls:
 12627 ;;		___aldiv
 12628 ;;		___lmul
 12629 ;; This function is called by:
 12630 ;;		_pwmDuty
 12631 ;; This function uses a non-reentrant model
 12632 ;;
 12633                           
 12634                           	psect	text55
 12635  004A70                     __ptext55:
 12636                           	opt callstack 0
 12637  004A70                     _map:
 12638                           	opt callstack 24
 12639  004A70                     
 12640                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
 12641  004A70  5024               	movf	map@in_min^0,w,c
 12642  004A72  5C20               	subwf	map@x^0,w,c
 12643  004A74  6E06               	movwf	___lmul@multiplier^0,c
 12644  004A76  5025               	movf	(map@in_min+1)^0,w,c
 12645  004A78  5821               	subwfb	(map@x+1)^0,w,c
 12646  004A7A  6E07               	movwf	(___lmul@multiplier+1)^0,c
 12647  004A7C  5026               	movf	(map@in_min+2)^0,w,c
 12648  004A7E  5822               	subwfb	(map@x+2)^0,w,c
 12649  004A80  6E08               	movwf	(___lmul@multiplier+2)^0,c
 12650  004A82  5027               	movf	(map@in_min+3)^0,w,c
 12651  004A84  5823               	subwfb	(map@x+3)^0,w,c
 12652  004A86  6E09               	movwf	(___lmul@multiplier+3)^0,c
 12653  004A88  502C               	movf	map@out_min^0,w,c
 12654  004A8A  5C30               	subwf	map@out_max^0,w,c
 12655  004A8C  6E0A               	movwf	___lmul@multiplicand^0,c
 12656  004A8E  502D               	movf	(map@out_min+1)^0,w,c
 12657  004A90  5831               	subwfb	(map@out_max+1)^0,w,c
 12658  004A92  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
 12659  004A94  502E               	movf	(map@out_min+2)^0,w,c
 12660  004A96  5832               	subwfb	(map@out_max+2)^0,w,c
 12661  004A98  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
 12662  004A9A  502F               	movf	(map@out_min+3)^0,w,c
 12663  004A9C  5833               	subwfb	(map@out_max+3)^0,w,c
 12664  004A9E  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
 12665  004AA0  EC55  F026         	call	___lmul	;wreg free
 12666  004AA4  C006  F012         	movff	?___lmul,___aldiv@dividend
 12667  004AA8  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
 12668  004AAC  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
 12669  004AB0  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
 12670  004AB4  5024               	movf	map@in_min^0,w,c
 12671  004AB6  5C28               	subwf	map@in_max^0,w,c
 12672  004AB8  6E16               	movwf	___aldiv@divisor^0,c
 12673  004ABA  5025               	movf	(map@in_min+1)^0,w,c
 12674  004ABC  5829               	subwfb	(map@in_max+1)^0,w,c
 12675  004ABE  6E17               	movwf	(___aldiv@divisor+1)^0,c
 12676  004AC0  5026               	movf	(map@in_min+2)^0,w,c
 12677  004AC2  582A               	subwfb	(map@in_max+2)^0,w,c
 12678  004AC4  6E18               	movwf	(___aldiv@divisor+2)^0,c
 12679  004AC6  5027               	movf	(map@in_min+3)^0,w,c
 12680  004AC8  582B               	subwfb	(map@in_max+3)^0,w,c
 12681  004ACA  6E19               	movwf	(___aldiv@divisor+3)^0,c
 12682  004ACC  EC9C  F01E         	call	___aldiv	;wreg free
 12683  004AD0  502C               	movf	map@out_min^0,w,c
 12684  004AD2  2412               	addwf	?___aldiv^0,w,c
 12685  004AD4  6E20               	movwf	?_map^0,c
 12686  004AD6  502D               	movf	(map@out_min+1)^0,w,c
 12687  004AD8  2013               	addwfc	(?___aldiv+1)^0,w,c
 12688  004ADA  6E21               	movwf	(?_map+1)^0,c
 12689  004ADC  502E               	movf	(map@out_min+2)^0,w,c
 12690  004ADE  2014               	addwfc	(?___aldiv+2)^0,w,c
 12691  004AE0  6E22               	movwf	(?_map+2)^0,c
 12692  004AE2  502F               	movf	(map@out_min+3)^0,w,c
 12693  004AE4  2015               	addwfc	(?___aldiv+3)^0,w,c
 12694  004AE6  6E23               	movwf	(?_map+3)^0,c
 12695  004AE8  0012               	return		;funcret
 12696  004AEA                     __end_of_map:
 12697                           	opt callstack 0
 12698                           
 12699 ;; *************** function ___lmul *****************
 12700 ;; Defined at:
 12701 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 12702 ;; Parameters:    Size  Location     Type
 12703 ;;  multiplier      4    5[COMRAM] unsigned long 
 12704 ;;  multiplicand    4    9[COMRAM] unsigned long 
 12705 ;; Auto vars:     Size  Location     Type
 12706 ;;  product         4   13[COMRAM] unsigned long 
 12707 ;; Return value:  Size  Location     Type
 12708 ;;                  4    5[COMRAM] unsigned long 
 12709 ;; Registers used:
 12710 ;;		wreg, status,2, status,0
 12711 ;; Tracked objects:
 12712 ;;		On entry : 0/0
 12713 ;;		On exit  : 0/0
 12714 ;;		Unchanged: 0/0
 12715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12716 ;;      Params:         8       0       0       0       0       0       0       0       0
 12717 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12718 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12719 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12720 ;;Total ram usage:       12 bytes
 12721 ;; Hardware stack levels used:    1
 12722 ;; Hardware stack levels required when called:    2
 12723 ;; This function calls:
 12724 ;;		Nothing
 12725 ;; This function is called by:
 12726 ;;		_map
 12727 ;; This function uses a non-reentrant model
 12728 ;;
 12729                           
 12730                           	psect	text56
 12731  004CAA                     __ptext56:
 12732                           	opt callstack 0
 12733  004CAA                     ___lmul:
 12734                           	opt callstack 24
 12735  004CAA  0E00               	movlw	0
 12736  004CAC  6E0E               	movwf	___lmul@product^0,c
 12737  004CAE  0E00               	movlw	0
 12738  004CB0  6E0F               	movwf	(___lmul@product+1)^0,c
 12739  004CB2  0E00               	movlw	0
 12740  004CB4  6E10               	movwf	(___lmul@product+2)^0,c
 12741  004CB6  0E00               	movlw	0
 12742  004CB8  6E11               	movwf	(___lmul@product+3)^0,c
 12743  004CBA                     l7833:
 12744  004CBA  A006               	btfss	___lmul@multiplier^0,0,c
 12745  004CBC  EF62  F026         	goto	u7961
 12746  004CC0  EF64  F026         	goto	u7960
 12747  004CC4                     u7961:
 12748  004CC4  EF6C  F026         	goto	l7837
 12749  004CC8                     u7960:
 12750  004CC8  500A               	movf	___lmul@multiplicand^0,w,c
 12751  004CCA  260E               	addwf	___lmul@product^0,f,c
 12752  004CCC  500B               	movf	(___lmul@multiplicand+1)^0,w,c
 12753  004CCE  220F               	addwfc	(___lmul@product+1)^0,f,c
 12754  004CD0  500C               	movf	(___lmul@multiplicand+2)^0,w,c
 12755  004CD2  2210               	addwfc	(___lmul@product+2)^0,f,c
 12756  004CD4  500D               	movf	(___lmul@multiplicand+3)^0,w,c
 12757  004CD6  2211               	addwfc	(___lmul@product+3)^0,f,c
 12758  004CD8                     l7837:
 12759  004CD8  90D8               	bcf	status,0,c
 12760  004CDA  360A               	rlcf	___lmul@multiplicand^0,f,c
 12761  004CDC  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
 12762  004CDE  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
 12763  004CE0  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
 12764  004CE2  90D8               	bcf	status,0,c
 12765  004CE4  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
 12766  004CE6  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
 12767  004CE8  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
 12768  004CEA  3206               	rrcf	___lmul@multiplier^0,f,c
 12769  004CEC  5006               	movf	___lmul@multiplier^0,w,c
 12770  004CEE  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
 12771  004CF0  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
 12772  004CF2  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
 12773  004CF4  A4D8               	btfss	status,2,c
 12774  004CF6  EF7F  F026         	goto	u7971
 12775  004CFA  EF81  F026         	goto	u7970
 12776  004CFE                     u7971:
 12777  004CFE  EF5D  F026         	goto	l7833
 12778  004D02                     u7970:
 12779  004D02  C00E  F006         	movff	___lmul@product,?___lmul
 12780  004D06  C00F  F007         	movff	___lmul@product+1,?___lmul+1
 12781  004D0A  C010  F008         	movff	___lmul@product+2,?___lmul+2
 12782  004D0E  C011  F009         	movff	___lmul@product+3,?___lmul+3
 12783  004D12  0012               	return		;funcret
 12784  004D14                     __end_of___lmul:
 12785                           	opt callstack 0
 12786                           
 12787 ;; *************** function ___xxtofl *****************
 12788 ;; Defined at:
 12789 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;  sign            1    wreg     unsigned char 
 12792 ;;  val             4   12[COMRAM] long 
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;  sign            1   20[COMRAM] unsigned char 
 12795 ;;  arg             4   22[COMRAM] unsigned long 
 12796 ;;  exp             1   21[COMRAM] unsigned char 
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  4   12[COMRAM] unsigned char 
 12799 ;; Registers used:
 12800 ;;		wreg, status,2, status,0
 12801 ;; Tracked objects:
 12802 ;;		On entry : 0/0
 12803 ;;		On exit  : 0/0
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12806 ;;      Params:         4       0       0       0       0       0       0       0       0
 12807 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12808 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12809 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12810 ;;Total ram usage:       14 bytes
 12811 ;; Hardware stack levels used:    1
 12812 ;; Hardware stack levels required when called:    2
 12813 ;; This function calls:
 12814 ;;		Nothing
 12815 ;; This function is called by:
 12816 ;;		_pwmDuty
 12817 ;;		_dameDistancia
 12818 ;;		_PID
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822                           	psect	text57
 12823  0032A4                     __ptext57:
 12824                           	opt callstack 0
 12825  0032A4                     ___xxtofl:
 12826                           	opt callstack 25
 12827                           
 12828                           ;incstack = 0
 12829                           ;___xxtofl@sign stored from wreg
 12830  0032A4  6E15               	movwf	___xxtofl@sign^0,c
 12831  0032A6  5015               	movf	___xxtofl@sign^0,w,c
 12832  0032A8  B4D8               	btfsc	status,2,c
 12833  0032AA  EF59  F019         	goto	u8961
 12834  0032AE  EF5B  F019         	goto	u8960
 12835  0032B2                     u8961:
 12836  0032B2  EF7D  F019         	goto	l1584
 12837  0032B6                     u8960:
 12838  0032B6  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 12839  0032B8  EF62  F019         	goto	u8970
 12840  0032BC  EF60  F019         	goto	u8971
 12841  0032C0                     u8971:
 12842  0032C0  EF7D  F019         	goto	l1584
 12843  0032C4                     u8970:
 12844  0032C4  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 12845  0032C8  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 12846  0032CC  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 12847  0032D0  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 12848  0032D4  1E11               	comf	??___xxtofl^0,f,c
 12849  0032D6  1E12               	comf	(??___xxtofl+1)^0,f,c
 12850  0032D8  1E13               	comf	(??___xxtofl+2)^0,f,c
 12851  0032DA  1E14               	comf	(??___xxtofl+3)^0,f,c
 12852  0032DC  2A11               	incf	??___xxtofl^0,f,c
 12853  0032DE  0E00               	movlw	0
 12854  0032E0  2212               	addwfc	(??___xxtofl+1)^0,f,c
 12855  0032E2  2213               	addwfc	(??___xxtofl+2)^0,f,c
 12856  0032E4  2214               	addwfc	(??___xxtofl+3)^0,f,c
 12857  0032E6  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 12858  0032EA  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 12859  0032EE  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 12860  0032F2  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 12861  0032F6  EF85  F019         	goto	l8431
 12862  0032FA                     l1584:
 12863  0032FA  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 12864  0032FE  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12865  003302  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12866  003306  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12867  00330A                     l8431:
 12868  00330A  500D               	movf	___xxtofl@val^0,w,c
 12869  00330C  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 12870  00330E  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 12871  003310  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 12872  003312  A4D8               	btfss	status,2,c
 12873  003314  EF8E  F019         	goto	u8981
 12874  003318  EF90  F019         	goto	u8980
 12875  00331C                     u8981:
 12876  00331C  EF9A  F019         	goto	l8437
 12877  003320                     u8980:
 12878  003320  0E00               	movlw	0
 12879  003322  6E0D               	movwf	?___xxtofl^0,c
 12880  003324  0E00               	movlw	0
 12881  003326  6E0E               	movwf	(?___xxtofl+1)^0,c
 12882  003328  0E00               	movlw	0
 12883  00332A  6E0F               	movwf	(?___xxtofl+2)^0,c
 12884  00332C  0E00               	movlw	0
 12885  00332E  6E10               	movwf	(?___xxtofl+3)^0,c
 12886  003330  EF2B  F01A         	goto	l1587
 12887  003334                     l8437:
 12888  003334  0E96               	movlw	150
 12889  003336  6E16               	movwf	___xxtofl@exp^0,c
 12890  003338  EFA4  F019         	goto	l8441
 12891  00333C                     l8439:
 12892  00333C  2A16               	incf	___xxtofl@exp^0,f,c
 12893  00333E  90D8               	bcf	status,0,c
 12894  003340  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 12895  003342  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 12896  003344  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 12897  003346  3217               	rrcf	___xxtofl@arg^0,f,c
 12898  003348                     l8441:
 12899  003348  0E00               	movlw	0
 12900  00334A  1417               	andwf	___xxtofl@arg^0,w,c
 12901  00334C  6E11               	movwf	??___xxtofl^0,c
 12902  00334E  0E00               	movlw	0
 12903  003350  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 12904  003352  6E12               	movwf	(??___xxtofl+1)^0,c
 12905  003354  0E00               	movlw	0
 12906  003356  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 12907  003358  6E13               	movwf	(??___xxtofl+2)^0,c
 12908  00335A  0EFE               	movlw	254
 12909  00335C  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 12910  00335E  6E14               	movwf	(??___xxtofl+3)^0,c
 12911  003360  5011               	movf	??___xxtofl^0,w,c
 12912  003362  1012               	iorwf	(??___xxtofl+1)^0,w,c
 12913  003364  1013               	iorwf	(??___xxtofl+2)^0,w,c
 12914  003366  1014               	iorwf	(??___xxtofl+3)^0,w,c
 12915  003368  A4D8               	btfss	status,2,c
 12916  00336A  EFB9  F019         	goto	u8991
 12917  00336E  EFBB  F019         	goto	u8990
 12918  003372                     u8991:
 12919  003372  EF9E  F019         	goto	l8439
 12920  003376                     u8990:
 12921  003376  EFC9  F019         	goto	l1591
 12922  00337A                     l8443:
 12923  00337A  2A16               	incf	___xxtofl@exp^0,f,c
 12924  00337C  0E01               	movlw	1
 12925  00337E  2617               	addwf	___xxtofl@arg^0,f,c
 12926  003380  0E00               	movlw	0
 12927  003382  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 12928  003384  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 12929  003386  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 12930  003388  90D8               	bcf	status,0,c
 12931  00338A  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 12932  00338C  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 12933  00338E  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 12934  003390  3217               	rrcf	___xxtofl@arg^0,f,c
 12935  003392                     l1591:
 12936  003392  0E00               	movlw	0
 12937  003394  1417               	andwf	___xxtofl@arg^0,w,c
 12938  003396  6E11               	movwf	??___xxtofl^0,c
 12939  003398  0E00               	movlw	0
 12940  00339A  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 12941  00339C  6E12               	movwf	(??___xxtofl+1)^0,c
 12942  00339E  0E00               	movlw	0
 12943  0033A0  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 12944  0033A2  6E13               	movwf	(??___xxtofl+2)^0,c
 12945  0033A4  0EFF               	movlw	255
 12946  0033A6  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 12947  0033A8  6E14               	movwf	(??___xxtofl+3)^0,c
 12948  0033AA  5011               	movf	??___xxtofl^0,w,c
 12949  0033AC  1012               	iorwf	(??___xxtofl+1)^0,w,c
 12950  0033AE  1013               	iorwf	(??___xxtofl+2)^0,w,c
 12951  0033B0  1014               	iorwf	(??___xxtofl+3)^0,w,c
 12952  0033B2  A4D8               	btfss	status,2,c
 12953  0033B4  EFDE  F019         	goto	u9001
 12954  0033B8  EFE0  F019         	goto	u9000
 12955  0033BC                     u9001:
 12956  0033BC  EFBD  F019         	goto	l8443
 12957  0033C0                     u9000:
 12958  0033C0  EFE8  F019         	goto	l8451
 12959  0033C4                     l8449:
 12960  0033C4  0616               	decf	___xxtofl@exp^0,f,c
 12961  0033C6  90D8               	bcf	status,0,c
 12962  0033C8  3617               	rlcf	___xxtofl@arg^0,f,c
 12963  0033CA  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 12964  0033CC  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 12965  0033CE  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 12966  0033D0                     l8451:
 12967  0033D0  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 12968  0033D2  EFED  F019         	goto	u9011
 12969  0033D6  EFEF  F019         	goto	u9010
 12970  0033DA                     u9011:
 12971  0033DA  EFF7  F019         	goto	l1598
 12972  0033DE                     u9010:
 12973  0033DE  0E02               	movlw	2
 12974  0033E0  6016               	cpfslt	___xxtofl@exp^0,c
 12975  0033E2  EFF5  F019         	goto	u9021
 12976  0033E6  EFF7  F019         	goto	u9020
 12977  0033EA                     u9021:
 12978  0033EA  EFE2  F019         	goto	l8449
 12979  0033EE                     u9020:
 12980  0033EE                     l1598:
 12981  0033EE  B016               	btfsc	___xxtofl@exp^0,0,c
 12982  0033F0  EFFC  F019         	goto	u9031
 12983  0033F4  EFFE  F019         	goto	u9030
 12984  0033F8                     u9031:
 12985  0033F8  EFFF  F019         	goto	l8457
 12986  0033FC                     u9030:
 12987  0033FC  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 12988  0033FE                     l8457:
 12989  0033FE  90D8               	bcf	status,0,c
 12990  003400  3216               	rrcf	___xxtofl@exp^0,f,c
 12991  003402  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 12992  003406  6A12               	clrf	(??___xxtofl+1)^0,c
 12993  003408  6A13               	clrf	(??___xxtofl+2)^0,c
 12994  00340A  6A14               	clrf	(??___xxtofl+3)^0,c
 12995  00340C  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 12996  003410  6A13               	clrf	(??___xxtofl+2)^0,c
 12997  003412  6A12               	clrf	(??___xxtofl+1)^0,c
 12998  003414  6A11               	clrf	??___xxtofl^0,c
 12999  003416  5011               	movf	??___xxtofl^0,w,c
 13000  003418  1217               	iorwf	___xxtofl@arg^0,f,c
 13001  00341A  5012               	movf	(??___xxtofl+1)^0,w,c
 13002  00341C  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 13003  00341E  5013               	movf	(??___xxtofl+2)^0,w,c
 13004  003420  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 13005  003422  5014               	movf	(??___xxtofl+3)^0,w,c
 13006  003424  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 13007  003426  5015               	movf	___xxtofl@sign^0,w,c
 13008  003428  B4D8               	btfsc	status,2,c
 13009  00342A  EF19  F01A         	goto	u9041
 13010  00342E  EF1B  F01A         	goto	u9040
 13011  003432                     u9041:
 13012  003432  EF23  F01A         	goto	l8467
 13013  003436                     u9040:
 13014  003436  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 13015  003438  EF22  F01A         	goto	u9050
 13016  00343C  EF20  F01A         	goto	u9051
 13017  003440                     u9051:
 13018  003440  EF23  F01A         	goto	l8467
 13019  003444                     u9050:
 13020  003444  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 13021  003446                     l8467:
 13022  003446  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 13023  00344A  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 13024  00344E  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 13025  003452  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 13026  003456                     l1587:
 13027  003456  0012               	return		;funcret
 13028  003458                     __end_of___xxtofl:
 13029                           	opt callstack 0
 13030                           
 13031 ;; *************** function ___fltol *****************
 13032 ;; Defined at:
 13033 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 13034 ;; Parameters:    Size  Location     Type
 13035 ;;  f1              4   18[BANK0 ] unsigned char 
 13036 ;; Auto vars:     Size  Location     Type
 13037 ;;  exp1            1   27[BANK0 ] unsigned char 
 13038 ;;  sign1           1   26[BANK0 ] unsigned char 
 13039 ;; Return value:  Size  Location     Type
 13040 ;;                  4   18[BANK0 ] long 
 13041 ;; Registers used:
 13042 ;;		wreg, status,2, status,0
 13043 ;; Tracked objects:
 13044 ;;		On entry : 0/0
 13045 ;;		On exit  : 0/0
 13046 ;;		Unchanged: 0/0
 13047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13048 ;;      Params:         0       4       0       0       0       0       0       0       0
 13049 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13050 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13051 ;;      Totals:         0      10       0       0       0       0       0       0       0
 13052 ;;Total ram usage:       10 bytes
 13053 ;; Hardware stack levels used:    1
 13054 ;; Hardware stack levels required when called:    2
 13055 ;; This function calls:
 13056 ;;		Nothing
 13057 ;; This function is called by:
 13058 ;;		_pwmDuty
 13059 ;;		_PID
 13060 ;;		_efgtoa
 13061 ;; This function uses a non-reentrant model
 13062 ;;
 13063                           
 13064                           	psect	text58
 13065  003E44                     __ptext58:
 13066                           	opt callstack 0
 13067  003E44                     ___fltol:
 13068                           	opt callstack 23
 13069  003E44  0100               	movlb	0	; () banked
 13070  003E46  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
 13071  003E48  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
 13072  003E4A  6F7B               	movwf	___fltol@exp1& (0+255),b
 13073  003E4C  517B               	movf	___fltol@exp1& (0+255),w,b
 13074  003E4E  A4D8               	btfss	status,2,c
 13075  003E50  EF2C  F01F         	goto	u8891
 13076  003E54  EF2E  F01F         	goto	u8890
 13077  003E58                     u8891:
 13078  003E58  EF38  F01F         	goto	l8387
 13079  003E5C                     u8890:
 13080  003E5C                     l8383:
 13081                           
 13082                           ; BSR set to: 0
 13083  003E5C  0E00               	movlw	0
 13084  003E5E  6F72               	movwf	?___fltol& (0+255),b
 13085  003E60  0E00               	movlw	0
 13086  003E62  6F73               	movwf	(?___fltol+1)& (0+255),b
 13087  003E64  0E00               	movlw	0
 13088  003E66  6F74               	movwf	(?___fltol+2)& (0+255),b
 13089  003E68  0E00               	movlw	0
 13090  003E6A  6F75               	movwf	(?___fltol+3)& (0+255),b
 13091  003E6C  EFA5  F01F         	goto	l1226
 13092  003E70                     l8387:
 13093                           
 13094                           ; BSR set to: 0
 13095  003E70  C072  F076         	movff	___fltol@f1,??___fltol
 13096  003E74  C073  F077         	movff	___fltol@f1+1,??___fltol+1
 13097  003E78  C074  F078         	movff	___fltol@f1+2,??___fltol+2
 13098  003E7C  C075  F079         	movff	___fltol@f1+3,??___fltol+3
 13099  003E80  0E20               	movlw	32
 13100  003E82  EF48  F01F         	goto	u8900
 13101  003E86                     u8905:
 13102  003E86  90D8               	bcf	status,0,c
 13103  003E88  3379               	rrcf	(??___fltol+3)& (0+255),f,b
 13104  003E8A  3378               	rrcf	(??___fltol+2)& (0+255),f,b
 13105  003E8C  3377               	rrcf	(??___fltol+1)& (0+255),f,b
 13106  003E8E  3376               	rrcf	??___fltol& (0+255),f,b
 13107  003E90                     u8900:
 13108  003E90  2EE8               	decfsz	wreg,f,c
 13109  003E92  EF43  F01F         	goto	u8905
 13110  003E96  5176               	movf	??___fltol& (0+255),w,b
 13111  003E98  6F7A               	movwf	___fltol@sign1& (0+255),b
 13112  003E9A                     
 13113                           ; BSR set to: 0
 13114  003E9A  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
 13115  003E9C                     
 13116                           ; BSR set to: 0
 13117  003E9C  0EFF               	movlw	255
 13118  003E9E  1772               	andwf	___fltol@f1& (0+255),f,b
 13119  003EA0  0EFF               	movlw	255
 13120  003EA2  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
 13121  003EA4  0EFF               	movlw	255
 13122  003EA6  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
 13123  003EA8  0E00               	movlw	0
 13124  003EAA  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
 13125  003EAC                     
 13126                           ; BSR set to: 0
 13127  003EAC  0E96               	movlw	150
 13128  003EAE  5F7B               	subwf	___fltol@exp1& (0+255),f,b
 13129  003EB0                     
 13130                           ; BSR set to: 0
 13131  003EB0  BF7B               	btfsc	___fltol@exp1& (0+255),7,b
 13132  003EB2  EF5F  F01F         	goto	u8910
 13133  003EB6  EF5D  F01F         	goto	u8911
 13134  003EBA                     u8911:
 13135  003EBA  EF75  F01F         	goto	l8407
 13136  003EBE                     u8910:
 13137  003EBE                     
 13138                           ; BSR set to: 0
 13139  003EBE  517B               	movf	___fltol@exp1& (0+255),w,b
 13140  003EC0  0A80               	xorlw	128
 13141  003EC2  0F97               	addlw	151
 13142  003EC4  B0D8               	btfsc	status,0,c
 13143  003EC6  EF67  F01F         	goto	u8921
 13144  003ECA  EF69  F01F         	goto	u8920
 13145  003ECE                     u8921:
 13146  003ECE  EF6B  F01F         	goto	l8403
 13147  003ED2                     u8920:
 13148  003ED2  EF2E  F01F         	goto	l8383
 13149  003ED6                     l8403:
 13150                           
 13151                           ; BSR set to: 0
 13152  003ED6  90D8               	bcf	status,0,c
 13153  003ED8  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13154  003EDA  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13155  003EDC  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13156  003EDE  3372               	rrcf	___fltol@f1& (0+255),f,b
 13157  003EE0                     
 13158                           ; BSR set to: 0
 13159  003EE0  3F7B               	incfsz	___fltol@exp1& (0+255),f,b
 13160  003EE2  EF6B  F01F         	goto	l8403
 13161  003EE6  EF8D  F01F         	goto	l8417
 13162  003EEA                     l8407:
 13163                           
 13164                           ; BSR set to: 0
 13165  003EEA  0E1F               	movlw	31
 13166  003EEC  657B               	cpfsgt	___fltol@exp1& (0+255),b
 13167  003EEE  EF7B  F01F         	goto	u8931
 13168  003EF2  EF7D  F01F         	goto	u8930
 13169  003EF6                     u8931:
 13170  003EF6  EF85  F01F         	goto	l8415
 13171  003EFA                     u8930:
 13172  003EFA  EF2E  F01F         	goto	l8383
 13173  003EFE                     l8413:
 13174                           
 13175                           ; BSR set to: 0
 13176  003EFE  90D8               	bcf	status,0,c
 13177  003F00  3772               	rlcf	___fltol@f1& (0+255),f,b
 13178  003F02  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13179  003F04  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13180  003F06  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13181  003F08  077B               	decf	___fltol@exp1& (0+255),f,b
 13182  003F0A                     l8415:
 13183                           
 13184                           ; BSR set to: 0
 13185  003F0A  517B               	movf	___fltol@exp1& (0+255),w,b
 13186  003F0C  A4D8               	btfss	status,2,c
 13187  003F0E  EF8B  F01F         	goto	u8941
 13188  003F12  EF8D  F01F         	goto	u8940
 13189  003F16                     u8941:
 13190  003F16  EF7F  F01F         	goto	l8413
 13191  003F1A                     u8940:
 13192  003F1A                     l8417:
 13193                           
 13194                           ; BSR set to: 0
 13195  003F1A  517A               	movf	___fltol@sign1& (0+255),w,b
 13196  003F1C  B4D8               	btfsc	status,2,c
 13197  003F1E  EF93  F01F         	goto	u8951
 13198  003F22  EF95  F01F         	goto	u8950
 13199  003F26                     u8951:
 13200  003F26  EF9D  F01F         	goto	l8421
 13201  003F2A                     u8950:
 13202  003F2A                     
 13203                           ; BSR set to: 0
 13204  003F2A  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
 13205  003F2C  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
 13206  003F2E  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
 13207  003F30  6D72               	negf	___fltol@f1& (0+255),b
 13208  003F32  0E00               	movlw	0
 13209  003F34  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13210  003F36  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13211  003F38  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13212  003F3A                     l8421:
 13213                           
 13214                           ; BSR set to: 0
 13215  003F3A  C072  F072         	movff	___fltol@f1,?___fltol
 13216  003F3E  C073  F073         	movff	___fltol@f1+1,?___fltol+1
 13217  003F42  C074  F074         	movff	___fltol@f1+2,?___fltol+2
 13218  003F46  C075  F075         	movff	___fltol@f1+3,?___fltol+3
 13219  003F4A                     l1226:
 13220                           
 13221                           ; BSR set to: 0
 13222  003F4A  0012               	return		;funcret
 13223  003F4C                     __end_of___fltol:
 13224                           	opt callstack 0
 13225                           
 13226 ;; *************** function ___flmul *****************
 13227 ;; Defined at:
 13228 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 13229 ;; Parameters:    Size  Location     Type
 13230 ;;  b               4   26[COMRAM] long 
 13231 ;;  a               4   30[COMRAM] long 
 13232 ;; Auto vars:     Size  Location     Type
 13233 ;;  prod            4   45[COMRAM] struct .
 13234 ;;  grs             4   40[COMRAM] unsigned long 
 13235 ;;  temp            2   49[COMRAM] struct .
 13236 ;;  bexp            1   44[COMRAM] unsigned char 
 13237 ;;  aexp            1   39[COMRAM] unsigned char 
 13238 ;;  sign            1   38[COMRAM] unsigned char 
 13239 ;; Return value:  Size  Location     Type
 13240 ;;                  4   26[COMRAM] unsigned char 
 13241 ;; Registers used:
 13242 ;;		wreg, status,2, status,0, prodl, prodh
 13243 ;; Tracked objects:
 13244 ;;		On entry : 0/0
 13245 ;;		On exit  : 0/0
 13246 ;;		Unchanged: 0/0
 13247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13248 ;;      Params:         8       0       0       0       0       0       0       0       0
 13249 ;;      Locals:        13       0       0       0       0       0       0       0       0
 13250 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13251 ;;      Totals:        25       0       0       0       0       0       0       0       0
 13252 ;;Total ram usage:       25 bytes
 13253 ;; Hardware stack levels used:    1
 13254 ;; Hardware stack levels required when called:    2
 13255 ;; This function calls:
 13256 ;;		Nothing
 13257 ;; This function is called by:
 13258 ;;		_pwmDuty
 13259 ;;		_PID
 13260 ;;		_efgtoa
 13261 ;;		_roundf
 13262 ;; This function uses a non-reentrant model
 13263 ;;
 13264                           
 13265                           	psect	text59
 13266  001A08                     __ptext59:
 13267                           	opt callstack 0
 13268  001A08                     ___flmul:
 13269                           	opt callstack 23
 13270  001A08  501E               	movf	(___flmul@b+3)^0,w,c
 13271  001A0A  0B80               	andlw	128
 13272  001A0C  6E27               	movwf	___flmul@sign^0,c
 13273  001A0E  501E               	movf	(___flmul@b+3)^0,w,c
 13274  001A10  241E               	addwf	(___flmul@b+3)^0,w,c
 13275  001A12  6E2D               	movwf	___flmul@bexp^0,c
 13276  001A14  AE1D               	btfss	(___flmul@b+2)^0,7,c
 13277  001A16  EF0F  F00D         	goto	u8701
 13278  001A1A  EF11  F00D         	goto	u8700
 13279  001A1E                     u8701:
 13280  001A1E  EF12  F00D         	goto	l8257
 13281  001A22                     u8700:
 13282  001A22  802D               	bsf	___flmul@bexp^0,0,c
 13283  001A24                     l8257:
 13284  001A24  502D               	movf	___flmul@bexp^0,w,c
 13285  001A26  B4D8               	btfsc	status,2,c
 13286  001A28  EF18  F00D         	goto	u8711
 13287  001A2C  EF1A  F00D         	goto	u8710
 13288  001A30                     u8711:
 13289  001A30  EF2D  F00D         	goto	l8265
 13290  001A34                     u8710:
 13291  001A34  282D               	incf	___flmul@bexp^0,w,c
 13292  001A36  A4D8               	btfss	status,2,c
 13293  001A38  EF20  F00D         	goto	u8721
 13294  001A3C  EF22  F00D         	goto	u8720
 13295  001A40                     u8721:
 13296  001A40  EF2A  F00D         	goto	l8263
 13297  001A44                     u8720:
 13298  001A44  0E00               	movlw	0
 13299  001A46  6E1B               	movwf	___flmul@b^0,c
 13300  001A48  0E00               	movlw	0
 13301  001A4A  6E1C               	movwf	(___flmul@b+1)^0,c
 13302  001A4C  0E00               	movlw	0
 13303  001A4E  6E1D               	movwf	(___flmul@b+2)^0,c
 13304  001A50  0E00               	movlw	0
 13305  001A52  6E1E               	movwf	(___flmul@b+3)^0,c
 13306  001A54                     l8263:
 13307  001A54  8E1D               	bsf	(___flmul@b+2)^0,7,c
 13308  001A56  EF35  F00D         	goto	l8267
 13309  001A5A                     l8265:
 13310  001A5A  0E00               	movlw	0
 13311  001A5C  6E1B               	movwf	___flmul@b^0,c
 13312  001A5E  0E00               	movlw	0
 13313  001A60  6E1C               	movwf	(___flmul@b+1)^0,c
 13314  001A62  0E00               	movlw	0
 13315  001A64  6E1D               	movwf	(___flmul@b+2)^0,c
 13316  001A66  0E00               	movlw	0
 13317  001A68  6E1E               	movwf	(___flmul@b+3)^0,c
 13318  001A6A                     l8267:
 13319  001A6A  5022               	movf	(___flmul@a+3)^0,w,c
 13320  001A6C  0B80               	andlw	128
 13321  001A6E  1A27               	xorwf	___flmul@sign^0,f,c
 13322  001A70  5022               	movf	(___flmul@a+3)^0,w,c
 13323  001A72  2422               	addwf	(___flmul@a+3)^0,w,c
 13324  001A74  6E28               	movwf	___flmul@aexp^0,c
 13325  001A76  AE21               	btfss	(___flmul@a+2)^0,7,c
 13326  001A78  EF40  F00D         	goto	u8731
 13327  001A7C  EF42  F00D         	goto	u8730
 13328  001A80                     u8731:
 13329  001A80  EF43  F00D         	goto	l8275
 13330  001A84                     u8730:
 13331  001A84  8028               	bsf	___flmul@aexp^0,0,c
 13332  001A86                     l8275:
 13333  001A86  5028               	movf	___flmul@aexp^0,w,c
 13334  001A88  B4D8               	btfsc	status,2,c
 13335  001A8A  EF49  F00D         	goto	u8741
 13336  001A8E  EF4B  F00D         	goto	u8740
 13337  001A92                     u8741:
 13338  001A92  EF5E  F00D         	goto	l8283
 13339  001A96                     u8740:
 13340  001A96  2828               	incf	___flmul@aexp^0,w,c
 13341  001A98  A4D8               	btfss	status,2,c
 13342  001A9A  EF51  F00D         	goto	u8751
 13343  001A9E  EF53  F00D         	goto	u8750
 13344  001AA2                     u8751:
 13345  001AA2  EF5B  F00D         	goto	l8281
 13346  001AA6                     u8750:
 13347  001AA6  0E00               	movlw	0
 13348  001AA8  6E1F               	movwf	___flmul@a^0,c
 13349  001AAA  0E00               	movlw	0
 13350  001AAC  6E20               	movwf	(___flmul@a+1)^0,c
 13351  001AAE  0E00               	movlw	0
 13352  001AB0  6E21               	movwf	(___flmul@a+2)^0,c
 13353  001AB2  0E00               	movlw	0
 13354  001AB4  6E22               	movwf	(___flmul@a+3)^0,c
 13355  001AB6                     l8281:
 13356  001AB6  8E21               	bsf	(___flmul@a+2)^0,7,c
 13357  001AB8  EF66  F00D         	goto	l1543
 13358  001ABC                     l8283:
 13359  001ABC  0E00               	movlw	0
 13360  001ABE  6E1F               	movwf	___flmul@a^0,c
 13361  001AC0  0E00               	movlw	0
 13362  001AC2  6E20               	movwf	(___flmul@a+1)^0,c
 13363  001AC4  0E00               	movlw	0
 13364  001AC6  6E21               	movwf	(___flmul@a+2)^0,c
 13365  001AC8  0E00               	movlw	0
 13366  001ACA  6E22               	movwf	(___flmul@a+3)^0,c
 13367  001ACC                     l1543:
 13368  001ACC  5028               	movf	___flmul@aexp^0,w,c
 13369  001ACE  B4D8               	btfsc	status,2,c
 13370  001AD0  EF6C  F00D         	goto	u8761
 13371  001AD4  EF6E  F00D         	goto	u8760
 13372  001AD8                     u8761:
 13373  001AD8  EF76  F00D         	goto	l8287
 13374  001ADC                     u8760:
 13375  001ADC  502D               	movf	___flmul@bexp^0,w,c
 13376  001ADE  A4D8               	btfss	status,2,c
 13377  001AE0  EF74  F00D         	goto	u8771
 13378  001AE4  EF76  F00D         	goto	u8770
 13379  001AE8                     u8771:
 13380  001AE8  EF80  F00D         	goto	l8291
 13381  001AEC                     u8770:
 13382  001AEC                     l8287:
 13383  001AEC  0E00               	movlw	0
 13384  001AEE  6E1B               	movwf	?___flmul^0,c
 13385  001AF0  0E00               	movlw	0
 13386  001AF2  6E1C               	movwf	(?___flmul+1)^0,c
 13387  001AF4  0E00               	movlw	0
 13388  001AF6  6E1D               	movwf	(?___flmul+2)^0,c
 13389  001AF8  0E00               	movlw	0
 13390  001AFA  6E1E               	movwf	(?___flmul+3)^0,c
 13391  001AFC  EF18  F00F         	goto	l1547
 13392  001B00                     l8291:
 13393  001B00  5021               	movf	(___flmul@a+2)^0,w,c
 13394  001B02  021B               	mulwf	___flmul@b^0,c
 13395  001B04  CFF3 F032          	movff	prodl,___flmul@temp
 13396  001B08  CFF4 F033          	movff	prodh,___flmul@temp+1
 13397  001B0C  5032               	movf	___flmul@temp^0,w,c
 13398  001B0E  6E29               	movwf	___flmul@grs^0,c
 13399  001B10  6A2A               	clrf	(___flmul@grs+1)^0,c
 13400  001B12  6A2B               	clrf	(___flmul@grs+2)^0,c
 13401  001B14  6A2C               	clrf	(___flmul@grs+3)^0,c
 13402  001B16  5033               	movf	(___flmul@temp+1)^0,w,c
 13403  001B18  6E2E               	movwf	___flmul@prod^0,c
 13404  001B1A  6A2F               	clrf	(___flmul@prod+1)^0,c
 13405  001B1C  6A30               	clrf	(___flmul@prod+2)^0,c
 13406  001B1E  6A31               	clrf	(___flmul@prod+3)^0,c
 13407  001B20  5020               	movf	(___flmul@a+1)^0,w,c
 13408  001B22  021C               	mulwf	(___flmul@b+1)^0,c
 13409  001B24  CFF3 F032          	movff	prodl,___flmul@temp
 13410  001B28  CFF4 F033          	movff	prodh,___flmul@temp+1
 13411  001B2C  5032               	movf	___flmul@temp^0,w,c
 13412  001B2E  2629               	addwf	___flmul@grs^0,f,c
 13413  001B30  0E00               	movlw	0
 13414  001B32  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13415  001B34  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13416  001B36  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13417  001B38  5033               	movf	(___flmul@temp+1)^0,w,c
 13418  001B3A  262E               	addwf	___flmul@prod^0,f,c
 13419  001B3C  0E00               	movlw	0
 13420  001B3E  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13421  001B40  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13422  001B42  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13423  001B44  501F               	movf	___flmul@a^0,w,c
 13424  001B46  021D               	mulwf	(___flmul@b+2)^0,c
 13425  001B48  CFF3 F032          	movff	prodl,___flmul@temp
 13426  001B4C  CFF4 F033          	movff	prodh,___flmul@temp+1
 13427  001B50  5032               	movf	___flmul@temp^0,w,c
 13428  001B52  2629               	addwf	___flmul@grs^0,f,c
 13429  001B54  0E00               	movlw	0
 13430  001B56  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13431  001B58  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13432  001B5A  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13433  001B5C  5033               	movf	(___flmul@temp+1)^0,w,c
 13434  001B5E  262E               	addwf	___flmul@prod^0,f,c
 13435  001B60  0E00               	movlw	0
 13436  001B62  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13437  001B64  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13438  001B66  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13439  001B68  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13440  001B6C  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13441  001B70  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13442  001B74  6A29               	clrf	___flmul@grs^0,c
 13443  001B76  501F               	movf	___flmul@a^0,w,c
 13444  001B78  021C               	mulwf	(___flmul@b+1)^0,c
 13445  001B7A  CFF3 F032          	movff	prodl,___flmul@temp
 13446  001B7E  CFF4 F033          	movff	prodh,___flmul@temp+1
 13447  001B82  5032               	movf	___flmul@temp^0,w,c
 13448  001B84  2629               	addwf	___flmul@grs^0,f,c
 13449  001B86  5033               	movf	(___flmul@temp+1)^0,w,c
 13450  001B88  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13451  001B8A  0E00               	movlw	0
 13452  001B8C  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13453  001B8E  0E00               	movlw	0
 13454  001B90  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13455  001B92  5020               	movf	(___flmul@a+1)^0,w,c
 13456  001B94  021B               	mulwf	___flmul@b^0,c
 13457  001B96  CFF3 F032          	movff	prodl,___flmul@temp
 13458  001B9A  CFF4 F033          	movff	prodh,___flmul@temp+1
 13459  001B9E  5032               	movf	___flmul@temp^0,w,c
 13460  001BA0  2629               	addwf	___flmul@grs^0,f,c
 13461  001BA2  5033               	movf	(___flmul@temp+1)^0,w,c
 13462  001BA4  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13463  001BA6  0E00               	movlw	0
 13464  001BA8  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13465  001BAA  0E00               	movlw	0
 13466  001BAC  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13467  001BAE  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13468  001BB2  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13469  001BB6  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13470  001BBA  6A29               	clrf	___flmul@grs^0,c
 13471  001BBC  501F               	movf	___flmul@a^0,w,c
 13472  001BBE  021B               	mulwf	___flmul@b^0,c
 13473  001BC0  CFF3 F032          	movff	prodl,___flmul@temp
 13474  001BC4  CFF4 F033          	movff	prodh,___flmul@temp+1
 13475  001BC8  5032               	movf	___flmul@temp^0,w,c
 13476  001BCA  2629               	addwf	___flmul@grs^0,f,c
 13477  001BCC  5033               	movf	(___flmul@temp+1)^0,w,c
 13478  001BCE  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13479  001BD0  0E00               	movlw	0
 13480  001BD2  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13481  001BD4  0E00               	movlw	0
 13482  001BD6  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13483  001BD8  5021               	movf	(___flmul@a+2)^0,w,c
 13484  001BDA  021C               	mulwf	(___flmul@b+1)^0,c
 13485  001BDC  CFF3 F032          	movff	prodl,___flmul@temp
 13486  001BE0  CFF4 F033          	movff	prodh,___flmul@temp+1
 13487  001BE4  5032               	movf	___flmul@temp^0,w,c
 13488  001BE6  262E               	addwf	___flmul@prod^0,f,c
 13489  001BE8  5033               	movf	(___flmul@temp+1)^0,w,c
 13490  001BEA  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13491  001BEC  0E00               	movlw	0
 13492  001BEE  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13493  001BF0  0E00               	movlw	0
 13494  001BF2  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13495  001BF4  5020               	movf	(___flmul@a+1)^0,w,c
 13496  001BF6  021D               	mulwf	(___flmul@b+2)^0,c
 13497  001BF8  CFF3 F032          	movff	prodl,___flmul@temp
 13498  001BFC  CFF4 F033          	movff	prodh,___flmul@temp+1
 13499  001C00  5032               	movf	___flmul@temp^0,w,c
 13500  001C02  262E               	addwf	___flmul@prod^0,f,c
 13501  001C04  5033               	movf	(___flmul@temp+1)^0,w,c
 13502  001C06  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13503  001C08  0E00               	movlw	0
 13504  001C0A  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13505  001C0C  0E00               	movlw	0
 13506  001C0E  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13507  001C10  5021               	movf	(___flmul@a+2)^0,w,c
 13508  001C12  021D               	mulwf	(___flmul@b+2)^0,c
 13509  001C14  CFF3 F032          	movff	prodl,___flmul@temp
 13510  001C18  CFF4 F033          	movff	prodh,___flmul@temp+1
 13511  001C1C  5032               	movf	___flmul@temp^0,w,c
 13512  001C1E  6E23               	movwf	??___flmul^0,c
 13513  001C20  5033               	movf	(___flmul@temp+1)^0,w,c
 13514  001C22  6E24               	movwf	(??___flmul+1)^0,c
 13515  001C24  6A25               	clrf	(??___flmul+2)^0,c
 13516  001C26  6A26               	clrf	(??___flmul+3)^0,c
 13517  001C28  C025  F026         	movff	??___flmul+2,??___flmul+3
 13518  001C2C  C024  F025         	movff	??___flmul+1,??___flmul+2
 13519  001C30  C023  F024         	movff	??___flmul,??___flmul+1
 13520  001C34  6A23               	clrf	??___flmul^0,c
 13521  001C36  5023               	movf	??___flmul^0,w,c
 13522  001C38  262E               	addwf	___flmul@prod^0,f,c
 13523  001C3A  5024               	movf	(??___flmul+1)^0,w,c
 13524  001C3C  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13525  001C3E  5025               	movf	(??___flmul+2)^0,w,c
 13526  001C40  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13527  001C42  5026               	movf	(??___flmul+3)^0,w,c
 13528  001C44  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13529  001C46  C029  F023         	movff	___flmul@grs,??___flmul
 13530  001C4A  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
 13531  001C4E  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
 13532  001C52  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
 13533  001C56  0E19               	movlw	25
 13534  001C58  EF33  F00E         	goto	u8780
 13535  001C5C                     u8785:
 13536  001C5C  90D8               	bcf	status,0,c
 13537  001C5E  3226               	rrcf	(??___flmul+3)^0,f,c
 13538  001C60  3225               	rrcf	(??___flmul+2)^0,f,c
 13539  001C62  3224               	rrcf	(??___flmul+1)^0,f,c
 13540  001C64  3223               	rrcf	??___flmul^0,f,c
 13541  001C66                     u8780:
 13542  001C66  2EE8               	decfsz	wreg,f,c
 13543  001C68  EF2E  F00E         	goto	u8785
 13544  001C6C  5023               	movf	??___flmul^0,w,c
 13545  001C6E  262E               	addwf	___flmul@prod^0,f,c
 13546  001C70  5024               	movf	(??___flmul+1)^0,w,c
 13547  001C72  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13548  001C74  5025               	movf	(??___flmul+2)^0,w,c
 13549  001C76  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13550  001C78  5026               	movf	(??___flmul+3)^0,w,c
 13551  001C7A  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13552  001C7C  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13553  001C80  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13554  001C84  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13555  001C88  6A29               	clrf	___flmul@grs^0,c
 13556  001C8A  5028               	movf	___flmul@aexp^0,w,c
 13557  001C8C  C02D  F023         	movff	___flmul@bexp,??___flmul
 13558  001C90  6A24               	clrf	(??___flmul+1)^0,c
 13559  001C92  2623               	addwf	??___flmul^0,f,c
 13560  001C94  0E00               	movlw	0
 13561  001C96  2224               	addwfc	(??___flmul+1)^0,f,c
 13562  001C98  0E82               	movlw	130
 13563  001C9A  2423               	addwf	??___flmul^0,w,c
 13564  001C9C  6E32               	movwf	___flmul@temp^0,c
 13565  001C9E  0EFF               	movlw	255
 13566  001CA0  2024               	addwfc	(??___flmul+1)^0,w,c
 13567  001CA2  6E33               	movwf	(___flmul@temp+1)^0,c
 13568  001CA4  EF69  F00E         	goto	l8339
 13569  001CA8                     l8333:
 13570  001CA8  90D8               	bcf	status,0,c
 13571  001CAA  362E               	rlcf	___flmul@prod^0,f,c
 13572  001CAC  362F               	rlcf	(___flmul@prod+1)^0,f,c
 13573  001CAE  3630               	rlcf	(___flmul@prod+2)^0,f,c
 13574  001CB0  3631               	rlcf	(___flmul@prod+3)^0,f,c
 13575  001CB2  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 13576  001CB4  EF5E  F00E         	goto	u8791
 13577  001CB8  EF60  F00E         	goto	u8790
 13578  001CBC                     u8791:
 13579  001CBC  EF61  F00E         	goto	l1550
 13580  001CC0                     u8790:
 13581  001CC0  802E               	bsf	___flmul@prod^0,0,c
 13582  001CC2                     l1550:
 13583  001CC2  90D8               	bcf	status,0,c
 13584  001CC4  3629               	rlcf	___flmul@grs^0,f,c
 13585  001CC6  362A               	rlcf	(___flmul@grs+1)^0,f,c
 13586  001CC8  362B               	rlcf	(___flmul@grs+2)^0,f,c
 13587  001CCA  362C               	rlcf	(___flmul@grs+3)^0,f,c
 13588  001CCC  0632               	decf	___flmul@temp^0,f,c
 13589  001CCE  A0D8               	btfss	status,0,c
 13590  001CD0  0633               	decf	(___flmul@temp+1)^0,f,c
 13591  001CD2                     l8339:
 13592  001CD2  AE30               	btfss	(___flmul@prod+2)^0,7,c
 13593  001CD4  EF6E  F00E         	goto	u8801
 13594  001CD8  EF70  F00E         	goto	u8800
 13595  001CDC                     u8801:
 13596  001CDC  EF54  F00E         	goto	l8333
 13597  001CE0                     u8800:
 13598  001CE0  0E00               	movlw	0
 13599  001CE2  6E28               	movwf	___flmul@aexp^0,c
 13600  001CE4  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 13601  001CE6  EF77  F00E         	goto	u8811
 13602  001CEA  EF79  F00E         	goto	u8810
 13603  001CEE                     u8811:
 13604  001CEE  EF9D  F00E         	goto	l1552
 13605  001CF2                     u8810:
 13606  001CF2  0EFF               	movlw	255
 13607  001CF4  1429               	andwf	___flmul@grs^0,w,c
 13608  001CF6  6E23               	movwf	??___flmul^0,c
 13609  001CF8  0EFF               	movlw	255
 13610  001CFA  142A               	andwf	(___flmul@grs+1)^0,w,c
 13611  001CFC  6E24               	movwf	(??___flmul+1)^0,c
 13612  001CFE  0EFF               	movlw	255
 13613  001D00  142B               	andwf	(___flmul@grs+2)^0,w,c
 13614  001D02  6E25               	movwf	(??___flmul+2)^0,c
 13615  001D04  0E7F               	movlw	127
 13616  001D06  142C               	andwf	(___flmul@grs+3)^0,w,c
 13617  001D08  6E26               	movwf	(??___flmul+3)^0,c
 13618  001D0A  5023               	movf	??___flmul^0,w,c
 13619  001D0C  1024               	iorwf	(??___flmul+1)^0,w,c
 13620  001D0E  1025               	iorwf	(??___flmul+2)^0,w,c
 13621  001D10  1026               	iorwf	(??___flmul+3)^0,w,c
 13622  001D12  B4D8               	btfsc	status,2,c
 13623  001D14  EF8E  F00E         	goto	u8821
 13624  001D18  EF90  F00E         	goto	u8820
 13625  001D1C                     u8821:
 13626  001D1C  EF94  F00E         	goto	l1553
 13627  001D20                     u8820:
 13628  001D20                     l8347:
 13629  001D20  0E01               	movlw	1
 13630  001D22  6E28               	movwf	___flmul@aexp^0,c
 13631  001D24  EF9D  F00E         	goto	l1552
 13632  001D28                     l1553:
 13633  001D28  A02E               	btfss	___flmul@prod^0,0,c
 13634  001D2A  EF99  F00E         	goto	u8831
 13635  001D2E  EF9B  F00E         	goto	u8830
 13636  001D32                     u8831:
 13637  001D32  EF9D  F00E         	goto	l1552
 13638  001D36                     u8830:
 13639  001D36  EF90  F00E         	goto	l8347
 13640  001D3A                     l1552:
 13641  001D3A  5028               	movf	___flmul@aexp^0,w,c
 13642  001D3C  B4D8               	btfsc	status,2,c
 13643  001D3E  EFA3  F00E         	goto	u8841
 13644  001D42  EFA5  F00E         	goto	u8840
 13645  001D46                     u8841:
 13646  001D46  EFC9  F00E         	goto	l8359
 13647  001D4A                     u8840:
 13648  001D4A  0E01               	movlw	1
 13649  001D4C  262E               	addwf	___flmul@prod^0,f,c
 13650  001D4E  0E00               	movlw	0
 13651  001D50  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13652  001D52  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13653  001D54  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13654  001D56  A031               	btfss	(___flmul@prod+3)^0,0,c
 13655  001D58  EFB0  F00E         	goto	u8851
 13656  001D5C  EFB2  F00E         	goto	u8850
 13657  001D60                     u8851:
 13658  001D60  EFC9  F00E         	goto	l8359
 13659  001D64                     u8850:
 13660  001D64  C02E  F023         	movff	___flmul@prod,??___flmul
 13661  001D68  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
 13662  001D6C  C030  F025         	movff	___flmul@prod+2,??___flmul+2
 13663  001D70  C031  F026         	movff	___flmul@prod+3,??___flmul+3
 13664  001D74  3426               	rlcf	(??___flmul+3)^0,w,c
 13665  001D76  3226               	rrcf	(??___flmul+3)^0,f,c
 13666  001D78  3225               	rrcf	(??___flmul+2)^0,f,c
 13667  001D7A  3224               	rrcf	(??___flmul+1)^0,f,c
 13668  001D7C  3223               	rrcf	??___flmul^0,f,c
 13669  001D7E  C023  F02E         	movff	??___flmul,___flmul@prod
 13670  001D82  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
 13671  001D86  C025  F030         	movff	??___flmul+2,___flmul@prod+2
 13672  001D8A  C026  F031         	movff	??___flmul+3,___flmul@prod+3
 13673  001D8E  4A32               	infsnz	___flmul@temp^0,f,c
 13674  001D90  2A33               	incf	(___flmul@temp+1)^0,f,c
 13675  001D92                     l8359:
 13676  001D92  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 13677  001D94  EFD4  F00E         	goto	u8861
 13678  001D98  5033               	movf	(___flmul@temp+1)^0,w,c
 13679  001D9A  E108               	bnz	u8860
 13680  001D9C  2832               	incf	___flmul@temp^0,w,c
 13681  001D9E  A0D8               	btfss	status,0,c
 13682  001DA0  EFD4  F00E         	goto	u8861
 13683  001DA4  EFD6  F00E         	goto	u8860
 13684  001DA8                     u8861:
 13685  001DA8  EFE0  F00E         	goto	l8363
 13686  001DAC                     u8860:
 13687  001DAC  0E00               	movlw	0
 13688  001DAE  6E2E               	movwf	___flmul@prod^0,c
 13689  001DB0  0E00               	movlw	0
 13690  001DB2  6E2F               	movwf	(___flmul@prod+1)^0,c
 13691  001DB4  0E80               	movlw	128
 13692  001DB6  6E30               	movwf	(___flmul@prod+2)^0,c
 13693  001DB8  0E7F               	movlw	127
 13694  001DBA  6E31               	movwf	(___flmul@prod+3)^0,c
 13695  001DBC  EF0E  F00F         	goto	l8375
 13696  001DC0                     l8363:
 13697  001DC0  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 13698  001DC2  EFED  F00E         	goto	u8870
 13699  001DC6  5033               	movf	(___flmul@temp+1)^0,w,c
 13700  001DC8  E106               	bnz	u8871
 13701  001DCA  0432               	decf	___flmul@temp^0,w,c
 13702  001DCC  B0D8               	btfsc	status,0,c
 13703  001DCE  EFEB  F00E         	goto	u8871
 13704  001DD2  EFED  F00E         	goto	u8870
 13705  001DD6                     u8871:
 13706  001DD6  EFF9  F00E         	goto	l1560
 13707  001DDA                     u8870:
 13708  001DDA  0E00               	movlw	0
 13709  001DDC  6E2E               	movwf	___flmul@prod^0,c
 13710  001DDE  0E00               	movlw	0
 13711  001DE0  6E2F               	movwf	(___flmul@prod+1)^0,c
 13712  001DE2  0E00               	movlw	0
 13713  001DE4  6E30               	movwf	(___flmul@prod+2)^0,c
 13714  001DE6  0E00               	movlw	0
 13715  001DE8  6E31               	movwf	(___flmul@prod+3)^0,c
 13716  001DEA  0E00               	movlw	0
 13717  001DEC  6E27               	movwf	___flmul@sign^0,c
 13718  001DEE  EF0E  F00F         	goto	l8375
 13719  001DF2                     l1560:
 13720  001DF2  C032  F02D         	movff	___flmul@temp,___flmul@bexp
 13721  001DF6  0EFF               	movlw	255
 13722  001DF8  162E               	andwf	___flmul@prod^0,f,c
 13723  001DFA  0EFF               	movlw	255
 13724  001DFC  162F               	andwf	(___flmul@prod+1)^0,f,c
 13725  001DFE  0E7F               	movlw	127
 13726  001E00  1630               	andwf	(___flmul@prod+2)^0,f,c
 13727  001E02  0E00               	movlw	0
 13728  001E04  1631               	andwf	(___flmul@prod+3)^0,f,c
 13729  001E06  A02D               	btfss	___flmul@bexp^0,0,c
 13730  001E08  EF08  F00F         	goto	u8881
 13731  001E0C  EF0A  F00F         	goto	u8880
 13732  001E10                     u8881:
 13733  001E10  EF0B  F00F         	goto	l8373
 13734  001E14                     u8880:
 13735  001E14  8E30               	bsf	(___flmul@prod+2)^0,7,c
 13736  001E16                     l8373:
 13737  001E16  90D8               	bcf	status,0,c
 13738  001E18  302D               	rrcf	___flmul@bexp^0,w,c
 13739  001E1A  6E31               	movwf	(___flmul@prod+3)^0,c
 13740  001E1C                     l8375:
 13741  001E1C  5027               	movf	___flmul@sign^0,w,c
 13742  001E1E  1231               	iorwf	(___flmul@prod+3)^0,f,c
 13743  001E20  C02E  F01B         	movff	___flmul@prod,?___flmul
 13744  001E24  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
 13745  001E28  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
 13746  001E2C  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
 13747  001E30                     l1547:
 13748  001E30  0012               	return		;funcret
 13749  001E32                     __end_of___flmul:
 13750                           	opt callstack 0
 13751                           
 13752 ;; *************** function ___fldiv *****************
 13753 ;; Defined at:
 13754 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 13755 ;; Parameters:    Size  Location     Type
 13756 ;;  b               4   67[COMRAM] unsigned char 
 13757 ;;  a               4   71[COMRAM] unsigned char 
 13758 ;; Auto vars:     Size  Location     Type
 13759 ;;  grs             4    7[BANK0 ] unsigned long 
 13760 ;;  rem             4    0[BANK0 ] unsigned long 
 13761 ;;  new_exp         2    5[BANK0 ] short 
 13762 ;;  aexp            1   12[BANK0 ] unsigned char 
 13763 ;;  bexp            1   11[BANK0 ] unsigned char 
 13764 ;;  sign            1    4[BANK0 ] unsigned char 
 13765 ;; Return value:  Size  Location     Type
 13766 ;;                  4   67[COMRAM] unsigned char 
 13767 ;; Registers used:
 13768 ;;		wreg, status,2, status,0
 13769 ;; Tracked objects:
 13770 ;;		On entry : 0/0
 13771 ;;		On exit  : 0/0
 13772 ;;		Unchanged: 0/0
 13773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13774 ;;      Params:         8       0       0       0       0       0       0       0       0
 13775 ;;      Locals:         0      13       0       0       0       0       0       0       0
 13776 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13777 ;;      Totals:        12      13       0       0       0       0       0       0       0
 13778 ;;Total ram usage:       25 bytes
 13779 ;; Hardware stack levels used:    1
 13780 ;; Hardware stack levels required when called:    2
 13781 ;; This function calls:
 13782 ;;		Nothing
 13783 ;; This function is called by:
 13784 ;;		_pwmDuty
 13785 ;;		_leerSensores
 13786 ;;		_efgtoa
 13787 ;; This function uses a non-reentrant model
 13788 ;;
 13789                           
 13790                           	psect	text60
 13791  002602                     __ptext60:
 13792                           	opt callstack 0
 13793  002602                     ___fldiv:
 13794                           	opt callstack 23
 13795  002602  5047               	movf	(___fldiv@b+3)^0,w,c
 13796  002604  0B80               	andlw	128
 13797  002606  0100               	movlb	0	; () banked
 13798  002608  6F64               	movwf	___fldiv@sign& (0+255),b
 13799  00260A  5047               	movf	(___fldiv@b+3)^0,w,c
 13800  00260C  2447               	addwf	(___fldiv@b+3)^0,w,c
 13801  00260E  6F6B               	movwf	___fldiv@bexp& (0+255),b
 13802  002610                     
 13803                           ; BSR set to: 0
 13804  002610  AE46               	btfss	(___fldiv@b+2)^0,7,c
 13805  002612  EF0D  F013         	goto	u8471
 13806  002616  EF0F  F013         	goto	u8470
 13807  00261A                     u8471:
 13808  00261A  EF10  F013         	goto	l8119
 13809  00261E                     u8470:
 13810  00261E                     
 13811                           ; BSR set to: 0
 13812  00261E  816B               	bsf	___fldiv@bexp& (0+255),0,b
 13813  002620                     l8119:
 13814                           
 13815                           ; BSR set to: 0
 13816  002620  516B               	movf	___fldiv@bexp& (0+255),w,b
 13817  002622  B4D8               	btfsc	status,2,c
 13818  002624  EF16  F013         	goto	u8481
 13819  002628  EF18  F013         	goto	u8480
 13820  00262C                     u8481:
 13821  00262C  EF2D  F013         	goto	l8129
 13822  002630                     u8480:
 13823  002630                     
 13824                           ; BSR set to: 0
 13825  002630  296B               	incf	___fldiv@bexp& (0+255),w,b
 13826  002632  A4D8               	btfss	status,2,c
 13827  002634  EF1E  F013         	goto	u8491
 13828  002638  EF20  F013         	goto	u8490
 13829  00263C                     u8491:
 13830  00263C  EF28  F013         	goto	l8125
 13831  002640                     u8490:
 13832  002640                     
 13833                           ; BSR set to: 0
 13834  002640  0E00               	movlw	0
 13835  002642  6E44               	movwf	___fldiv@b^0,c
 13836  002644  0E00               	movlw	0
 13837  002646  6E45               	movwf	(___fldiv@b+1)^0,c
 13838  002648  0E00               	movlw	0
 13839  00264A  6E46               	movwf	(___fldiv@b+2)^0,c
 13840  00264C  0E00               	movlw	0
 13841  00264E  6E47               	movwf	(___fldiv@b+3)^0,c
 13842  002650                     l8125:
 13843                           
 13844                           ; BSR set to: 0
 13845  002650  8E46               	bsf	(___fldiv@b+2)^0,7,c
 13846  002652                     
 13847                           ; BSR set to: 0
 13848  002652  0E00               	movlw	0
 13849  002654  6E47               	movwf	(___fldiv@b+3)^0,c
 13850  002656  EF35  F013         	goto	l8131
 13851  00265A                     l8129:
 13852                           
 13853                           ; BSR set to: 0
 13854  00265A  0E00               	movlw	0
 13855  00265C  6E44               	movwf	___fldiv@b^0,c
 13856  00265E  0E00               	movlw	0
 13857  002660  6E45               	movwf	(___fldiv@b+1)^0,c
 13858  002662  0E00               	movlw	0
 13859  002664  6E46               	movwf	(___fldiv@b+2)^0,c
 13860  002666  0E00               	movlw	0
 13861  002668  6E47               	movwf	(___fldiv@b+3)^0,c
 13862  00266A                     l8131:
 13863                           
 13864                           ; BSR set to: 0
 13865  00266A  504B               	movf	(___fldiv@a+3)^0,w,c
 13866  00266C  0B80               	andlw	128
 13867  00266E  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 13868  002670                     
 13869                           ; BSR set to: 0
 13870  002670  504B               	movf	(___fldiv@a+3)^0,w,c
 13871  002672  244B               	addwf	(___fldiv@a+3)^0,w,c
 13872  002674  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13873  002676                     
 13874                           ; BSR set to: 0
 13875  002676  AE4A               	btfss	(___fldiv@a+2)^0,7,c
 13876  002678  EF40  F013         	goto	u8501
 13877  00267C  EF42  F013         	goto	u8500
 13878  002680                     u8501:
 13879  002680  EF43  F013         	goto	l8139
 13880  002684                     u8500:
 13881  002684                     
 13882                           ; BSR set to: 0
 13883  002684  816C               	bsf	___fldiv@aexp& (0+255),0,b
 13884  002686                     l8139:
 13885                           
 13886                           ; BSR set to: 0
 13887  002686  516C               	movf	___fldiv@aexp& (0+255),w,b
 13888  002688  B4D8               	btfsc	status,2,c
 13889  00268A  EF49  F013         	goto	u8511
 13890  00268E  EF4B  F013         	goto	u8510
 13891  002692                     u8511:
 13892  002692  EF60  F013         	goto	l8149
 13893  002696                     u8510:
 13894  002696                     
 13895                           ; BSR set to: 0
 13896  002696  296C               	incf	___fldiv@aexp& (0+255),w,b
 13897  002698  A4D8               	btfss	status,2,c
 13898  00269A  EF51  F013         	goto	u8521
 13899  00269E  EF53  F013         	goto	u8520
 13900  0026A2                     u8521:
 13901  0026A2  EF5B  F013         	goto	l8145
 13902  0026A6                     u8520:
 13903  0026A6                     
 13904                           ; BSR set to: 0
 13905  0026A6  0E00               	movlw	0
 13906  0026A8  6E48               	movwf	___fldiv@a^0,c
 13907  0026AA  0E00               	movlw	0
 13908  0026AC  6E49               	movwf	(___fldiv@a+1)^0,c
 13909  0026AE  0E00               	movlw	0
 13910  0026B0  6E4A               	movwf	(___fldiv@a+2)^0,c
 13911  0026B2  0E00               	movlw	0
 13912  0026B4  6E4B               	movwf	(___fldiv@a+3)^0,c
 13913  0026B6                     l8145:
 13914                           
 13915                           ; BSR set to: 0
 13916  0026B6  8E4A               	bsf	(___fldiv@a+2)^0,7,c
 13917  0026B8                     
 13918                           ; BSR set to: 0
 13919  0026B8  0E00               	movlw	0
 13920  0026BA  6E4B               	movwf	(___fldiv@a+3)^0,c
 13921  0026BC  EF68  F013         	goto	l8151
 13922  0026C0                     l8149:
 13923                           
 13924                           ; BSR set to: 0
 13925  0026C0  0E00               	movlw	0
 13926  0026C2  6E48               	movwf	___fldiv@a^0,c
 13927  0026C4  0E00               	movlw	0
 13928  0026C6  6E49               	movwf	(___fldiv@a+1)^0,c
 13929  0026C8  0E00               	movlw	0
 13930  0026CA  6E4A               	movwf	(___fldiv@a+2)^0,c
 13931  0026CC  0E00               	movlw	0
 13932  0026CE  6E4B               	movwf	(___fldiv@a+3)^0,c
 13933  0026D0                     l8151:
 13934                           
 13935                           ; BSR set to: 0
 13936  0026D0  5048               	movf	___fldiv@a^0,w,c
 13937  0026D2  1049               	iorwf	(___fldiv@a+1)^0,w,c
 13938  0026D4  104A               	iorwf	(___fldiv@a+2)^0,w,c
 13939  0026D6  104B               	iorwf	(___fldiv@a+3)^0,w,c
 13940  0026D8  A4D8               	btfss	status,2,c
 13941  0026DA  EF71  F013         	goto	u8531
 13942  0026DE  EF73  F013         	goto	u8530
 13943  0026E2                     u8531:
 13944  0026E2  EF8B  F013         	goto	l8163
 13945  0026E6                     u8530:
 13946  0026E6                     
 13947                           ; BSR set to: 0
 13948  0026E6  0E00               	movlw	0
 13949  0026E8  6E44               	movwf	___fldiv@b^0,c
 13950  0026EA  0E00               	movlw	0
 13951  0026EC  6E45               	movwf	(___fldiv@b+1)^0,c
 13952  0026EE  0E00               	movlw	0
 13953  0026F0  6E46               	movwf	(___fldiv@b+2)^0,c
 13954  0026F2  0E00               	movlw	0
 13955  0026F4  6E47               	movwf	(___fldiv@b+3)^0,c
 13956  0026F6                     
 13957                           ; BSR set to: 0
 13958  0026F6  0E80               	movlw	128
 13959  0026F8  1246               	iorwf	(___fldiv@b+2)^0,f,c
 13960  0026FA  0E7F               	movlw	127
 13961  0026FC  1247               	iorwf	(___fldiv@b+3)^0,f,c
 13962  0026FE                     l8157:
 13963                           
 13964                           ; BSR set to: 0
 13965  0026FE  5164               	movf	___fldiv@sign& (0+255),w,b
 13966  002700  1247               	iorwf	(___fldiv@b+3)^0,f,c
 13967  002702                     
 13968                           ; BSR set to: 0
 13969  002702  C044  F044         	movff	___fldiv@b,?___fldiv
 13970  002706  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
 13971  00270A  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
 13972  00270E  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
 13973  002712  EFCE  F014         	goto	l1511
 13974  002716                     l8163:
 13975                           
 13976                           ; BSR set to: 0
 13977  002716  516B               	movf	___fldiv@bexp& (0+255),w,b
 13978  002718  A4D8               	btfss	status,2,c
 13979  00271A  EF91  F013         	goto	u8541
 13980  00271E  EF93  F013         	goto	u8540
 13981  002722                     u8541:
 13982  002722  EF9D  F013         	goto	l8171
 13983  002726                     u8540:
 13984  002726                     
 13985                           ; BSR set to: 0
 13986  002726  0E00               	movlw	0
 13987  002728  6E44               	movwf	?___fldiv^0,c
 13988  00272A  0E00               	movlw	0
 13989  00272C  6E45               	movwf	(?___fldiv+1)^0,c
 13990  00272E  0E00               	movlw	0
 13991  002730  6E46               	movwf	(?___fldiv+2)^0,c
 13992  002732  0E00               	movlw	0
 13993  002734  6E47               	movwf	(?___fldiv+3)^0,c
 13994  002736  EFCE  F014         	goto	l1511
 13995  00273A                     l8171:
 13996                           
 13997                           ; BSR set to: 0
 13998  00273A  516C               	movf	___fldiv@aexp& (0+255),w,b
 13999  00273C  C06B  F04C         	movff	___fldiv@bexp,??___fldiv
 14000  002740  6A4D               	clrf	(??___fldiv+1)^0,c
 14001  002742  5E4C               	subwf	??___fldiv^0,f,c
 14002  002744  0E00               	movlw	0
 14003  002746  5A4D               	subwfb	(??___fldiv+1)^0,f,c
 14004  002748  0E7F               	movlw	127
 14005  00274A  244C               	addwf	??___fldiv^0,w,c
 14006  00274C  6F65               	movwf	___fldiv@new_exp& (0+255),b
 14007  00274E  0E00               	movlw	0
 14008  002750  204D               	addwfc	(??___fldiv+1)^0,w,c
 14009  002752  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14010  002754                     
 14011                           ; BSR set to: 0
 14012  002754  C044  F060         	movff	___fldiv@b,___fldiv@rem
 14013  002758  C045  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 14014  00275C  C046  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 14015  002760  C047  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 14016  002764                     
 14017                           ; BSR set to: 0
 14018  002764  0E00               	movlw	0
 14019  002766  6E44               	movwf	___fldiv@b^0,c
 14020  002768  0E00               	movlw	0
 14021  00276A  6E45               	movwf	(___fldiv@b+1)^0,c
 14022  00276C  0E00               	movlw	0
 14023  00276E  6E46               	movwf	(___fldiv@b+2)^0,c
 14024  002770  0E00               	movlw	0
 14025  002772  6E47               	movwf	(___fldiv@b+3)^0,c
 14026  002774                     
 14027                           ; BSR set to: 0
 14028  002774  0E00               	movlw	0
 14029  002776  6F67               	movwf	___fldiv@grs& (0+255),b
 14030  002778  0E00               	movlw	0
 14031  00277A  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 14032  00277C  0E00               	movlw	0
 14033  00277E  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 14034  002780  0E00               	movlw	0
 14035  002782  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 14036  002784                     
 14037                           ; BSR set to: 0
 14038  002784  0E00               	movlw	0
 14039  002786  6F6C               	movwf	___fldiv@aexp& (0+255),b
 14040  002788  EFFE  F013         	goto	l1513
 14041  00278C                     l8181:
 14042                           
 14043                           ; BSR set to: 0
 14044  00278C  516C               	movf	___fldiv@aexp& (0+255),w,b
 14045  00278E  B4D8               	btfsc	status,2,c
 14046  002790  EFCC  F013         	goto	u8551
 14047  002794  EFCE  F013         	goto	u8550
 14048  002798                     u8551:
 14049  002798  EFE5  F013         	goto	l8189
 14050  00279C                     u8550:
 14051  00279C                     
 14052                           ; BSR set to: 0
 14053  00279C  90D8               	bcf	status,0,c
 14054  00279E  3760               	rlcf	___fldiv@rem& (0+255),f,b
 14055  0027A0  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 14056  0027A2  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 14057  0027A4  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 14058  0027A6  90D8               	bcf	status,0,c
 14059  0027A8  3644               	rlcf	___fldiv@b^0,f,c
 14060  0027AA  3645               	rlcf	(___fldiv@b+1)^0,f,c
 14061  0027AC  3646               	rlcf	(___fldiv@b+2)^0,f,c
 14062  0027AE  3647               	rlcf	(___fldiv@b+3)^0,f,c
 14063  0027B0                     
 14064                           ; BSR set to: 0
 14065  0027B0  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14066  0027B2  EFDD  F013         	goto	u8561
 14067  0027B6  EFDF  F013         	goto	u8560
 14068  0027BA                     u8561:
 14069  0027BA  EFE0  F013         	goto	l1516
 14070  0027BE                     u8560:
 14071  0027BE                     
 14072                           ; BSR set to: 0
 14073  0027BE  8044               	bsf	___fldiv@b^0,0,c
 14074  0027C0                     l1516:
 14075                           
 14076                           ; BSR set to: 0
 14077  0027C0  90D8               	bcf	status,0,c
 14078  0027C2  3767               	rlcf	___fldiv@grs& (0+255),f,b
 14079  0027C4  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14080  0027C6  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14081  0027C8  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14082  0027CA                     l8189:
 14083                           
 14084                           ; BSR set to: 0
 14085  0027CA  5048               	movf	___fldiv@a^0,w,c
 14086  0027CC  5D60               	subwf	___fldiv@rem& (0+255),w,b
 14087  0027CE  5049               	movf	(___fldiv@a+1)^0,w,c
 14088  0027D0  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 14089  0027D2  504A               	movf	(___fldiv@a+2)^0,w,c
 14090  0027D4  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 14091  0027D6  504B               	movf	(___fldiv@a+3)^0,w,c
 14092  0027D8  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 14093  0027DA  A0D8               	btfss	status,0,c
 14094  0027DC  EFF2  F013         	goto	u8571
 14095  0027E0  EFF4  F013         	goto	u8570
 14096  0027E4                     u8571:
 14097  0027E4  EFFD  F013         	goto	l8195
 14098  0027E8                     u8570:
 14099  0027E8                     
 14100                           ; BSR set to: 0
 14101  0027E8  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 14102  0027EA                     
 14103                           ; BSR set to: 0
 14104  0027EA  5048               	movf	___fldiv@a^0,w,c
 14105  0027EC  5F60               	subwf	___fldiv@rem& (0+255),f,b
 14106  0027EE  5049               	movf	(___fldiv@a+1)^0,w,c
 14107  0027F0  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 14108  0027F2  504A               	movf	(___fldiv@a+2)^0,w,c
 14109  0027F4  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 14110  0027F6  504B               	movf	(___fldiv@a+3)^0,w,c
 14111  0027F8  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 14112  0027FA                     l8195:
 14113                           
 14114                           ; BSR set to: 0
 14115  0027FA  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 14116  0027FC                     l1513:
 14117                           
 14118                           ; BSR set to: 0
 14119  0027FC  0E19               	movlw	25
 14120  0027FE  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 14121  002800  EF04  F014         	goto	u8581
 14122  002804  EF06  F014         	goto	u8580
 14123  002808                     u8581:
 14124  002808  EFC6  F013         	goto	l8181
 14125  00280C                     u8580:
 14126  00280C                     
 14127                           ; BSR set to: 0
 14128  00280C  5160               	movf	___fldiv@rem& (0+255),w,b
 14129  00280E  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 14130  002810  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 14131  002812  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 14132  002814  B4D8               	btfsc	status,2,c
 14133  002816  EF0F  F014         	goto	u8591
 14134  00281A  EF11  F014         	goto	u8590
 14135  00281E                     u8591:
 14136  00281E  EF29  F014         	goto	l8207
 14137  002822                     u8590:
 14138  002822                     
 14139                           ; BSR set to: 0
 14140  002822  8167               	bsf	___fldiv@grs& (0+255),0,b
 14141  002824  EF29  F014         	goto	l8207
 14142  002828                     l8201:
 14143                           
 14144                           ; BSR set to: 0
 14145  002828  90D8               	bcf	status,0,c
 14146  00282A  3644               	rlcf	___fldiv@b^0,f,c
 14147  00282C  3645               	rlcf	(___fldiv@b+1)^0,f,c
 14148  00282E  3646               	rlcf	(___fldiv@b+2)^0,f,c
 14149  002830  3647               	rlcf	(___fldiv@b+3)^0,f,c
 14150  002832                     
 14151                           ; BSR set to: 0
 14152  002832  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14153  002834  EF1E  F014         	goto	u8601
 14154  002838  EF20  F014         	goto	u8600
 14155  00283C                     u8601:
 14156  00283C  EF21  F014         	goto	l1522
 14157  002840                     u8600:
 14158  002840                     
 14159                           ; BSR set to: 0
 14160  002840  8044               	bsf	___fldiv@b^0,0,c
 14161  002842                     l1522:
 14162                           
 14163                           ; BSR set to: 0
 14164  002842  90D8               	bcf	status,0,c
 14165  002844  3767               	rlcf	___fldiv@grs& (0+255),f,b
 14166  002846  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14167  002848  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14168  00284A  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14169  00284C  0765               	decf	___fldiv@new_exp& (0+255),f,b
 14170  00284E  A0D8               	btfss	status,0,c
 14171  002850  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 14172  002852                     l8207:
 14173                           
 14174                           ; BSR set to: 0
 14175  002852  AE46               	btfss	(___fldiv@b+2)^0,7,c
 14176  002854  EF2E  F014         	goto	u8611
 14177  002858  EF30  F014         	goto	u8610
 14178  00285C                     u8611:
 14179  00285C  EF14  F014         	goto	l8201
 14180  002860                     u8610:
 14181  002860                     
 14182                           ; BSR set to: 0
 14183  002860  0E00               	movlw	0
 14184  002862  6F6C               	movwf	___fldiv@aexp& (0+255),b
 14185  002864                     
 14186                           ; BSR set to: 0
 14187  002864  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14188  002866  EF37  F014         	goto	u8621
 14189  00286A  EF39  F014         	goto	u8620
 14190  00286E                     u8621:
 14191  00286E  EF5D  F014         	goto	l1524
 14192  002872                     u8620:
 14193  002872                     
 14194                           ; BSR set to: 0
 14195  002872  0EFF               	movlw	255
 14196  002874  1567               	andwf	___fldiv@grs& (0+255),w,b
 14197  002876  6E4C               	movwf	??___fldiv^0,c
 14198  002878  0EFF               	movlw	255
 14199  00287A  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14200  00287C  6E4D               	movwf	(??___fldiv+1)^0,c
 14201  00287E  0EFF               	movlw	255
 14202  002880  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14203  002882  6E4E               	movwf	(??___fldiv+2)^0,c
 14204  002884  0E7F               	movlw	127
 14205  002886  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14206  002888  6E4F               	movwf	(??___fldiv+3)^0,c
 14207  00288A  504C               	movf	??___fldiv^0,w,c
 14208  00288C  104D               	iorwf	(??___fldiv+1)^0,w,c
 14209  00288E  104E               	iorwf	(??___fldiv+2)^0,w,c
 14210  002890  104F               	iorwf	(??___fldiv+3)^0,w,c
 14211  002892  B4D8               	btfsc	status,2,c
 14212  002894  EF4E  F014         	goto	u8631
 14213  002898  EF50  F014         	goto	u8630
 14214  00289C                     u8631:
 14215  00289C  EF54  F014         	goto	l1525
 14216  0028A0                     u8630:
 14217  0028A0                     l8215:
 14218                           
 14219                           ; BSR set to: 0
 14220  0028A0  0E01               	movlw	1
 14221  0028A2  6F6C               	movwf	___fldiv@aexp& (0+255),b
 14222  0028A4  EF5D  F014         	goto	l1524
 14223  0028A8                     l1525:
 14224                           
 14225                           ; BSR set to: 0
 14226  0028A8  A044               	btfss	___fldiv@b^0,0,c
 14227  0028AA  EF59  F014         	goto	u8641
 14228  0028AE  EF5B  F014         	goto	u8640
 14229  0028B2                     u8641:
 14230  0028B2  EF5D  F014         	goto	l1524
 14231  0028B6                     u8640:
 14232  0028B6  EF50  F014         	goto	l8215
 14233  0028BA                     l1524:
 14234                           
 14235                           ; BSR set to: 0
 14236  0028BA  516C               	movf	___fldiv@aexp& (0+255),w,b
 14237  0028BC  B4D8               	btfsc	status,2,c
 14238  0028BE  EF63  F014         	goto	u8651
 14239  0028C2  EF65  F014         	goto	u8650
 14240  0028C6                     u8651:
 14241  0028C6  EF89  F014         	goto	l8227
 14242  0028CA                     u8650:
 14243  0028CA                     
 14244                           ; BSR set to: 0
 14245  0028CA  0E01               	movlw	1
 14246  0028CC  2644               	addwf	___fldiv@b^0,f,c
 14247  0028CE  0E00               	movlw	0
 14248  0028D0  2245               	addwfc	(___fldiv@b+1)^0,f,c
 14249  0028D2  2246               	addwfc	(___fldiv@b+2)^0,f,c
 14250  0028D4  2247               	addwfc	(___fldiv@b+3)^0,f,c
 14251  0028D6                     
 14252                           ; BSR set to: 0
 14253  0028D6  A047               	btfss	(___fldiv@b+3)^0,0,c
 14254  0028D8  EF70  F014         	goto	u8661
 14255  0028DC  EF72  F014         	goto	u8660
 14256  0028E0                     u8661:
 14257  0028E0  EF89  F014         	goto	l8227
 14258  0028E4                     u8660:
 14259  0028E4                     
 14260                           ; BSR set to: 0
 14261  0028E4  C044  F04C         	movff	___fldiv@b,??___fldiv
 14262  0028E8  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
 14263  0028EC  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
 14264  0028F0  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
 14265  0028F4  344F               	rlcf	(??___fldiv+3)^0,w,c
 14266  0028F6  324F               	rrcf	(??___fldiv+3)^0,f,c
 14267  0028F8  324E               	rrcf	(??___fldiv+2)^0,f,c
 14268  0028FA  324D               	rrcf	(??___fldiv+1)^0,f,c
 14269  0028FC  324C               	rrcf	??___fldiv^0,f,c
 14270  0028FE  C04C  F044         	movff	??___fldiv,___fldiv@b
 14271  002902  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
 14272  002906  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
 14273  00290A  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
 14274  00290E                     
 14275                           ; BSR set to: 0
 14276  00290E  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 14277  002910  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14278  002912                     l8227:
 14279                           
 14280                           ; BSR set to: 0
 14281  002912  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14282  002914  EF94  F014         	goto	u8671
 14283  002918  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14284  00291A  E108               	bnz	u8670
 14285  00291C  2965               	incf	___fldiv@new_exp& (0+255),w,b
 14286  00291E  A0D8               	btfss	status,0,c
 14287  002920  EF94  F014         	goto	u8671
 14288  002924  EF96  F014         	goto	u8670
 14289  002928                     u8671:
 14290  002928  EFA1  F014         	goto	l8231
 14291  00292C                     u8670:
 14292  00292C                     
 14293                           ; BSR set to: 0
 14294  00292C  0E00               	movlw	0
 14295  00292E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14296  002930  6965               	setf	___fldiv@new_exp& (0+255),b
 14297  002932  0E00               	movlw	0
 14298  002934  6E44               	movwf	___fldiv@b^0,c
 14299  002936  0E00               	movlw	0
 14300  002938  6E45               	movwf	(___fldiv@b+1)^0,c
 14301  00293A  0E00               	movlw	0
 14302  00293C  6E46               	movwf	(___fldiv@b+2)^0,c
 14303  00293E  0E00               	movlw	0
 14304  002940  6E47               	movwf	(___fldiv@b+3)^0,c
 14305  002942                     l8231:
 14306                           
 14307                           ; BSR set to: 0
 14308  002942  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14309  002944  EFAE  F014         	goto	u8680
 14310  002948  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14311  00294A  E106               	bnz	u8681
 14312  00294C  0565               	decf	___fldiv@new_exp& (0+255),w,b
 14313  00294E  B0D8               	btfsc	status,0,c
 14314  002950  EFAC  F014         	goto	u8681
 14315  002954  EFAE  F014         	goto	u8680
 14316  002958                     u8681:
 14317  002958  EFBC  F014         	goto	l8235
 14318  00295C                     u8680:
 14319  00295C                     
 14320                           ; BSR set to: 0
 14321  00295C  0E00               	movlw	0
 14322  00295E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14323  002960  0E00               	movlw	0
 14324  002962  6F65               	movwf	___fldiv@new_exp& (0+255),b
 14325  002964  0E00               	movlw	0
 14326  002966  6E44               	movwf	___fldiv@b^0,c
 14327  002968  0E00               	movlw	0
 14328  00296A  6E45               	movwf	(___fldiv@b+1)^0,c
 14329  00296C  0E00               	movlw	0
 14330  00296E  6E46               	movwf	(___fldiv@b+2)^0,c
 14331  002970  0E00               	movlw	0
 14332  002972  6E47               	movwf	(___fldiv@b+3)^0,c
 14333  002974  0E00               	movlw	0
 14334  002976  6F64               	movwf	___fldiv@sign& (0+255),b
 14335  002978                     l8235:
 14336                           
 14337                           ; BSR set to: 0
 14338  002978  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 14339  00297C                     
 14340                           ; BSR set to: 0
 14341  00297C  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 14342  00297E  EFC3  F014         	goto	u8691
 14343  002982  EFC5  F014         	goto	u8690
 14344  002986                     u8691:
 14345  002986  EFC8  F014         	goto	l8241
 14346  00298A                     u8690:
 14347  00298A                     
 14348                           ; BSR set to: 0
 14349  00298A  8E46               	bsf	(___fldiv@b+2)^0,7,c
 14350  00298C  EFC9  F014         	goto	l8243
 14351  002990                     l8241:
 14352                           
 14353                           ; BSR set to: 0
 14354  002990  9E46               	bcf	(___fldiv@b+2)^0,7,c
 14355  002992                     l8243:
 14356                           
 14357                           ; BSR set to: 0
 14358  002992  90D8               	bcf	status,0,c
 14359  002994  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 14360  002996  6E47               	movwf	(___fldiv@b+3)^0,c
 14361  002998  EF7F  F013         	goto	l8157
 14362  00299C                     l1511:
 14363                           
 14364                           ; BSR set to: 0
 14365  00299C  0012               	return		;funcret
 14366  00299E                     __end_of___fldiv:
 14367                           	opt callstack 0
 14368                           
 14369 ;; *************** function _forzarReversa *****************
 14370 ;; Defined at:
 14371 ;;		line 476 in file "main.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;		None
 14374 ;; Auto vars:     Size  Location     Type
 14375 ;;		None
 14376 ;; Return value:  Size  Location     Type
 14377 ;;                  1    wreg      void 
 14378 ;; Registers used:
 14379 ;;		wreg
 14380 ;; Tracked objects:
 14381 ;;		On entry : 0/0
 14382 ;;		On exit  : 0/0
 14383 ;;		Unchanged: 0/0
 14384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14385 ;;      Params:         0       0       0       0       0       0       0       0       0
 14386 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14387 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14388 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14389 ;;Total ram usage:        2 bytes
 14390 ;; Hardware stack levels used:    1
 14391 ;; Hardware stack levels required when called:    2
 14392 ;; This function calls:
 14393 ;;		Nothing
 14394 ;; This function is called by:
 14395 ;;		_forzarEspejeoIzquierda
 14396 ;;		_forzarEspejeoDerecha
 14397 ;; This function uses a non-reentrant model
 14398 ;;
 14399                           
 14400                           	psect	text61
 14401  005404                     __ptext61:
 14402                           	opt callstack 0
 14403  005404                     _forzarReversa:
 14404                           	opt callstack 24
 14405  005404                     
 14406                           ;main.c: 477:     LATB4 = 0;
 14407  005404  988A               	bcf	3978,4,c	;volatile
 14408                           
 14409                           ;main.c: 478:     LATB5 = 1;
 14410  005406  8A8A               	bsf	3978,5,c	;volatile
 14411                           
 14412                           ;main.c: 479:     LATB6 = 0;
 14413  005408  9C8A               	bcf	3978,6,c	;volatile
 14414                           
 14415                           ;main.c: 480:     LATB7 = 1;
 14416  00540A  8E8A               	bsf	3978,7,c	;volatile
 14417  00540C                     
 14418                           ;main.c: 482:     _delay((unsigned long)((400)*(4000000/4000.0)));
 14419  00540C  0E03               	movlw	3
 14420  00540E  6E07               	movwf	(??_forzarReversa+1)^0,c
 14421  005410  0E08               	movlw	8
 14422  005412  6E06               	movwf	??_forzarReversa^0,c
 14423  005414  0E77               	movlw	119
 14424  005416                     u11927:
 14425  005416  2EE8               	decfsz	wreg,f,c
 14426  005418  D7FE               	bra	u11927
 14427  00541A  2E06               	decfsz	??_forzarReversa^0,f,c
 14428  00541C  D7FC               	bra	u11927
 14429  00541E  2E07               	decfsz	(??_forzarReversa+1)^0,f,c
 14430  005420  D7FA               	bra	u11927
 14431  005422  F000               	nop	
 14432  005424  0012               	return		;funcret
 14433  005426                     __end_of_forzarReversa:
 14434                           	opt callstack 0
 14435                           
 14436 ;; *************** function _forzarParoAuto *****************
 14437 ;; Defined at:
 14438 ;;		line 468 in file "main.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;		None
 14441 ;; Auto vars:     Size  Location     Type
 14442 ;;		None
 14443 ;; Return value:  Size  Location     Type
 14444 ;;                  1    wreg      void 
 14445 ;; Registers used:
 14446 ;;		None
 14447 ;; Tracked objects:
 14448 ;;		On entry : 0/0
 14449 ;;		On exit  : 0/0
 14450 ;;		Unchanged: 0/0
 14451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14452 ;;      Params:         0       0       0       0       0       0       0       0       0
 14453 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14454 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14455 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14456 ;;Total ram usage:        0 bytes
 14457 ;; Hardware stack levels used:    1
 14458 ;; Hardware stack levels required when called:    2
 14459 ;; This function calls:
 14460 ;;		Nothing
 14461 ;; This function is called by:
 14462 ;;		_comportamientoBasico
 14463 ;;		_finalizarRecorrido
 14464 ;;		_forzarEspejeoIzquierda
 14465 ;;		_forzarEspejeoDerecha
 14466 ;;		_main
 14467 ;; This function uses a non-reentrant model
 14468 ;;
 14469                           
 14470                           	psect	text62
 14471  0054CA                     __ptext62:
 14472                           	opt callstack 0
 14473  0054CA                     _forzarParoAuto:
 14474                           	opt callstack 28
 14475  0054CA                     
 14476                           ;main.c: 470:     LATB4 = 0;
 14477  0054CA  988A               	bcf	3978,4,c	;volatile
 14478                           
 14479                           ;main.c: 471:     LATB5 = 0;
 14480  0054CC  9A8A               	bcf	3978,5,c	;volatile
 14481                           
 14482                           ;main.c: 472:     LATB6 = 0;
 14483  0054CE  9C8A               	bcf	3978,6,c	;volatile
 14484                           
 14485                           ;main.c: 473:     LATB7 = 0;
 14486  0054D0  9E8A               	bcf	3978,7,c	;volatile
 14487  0054D2  0012               	return		;funcret
 14488  0054D4                     __end_of_forzarParoAuto:
 14489                           	opt callstack 0
 14490                           
 14491 ;; *************** function _forzarGiroDerecha *****************
 14492 ;; Defined at:
 14493 ;;		line 505 in file "main.c"
 14494 ;; Parameters:    Size  Location     Type
 14495 ;;		None
 14496 ;; Auto vars:     Size  Location     Type
 14497 ;;		None
 14498 ;; Return value:  Size  Location     Type
 14499 ;;                  1    wreg      void 
 14500 ;; Registers used:
 14501 ;;		wreg
 14502 ;; Tracked objects:
 14503 ;;		On entry : 0/0
 14504 ;;		On exit  : 0/0
 14505 ;;		Unchanged: 0/0
 14506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14507 ;;      Params:         0       0       0       0       0       0       0       0       0
 14508 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14509 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14510 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14511 ;;Total ram usage:        2 bytes
 14512 ;; Hardware stack levels used:    1
 14513 ;; Hardware stack levels required when called:    2
 14514 ;; This function calls:
 14515 ;;		Nothing
 14516 ;; This function is called by:
 14517 ;;		_forzarEspejeoDerecha
 14518 ;; This function uses a non-reentrant model
 14519 ;;
 14520                           
 14521                           	psect	text63
 14522  005446                     __ptext63:
 14523                           	opt callstack 0
 14524  005446                     _forzarGiroDerecha:
 14525                           	opt callstack 24
 14526  005446                     
 14527                           ;main.c: 506:     LATB4 = 1;
 14528  005446  888A               	bsf	3978,4,c	;volatile
 14529                           
 14530                           ;main.c: 507:     LATB5 = 0;
 14531  005448  9A8A               	bcf	3978,5,c	;volatile
 14532                           
 14533                           ;main.c: 508:     LATB6 = 0;
 14534  00544A  9C8A               	bcf	3978,6,c	;volatile
 14535                           
 14536                           ;main.c: 509:     LATB7 = 0;
 14537  00544C  9E8A               	bcf	3978,7,c	;volatile
 14538  00544E                     
 14539                           ;main.c: 510:     _delay((unsigned long)((410)*(4000000/4000.0)));
 14540  00544E  0E03               	movlw	3
 14541  005450  6E07               	movwf	(??_forzarGiroDerecha+1)^0,c
 14542  005452  0E15               	movlw	21
 14543  005454  6E06               	movwf	??_forzarGiroDerecha^0,c
 14544  005456  0E74               	movlw	116
 14545  005458                     u11937:
 14546  005458  2EE8               	decfsz	wreg,f,c
 14547  00545A  D7FE               	bra	u11937
 14548  00545C  2E06               	decfsz	??_forzarGiroDerecha^0,f,c
 14549  00545E  D7FC               	bra	u11937
 14550  005460  2E07               	decfsz	(??_forzarGiroDerecha+1)^0,f,c
 14551  005462  D7FA               	bra	u11937
 14552  005464  0012               	return		;funcret
 14553  005466                     __end_of_forzarGiroDerecha:
 14554                           	opt callstack 0
 14555                           
 14556 ;; *************** function _decidirDireccion *****************
 14557 ;; Defined at:
 14558 ;;		line 852 in file "main.c"
 14559 ;; Parameters:    Size  Location     Type
 14560 ;;  caminosRecor    2   63[COMRAM] PTR unsigned char 
 14561 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 14562 ;;  investigando    2   65[COMRAM] PTR unsigned char 
 14563 ;;		 -> comportamientoBasico@investigandoCruce(1), 
 14564 ;;  posicionInvC    2   67[COMRAM] PTR unsigned char 
 14565 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
 14566 ;;  contCaminosR    2   69[COMRAM] PTR unsigned char 
 14567 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
 14568 ;;  caminoActual    2   71[COMRAM] PTR unsigned char 
 14569 ;;		 -> comportamientoBasico@caminoActual(1), 
 14570 ;;  cambioOrient    2   73[COMRAM] PTR unsigned char 
 14571 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
 14572 ;; Auto vars:     Size  Location     Type
 14573 ;;  direccionEle    1   77[COMRAM] unsigned char 
 14574 ;; Return value:  Size  Location     Type
 14575 ;;                  1    wreg      unsigned char 
 14576 ;; Registers used:
 14577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14578 ;; Tracked objects:
 14579 ;;		On entry : 0/0
 14580 ;;		On exit  : 0/0
 14581 ;;		Unchanged: 0/0
 14582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14583 ;;      Params:        12       0       0       0       0       0       0       0       0
 14584 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14585 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14586 ;;      Totals:        15       0       0       0       0       0       0       0       0
 14587 ;;Total ram usage:       15 bytes
 14588 ;; Hardware stack levels used:    1
 14589 ;; Hardware stack levels required when called:    4
 14590 ;; This function calls:
 14591 ;;		___flge
 14592 ;;		_seLlegoAlDestino
 14593 ;; This function is called by:
 14594 ;;		_comportamientoBasico
 14595 ;; This function uses a non-reentrant model
 14596 ;;
 14597                           
 14598                           	psect	text64
 14599  0015CE                     __ptext64:
 14600                           	opt callstack 0
 14601  0015CE                     _decidirDireccion:
 14602                           	opt callstack 25
 14603  0015CE                     
 14604                           ;main.c: 852: T_UBYTE decidirDireccion(T_UBYTE* caminosRecorrer, T_UBYTE* investigandoCr
      +                          uce, T_UBYTE* posicionInvCruce,;main.c: 853:         T_UBYTE* contCaminosRecorridos, T_U
      +                          BYTE* caminoActual, T_BOOL* cambioOrientacionCarro) {;main.c: 855:     T_UBYTE direccion
      +                          Elegida;;main.c: 856:     llegoDestino = seLlegoAlDestino();
 14605  0015CE  ECA1  F029         	call	_seLlegoAlDestino	;wreg free
 14606  0015D2  6E59               	movwf	_llegoDestino^0,c
 14607  0015D4                     
 14608                           ;main.c: 859:     if (*posicionInvCruce && *investigandoCruce) {
 14609  0015D4  C044  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
 14610  0015D8  C045  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
 14611  0015DC  50DF               	movf	indf2,w,c
 14612  0015DE  B4D8               	btfsc	status,2,c
 14613  0015E0  EFF4  F00A         	goto	u11151
 14614  0015E4  EFF6  F00A         	goto	u11150
 14615  0015E8                     u11151:
 14616  0015E8  EFA1  F00C         	goto	l9999
 14617  0015EC                     u11150:
 14618  0015EC  C042  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
 14619  0015F0  C043  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
 14620  0015F4  50DF               	movf	indf2,w,c
 14621  0015F6  B4D8               	btfsc	status,2,c
 14622  0015F8  EF00  F00B         	goto	u11161
 14623  0015FC  EF02  F00B         	goto	u11160
 14624  001600                     u11161:
 14625  001600  EFA1  F00C         	goto	l9999
 14626  001604                     u11160:
 14627  001604                     
 14628                           ;main.c: 861:         if (*posicionInvCruce)
 14629  001604  C044  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
 14630  001608  C045  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
 14631  00160C  50DF               	movf	indf2,w,c
 14632  00160E  B4D8               	btfsc	status,2,c
 14633  001610  EF0C  F00B         	goto	u11171
 14634  001614  EF0E  F00B         	goto	u11170
 14635  001618                     u11171:
 14636  001618  EF14  F00B         	goto	l9761
 14637  00161C                     u11170:
 14638  00161C                     
 14639                           ;main.c: 862:             *posicionInvCruce = 0;
 14640  00161C  C044  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
 14641  001620  C045  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
 14642  001624  0E00               	movlw	0
 14643  001626  6EDF               	movwf	indf2,c
 14644  001628                     l9761:
 14645                           
 14646                           ;main.c: 864:         if (llegoDestino) {
 14647  001628  5059               	movf	_llegoDestino^0,w,c
 14648  00162A  B4D8               	btfsc	status,2,c
 14649  00162C  EF1A  F00B         	goto	u11181
 14650  001630  EF1C  F00B         	goto	u11180
 14651  001634                     u11181:
 14652  001634  EF76  F00B         	goto	l9785
 14653  001638                     u11180:
 14654  001638                     
 14655                           ;main.c: 865:             direccionElegida = ALTO;
 14656  001638  0E04               	movlw	4
 14657  00163A  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14658                           
 14659                           ;main.c: 867:         } else {
 14660  00163C  EF93  F00B         	goto	l9787
 14661  001640                     l9765:
 14662                           
 14663                           ;main.c: 871:                     if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == 1)
 14664  001640  C040  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
 14665  001644  C041  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
 14666  001648  04DE               	decf	postinc2,w,c
 14667  00164A  A4D8               	btfss	status,2,c
 14668  00164C  EF2A  F00B         	goto	u11191
 14669  001650  EF2C  F00B         	goto	u11190
 14670  001654                     u11191:
 14671  001654  EF34  F00B         	goto	l9769
 14672  001658                     u11190:
 14673  001658                     
 14674                           ;main.c: 872:                         caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] = 'X';
 14675  001658  C040  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
 14676  00165C  C041  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
 14677  001660  0E58               	movlw	88
 14678  001662  6EDF               	movwf	indf2,c
 14679  001664  EF93  F00B         	goto	l9787
 14680  001668                     l9769:
 14681                           
 14682                           ;main.c: 875:                         if (caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1 ] =
      +                          = 1)
 14683  001668  EE20 F001          	lfsr	2,1
 14684  00166C  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14685  00166E  26D9               	addwf	fsr2l,f,c
 14686  001670  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14687  001672  22DA               	addwfc	fsr2h,f,c
 14688  001674  04DE               	decf	postinc2,w,c
 14689  001676  A4D8               	btfss	status,2,c
 14690  001678  EF40  F00B         	goto	u11201
 14691  00167C  EF42  F00B         	goto	u11200
 14692  001680                     u11201:
 14693  001680  EF93  F00B         	goto	l546
 14694  001684                     u11200:
 14695  001684                     l9771:
 14696                           
 14697                           ;main.c: 876:                             caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1 ] =
      +                           'X';
 14698  001684  EE20 F001          	lfsr	2,1
 14699  001688  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14700  00168A  26D9               	addwf	fsr2l,f,c
 14701  00168C  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14702  00168E  22DA               	addwfc	fsr2h,f,c
 14703  001690  0E58               	movlw	88
 14704  001692  6EDF               	movwf	indf2,c
 14705  001694  EF93  F00B         	goto	l9787
 14706  001698                     l9773:
 14707                           
 14708                           ;main.c: 881:                     if (caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1 ] == 1)
 14709  001698  EE20 F001          	lfsr	2,1
 14710  00169C  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14711  00169E  26D9               	addwf	fsr2l,f,c
 14712  0016A0  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14713  0016A2  22DA               	addwfc	fsr2h,f,c
 14714  0016A4  04DE               	decf	postinc2,w,c
 14715  0016A6  A4D8               	btfss	status,2,c
 14716  0016A8  EF58  F00B         	goto	u11211
 14717  0016AC  EF5A  F00B         	goto	u11210
 14718  0016B0                     u11211:
 14719  0016B0  EF5C  F00B         	goto	l9777
 14720  0016B4                     u11210:
 14721  0016B4  EF42  F00B         	goto	l9771
 14722  0016B8                     l9777:
 14723                           
 14724                           ;main.c: 884:                         caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1 ] = 'X';
 14725  0016B8  EE20 F002          	lfsr	2,2
 14726  0016BC  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14727  0016BE  26D9               	addwf	fsr2l,f,c
 14728  0016C0  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14729  0016C2  22DA               	addwfc	fsr2h,f,c
 14730  0016C4  0E58               	movlw	88
 14731  0016C6  6EDF               	movwf	indf2,c
 14732  0016C8  EF93  F00B         	goto	l9787
 14733  0016CC                     l9779:
 14734                           
 14735                           ;main.c: 890:                     if (caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1 ] == 1)
 14736  0016CC  EE20 F002          	lfsr	2,2
 14737  0016D0  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14738  0016D2  26D9               	addwf	fsr2l,f,c
 14739  0016D4  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14740  0016D6  22DA               	addwfc	fsr2h,f,c
 14741  0016D8  04DE               	decf	postinc2,w,c
 14742  0016DA  A4D8               	btfss	status,2,c
 14743  0016DC  EF72  F00B         	goto	u11221
 14744  0016E0  EF74  F00B         	goto	u11220
 14745  0016E4                     u11221:
 14746  0016E4  EF93  F00B         	goto	l9787
 14747  0016E8                     u11220:
 14748  0016E8  EF5C  F00B         	goto	l9777
 14749  0016EC                     l9785:
 14750  0016EC  C046  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
 14751  0016F0  C047  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
 14752  0016F4  50DF               	movf	indf2,w,c
 14753  0016F6  6E4C               	movwf	??_decidirDireccion^0,c
 14754  0016F8  6A4D               	clrf	(??_decidirDireccion+1)^0,c
 14755                           
 14756                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14757                           ; Switch size 1, requested type "simple"
 14758                           ; Number of cases is 1, Range of values is 0 to 0
 14759                           ; switch strategies available:
 14760                           ; Name         Instructions Cycles
 14761                           ; simple_byte            4     3 (average)
 14762                           ;	Chosen strategy is simple_byte
 14763  0016FA  504D               	movf	(??_decidirDireccion+1)^0,w,c
 14764  0016FC  0A00               	xorlw	0	; case 0
 14765  0016FE  B4D8               	btfsc	status,2,c
 14766  001700  EF84  F00B         	goto	l10853
 14767  001704  EF93  F00B         	goto	l9787
 14768  001708                     l10853:
 14769                           
 14770                           ; Switch size 1, requested type "simple"
 14771                           ; Number of cases is 3, Range of values is 1 to 3
 14772                           ; switch strategies available:
 14773                           ; Name         Instructions Cycles
 14774                           ; simple_byte           10     6 (average)
 14775                           ;	Chosen strategy is simple_byte
 14776  001708  504C               	movf	??_decidirDireccion^0,w,c
 14777  00170A  0A01               	xorlw	1	; case 1
 14778  00170C  B4D8               	btfsc	status,2,c
 14779  00170E  EF20  F00B         	goto	l9765
 14780  001712  0A03               	xorlw	3	; case 2
 14781  001714  B4D8               	btfsc	status,2,c
 14782  001716  EF4C  F00B         	goto	l9773
 14783  00171A  0A01               	xorlw	1	; case 3
 14784  00171C  B4D8               	btfsc	status,2,c
 14785  00171E  EF66  F00B         	goto	l9779
 14786  001722  EF93  F00B         	goto	l9787
 14787  001726                     l546:
 14788  001726                     l9787:
 14789                           
 14790                           ;main.c: 900:         if (!(*cambioOrientacionCarro)) {
 14791  001726  C04A  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
 14792  00172A  C04B  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
 14793  00172E  50DF               	movf	indf2,w,c
 14794  001730  A4D8               	btfss	status,2,c
 14795  001732  EF9D  F00B         	goto	u11231
 14796  001736  EF9F  F00B         	goto	u11230
 14797  00173A                     u11231:
 14798  00173A  EF84  F00C         	goto	l9997
 14799  00173E                     u11230:
 14800  00173E                     
 14801                           ;main.c: 902:             if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == 1)
 14802  00173E  C040  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
 14803  001742  C041  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
 14804  001746  04DE               	decf	postinc2,w,c
 14805  001748  A4D8               	btfss	status,2,c
 14806  00174A  EFA9  F00B         	goto	u11241
 14807  00174E  EFAB  F00B         	goto	u11240
 14808  001752                     u11241:
 14809  001752  EFAF  F00B         	goto	l9793
 14810  001756                     u11240:
 14811  001756                     
 14812                           ;main.c: 903:                 direccionElegida = SENSOR_PRIORIDAD_ALTA;
 14813  001756  0E01               	movlw	1
 14814  001758  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14815  00175A  EFD1  F00B         	goto	l9801
 14816  00175E                     l9793:
 14817  00175E  EE20 F001          	lfsr	2,1
 14818  001762  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14819  001764  26D9               	addwf	fsr2l,f,c
 14820  001766  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14821  001768  22DA               	addwfc	fsr2h,f,c
 14822  00176A  04DE               	decf	postinc2,w,c
 14823  00176C  A4D8               	btfss	status,2,c
 14824  00176E  EFBB  F00B         	goto	u11251
 14825  001772  EFBD  F00B         	goto	u11250
 14826  001776                     u11251:
 14827  001776  EFC1  F00B         	goto	l9797
 14828  00177A                     u11250:
 14829  00177A                     
 14830                           ;main.c: 905:                 direccionElegida = SENSOR_PRIORIDAD_MEDIA;
 14831  00177A  0E02               	movlw	2
 14832  00177C  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14833  00177E  EFD1  F00B         	goto	l9801
 14834  001782                     l9797:
 14835  001782  EE20 F002          	lfsr	2,2
 14836  001786  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14837  001788  26D9               	addwf	fsr2l,f,c
 14838  00178A  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14839  00178C  22DA               	addwfc	fsr2h,f,c
 14840  00178E  04DE               	decf	postinc2,w,c
 14841  001790  A4D8               	btfss	status,2,c
 14842  001792  EFCD  F00B         	goto	u11261
 14843  001796  EFCF  F00B         	goto	u11260
 14844  00179A                     u11261:
 14845  00179A  EFD1  F00B         	goto	l9801
 14846  00179E                     u11260:
 14847  00179E                     
 14848                           ;main.c: 907:                 direccionElegida = SENSOR_PRIORIDAD_BAJA;
 14849  00179E  0E03               	movlw	3
 14850  0017A0  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14851  0017A2                     l9801:
 14852                           
 14853                           ;main.c: 910:             *caminoActual = direccionElegida;
 14854  0017A2  C048  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
 14855  0017A6  C049  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
 14856  0017AA  C04E  FFDF         	movff	decidirDireccion@direccionElegida,indf2
 14857  0017AE                     
 14858                           ;main.c: 911:             *cambioOrientacionCarro = 1;
 14859  0017AE  C04A  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
 14860  0017B2  C04B  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
 14861  0017B6  0E01               	movlw	1
 14862  0017B8  6EDF               	movwf	indf2,c
 14863                           
 14864                           ;main.c: 913:         } else {
 14865  0017BA  EF02  F00D         	goto	l639
 14866  0017BE                     l576:
 14867  0017BE  EF20  F00C         	goto	l9901
 14868  0017C2                     l9859:
 14869                           
 14870                           ;main.c: 969:                             if (SENSOR_PRIORIDAD_MEDIA == IZQUIERDA &&
 14871  0017C2  C040  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
 14872  0017C6  C041  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
 14873  0017CA  0E58               	movlw	88
 14874  0017CC  18DE               	xorwf	postinc2,w,c
 14875  0017CE  A4D8               	btfss	status,2,c
 14876  0017D0  EFEC  F00B         	goto	u11271
 14877  0017D4  EFEE  F00B         	goto	u11270
 14878  0017D8                     u11271:
 14879  0017D8  EF20  F00C         	goto	l9901
 14880  0017DC                     u11270:
 14881  0017DC  EE20 F001          	lfsr	2,1
 14882  0017E0  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14883  0017E2  26D9               	addwf	fsr2l,f,c
 14884  0017E4  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14885  0017E6  22DA               	addwfc	fsr2h,f,c
 14886  0017E8  04DE               	decf	postinc2,w,c
 14887  0017EA  A4D8               	btfss	status,2,c
 14888  0017EC  EFFA  F00B         	goto	u11281
 14889  0017F0  EFFC  F00B         	goto	u11280
 14890  0017F4                     u11281:
 14891  0017F4  EF06  F00C         	goto	l9879
 14892  0017F8                     u11280:
 14893  0017F8                     
 14894                           ;main.c: 970:                                     caminosRecorrer[SENSOR_PRIORIDAD_MEDIA
      +                           - 1] == 1) {;main.c: 971:                                 *caminoActual = IZQUIERDA;
 14895  0017F8  C048  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
 14896  0017FC  C049  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
 14897  001800  0E02               	movlw	2
 14898  001802  6EDF               	movwf	indf2,c
 14899  001804                     
 14900                           ;main.c: 972:                                 direccionElegida = DERECHA;
 14901  001804  0E03               	movlw	3
 14902  001806  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14903                           
 14904                           ;main.c: 973:                             } else if (SENSOR_PRIORIDAD_MEDIA == DERECHA &
      +                          &
 14905  001808  EF20  F00C         	goto	l9901
 14906  00180C                     l9879:
 14907  00180C  EE20 F002          	lfsr	2,2
 14908  001810  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14909  001812  26D9               	addwf	fsr2l,f,c
 14910  001814  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14911  001816  22DA               	addwfc	fsr2h,f,c
 14912  001818  04DE               	decf	postinc2,w,c
 14913  00181A  A4D8               	btfss	status,2,c
 14914  00181C  EF12  F00C         	goto	u11291
 14915  001820  EF14  F00C         	goto	u11290
 14916  001824                     u11291:
 14917  001824  EFDF  F00B         	goto	l576
 14918  001828                     u11290:
 14919  001828                     
 14920                           ;main.c: 982:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA 
      +                          - 1] == 1) {;main.c: 983:                                 *caminoActual = DERECHA;
 14921  001828  C048  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
 14922  00182C  C049  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
 14923  001830  0E03               	movlw	3
 14924  001832  6EDF               	movwf	indf2,c
 14925  001834                     
 14926                           ;main.c: 984:                                 direccionElegida = IZQUIERDA;
 14927  001834  0E02               	movlw	2
 14928  001836  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14929  001838  EF20  F00C         	goto	l9901
 14930  00183C                     l593:
 14931  00183C  EF02  F00D         	goto	l639
 14932  001840                     l9901:
 14933                           
 14934                           ;main.c: 1011:                             if (SENSOR_PRIORIDAD_BAJA == DERECHA &&
 14935  001840  EE20 F001          	lfsr	2,1
 14936  001844  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14937  001846  26D9               	addwf	fsr2l,f,c
 14938  001848  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14939  00184A  22DA               	addwfc	fsr2h,f,c
 14940  00184C  0E58               	movlw	88
 14941  00184E  18DE               	xorwf	postinc2,w,c
 14942  001850  A4D8               	btfss	status,2,c
 14943  001852  EF2D  F00C         	goto	u11301
 14944  001856  EF2F  F00C         	goto	u11300
 14945  00185A                     u11301:
 14946  00185A  EF02  F00D         	goto	l639
 14947  00185E                     u11300:
 14948  00185E  EE20 F002          	lfsr	2,2
 14949  001862  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14950  001864  26D9               	addwf	fsr2l,f,c
 14951  001866  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14952  001868  22DA               	addwfc	fsr2h,f,c
 14953  00186A  04DE               	decf	postinc2,w,c
 14954  00186C  A4D8               	btfss	status,2,c
 14955  00186E  EF3B  F00C         	goto	u11311
 14956  001872  EF3D  F00C         	goto	u11310
 14957  001876                     u11311:
 14958  001876  EF1E  F00C         	goto	l593
 14959  00187A                     u11310:
 14960  00187A                     l9905:
 14961                           
 14962                           ;main.c: 1012:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == 1) {;main.c: 1013:                                 *caminoActual = DERECHA;
 14963  00187A  C048  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
 14964  00187E  C049  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
 14965  001882  0E03               	movlw	3
 14966  001884  6EDF               	movwf	indf2,c
 14967  001886                     l9907:
 14968                           
 14969                           ;main.c: 1014:                                 direccionElegida = ENFRENTE;
 14970  001886  0E01               	movlw	1
 14971  001888  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14972                           
 14973                           ;main.c: 1015:                             } else if (SENSOR_PRIORIDAD_BAJA == ENFRENTE 
      +                          &&
 14974  00188A  EF02  F00D         	goto	l639
 14975  00188E                     l9947:
 14976                           
 14977                           ;main.c: 1066:                             if (SENSOR_PRIORIDAD_BAJA == DERECHA &&
 14978  00188E  EE20 F001          	lfsr	2,1
 14979  001892  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14980  001894  26D9               	addwf	fsr2l,f,c
 14981  001896  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14982  001898  22DA               	addwfc	fsr2h,f,c
 14983  00189A  0E58               	movlw	88
 14984  00189C  18DE               	xorwf	postinc2,w,c
 14985  00189E  A4D8               	btfss	status,2,c
 14986  0018A0  EF54  F00C         	goto	u11321
 14987  0018A4  EF56  F00C         	goto	u11320
 14988  0018A8                     u11321:
 14989  0018A8  EF02  F00D         	goto	l639
 14990  0018AC                     u11320:
 14991  0018AC  EE20 F002          	lfsr	2,2
 14992  0018B0  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14993  0018B2  26D9               	addwf	fsr2l,f,c
 14994  0018B4  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14995  0018B6  22DA               	addwfc	fsr2h,f,c
 14996  0018B8  04DE               	decf	postinc2,w,c
 14997  0018BA  A4D8               	btfss	status,2,c
 14998  0018BC  EF62  F00C         	goto	u11331
 14999  0018C0  EF64  F00C         	goto	u11330
 15000  0018C4                     u11331:
 15001  0018C4  EF66  F00C         	goto	l9961
 15002  0018C8                     u11330:
 15003  0018C8  EF3D  F00C         	goto	l9905
 15004  0018CC                     l9961:
 15005                           
 15006                           ;main.c: 1075:                                 *contCaminosRecorridos = 3;
 15007  0018CC  C046  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
 15008  0018D0  C047  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
 15009  0018D4  0E03               	movlw	3
 15010  0018D6  6EDF               	movwf	indf2,c
 15011  0018D8  EF02  F00D         	goto	l639
 15012  0018DC                     l9991:
 15013                           
 15014                           ;main.c: 1114:                     *cambioOrientacionCarro = 0;
 15015  0018DC  C04A  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
 15016  0018E0  C04B  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
 15017  0018E4  0E00               	movlw	0
 15018  0018E6  6EDF               	movwf	indf2,c
 15019                           
 15020                           ;main.c: 1115:                     *contCaminosRecorridos = 0;
 15021  0018E8  C046  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
 15022  0018EC  C047  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
 15023  0018F0  0E00               	movlw	0
 15024  0018F2  6EDF               	movwf	indf2,c
 15025                           
 15026                           ;main.c: 1116:                     *investigandoCruce = 0;
 15027  0018F4  C042  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
 15028  0018F8  C043  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
 15029  0018FC  0E00               	movlw	0
 15030  0018FE  6EDF               	movwf	indf2,c
 15031  001900                     l9993:
 15032                           
 15033                           ;main.c: 1117:                     direccionElegida = ALTO;
 15034  001900  0E04               	movlw	4
 15035  001902  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15036                           
 15037                           ;main.c: 1119:                     break;
 15038  001904  EF02  F00D         	goto	l639
 15039  001908                     l9997:
 15040  001908  C046  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
 15041  00190C  C047  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
 15042  001910  50DF               	movf	indf2,w,c
 15043  001912  6E4C               	movwf	??_decidirDireccion^0,c
 15044  001914  6A4D               	clrf	(??_decidirDireccion+1)^0,c
 15045                           
 15046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15047                           ; Switch size 1, requested type "simple"
 15048                           ; Number of cases is 1, Range of values is 0 to 0
 15049                           ; switch strategies available:
 15050                           ; Name         Instructions Cycles
 15051                           ; simple_byte            4     3 (average)
 15052                           ;	Chosen strategy is simple_byte
 15053  001916  504D               	movf	(??_decidirDireccion+1)^0,w,c
 15054  001918  0A00               	xorlw	0	; case 0
 15055  00191A  B4D8               	btfsc	status,2,c
 15056  00191C  EF92  F00C         	goto	l10855
 15057  001920  EF02  F00D         	goto	l639
 15058  001924                     l10855:
 15059                           
 15060                           ; Switch size 1, requested type "simple"
 15061                           ; Number of cases is 3, Range of values is 1 to 3
 15062                           ; switch strategies available:
 15063                           ; Name         Instructions Cycles
 15064                           ; simple_byte           10     6 (average)
 15065                           ;	Chosen strategy is simple_byte
 15066  001924  504C               	movf	??_decidirDireccion^0,w,c
 15067  001926  0A01               	xorlw	1	; case 1
 15068  001928  B4D8               	btfsc	status,2,c
 15069  00192A  EFE1  F00B         	goto	l9859
 15070  00192E  0A03               	xorlw	3	; case 2
 15071  001930  B4D8               	btfsc	status,2,c
 15072  001932  EF47  F00C         	goto	l9947
 15073  001936  0A01               	xorlw	1	; case 3
 15074  001938  B4D8               	btfsc	status,2,c
 15075  00193A  EF6E  F00C         	goto	l9991
 15076  00193E  EF02  F00D         	goto	l639
 15077  001942                     l9999:
 15078                           
 15079                           ;main.c: 1125:         if (llegoDestino) {
 15080  001942  5059               	movf	_llegoDestino^0,w,c
 15081  001944  B4D8               	btfsc	status,2,c
 15082  001946  EFA7  F00C         	goto	u11341
 15083  00194A  EFA9  F00C         	goto	u11340
 15084  00194E                     u11341:
 15085  00194E  EFAB  F00C         	goto	l10003
 15086  001952                     u11340:
 15087  001952  EF80  F00C         	goto	l9993
 15088  001956                     l10003:
 15089                           
 15090                           ;main.c: 1131:             if (DISTANCIA_PRIORIDAD_ALTA > 14)
 15091  001956  0E00               	movlw	0
 15092  001958  6E34               	movwf	___flge@ff1^0,c
 15093  00195A  0E00               	movlw	0
 15094  00195C  6E35               	movwf	(___flge@ff1+1)^0,c
 15095  00195E  0E60               	movlw	96
 15096  001960  6E36               	movwf	(___flge@ff1+2)^0,c
 15097  001962  0E41               	movlw	65
 15098  001964  6E37               	movwf	(___flge@ff1+3)^0,c
 15099  001966  C114  F038         	movff	_DISTANCIA_PRIORIDAD_ALTA,___flge@ff2
 15100  00196A  C115  F039         	movff	_DISTANCIA_PRIORIDAD_ALTA+1,___flge@ff2+1
 15101  00196E  C116  F03A         	movff	_DISTANCIA_PRIORIDAD_ALTA+2,___flge@ff2+2
 15102  001972  C117  F03B         	movff	_DISTANCIA_PRIORIDAD_ALTA+3,___flge@ff2+3
 15103  001976  ECA6  F01F         	call	___flge	;wreg free
 15104  00197A  B0D8               	btfsc	status,0,c
 15105  00197C  EFC2  F00C         	goto	u11351
 15106  001980  EFC4  F00C         	goto	u11350
 15107  001984                     u11351:
 15108  001984  EFC6  F00C         	goto	l10007
 15109  001988                     u11350:
 15110  001988  EF43  F00C         	goto	l9907
 15111  00198C                     l10007:
 15112  00198C  0E00               	movlw	0
 15113  00198E  6E34               	movwf	___flge@ff1^0,c
 15114  001990  0E00               	movlw	0
 15115  001992  6E35               	movwf	(___flge@ff1+1)^0,c
 15116  001994  0EC8               	movlw	200
 15117  001996  6E36               	movwf	(___flge@ff1+2)^0,c
 15118  001998  0E41               	movlw	65
 15119  00199A  6E37               	movwf	(___flge@ff1+3)^0,c
 15120  00199C  C110  F038         	movff	_DISTANCIA_PRIORIDAD_MEDIA,___flge@ff2
 15121  0019A0  C111  F039         	movff	_DISTANCIA_PRIORIDAD_MEDIA+1,___flge@ff2+1
 15122  0019A4  C112  F03A         	movff	_DISTANCIA_PRIORIDAD_MEDIA+2,___flge@ff2+2
 15123  0019A8  C113  F03B         	movff	_DISTANCIA_PRIORIDAD_MEDIA+3,___flge@ff2+3
 15124  0019AC  ECA6  F01F         	call	___flge	;wreg free
 15125  0019B0  B0D8               	btfsc	status,0,c
 15126  0019B2  EFDD  F00C         	goto	u11361
 15127  0019B6  EFDF  F00C         	goto	u11360
 15128  0019BA                     u11361:
 15129  0019BA  EFE3  F00C         	goto	l10011
 15130  0019BE                     u11360:
 15131  0019BE                     
 15132                           ;main.c: 1134:                 direccionElegida = SENSOR_PRIORIDAD_MEDIA;
 15133  0019BE  0E02               	movlw	2
 15134  0019C0  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15135  0019C2  EF02  F00D         	goto	l639
 15136  0019C6                     l10011:
 15137  0019C6  0E00               	movlw	0
 15138  0019C8  6E34               	movwf	___flge@ff1^0,c
 15139  0019CA  0E00               	movlw	0
 15140  0019CC  6E35               	movwf	(___flge@ff1+1)^0,c
 15141  0019CE  0EC8               	movlw	200
 15142  0019D0  6E36               	movwf	(___flge@ff1+2)^0,c
 15143  0019D2  0E41               	movlw	65
 15144  0019D4  6E37               	movwf	(___flge@ff1+3)^0,c
 15145  0019D6  C10C  F038         	movff	_DISTANCIA_PRIORIDAD_BAJA,___flge@ff2
 15146  0019DA  C10D  F039         	movff	_DISTANCIA_PRIORIDAD_BAJA+1,___flge@ff2+1
 15147  0019DE  C10E  F03A         	movff	_DISTANCIA_PRIORIDAD_BAJA+2,___flge@ff2+2
 15148  0019E2  C10F  F03B         	movff	_DISTANCIA_PRIORIDAD_BAJA+3,___flge@ff2+3
 15149  0019E6  ECA6  F01F         	call	___flge	;wreg free
 15150  0019EA  B0D8               	btfsc	status,0,c
 15151  0019EC  EFFA  F00C         	goto	u11371
 15152  0019F0  EFFC  F00C         	goto	u11370
 15153  0019F4                     u11371:
 15154  0019F4  EF00  F00D         	goto	l10015
 15155  0019F8                     u11370:
 15156  0019F8                     
 15157                           ;main.c: 1136:                 direccionElegida = SENSOR_PRIORIDAD_BAJA;
 15158  0019F8  0E03               	movlw	3
 15159  0019FA  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15160  0019FC  EF02  F00D         	goto	l639
 15161  001A00                     l10015:
 15162                           
 15163                           ;main.c: 1139:                 direccionElegida = 0;
 15164  001A00  0E00               	movlw	0
 15165  001A02  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15166  001A04                     l639:
 15167                           
 15168                           ;main.c: 1145:     return direccionElegida;
 15169  001A04  504E               	movf	decidirDireccion@direccionElegida^0,w,c
 15170  001A06  0012               	return		;funcret
 15171  001A08                     __end_of_decidirDireccion:
 15172                           	opt callstack 0
 15173                           
 15174 ;; *************** function _seLlegoAlDestino *****************
 15175 ;; Defined at:
 15176 ;;		line 840 in file "main.c"
 15177 ;; Parameters:    Size  Location     Type
 15178 ;;		None
 15179 ;; Auto vars:     Size  Location     Type
 15180 ;;  llegoDestino    1   10[COMRAM] unsigned char 
 15181 ;; Return value:  Size  Location     Type
 15182 ;;                  1    wreg      unsigned char 
 15183 ;; Registers used:
 15184 ;;		wreg, status,2, status,0, cstack
 15185 ;; Tracked objects:
 15186 ;;		On entry : 0/0
 15187 ;;		On exit  : 0/0
 15188 ;;		Unchanged: 0/0
 15189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15190 ;;      Params:         0       0       0       0       0       0       0       0       0
 15191 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15193 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15194 ;;Total ram usage:        1 bytes
 15195 ;; Hardware stack levels used:    1
 15196 ;; Hardware stack levels required when called:    3
 15197 ;; This function calls:
 15198 ;;		_dameLecturaAdc
 15199 ;; This function is called by:
 15200 ;;		_decidirDireccion
 15201 ;; This function uses a non-reentrant model
 15202 ;;
 15203                           
 15204                           	psect	text65
 15205  005342                     __ptext65:
 15206                           	opt callstack 0
 15207  005342                     _seLlegoAlDestino:
 15208                           	opt callstack 25
 15209  005342                     
 15210                           ;main.c: 842:     T_BOOL llegoDestino = 0;
 15211  005342  0E00               	movlw	0
 15212  005344  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15213  005346                     
 15214                           ;main.c: 845:     if (dameLecturaAdc(0) < 70)
 15215  005346  0E00               	movlw	0
 15216  005348  EC8A  F028         	call	_dameLecturaAdc
 15217  00534C  BE07               	btfsc	(?_dameLecturaAdc+1)^0,7,c
 15218  00534E  EFB4  F029         	goto	u11000
 15219  005352  5007               	movf	(?_dameLecturaAdc+1)^0,w,c
 15220  005354  E107               	bnz	u11001
 15221  005356  0E46               	movlw	70
 15222  005358  5C06               	subwf	?_dameLecturaAdc^0,w,c
 15223  00535A  B0D8               	btfsc	status,0,c
 15224  00535C  EFB2  F029         	goto	u11001
 15225  005360  EFB4  F029         	goto	u11000
 15226  005364                     u11001:
 15227  005364  EFB6  F029         	goto	l533
 15228  005368                     u11000:
 15229  005368                     
 15230                           ;main.c: 846:         llegoDestino = 1;
 15231  005368  0E01               	movlw	1
 15232  00536A  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15233  00536C                     l533:
 15234                           
 15235                           ;main.c: 848:     return llegoDestino;
 15236  00536C  500B               	movf	seLlegoAlDestino@llegoDestino^0,w,c
 15237  00536E  0012               	return		;funcret
 15238  005370                     __end_of_seLlegoAlDestino:
 15239                           	opt callstack 0
 15240                           
 15241 ;; *************** function _dameLecturaAdc *****************
 15242 ;; Defined at:
 15243 ;;		line 12 in file "./adc.h"
 15244 ;; Parameters:    Size  Location     Type
 15245 ;;  canalLeer       1    wreg     unsigned char 
 15246 ;; Auto vars:     Size  Location     Type
 15247 ;;  canalLeer       1    9[COMRAM] unsigned char 
 15248 ;; Return value:  Size  Location     Type
 15249 ;;                  2    5[COMRAM] short 
 15250 ;; Registers used:
 15251 ;;		wreg, status,2, status,0
 15252 ;; Tracked objects:
 15253 ;;		On entry : 0/0
 15254 ;;		On exit  : 0/0
 15255 ;;		Unchanged: 0/0
 15256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15257 ;;      Params:         2       0       0       0       0       0       0       0       0
 15258 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15259 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15260 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15261 ;;Total ram usage:        5 bytes
 15262 ;; Hardware stack levels used:    1
 15263 ;; Hardware stack levels required when called:    2
 15264 ;; This function calls:
 15265 ;;		Nothing
 15266 ;; This function is called by:
 15267 ;;		_seLlegoAlDestino
 15268 ;;		_probarSensores
 15269 ;; This function uses a non-reentrant model
 15270 ;;
 15271                           
 15272                           	psect	text66
 15273  005114                     __ptext66:
 15274                           	opt callstack 0
 15275  005114                     _dameLecturaAdc:
 15276                           	opt callstack 25
 15277                           
 15278                           ;incstack = 0
 15279                           ;dameLecturaAdc@canalLeer stored from wreg
 15280  005114  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
 15281  005116                     
 15282                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 15283  005116  0E06               	movlw	6
 15284  005118                     u11947:
 15285  005118  2EE8               	decfsz	wreg,f,c
 15286  00511A  D7FE               	bra	u11947
 15287  00511C  D000               	nop2	
 15288  00511E                     
 15289                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
 15290  00511E  80C2               	bsf	194,0,c	;volatile
 15291  005120                     
 15292                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
 15293  005120  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
 15294  005124  4608               	rlncf	??_dameLecturaAdc^0,f,c
 15295  005126  4608               	rlncf	??_dameLecturaAdc^0,f,c
 15296  005128  50C2               	movf	194,w,c	;volatile
 15297  00512A  1808               	xorwf	??_dameLecturaAdc^0,w,c
 15298  00512C  0BC3               	andlw	-61
 15299  00512E  1808               	xorwf	??_dameLecturaAdc^0,w,c
 15300  005130  6EC2               	movwf	194,c	;volatile
 15301  005132                     
 15302                           ;./adc.h: 18:     ADCON0bits.GO = 1;
 15303  005132  82C2               	bsf	194,1,c	;volatile
 15304  005134                     
 15305                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
 15306  005134  82C2               	bsf	194,1,c	;volatile
 15307  005136                     l241:
 15308  005136  B2C2               	btfsc	194,1,c	;volatile
 15309  005138  EFA0  F028         	goto	u10531
 15310  00513C  EFA2  F028         	goto	u10530
 15311  005140                     u10531:
 15312  005140  EF9B  F028         	goto	l241
 15313  005144                     u10530:
 15314  005144                     
 15315                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
 15316  005144  90C2               	bcf	194,0,c	;volatile
 15317  005146                     
 15318                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
 15319  005146  50C4               	movf	196,w,c	;volatile
 15320  005148  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
 15321  00514A  6A08               	clrf	??_dameLecturaAdc^0,c
 15322  00514C  50C3               	movf	195,w,c	;volatile
 15323  00514E  2408               	addwf	??_dameLecturaAdc^0,w,c
 15324  005150  6E06               	movwf	?_dameLecturaAdc^0,c
 15325  005152  0E00               	movlw	0
 15326  005154  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
 15327  005156  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
 15328  005158  0012               	return		;funcret
 15329  00515A                     __end_of_dameLecturaAdc:
 15330                           	opt callstack 0
 15331                           
 15332 ;; *************** function ___flge *****************
 15333 ;; Defined at:
 15334 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 15335 ;; Parameters:    Size  Location     Type
 15336 ;;  ff1             4   51[COMRAM] short 
 15337 ;;  ff2             4   55[COMRAM] short 
 15338 ;; Auto vars:     Size  Location     Type
 15339 ;;		None
 15340 ;; Return value:  Size  Location     Type
 15341 ;;		None               void
 15342 ;; Registers used:
 15343 ;;		wreg, status,2, status,0
 15344 ;; Tracked objects:
 15345 ;;		On entry : 0/0
 15346 ;;		On exit  : 0/0
 15347 ;;		Unchanged: 0/0
 15348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15349 ;;      Params:         8       0       0       0       0       0       0       0       0
 15350 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15351 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15352 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15353 ;;Total ram usage:       12 bytes
 15354 ;; Hardware stack levels used:    1
 15355 ;; Hardware stack levels required when called:    2
 15356 ;; This function calls:
 15357 ;;		Nothing
 15358 ;; This function is called by:
 15359 ;;		_forzarEspejeo
 15360 ;;		_hayCruce
 15361 ;;		_decidirDireccion
 15362 ;;		_efgtoa
 15363 ;;		_roundf
 15364 ;;		_probarPID
 15365 ;;		_probarCruceT
 15366 ;; This function uses a non-reentrant model
 15367 ;;
 15368                           
 15369                           	psect	text67
 15370  003F4C                     __ptext67:
 15371                           	opt callstack 0
 15372  003F4C                     ___flge:
 15373                           	opt callstack 23
 15374  003F4C  0E00               	movlw	0
 15375  003F4E  1434               	andwf	___flge@ff1^0,w,c
 15376  003F50  6E3C               	movwf	??___flge^0,c
 15377  003F52  0E00               	movlw	0
 15378  003F54  1435               	andwf	(___flge@ff1+1)^0,w,c
 15379  003F56  6E3D               	movwf	(??___flge+1)^0,c
 15380  003F58  0E80               	movlw	128
 15381  003F5A  1436               	andwf	(___flge@ff1+2)^0,w,c
 15382  003F5C  6E3E               	movwf	(??___flge+2)^0,c
 15383  003F5E  0E7F               	movlw	127
 15384  003F60  1437               	andwf	(___flge@ff1+3)^0,w,c
 15385  003F62  6E3F               	movwf	(??___flge+3)^0,c
 15386  003F64  503C               	movf	??___flge^0,w,c
 15387  003F66  103D               	iorwf	(??___flge+1)^0,w,c
 15388  003F68  103E               	iorwf	(??___flge+2)^0,w,c
 15389  003F6A  103F               	iorwf	(??___flge+3)^0,w,c
 15390  003F6C  A4D8               	btfss	status,2,c
 15391  003F6E  EFBB  F01F         	goto	u9661
 15392  003F72  EFBD  F01F         	goto	u9660
 15393  003F76                     u9661:
 15394  003F76  EFC5  F01F         	goto	l8775
 15395  003F7A                     u9660:
 15396  003F7A  0E00               	movlw	0
 15397  003F7C  6E34               	movwf	___flge@ff1^0,c
 15398  003F7E  0E00               	movlw	0
 15399  003F80  6E35               	movwf	(___flge@ff1+1)^0,c
 15400  003F82  0E00               	movlw	0
 15401  003F84  6E36               	movwf	(___flge@ff1+2)^0,c
 15402  003F86  0E00               	movlw	0
 15403  003F88  6E37               	movwf	(___flge@ff1+3)^0,c
 15404  003F8A                     l8775:
 15405  003F8A  0E00               	movlw	0
 15406  003F8C  1438               	andwf	___flge@ff2^0,w,c
 15407  003F8E  6E3C               	movwf	??___flge^0,c
 15408  003F90  0E00               	movlw	0
 15409  003F92  1439               	andwf	(___flge@ff2+1)^0,w,c
 15410  003F94  6E3D               	movwf	(??___flge+1)^0,c
 15411  003F96  0E80               	movlw	128
 15412  003F98  143A               	andwf	(___flge@ff2+2)^0,w,c
 15413  003F9A  6E3E               	movwf	(??___flge+2)^0,c
 15414  003F9C  0E7F               	movlw	127
 15415  003F9E  143B               	andwf	(___flge@ff2+3)^0,w,c
 15416  003FA0  6E3F               	movwf	(??___flge+3)^0,c
 15417  003FA2  503C               	movf	??___flge^0,w,c
 15418  003FA4  103D               	iorwf	(??___flge+1)^0,w,c
 15419  003FA6  103E               	iorwf	(??___flge+2)^0,w,c
 15420  003FA8  103F               	iorwf	(??___flge+3)^0,w,c
 15421  003FAA  A4D8               	btfss	status,2,c
 15422  003FAC  EFDA  F01F         	goto	u9671
 15423  003FB0  EFDC  F01F         	goto	u9670
 15424  003FB4                     u9671:
 15425  003FB4  EFE4  F01F         	goto	l8779
 15426  003FB8                     u9670:
 15427  003FB8  0E00               	movlw	0
 15428  003FBA  6E38               	movwf	___flge@ff2^0,c
 15429  003FBC  0E00               	movlw	0
 15430  003FBE  6E39               	movwf	(___flge@ff2+1)^0,c
 15431  003FC0  0E00               	movlw	0
 15432  003FC2  6E3A               	movwf	(___flge@ff2+2)^0,c
 15433  003FC4  0E00               	movlw	0
 15434  003FC6  6E3B               	movwf	(___flge@ff2+3)^0,c
 15435  003FC8                     l8779:
 15436  003FC8  AE37               	btfss	(___flge@ff1+3)^0,7,c
 15437  003FCA  EFE9  F01F         	goto	u9681
 15438  003FCE  EFEB  F01F         	goto	u9680
 15439  003FD2                     u9681:
 15440  003FD2  EFF4  F01F         	goto	l8783
 15441  003FD6                     u9680:
 15442  003FD6  6C34               	negf	___flge@ff1^0,c
 15443  003FD8  1E35               	comf	(___flge@ff1+1)^0,f,c
 15444  003FDA  B0D8               	btfsc	status,0,c
 15445  003FDC  2A35               	incf	(___flge@ff1+1)^0,f,c
 15446  003FDE  1E36               	comf	(___flge@ff1+2)^0,f,c
 15447  003FE0  B0D8               	btfsc	status,0,c
 15448  003FE2  2A36               	incf	(___flge@ff1+2)^0,f,c
 15449  003FE4  0E80               	movlw	128
 15450  003FE6  5637               	subfwb	(___flge@ff1+3)^0,f,c
 15451  003FE8                     l8783:
 15452  003FE8  AE3B               	btfss	(___flge@ff2+3)^0,7,c
 15453  003FEA  EFF9  F01F         	goto	u9691
 15454  003FEE  EFFB  F01F         	goto	u9690
 15455  003FF2                     u9691:
 15456  003FF2  EF04  F020         	goto	l1194
 15457  003FF6                     u9690:
 15458  003FF6  6C38               	negf	___flge@ff2^0,c
 15459  003FF8  1E39               	comf	(___flge@ff2+1)^0,f,c
 15460  003FFA  B0D8               	btfsc	status,0,c
 15461  003FFC  2A39               	incf	(___flge@ff2+1)^0,f,c
 15462  003FFE  1E3A               	comf	(___flge@ff2+2)^0,f,c
 15463  004000  B0D8               	btfsc	status,0,c
 15464  004002  2A3A               	incf	(___flge@ff2+2)^0,f,c
 15465  004004  0E80               	movlw	128
 15466  004006  563B               	subfwb	(___flge@ff2+3)^0,f,c
 15467  004008                     l1194:
 15468  004008  0E00               	movlw	0
 15469  00400A  1A34               	xorwf	___flge@ff1^0,f,c
 15470  00400C  0E00               	movlw	0
 15471  00400E  1A35               	xorwf	(___flge@ff1+1)^0,f,c
 15472  004010  0E00               	movlw	0
 15473  004012  1A36               	xorwf	(___flge@ff1+2)^0,f,c
 15474  004014  0E80               	movlw	128
 15475  004016  1A37               	xorwf	(___flge@ff1+3)^0,f,c
 15476  004018  0E00               	movlw	0
 15477  00401A  1A38               	xorwf	___flge@ff2^0,f,c
 15478  00401C  0E00               	movlw	0
 15479  00401E  1A39               	xorwf	(___flge@ff2+1)^0,f,c
 15480  004020  0E00               	movlw	0
 15481  004022  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
 15482  004024  0E80               	movlw	128
 15483  004026  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
 15484  004028  5038               	movf	___flge@ff2^0,w,c
 15485  00402A  5C34               	subwf	___flge@ff1^0,w,c
 15486  00402C  5039               	movf	(___flge@ff2+1)^0,w,c
 15487  00402E  5835               	subwfb	(___flge@ff1+1)^0,w,c
 15488  004030  503A               	movf	(___flge@ff2+2)^0,w,c
 15489  004032  5836               	subwfb	(___flge@ff1+2)^0,w,c
 15490  004034  503B               	movf	(___flge@ff2+3)^0,w,c
 15491  004036  5837               	subwfb	(___flge@ff1+3)^0,w,c
 15492  004038  B0D8               	btfsc	status,0,c
 15493  00403A  EF21  F020         	goto	u9701
 15494  00403E  EF23  F020         	goto	u9700
 15495  004042                     u9701:
 15496  004042  EF26  F020         	goto	l8789
 15497  004046                     u9700:
 15498  004046  90D8               	bcf	status,0,c
 15499  004048  EF27  F020         	goto	l1199
 15500  00404C                     l8789:
 15501  00404C  80D8               	bsf	status,0,c
 15502  00404E                     l1199:
 15503  00404E  0012               	return		;funcret
 15504  004050                     __end_of___flge:
 15505                           	opt callstack 0
 15506                           
 15507 ;; *************** function _caminoCorrecto *****************
 15508 ;; Defined at:
 15509 ;;		line 265 in file "main.c"
 15510 ;; Parameters:    Size  Location     Type
 15511 ;;  movimientos     2   17[COMRAM] PTR unsigned char 
 15512 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 15513 ;;  caminoFinal     2   19[COMRAM] PTR unsigned char 
 15514 ;;		 -> comportamientoBasico@caminoFinal(1000), 
 15515 ;;  numMovimient    2   21[COMRAM] unsigned int 
 15516 ;;  numMovimient    2   23[COMRAM] PTR unsigned int 
 15517 ;;		 -> comportamientoBasico@numMovimientosTotales(2), 
 15518 ;;  caminoActual    1   25[COMRAM] unsigned char 
 15519 ;; Auto vars:     Size  Location     Type
 15520 ;;		None
 15521 ;; Return value:  Size  Location     Type
 15522 ;;                  1    wreg      void 
 15523 ;; Registers used:
 15524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15525 ;; Tracked objects:
 15526 ;;		On entry : 0/0
 15527 ;;		On exit  : 0/0
 15528 ;;		Unchanged: 0/0
 15529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15530 ;;      Params:         9       0       0       0       0       0       0       0       0
 15531 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15532 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15533 ;;      Totals:         9       0       0       0       0       0       0       0       0
 15534 ;;Total ram usage:        9 bytes
 15535 ;; Hardware stack levels used:    1
 15536 ;; Hardware stack levels required when called:    3
 15537 ;; This function calls:
 15538 ;;		_combinarArreglos
 15539 ;;		_limpiarMovimientos
 15540 ;; This function is called by:
 15541 ;;		_comportamientoBasico
 15542 ;; This function uses a non-reentrant model
 15543 ;;
 15544                           
 15545                           	psect	text68
 15546  00515A                     __ptext68:
 15547                           	opt callstack 0
 15548  00515A                     _caminoCorrecto:
 15549                           	opt callstack 26
 15550  00515A                     
 15551                           ;main.c: 265: void caminoCorrecto(T_UBYTE* movimientos, T_UBYTE* caminoFinal, T_UINT num
      +                          Movimientos,;main.c: 266:         T_UINT* numMovimientosFinal, T_UBYTE caminoActual) {;m
      +                          ain.c: 268:     movimientos[0] = caminoActual;
 15552  00515A  C012  FFD9         	movff	caminoCorrecto@movimientos,fsr2l
 15553  00515E  C013  FFDA         	movff	caminoCorrecto@movimientos+1,fsr2h
 15554  005162  C01A  FFDF         	movff	caminoCorrecto@caminoActual,indf2
 15555  005166                     
 15556                           ;main.c: 269:     combinarArreglos(movimientos, caminoFinal, numMovimientos, numMovimien
      +                          tosFinal);
 15557  005166  C012  F006         	movff	caminoCorrecto@movimientos,combinarArreglos@movimientos
 15558  00516A  C013  F007         	movff	caminoCorrecto@movimientos+1,combinarArreglos@movimientos+1
 15559  00516E  C014  F008         	movff	caminoCorrecto@caminoFinal,combinarArreglos@caminoFinal
 15560  005172  C015  F009         	movff	caminoCorrecto@caminoFinal+1,combinarArreglos@caminoFinal+1
 15561  005176  C016  F00A         	movff	caminoCorrecto@numMovimientos,combinarArreglos@numMovimientos
 15562  00517A  C017  F00B         	movff	caminoCorrecto@numMovimientos+1,combinarArreglos@numMovimientos+1
 15563  00517E  C018  F00C         	movff	caminoCorrecto@numMovimientosFinal,combinarArreglos@numMovimientosFinal
 15564  005182  C019  F00D         	movff	caminoCorrecto@numMovimientosFinal+1,combinarArreglos@numMovimientosFinal+1
 15565  005186  EC8A  F026         	call	_combinarArreglos	;wreg free
 15566  00518A                     
 15567                           ;main.c: 270:     limpiarMovimientos(movimientos, &numMovimientos);
 15568  00518A  C012  F006         	movff	caminoCorrecto@movimientos,limpiarMovimientos@movimientos
 15569  00518E  C013  F007         	movff	caminoCorrecto@movimientos+1,limpiarMovimientos@movimientos+1
 15570  005192  0E16               	movlw	low caminoCorrecto@numMovimientos
 15571  005194  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
 15572  005196  0E00               	movlw	high caminoCorrecto@numMovimientos
 15573  005198  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
 15574  00519A  EC18  F028         	call	_limpiarMovimientos	;wreg free
 15575  00519E  0012               	return		;funcret
 15576  0051A0                     __end_of_caminoCorrecto:
 15577                           	opt callstack 0
 15578                           
 15579 ;; *************** function _limpiarMovimientos *****************
 15580 ;; Defined at:
 15581 ;;		line 832 in file "main.c"
 15582 ;; Parameters:    Size  Location     Type
 15583 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
 15584 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 15585 ;;  numMovimient    2    7[COMRAM] PTR unsigned int 
 15586 ;;		 -> comportamientoBasico@numMovimientos(2), caminoCorrecto@numMovimientos(2), 
 15587 ;; Auto vars:     Size  Location     Type
 15588 ;;  i               2   11[COMRAM] int 
 15589 ;; Return value:  Size  Location     Type
 15590 ;;                  1    wreg      void 
 15591 ;; Registers used:
 15592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15593 ;; Tracked objects:
 15594 ;;		On entry : 0/0
 15595 ;;		On exit  : 0/0
 15596 ;;		Unchanged: 0/0
 15597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15598 ;;      Params:         4       0       0       0       0       0       0       0       0
 15599 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15600 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15601 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15602 ;;Total ram usage:        8 bytes
 15603 ;; Hardware stack levels used:    1
 15604 ;; Hardware stack levels required when called:    2
 15605 ;; This function calls:
 15606 ;;		Nothing
 15607 ;; This function is called by:
 15608 ;;		_caminoCorrecto
 15609 ;;		_comportamientoBasico
 15610 ;; This function uses a non-reentrant model
 15611 ;;
 15612                           
 15613                           	psect	text69
 15614  005030                     __ptext69:
 15615                           	opt callstack 0
 15616  005030                     _limpiarMovimientos:
 15617                           	opt callstack 27
 15618  005030                     
 15619                           ;main.c: 834:     for (T_INT i = 0; i < *numMovimientos; i++)
 15620  005030  0E00               	movlw	0
 15621  005032  6E0D               	movwf	(limpiarMovimientos@i+1)^0,c
 15622  005034  0E00               	movlw	0
 15623  005036  6E0C               	movwf	limpiarMovimientos@i^0,c
 15624  005038  EF28  F028         	goto	l9523
 15625  00503C                     l9519:
 15626                           
 15627                           ;main.c: 835:         movimientos[i] = 0;
 15628  00503C  500C               	movf	limpiarMovimientos@i^0,w,c
 15629  00503E  2406               	addwf	limpiarMovimientos@movimientos^0,w,c
 15630  005040  6ED9               	movwf	fsr2l,c
 15631  005042  500D               	movf	(limpiarMovimientos@i+1)^0,w,c
 15632  005044  2007               	addwfc	(limpiarMovimientos@movimientos+1)^0,w,c
 15633  005046  6EDA               	movwf	fsr2h,c
 15634  005048  0E00               	movlw	0
 15635  00504A  6EDF               	movwf	indf2,c
 15636  00504C  4A0C               	infsnz	limpiarMovimientos@i^0,f,c
 15637  00504E  2A0D               	incf	(limpiarMovimientos@i+1)^0,f,c
 15638  005050                     l9523:
 15639  005050  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
 15640  005054  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
 15641  005058  50DE               	movf	postinc2,w,c
 15642  00505A  5C0C               	subwf	limpiarMovimientos@i^0,w,c
 15643  00505C  50DE               	movf	postinc2,w,c
 15644  00505E  580D               	subwfb	(limpiarMovimientos@i+1)^0,w,c
 15645  005060  A0D8               	btfss	status,0,c
 15646  005062  EF35  F028         	goto	u10941
 15647  005066  EF37  F028         	goto	u10940
 15648  00506A                     u10941:
 15649  00506A  EF1E  F028         	goto	l9519
 15650  00506E                     u10940:
 15651  00506E                     
 15652                           ;main.c: 837:     *numMovimientos = 0;
 15653  00506E  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
 15654  005072  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
 15655  005076  0E00               	movlw	0
 15656  005078  6EDE               	movwf	postinc2,c
 15657  00507A  0E00               	movlw	0
 15658  00507C  6EDD               	movwf	postdec2,c
 15659  00507E  0012               	return		;funcret
 15660  005080                     __end_of_limpiarMovimientos:
 15661                           	opt callstack 0
 15662                           
 15663 ;; *************** function _combinarArreglos *****************
 15664 ;; Defined at:
 15665 ;;		line 1275 in file "main.c"
 15666 ;; Parameters:    Size  Location     Type
 15667 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
 15668 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 15669 ;;  caminoFinal     2    7[COMRAM] PTR unsigned char 
 15670 ;;		 -> comportamientoBasico@caminoFinal(1000), 
 15671 ;;  numMovimient    2    9[COMRAM] unsigned int 
 15672 ;;  numMovimient    2   11[COMRAM] PTR unsigned int 
 15673 ;;		 -> comportamientoBasico@numMovimientosTotales(2), 
 15674 ;; Auto vars:     Size  Location     Type
 15675 ;;  i               2   15[COMRAM] int 
 15676 ;; Return value:  Size  Location     Type
 15677 ;;                  1    wreg      void 
 15678 ;; Registers used:
 15679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 15680 ;; Tracked objects:
 15681 ;;		On entry : 0/0
 15682 ;;		On exit  : 0/0
 15683 ;;		Unchanged: 0/0
 15684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15685 ;;      Params:         8       0       0       0       0       0       0       0       0
 15686 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15687 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15688 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15689 ;;Total ram usage:       12 bytes
 15690 ;; Hardware stack levels used:    1
 15691 ;; Hardware stack levels required when called:    2
 15692 ;; This function calls:
 15693 ;;		Nothing
 15694 ;; This function is called by:
 15695 ;;		_caminoCorrecto
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           	psect	text70
 15700  004D14                     __ptext70:
 15701                           	opt callstack 0
 15702  004D14                     _combinarArreglos:
 15703                           	opt callstack 26
 15704  004D14                     
 15705                           ;main.c: 1275: void combinarArreglos(T_UBYTE* movimientos, T_UBYTE* caminoFinal, T_UINT 
      +                          numMovimientos,;main.c: 1276:         T_UINT* numMovimientosFinal) {;main.c: 1277:     f
      +                          or (T_INT i = 0; i < numMovimientos; i++) {
 15706  004D14  0E00               	movlw	0
 15707  004D16  6E11               	movwf	(combinarArreglos@i+1)^0,c
 15708  004D18  0E00               	movlw	0
 15709  004D1A  6E10               	movwf	combinarArreglos@i^0,c
 15710  004D1C  EFAF  F026         	goto	l9515
 15711  004D20                     l9509:
 15712                           
 15713                           ;main.c: 1279:         caminoFinal[*numMovimientosFinal] = movimientos[i];
 15714  004D20  5010               	movf	combinarArreglos@i^0,w,c
 15715  004D22  2406               	addwf	combinarArreglos@movimientos^0,w,c
 15716  004D24  6ED9               	movwf	fsr2l,c
 15717  004D26  5011               	movf	(combinarArreglos@i+1)^0,w,c
 15718  004D28  2007               	addwfc	(combinarArreglos@movimientos+1)^0,w,c
 15719  004D2A  6EDA               	movwf	fsr2h,c
 15720  004D2C  C00C  FFE1         	movff	combinarArreglos@numMovimientosFinal,fsr1l
 15721  004D30  C00D  FFE2         	movff	combinarArreglos@numMovimientosFinal+1,fsr1h
 15722  004D34  CFE6 F00E          	movff	postinc1,??_combinarArreglos
 15723  004D38  CFE5 F00F          	movff	postdec1,??_combinarArreglos+1
 15724  004D3C  500E               	movf	??_combinarArreglos^0,w,c
 15725  004D3E  2408               	addwf	combinarArreglos@caminoFinal^0,w,c
 15726  004D40  6EE1               	movwf	fsr1l,c
 15727  004D42  500F               	movf	(??_combinarArreglos+1)^0,w,c
 15728  004D44  2009               	addwfc	(combinarArreglos@caminoFinal+1)^0,w,c
 15729  004D46  6EE2               	movwf	fsr1h,c
 15730  004D48  CFDF FFE7          	movff	indf2,indf1
 15731  004D4C                     
 15732                           ;main.c: 1280:         *numMovimientosFinal += 1;
 15733  004D4C  C00C  FFD9         	movff	combinarArreglos@numMovimientosFinal,fsr2l
 15734  004D50  C00D  FFDA         	movff	combinarArreglos@numMovimientosFinal+1,fsr2h
 15735  004D54  2ADE               	incf	postinc2,f,c
 15736  004D56  0E00               	movlw	0
 15737  004D58  22DD               	addwfc	postdec2,f,c
 15738  004D5A                     
 15739                           ;main.c: 1281:     }
 15740  004D5A  4A10               	infsnz	combinarArreglos@i^0,f,c
 15741  004D5C  2A11               	incf	(combinarArreglos@i+1)^0,f,c
 15742  004D5E                     l9515:
 15743  004D5E  500A               	movf	combinarArreglos@numMovimientos^0,w,c
 15744  004D60  5C10               	subwf	combinarArreglos@i^0,w,c
 15745  004D62  500B               	movf	(combinarArreglos@numMovimientos+1)^0,w,c
 15746  004D64  5811               	subwfb	(combinarArreglos@i+1)^0,w,c
 15747  004D66  A0D8               	btfss	status,0,c
 15748  004D68  EFB8  F026         	goto	u10931
 15749  004D6C  EFBA  F026         	goto	u10930
 15750  004D70                     u10931:
 15751  004D70  EF90  F026         	goto	l9509
 15752  004D74                     u10930:
 15753  004D74  0012               	return		;funcret
 15754  004D76                     __end_of_combinarArreglos:
 15755                           	opt callstack 0
 15756                           
 15757 ;; *************** function _UART_printf *****************
 15758 ;; Defined at:
 15759 ;;		line 47 in file "./UART.h"
 15760 ;; Parameters:    Size  Location     Type
 15761 ;;  cadena          2    6[COMRAM] PTR unsigned char 
 15762 ;;		 -> STR_13(63), STR_12(56), STR_10(6), STR_9(9), 
 15763 ;;		 -> STR_8(11), STR_7(10), buffer(50), STR_2(25), 
 15764 ;;		 -> STR_1(24), 
 15765 ;; Auto vars:     Size  Location     Type
 15766 ;;		None
 15767 ;; Return value:  Size  Location     Type
 15768 ;;                  1    wreg      void 
 15769 ;; Registers used:
 15770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15771 ;; Tracked objects:
 15772 ;;		On entry : 0/0
 15773 ;;		On exit  : 0/0
 15774 ;;		Unchanged: 0/0
 15775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15776 ;;      Params:         2       0       0       0       0       0       0       0       0
 15777 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15778 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15779 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15780 ;;Total ram usage:        2 bytes
 15781 ;; Hardware stack levels used:    1
 15782 ;; Hardware stack levels required when called:    3
 15783 ;; This function calls:
 15784 ;;		_UART_write
 15785 ;; This function is called by:
 15786 ;;		_visualizarPasosRealizados
 15787 ;;		_comportamientoBasico
 15788 ;;		_probarSensores
 15789 ;;		_probarUltrasonico
 15790 ;; This function uses a non-reentrant model
 15791 ;;
 15792                           
 15793                           	psect	text71
 15794  004DD6                     __ptext71:
 15795                           	opt callstack 0
 15796  004DD6                     _UART_printf:
 15797                           	opt callstack 26
 15798  004DD6                     
 15799                           ;./UART.h: 48:     while (*cadena) {
 15800  004DD6  EF01  F027         	goto	l9593
 15801  004DDA                     l9589:
 15802                           
 15803                           ;./UART.h: 49:         UART_write(*cadena++);
 15804  004DDA  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 15805  004DDE  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 15806  004DE2  6AF8               	clrf	tblptru,c
 15807  004DE4  0E07               	movlw	(high __ramtop+-1)
 15808  004DE6  64F7               	cpfsgt	tblptrh,c
 15809  004DE8  D003               	bra	u11027
 15810  004DEA  0008               	tblrd		*
 15811  004DEC  50F5               	movf	tablat,w,c
 15812  004DEE  D005               	bra	u11020
 15813  004DF0                     u11027:
 15814  004DF0  CFF6 FFE9          	movff	tblptrl,fsr0l
 15815  004DF4  CFF7 FFEA          	movff	tblptrh,fsr0h
 15816  004DF8  50EF               	movf	indf0,w,c
 15817  004DFA                     u11020:
 15818  004DFA  EC4D  F02A         	call	_UART_write
 15819  004DFE  4A07               	infsnz	UART_printf@cadena^0,f,c
 15820  004E00  2A08               	incf	(UART_printf@cadena+1)^0,f,c
 15821  004E02                     l9593:
 15822                           
 15823                           ;./UART.h: 48:     while (*cadena) {
 15824  004E02  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 15825  004E06  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 15826  004E0A  6AF8               	clrf	tblptru,c
 15827  004E0C  0E07               	movlw	(high __ramtop+-1)
 15828  004E0E  64F7               	cpfsgt	tblptrh,c
 15829  004E10  D003               	bra	u11037
 15830  004E12  0008               	tblrd		*
 15831  004E14  50F5               	movf	tablat,w,c
 15832  004E16  D005               	bra	u11030
 15833  004E18                     u11037:
 15834  004E18  CFF6 FFE9          	movff	tblptrl,fsr0l
 15835  004E1C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15836  004E20  50EF               	movf	indf0,w,c
 15837  004E22                     u11030:
 15838  004E22  0900               	iorlw	0
 15839  004E24  A4D8               	btfss	status,2,c
 15840  004E26  EF17  F027         	goto	u11041
 15841  004E2A  EF19  F027         	goto	u11040
 15842  004E2E                     u11041:
 15843  004E2E  EFED  F026         	goto	l9589
 15844  004E32                     u11040:
 15845  004E32  0012               	return		;funcret
 15846  004E34                     __end_of_UART_printf:
 15847                           	opt callstack 0
 15848                           
 15849 ;; *************** function _UART_write *****************
 15850 ;; Defined at:
 15851 ;;		line 42 in file "./UART.h"
 15852 ;; Parameters:    Size  Location     Type
 15853 ;;  dato            1    wreg     unsigned char 
 15854 ;; Auto vars:     Size  Location     Type
 15855 ;;  dato            1    5[COMRAM] unsigned char 
 15856 ;; Return value:  Size  Location     Type
 15857 ;;                  1    wreg      void 
 15858 ;; Registers used:
 15859 ;;		wreg
 15860 ;; Tracked objects:
 15861 ;;		On entry : 0/0
 15862 ;;		On exit  : 0/0
 15863 ;;		Unchanged: 0/0
 15864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15865 ;;      Params:         0       0       0       0       0       0       0       0       0
 15866 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15867 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15868 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15869 ;;Total ram usage:        1 bytes
 15870 ;; Hardware stack levels used:    1
 15871 ;; Hardware stack levels required when called:    2
 15872 ;; This function calls:
 15873 ;;		Nothing
 15874 ;; This function is called by:
 15875 ;;		_UART_printf
 15876 ;; This function uses a non-reentrant model
 15877 ;;
 15878                           
 15879                           	psect	text72
 15880  00549A                     __ptext72:
 15881                           	opt callstack 0
 15882  00549A                     _UART_write:
 15883                           	opt callstack 26
 15884                           
 15885                           ;incstack = 0
 15886                           ;UART_write@dato stored from wreg
 15887  00549A  6E06               	movwf	UART_write@dato^0,c
 15888  00549C                     
 15889                           ;./UART.h: 43:     TXREG = dato;
 15890  00549C  C006  FFAD         	movff	UART_write@dato,4013	;volatile
 15891  0054A0                     l226:
 15892  0054A0  A2AC               	btfss	172,1,c	;volatile
 15893  0054A2  EF55  F02A         	goto	u10921
 15894  0054A6  EF57  F02A         	goto	u10920
 15895  0054AA                     u10921:
 15896  0054AA  EF50  F02A         	goto	l226
 15897  0054AE                     u10920:
 15898  0054AE  0012               	return		;funcret
 15899  0054B0                     __end_of_UART_write:
 15900                           	opt callstack 0
 15901                           
 15902 ;; *************** function _UART_init *****************
 15903 ;; Defined at:
 15904 ;;		line 13 in file "./UART.h"
 15905 ;; Parameters:    Size  Location     Type
 15906 ;;  BAUD            4   31[COMRAM] long 
 15907 ;; Auto vars:     Size  Location     Type
 15908 ;;  frecuenciaCr    4    0        long 
 15909 ;; Return value:  Size  Location     Type
 15910 ;;                  1    wreg      void 
 15911 ;; Registers used:
 15912 ;;		wreg, status,2, status,0, cstack
 15913 ;; Tracked objects:
 15914 ;;		On entry : 0/0
 15915 ;;		On exit  : 0/0
 15916 ;;		Unchanged: 0/0
 15917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15918 ;;      Params:         4       0       0       0       0       0       0       0       0
 15919 ;;      Locals:         8       0       0       0       0       0       0       0       0
 15920 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15921 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15922 ;;Total ram usage:       12 bytes
 15923 ;; Hardware stack levels used:    1
 15924 ;; Hardware stack levels required when called:    3
 15925 ;; This function calls:
 15926 ;;		___aldiv
 15927 ;; This function is called by:
 15928 ;;		_main
 15929 ;; This function uses a non-reentrant model
 15930 ;;
 15931                           
 15932                           	psect	text73
 15933  004BD0                     __ptext73:
 15934                           	opt callstack 0
 15935  004BD0                     _UART_init:
 15936                           	opt callstack 27
 15937  004BD0                     
 15938                           ;./UART.h: 16:     TRISC6 = 0;
 15939  004BD0  9C94               	bcf	3988,6,c	;volatile
 15940  004BD2                     
 15941                           ;./UART.h: 17:     TRISC7 = 1;
 15942  004BD2  8E94               	bsf	3988,7,c	;volatile
 15943  004BD4                     
 15944                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 15945  004BD4  0E10               	movlw	16
 15946  004BD6  6E16               	movwf	___aldiv@divisor^0,c
 15947  004BD8  0E00               	movlw	0
 15948  004BDA  6E17               	movwf	(___aldiv@divisor+1)^0,c
 15949  004BDC  0E00               	movlw	0
 15950  004BDE  6E18               	movwf	(___aldiv@divisor+2)^0,c
 15951  004BE0  0E00               	movlw	0
 15952  004BE2  6E19               	movwf	(___aldiv@divisor+3)^0,c
 15953  004BE4  0E00               	movlw	0
 15954  004BE6  6E12               	movwf	___aldiv@dividend^0,c
 15955  004BE8  0E09               	movlw	9
 15956  004BEA  6E13               	movwf	(___aldiv@dividend+1)^0,c
 15957  004BEC  0E3D               	movlw	61
 15958  004BEE  6E14               	movwf	(___aldiv@dividend+2)^0,c
 15959  004BF0  0E00               	movlw	0
 15960  004BF2  6E15               	movwf	(___aldiv@dividend+3)^0,c
 15961  004BF4  EC9C  F01E         	call	___aldiv	;wreg free
 15962  004BF8  C012  F028         	movff	?___aldiv,_UART_init$1816
 15963  004BFC  C013  F029         	movff	?___aldiv+1,_UART_init$1816+1
 15964  004C00  C014  F02A         	movff	?___aldiv+2,_UART_init$1816+2
 15965  004C04  C015  F02B         	movff	?___aldiv+3,_UART_init$1816+3
 15966  004C08                     
 15967                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 15968  004C08  C028  F012         	movff	_UART_init$1816,___aldiv@dividend
 15969  004C0C  C029  F013         	movff	_UART_init$1816+1,___aldiv@dividend+1
 15970  004C10  C02A  F014         	movff	_UART_init$1816+2,___aldiv@dividend+2
 15971  004C14  C02B  F015         	movff	_UART_init$1816+3,___aldiv@dividend+3
 15972  004C18  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 15973  004C1C  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 15974  004C20  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 15975  004C24  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 15976  004C28  EC9C  F01E         	call	___aldiv	;wreg free
 15977  004C2C  0412               	decf	?___aldiv^0,w,c
 15978  004C2E  6EAF               	movwf	175,c	;volatile
 15979  004C30                     
 15980                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 15981  004C30  84AC               	bsf	172,2,c	;volatile
 15982  004C32                     
 15983                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 15984  004C32  98AC               	bcf	172,4,c	;volatile
 15985  004C34                     
 15986                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 15987  004C34  8EAB               	bsf	171,7,c	;volatile
 15988  004C36                     
 15989                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 15990  004C36  9CAC               	bcf	172,6,c	;volatile
 15991  004C38                     
 15992                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 15993  004C38  8AAC               	bsf	172,5,c	;volatile
 15994  004C3A                     
 15995                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 15996  004C3A  9CAB               	bcf	171,6,c	;volatile
 15997  004C3C                     
 15998                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 15999  004C3C  88AB               	bsf	171,4,c	;volatile
 16000  004C3E  0012               	return		;funcret
 16001  004C40                     __end_of_UART_init:
 16002                           	opt callstack 0
 16003                           
 16004 ;; *************** function ___aldiv *****************
 16005 ;; Defined at:
 16006 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 16007 ;; Parameters:    Size  Location     Type
 16008 ;;  dividend        4   17[COMRAM] long 
 16009 ;;  divisor         4   21[COMRAM] long 
 16010 ;; Auto vars:     Size  Location     Type
 16011 ;;  quotient        4   27[COMRAM] long 
 16012 ;;  sign            1   26[COMRAM] unsigned char 
 16013 ;;  counter         1   25[COMRAM] unsigned char 
 16014 ;; Return value:  Size  Location     Type
 16015 ;;                  4   17[COMRAM] long 
 16016 ;; Registers used:
 16017 ;;		wreg, status,2, status,0
 16018 ;; Tracked objects:
 16019 ;;		On entry : 0/0
 16020 ;;		On exit  : 0/0
 16021 ;;		Unchanged: 0/0
 16022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16023 ;;      Params:         8       0       0       0       0       0       0       0       0
 16024 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16025 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16026 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16027 ;;Total ram usage:       14 bytes
 16028 ;; Hardware stack levels used:    1
 16029 ;; Hardware stack levels required when called:    2
 16030 ;; This function calls:
 16031 ;;		Nothing
 16032 ;; This function is called by:
 16033 ;;		_map
 16034 ;;		_UART_init
 16035 ;; This function uses a non-reentrant model
 16036 ;;
 16037                           
 16038                           	psect	text74
 16039  003D38                     __ptext74:
 16040                           	opt callstack 0
 16041  003D38                     ___aldiv:
 16042                           	opt callstack 24
 16043  003D38  0E00               	movlw	0
 16044  003D3A  6E1B               	movwf	___aldiv@sign^0,c
 16045  003D3C  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 16046  003D3E  EFA5  F01E         	goto	u7980
 16047  003D42  EFA3  F01E         	goto	u7981
 16048  003D46                     u7981:
 16049  003D46  EFAF  F01E         	goto	l7849
 16050  003D4A                     u7980:
 16051  003D4A  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 16052  003D4C  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 16053  003D4E  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 16054  003D50  6C16               	negf	___aldiv@divisor^0,c
 16055  003D52  0E00               	movlw	0
 16056  003D54  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 16057  003D56  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 16058  003D58  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 16059  003D5A  0E01               	movlw	1
 16060  003D5C  6E1B               	movwf	___aldiv@sign^0,c
 16061  003D5E                     l7849:
 16062  003D5E  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 16063  003D60  EFB6  F01E         	goto	u7990
 16064  003D64  EFB4  F01E         	goto	u7991
 16065  003D68                     u7991:
 16066  003D68  EFC0  F01E         	goto	l7855
 16067  003D6C                     u7990:
 16068  003D6C  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 16069  003D6E  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 16070  003D70  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 16071  003D72  6C12               	negf	___aldiv@dividend^0,c
 16072  003D74  0E00               	movlw	0
 16073  003D76  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 16074  003D78  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 16075  003D7A  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 16076  003D7C  0E01               	movlw	1
 16077  003D7E  1A1B               	xorwf	___aldiv@sign^0,f,c
 16078  003D80                     l7855:
 16079  003D80  0E00               	movlw	0
 16080  003D82  6E1C               	movwf	___aldiv@quotient^0,c
 16081  003D84  0E00               	movlw	0
 16082  003D86  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 16083  003D88  0E00               	movlw	0
 16084  003D8A  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 16085  003D8C  0E00               	movlw	0
 16086  003D8E  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 16087  003D90  5016               	movf	___aldiv@divisor^0,w,c
 16088  003D92  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 16089  003D94  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 16090  003D96  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 16091  003D98  B4D8               	btfsc	status,2,c
 16092  003D9A  EFD1  F01E         	goto	u8001
 16093  003D9E  EFD3  F01E         	goto	u8000
 16094  003DA2                     u8001:
 16095  003DA2  EF09  F01F         	goto	l7877
 16096  003DA6                     u8000:
 16097  003DA6  0E01               	movlw	1
 16098  003DA8  6E1A               	movwf	___aldiv@counter^0,c
 16099  003DAA  EFDD  F01E         	goto	l7863
 16100  003DAE                     l7861:
 16101  003DAE  90D8               	bcf	status,0,c
 16102  003DB0  3616               	rlcf	___aldiv@divisor^0,f,c
 16103  003DB2  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 16104  003DB4  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 16105  003DB6  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 16106  003DB8  2A1A               	incf	___aldiv@counter^0,f,c
 16107  003DBA                     l7863:
 16108  003DBA  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 16109  003DBC  EFE2  F01E         	goto	u8011
 16110  003DC0  EFE4  F01E         	goto	u8010
 16111  003DC4                     u8011:
 16112  003DC4  EFD7  F01E         	goto	l7861
 16113  003DC8                     u8010:
 16114  003DC8                     l7865:
 16115  003DC8  90D8               	bcf	status,0,c
 16116  003DCA  361C               	rlcf	___aldiv@quotient^0,f,c
 16117  003DCC  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 16118  003DCE  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 16119  003DD0  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 16120  003DD2  5016               	movf	___aldiv@divisor^0,w,c
 16121  003DD4  5C12               	subwf	___aldiv@dividend^0,w,c
 16122  003DD6  5017               	movf	(___aldiv@divisor+1)^0,w,c
 16123  003DD8  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 16124  003DDA  5018               	movf	(___aldiv@divisor+2)^0,w,c
 16125  003DDC  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 16126  003DDE  5019               	movf	(___aldiv@divisor+3)^0,w,c
 16127  003DE0  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 16128  003DE2  A0D8               	btfss	status,0,c
 16129  003DE4  EFF6  F01E         	goto	u8021
 16130  003DE8  EFF8  F01E         	goto	u8020
 16131  003DEC                     u8021:
 16132  003DEC  EF01  F01F         	goto	l7873
 16133  003DF0                     u8020:
 16134  003DF0  5016               	movf	___aldiv@divisor^0,w,c
 16135  003DF2  5E12               	subwf	___aldiv@dividend^0,f,c
 16136  003DF4  5017               	movf	(___aldiv@divisor+1)^0,w,c
 16137  003DF6  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 16138  003DF8  5018               	movf	(___aldiv@divisor+2)^0,w,c
 16139  003DFA  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 16140  003DFC  5019               	movf	(___aldiv@divisor+3)^0,w,c
 16141  003DFE  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 16142  003E00  801C               	bsf	___aldiv@quotient^0,0,c
 16143  003E02                     l7873:
 16144  003E02  90D8               	bcf	status,0,c
 16145  003E04  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 16146  003E06  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 16147  003E08  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 16148  003E0A  3216               	rrcf	___aldiv@divisor^0,f,c
 16149  003E0C  2E1A               	decfsz	___aldiv@counter^0,f,c
 16150  003E0E  EFE4  F01E         	goto	l7865
 16151  003E12                     l7877:
 16152  003E12  501B               	movf	___aldiv@sign^0,w,c
 16153  003E14  B4D8               	btfsc	status,2,c
 16154  003E16  EF0F  F01F         	goto	u8031
 16155  003E1A  EF11  F01F         	goto	u8030
 16156  003E1E                     u8031:
 16157  003E1E  EF19  F01F         	goto	l7881
 16158  003E22                     u8030:
 16159  003E22  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 16160  003E24  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 16161  003E26  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 16162  003E28  6C1C               	negf	___aldiv@quotient^0,c
 16163  003E2A  0E00               	movlw	0
 16164  003E2C  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 16165  003E2E  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 16166  003E30  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 16167  003E32                     l7881:
 16168  003E32  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 16169  003E36  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 16170  003E3A  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 16171  003E3E  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 16172  003E42  0012               	return		;funcret
 16173  003E44                     __end_of___aldiv:
 16174                           	opt callstack 0
 16175                           
 16176 ;; *************** function _boton *****************
 16177 ;; Defined at:
 16178 ;;		line 126 in file "main.c"
 16179 ;; Parameters:    Size  Location     Type
 16180 ;;		None
 16181 ;; Auto vars:     Size  Location     Type
 16182 ;;		None
 16183 ;; Return value:  Size  Location     Type
 16184 ;;                  1    wreg      void 
 16185 ;; Registers used:
 16186 ;;		wreg, status,2, status,0, cstack
 16187 ;; Tracked objects:
 16188 ;;		On entry : 0/0
 16189 ;;		On exit  : 0/0
 16190 ;;		Unchanged: 0/0
 16191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16192 ;;      Params:         0       0       0       0       0       0       0       0       0
 16193 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16194 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16195 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16196 ;;Total ram usage:        2 bytes
 16197 ;; Hardware stack levels used:    1
 16198 ;; Hardware stack levels required when called:    1
 16199 ;; This function calls:
 16200 ;;		_antiRebote
 16201 ;; This function is called by:
 16202 ;;		Interrupt level 2
 16203 ;; This function uses a non-reentrant model
 16204 ;;
 16205                           
 16206                           	psect	intcode
 16207  000008                     __pintcode:
 16208                           	opt callstack 0
 16209  000008                     _boton:
 16210                           	opt callstack 20
 16211                           
 16212                           ;incstack = 0
 16213  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16214  00000A  ED74  F027         	call	int_func,f	;refresh shadow registers
 16215                           
 16216                           	psect	intcode_body
 16217  004EE8                     __pintcode_body:
 16218                           	opt callstack 20
 16219  004EE8                     int_func:
 16220                           	opt callstack 20
 16221  004EE8  0006               	pop		; remove dummy address from shadow register refresh
 16222  004EEA                     
 16223                           ;main.c: 128:     if (INT0IF)
 16224  004EEA  A2F2               	btfss	4082,1,c	;volatile
 16225  004EEC  EF7A  F027         	goto	i2u776_41
 16226  004EF0  EF7C  F027         	goto	i2u776_40
 16227  004EF4                     i2u776_41:
 16228  004EF4  EF9C  F027         	goto	i2l280
 16229  004EF8                     i2u776_40:
 16230  004EF8                     
 16231                           ;main.c: 129:     {;main.c: 130:         antiRebote(1);
 16232  004EF8  0E01               	movlw	1
 16233  004EFA  EC48  F027         	call	_antiRebote
 16234  004EFE                     
 16235                           ;main.c: 131:         if (pausa) {
 16236  004EFE  0101               	movlb	1	; () banked
 16237  004F00  51D0               	movf	_pausa& (0+255),w,b
 16238  004F02  B4D8               	btfsc	status,2,c
 16239  004F04  EF86  F027         	goto	i2u777_41
 16240  004F08  EF88  F027         	goto	i2u777_40
 16241  004F0C                     i2u777_41:
 16242  004F0C  EF98  F027         	goto	i2l278
 16243  004F10                     i2u777_40:
 16244  004F10                     
 16245                           ; BSR set to: 1
 16246                           ;main.c: 132:             pausa = 0;
 16247  004F10  0E00               	movlw	0
 16248  004F12  6FD0               	movwf	_pausa& (0+255),b
 16249  004F14                     
 16250                           ; BSR set to: 1
 16251                           ;main.c: 133:             LATD2 = 1;
 16252  004F14  848C               	bsf	3980,2,c	;volatile
 16253  004F16                     
 16254                           ; BSR set to: 1
 16255                           ;main.c: 134:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 16256  004F16  0E10               	movlw	16
 16257  004F18  6E05               	movwf	(??_boton+1)^0,c
 16258  004F1A  0E39               	movlw	57
 16259  004F1C  6E04               	movwf	??_boton^0,c
 16260  004F1E  0E0E               	movlw	14
 16261  004F20                     i2u1195_47:
 16262  004F20  2EE8               	decfsz	wreg,f,c
 16263  004F22  D7FE               	bra	i2u1195_47
 16264  004F24  2E04               	decfsz	??_boton^0,f,c
 16265  004F26  D7FC               	bra	i2u1195_47
 16266  004F28  2E05               	decfsz	(??_boton+1)^0,f,c
 16267  004F2A  D7FA               	bra	i2u1195_47
 16268                           
 16269                           ;main.c: 135:         } else {
 16270  004F2C  EF9B  F027         	goto	i2l7327
 16271  004F30                     i2l278:
 16272                           
 16273                           ; BSR set to: 1
 16274                           ;main.c: 136:             LATD2 = 0;
 16275  004F30  948C               	bcf	3980,2,c	;volatile
 16276  004F32                     
 16277                           ; BSR set to: 1
 16278                           ;main.c: 137:             pausa = 1;
 16279  004F32  0E01               	movlw	1
 16280  004F34  6FD0               	movwf	_pausa& (0+255),b
 16281  004F36                     i2l7327:
 16282                           
 16283                           ;main.c: 140:         INT0IF = 0;
 16284  004F36  92F2               	bcf	4082,1,c	;volatile
 16285  004F38                     i2l280:
 16286  004F38  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16287  004F3A  0011               	retfie		f
 16288  004F3C                     __end_of_boton:
 16289                           	opt callstack 0
 16290                           
 16291 ;; *************** function _antiRebote *****************
 16292 ;; Defined at:
 16293 ;;		line 238 in file "main.c"
 16294 ;; Parameters:    Size  Location     Type
 16295 ;;  pin             1    wreg     unsigned char 
 16296 ;; Auto vars:     Size  Location     Type
 16297 ;;  pin             1    2[COMRAM] unsigned char 
 16298 ;; Return value:  Size  Location     Type
 16299 ;;                  1    wreg      void 
 16300 ;; Registers used:
 16301 ;;		wreg, status,2, status,0
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/0
 16304 ;;		On exit  : 0/0
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16307 ;;      Params:         0       0       0       0       0       0       0       0       0
 16308 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16309 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16310 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16311 ;;Total ram usage:        3 bytes
 16312 ;; Hardware stack levels used:    1
 16313 ;; This function calls:
 16314 ;;		Nothing
 16315 ;; This function is called by:
 16316 ;;		_boton
 16317 ;; This function uses a non-reentrant model
 16318 ;;
 16319                           
 16320                           	psect	text76
 16321  004E90                     __ptext76:
 16322                           	opt callstack 0
 16323  004E90                     _antiRebote:
 16324                           	opt callstack 20
 16325                           
 16326                           ;incstack = 0
 16327                           ;antiRebote@pin stored from wreg
 16328  004E90  6E03               	movwf	antiRebote@pin^0,c
 16329  004E92                     
 16330                           ;main.c: 240:     switch (pin) {
 16331  004E92  EF62  F027         	goto	i2l7117
 16332  004E96                     i2l314:
 16333  004E96  A081               	btfss	129,0,c	;volatile
 16334  004E98  EF50  F027         	goto	i2u754_41
 16335  004E9C  EF52  F027         	goto	i2u754_40
 16336  004EA0                     i2u754_41:
 16337  004EA0  EF4B  F027         	goto	i2l314
 16338  004EA4                     i2u754_40:
 16339  004EA4                     i2l317:
 16340  004EA4  B081               	btfsc	129,0,c	;volatile
 16341  004EA6  EF57  F027         	goto	i2u755_41
 16342  004EAA  EF59  F027         	goto	i2u755_40
 16343  004EAE                     i2u755_41:
 16344  004EAE  EF52  F027         	goto	i2l317
 16345  004EB2                     i2u755_40:
 16346  004EB2                     
 16347                           ;main.c: 244:             _delay((unsigned long)((100)*(4000000/4000.0)));
 16348  004EB2  0E82               	movlw	130
 16349  004EB4  6E01               	movwf	??_antiRebote^0,c
 16350  004EB6  0EDE               	movlw	222
 16351  004EB8                     i2u1196_47:
 16352  004EB8  2EE8               	decfsz	wreg,f,c
 16353  004EBA  D7FE               	bra	i2u1196_47
 16354  004EBC  2E01               	decfsz	??_antiRebote^0,f,c
 16355  004EBE  D7FC               	bra	i2u1196_47
 16356                           
 16357                           ;main.c: 245:             break;
 16358  004EC0  EF73  F027         	goto	i2l322
 16359  004EC4                     i2l7117:
 16360  004EC4  5003               	movf	antiRebote@pin^0,w,c
 16361  004EC6  6E01               	movwf	??_antiRebote^0,c
 16362  004EC8  6A02               	clrf	(??_antiRebote+1)^0,c
 16363                           
 16364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16365                           ; Switch size 1, requested type "simple"
 16366                           ; Number of cases is 1, Range of values is 0 to 0
 16367                           ; switch strategies available:
 16368                           ; Name         Instructions Cycles
 16369                           ; simple_byte            4     3 (average)
 16370                           ;	Chosen strategy is simple_byte
 16371  004ECA  5002               	movf	(??_antiRebote+1)^0,w,c
 16372  004ECC  0A00               	xorlw	0	; case 0
 16373  004ECE  B4D8               	btfsc	status,2,c
 16374  004ED0  EF6C  F027         	goto	i2l10857
 16375  004ED4  EF73  F027         	goto	i2l322
 16376  004ED8                     i2l10857:
 16377                           
 16378                           ; Switch size 1, requested type "simple"
 16379                           ; Number of cases is 1, Range of values is 1 to 1
 16380                           ; switch strategies available:
 16381                           ; Name         Instructions Cycles
 16382                           ; simple_byte            4     3 (average)
 16383                           ;	Chosen strategy is simple_byte
 16384  004ED8  5001               	movf	??_antiRebote^0,w,c
 16385  004EDA  0A01               	xorlw	1	; case 1
 16386  004EDC  B4D8               	btfsc	status,2,c
 16387  004EDE  EF4B  F027         	goto	i2l314
 16388  004EE2  EF73  F027         	goto	i2l322
 16389  004EE6                     i2l322:
 16390  004EE6  0012               	return		;funcret
 16391  004EE8                     __end_of_antiRebote:
 16392                           	opt callstack 0
 16393                           
 16394                           	psect	rparam
 16395  0000                     
 16396                           	psect	temp
 16397  00005A                     btemp:
 16398                           	opt callstack 0
 16399  00005A                     	ds	1
 16400  0000                     int$flags	set	btemp
 16401  0000                     wtemp8	set	btemp+1
 16402  0000                     ttemp5	set	btemp+1
 16403  0000                     ttemp6	set	btemp+4
 16404  0000                     ttemp7	set	btemp+8
 16405                           tosu	equ	0xFFF
 16406                           tosh	equ	0xFFE
 16407                           tosl	equ	0xFFD
 16408                           stkptr	equ	0xFFC
 16409                           pclatu	equ	0xFFB
 16410                           pclath	equ	0xFFA
 16411                           pcl	equ	0xFF9
 16412                           tblptru	equ	0xFF8
 16413                           tblptrh	equ	0xFF7
 16414                           tblptrl	equ	0xFF6
 16415                           tablat	equ	0xFF5
 16416                           prodh	equ	0xFF4
 16417                           prodl	equ	0xFF3
 16418                           indf0	equ	0xFEF
 16419                           postinc0	equ	0xFEE
 16420                           postdec0	equ	0xFED
 16421                           preinc0	equ	0xFEC
 16422                           plusw0	equ	0xFEB
 16423                           fsr0h	equ	0xFEA
 16424                           fsr0l	equ	0xFE9
 16425                           wreg	equ	0xFE8
 16426                           indf1	equ	0xFE7
 16427                           postinc1	equ	0xFE6
 16428                           postdec1	equ	0xFE5
 16429                           preinc1	equ	0xFE4
 16430                           plusw1	equ	0xFE3
 16431                           fsr1h	equ	0xFE2
 16432                           fsr1l	equ	0xFE1
 16433                           bsr	equ	0xFE0
 16434                           indf2	equ	0xFDF
 16435                           postinc2	equ	0xFDE
 16436                           postdec2	equ	0xFDD
 16437                           preinc2	equ	0xFDC
 16438                           plusw2	equ	0xFDB
 16439                           fsr2h	equ	0xFDA
 16440                           fsr2l	equ	0xFD9
 16441                           status	equ	0xFD8


Data Sizes:
    Strings     343
    Constant    4
    Data        4
    BSS         1412
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    153     159
    BANK1           256      7     212
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1468_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    combinarArreglos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    combinarArreglos@numMovimientosFinal	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientosTotales(BANK1[2]), 

    combinarArreglos@caminoFinal	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    decidirDireccion@caminoActual	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@caminoActual(BANK1[1]), 

    decidirDireccion@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    decidirDireccion@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    decidirDireccion@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    decidirDireccion@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    limpiarMovimientos@numMovimientos	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientos(BANK1[2]), caminoCorrecto@numMovimientos(COMRAM[2]), 

    limpiarMovimientos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    hayCruce@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    recorrerCaminoEncontrado@movimientos	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    regresarAlCruce@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    regresarPuntoPartida@movimientos	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    moverCarrito@carroEspejeado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@carroEspejeado(BANK1[1]), 

    caminoCorrecto@numMovimientosFinal	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientosTotales(BANK1[2]), 

    caminoCorrecto@caminoFinal	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    caminoCorrecto@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 63
		 -> STR_13(CODE[63]), STR_12(CODE[56]), STR_10(CODE[6]), STR_9(CODE[9]), 
		 -> STR_8(CODE[11]), STR_7(CODE[10]), buffer(BANK1[50]), STR_2(CODE[25]), 
		 -> STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _comportamientoBasico->_moverCarrito
    _comportamientoBasico->_recorrerCaminoEncontrado
    _comportamientoBasico->_regresarAlCruce
    _comportamientoBasico->_regresarPuntoPartida
    _mover->_forzarAvanceRecto
    _PID->_roundf
    _roundf->___flsub
    ___flsub->___fladd
    _leerSensores->___fldiv
    _dameDistancia->___xxtofl
    ___fladd->___flmul
    _hayCruce->___flge
    _map->___aldiv
    ___xxtofl->___lwdiv
    ___fltol->_roundf
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _decidirDireccion->___flge
    _seLlegoAlDestino->_dameLecturaAdc
    ___flge->___flmul
    _caminoCorrecto->_combinarArreglos
    _UART_printf->_UART_write
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _visualizarPasosRealizados->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _comportamientoBasico->_recorrerCaminoEncontrado
    _comportamientoBasico->_regresarAlCruce
    _comportamientoBasico->_regresarPuntoPartida
    _velocidadBaja->_pwmDuty
    _regresarPuntoPartida->_PID
    _regresarAlCruce->_PID
    _recorrerCaminoEncontrado->_PID
    _PID->_pwmDuty
    _leerSensores->___fldiv
    _velocidadEstandar->_pwmDuty
    _pwmDuty->___fltol
    ___fltol->_roundf

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_visualizarPasosRealizados

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  451089
                                              4 BANK1      3     3      0
                          _UART_init
               _comportamientoBasico
                          _configPwm
                      _configurarAdc
                     _forzarParoAuto
    _inicializarComportamientoBasico
          _visualizarPasosRealizados
 ---------------------------------------------------------------------------------
 (1) _visualizarPasosRealizados                            4     2      2   54974
                                              0 BANK1      4     2      2
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   53767
                                            135 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   52537
                                            127 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   51998
                                             97 BANK0     30    24      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   38407
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             79 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6493
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4227
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1615
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13829
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _comportamientoBasico                                 3     3      0  381004
                                             64 BANK0      3     3      0
                                _PID
                        _UART_printf
                     _caminoCorrecto
                   _decidirDireccion
                 _finalizarRecorrido
                      _forzarEspejeo
                     _forzarParoAuto
                           _hayCruce
                       _leerSensores
                 _limpiarMovimientos
                       _moverCarrito
           _recorrerCaminoEncontrado
                    _regresarAlCruce
               _regresarPuntoPartida
                      _velocidadBaja
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadBaja                                        0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (2) _regresarPuntoPartida                                 7     3      4   64212
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarAlCruce                                      7     3      4   64032
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _recorrerCaminoEncontrado                             7     3      4   64001
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (3) _mover                                                2     2      0       0
                                              7 COMRAM     2     2      0
                  _forzarAvanceRecto
 ---------------------------------------------------------------------------------
 (3) _PID                                                 18    18      0   51106
                                             40 BANK0     18    18      0
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _pwmDuty
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   20827
                                             75 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6347
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _moverCarrito                                         5     3      2   28940
                                             83 COMRAM     1     1      0
                                             40 BANK0      4     2      2
                  _forzarAvanceRecto
                      _forzarEspejeo
 ---------------------------------------------------------------------------------
 (4) _forzarAvanceRecto                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10233
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (2) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5422
                                             51 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (2) _hayCruce                                             7     4      3    5006
                                             63 COMRAM     7     4      3
                             ___flge
 ---------------------------------------------------------------------------------
 (2) _finalizarRecorrido                                   0     0      0   28788
                      _forzarEspejeo
                     _forzarParoAuto
 ---------------------------------------------------------------------------------
 (3) _forzarEspejeo                                        0     0      0   28788
                             ___flge
               _forzarEspejeoDerecha
             _forzarEspejeoIzquierda
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoIzquierda                               0     0      0   12461
                _forzarGiroIzquierda
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarGiroIzquierda                                  2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoDerecha                                 0     0      0   12461
                  _forzarGiroDerecha
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12461
                                             28 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3953
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             67 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (5) _forzarReversa                                        2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _forzarParoAuto                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _forzarGiroDerecha                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _decidirDireccion                                    15     3     12    7428
                                             63 COMRAM    15     3     12
                             ___flge
                   _seLlegoAlDestino
 ---------------------------------------------------------------------------------
 (3) _seLlegoAlDestino                                     1     1      0      68
                                             10 COMRAM     1     1      0
                     _dameLecturaAdc
 ---------------------------------------------------------------------------------
 (4) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    3866
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _caminoCorrecto                                       9     0      9    1811
                                             17 COMRAM     9     0      9
                   _combinarArreglos
                 _limpiarMovimientos
 ---------------------------------------------------------------------------------
 (2) _limpiarMovimientos                                   8     4      4     521
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _combinarArreglos                                    12     4      8     583
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2    1086
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (11) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _comportamientoBasico
     _PID
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _roundf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___xxtofl
         ___lwdiv (ARG)
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
       _roundf
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
     _UART_printf
       _UART_write
     _caminoCorrecto
       _combinarArreglos
       _limpiarMovimientos
     _decidirDireccion
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _seLlegoAlDestino
         _dameLecturaAdc
     _finalizarRecorrido
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
       _forzarParoAuto
     _forzarEspejeo
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _forzarEspejeoDerecha
         _forzarGiroDerecha
         _forzarParoAuto
         _forzarReversa
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl
               ___lwdiv (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
       _forzarEspejeoIzquierda
         _forzarGiroIzquierda
         _forzarParoAuto
         _forzarReversa
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl
               ___lwdiv (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
     _forzarParoAuto
     _hayCruce
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
     _leerSensores
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _limpiarMovimientos
     _moverCarrito
       _forzarAvanceRecto
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
     _recorrerCaminoEncontrado
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _regresarAlCruce
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _regresarPuntoPartida
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _velocidadBaja
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _configPwm
   _configurarAdc
   _forzarParoAuto
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _visualizarPasosRealizados
     _UART_printf
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     3E8      21       48.9%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      7      D4       7       82.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     294      20        0.0%
DATA                 0      0     67C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Sep 09 23:05:25 2020

                              ___fldiv@aexp 006C                                ___fldiv@bexp 006B  
                    __end_of_caminoCorrecto 51A0                                ___fldiv@sign 0064  
                              ___awdiv@sign 000B                              ?_configurarAdc 0001  
                       ___wmul@multiplicand 0008                                 __CFG_BORV$3 000000  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
           comportamientoBasico@caminoFinal 02C8                                         l204 3C56  
                                       l214 3D36                                         l206 3C64  
                                       l207 3C66                                         l400 54BE  
                                       l217 4C3E                                         l241 5136  
                                       l226 54A0                                         l162 4FE2  
                                       l235 4E32                                         l243 5144  
                                       l403 54D2                                         l244 5158  
                                       l412 5444                                         l229 54AE  
                                       l149 4AE8                                         l157 32A2  
                                       l421 5498                                         l165 4FEE  
                                       l325 50CC                                         l309 475E  
                                       l406 5424                                         l430 42F4  
                                       l166 502C                                         l238 54C8  
                                       l415 5464                                         l167 4FF8  
                                       l328 519E                                         l168 502E  
                                       l193 3CB8                                         l185 3BF6  
                                       l409 5402                                         l530 507E  
                                       l418 547E                                         l426 5262  
                                       l514 38F4                                         l434 4336  
                                       l442 48B8                                         l195 3C26  
                                       l187 3C04                                         l371 1F58  
                                       l188 3C06                                         l436 4360  
                                       l533 536C                                         l197 3C34  
                                       l437 436C                                         l445 48D4  
                                       l381 21F8                                         l534 536E  
                                       l198 3C36                                         l438 43B4  
                                       l446 48FA                                         l447 4906  
                                       l448 494E                                         l457 48B2  
                                       l801 2C7E                                         l546 1726  
                                       l706 53E0                                         l466 4600  
                                       l715 4D74                                         l651 3A40  
                                       l476 4A6E                                         l709 53BA  
                                       l397 224E                                         l639 1A04  
                                       l663 3A70                                         l911 110C  
                                       l648 1A06                                         l576 17BE  
                                       l656 3A60                                         l593 183C  
                                       l657 3A50                                         l770 43FC  
                                       l819 0BD6                                         l940 4D02  
                                       l684 2ED0                                         l941 4D12  
                                       l773 443E                                         l781 2A3E  
                                       l837 0406                                         l925 4CA0  
                                       l926 4CA8                                         l775 447A  
                                       l783 2A46                                         l863 07A2  
                                       l919 1052                                         l929 5394  
                              __CFG_CPB$OFF 000000                                         _PR2 000FCB  
                                       _PID 2C80                                __CFG_CPD$OFF 000000  
                              __CFG_BOR$OFF 000000                                         _abs 51E4  
                                       _map 4A70                                         _pad 43B6  
                              ___awmod@sign 000B                                         wreg 000FE8  
                              ___flmul@aexp 0028                                ___flmul@bexp 002D  
                  _DISTANCIA_PRIORIDAD_BAJA 010C                    _DISTANCIA_PRIORIDAD_ALTA 0114  
                              ___flmul@sign 0027                                ___flmul@temp 0032  
                              ___flmul@prod 002E                 __size_of_limpiarMovimientos 0050  
                              __CFG_LVP$OFF 000000                                        ?_PID 0001  
                              ___fltol@exp1 007B                                __CFG_WDT$OFF 000000  
                                      l1008 3E42                                        l1203 530A  
                                      l1043 376E                                        ?_abs 0018  
                                      l1056 3BD4                                        l1160 453E  
                                      l1226 3F4A                                        l1420 4B54  
                                      l1173 46B0                                        l1511 299C  
                                      l1513 27FC                                        l1194 4008  
                                      l1522 2842                                        l1610 414C  
                                      l1427 4B5C                                        l1524 28BA  
                                      l1516 27C0                                        l1188 4808  
                                      l1525 28A8                                        l1550 1CC2  
                                      l1702 51E2                                        l1199 404E  
                                      l1543 1ACC                                        l1615 521A  
                                      l1560 1DF2                                        l1552 1D3A  
                                      l1720 2600                                        l1712 54D8  
                                      l1553 1D28                                        l1457 12FC  
                                      l1474 1416                                        l1466 15CC  
                                      l1458 12EA                                        l1618 5222  
                                      l1547 1E30                                        l1483 14E6  
                                      l1459 12B0                                        l1484 14D4  
                                      l1733 4E8E                                        l1709 4F8C  
                                      l1646 35DE                                        l1591 3392  
                                      l1655 30E6                                        l1743 4222  
                                      l1584 32FA                                        l1665 52D2  
                                      l1673 4FDE                                        l1649 35E6  
                                      l1753 4DCC                                        l1658 302A  
                                      l1587 3456                                        l1499 5112  
                                      l1739 5340                                        l1598 33EE  
                                      l1694 42EC                                        l1758 4DD4  
                                      l1679 529A                                        ?_map 0020  
                                      ?_pad 0016                                        l8001 12CA  
                                      l8011 130A                                        l8003 12CE  
                                      l8101 15A4                                        l8021 134C  
                                      l8013 131A                                        l8005 12DC  
                                      l8103 15A6                                        l8031 137A  
                                      l8023 135A                                        l8007 12DE  
                                      l8201 2828                                        l8121 2630  
                                      l8113 2602                                        l8105 15AC  
                                      l8041 13E6                                        l8033 1384  
                                      l8025 1366                                        l8017 132E  
                                      l8009 12E8                                        l9001 048C  
                                      l8211 2864                                        l8203 2832  
                                      l8131 266A                                        l8123 2640  
                                      l8115 2610                                        l8107 15BA  
                                      l8043 13F6                                        l8027 136A  
                                      l8019 133E                                        l8035 138A  
                                      l9011 04C4                                        l9003 0494  
                                      l8221 28D6                                        l8213 2872  
                                      l8205 2840                                        l8141 2696  
                                      l8133 2670                                        l8125 2650  
                                      l8117 261E                                        l8301 1B50  
                                      l8109 15BC                                        l8061 1478  
                                      l8053 1450                                        l8037 13B0  
                                      l8045 1406                                        l8029 1378  
                                      l9101 08FE                                        l9021 050E  
                                      l9013 04D2                                        l9005 0498  
                                      l8231 2942                                        l8223 28E4  
                                      l8215 28A0                                        l8207 2852  
                                      l8151 26D0                                        l8143 26A6  
                                      l8135 2676                                        l8127 2652  
                                      l8119 2620                                        l8311 1B92  
                                      l8303 1B5C                                        l8063 1480  
                                      l8055 145A                                        l8047 142C  
                                      l8039 13E4                                        l8071 14A4  
                                      l9103 0904                                        l9111 099C  
                                      l9031 0554                                        l9023 0520  
                                      l9015 04D6                                        l9007 04A0  
                                      l8241 2990                                        l8233 295C  
                                      l8225 290E                                        l8209 2860  
                                      l8153 26E6                                        l8145 26B6  
                                      l8137 2684                                        l8129 265A  
                                      l8321 1BF4                                        l8313 1B9E  
                                      l8305 1B68                                        l8081 14F6  
                                      l8073 14A8                                        l8065 1484  
                                      l8057 1468                                        l8049 143C  
                                      l9201 34CA                                        l9121 0A0A  
                                      l9113 09BA                                        l9105 095C  
                                      l9041 0668                                        l9033 05B8  
                                      l9017 04E8                                        l9025 0528  
                                      l9009 04B2                                        l8243 2992  
                                      l8235 2978                                        l8219 28CA  
                                      l8227 2912                                        l8171 273A  
                                      l8155 26F6                                        l8163 2716  
                                      l8147 26B8                                        l8139 2686  
                                      l8331 1C8A                                        l8323 1C00  
                                      l8315 1BAE                                        l8307 1B76  
                                      l8251 1A08                                        l8403 3ED6  
                                      l8091 155C                                        l8083 1502  
                                      l8075 14B6                                        l8067 1494  
                                      l8059 146A                                        l9211 34F6  
                                      l9131 0A4A                                        l9123 0A0E  
                                      l9115 09D6                                        l9107 0990  
                                      l9051 0726                                        l9043 069C  
                                      l9035 0610                                        l9027 0530  
                                      l9019 04F6                                        l8237 297C  
                                      l8229 292C                                        l8181 278C  
                                      l8173 2754                                        l8165 2726  
                                      l8157 26FE                                        l8149 26C0  
                                      l8341 1CE0                                        l8333 1CA8  
                                      l8325 1C1C                                        l8317 1BC8  
                                      l8309 1B82                                        l8261 1A44  
                                      l8253 1A14                                        l8421 3F3A  
                                      l8413 3EFE                                        l8405 3EE0  
                                      l8093 156C                                        l8085 1510  
                                      l8077 14CC                                        l8069 1496  
                                      l9301 230A                                        l9221 359E  
                                      l9213 352A                                        l9205 34D0  
                                      l8501 441C                                        l9141 0A7C  
                                      l9133 0A52                                        l9125 0A20  
                                      l9117 09E8                                        l9109 0998  
                                      l9061 079A                                        l9053 0736  
                                      l9045 06CE                                        l9037 0644  
                                      l9029 0540                                        l8239 298A  
                                      l8191 27E8                                        l8183 279C  
                                      l8175 2764                                        l8167 2726  
                                      l8159 2702                                        l8351 1D4A  
                                      l8343 1CE4                                        l8335 1CB2  
                                      l8327 1C46                                        l8319 1BD8  
                                      l8271 1A76                                        l8263 1A54  
                                      l8255 1A22                                        l8415 3F0A  
                                      l8407 3EEA                                        l8431 330A  
                                      l8095 158C                                        l8087 154A  
                                      l9311 2452                                        l9303 232E  
                                      l9223 35B0                                        l9207 34E6  
                                      l8511 51E4                                        l8503 4420  
                                      l9143 0A82                                        l9151 0AD2  
                                      l9135 0A60                                        l9127 0A32  
                                      l9119 09F8                                        l9071 0858  
                                      l9063 07BE                                        l9055 076A  
                                      l9047 06E4                                        l9039 064A  
                                      l9231 414E                                        l8193 27EA  
                                      l8185 27B0                                        l8177 2774  
                                      l8361 1DAC                                        l8353 1D56  
                                      l8345 1CF2                                        l8337 1CC0  
                                      l8329 1C7C                                        l8281 1AB6  
                                      l8273 1A84                                        l8265 1A5A  
                                      l8257 1A24                                        l8417 3F1A  
                                      l8441 3348                                        l8433 3320  
                                      l8425 32A6                                        l8097 1590  
                                      l8089 154C                                        l9321 25CC  
                                      l9313 24BE                                        l9305 234C  
                                      l9225 35C2                                        l9217 3560  
                                      l9209 34EE                                        l8601 364C  
                                      l8513 51FE                                        l8505 444E  
                                      l8521 40D6                                        l9161 0B22  
                                      l9153 0AE4                                        l9145 0AA8  
                                      l9137 0A68                                        l9129 0A3A  
                                      l9081 08A0                                        l9073 0866  
                                      l9065 0822                                        l9057 077A  
                                      l9049 0716                                        l9241 41AA  
                                      l9233 4178                                        l9251 5116  
                                      l8195 27FA                                        l8187 27BE  
                                      l8179 2784                                        l8371 1E14  
                                      l8363 1DC0                                        l8355 1D64  
                                      l8347 1D20                                        l8339 1CD2  
                                      l8291 1B00                                        l8283 1ABC  
                                      l8275 1A86                                        l8267 1A6A  
                                      l8259 1A34                                        l8419 3F2A  
                                      l8451 33D0                                        l8443 337A  
                                      l8427 32B6                                        l8099 159E  
                                      l9323 25F0                                        l9315 24F0  
                                      l8611 3696                                        l8603 3650  
                                      l8507 4462                                        l8523 40E2  
                                      l8515 4050                                        l9163 0B2A  
                                      l9155 0AFE                                        l9147 0AC4  
                                      l9139 0A70                                        l9091 08CA  
                                      l9083 08A4                                        l9067 0832  
                                      l9075 086E                                        l9059 078E  
                                      l9243 41C6                                        l9403 1066  
                                      l9331 0C0A                                        l9261 5146  
                                      l9253 511E                                        l8197 280C  
                                      l8189 27CA                                        l8373 1E16  
                                      l8365 1DDA                                        l8357 1D8E  
                                      l8293 1B0C                                        l8285 1ADC  
                                      l8277 1A96                                        l8269 1A70  
                                      l8381 3E44                                        l8461 3426  
                                      l8453 33DE                                        l8445 337C  
                                      l8437 3334                                        l8429 32C4  
                                      l9317 255C                                        l9309 2384  
                                      l8621 3706                                        l8613 36A4  
                                      l8605 365C                                        l7821 4248  
                                      l7901 531C                                        l8701 44F2  
                                      l8533 4144                                        l8517 4070  
                                      l8541 4D76                                        l9181 0BB0  
                                      l9173 0B7A                                        l9165 0B3A  
                                      l9157 0B04                                        l9149 0ACC  
                                      l9093 08D0                                        l9085 08AA  
                                      l9077 0882                                        l9069 0846  
                                      l9245 41D8                                        l9237 4184  
                                      l9421 10FA                                        l9405 108A  
                                      l9413 10BA                                        l9341 0C5A  
                                      l9333 0C1C                                        l9511 4D4C  
                                      l9255 5120                                        l8199 2822  
                                      l8367 1DF6                                        l8375 1E1C  
                                      l8359 1D92                                        l8295 1B16  
                                      l8287 1AEC                                        l8279 1AA6  
                                      l8391 3E9C                                        l8383 3E5C  
                                      l8463 3436                                        l8455 33FC  
                                      l8447 3388                                        l8439 333C  
                                      l7831 4CAA                                        l8471 30E8  
                                      l9271 546A                                        l7911 110E  
                                      l9431 4B04                                        l9319 2590  
                                      l9191 346C                                        l8623 3718  
                                      l8615 36B6                                        l8607 367A  
                                      l7823 4252                                        l7903 5334  
                                      l8703 4508                                        l8711 451E  
                                      l8519 40AE                                        l8527 40EE  
                                      l8551 2ED2                                        l9183 0BB6  
                                      l9175 0B8C                                        l9167 0B40  
                                      l9159 0B16                                        l9087 08B6  
                                      l9079 0890                                        l9095 08D6  
                                      l9247 4200                                        l9239 4192  
                                      l9415 10C8                                        l9407 1098  
                                      l9343 0C7E                                        l9335 0C20  
                                      l9327 0BD8                                        l7841 3D38  
                                      l9513 4D5A                                        l9521 504C  
                                      l9257 5132                                        l8377 1E20  
                                      l8369 1E06                                        l8297 1B2C  
                                      l8393 3EAC                                        l8465 3444  
                                      l8457 33FE                                        l8449 33C4  
                                      l7833 4CBA                                        l8473 3148  
                                      l9281 5480                                        l9273 546E  
                                      l7921 114A                                        l7913 111A  
                                      l9441 4B3E                                        l9433 4B0C  
                                      l9601 3A30                                        l9265 53E2  
                                      l8801 4F8E                                        l9193 3470  
                                      l8617 36E4                                        l8609 3682  
                                      l8625 371E                                        l8641 3AA8  
                                      l8633 3A72                                        l7825 4270  
                                      l7817 4224                                        l8713 452E  
                                      l8705 4510                                        l8721 4606  
                                      l8529 4100                                        l8553 2EF2  
                                      l8537 4E34                                        l8545 4DAC  
                                      l9177 0B98                                        l9169 0B46  
                                      l9097 08E8                                        l9089 08C6  
                                      l9409 10AC                                        l9361 0DA4  
                                      l9353 0D2E                                        l9345 0CB8  
                                      l9337 0C44                                        l9329 0BFC  
                                      l7851 3D6C                                        l7843 3D3C  
                                      l9515 4D5E                                        l9507 4D14  
                                      l9523 5050                                        l9259 5134  
                                      l8299 1B38                                        l8395 3EB0  
                                      l8387 3E70                                        l8467 3446  
                                      l8459 3402                                        l7835 4CC8  
                                      l8483 3276                                        l8475 3168  
                                      l9291 5494                                        l9283 5484  
                                      l9275 5472                                        l7931 117A  
                                      l7923 115A                                        l7915 1128  
                                      l9443 4B46                                        l9435 4B14  
                                      l9427 4AEA                                        l9451 3BE8  
                                      l9267 53EA                                        l9531 2CCA  
                                      l8803 4F92                                        l9195 3474  
                                      l8627 372E                                        l8619 3704  
                                      l8651 3B10                                        l8643 3AB6  
                                      l8635 3A76                                        l7827 42A6  
                                      l7819 4236                                        l8491 43C6  
                                      l8715 4536                                        l8707 4512  
                                      l8731 4636                                        l8723 4614  
                                      l8571 309E                                        l8563 2FDE  
                                      l8555 2F4A                                        l8539 4E44  
                                      l7907 5264                                        l8547 4DBE  
                                      l9179 0BA0                                        l9099 08FA  
                                      l9371 0E76                                        l9363 0DB4  
                                      l9347 0CD8                                        l9339 0C4C  
                                      l9355 0D40                                        l9419 10D6  
                                      l9611 4F3C                                        l7861 3DAE  
                                      l7853 3D7C                                        l7845 3D4A  
                                      l9509 4D20                                        l9525 506E  
                                      l9517 5030                                        l8397 3EBE  
                                      l8389 3E9A                                        l7837 4CD8  
                                      l8477 31EE                                        l8813 53BC  
                                      l9285 5488                                        l8821 5426  
                                      l9277 5476                                        l9269 5466  
                                      l7941 11A4                                        l7933 118C  
                                      l7925 115C                                        l7917 112A  
                                      l9445 4B48                                        l9437 4B22  
                                      l9429 4AF2                                        l9461 3C74  
                                      l9453 3BEA                                        l9293 2250  
                                      l9541 2E12                                        l9533 2D8C  
                                      l8805 4FA6                                        l9197 3490  
                                      l9189 3458                                        l8629 374E  
                                      l8653 3B1E                                        l8661 3B84  
                                      l8645 3AD6                                        l8637 3A84  
                                      l8493 43DA                                        l8709 4518  
                                      l8741 467C                                        l8733 4648  
                                      l8725 461C                                        l8573 30C6  
                                      l8565 301A                                        l8557 2F5E  
                                      l8901 0066                                        l9381 0EE4  
                                      l9365 0DE6                                        l9357 0D62  
                                      l9349 0CE6                                        l9613 4F4E  
                                      l7871 3E00                                        l7863 3DBA  
                                      l7855 3D80                                        l7847 3D5A  
                                      l9519 503C                                        l9623 515A  
                                      l8815 54CA                                        l7839 4CE2  
                                      l8479 3232                                        l9287 548C  
                                      l8823 542E                                        l9279 547A  
                                      l7943 11B4                                        l7951 11DE  
                                      l7935 118E                                        l7919 113A  
                                      l7927 1164                                        l9447 4B4E  
                                      l9439 4B28                                        l9471 3D14  
                                      l9455 3BF0                                        l9631 42FC  
                                      l8671 50DE                                        l9295 2270  
                                      l9551 2E5A                                        l9543 2E26  
                                      l9535 2DBC                                        l9527 2C80  
                                      l8583 5370                                        l8807 4FD4  
                                      l9199 34C6                                        l8591 35EC  
                                      l8663 3B94                                        l8655 3B4C  
                                      l8647 3AF4                                        l8639 3AA4  
                                      l8495 43E8                                        l8831 29BE  
                                      l8751 46A8                                        l8743 4684  
                                      l8735 4650                                        l8727 4620  
                                      l8719 4602                                        l8575 30D6  
                                      l8559 2F6C                                        l8567 304E  
                                      l8911 00AE                                        l8903 0070  
                                      l9383 0F14                                        l9375 0EAE  
                                      l9367 0E0A                                        l9359 0D72  
                                      l9615 4F56                                        l7881 3E32  
                                      l7873 3E02                                        l7865 3DC8  
                                      l7857 3D90                                        l7849 3D5E  
                                      l9625 5166                                        l9801 17A2  
                                      l8825 5446                                        l8817 5404  
                                      l9289 5490                                        l9721 38C0  
                                      l9713 387C                                        l7961 1216  
                                      l7953 11EE                                        l7945 11C4  
                                      l7937 1194                                        l7929 1174  
                                      l9473 3D14                                        l9457 3C14  
                                      l9465 3C86                                        l9449 3BD8  
                                      l9641 4358                                        l9633 4312  
                                      l9297 22BA                                        l9561 2EAE  
                                      l9553 2E82                                        l9545 2E2E  
                                      l9537 2DC4                                        l9529 2C8A  
                                      l8585 538C                                        l8809 4FD8  
                                      l8593 35FA                                        l8665 3BB4  
                                      l8657 3B6C                                        l8649 3AFC  
                                      l8497 43F4                                        l8489 43B6  
                                      l8841 2A32                                        l8833 29E6  
                                      l8681 4496                                        l8745 468A  
                                      l8737 4658                                        l8729 462E  
                                      l8761 47CC                                        l8569 308A  
                                      l8913 00BA                                        l8921 00D0  
                                      l8905 0078                                        l9393 0FDC  
                                      l9377 0EC0                                        l9369 0E2E  
                                      l9617 4F5E                                        l7875 3E0C  
                                      l7867 3DD2                                        l7859 3DA6  
                                      l9483 549C                                        l9627 518A  
                                      l8771 3F4C                                        l9571 5342  
                                      l9803 17AE                                        l8827 544E  
                                      l8819 540C                                        l9723 38D0  
                                      l9715 388C                                        l7971 122A  
                                      l7963 121A                                        l7955 1200  
                                      l7947 11D4                                        l7939 11A2  
                                      l9475 3D26                                        l9467 3CC8  
                                      l9459 3C44                                        l9635 4322  
                                      l9299 22CE                                        l9563 2EBE  
                                      l9555 2E92                                        l9539 2DE6  
                                      l9547 2E3A                                        l9491 48F2  
                                      l8579 529C                                        l8595 361A  
                                      l8659 3B7E                                        l7891 51AC  
                                      l8499 4408                                        l8851 2A7C  
                                      l8843 2A4E                                        l8835 2A06  
                                      l8691 44BC                                        l8683 449A  
                                      l8675 447C                                        l8739 4666  
                                      l8747 4690                                        l8763 47DC  
                                      l8755 4760                                        l8931 015A  
                                      l8923 00F6                                        l8915 00C2  
                                      l8907 008A                                        l9395 0FEE  
                                      l9379 0ED6                                        l9387 0F40  
                                      l9619 4F7A                                        l7869 3DF0  
                                      l7877 3E12                                        l8781 3FD6  
                                      l8773 3F7A                                        l9573 5346  
                                      l9901 1840                                        l7885 4A70  
                                      l9565 5224                                        l9717 38A0  
                                      l9661 37B2                                        l7981 123E  
                                      l7973 122E                                        l7965 121E  
                                      l7957 120E                                        l7949 11D6  
                                      l9469 3CDA                                        l9637 4326  
                                      l9629 42F0                                        l8669 50CE  
                                      l9557 2E9A                                        l9549 2E42  
                                      l9485 48B4                                        l8597 361E  
                                      l8589 35E8                                        l7893 51BE  
                                      l8861 2B18                                        l8853 2A84  
                                      l8845 2A60                                        l8837 2A16  
                                      l8829 299E                                        l8693 44CE  
                                      l8685 44A8                                        l8677 4480  
                                      l8749 46A0                                        l8765 4800  
                                      l8757 478E                                        l8941 01CA  
                                      l8933 0172                                        l8917 00C6  
                                      l8909 009A                                        l9397 1022  
                                      l9389 0F6E                                        l9581 4C48  
                                      l7879 3E22                                        l9591 4DFE  
                                      l8783 3FE8                                        l8775 3F8A  
                                      l9575 5368                                        l9903 185E  
                                      l9751 15CE                                        l9567 5256  
                                      l9719 38B0                                        l9671 37F0  
                                      l9663 37B6                                        l7991 1252  
                                      l7983 1242                                        l7975 1232  
                                      l7967 1222                                        l7959 1212  
                                      l9639 433E                                        l9559 2EA6  
                                      l9487 48C0                                        l8599 362C  
                                      l7895 51C2                                        l8871 2BE8  
                                      l8855 2A8A                                        l8863 2B7C  
                                      l8847 2A6E                                        l8839 2A18  
                                      l8695 44D6                                        l8687 44B0  
                                      l8679 448E                                        l8767 4806  
                                      l8759 479E                                        l8935 017C  
                                      l8927 012C                                        l8919 00CA  
                                      l9583 4C56                                        l9593 4E02  
                                      l8785 3FF6                                        l8777 3FB8  
                                      l9905 187A                                        l9761 1628  
                                      l9753 15D4                                        l9569 525E  
                                      l9745 38F2                                        l9737 38DC  
                                      l9673 3822                                        l9665 37B8  
                                      l9657 3770                                        l7993 127C  
                                      l7985 1246                                        l7977 1236  
                                      l7969 1226                                        l9649 4378  
                                      l8793 52D4                                        l9489 48DC  
                                      l7889 51A0                                        l7897 530C  
                                      l8881 2C32                                        l8865 2B96  
                                      l8873 2BF8                                        l8857 2B0C  
                                      l8849 2A74                                        l8697 44DE  
                                      l8689 44B4                                        l8945 0200  
                                      l8929 013E                                        l9585 4C84  
                                      l9587 4DD6                                        l8787 4046  
                                      l8779 3FC8                                        l9907 1886  
                                      l9771 1684                                        l9763 1638  
                                      l9755 15EC                                        l9739 38EC  
                                      l9691 3858                                        l9675 3826  
                                      l9667 37EA                                        l9659 3780  
                                      l7995 1298                                        l7987 124A  
                                      l7979 123A                                        l9595 38F6  
                                      l8795 52EA                                        l9499 4912  
                                      l7899 5318                                        l8883 2C3E  
                                      l8875 2C0A                                        l8867 2BB4  
                                      l8859 2B12                                        l8699 44EC  
                                      l8971 0362                                        l8963 029A  
                                      l8947 0212                                        l8939 01A4  
                                      l8891 0012                                        l9579 4C40  
                                      l9589 4DDA                                        l8789 404C  
                                      l9861 17DC                                        l9773 1698  
                                      l9765 1640                                        l9757 1604  
                                      l9693 386C                                        l9677 3828  
                                      l9669 37EE                                        l7997 12A8  
                                      l7989 124E                                        l9597 3A10  
                                      l8797 52FA                                        l9749 5396  
                                      l8885 2C46                                        l8877 2C1A  
                                      l8869 2BCE                                        l8981 03C2  
                                      l8973 036A                                        l8965 02CE  
                                      l8949 022E                                        l8957 024A  
                                      l8893 001C                                        l9863 17F8  
                                      l9791 1756                                        l9767 1658  
                                      l9759 161C                                        l9679 3838  
                                      l7999 12BE                                        l9599 3A20  
                                      l8879 2C20                                        l8887 2C56  
                                      l8983 03D6                                        l8967 02D4  
                                      l8975 039C                                        l8959 0264  
                                      l8895 002C                                        STR_1 7F79  
                                      STR_2 7F60                                        l9961 18CC  
                                      l9881 1828                                        l9865 1804  
                                      l9793 175E                                        l9777 16B8  
                                      l9769 1668                                        l9785 16EC  
                                      l9689 3848                                        l8985 03DE  
                                      l8977 03AC                                        l8969 032E  
                                      l8897 003A                                        STR_3 7F1E  
                                      STR_4 7FA4                                        l9947 188E  
                                      l9883 1834                                        l9859 17C2  
                                      l9795 177A                                        l9779 16CC  
                                      l9787 1726                                        l8995 0426  
                                      l8987 03F8                                        l8979 03B0  
                                      l8899 0042                                        STR_5 7F91  
                                      STR_6 7FB6                                        l9949 18AC  
                                      l9797 1782                                        l9789 173E  
                                      l8997 043A                                        l8989 0412  
                                      STR_7 7FD2                                        STR_8 7FC7  
                                      l9991 18DC                                        l9879 180C  
                                      l9799 179E                                        l8999 0456  
                                      STR_9 7FDC                                        l9993 1900  
                                      l9997 1908                                        l9999 1942  
                                      u8000 3DA6                                        u8001 3DA2  
                                      u8010 3DC8                                        u8011 3DC4  
                                      u8020 3DF0                                        u8100 114A  
                                      _RCIF 007CF5                                        u8021 3DEC  
                                      u8101 1146                                        u8030 3E22  
                                      u8110 118C                                        u8031 3E1E  
                                      u8111 1188                                        u9000 33C0  
                                      u8200 12BE                                        u8120 11A2  
                                      u8040 51E2                                        u9001 33BC  
                                      u8201 12BA                                        u8121 119E  
                                      u8041 51DE                                        u9010 33DE  
                                      u8210 12DC                                        u8130 11B4  
                                      u8050 5334                                        u9011 33DA  
                                      u8211 12D8                                        u8131 11B0  
                                      u8051 5330                                        u9020 33EE  
                                      u8300 142C                                        u8220 12FC  
                                      u8140 11C4                                        u9100 43E8  
                                      u8060 5294                                        u9021 33EA  
                                      u8301 1428                                        u8221 12F8  
                                      u8141 11C0                                        u9101 43E4  
                                      u8061 528E                                        u9030 33FC  
                                      u8310 143C                                        u8230 130A  
                                      u8150 1200                                        u9110 443E  
                                      u8070 5296                                        u9031 33F8  
                                      u8311 1438                                        u8231 1306  
                                      u8151 11FC                                        u9111 443A  
                                      u9040 3436                                        u8400 1510  
                                      u8320 1468                                        u8240 131A  
                                      u8160 120E                                        u8080 1128  
                                      u9120 444E                                        u9200 413C  
                                      u9041 3432                                        u8401 150C  
                                      u8321 1464                                        u8241 1316  
                                      u8161 120A                                        u8081 1124  
                                      u9121 444A                                        u9050 3444  
                                      u8410 154A                                        u8330 1478  
                                      u8250 134C                                        u8170 127C  
                                      u8090 113A                                        u9130 51FE  
                                      u9210 4E7C                                        u9051 3440  
                                      u8411 1546                                        u8331 1474  
                                      u8251 1348                                        u8171 1278  
                                      u8091 1136                                        u9131 51FA  
                                      u8500 2684                                        u9060 3168  
                                      u8420 155C                                        u8340 1494  
                                      u8260 135A                                        u8180 1294  
                                      u9140 4090                                        u9300 2FDA  
                                      u9220 4E8E                                        u8501 2680  
                                      u9061 3164                                        u8421 1558  
                                      u8341 1490                                        u8261 1356  
                                      u8181 128E                                        u9301 2FD6  
                                      u9221 4E8A                                        u8510 2696  
                                      u8430 156C                                        u8350 14A4  
                                      u8270 1378                                        u8190 1296  
                                      u9150 40AE                                        u9310 2FFE  
                                      u9230 4DA6                                        u8511 2692  
                                      u8431 1568                                        u8351 14A0  
                                      u8271 1374                                        u9151 40AA  
                                      u9231 4DA0                                        u8600 2840  
                                      u8520 26A6                                        u8440 158C  
                                      u8360 14B6                                        u8280 13B0  
                                      u9160 40D6                                        u9320 301A  
                                      u9240 4DA8                                        u8601 283C  
                                      u8521 26A2                                        u8441 1588  
                                      u8361 14B2                                        u8281 13AC  
                                      u9401 3656                                        u9161 40D2  
                                      u9145 4086                                        u9321 3016  
                                      u9217 4E72                                        u8610 2860  
                                      u8530 26E6                                        u8450 159E  
                                      u8370 14CC                                        u8290 13F6  
                                      u9410 367A                                        u9090 43C6  
                                      u9170 4100                                        u9330 306E  
                                      u9250 4DBE                                        u8611 285C  
                                      u8531 26E2                                        u9075 3202  
                                      u8451 159A                                        u8371 14C8  
                                      u8291 13F2                                        u9411 3676  
                                      u9091 43C2                                        u9171 40FC  
                                      u9315 2FF4                                        u9251 4DBA  
                                      u8620 2872                                        u8540 2726  
                                      u8700 1A22                                        u9076 320C  
                                      u8460 15BA                                        u8380 14E2  
                                      u9420 36A4                                        u9500 3B94  
                                      u9340 308A                                        u9260 2F1C  
                                      u8621 286E                                        u8541 2722  
                                      u8701 1A1E                                        u9085 3246  
                                      u9077 321C                                        u8461 15B6  
                                      u8381 14DE                                        u9421 36A0  
                                      u9501 3B90                                        u9341 3086  
                                      u8630 28A0                                        u8550 279C  
                                      u8470 261E                                        u8710 1A34  
                                      u9086 3250                                        u8390 14F6  
                                      u9430 36E4                                        u9510 448E  
                                      u9190 413A                                        u9350 30C6  
                                      u9270 2F4A                                        u8631 289C  
                                      u8551 2798                                        u8471 261A  
                                      u8711 1A30                                        u9087 3260  
                                      u8391 14F2                                        u9431 36E0  
                                      u9511 448A                                        u9191 4134  
                                      u9351 30C2                                        u9335 3064  
                                      u9271 2F46                                        u8640 28B6  
                                      u8560 27BE                                        u8480 2630  
                                      u8800 1CE0                                        u8720 1A44  
                                      u9360 52CC                                        u9440 372E  
                                      u7920 4236                                        u9520 44A8  
                                      u9600 4666                                        u9280 2F6C  
                                      u8641 28B2                                        u8561 27BA  
                                      u8481 262C                                        u8801 1CDC  
                                      u8721 1A40                                        u9361 52C6  
                                      u9441 372A                                        u7921 4232  
                                      u9521 44A4                                        u9601 4662  
                                      u9185 4112                                        u9281 2F68  
                                      u9265 2F12                                        u8650 28CA  
                                      u8570 27E8                                        u8490 2640  
                                      u8810 1CF2                                        u8730 1A84  
                                      u9370 52CE                                        u9450 3A84  
                                      u7930 4248                                        u9530 44CE  
                                      u9610 467C                                        u8651 28C6  
                                      u8571 27E4                                        u8491 263C  
                                      u8811 1CEE                                        u8731 1A80  
                                      u9451 3A80                                        u7931 4244  
                                      u9531 44CA                                        u9611 4678  
                                      u9700 4046                                        u8660 28E4  
                                      u8580 280C                                        u8820 1D20  
                                      u8740 1A96                                        u8900 3E90  
                                      u9380 35FA                                        u9460 3AB6  
                                      u7940 4270                                        u9540 44EC  
                                      u9620 46A0                                        u9701 4042  
                                      u8661 28E0                                        u8581 2808  
                                      u8821 1D1C                                        u8741 1A92  
                                      u9381 35F6                                        u9461 3AB2  
                                      u7941 426C                                        u9541 44E8  
                                      u9621 469C                                        u8670 292C  
                                      u8590 2822                                        u8830 1D36  
                                      u8750 1AA6                                        u8910 3EBE  
                                      u9710 52EA                                        u9390 362C  
                                      u9470 3AF4                                        u7950 42A6  
                                      u9550 4508                                        u9630 478E  
                                      u8671 2928                                        u8591 281E  
                                      u8831 1D32                                        u8751 1AA2  
                                      u8911 3EBA                                        u9711 52E6  
                                      u9391 3628                                        u9471 3AF0  
                                      u7951 42A2                                        u9551 4504  
                                      u9631 478A                                        u9295 2F80  
                                      u8680 295C                                        u8840 1D4A  
                                      u8760 1ADC                                        u8920 3ED2  
                                      u7960 4CC8                                        u9720 4FA6  
                                      u9480 3B1E                                        u9800 2A6E  
                                      u9560 452E                                        u9640 47CC  
                                      u9296 2F8A                                        u8681 2958  
                                      u8841 1D46                                        u8761 1AD8  
                                      u8921 3ECE                                        u8905 3E86  
                                      u7961 4CC4                                        u9721 4FA2  
                                      u9481 3B1A                                        u9801 2A6A  
                                      u9561 452A                                        u9641 47C8  
                                      u9297 2F9A                                        u8690 298A  
                                      u8850 1D64                                        u8770 1AEC  
                                      u8930 3EFA                                        u7970 4D02  
                                      u9730 4FD4                                        u9490 3B4C  
                                      u9810 2B96                                        u9570 4614  
                                      u9650 4800                                        u8691 2986  
                                      u8851 1D60                                        u8771 1AE8  
                                      u8931 3EF6                                        u7971 4CFE  
                                      u9731 4FD0                                        u9491 3B48  
                                      u9811 2B92                                        u9571 4610  
                                      u9651 47FC                                        u7980 3D4A  
                                      u9660 3F7A                                        u8860 1DAC  
                                      u8780 1C66                                        u8940 3F1A  
                                      u9820 2BB4                                        u9740 29CE  
                                      u9580 462E                                        u9900 008A  
                                      u7981 3D46                                        u9661 3F76  
                                      u8861 1DA8                                        u8941 3F16  
                                      u9821 2BB0                                        u9741 29C8  
                                      u9581 462A                                        u9901 0086  
                                      u7990 3D6C                                        u9670 3FB8  
                                      u8870 1DDA                                        u8790 1CC0  
                                      u8950 3F2A                                        u9830 2BCE  
                                      u9750 29D0                                        u9590 4648  
                                      u9910 009A                                        u7991 3D68  
                                      u9671 3FB4                                        u8871 1DD6  
                                      u8791 1CBC                                        u8951 3F26  
                                      u9831 2BCA                                        u9591 4644  
                                      u9911 0096                                        u9680 3FD6  
                                      u8880 1E14                                        u8960 32B6  
                                      u9840 2BE8                                        u9760 29E6  
                                      u9920 00AE                                        u9681 3FD2  
                                      u8881 1E10                                        u8785 1C5C  
                                      u8961 32B2                                        u9841 2BE4  
                                      u9761 29E2                                        u9921 00AA  
                                      u9690 3FF6                                        u8890 3E5C  
                                      u8970 32C4                                        u9850 2BF8  
                                      u9770 2A16                                        u9930 00F6  
                                      u9691 3FF2                                        u8891 3E58  
                                      u8971 32C0                                        u9851 2BF4  
                                      u9771 2A12                                        u9931 00F2  
                                      u8980 3320                                        u9860 2C0A  
                                      u9780 2A32                                        u9940 0126  
                                      u8981 331C                                        u9861 2C06  
                                      u9781 2A2E                                        u9941 0120  
                                      u8990 3376                                        u9870 2C1A  
                                      u9790 2A60                                        u9950 0128  
                                      u8991 3372                                        u9871 2C16  
                                      u9791 2A5C                                        u9880 2C32  
                                      u9960 013E                                        u9881 2C2E  
                                      u9961 013A                                        u9970 01CA  
                                      u9890 003A                                        u9971 01C6  
                                      u9891 0036                                        u9980 01FA  
                                      u9981 01F4                                        u9990 01FC  
      comportamientoBasico@caminoEncontrado 0132                            ??_forzarParoAuto 0006  
                                      abs@a 0018                                        _dbuf 013A  
                                      _atoi 3458                                        _main 4950  
                                      _dtoa 299E                                        _prec 012C  
                                      _nout 0128                                        pad@i 001D  
                                      pad@p 001A                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        indf0 000FEF  
                                      fsr2h 000FDA                                        fsr0l 000FE9  
                                      indf1 000FE7                                        indf2 000FDF  
                                      fsr1l 000FE1                                        pad@w 001F  
                                      map@x 0020                                        fsr2l 000FD9  
                                      btemp 005A                               ___fpclassifyf 4050  
                  __end_of_decidirDireccion 1A08                                        prodh 000FF4  
                                      prodl 000FF3                                        start 000E  
                             __CFG_IESO$OFF 000000                             ___fldiv@new_exp 0065  
                              _tolower$1554 0012                               __CFG_MCLRE$ON 000000  
                             ?_leerSensores 0001                                ___param_bank 000000  
                                     ??_PID 0088                             ?_caminoCorrecto 0012  
                                     ??_abs 001A                                       ??_map 0034  
                                     ??_pad 001C                             ??_velocidadBaja 0054  
                             __CFG_PLLDIV$1 000000                              __CFG_CCP2MX$ON 000000  
                                     l10011 19C6                                       l10003 1956  
                                     l10013 19F8                                       l10101 4A58  
                                     l10015 1A00                                       l10007 198C  
                                     l10031 456C                                       l10103 4FE2  
                                     l10121 4BD0                                       l10009 19BE  
                                     l10041 45BA                                       l10033 458A  
                                     l10201 1ED0                                       l10113 5002  
                                     l10131 4C32                                       l10123 4BD2  
                                     l10051 45E6                                       l10043 45C4  
                                     l10035 458E                                       l10027 4540  
                                     l10203 1EE6                                       l10141 4C3C  
                                     l10133 4C34                                       l10125 4BD4  
                                     l10045 45C8                                       l10037 4598  
                                     l10061 484C                                       l10053 480A  
                                     l10221 1F54                                       l10205 1EF6  
                                     l10213 1F0E                                       l10109 4FE6  
                                     l10135 4C36                                       l10127 4C08  
                                     l10119 4BD0                                       l10039 45B6  
                                     l10047 45DA                                       l10071 4886  
                                     l10063 4856                                       l10303 218C  
                                     l10231 1FBC                                       l10223 1F64  
                                     l10215 1F12                                       l10207 1EFE  
                                     l10143 54C0                                       l10151 46D6  
                                     l10137 4C38                                       l10129 4C30  
                                     l10081 54B4                                       l10049 45DE  
                                     l10065 4874                                       l10073 4898  
                                     l10057 482A                                       l10321 2234  
                                     l10305 21A0                                       l10241 1FE2  
                                     l10233 1FC6                                       l10313 21BE  
                                     l10217 1F32                                       l10225 1F68  
                                     l10161 4752                                       l10153 46E6  
                                     l10145 46B2                                       l10139 4C3A  
                                     l10083 54B8                                       l10091 4A30  
                                     l10075 489C                                       l10067 4878  
                                     l10059 4848                                       l10323 224A  
                                     l10307 21B2                                       l10251 2050  
                                     l10235 1FCA                                       l10227 1FA4  
                                     l10219 1F44                                       l10315 2200  
                                     l10171 5086                                       l10147 46B6  
                                     l10093 4A38                                       l10085 49E6  
                                     l10077 48A4                                       l10069 4882  
                                     l10317 2216                                       l10309 21B6  
                                     l10261 208C                                       l10253 2058  
                                     l10245 1FEC                                       l10237 1FD4  
                                     l10229 1FB8                                       l10181 1E44  
                                     l10173 509C                                       l10149 46C6  
                                     l10157 46F6                                       l10501 496A  
                                     l10079 54B0                                       l10095 4A3C  
                                     l10087 49F4                                       l10319 2230  
                                     l10271 20C2                                       l10255 206E  
                                     l10247 202E                                       l10239 1FD8  
                                     l10191 1E9E                                       l10183 1E56  
                                     l10175 50B2                                       l10159 4734  
                                     l10511 4974                                       l10503 496C  
                                     l10097 4A4E                                       l10089 4A12  
                                     l10281 20F2                                       l10257 2082  
                                     l10249 2040                                       l10265 2092  
                                     l10193 1EA6                                       l10185 1E66  
                                     l10177 50C8                                       l10169 5080  
                                     l10521 4986                                       l10513 4976  
                                     l10505 496E                                       l10099 4A52  
                                     l10283 20F6                                       l10291 211E  
                                     l10267 20A2                                       l10259 2088  
                                     l10195 1EB2                                       l10187 1E78  
                                     l10179 1E32                                       l10531 49C6  
                                     l10523 498C                                       l10515 4978  
                                     l10507 4970                                       l10293 212E  
                                     l10285 210C                                       l10277 20D0  
                                     l10269 20B2                                       l10197 1EB6  
                                     l10189 1E8E                                       l10541 49D2  
                                     l10533 49CA                                       l10525 4990  
                                     l10517 497A                                       l10509 4972  
                                     l10295 2140                                       l10287 2110  
                                     l10279 20E0                                       l10199 1EC0  
                                     l10543 49DA                                       l10527 49A4  
                                     l10519 4980                                       l10297 2168  
                                     l10289 2116                                       l10529 49B6  
                                     l10481 4956                                       l10299 216E  
                                     l10539 49CE                                       l10491 4960  
                                     l10483 4958                                       l10493 4962  
                                     l10485 495A                                       l10495 4964  
                                     l10487 495C                                       l10479 4950  
                                     l10841 2000                                       l10497 4966  
                                     l10489 495E                                       l10851 328C  
                                     l10843 21D2                                       l10835 470E  
                                     l10499 4968                                       l10853 1708  
                                     l10845 4928                                       l10837 3514  
                                     l10855 1924                                       l10847 438E  
                                     l10839 5016                                       l10849 3C9A  
                             ___fltol@sign1 007A                             __end_of___aldiv 3E44  
                           __end_of___aodiv 3770                                       ?_atoi 000D  
                           __end_of___fladd 15CE                                       ?_main 0001  
                                     ?_dtoa 0021                             __end_of___aomod 3BD6  
                           __end_of___fldiv 299E                             __end_of___awdiv 4540  
                           __end_of___flneg 530C                                       STR_10 7FE5  
                                     STR_11 7F40                                       STR_12 7EE6  
                                     STR_13 7EA7                                       STR_22 7FFB  
                                     STR_14 7FEB                                       STR_15 7FF3  
                                     STR_24 7FFB                                       STR_18 7FEF  
                                     STR_19 7FF7                             __end_of___awmod 46B2  
                           __end_of___flmul 1E32                             __end_of___flsub 5114  
                           __end_of___fltol 3F4C                                       u10000 0212  
                                     u10001 020E                                       u10010 0296  
                                     u10011 0292                                       u10100 048C  
                                     u10020 032A                                       u10101 0488  
                                     u10021 0326                                       u10110 04B2  
                                     u10030 039C                                       u10111 04AE  
                                     u10031 0398                                       u11000 5368  
                                     u10200 0726                                       u10120 04C4  
                                     u10040 03C2                                       u11001 5364  
                                     u10201 0722                                       u10121 04C0  
                                     u10041 03BE                                       u10210 078E  
                                     u10130 04D2                                       u10050 03D6  
                                     u11010 4CA0                                       u10211 078A  
                                     u10131 04CE                                       u10051 03D2  
                                     u11011 4C9C                                       u11020 4DFA  
                                     u11100 3848                                       u10300 09D6  
                                     u10220 0832                                       u10140 04E8  
                                     u10060 03F8                                       u11101 3844  
                                     u10301 09D2                                       u10221 082E  
                                     u10141 04E4                                       u10061 03F4  
                                     u11030 4E22                                       u11110 3858  
                                     u10310 09E8                                       u10230 0846  
                                     u10150 04F6                                       u10070 0422  
                                     u11111 3854                                       u10311 09E4  
                                     u10231 0842                                       u10151 04F2  
                                     u10071 041E                                       u11040 4E32  
                                     u11200 1684                                       u11120 388C  
                                     u10400 0B8C                                       u10320 09F8  
                                     u10240 0858                                       u10160 0520  
                                     u10080 043A                                       u11041 4E2E  
                                     u11201 1680                                       u11121 3888  
                                     u10401 0B88                                       u10321 09F4  
                                     u10241 0854                                       u10161 051C  
                                     u10081 0436                                       u11210 16B4  
                                     u11130 38C0                                       u11050 4322  
                                     u10410 3490                                       u10330 0A32  
                                     u10250 0866                                       u10170 0668  
                                     u10090 0456                                       u11027 4DF0  
                                     u11211 16B0                                       u11131 38BC  
                                     u11051 431E                                       u10411 348C  
                                     u10331 0A2E                                       u10251 0862  
                                     u10171 0664                                       u10091 0452  
                                     u11300 185E                                       u11220 16E8  
                                     u11140 38EC                                       u11060 37B2  
                                     u10420 34C6                                       u10340 0A60  
                                     u10260 0882                                       u10180 06CE  
                                     u10500 41C6                                       u11037 4E18  
                                     u11301 185A                                       u11221 16E4  
                                     u11141 38E8                                       u11061 37AE  
                                     u10421 34C2                                       u10341 0A5C  
                                     u10261 087E                                       u10181 06CA  
                                     u10501 41C2                                       u11310 187A  
                                     u11230 173E                                       u11150 15EC  
                                     u11070 37EA                                       u10430 34E2  
                                     u10350 0AE4                                       u10270 0890  
                                     u10190 0716                                       u10510 41D8  
                                     u11311 1876                                       u11231 173A  
                                     u11151 15E8                                       u11071 37E6  
                                     u10431 34DE                                       u10351 0AE0  
                                     u10271 088C                                       u10191 0712  
                                     u10511 41D4                                       u11320 18AC  
                                     u11240 1756                                       u11160 1604  
                                     u11080 3822                                       u10600 24F0  
                                     u11400 45B6                                       u10440 3598  
                                     u10360 0AFE                                       u10280 08E8  
                                     u10520 4200                                       u11321 18A8  
                                     u11241 1752                                       u11161 1600  
                                     u11081 381E                                       u10601 24EC  
                                     u11401 45B2                                       u10441 3592  
                                     u10361 0AFA                                       u10281 08E4  
                                     u10521 41FC                                       u10530 5144  
                                     u11330 18C8                                       u11250 177A  
                                     u11170 161C                                       u11090 3838  
                                     u10610 25B0                                       u11410 4600  
                                     u10450 359A                                       u10370 0B16  
                                     u10290 09BA                                       u10531 5140  
                                     u11331 18C4                                       u11251 1776  
                                     u11171 1618                                       u11091 3834  
                                     u11411 45FC                                       u10371 0B12  
                                     u10291 09B6                                       u11340 1952  
                                     u11260 179E                                       u11180 1638  
                                     u10620 25CC                                       u10540 2290  
                                     u11420 4826                                       u11500 1E66  
                                     u10460 35B0                                       u10380 0B74  
                                     u10700 0DB4                             ___awdiv@divisor 0008  
                                     u11341 194E                                       u11261 179A  
                                     u11181 1634                                       u10621 25C8  
                                     u11421 4822                                       u11501 1E62  
                                     u10461 35AC                                       u10381 0B6E  
                                     u10701 0DB0                                       u11350 1988  
                                     u11270 17DC                                       u11190 1658  
                                     u10550 22BA                                       u11430 4848  
                                     u11510 1E78                                       u10470 35C2  
                                     u10390 0B76                                       u10710 0E0A  
                                     u10630 0BFC                                       u11351 1984  
                                     u11271 17D8                                       u11191 1654  
                                     u10615 25A6                                       u10551 22B6  
                                     u11431 4844                                       u11511 1E74  
                                     u10471 35BE                                       u10711 0E06  
                                     u10631 0BF8                                       u11360 19BE  
                                     u11280 17F8                                       u10800 4B22  
                                     u10560 22EE                                       u11440 4874  
                                     u11600 20A2                                       u11520 1E8E  
                                     u10480 4178                                       u10720 0E2E  
                                     u10640 0C44                                       _T1CON 000FCD  
                                     u11361 19BA                                       u11281 17F4  
                                     u10801 4B1E                                       u10545 2286  
                                     u11441 4870                                       u11601 209E  
                                     u11521 1E8A                                       u10481 4174  
                                     u10721 0E2A                                       u10641 0C40  
                                     u11370 19F8                                       u11290 1828  
                                     u10810 4B3E                                       u10570 230A  
                                     u11450 48B2                                       u11610 20B2  
                                     u11530 1ED0                                       u10490 41AA  
                                     u10730 0EC0                                       u10650 0C7E  
                                     u11371 19F4                                       u11291 1824  
                                     u10811 4B3A                                       u10571 2306  
                                     u11451 48AE                                       u11611 20AE  
                                     u11531 1ECC                                       u10491 41A6  
                                     u10731 0EBC                                       u10651 0C7A  
                                     u10900 3C82                                       u10820 3C04  
                                     u10580 234C                                       u11460 4A12  
                                     u11380 4568                                       u11620 20C2  
                                     u11540 1EE6                                       u10740 0F6E  
                                     u10660 0D28                                       u10901 3C7E  
                                     u10821 3C00                                       u10581 2348  
                                     u10565 22E4                                       u11461 4A0E  
                                     u11381 4564                                       u11621 20BE  
                                     u11541 1EE2                                       u10741 0F6A  
                                     u10661 0D22                                       u10910 3CC8  
                                     u10830 3C14                                       u10590 2452  
                                     u11470 4A30                                       u11390 458A  
                                     u11630 20E0                                       u11550 1F32  
                                     u10750 0FD6                                       u10670 0D2A  
                                     u10911 3CC4                                       u10831 3C10  
                                     u10591 244E                                       u11471 4A2C  
                                     u11391 4586                                       u11631 20DC  
                                     u11551 1F2E                                       u10751 0FD0  
                                     u10920 54AE                                       u10840 3C22  
                                     u11480 4A6E                                       u11640 20F2  
                                     u11560 1F44                                       u10760 0FD8  
                                     u10680 0D40                                       u10921 54AA  
                                     u10841 3C1E                                       u11481 4A6A  
                                     u11641 20EE                                       u11561 1F40  
                                     u10681 0D3C                                       u10930 4D74  
                                     u10850 3C34                                       u11650 212E  
                                     u11570 1F54                                       u11490 1E44  
                                     u10770 0FEE                                       u10690 0D72  
                                     u11810 49B6                                       u10931 4D70  
                                     u10851 3C30                                       u11651 212A  
                                     u11571 1F50                                       u11491 1E40  
                                     u10771 0FEA                                       u10691 0D6E  
                                     u11811 49B2                                       u10940 506E  
                                     u10860 3C44                                       u11660 2140  
                                     u11580 2040                                       u10780 108A  
                                     u11820 49C6                                       u10941 506A  
                                     u10861 3C40                                       u11661 213C  
                                     u11581 203C                                       u10781 1086  
                                     u11821 49C2                                       u10790 4B04  
                                     u10870 3C52                                       u10950 2DE6  
                                     u11670 21A0                                       u11590 2050  
                                     u10791 4B00                                       u10871 3C4E  
                                     u10951 2DE2                                       u11671 219C  
                                     u11591 204C                                       u10880 3C64  
                                     u10960 2E12                                       u11680 21B2  
                                     _LATB4 007C54                                       u10881 3C60  
                                     u10961 2E0E                                       u11681 21AE  
                                     _LATB5 007C55                                       u10890 3C74  
                                     u10970 2E5A                                       _LATD2 007C62  
                                     _LATB6 007C56                                       u10891 3C70  
                                     u11907 3BEC                                       u10971 2E56  
                                     _LATD3 007C63                                       _LATB7 007C57  
                                     u10980 2E82                                       u11917 5438  
                                     u10981 2E7E                                       u11837 217A  
                                     u10990 5256                                       u11927 5416  
                                     u10991 5252                                       u11847 2222  
                                     u11937 5458                                       u11857 48C6  
                                     u11947 5118                                       u11867 48E6  
                                     u11877 4304                                       u11887 434A  
                                     u11897 53F4                             __end_of___lwdiv 4B5E  
                                     i2l322 4EE6                                       i2l314 4E96  
                                     i2l317 4EA4                                       i2l280 4F38  
                                     i2l278 4F30                                main@iniciado 01CF  
                           ___awdiv@counter 000A                                       _RCREG 000FAE  
                              vfpfcnvrt@fmt 00C3                  ??_recorrerCaminoEncontrado 0054  
                                     _TMR1H 000FCF                                       _TMR1L 000FCE  
                                     _SPBRG 000FAF            decidirDireccion@posicionInvCruce 0044  
                             __CFG_USBDIV$1 000000                                       _TXREG 000FAD  
                             __CFG_PWRT$OFF 000000                               __CFG_WRT0$OFF 000000  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                       ___lmul@multiplicand 000A                               __CFG_WRT3$OFF 000000  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                          _combinarArreglos 4D14                              __CFG_EBTR3$OFF 000000  
                 hayCruce@investigandoCruce 0042                               __CFG_WRTB$OFF 000000  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                            __CFG_EBTRB$OFF 000000                          __size_of_UART_init 0070  
                                     _flags 012E                                       _boton 0008  
                                     _fputc 4224                                       _fputs 51A0  
                           __end_of_isdigit 52D4                                       _pausa 01D0  
                                     _mover 48B4                                       _mouse 00FD  
                               ?_UART_write 0001                                       atoi@n 001A  
                                     pad@fp 0016                                       atoi@s 000D  
                                     _width 012A                                       _putch 54D8  
                                     _toint 7EA3                                       dtoa@d 0023  
                                     dtoa@i 0043                                       dtoa@n 003B  
                                     dtoa@p 0035                                       dtoa@s 0039  
                                     dtoa@w 0037                           ??_regresarAlCruce 0054  
                           __end_of_isspace 4FE0                             __end_of_isupper 529C  
                                     tablat 000FF5                             __end_of_pwmDuty 32A4  
                                     ttemp5 005B                                       ttemp6 005E  
                                     ttemp7 0062                                       status 000FD8  
                                     wtemp8 005B                             __end_of_sprintf 4F8E  
                            ?___fpclassifyf 0006                             __end_of_tolower 4DD6  
                           __end_of_strncmp 4224                              __CFG_ICPRT$OFF 000000  
                            ??_leerSensores 0050                             __initialization 4B5E  
                          ??_dameLecturaAdc 0008                                __end_of_atoi 35E8  
                              __end_of_main 49E6                                __end_of_dtoa 2C80  
                           ??_configurarAdc 0006                         dameDistancia@conteo 0026  
                    dameDistancia@distancia 0022            limpiarMovimientos@numMovimientos 0008  
                                    ??_atoi 000F                                      ??_main 0055  
                                    ??_dtoa 002B                 combinarArreglos@movimientos 0006  
       comportamientoBasico@caminosRecorrer 01BC                               __activetblptr 000002  
              caminoCorrecto@numMovimientos 0016                                      PID@dif 0096  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                                    ?_boton 0001                                      _CCP1M2 007DEA  
                                    _CCP1M3 007DEB                                      _CCP2M2 007DD2  
                                    _CCP2M3 007DD3                                      ?_fputc 0006  
                                    ?_fputs 000F                                      _ADRESH 000FC4  
                                    _ADRESL 000FC3                                      _CCPR1L 000FBE  
                                    _CCPR2L 000FBB                            ___awdiv@dividend 0006  
                                    ?_mover 0001                                      ?_putch 0001  
                                    _INT0IF 007F91                                      i2l7111 4E92  
                                    i2l7113 4EB2                                      i2l7117 4EC4  
                                    i2l7321 4F14                                      i2l7313 4EEA  
                                    i2l7323 4F16                                      i2l7315 4EF8  
                                    i2l7325 4F32                                      i2l7317 4EFE  
                                    i2l7327 4F36                                      i2l7319 4F10  
              __end_of_regresarPuntoPartida 48B4                                      _TMR1IF 007CF0  
                                    _TMR1ON 007E68                                      _TMR2ON 007E52  
                                    _TRISB0 007C98                                      _TRISB1 007C99  
                                    _TRISB2 007C9A                                      _TRISC1 007CA1  
                                    _TRISB3 007C9B                                      _TRISC2 007CA2  
                                    _TRISB4 007C9C                                      _TRISB5 007C9D  
                                    _TRISB6 007C9E                                      _TRISD3 007CAB  
                                    _TRISB7 007C9F                                      _TRISC6 007CA6  
                                    _TRISC7 007CA7                            __end_of___xxtofl 3458  
                          __end_of_hayCruce 38F6                              __CFG_XINST$OFF 000000  
                  __end_of_seLlegoAlDestino 5370          comportamientoBasico@numMovimientos 01C1  
                              vfprintf@cfmt 00E5                   dameDistancia@numeroSensor 0021  
                                    ___flge 3F4C                                      ___fleq 4760  
                                    ___lmul 4CAA                                   ??___aldiv 001A  
                                 ??___aodiv 0016                                   ??___fladd 003C  
                                 ??___aomod 0016                                      ___wmul 5370  
                         __end_of_UART_init 4C40                                   ??___fldiv 004C  
                                 ??___awdiv 000A                                   ??___flneg 000A  
        comportamientoBasico@espejearCarroY 0135                                   ??___awmod 000A  
                                 ??___flmul 0023                                   ??___flsub 004C  
                                 ??___fltol 0076                                      _efgtoa 0012  
                                 ??___lwdiv 000A                  moverCarrito@espejearCarroY 0054  
                                    _buffer 018A                         _forzarGiroIzquierda 5426  
                                    _floorf 2ED2                         __size_of_UART_write 0016  
                              ?_UART_printf 0007                                      clear_0 4B86  
                                    clear_1 4B98                                      clear_2 4BA4  
                          ___awdiv@quotient 000C                             ___awmod@divisor 0008  
                           ___awmod@counter 000A                                      pad@buf 0018  
                                    _roundf 2250                                      dtoa@fp 0021  
                                    _strcpy 4E34                 ??_visualizarPasosRealizados 01CB  
                                    _strlen 530C                   recorrerCaminoEncontrado@i 009E  
                         _oldSensorEnfrente 0118                                      fputc@c 0006  
                                    fputs@c 0013                                      fputs@i 0014  
                                    fputs@s 000F                                   ??_isdigit 0008  
                     _SENSOR_PRIORIDAD_BAJA 01D1                       _SENSOR_PRIORIDAD_ALTA 01D3  
                           ___fpclassifyf@e 000E                             ___fpclassifyf@u 0010  
                           ___fpclassifyf@x 0006                                __mediumconst 7EA2  
                                 ??_isspace 0008                     ?_forzarEspejeoIzquierda 0001  
                                    tblptrh 000FF7                                   ??_isupper 0008  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                    __size_of_forzarEspejeo 0040                                   ??_pwmDuty 007F  
                                    putch@c 0001                            __end_of_vfprintf 4CAA  
                          _posicionDestinoX 0137                            _posicionDestinoY 0136  
                                 ??_sprintf 0054                                   ??_tolower 000E  
           regresarPuntoPartida@movimientos 009A                                   ??_strncmp 000C  
                      ?_forzarGiroIzquierda 0001                           _forzarAvanceRecto 53E2  
                    __size_of_forzarReversa 0022                                  ___flge@ff1 0034  
                         _velocidadEstandar 53BC                                  ___flge@ff2 0038  
                           ??___fpclassifyf 000A                                ___xxtofl@arg 0017  
                              ___xxtofl@exp 0016                                ___xxtofl@val 000D  
                                ___fleq@ff1 0006                                  ___fleq@ff2 000A  
                                __accesstop 0060                     __end_of__initialization 4BC2  
                        ?_forzarAvanceRecto 0001                             __CFG_PBADEN$OFF 000000  
                                ___flneg@f1 0006                             __CFG_FOSC$XT_XT 000000  
                        ?_velocidadEstandar 0001     visualizarPasosRealizados@numMovimientos 01C9  
                __end_of_finalizarRecorrido 54C0                               ___rparam_used 000001  
             __size_of_forzarEspejeoDerecha 001A                                  ___fltol@f1 0072  
                       ??_forzarAvanceRecto 0006                      __size_of_dameDistancia 0162  
                            __pcstackCOMRAM 0001                         ??_velocidadEstandar 0054  
                              __pidataBANK1 54D4                             _sensorIzquierda 0055  
       combinarArreglos@numMovimientosFinal 000C                               __end_of_boton 4F3C  
                             __end_of_fputc 42EE                               __end_of_fputs 51E4  
                             __end_of_mover 4950                               __end_of_putch 54DA  
                             __end_of_toint 7EA7                           _forzarGiroDerecha 5446  
          __end_of_recorrerCaminoEncontrado 4A70                          ?_forzarGiroDerecha 0001  
            __end_of_forzarEspejeoIzquierda 5480   comportamientoBasico@numMovimientosTotales 01BF  
        regresarPuntoPartida@numMovimientos 009C   comportamientoBasico@movimientosRealizados 0200  
                      __end_of_leerSensores 3A72                          __size_of_configPwm 0050  
                 __end_of_forzarAvanceRecto 5404                                   PID@difAnt 0130  
                 __end_of_velocidadEstandar 53E2                                     ??_boton 0004  
                     ??_forzarGiroIzquierda 0006                                     ??_fputc 000A  
                                   ??_fputs 0013                         ??_forzarGiroDerecha 0006  
                                   ??_mover 0008                                     ??_putch 0006  
                                __pbssBANK0 00F9                                  __pbssBANK1 0100  
                                __pbssBANK2 0200               __size_of_comportamientoBasico 041E  
                 _visualizarPasosRealizados 46B2                            ??_caminoCorrecto 001B  
                         ?_decidirDireccion 0040                       PID@velocidadIzquierda 008E  
                                _efgtoa$921 008D                                  _efgtoa$930 0093  
                                _efgtoa$922 008F                                  _efgtoa$931 0095  
                                _efgtoa$932 0097                                  _efgtoa$926 0091  
                  __end_of_combinarArreglos 4D76                               _forzarEspejeo 5224  
                        ??_decidirDireccion 004C                                     ?___flge 0034  
                                   ?___fleq 0006                                     ?___lmul 0006  
                                   ?___wmul 0006                   __end_of_forzarGiroDerecha 5466  
                                   ?_efgtoa 007D                               _forzarReversa 5404  
                                   _CCP1CON 000FBD                                     _CCP2CON 000FBA  
                                   ?_floorf 0050               limpiarMovimientos@movimientos 0006  
                            ___lmul@product 000E      decidirDireccion@cambioOrientacionCarro 004A  
                                _antiRebote 4E90                        _regresarPuntoPartida 480A  
                                   ?_roundf 004C                                     ?_strcpy 0006  
                                   ?_strlen 0006                                     _T2CKPS0 007E50  
                                   _T2CKPS1 007E51                             _regresarAlCruce 4540  
                                   _PID$747 0090                                     _PID$749 0094  
                                   i2l10857 4ED8                                   ?___xxtofl 000D  
                __end_of_limpiarMovimientos 5080                               _dameDistancia 3BD6  
                        __size_of_vfpfcnvrt 0536                                   ?_hayCruce 0040  
                              ??_UART_write 0006                               ?_moverCarrito 0088  
                           __CFG_VREGEN$OFF 000000   comportamientoBasico@contCaminosRecorridos 01C5  
                                   __Hparam 0000                              ?_forzarEspejeo 0001  
                                   __Lparam 0000                           __end_of_configPwm 5030  
                                   ___aldiv 3D38                             __size_of___flge 0104  
                            ?_forzarReversa 0001                             __size_of___fleq 00AA  
                                   ___aodiv 35E8                                     ___fladd 110E  
                                   ___aomod 3A72                                     ___fldiv 2602  
                                   ___awdiv 447C                                     ___flneg 52D4  
                           __size_of___lmul 006A                                     ___awmod 4602  
                                   ___flmul 1A08                                     ___flsub 50CE  
                                   ___fltol 3E44                             __size_of___wmul 0026  
                                   ___lwdiv 4AEA                                   ?_vfprintf 00DF  
                           __size_of_efgtoa 0BC6         recorrerCaminoEncontrado@movimientos 009A  
                           __CFG_STVREN$OFF 000000                             __size_of_floorf 0216  
                                   __pcinit 4B5E                       ?_regresarPuntoPartida 009A  
                                   __ramtop 0800                          __end_of_UART_write 54B0  
                     __end_of_velocidadBaja 53BC                                     __ptext0 4950  
                                   __ptext1 46B2                                     __ptext2 4F3C  
                                   __ptext3 4C40                                     __ptext4 0BD8  
                                   __ptext5 414E                                     __ptext6 0012  
                                   __ptext7 4D76                                     __ptext8 5264  
                                   __ptext9 4E34                             __size_of_roundf 03B2  
                              __size_of_PID 0252                             __size_of_strcpy 005C  
                           __size_of_strlen 0036                        __size_of_UART_printf 005E  
                              __size_of_abs 0040                                __size_of_map 007A  
                              __size_of_pad 00C6                                     _isdigit 529C  
                                ??___xxtofl 0011                            ___awmod@dividend 0006  
                            ?_dameDistancia 001B                            ___aldiv@dividend 0012  
                                   _isspace 4F8E                                     _isupper 5264  
                                   efgtoa@c 0083                                     efgtoa@d 00A1  
                                   efgtoa@e 00B9                                     efgtoa@f 007F  
                                   efgtoa@g 00B5                                     efgtoa@h 00AB  
                                   efgtoa@i 00B3                                     efgtoa@l 00AF  
                                   efgtoa@m 009D                                     efgtoa@n 00BB  
                                   efgtoa@p 00A5                                     efgtoa@t 0099  
                                   efgtoa@u 00BD                                     efgtoa@w 00A8  
                __size_of_forzarAvanceRecto 0022                                  ??_hayCruce 0043  
                                   _pwmDuty 30E8                                     atoi@neg 0013  
                __size_of_velocidadEstandar 0026                                     _sprintf 4F3C  
                                   _tolower 4D76                                     _strncmp 414E  
                            __pintcode_body 4EE8                        end_of_initialization 4BC2  
                            ??_moverCarrito 008A                                     floorf@e 0077  
                                   floorf@m 0073                                     floorf@u 0079  
                                   floorf@x 0050            decidirDireccion@direccionElegida 004E  
                                   fputc@fp 0008                               __Lmediumconst 7EA2  
                                   int_func 4EE8                                     fputs@fp 0011  
         __size_of_recorrerCaminoEncontrado 008A                      _SENSOR_PRIORIDAD_MEDIA 01D2  
                 ?_recorrerCaminoEncontrado 009A                                   i2u1195_47 4F20  
                                 i2u1196_47 4EB8                           ?_seLlegoAlDestino 0001  
                         __end_of_vfpfcnvrt 110E                                  efgtoa@mode 00AA  
                                efgtoa@sign 00A3                                   _RCSTAbits 000FAB  
                          ___aldiv@quotient 001C                                     postdec1 000FE5  
                                   postdec2 000FDD                     __end_of_regresarAlCruce 4602  
                                   postinc0 000FEE                                     postinc1 000FE6  
                                   postinc2 000FDE                     __size_of_forzarParoAuto 000A  
                                   roundf@e 0064                                     roundf@u 006A  
                                   roundf@x 004C                                     roundf@y 006E  
                __size_of_forzarGiroDerecha 0020                          ??_seLlegoAlDestino 000B  
                                ??_vfprintf 0054                       __end_of_configurarAdc 54CA  
                                   strcpy@d 000E                                     strlen@a 0008  
                                   strcpy@s 000C                                     strlen@s 0006  
                               ?_antiRebote 0001                                   _PORTBbits 000F81  
                                 _UART_init 4BD0                       __size_of_leerSensores 017C  
                               ___fladd@grs 0043                      hayCruce@paredIzquierda 0046  
                               pwmDuty@duty 0084      recorrerCaminoEncontrado@numMovimientos 009C  
                             ___xxtofl@sign 0015                                   _TRISDbits 000F95  
                               ___fldiv@grs 0067                          _oldSensorIzquierda 011C  
                               ___fldiv@rem 0060        comportamientoBasico@posicionInvCruce 01C6  
                                map@out_max 0030                                  map@out_min 002C  
                               ___flmul@grs 0029                              _UART_init$1816 0028  
                                 _TXSTAbits 000FAC                             ??_forzarEspejeo 0054  
                           ??_forzarReversa 0006               regresarAlCruce@numMovimientos 009C  
                              _leerSensores 38F6          __size_of_visualizarPasosRealizados 00AE  
                            __end_of___flge 4050                              __end_of___fleq 480A  
                    ??_regresarPuntoPartida 0054                              __end_of___lmul 4D14  
                               vfpfcnvrt@ap 00C5                                 vfpfcnvrt@ct 00DB  
                               vfpfcnvrt@fp 00C1                                 vfpfcnvrt@ll 00CB  
                            __end_of___wmul 5396                       regresarPuntoPartida@i 009E  
                            __end_of_efgtoa 0BD8                          _finalizarRecorrido 54B0  
                            __end_of_floorf 30E8                                  ?_UART_init 0020  
                                floorf@F524 0104                __end_of_forzarEspejeoDerecha 549A  
                           ??_dameDistancia 001F       comportamientoBasico@investigandoCruce 01C7  
                            __end_of_roundf 2602                     __size_of_dameLecturaAdc 0046  
                            __end_of_strcpy 4E90                              __end_of_strlen 5342  
                       start_initialization 4B5E                         PID@velocidadDerecha 0092  
                               __end_of_PID 2ED2                         ?_finalizarRecorrido 0001  
                               __end_of_abs 5224                                 __end_of_map 4AEA  
                               __end_of_pad 447C                            regresarAlCruce@i 009E  
                       __size_of_antiRebote 0058                       __end_of___fpclassifyf 414E  
                       pwmDuty@cicloTrabajo 007C                        ??_finalizarRecorrido 0054  
                               vfprintf@fmt 00E1                                    ??___flge 003C  
                                  ??___fleq 000E                           ?_combinarArreglos 0006  
                                  ??___lmul 000E                                    ??___wmul 000A  
                          ?_regresarAlCruce 009A                            _oldSensorDerecha 0120  
                comportamientoBasico@mapear 0134                              _sensorEnfrente 0124  
                                  ??_efgtoa 0084                                 __pdataBANK1 01D0  
                        ??_combinarArreglos 000E                                    ??_floorf 006D  
                          __CFG_LPT1OSC$OFF 000000                __end_of_comportamientoBasico 2250  
         __end_of_visualizarPasosRealizados 4760                        __end_of_moverCarrito 43B6  
                                  ??_roundf 0050                                    ??_strcpy 000A  
                                  ??_strlen 0008                                   ___fladd@a 0038  
                                 ___fladd@b 0034                   __size_of_decidirDireccion 043A  
               __end_of_forzarGiroIzquierda 5446                                   ___fldiv@a 0048  
                                 ___fldiv@b 0044                                 __pbssBIGRAM 02C8  
                              _llegoDestino 0059                                   ___flmul@a 001F  
                                 ___flmul@b 001B                                 __pbssCOMRAM 0055  
                                 ___flsub@a 0048                                   ___flsub@b 0044  
          comportamientoBasico@caminoActual 01C4                               __pcstackBANK0 0060  
                             __pcstackBANK1 01C9                            ___aodiv@dividend 0006  
                         __size_of___xxtofl 01B4                     hayCruce@caminosRecorrer 0040  
                         __size_of_hayCruce 0186             decidirDireccion@caminosRecorrer 0040  
                        _limpiarMovimientos 5030                           UART_printf@cadena 0007  
                                  PID@error 0098                                   _atoi$1424 0015  
                                 _atoi$1425 0019                                   _atoi$1426 0017  
                 _DISTANCIA_PRIORIDAD_MEDIA 0110                   caminoCorrecto@caminoFinal 0014  
                          ___lwdiv@dividend 0006                                   __pintcode 0008  
                       ?_limpiarMovimientos 0006                               __pmediumconst 7EA2  
                            _forzarParoAuto 54CA                                    ?___aldiv 0012  
                                  ?___aodiv 0006                                    ?___fladd 0034  
                                  ?___aomod 0006                                    ?___fldiv 0044  
                                  ?___awdiv 0006                            ___aodiv@quotient 0018  
                                  ?___flneg 0006                                    ?___awmod 0006  
                                  ?___flmul 001B                                    ?___flsub 0044  
                                  ?___fltol 0072                                    ?___lwdiv 0006  
                                 _configPwm 4FE0                                 ??_UART_init 0024  
                         __size_of_vfprintf 006A                                    ?_isdigit 0006  
                                  ?_isspace 0006                                    ?_isupper 0006  
comportamientoBasico@cambioOrientacionCarro 01C3           caminoCorrecto@numMovimientosFinal 0018  
                                  ?_pwmDuty 007C                        ??_limpiarMovimientos 000A  
                          ___lwdiv@quotient 000B                              __size_of_boton 4F34  
                                  ?_sprintf 00E7                                    ?_tolower 000C  
                            __size_of_fputc 00CA                              __size_of_fputs 0044  
                                  _PID$1817 008A                                    ?_strncmp 0006  
                            __size_of_mover 009C       decidirDireccion@contCaminosRecorridos 0046  
                            __size_of_putch 0002                             ___aldiv@divisor 0016  
                         combinarArreglos@i 0010                             ___aldiv@counter 001A  
                     hayCruce@paredEnfrente 0044                              ___wmul@product 000A  
         decidirDireccion@investigandoCruce 0042                seLlegoAlDestino@llegoDestino 000B  
                      _forzarEspejeoDerecha 5480                      __end_of_forzarParoAuto 54D4  
                                  i2u754_40 4EA4                                    i2u754_41 4EA0  
                                  i2u755_40 4EB2                                    i2u755_41 4EAE  
                                  i2u776_40 4EF8                                    i2u776_41 4EF4  
                                  i2u777_40 4F10                                    i2u777_41 4F0C  
                          __CFG_WDTPS$32768 000000                    ??_forzarEspejeoIzquierda 0054  
                             ??_UART_printf 0009                                ??_antiRebote 0001  
                                 _vfpfcnvrt 0BD8                                  ?_configPwm 0001  
                                 map@in_max 0028                                   map@in_min 0024  
                   __size_of_caminoCorrecto 0046                                  _ADCON0bits 000FC2  
                         ___wmul@multiplier 0006                            configPwm@channel 0008  
                            _dameLecturaAdc 5114                              UART_write@dato 0006  
                 __size_of_seLlegoAlDestino 002E                                _isspace$1455 000C  
                                vfpfcnvrt@c 00DE                                  vfpfcnvrt@f 00D7  
                         ___lmul@multiplier 0006                                 _INTCON2bits 000FF1  
                                 copy_data0 4B72                        _comportamientoBasico 1E32  
                     ?_forzarEspejeoDerecha 0001                      __size_of_velocidadBaja 0026  
                        __end_of_antiRebote 4EE8                                  roundf@F525 0100  
                                  __Hrparam 0000                             ?_forzarParoAuto 0001  
                             UART_init@BAUD 0020                               _sensorDerecha 00F9  
                                vfprintf@ap 00E3                                    __Lrparam 0000  
                                vfprintf@fp 00DF                       __size_of_moverCarrito 00C8  
                            _posicionCarroX 0139                              _posicionCarroY 0138  
                          __size_of___aldiv 010C                            __size_of___aodiv 0188  
                          __size_of___fladd 04C0                            __size_of___aomod 0164  
                          __size_of___fldiv 039C                            __size_of___awdiv 00C4  
                          __size_of___flneg 0038                            __size_of___awmod 00B0  
                          __size_of___flmul 042A                            __size_of___flsub 0046  
                          __size_of___fltol 0108                                  ?_vfpfcnvrt 00C1  
                          __size_of___lwdiv 0074                      __end_of_dameLecturaAdc 515A  
                           ___aodiv@divisor 000E                             ___aodiv@counter 0016  
                        ___fpclassifyf@F463 0108                         hayCruce@contCaminos 0043  
               combinarArreglos@caminoFinal 0008                            _decidirDireccion 15CE  
                                sprintf@fmt 00E9                                    ___xxtofl 32A4  
                       __end_of_UART_printf 4E34                            __size_of_isdigit 0038  
                                  _dtoa$897 0033                             ___lwdiv@divisor 0008  
                                  _hayCruce 3770                            __size_of_isspace 0052  
                           ___lwdiv@counter 000A                                    __ptext10 2ED2  
                                  __ptext11 4050                                    __ptext20 54D8  
                                  __ptext12 4760                                    __ptext21 51E4  
                                  __ptext13 4602                                    __ptext30 4FE0  
                                  __ptext22 3A72                                    __ptext14 447C  
                                  __ptext31 1E32                                    __ptext23 35E8  
                                  __ptext15 299E                                    __ptext40 52D4  
                                  __ptext32 5396                                    __ptext24 3458  
                                  __ptext16 43B6                                    __ptext41 42EE  
                                  __ptext33 480A                                    __ptext25 4F8E  
                                  __ptext17 530C                                    __ptext50 5466  
                                  __ptext42 53E2                                    __ptext34 4540  
                                  __ptext26 529C                                    __ptext18 51A0  
                                  __ptext51 5426                                    __ptext43 38F6  
                                  __ptext35 49E6                                    __ptext27 5370  
                                  __ptext19 4224                                    __ptext60 2602  
                                  __ptext52 5480                                    __ptext44 3BD6  
                                  __ptext36 48B4                                    __ptext28 5080  
                                  __ptext61 5404                                    __ptext53 53BC  
                                  __ptext45 4AEA                                    __ptext37 2C80  
                                  __ptext29 54C0                                    __ptext70 4D14  
                                  __ptext62 54CA                                    __ptext54 30E8  
                                  __ptext46 110E                                    __ptext38 2250  
                                  __ptext71 4DD6                                    __ptext63 5446  
                                  __ptext55 4A70                                    __ptext47 3770  
                                  __ptext39 50CE                                    __ptext72 549A  
                                  __ptext64 15CE                                    __ptext56 4CAA  
                                  __ptext48 54B0                                    __ptext73 4BD0  
                                  __ptext65 5342                                    __ptext57 32A4  
                                  __ptext49 5224                                    __ptext74 3D38  
                                  __ptext66 5114                                    __ptext58 3E44  
                                  __ptext67 3F4C                                    __ptext59 1A08  
                                  __ptext76 4E90                                    __ptext68 515A  
                                  __ptext69 5030                            __size_of_isupper 0038  
                          __size_of_pwmDuty 01BC     __end_of_inicializarComportamientoBasico 50CE  
  __size_of_inicializarComportamientoBasico 004E           ??_inicializarComportamientoBasico 0054  
          ?_inicializarComportamientoBasico 0001             _inicializarComportamientoBasico 5080  
                          __size_of_sprintf 0052                            __size_of_tolower 0060  
                             antiRebote@pin 0003                    _recorrerCaminoEncontrado 49E6  
                                strcpy@dest 0006                            __size_of_strncmp 00D6  
            combinarArreglos@numMovimientos 000A                       ?_comportamientoBasico 0001  
        comportamientoBasico@cruceDetectado 0133                                _moverCarrito 42EE  
                    __size_of_configurarAdc 000A                               __size_of_atoi 0190  
                             __size_of_main 0096                               __size_of_dtoa 02E2  
                      hayCruce@paredDerecha 0045                       __end_of_forzarEspejeo 5264  
                                  efgtoa@fp 007D                                    efgtoa@ne 009F  
                                  efgtoa@pp 009B                                    efgtoa@ou 0089  
      comportamientoBasico@direccionElegida 00A2                       __end_of_forzarReversa 5426  
                                  int$flags 005A                     dameLecturaAdc@canalLeer 000A  
                                  _vfprintf 4C40             __size_of_forzarEspejeoIzquierda 001A  
                               ??_configPwm 0006                             ?_dameLecturaAdc 0006  
             __size_of_regresarPuntoPartida 00AA                            ___aomod@dividend 0006  
                     __CFG_CPUDIV$OSC1_PLL2 000000                               _velocidadBaja 5396  
              decidirDireccion@caminoActual 0048                                  _INTCONbits 000FF2  
                     __end_of_dameDistancia 3D38                   __size_of_combinarArreglos 0062  
                       limpiarMovimientos@i 000C                                    isdigit@c 0006  
                                  intlevel2 0000                                   sprintf@ap 00F1  
                caminoCorrecto@caminoActual 001A                      ??_forzarEspejeoDerecha 0054  
                                  isspace@c 0006                                   strcpy@src 0008  
                                  isupper@c 0006                                   strncmp@_l 0006  
                                 strncmp@_r 0008                 __size_of_finalizarRecorrido 0010  
                               efgtoa@nmode 00A7                             ___aomod@divisor 000E  
                               ??_vfpfcnvrt 00C7                             ___aomod@counter 0016  
                             _vfpfcnvrt$951 00D5                               _vfpfcnvrt$946 00D3  
                               _UART_printf 4DD6                               _configurarAdc 54C0  
                            _caminoCorrecto 515A                              ?_velocidadBaja 0001  
                ?_visualizarPasosRealizados 01C9                              pwmDuty@channel 007E  
                                  sprintf@f 00F3                                    tolower@c 000C  
                                  sprintf@s 00E7                      __size_of___fpclassifyf 00FE  
                  __size_of_regresarAlCruce 00C2                            _seLlegoAlDestino 5342  
                                  strncmp@l 000D                                    strncmp@n 000A  
                                  strncmp@r 000F          comportamientoBasico@carroEspejeado 01C8  
                              ___aldiv@sign 001B                  moverCarrito@carroEspejeado 0088  
                             ___fladd@signs 0040                      ??_comportamientoBasico 00A0  
                                _UART_write 549A                      _forzarEspejeoIzquierda 5466  
              __size_of_forzarGiroIzquierda 0020                                ___aodiv@sign 0017  
                              ___fladd@aexp 0041                                ___fladd@bexp 0042  
                regresarAlCruce@movimientos 009A                                ___aomod@sign 0017  
                 caminoCorrecto@movimientos 0012                                 _roundf$1818 0066  
                               _roundf$1819 0060  
