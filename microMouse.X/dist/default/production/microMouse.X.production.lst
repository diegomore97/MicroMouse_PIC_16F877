

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Sep 20 13:12:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    95                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    98                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    99                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   100  0000                     
   101                           ; Version 2.10
   102                           ; Generated 31/07/2019 GMT
   103                           ; 
   104                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F4550 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     
   136                           	psect	idataBANK1
   137  0057FC                     __pidataBANK1:
   138                           	opt callstack 0
   139                           
   140                           ;initializer for _pausa
   141  0057FC  01                 	db	1
   142                           
   143                           ;initializer for _SENSOR_PRIORIDAD_BAJA
   144  0057FD  03                 	db	3
   145                           
   146                           ;initializer for _SENSOR_PRIORIDAD_MEDIA
   147  0057FE  02                 	db	2
   148                           
   149                           ;initializer for _SENSOR_PRIORIDAD_ALTA
   150  0057FF  01                 	db	1
   151                           
   152                           	psect	mediumconst
   153  007DC8                     __pmediumconst:
   154                           	opt callstack 0
   155  007DC8  00                 	db	0
   156  007DC9  0000               	dw	0
   157  007DCB  4B00               	dw	19200
   158  007DCD                     __end_of_toint:
   159                           	opt callstack 0
   160  0000                     _T1CON	set	4045
   161  0000                     _TRISDbits	set	3989
   162  0000                     _INTCON2bits	set	4081
   163  0000                     _INTCONbits	set	4082
   164  0000                     _ADRESL	set	4035
   165  0000                     _ADRESH	set	4036
   166  0000                     _ADCON0bits	set	4034
   167  0000                     _ADCON2	set	4032
   168  0000                     _ADCON1	set	4033
   169  0000                     _TXREG	set	4013
   170  0000                     _RCREG	set	4014
   171  0000                     _RCSTAbits	set	4011
   172  0000                     _TXSTAbits	set	4012
   173  0000                     _SPBRG	set	4015
   174  0000                     _PORTBbits	set	3969
   175  0000                     _TMR1L	set	4046
   176  0000                     _TMR1H	set	4047
   177  0000                     _PR2	set	4043
   178  0000                     _CCP2CON	set	4026
   179  0000                     _CCPR2L	set	4027
   180  0000                     _CCP1CON	set	4029
   181  0000                     _CCPR1L	set	4030
   182  0000                     _TRISB0	set	31896
   183  0000                     _TRISB7	set	31903
   184  0000                     _TRISB6	set	31902
   185  0000                     _TRISB5	set	31901
   186  0000                     _TRISB4	set	31900
   187  0000                     _TRISB3	set	31899
   188  0000                     _TRISB2	set	31898
   189  0000                     _TRISB1	set	31897
   190  0000                     _TRISD3	set	31915
   191  0000                     _LATB7	set	31831
   192  0000                     _LATB6	set	31830
   193  0000                     _LATB5	set	31829
   194  0000                     _LATB4	set	31828
   195  0000                     _LATD2	set	31842
   196  0000                     _INT0IF	set	32657
   197  0000                     _RCIF	set	31989
   198  0000                     _TRISC7	set	31911
   199  0000                     _TRISC6	set	31910
   200  0000                     _TMR1IF	set	31984
   201  0000                     _TMR1ON	set	32360
   202  0000                     _LATD3	set	31843
   203  0000                     _TMR2ON	set	32338
   204  0000                     _CCP2M2	set	32210
   205  0000                     _CCP2M3	set	32211
   206  0000                     _TRISC1	set	31905
   207  0000                     _CCP1M2	set	32234
   208  0000                     _CCP1M3	set	32235
   209  0000                     _TRISC2	set	31906
   210  0000                     _T2CKPS1	set	32337
   211  0000                     _T2CKPS0	set	32336
   212  007DCD                     STR_13:
   213  007DCD  0A                 	db	10
   214  007DCE  0A                 	db	10
   215  007DCF  4F                 	db	79	;'O'
   216  007DD0  56                 	db	86	;'V'
   217  007DD1  45                 	db	69	;'E'
   218  007DD2  52                 	db	82	;'R'
   219  007DD3  46                 	db	70	;'F'
   220  007DD4  4C                 	db	76	;'L'
   221  007DD5  4F                 	db	79	;'O'
   222  007DD6  57                 	db	87	;'W'
   223  007DD7  20                 	db	32
   224  007DD8  65                 	db	101	;'e'
   225  007DD9  6E                 	db	110	;'n'
   226  007DDA  20                 	db	32
   227  007DDB  65                 	db	101	;'e'
   228  007DDC  6C                 	db	108	;'l'
   229  007DDD  20                 	db	32
   230  007DDE  6D                 	db	109	;'m'
   231  007DDF  61                 	db	97	;'a'
   232  007DE0  70                 	db	112	;'p'
   233  007DE1  65                 	db	101	;'e'
   234  007DE2  6F                 	db	111	;'o'
   235  007DE3  20                 	db	32
   236  007DE4  64                 	db	100	;'d'
   237  007DE5  65                 	db	101	;'e'
   238  007DE6  20                 	db	32
   239  007DE7  70                 	db	112	;'p'
   240  007DE8  61                 	db	97	;'a'
   241  007DE9  73                 	db	115	;'s'
   242  007DEA  6F                 	db	111	;'o'
   243  007DEB  73                 	db	115	;'s'
   244  007DEC  20                 	db	32
   245  007DED  52                 	db	82	;'R'
   246  007DEE  65                 	db	101	;'e'
   247  007DEF  61                 	db	97	;'a'
   248  007DF0  6C                 	db	108	;'l'
   249  007DF1  69                 	db	105	;'i'
   250  007DF2  7A                 	db	122	;'z'
   251  007DF3  61                 	db	97	;'a'
   252  007DF4  64                 	db	100	;'d'
   253  007DF5  6F                 	db	111	;'o'
   254  007DF6  73                 	db	115	;'s'
   255  007DF7  20                 	db	32
   256  007DF8  70                 	db	112	;'p'
   257  007DF9  61                 	db	97	;'a'
   258  007DFA  72                 	db	114	;'r'
   259  007DFB  61                 	db	97	;'a'
   260  007DFC  20                 	db	32
   261  007DFD  63                 	db	99	;'c'
   262  007DFE  61                 	db	97	;'a'
   263  007DFF  6D                 	db	109	;'m'
   264  007E00  69                 	db	105	;'i'
   265  007E01  6E                 	db	110	;'n'
   266  007E02  6F                 	db	111	;'o'
   267  007E03  20                 	db	32
   268  007E04  54                 	db	84	;'T'
   269  007E05  6F                 	db	111	;'o'
   270  007E06  74                 	db	116	;'t'
   271  007E07  61                 	db	97	;'a'
   272  007E08  6C                 	db	108	;'l'
   273  007E09  0A                 	db	10
   274  007E0A  0A                 	db	10
   275  007E0B  00                 	db	0
   276  007E0C                     STR_12:
   277  007E0C  0A                 	db	10
   278  007E0D  0A                 	db	10
   279  007E0E  4F                 	db	79	;'O'
   280  007E0F  56                 	db	86	;'V'
   281  007E10  45                 	db	69	;'E'
   282  007E11  52                 	db	82	;'R'
   283  007E12  46                 	db	70	;'F'
   284  007E13  4C                 	db	76	;'L'
   285  007E14  4F                 	db	79	;'O'
   286  007E15  57                 	db	87	;'W'
   287  007E16  20                 	db	32
   288  007E17  65                 	db	101	;'e'
   289  007E18  6E                 	db	110	;'n'
   290  007E19  20                 	db	32
   291  007E1A  65                 	db	101	;'e'
   292  007E1B  6C                 	db	108	;'l'
   293  007E1C  20                 	db	32
   294  007E1D  6D                 	db	109	;'m'
   295  007E1E  61                 	db	97	;'a'
   296  007E1F  70                 	db	112	;'p'
   297  007E20  65                 	db	101	;'e'
   298  007E21  6F                 	db	111	;'o'
   299  007E22  20                 	db	32
   300  007E23  64                 	db	100	;'d'
   301  007E24  65                 	db	101	;'e'
   302  007E25  20                 	db	32
   303  007E26  70                 	db	112	;'p'
   304  007E27  61                 	db	97	;'a'
   305  007E28  73                 	db	115	;'s'
   306  007E29  6F                 	db	111	;'o'
   307  007E2A  73                 	db	115	;'s'
   308  007E2B  20                 	db	32
   309  007E2C  52                 	db	82	;'R'
   310  007E2D  65                 	db	101	;'e'
   311  007E2E  61                 	db	97	;'a'
   312  007E2F  6C                 	db	108	;'l'
   313  007E30  69                 	db	105	;'i'
   314  007E31  7A                 	db	122	;'z'
   315  007E32  61                 	db	97	;'a'
   316  007E33  64                 	db	100	;'d'
   317  007E34  6F                 	db	111	;'o'
   318  007E35  73                 	db	115	;'s'
   319  007E36  20                 	db	32
   320  007E37  70                 	db	112	;'p'
   321  007E38  61                 	db	97	;'a'
   322  007E39  72                 	db	114	;'r'
   323  007E3A  61                 	db	97	;'a'
   324  007E3B  20                 	db	32
   325  007E3C  63                 	db	99	;'c'
   326  007E3D  72                 	db	114	;'r'
   327  007E3E  75                 	db	117	;'u'
   328  007E3F  63                 	db	99	;'c'
   329  007E40  65                 	db	101	;'e'
   330  007E41  0A                 	db	10
   331  007E42  0A                 	db	10
   332  007E43  00                 	db	0
   333  007E44  0D                 	db	13
   334  007E45  4C                 	db	76	;'L'
   335  007E46  65                 	db	101	;'e'
   336  007E47  63                 	db	99	;'c'
   337  007E48  74                 	db	116	;'t'
   338  007E49  75                 	db	117	;'u'
   339  007E4A  72                 	db	114	;'r'
   340  007E4B  61                 	db	97	;'a'
   341  007E4C  20                 	db	32
   342  007E4D  64                 	db	100	;'d'
   343  007E4E  65                 	db	101	;'e'
   344  007E4F  20                 	db	32
   345  007E50  73                 	db	115	;'s'
   346  007E51  65                 	db	101	;'e'
   347  007E52  6E                 	db	110	;'n'
   348  007E53  73                 	db	115	;'s'
   349  007E54  6F                 	db	111	;'o'
   350  007E55  72                 	db	114	;'r'
   351  007E56  20                 	db	32
   352  007E57  4F                 	db	79	;'O'
   353  007E58  70                 	db	112	;'p'
   354  007E59  74                 	db	116	;'t'
   355  007E5A  69                 	db	105	;'i'
   356  007E5B  63                 	db	99	;'c'
   357  007E5C  6F                 	db	111	;'o'
   358  007E5D  20                 	db	32
   359  007E5E  3D                 	db	61	;'='
   360  007E5F  20                 	db	32
   361  007E60  25                 	db	37
   362  007E61  64                 	db	100	;'d'
   363  007E62  0D                 	db	13
   364  007E63  0A                 	db	10
   365  007E64  0A                 	db	10
   366  007E65  00                 	db	0
   367  007E66                     STR_14:
   368  007E66  0D                 	db	13
   369  007E67  53                 	db	83	;'S'
   370  007E68  65                 	db	101	;'e'
   371  007E69  20                 	db	32
   372  007E6A  72                 	db	114	;'r'
   373  007E6B  65                 	db	101	;'e'
   374  007E6C  67                 	db	103	;'g'
   375  007E6D  72                 	db	114	;'r'
   376  007E6E  65                 	db	101	;'e'
   377  007E6F  73                 	db	115	;'s'
   378  007E70  6F                 	db	111	;'o'
   379  007E71  20                 	db	32
   380  007E72  61                 	db	97	;'a'
   381  007E73  6C                 	db	108	;'l'
   382  007E74  20                 	db	32
   383  007E75  70                 	db	112	;'p'
   384  007E76  75                 	db	117	;'u'
   385  007E77  6E                 	db	110	;'n'
   386  007E78  74                 	db	116	;'t'
   387  007E79  6F                 	db	111	;'o'
   388  007E7A  20                 	db	32
   389  007E7B  64                 	db	100	;'d'
   390  007E7C  65                 	db	101	;'e'
   391  007E7D  20                 	db	32
   392  007E7E  70                 	db	112	;'p'
   393  007E7F  61                 	db	97	;'a'
   394  007E80  72                 	db	114	;'r'
   395  007E81  74                 	db	116	;'t'
   396  007E82  69                 	db	105	;'i'
   397  007E83  64                 	db	100	;'d'
   398  007E84  61                 	db	97	;'a'
   399  007E85  0D                 	db	13
   400  007E86  0A                 	db	10
   401  007E87  00                 	db	0
   402  007E88                     STR_20:
   403  007E88  49                 	db	73	;'I'
   404  007E89  6E                 	db	110	;'n'
   405  007E8A  76                 	db	118	;'v'
   406  007E8B  65                 	db	101	;'e'
   407  007E8C  73                 	db	115	;'s'
   408  007E8D  74                 	db	116	;'t'
   409  007E8E  69                 	db	105	;'i'
   410  007E8F  67                 	db	103	;'g'
   411  007E90  61                 	db	97	;'a'
   412  007E91  6E                 	db	110	;'n'
   413  007E92  64                 	db	100	;'d'
   414  007E93  6F                 	db	111	;'o'
   415  007E94  20                 	db	32
   416  007E95  43                 	db	67	;'C'
   417  007E96  72                 	db	114	;'r'
   418  007E97  75                 	db	117	;'u'
   419  007E98  63                 	db	99	;'c'
   420  007E99  65                 	db	101	;'e'
   421  007E9A  3A                 	db	58	;':'
   422  007E9B  20                 	db	32
   423  007E9C  25                 	db	37
   424  007E9D  63                 	db	99	;'c'
   425  007E9E  20                 	db	32
   426  007E9F  7C                 	db	124
   427  007EA0  20                 	db	32
   428  007EA1  25                 	db	37
   429  007EA2  63                 	db	99	;'c'
   430  007EA3  20                 	db	32
   431  007EA4  7C                 	db	124
   432  007EA5  20                 	db	32
   433  007EA6  25                 	db	37
   434  007EA7  63                 	db	99	;'c'
   435  007EA8  0A                 	db	10
   436  007EA9  00                 	db	0
   437  007EAA                     STR_17:
   438  007EAA  0D                 	db	13
   439  007EAB  44                 	db	68	;'D'
   440  007EAC  69                 	db	105	;'i'
   441  007EAD  72                 	db	114	;'r'
   442  007EAE  65                 	db	101	;'e'
   443  007EAF  63                 	db	99	;'c'
   444  007EB0  63                 	db	99	;'c'
   445  007EB1  69                 	db	105	;'i'
   446  007EB2  6F                 	db	111	;'o'
   447  007EB3  6E                 	db	110	;'n'
   448  007EB4  20                 	db	32
   449  007EB5  45                 	db	69	;'E'
   450  007EB6  6C                 	db	108	;'l'
   451  007EB7  65                 	db	101	;'e'
   452  007EB8  67                 	db	103	;'g'
   453  007EB9  69                 	db	105	;'i'
   454  007EBA  64                 	db	100	;'d'
   455  007EBB  61                 	db	97	;'a'
   456  007EBC  3A                 	db	58	;':'
   457  007EBD  20                 	db	32
   458  007EBE  49                 	db	73	;'I'
   459  007EBF  5A                 	db	90	;'Z'
   460  007EC0  51                 	db	81	;'Q'
   461  007EC1  55                 	db	85	;'U'
   462  007EC2  49                 	db	73	;'I'
   463  007EC3  45                 	db	69	;'E'
   464  007EC4  52                 	db	82	;'R'
   465  007EC5  44                 	db	68	;'D'
   466  007EC6  41                 	db	65	;'A'
   467  007EC7  0A                 	db	10
   468  007EC8  0A                 	db	10
   469  007EC9  0D                 	db	13
   470  007ECA  00                 	db	0
   471  007ECB                     STR_11:
   472  007ECB  0D                 	db	13
   473  007ECC  4D                 	db	77	;'M'
   474  007ECD  6F                 	db	111	;'o'
   475  007ECE  76                 	db	118	;'v'
   476  007ECF  69                 	db	105	;'i'
   477  007ED0  6D                 	db	109	;'m'
   478  007ED1  69                 	db	105	;'i'
   479  007ED2  65                 	db	101	;'e'
   480  007ED3  6E                 	db	110	;'n'
   481  007ED4  74                 	db	116	;'t'
   482  007ED5  6F                 	db	111	;'o'
   483  007ED6  73                 	db	115	;'s'
   484  007ED7  20                 	db	32
   485  007ED8  52                 	db	82	;'R'
   486  007ED9  65                 	db	101	;'e'
   487  007EDA  61                 	db	97	;'a'
   488  007EDB  6C                 	db	108	;'l'
   489  007EDC  69                 	db	105	;'i'
   490  007EDD  7A                 	db	122	;'z'
   491  007EDE  61                 	db	97	;'a'
   492  007EDF  64                 	db	100	;'d'
   493  007EE0  6F                 	db	111	;'o'
   494  007EE1  73                 	db	115	;'s'
   495  007EE2  20                 	db	32
   496  007EE3  3D                 	db	61	;'='
   497  007EE4  20                 	db	32
   498  007EE5  25                 	db	37
   499  007EE6  64                 	db	100	;'d'
   500  007EE7  0D                 	db	13
   501  007EE8  0A                 	db	10
   502  007EE9  0A                 	db	10
   503  007EEA  00                 	db	0
   504  007EEB                     STR_16:
   505  007EEB  0D                 	db	13
   506  007EEC  44                 	db	68	;'D'
   507  007EED  69                 	db	105	;'i'
   508  007EEE  72                 	db	114	;'r'
   509  007EEF  65                 	db	101	;'e'
   510  007EF0  63                 	db	99	;'c'
   511  007EF1  63                 	db	99	;'c'
   512  007EF2  69                 	db	105	;'i'
   513  007EF3  6F                 	db	111	;'o'
   514  007EF4  6E                 	db	110	;'n'
   515  007EF5  20                 	db	32
   516  007EF6  45                 	db	69	;'E'
   517  007EF7  6C                 	db	108	;'l'
   518  007EF8  65                 	db	101	;'e'
   519  007EF9  67                 	db	103	;'g'
   520  007EFA  69                 	db	105	;'i'
   521  007EFB  64                 	db	100	;'d'
   522  007EFC  61                 	db	97	;'a'
   523  007EFD  3A                 	db	58	;':'
   524  007EFE  20                 	db	32
   525  007EFF  45                 	db	69	;'E'
   526  007F00  4E                 	db	78	;'N'
   527  007F01  46                 	db	70	;'F'
   528  007F02  52                 	db	82	;'R'
   529  007F03  45                 	db	69	;'E'
   530  007F04  4E                 	db	78	;'N'
   531  007F05  54                 	db	84	;'T'
   532  007F06  45                 	db	69	;'E'
   533  007F07  0A                 	db	10
   534  007F08  0A                 	db	10
   535  007F09  0D                 	db	13
   536  007F0A  00                 	db	0
   537  007F0B                     STR_19:
   538  007F0B  0D                 	db	13
   539  007F0C  44                 	db	68	;'D'
   540  007F0D  69                 	db	105	;'i'
   541  007F0E  72                 	db	114	;'r'
   542  007F0F  65                 	db	101	;'e'
   543  007F10  63                 	db	99	;'c'
   544  007F11  63                 	db	99	;'c'
   545  007F12  69                 	db	105	;'i'
   546  007F13  6F                 	db	111	;'o'
   547  007F14  6E                 	db	110	;'n'
   548  007F15  20                 	db	32
   549  007F16  45                 	db	69	;'E'
   550  007F17  6C                 	db	108	;'l'
   551  007F18  65                 	db	101	;'e'
   552  007F19  67                 	db	103	;'g'
   553  007F1A  69                 	db	105	;'i'
   554  007F1B  64                 	db	100	;'d'
   555  007F1C  61                 	db	97	;'a'
   556  007F1D  3A                 	db	58	;':'
   557  007F1E  20                 	db	32
   558  007F1F  43                 	db	67	;'C'
   559  007F20  41                 	db	65	;'A'
   560  007F21  4C                 	db	76	;'L'
   561  007F22  4C                 	db	76	;'L'
   562  007F23  45                 	db	69	;'E'
   563  007F24  4A                 	db	74	;'J'
   564  007F25  4F                 	db	79	;'O'
   565  007F26  4E                 	db	78	;'N'
   566  007F27  0A                 	db	10
   567  007F28  0A                 	db	10
   568  007F29  0D                 	db	13
   569  007F2A  00                 	db	0
   570  007F2B                     STR_18:
   571  007F2B  0D                 	db	13
   572  007F2C  44                 	db	68	;'D'
   573  007F2D  69                 	db	105	;'i'
   574  007F2E  72                 	db	114	;'r'
   575  007F2F  65                 	db	101	;'e'
   576  007F30  63                 	db	99	;'c'
   577  007F31  63                 	db	99	;'c'
   578  007F32  69                 	db	105	;'i'
   579  007F33  6F                 	db	111	;'o'
   580  007F34  6E                 	db	110	;'n'
   581  007F35  20                 	db	32
   582  007F36  45                 	db	69	;'E'
   583  007F37  6C                 	db	108	;'l'
   584  007F38  65                 	db	101	;'e'
   585  007F39  67                 	db	103	;'g'
   586  007F3A  69                 	db	105	;'i'
   587  007F3B  64                 	db	100	;'d'
   588  007F3C  61                 	db	97	;'a'
   589  007F3D  3A                 	db	58	;':'
   590  007F3E  20                 	db	32
   591  007F3F  44                 	db	68	;'D'
   592  007F40  45                 	db	69	;'E'
   593  007F41  52                 	db	82	;'R'
   594  007F42  45                 	db	69	;'E'
   595  007F43  43                 	db	67	;'C'
   596  007F44  48                 	db	72	;'H'
   597  007F45  41                 	db	65	;'A'
   598  007F46  0A                 	db	10
   599  007F47  0A                 	db	10
   600  007F48  0D                 	db	13
   601  007F49  00                 	db	0
   602  007F4A  0D                 	db	13
   603  007F4B  44                 	db	68	;'D'
   604  007F4C  65                 	db	101	;'e'
   605  007F4D  73                 	db	115	;'s'
   606  007F4E  74                 	db	116	;'t'
   607  007F4F  69                 	db	105	;'i'
   608  007F50  6E                 	db	110	;'n'
   609  007F51  6F                 	db	111	;'o'
   610  007F52  20                 	db	32
   611  007F53  6E                 	db	110	;'n'
   612  007F54  6F                 	db	111	;'o'
   613  007F55  20                 	db	32
   614  007F56  64                 	db	100	;'d'
   615  007F57  65                 	db	101	;'e'
   616  007F58  74                 	db	116	;'t'
   617  007F59  65                 	db	101	;'e'
   618  007F5A  63                 	db	99	;'c'
   619  007F5B  74                 	db	116	;'t'
   620  007F5C  61                 	db	97	;'a'
   621  007F5D  64                 	db	100	;'d'
   622  007F5E  6F                 	db	111	;'o'
   623  007F5F  20                 	db	32
   624  007F60  0D                 	db	13
   625  007F61  0A                 	db	10
   626  007F62  00                 	db	0
   627  007F63  0D                 	db	13
   628  007F64  53                 	db	83	;'S'
   629  007F65  65                 	db	101	;'e'
   630  007F66  20                 	db	32
   631  007F67  6C                 	db	108	;'l'
   632  007F68  6C                 	db	108	;'l'
   633  007F69  65                 	db	101	;'e'
   634  007F6A  67                 	db	103	;'g'
   635  007F6B  6F                 	db	111	;'o'
   636  007F6C  20                 	db	32
   637  007F6D  61                 	db	97	;'a'
   638  007F6E  6C                 	db	108	;'l'
   639  007F6F  20                 	db	32
   640  007F70  64                 	db	100	;'d'
   641  007F71  65                 	db	101	;'e'
   642  007F72  73                 	db	115	;'s'
   643  007F73  74                 	db	116	;'t'
   644  007F74  69                 	db	105	;'i'
   645  007F75  6E                 	db	110	;'n'
   646  007F76  6F                 	db	111	;'o'
   647  007F77  20                 	db	32
   648  007F78  0D                 	db	13
   649  007F79  0A                 	db	10
   650  007F7A  00                 	db	0
   651  007F7B                     STR_15:
   652  007F7B  0D                 	db	13
   653  007F7C  53                 	db	83	;'S'
   654  007F7D  65                 	db	101	;'e'
   655  007F7E  20                 	db	32
   656  007F7F  6C                 	db	108	;'l'
   657  007F80  6C                 	db	108	;'l'
   658  007F81  65                 	db	101	;'e'
   659  007F82  67                 	db	103	;'g'
   660  007F83  6F                 	db	111	;'o'
   661  007F84  20                 	db	32
   662  007F85  41                 	db	65	;'A'
   663  007F86  6C                 	db	108	;'l'
   664  007F87  20                 	db	32
   665  007F88  64                 	db	100	;'d'
   666  007F89  65                 	db	101	;'e'
   667  007F8A  73                 	db	115	;'s'
   668  007F8B  74                 	db	116	;'t'
   669  007F8C  69                 	db	105	;'i'
   670  007F8D  6E                 	db	110	;'n'
   671  007F8E  6F                 	db	111	;'o'
   672  007F8F  0D                 	db	13
   673  007F90  0A                 	db	10
   674  007F91  00                 	db	0
   675  007F92  0D                 	db	13
   676  007F93  49                 	db	73	;'I'
   677  007F94  7A                 	db	122	;'z'
   678  007F95  71                 	db	113	;'q'
   679  007F96  75                 	db	117	;'u'
   680  007F97  69                 	db	105	;'i'
   681  007F98  65                 	db	101	;'e'
   682  007F99  72                 	db	114	;'r'
   683  007F9A  64                 	db	100	;'d'
   684  007F9B  61                 	db	97	;'a'
   685  007F9C  3A                 	db	58	;':'
   686  007F9D  20                 	db	32
   687  007F9E  25                 	db	37
   688  007F9F  2E                 	db	46
   689  007FA0  32                 	db	50	;'2'
   690  007FA1  66                 	db	102	;'f'
   691  007FA2  0D                 	db	13
   692  007FA3  0A                 	db	10
   693  007FA4  00                 	db	0
   694  007FA5  0D                 	db	13
   695  007FA6  45                 	db	69	;'E'
   696  007FA7  6E                 	db	110	;'n'
   697  007FA8  66                 	db	102	;'f'
   698  007FA9  72                 	db	114	;'r'
   699  007FAA  65                 	db	101	;'e'
   700  007FAB  6E                 	db	110	;'n'
   701  007FAC  74                 	db	116	;'t'
   702  007FAD  65                 	db	101	;'e'
   703  007FAE  3A                 	db	58	;':'
   704  007FAF  20                 	db	32
   705  007FB0  25                 	db	37
   706  007FB1  2E                 	db	46
   707  007FB2  32                 	db	50	;'2'
   708  007FB3  66                 	db	102	;'f'
   709  007FB4  0D                 	db	13
   710  007FB5  0A                 	db	10
   711  007FB6  00                 	db	0
   712  007FB7  0D                 	db	13
   713  007FB8  44                 	db	68	;'D'
   714  007FB9  65                 	db	101	;'e'
   715  007FBA  72                 	db	114	;'r'
   716  007FBB  65                 	db	101	;'e'
   717  007FBC  63                 	db	99	;'c'
   718  007FBD  68                 	db	104	;'h'
   719  007FBE  61                 	db	97	;'a'
   720  007FBF  3A                 	db	58	;':'
   721  007FC0  20                 	db	32
   722  007FC1  25                 	db	37
   723  007FC2  2E                 	db	46
   724  007FC3  32                 	db	50	;'2'
   725  007FC4  66                 	db	102	;'f'
   726  007FC5  0D                 	db	13
   727  007FC6  0A                 	db	10
   728  007FC7  00                 	db	0
   729  007FC8                     STR_8:
   730  007FC8  49                 	db	73	;'I'
   731  007FC9  7A                 	db	122	;'z'
   732  007FCA  71                 	db	113	;'q'
   733  007FCB  75                 	db	117	;'u'
   734  007FCC  69                 	db	105	;'i'
   735  007FCD  65                 	db	101	;'e'
   736  007FCE  72                 	db	114	;'r'
   737  007FCF  64                 	db	100	;'d'
   738  007FD0  61                 	db	97	;'a'
   739  007FD1  0A                 	db	10
   740  007FD2  00                 	db	0
   741  007FD3                     STR_7:
   742  007FD3  45                 	db	69	;'E'
   743  007FD4  6E                 	db	110	;'n'
   744  007FD5  66                 	db	102	;'f'
   745  007FD6  72                 	db	114	;'r'
   746  007FD7  65                 	db	101	;'e'
   747  007FD8  6E                 	db	110	;'n'
   748  007FD9  74                 	db	116	;'t'
   749  007FDA  65                 	db	101	;'e'
   750  007FDB  0A                 	db	10
   751  007FDC  00                 	db	0
   752  007FDD                     STR_9:
   753  007FDD  44                 	db	68	;'D'
   754  007FDE  65                 	db	101	;'e'
   755  007FDF  72                 	db	114	;'r'
   756  007FE0  65                 	db	101	;'e'
   757  007FE1  63                 	db	99	;'c'
   758  007FE2  68                 	db	104	;'h'
   759  007FE3  61                 	db	97	;'a'
   760  007FE4  0A                 	db	10
   761  007FE5  00                 	db	0
   762  007FE6                     STR_10:
   763  007FE6  41                 	db	65	;'A'
   764  007FE7  6C                 	db	108	;'l'
   765  007FE8  74                 	db	116	;'t'
   766  007FE9  6F                 	db	111	;'o'
   767  007FEA  0A                 	db	10
   768  007FEB  00                 	db	0
   769  007FEC                     STR_21:
   770  007FEC  49                 	db	73	;'I'
   771  007FED  4E                 	db	78	;'N'
   772  007FEE  46                 	db	70	;'F'
   773  007FEF  00                 	db	0
   774  007FF0                     STR_25:
   775  007FF0  4E                 	db	78	;'N'
   776  007FF1  41                 	db	65	;'A'
   777  007FF2  4E                 	db	78	;'N'
   778  007FF3  00                 	db	0
   779  007FF4                     STR_22:
   780  007FF4  69                 	db	105	;'i'
   781  007FF5  6E                 	db	110	;'n'
   782  007FF6  66                 	db	102	;'f'
   783  007FF7  00                 	db	0
   784  007FF8                     STR_26:
   785  007FF8  6E                 	db	110	;'n'
   786  007FF9  61                 	db	97	;'a'
   787  007FFA  6E                 	db	110	;'n'
   788  007FFB  00                 	db	0
   789  007FFC                     STR_29:
   790  007FFC  6C                 	db	108	;'l'
   791  007FFD  66                 	db	102	;'f'
   792  007FFE  00                 	db	0
   793  0000                     
   794                           ; #config settings
   795  007FFF  00                 	db	0	; dummy byte at the end
   796  0000                     
   797                           	psect	cinit
   798  004F10                     __pcinit:
   799                           	opt callstack 0
   800  004F10                     start_initialization:
   801                           	opt callstack 0
   802  004F10                     __initialization:
   803                           	opt callstack 0
   804                           
   805                           ; Initialize objects allocated to BANK1 (4 bytes)
   806                           ; load TBLPTR registers with __pidataBANK1
   807  004F10  0EFC               	movlw	low __pidataBANK1
   808  004F12  6EF6               	movwf	tblptrl,c
   809  004F14  0E57               	movlw	high __pidataBANK1
   810  004F16  6EF7               	movwf	tblptrh,c
   811  004F18  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   812  004F1A  6EF8               	movwf	tblptru,c
   813  004F1C  EE01  F0E9         	lfsr	0,__pdataBANK1
   814  004F20  EE10 F004          	lfsr	1,4
   815  004F24                     copy_data0:
   816  004F24  0009               	tblrd		*+
   817  004F26  CFF5 FFEE          	movff	tablat,postinc0
   818  004F2A  50E5               	movf	postdec1,w,c
   819  004F2C  50E1               	movf	fsr1l,w,c
   820  004F2E  E1FA               	bnz	copy_data0
   821                           
   822                           ; Clear objects allocated to BIGRAM (1000 bytes)
   823  004F30  EE02  F0C8         	lfsr	0,__pbssBIGRAM
   824  004F34  EE13 F0E8          	lfsr	1,1000
   825  004F38                     clear_0:
   826  004F38  6AEE               	clrf	postinc0,c
   827  004F3A  50E5               	movf	postdec1,w,c
   828  004F3C  50E1               	movf	fsr1l,w,c
   829  004F3E  E1FC               	bnz	clear_0
   830  004F40  50E2               	movf	fsr1h,w,c
   831  004F42  E1FA               	bnz	clear_0
   832                           
   833                           ; Clear objects allocated to BANK2 (200 bytes)
   834  004F44  EE02  F000         	lfsr	0,__pbssBANK2
   835  004F48  0EC8               	movlw	200
   836  004F4A                     clear_1:
   837  004F4A  6AEE               	clrf	postinc0,c
   838  004F4C  06E8               	decf	wreg,f,c
   839  004F4E  E1FD               	bnz	clear_1
   840                           
   841                           ; Clear objects allocated to BANK1 (210 bytes)
   842  004F50  EE01  F000         	lfsr	0,__pbssBANK1
   843  004F54  0ED2               	movlw	210
   844  004F56                     clear_2:
   845  004F56  6AEE               	clrf	postinc0,c
   846  004F58  06E8               	decf	wreg,f,c
   847  004F5A  E1FD               	bnz	clear_2
   848                           
   849                           ; Clear objects allocated to BANK0 (1 bytes)
   850  004F5C  0100               	movlb	0
   851  004F5E  6BFF               	clrf	__pbssBANK0& (0+255),b
   852                           
   853                           ; Clear objects allocated to COMRAM (5 bytes)
   854  004F60  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   855  004F62  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   856  004F64  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   857  004F66  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   858  004F68  6A55               	clrf	__pbssCOMRAM& (0+255),c
   859  004F6A                     end_of_initialization:
   860                           	opt callstack 0
   861  004F6A                     __end_of__initialization:
   862                           	opt callstack 0
   863  004F6A  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   864  004F6C  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   865  004F6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   866  004F70  6EF8               	movwf	tblptru,c
   867  004F72  0100               	movlb	0
   868  004F74  EF9E  F025         	goto	_main	;jump to C main() function
   869                           
   870                           	psect	bssCOMRAM
   871  000055                     __pbssCOMRAM:
   872                           	opt callstack 0
   873  000055                     _flags:
   874                           	opt callstack 0
   875  000055                     	ds	2
   876  000057                     _mouse:
   877                           	opt callstack 0
   878  000057                     	ds	2
   879  000059                     comportamientoBasico@carroEspejeado:
   880                           	opt callstack 0
   881  000059                     	ds	1
   882                           
   883                           	psect	bssBANK0
   884  0000FF                     __pbssBANK0:
   885                           	opt callstack 0
   886  0000FF                     _llegoDestino:
   887                           	opt callstack 0
   888  0000FF                     	ds	1
   889                           
   890                           	psect	bssBANK1
   891  000100                     __pbssBANK1:
   892                           	opt callstack 0
   893  000100                     roundf@F525:
   894                           	opt callstack 0
   895  000100                     	ds	4
   896  000104                     floorf@F524:
   897                           	opt callstack 0
   898  000104                     	ds	4
   899  000108                     ___fpclassifyf@F463:
   900                           	opt callstack 0
   901  000108                     	ds	4
   902  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   903                           	opt callstack 0
   904  00010C                     	ds	4
   905  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   906                           	opt callstack 0
   907  000110                     	ds	4
   908  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   909                           	opt callstack 0
   910  000114                     	ds	4
   911  000118                     _oldSensorEnfrente:
   912                           	opt callstack 0
   913  000118                     	ds	4
   914  00011C                     _oldSensorIzquierda:
   915                           	opt callstack 0
   916  00011C                     	ds	4
   917  000120                     _oldSensorDerecha:
   918                           	opt callstack 0
   919  000120                     	ds	4
   920  000124                     _sensorEnfrente:
   921                           	opt callstack 0
   922  000124                     	ds	4
   923  000128                     _sensorIzquierda:
   924                           	opt callstack 0
   925  000128                     	ds	4
   926  00012C                     _sensorDerecha:
   927                           	opt callstack 0
   928  00012C                     	ds	4
   929  000130                     _nout:
   930                           	opt callstack 0
   931  000130                     	ds	2
   932  000132                     _width:
   933                           	opt callstack 0
   934  000132                     	ds	2
   935  000134                     _prec:
   936                           	opt callstack 0
   937  000134                     	ds	2
   938  000136                     PID@difAnt:
   939                           	opt callstack 0
   940  000136                     	ds	2
   941  000138                     comportamientoBasico@caminoEncontrado:
   942                           	opt callstack 0
   943  000138                     	ds	1
   944  000139                     comportamientoBasico@espejearCarroY:
   945                           	opt callstack 0
   946  000139                     	ds	1
   947  00013A                     _paredIzquierda:
   948                           	opt callstack 0
   949  00013A                     	ds	1
   950  00013B                     _paredDerecha:
   951                           	opt callstack 0
   952  00013B                     	ds	1
   953  00013C                     _paredEnfrente:
   954                           	opt callstack 0
   955  00013C                     	ds	1
   956  00013D                     _posicionDestinoY:
   957                           	opt callstack 0
   958  00013D                     	ds	1
   959  00013E                     _posicionDestinoX:
   960                           	opt callstack 0
   961  00013E                     	ds	1
   962  00013F                     _posicionCarroY:
   963                           	opt callstack 0
   964  00013F                     	ds	1
   965  000140                     _posicionCarroX:
   966                           	opt callstack 0
   967  000140                     	ds	1
   968  000141                     _dbuf:
   969                           	opt callstack 0
   970  000141                     	ds	80
   971  000191                     _buffer:
   972                           	opt callstack 0
   973  000191                     	ds	50
   974  0001C3                     comportamientoBasico@caminosRecorrer:
   975                           	opt callstack 0
   976  0001C3                     	ds	3
   977  0001C6                     comportamientoBasico@numMovimientosTotales:
   978                           	opt callstack 0
   979  0001C6                     	ds	2
   980  0001C8                     comportamientoBasico@numMovimientos:
   981                           	opt callstack 0
   982  0001C8                     	ds	2
   983  0001CA                     comportamientoBasico@avanceRectoLargo:
   984                           	opt callstack 0
   985  0001CA                     	ds	1
   986  0001CB                     comportamientoBasico@cambioOrientacionCarro:
   987                           	opt callstack 0
   988  0001CB                     	ds	1
   989  0001CC                     comportamientoBasico@caminoActual:
   990                           	opt callstack 0
   991  0001CC                     	ds	1
   992  0001CD                     comportamientoBasico@contCaminosRecorridos:
   993                           	opt callstack 0
   994  0001CD                     	ds	1
   995  0001CE                     comportamientoBasico@posicionInvCruce:
   996                           	opt callstack 0
   997  0001CE                     	ds	1
   998  0001CF                     comportamientoBasico@investigandoCruce:
   999                           	opt callstack 0
  1000  0001CF                     	ds	1
  1001  0001D0                     comportamientoBasico@cruceDetectado:
  1002                           	opt callstack 0
  1003  0001D0                     	ds	1
  1004  0001D1                     comportamientoBasico@mapear:
  1005                           	opt callstack 0
  1006  0001D1                     	ds	1
  1007                           
  1008                           	psect	dataBANK1
  1009  0001E9                     __pdataBANK1:
  1010                           	opt callstack 0
  1011  0001E9                     _pausa:
  1012                           	opt callstack 0
  1013  0001E9                     	ds	1
  1014  0001EA                     _SENSOR_PRIORIDAD_BAJA:
  1015                           	opt callstack 0
  1016  0001EA                     	ds	1
  1017  0001EB                     _SENSOR_PRIORIDAD_MEDIA:
  1018                           	opt callstack 0
  1019  0001EB                     	ds	1
  1020  0001EC                     _SENSOR_PRIORIDAD_ALTA:
  1021                           	opt callstack 0
  1022  0001EC                     	ds	1
  1023                           
  1024                           	psect	bssBANK2
  1025  000200                     __pbssBANK2:
  1026                           	opt callstack 0
  1027  000200                     comportamientoBasico@movimientosRealizados:
  1028                           	opt callstack 0
  1029  000200                     	ds	200
  1030                           
  1031                           	psect	bssBIGRAM
  1032  0002C8                     __pbssBIGRAM:
  1033                           	opt callstack 0
  1034  0002C8                     comportamientoBasico@caminoFinal:
  1035                           	opt callstack 0
  1036  0002C8                     	ds	1000
  1037                           
  1038                           	psect	cstackBANK1
  1039  0001D2                     __pcstackBANK1:
  1040                           	opt callstack 0
  1041  0001D2                     decidirDireccion@caminosRecorrer:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x0
  1045  0001D2                     	ds	2
  1046  0001D4                     decidirDireccion@investigandoCruce:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x2
  1050  0001D4                     	ds	2
  1051  0001D6                     decidirDireccion@posicionInvCruce:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x4
  1055  0001D6                     	ds	2
  1056  0001D8                     decidirDireccion@contCaminosRecorridos:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x6
  1060  0001D8                     	ds	2
  1061  0001DA                     decidirDireccion@caminoActual:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x8
  1065  0001DA                     	ds	2
  1066  0001DC                     decidirDireccion@cambioOrientacionCarro:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0xA
  1070  0001DC                     	ds	2
  1071  0001DE                     decidirDireccion@mapear:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 2 bytes @ 0xC
  1075  0001DE                     	ds	2
  1076  0001E0                     decidirDireccion@cruceDetectado:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 2 bytes @ 0xE
  1080  0001E0                     	ds	2
  1081  0001E2                     decidirDireccion@avanceRectoLargo:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x10
  1085  0001E2                     	ds	2
  1086  0001E4                     ??_comportamientoBasico:
  1087                           
  1088                           ; 1 bytes @ 0x12
  1089  0001E4                     	ds	4
  1090  0001E8                     main@iniciado:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x16
  1094  0001E8                     	ds	1
  1095                           
  1096                           	psect	cstackBANK0
  1097  000060                     __pcstackBANK0:
  1098                           	opt callstack 0
  1099  000060                     ___fldiv@rem:
  1100                           	opt callstack 0
  1101  000060                     _roundf$1845:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x0
  1105  000060                     	ds	4
  1106  000064                     ___fldiv@sign:
  1107                           	opt callstack 0
  1108  000064                     roundf@e:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x4
  1112  000064                     	ds	1
  1113  000065                     ___fldiv@new_exp:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x5
  1117  000065                     	ds	1
  1118  000066                     _roundf$1844:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x6
  1122  000066                     	ds	1
  1123  000067                     ___fldiv@grs:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 4 bytes @ 0x7
  1127  000067                     	ds	3
  1128  00006A                     roundf@u:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 4 bytes @ 0xA
  1132  00006A                     	ds	1
  1133  00006B                     ___fldiv@bexp:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 1 bytes @ 0xB
  1137  00006B                     	ds	1
  1138  00006C                     ___fldiv@aexp:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 1 bytes @ 0xC
  1142  00006C                     	ds	1
  1143  00006D                     ??_floorf:
  1144                           
  1145                           ; 1 bytes @ 0xD
  1146  00006D                     	ds	1
  1147  00006E                     roundf@y:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 4 bytes @ 0xE
  1151  00006E                     	ds	4
  1152  000072                     ?___fltol:
  1153                           	opt callstack 0
  1154  000072                     ___fltol@f1:
  1155                           	opt callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x12
  1158  000072                     	ds	1
  1159  000073                     floorf@m:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x13
  1163  000073                     	ds	3
  1164  000076                     ??___fltol:
  1165                           
  1166                           ; 1 bytes @ 0x16
  1167  000076                     	ds	1
  1168  000077                     floorf@e:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x17
  1172  000077                     	ds	2
  1173  000079                     floorf@u:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x19
  1177  000079                     	ds	1
  1178  00007A                     ___fltol@sign1:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 1 bytes @ 0x1A
  1182  00007A                     	ds	1
  1183  00007B                     ___fltol@exp1:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x1B
  1187  00007B                     	ds	1
  1188  00007C                     pwmDuty@cicloTrabajo:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x1C
  1192  00007C                     	ds	1
  1193  00007D                     ?_efgtoa:
  1194                           	opt callstack 0
  1195  00007D                     efgtoa@fp:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x1D
  1199  00007D                     	ds	1
  1200  00007E                     pwmDuty@channel:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x1E
  1204  00007E                     	ds	1
  1205  00007F                     ??_pwmDuty:
  1206  00007F                     efgtoa@f:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 4 bytes @ 0x1F
  1210  00007F                     	ds	4
  1211  000083                     efgtoa@c:
  1212                           	opt callstack 0
  1213                           
  1214                           ; 1 bytes @ 0x23
  1215  000083                     	ds	1
  1216  000084                     ??_efgtoa:
  1217  000084                     pwmDuty@duty:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x24
  1221  000084                     	ds	4
  1222  000088                     ??_PID:
  1223  000088                     moverCarrito@carroEspejeado:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x28
  1227  000088                     	ds	1
  1228  000089                     efgtoa@ou:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 4 bytes @ 0x29
  1232  000089                     	ds	1
  1233  00008A                     moverCarrito@avanceRectoLargo:
  1234                           	opt callstack 0
  1235  00008A                     _PID$1843:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 4 bytes @ 0x2A
  1239  00008A                     	ds	2
  1240  00008C                     ??_moverCarrito:
  1241                           
  1242                           ; 1 bytes @ 0x2C
  1243  00008C                     	ds	1
  1244  00008D                     _efgtoa$940:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x2D
  1248  00008D                     	ds	1
  1249  00008E                     moverCarrito@espejearCarroY:
  1250                           	opt callstack 0
  1251  00008E                     PID@velocidadIzquierda:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x2E
  1255  00008E                     	ds	1
  1256  00008F                     _efgtoa$941:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x2F
  1260  00008F                     	ds	1
  1261  000090                     _PID$761:
  1262                           	opt callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x30
  1265  000090                     	ds	1
  1266  000091                     _efgtoa$945:
  1267                           	opt callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x31
  1270  000091                     	ds	1
  1271  000092                     PID@velocidadDerecha:
  1272                           	opt callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x32
  1275  000092                     	ds	1
  1276  000093                     _efgtoa$949:
  1277                           	opt callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x33
  1280  000093                     	ds	1
  1281  000094                     _PID$763:
  1282                           	opt callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x34
  1285  000094                     	ds	1
  1286  000095                     _efgtoa$950:
  1287                           	opt callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x35
  1290  000095                     	ds	1
  1291  000096                     PID@dif:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x36
  1295  000096                     	ds	1
  1296  000097                     _efgtoa$951:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x37
  1300  000097                     	ds	1
  1301  000098                     PID@error:
  1302                           	opt callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x38
  1305  000098                     	ds	1
  1306  000099                     efgtoa@t:
  1307                           	opt callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x39
  1310  000099                     	ds	1
  1311  00009A                     regresarPuntoPartida@movimientos:
  1312                           	opt callstack 0
  1313  00009A                     regresarAlCruce@movimientos:
  1314                           	opt callstack 0
  1315  00009A                     recorrerCaminoEncontrado@movimientos:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x3A
  1319  00009A                     	ds	1
  1320  00009B                     efgtoa@pp:
  1321                           	opt callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x3B
  1324  00009B                     	ds	1
  1325  00009C                     regresarPuntoPartida@numMovimientos:
  1326                           	opt callstack 0
  1327  00009C                     regresarAlCruce@numMovimientos:
  1328                           	opt callstack 0
  1329  00009C                     recorrerCaminoEncontrado@numMovimientos:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x3C
  1333  00009C                     	ds	1
  1334  00009D                     efgtoa@m:
  1335                           	opt callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x3D
  1338  00009D                     	ds	1
  1339  00009E                     regresarPuntoPartida@i:
  1340                           	opt callstack 0
  1341  00009E                     regresarAlCruce@i:
  1342                           	opt callstack 0
  1343  00009E                     recorrerCaminoEncontrado@i:
  1344                           	opt callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x3E
  1347  00009E                     	ds	1
  1348  00009F                     efgtoa@ne:
  1349                           	opt callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x3F
  1352  00009F                     	ds	2
  1353  0000A1                     efgtoa@d:
  1354                           	opt callstack 0
  1355                           
  1356                           ; 2 bytes @ 0x41
  1357  0000A1                     	ds	2
  1358  0000A3                     efgtoa@sign:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x43
  1362  0000A3                     	ds	2
  1363  0000A5                     efgtoa@p:
  1364                           	opt callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x45
  1367  0000A5                     	ds	2
  1368  0000A7                     efgtoa@nmode:
  1369                           	opt callstack 0
  1370                           
  1371                           ; 1 bytes @ 0x47
  1372  0000A7                     	ds	1
  1373  0000A8                     efgtoa@w:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x48
  1377  0000A8                     	ds	2
  1378  0000AA                     efgtoa@mode:
  1379                           	opt callstack 0
  1380                           
  1381                           ; 1 bytes @ 0x4A
  1382  0000AA                     	ds	1
  1383  0000AB                     efgtoa@h:
  1384                           	opt callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x4B
  1387  0000AB                     	ds	4
  1388  0000AF                     efgtoa@l:
  1389                           	opt callstack 0
  1390                           
  1391                           ; 4 bytes @ 0x4F
  1392  0000AF                     	ds	4
  1393  0000B3                     efgtoa@i:
  1394                           	opt callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x53
  1397  0000B3                     	ds	2
  1398  0000B5                     efgtoa@g:
  1399                           	opt callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x55
  1402  0000B5                     	ds	4
  1403  0000B9                     efgtoa@e:
  1404                           	opt callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x59
  1407  0000B9                     	ds	2
  1408  0000BB                     efgtoa@n:
  1409                           	opt callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x5B
  1412  0000BB                     	ds	2
  1413  0000BD                     efgtoa@u:
  1414                           	opt callstack 0
  1415                           
  1416                           ; 4 bytes @ 0x5D
  1417  0000BD                     	ds	4
  1418  0000C1                     ?_vfpfcnvrt:
  1419                           	opt callstack 0
  1420  0000C1                     vfpfcnvrt@fp:
  1421                           	opt callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x61
  1424  0000C1                     	ds	2
  1425  0000C3                     vfpfcnvrt@fmt:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x63
  1429  0000C3                     	ds	2
  1430  0000C5                     vfpfcnvrt@ap:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x65
  1434  0000C5                     	ds	2
  1435  0000C7                     ??_vfpfcnvrt:
  1436                           
  1437                           ; 1 bytes @ 0x67
  1438  0000C7                     	ds	4
  1439  0000CB                     vfpfcnvrt@ll:
  1440                           	opt callstack 0
  1441                           
  1442                           ; 8 bytes @ 0x6B
  1443  0000CB                     	ds	8
  1444  0000D3                     _vfpfcnvrt$965:
  1445                           	opt callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x73
  1448  0000D3                     	ds	2
  1449  0000D5                     _vfpfcnvrt$971:
  1450                           	opt callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x75
  1453  0000D5                     	ds	2
  1454  0000D7                     vfpfcnvrt@f:
  1455                           	opt callstack 0
  1456                           
  1457                           ; 4 bytes @ 0x77
  1458  0000D7                     	ds	4
  1459  0000DB                     vfpfcnvrt@ct:
  1460                           	opt callstack 0
  1461                           
  1462                           ; 3 bytes @ 0x7B
  1463  0000DB                     	ds	3
  1464  0000DE                     vfpfcnvrt@c:
  1465                           	opt callstack 0
  1466                           
  1467                           ; 1 bytes @ 0x7E
  1468  0000DE                     	ds	1
  1469  0000DF                     ?_vfprintf:
  1470                           	opt callstack 0
  1471  0000DF                     vfprintf@fp:
  1472                           	opt callstack 0
  1473                           
  1474                           ; 2 bytes @ 0x7F
  1475  0000DF                     	ds	2
  1476  0000E1                     vfprintf@fmt:
  1477                           	opt callstack 0
  1478                           
  1479                           ; 2 bytes @ 0x81
  1480  0000E1                     	ds	2
  1481  0000E3                     vfprintf@ap:
  1482                           	opt callstack 0
  1483                           
  1484                           ; 2 bytes @ 0x83
  1485  0000E3                     	ds	2
  1486  0000E5                     vfprintf@cfmt:
  1487                           	opt callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x85
  1490  0000E5                     	ds	2
  1491  0000E7                     ?_sprintf:
  1492                           	opt callstack 0
  1493  0000E7                     sprintf@s:
  1494                           	opt callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x87
  1497  0000E7                     	ds	2
  1498  0000E9                     sprintf@fmt:
  1499                           	opt callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x89
  1502  0000E9                     	ds	10
  1503  0000F3                     sprintf@ap:
  1504                           	opt callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x93
  1507  0000F3                     	ds	2
  1508  0000F5                     sprintf@f:
  1509                           	opt callstack 0
  1510                           
  1511                           ; 6 bytes @ 0x95
  1512  0000F5                     	ds	6
  1513  0000FB                     ??_decidirDireccion:
  1514  0000FB                     visualizarPasosRealizados@numMovimientos:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x9B
  1518  0000FB                     	ds	2
  1519  0000FD                     ??_visualizarPasosRealizados:
  1520                           
  1521                           ; 1 bytes @ 0x9D
  1522  0000FD                     	ds	1
  1523  0000FE                     comportamientoBasico@direccionElegida:
  1524                           	opt callstack 0
  1525                           
  1526                           ; 1 bytes @ 0x9E
  1527  0000FE                     	ds	1
  1528                           
  1529                           	psect	cstackCOMRAM
  1530  000001                     __pcstackCOMRAM:
  1531                           	opt callstack 0
  1532  000001                     ??_antiRebote:
  1533  000001                     
  1534                           ; 1 bytes @ 0x0
  1535  000001                     	ds	2
  1536  000003                     antiRebote@pin:
  1537                           	opt callstack 0
  1538                           
  1539                           ; 1 bytes @ 0x2
  1540  000003                     	ds	1
  1541  000004                     ??_boton:
  1542                           
  1543                           ; 1 bytes @ 0x3
  1544  000004                     	ds	2
  1545  000006                     ??_forzarParoAuto:
  1546  000006                     ??_configPwm:
  1547  000006                     ??_forzarReversa:
  1548  000006                     ??_forzarAvanceRecto:
  1549  000006                     ??_forzarGiroIzquierda:
  1550  000006                     ??_forzarGiroDerecha:
  1551  000006                     ?_strlen:
  1552                           	opt callstack 0
  1553  000006                     ?___fpclassifyf:
  1554                           	opt callstack 0
  1555  000006                     ?_isupper:
  1556                           	opt callstack 0
  1557  000006                     ?_isdigit:
  1558                           	opt callstack 0
  1559  000006                     ?_strncmp:
  1560                           	opt callstack 0
  1561  000006                     ?_isspace:
  1562                           	opt callstack 0
  1563  000006                     ?_dameLecturaAdc:
  1564                           	opt callstack 0
  1565  000006                     ?___wmul:
  1566                           	opt callstack 0
  1567  000006                     ?___awdiv:
  1568                           	opt callstack 0
  1569  000006                     ?___awmod:
  1570                           	opt callstack 0
  1571  000006                     ?___lwdiv:
  1572                           	opt callstack 0
  1573  000006                     ?___lmul:
  1574                           	opt callstack 0
  1575  000006                     ?___flneg:
  1576                           	opt callstack 0
  1577  000006                     ?___aodiv:
  1578                           	opt callstack 0
  1579  000006                     ?___aomod:
  1580                           	opt callstack 0
  1581  000006                     UART_write@dato:
  1582                           	opt callstack 0
  1583  000006                     limpiarMovimientos@movimientos:
  1584                           	opt callstack 0
  1585  000006                     combinarArreglos@movimientos:
  1586                           	opt callstack 0
  1587  000006                     ___wmul@multiplier:
  1588                           	opt callstack 0
  1589  000006                     ___awdiv@dividend:
  1590                           	opt callstack 0
  1591  000006                     ___awmod@dividend:
  1592                           	opt callstack 0
  1593  000006                     ___lwdiv@dividend:
  1594                           	opt callstack 0
  1595  000006                     isdigit@c:
  1596                           	opt callstack 0
  1597  000006                     isspace@c:
  1598                           	opt callstack 0
  1599  000006                     isupper@c:
  1600                           	opt callstack 0
  1601  000006                     fputc@c:
  1602                           	opt callstack 0
  1603  000006                     strcpy@dest:
  1604                           	opt callstack 0
  1605  000006                     strlen@s:
  1606                           	opt callstack 0
  1607  000006                     strncmp@_l:
  1608                           	opt callstack 0
  1609  000006                     ___lmul@multiplier:
  1610                           	opt callstack 0
  1611  000006                     ___fleq@ff1:
  1612                           	opt callstack 0
  1613  000006                     ___flneg@f1:
  1614                           	opt callstack 0
  1615  000006                     ___fpclassifyf@x:
  1616                           	opt callstack 0
  1617  000006                     ___aodiv@dividend:
  1618                           	opt callstack 0
  1619  000006                     ___aomod@dividend:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 8 bytes @ 0x5
  1623  000006                     	ds	1
  1624  000007                     UART_printf@cadena:
  1625                           	opt callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x6
  1628  000007                     	ds	1
  1629  000008                     ??_mover:
  1630  000008                     ??_isupper:
  1631  000008                     ??_isdigit:
  1632  000008                     ??_isspace:
  1633  000008                     ??_dameLecturaAdc:
  1634  000008                     configPwm@channel:
  1635                           	opt callstack 0
  1636  000008                     limpiarMovimientos@numMovimientos:
  1637                           	opt callstack 0
  1638  000008                     combinarArreglos@caminoFinal:
  1639                           	opt callstack 0
  1640  000008                     ___wmul@multiplicand:
  1641                           	opt callstack 0
  1642  000008                     ___awdiv@divisor:
  1643                           	opt callstack 0
  1644  000008                     ___awmod@divisor:
  1645                           	opt callstack 0
  1646  000008                     ___lwdiv@divisor:
  1647                           	opt callstack 0
  1648  000008                     fputc@fp:
  1649                           	opt callstack 0
  1650  000008                     strcpy@src:
  1651                           	opt callstack 0
  1652  000008                     strlen@a:
  1653                           	opt callstack 0
  1654  000008                     strncmp@_r:
  1655                           	opt callstack 0
  1656                           
  1657                           ; 2 bytes @ 0x7
  1658  000008                     	ds	1
  1659  000009                     ??_mostrarDireccionElegida:
  1660                           
  1661                           ; 1 bytes @ 0x8
  1662  000009                     	ds	1
  1663  00000A                     ??_fputc:
  1664  00000A                     ??___fpclassifyf:
  1665  00000A                     ??_strcpy:
  1666  00000A                     dameLecturaAdc@canalLeer:
  1667                           	opt callstack 0
  1668  00000A                     ___awdiv@counter:
  1669                           	opt callstack 0
  1670  00000A                     ___awmod@counter:
  1671                           	opt callstack 0
  1672  00000A                     ___lwdiv@counter:
  1673                           	opt callstack 0
  1674  00000A                     combinarArreglos@numMovimientos:
  1675                           	opt callstack 0
  1676  00000A                     ___wmul@product:
  1677                           	opt callstack 0
  1678  00000A                     strncmp@n:
  1679                           	opt callstack 0
  1680  00000A                     ___lmul@multiplicand:
  1681                           	opt callstack 0
  1682  00000A                     ___fleq@ff2:
  1683                           	opt callstack 0
  1684                           
  1685                           ; 4 bytes @ 0x9
  1686  00000A                     	ds	1
  1687  00000B                     seLlegoAlDestino@llegoDestino:
  1688                           	opt callstack 0
  1689  00000B                     mostrarDireccionElegida@direccionElegida:
  1690                           	opt callstack 0
  1691  00000B                     ___awdiv@sign:
  1692                           	opt callstack 0
  1693  00000B                     ___awmod@sign:
  1694                           	opt callstack 0
  1695  00000B                     ___lwdiv@quotient:
  1696                           	opt callstack 0
  1697                           
  1698                           ; 2 bytes @ 0xA
  1699  00000B                     	ds	1
  1700  00000C                     ??_strncmp:
  1701  00000C                     ?_tolower:
  1702                           	opt callstack 0
  1703  00000C                     _isspace$1475:
  1704                           	opt callstack 0
  1705  00000C                     limpiarMovimientos@i:
  1706                           	opt callstack 0
  1707  00000C                     combinarArreglos@numMovimientosFinal:
  1708                           	opt callstack 0
  1709  00000C                     ___awdiv@quotient:
  1710                           	opt callstack 0
  1711  00000C                     strcpy@s:
  1712                           	opt callstack 0
  1713  00000C                     tolower@c:
  1714                           	opt callstack 0
  1715                           
  1716                           ; 2 bytes @ 0xB
  1717  00000C                     	ds	1
  1718  00000D                     ?_atoi:
  1719                           	opt callstack 0
  1720  00000D                     ?___xxtofl:
  1721                           	opt callstack 0
  1722  00000D                     atoi@s:
  1723                           	opt callstack 0
  1724  00000D                     strncmp@l:
  1725                           	opt callstack 0
  1726  00000D                     ___xxtofl@val:
  1727                           	opt callstack 0
  1728                           
  1729                           ; 4 bytes @ 0xC
  1730  00000D                     	ds	1
  1731  00000E                     ??_combinarArreglos:
  1732  00000E                     ??_tolower:
  1733  00000E                     ??___fleq:
  1734  00000E                     ___fpclassifyf@e:
  1735                           	opt callstack 0
  1736  00000E                     strcpy@d:
  1737                           	opt callstack 0
  1738  00000E                     ___lmul@product:
  1739                           	opt callstack 0
  1740  00000E                     ___aodiv@divisor:
  1741                           	opt callstack 0
  1742  00000E                     ___aomod@divisor:
  1743                           	opt callstack 0
  1744                           
  1745                           ; 8 bytes @ 0xD
  1746  00000E                     	ds	1
  1747  00000F                     ??_atoi:
  1748  00000F                     fputs@s:
  1749                           	opt callstack 0
  1750  00000F                     strncmp@r:
  1751                           	opt callstack 0
  1752                           
  1753                           ; 2 bytes @ 0xE
  1754  00000F                     	ds	1
  1755  000010                     combinarArreglos@i:
  1756                           	opt callstack 0
  1757  000010                     ___fpclassifyf@u:
  1758                           	opt callstack 0
  1759                           
  1760                           ; 4 bytes @ 0xF
  1761  000010                     	ds	1
  1762  000011                     ??___xxtofl:
  1763  000011                     fputs@fp:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 2 bytes @ 0x10
  1767  000011                     	ds	1
  1768  000012                     ?___aldiv:
  1769                           	opt callstack 0
  1770  000012                     caminoCorrecto@movimientos:
  1771                           	opt callstack 0
  1772  000012                     _tolower$1574:
  1773                           	opt callstack 0
  1774  000012                     ___aldiv@dividend:
  1775                           	opt callstack 0
  1776                           
  1777                           ; 4 bytes @ 0x11
  1778  000012                     	ds	1
  1779  000013                     fputs@c:
  1780                           	opt callstack 0
  1781  000013                     atoi@neg:
  1782                           	opt callstack 0
  1783                           
  1784                           ; 2 bytes @ 0x12
  1785  000013                     	ds	1
  1786  000014                     caminoCorrecto@caminoFinal:
  1787                           	opt callstack 0
  1788  000014                     fputs@i:
  1789                           	opt callstack 0
  1790                           
  1791                           ; 2 bytes @ 0x13
  1792  000014                     	ds	1
  1793  000015                     ___xxtofl@sign:
  1794                           	opt callstack 0
  1795  000015                     _atoi$1444:
  1796                           	opt callstack 0
  1797                           
  1798                           ; 2 bytes @ 0x14
  1799  000015                     	ds	1
  1800  000016                     ?_pad:
  1801                           	opt callstack 0
  1802  000016                     ___aodiv@counter:
  1803                           	opt callstack 0
  1804  000016                     ___aomod@counter:
  1805                           	opt callstack 0
  1806  000016                     ___xxtofl@exp:
  1807                           	opt callstack 0
  1808  000016                     caminoCorrecto@numMovimientos:
  1809                           	opt callstack 0
  1810  000016                     pad@fp:
  1811                           	opt callstack 0
  1812  000016                     ___aldiv@divisor:
  1813                           	opt callstack 0
  1814                           
  1815                           ; 4 bytes @ 0x15
  1816  000016                     	ds	1
  1817  000017                     ___aodiv@sign:
  1818                           	opt callstack 0
  1819  000017                     ___aomod@sign:
  1820                           	opt callstack 0
  1821  000017                     _atoi$1446:
  1822                           	opt callstack 0
  1823  000017                     ___xxtofl@arg:
  1824                           	opt callstack 0
  1825                           
  1826                           ; 4 bytes @ 0x16
  1827  000017                     	ds	1
  1828  000018                     ?_abs:
  1829                           	opt callstack 0
  1830  000018                     caminoCorrecto@numMovimientosFinal:
  1831                           	opt callstack 0
  1832  000018                     pad@buf:
  1833                           	opt callstack 0
  1834  000018                     abs@a:
  1835                           	opt callstack 0
  1836  000018                     ___aodiv@quotient:
  1837                           	opt callstack 0
  1838                           
  1839                           ; 8 bytes @ 0x17
  1840  000018                     	ds	1
  1841  000019                     _atoi$1445:
  1842                           	opt callstack 0
  1843                           
  1844                           ; 1 bytes @ 0x18
  1845  000019                     	ds	1
  1846  00001A                     ??_abs:
  1847  00001A                     caminoCorrecto@caminoActual:
  1848                           	opt callstack 0
  1849  00001A                     ___aldiv@counter:
  1850                           	opt callstack 0
  1851  00001A                     pad@p:
  1852                           	opt callstack 0
  1853  00001A                     atoi@n:
  1854                           	opt callstack 0
  1855                           
  1856                           ; 2 bytes @ 0x19
  1857  00001A                     	ds	1
  1858  00001B                     ?___flmul:
  1859                           	opt callstack 0
  1860  00001B                     ?_dameDistancia:
  1861                           	opt callstack 0
  1862  00001B                     ___aldiv@sign:
  1863                           	opt callstack 0
  1864  00001B                     ___flmul@b:
  1865                           	opt callstack 0
  1866                           
  1867                           ; 4 bytes @ 0x1A
  1868  00001B                     	ds	1
  1869  00001C                     ??_pad:
  1870  00001C                     ___aldiv@quotient:
  1871                           	opt callstack 0
  1872                           
  1873                           ; 4 bytes @ 0x1B
  1874  00001C                     	ds	1
  1875  00001D                     pad@i:
  1876                           	opt callstack 0
  1877                           
  1878                           ; 2 bytes @ 0x1C
  1879  00001D                     	ds	2
  1880  00001F                     ??_dameDistancia:
  1881  00001F                     pad@w:
  1882                           	opt callstack 0
  1883  00001F                     ___flmul@a:
  1884                           	opt callstack 0
  1885                           
  1886                           ; 4 bytes @ 0x1E
  1887  00001F                     	ds	1
  1888  000020                     ?_map:
  1889                           	opt callstack 0
  1890  000020                     map@x:
  1891                           	opt callstack 0
  1892  000020                     UART_init@BAUD:
  1893                           	opt callstack 0
  1894                           
  1895                           ; 4 bytes @ 0x1F
  1896  000020                     	ds	1
  1897  000021                     ?_ctoa:
  1898                           	opt callstack 0
  1899  000021                     ?_dtoa:
  1900                           	opt callstack 0
  1901  000021                     dameDistancia@numeroSensor:
  1902                           	opt callstack 0
  1903  000021                     ctoa@fp:
  1904                           	opt callstack 0
  1905  000021                     dtoa@fp:
  1906                           	opt callstack 0
  1907                           
  1908                           ; 2 bytes @ 0x20
  1909  000021                     	ds	1
  1910  000022                     dameDistancia@distancia:
  1911                           	opt callstack 0
  1912                           
  1913                           ; 4 bytes @ 0x21
  1914  000022                     	ds	1
  1915  000023                     ??___flmul:
  1916  000023                     ctoa@c:
  1917                           	opt callstack 0
  1918  000023                     dtoa@d:
  1919                           	opt callstack 0
  1920                           
  1921                           ; 8 bytes @ 0x22
  1922  000023                     	ds	1
  1923  000024                     ctoa@w:
  1924                           	opt callstack 0
  1925  000024                     map@in_min:
  1926                           	opt callstack 0
  1927                           
  1928                           ; 4 bytes @ 0x23
  1929  000024                     	ds	2
  1930  000026                     dameDistancia@conteo:
  1931                           	opt callstack 0
  1932                           
  1933                           ; 2 bytes @ 0x25
  1934  000026                     	ds	1
  1935  000027                     ___flmul@sign:
  1936                           	opt callstack 0
  1937                           
  1938                           ; 1 bytes @ 0x26
  1939  000027                     	ds	1
  1940  000028                     ___flmul@aexp:
  1941                           	opt callstack 0
  1942  000028                     map@in_max:
  1943                           	opt callstack 0
  1944  000028                     _UART_init$1842:
  1945                           	opt callstack 0
  1946                           
  1947                           ; 4 bytes @ 0x27
  1948  000028                     	ds	1
  1949  000029                     ___flmul@grs:
  1950                           	opt callstack 0
  1951                           
  1952                           ; 4 bytes @ 0x28
  1953  000029                     	ds	2
  1954  00002B                     ??_dtoa:
  1955                           
  1956                           ; 1 bytes @ 0x2A
  1957  00002B                     	ds	1
  1958  00002C                     map@out_min:
  1959                           	opt callstack 0
  1960                           
  1961                           ; 4 bytes @ 0x2B
  1962  00002C                     	ds	1
  1963  00002D                     ___flmul@bexp:
  1964                           	opt callstack 0
  1965                           
  1966                           ; 1 bytes @ 0x2C
  1967  00002D                     	ds	1
  1968  00002E                     ___flmul@prod:
  1969                           	opt callstack 0
  1970                           
  1971                           ; 4 bytes @ 0x2D
  1972  00002E                     	ds	2
  1973  000030                     map@out_max:
  1974                           	opt callstack 0
  1975                           
  1976                           ; 4 bytes @ 0x2F
  1977  000030                     	ds	2
  1978  000032                     ___flmul@temp:
  1979                           	opt callstack 0
  1980                           
  1981                           ; 2 bytes @ 0x31
  1982  000032                     	ds	1
  1983  000033                     _dtoa$917:
  1984                           	opt callstack 0
  1985                           
  1986                           ; 2 bytes @ 0x32
  1987  000033                     	ds	1
  1988  000034                     ?___fladd:
  1989                           	opt callstack 0
  1990  000034                     ___flge@ff1:
  1991                           	opt callstack 0
  1992  000034                     ___fladd@b:
  1993                           	opt callstack 0
  1994                           
  1995                           ; 4 bytes @ 0x33
  1996  000034                     	ds	1
  1997  000035                     dtoa@p:
  1998                           	opt callstack 0
  1999                           
  2000                           ; 2 bytes @ 0x34
  2001  000035                     	ds	2
  2002  000037                     dtoa@w:
  2003                           	opt callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x36
  2006  000037                     	ds	1
  2007  000038                     ___flge@ff2:
  2008                           	opt callstack 0
  2009  000038                     ___fladd@a:
  2010                           	opt callstack 0
  2011                           
  2012                           ; 4 bytes @ 0x37
  2013  000038                     	ds	1
  2014  000039                     dtoa@s:
  2015                           	opt callstack 0
  2016                           
  2017                           ; 2 bytes @ 0x38
  2018  000039                     	ds	2
  2019  00003B                     dtoa@n:
  2020                           	opt callstack 0
  2021                           
  2022                           ; 8 bytes @ 0x3A
  2023  00003B                     	ds	1
  2024  00003C                     ??___fladd:
  2025  00003C                     ??___flge:
  2026                           
  2027                           ; 1 bytes @ 0x3B
  2028  00003C                     	ds	4
  2029  000040                     ___fladd@signs:
  2030                           	opt callstack 0
  2031  000040                     hayCruce@caminosRecorrer:
  2032                           	opt callstack 0
  2033                           
  2034                           ; 2 bytes @ 0x3F
  2035  000040                     	ds	1
  2036  000041                     ___fladd@aexp:
  2037                           	opt callstack 0
  2038                           
  2039                           ; 1 bytes @ 0x40
  2040  000041                     	ds	1
  2041  000042                     hayCruce@investigandoCruce:
  2042                           	opt callstack 0
  2043  000042                     ___fladd@bexp:
  2044                           	opt callstack 0
  2045                           
  2046                           ; 1 bytes @ 0x41
  2047  000042                     	ds	1
  2048  000043                     hayCruce@contCaminos:
  2049                           	opt callstack 0
  2050  000043                     ___fladd@grs:
  2051                           	opt callstack 0
  2052  000043                     dtoa@i:
  2053                           	opt callstack 0
  2054                           
  2055                           ; 2 bytes @ 0x42
  2056  000043                     	ds	1
  2057  000044                     ?___fldiv:
  2058                           	opt callstack 0
  2059  000044                     ?___flsub:
  2060                           	opt callstack 0
  2061  000044                     ___flsub@b:
  2062                           	opt callstack 0
  2063  000044                     ___fldiv@b:
  2064                           	opt callstack 0
  2065                           
  2066                           ; 4 bytes @ 0x43
  2067  000044                     	ds	4
  2068  000048                     ___flsub@a:
  2069                           	opt callstack 0
  2070  000048                     ___fldiv@a:
  2071                           	opt callstack 0
  2072                           
  2073                           ; 4 bytes @ 0x47
  2074  000048                     	ds	4
  2075  00004C                     ??___fldiv:
  2076  00004C                     ?_roundf:
  2077                           	opt callstack 0
  2078  00004C                     roundf@x:
  2079                           	opt callstack 0
  2080                           
  2081                           ; 4 bytes @ 0x4B
  2082  00004C                     	ds	4
  2083  000050                     ??_roundf:
  2084  000050                     ?_floorf:
  2085                           	opt callstack 0
  2086  000050                     floorf@x:
  2087                           	opt callstack 0
  2088                           
  2089                           ; 4 bytes @ 0x4F
  2090  000050                     	ds	4
  2091  000054                     ??_forzarEspejeoIzquierda:
  2092  000054                     ??_forzarEspejeoDerecha:
  2093  000054                     decidirDireccion@direccionElegida:
  2094                           	opt callstack 0
  2095                           
  2096                           ; 1 bytes @ 0x53
  2097  000054                     	ds	1
  2098  000055                     
  2099                           ; 1 bytes @ 0x54
  2100 ;;
  2101 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2102 ;;
  2103 ;; *************** function _main *****************
  2104 ;; Defined at:
  2105 ;;		line 1346 in file "main.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  numMovimient    2    0        int 
  2110 ;;  iniciado        1   22[BANK1 ] unsigned char 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2120 ;;      Params:         0       0       0       0       0       0       0       0       0
  2121 ;;      Locals:         0       0       3       0       0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2123 ;;      Totals:         0       0       3       0       0       0       0       0       0
  2124 ;;Total ram usage:        3 bytes
  2125 ;; Hardware stack levels required when called:   12
  2126 ;; This function calls:
  2127 ;;		_UART_init
  2128 ;;		_comportamientoBasico
  2129 ;;		_configPwm
  2130 ;;		_configurarAdc
  2131 ;;		_forzarParoAuto
  2132 ;;		_inicializarComportamientoBasico
  2133 ;;		_visualizarPasosRealizados
  2134 ;; This function is called by:
  2135 ;;		Startup code after reset
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text0
  2140  004B3C                     __ptext0:
  2141                           	opt callstack 0
  2142  004B3C                     _main:
  2143                           	opt callstack 19
  2144  004B3C                     
  2145                           ;main.c: 1348:     T_BOOL iniciado = 0;
  2146  004B3C  0E00               	movlw	0
  2147  004B3E  0101               	movlb	1	; () banked
  2148  004B40  6FE8               	movwf	main@iniciado& (0+255),b
  2149  004B42                     
  2150                           ; BSR set to: 1
  2151                           ;main.c: 1352:     INTCONbits.GIE = 1;
  2152  004B42  8EF2               	bsf	242,7,c	;volatile
  2153  004B44                     
  2154                           ; BSR set to: 1
  2155                           ;main.c: 1353:     INTCONbits.INT0IE = 1;
  2156  004B44  88F2               	bsf	242,4,c	;volatile
  2157  004B46                     
  2158                           ; BSR set to: 1
  2159                           ;main.c: 1354:     INTCON2bits.INTEDG0 = 1;
  2160  004B46  8CF1               	bsf	241,6,c	;volatile
  2161  004B48                     
  2162                           ; BSR set to: 1
  2163                           ;main.c: 1356:     TRISD3 = 0;
  2164  004B48  9695               	bcf	3989,3,c	;volatile
  2165  004B4A                     
  2166                           ; BSR set to: 1
  2167                           ;main.c: 1357:     TRISB1 = 1;
  2168  004B4A  8293               	bsf	3987,1,c	;volatile
  2169  004B4C                     
  2170                           ; BSR set to: 1
  2171                           ;main.c: 1358:     TRISB2 = 1;
  2172  004B4C  8493               	bsf	3987,2,c	;volatile
  2173  004B4E                     
  2174                           ; BSR set to: 1
  2175                           ;main.c: 1359:     TRISB3 = 1;
  2176  004B4E  8693               	bsf	3987,3,c	;volatile
  2177  004B50                     
  2178                           ; BSR set to: 1
  2179                           ;main.c: 1361:     TRISB4 = 0;
  2180  004B50  9893               	bcf	3987,4,c	;volatile
  2181  004B52                     
  2182                           ; BSR set to: 1
  2183                           ;main.c: 1362:     TRISB5 = 0;
  2184  004B52  9A93               	bcf	3987,5,c	;volatile
  2185  004B54                     
  2186                           ; BSR set to: 1
  2187                           ;main.c: 1363:     TRISB6 = 0;
  2188  004B54  9C93               	bcf	3987,6,c	;volatile
  2189  004B56                     
  2190                           ; BSR set to: 1
  2191                           ;main.c: 1364:     TRISB7 = 0;
  2192  004B56  9E93               	bcf	3987,7,c	;volatile
  2193  004B58                     
  2194                           ; BSR set to: 1
  2195                           ;main.c: 1366:     TRISDbits.RD2 = 0;
  2196  004B58  9495               	bcf	149,2,c	;volatile
  2197  004B5A                     
  2198                           ; BSR set to: 1
  2199                           ;main.c: 1367:     TRISB0 = 1;
  2200  004B5A  8093               	bsf	3987,0,c	;volatile
  2201  004B5C                     
  2202                           ; BSR set to: 1
  2203                           ;main.c: 1369:     LATD3 = 0;
  2204  004B5C  968C               	bcf	3980,3,c	;volatile
  2205  004B5E                     
  2206                           ; BSR set to: 1
  2207                           ;main.c: 1370:     LATB4 = 0;
  2208  004B5E  988A               	bcf	3978,4,c	;volatile
  2209  004B60                     
  2210                           ; BSR set to: 1
  2211                           ;main.c: 1371:     LATB5 = 0;
  2212  004B60  9A8A               	bcf	3978,5,c	;volatile
  2213  004B62                     
  2214                           ; BSR set to: 1
  2215                           ;main.c: 1372:     LATB6 = 0;
  2216  004B62  9C8A               	bcf	3978,6,c	;volatile
  2217  004B64                     
  2218                           ; BSR set to: 1
  2219                           ;main.c: 1373:     LATB7 = 0;
  2220  004B64  9E8A               	bcf	3978,7,c	;volatile
  2221  004B66                     
  2222                           ; BSR set to: 1
  2223                           ;main.c: 1374:     LATD2 = 0;
  2224  004B66  948C               	bcf	3980,2,c	;volatile
  2225                           
  2226                           ;main.c: 1377:     T1CON = 0b00000000;
  2227  004B68  0E00               	movlw	0
  2228  004B6A  6ECD               	movwf	205,c	;volatile
  2229  004B6C                     
  2230                           ; BSR set to: 1
  2231                           ;main.c: 1379:     configPwm(1);
  2232  004B6C  0E01               	movlw	1
  2233  004B6E  EC4F  F029         	call	_configPwm
  2234  004B72                     
  2235                           ;main.c: 1380:     configPwm(2);
  2236  004B72  0E02               	movlw	2
  2237  004B74  EC4F  F029         	call	_configPwm
  2238  004B78                     
  2239                           ;main.c: 1381:     configurarAdc();
  2240  004B78  ECF9  F02B         	call	_configurarAdc	;wreg free
  2241  004B7C                     
  2242                           ;main.c: 1383:     UART_init(9600);
  2243  004B7C  0E80               	movlw	128
  2244  004B7E  6E20               	movwf	UART_init@BAUD^0,c
  2245  004B80  0E25               	movlw	37
  2246  004B82  6E21               	movwf	(UART_init@BAUD+1)^0,c
  2247  004B84  0E00               	movlw	0
  2248  004B86  6E22               	movwf	(UART_init@BAUD+2)^0,c
  2249  004B88  0E00               	movlw	0
  2250  004B8A  6E23               	movwf	(UART_init@BAUD+3)^0,c
  2251  004B8C  ECE6  F026         	call	_UART_init	;wreg free
  2252  004B90                     l10899:
  2253                           
  2254                           ;main.c: 1388:         if (!pausa) {
  2255  004B90  0101               	movlb	1	; () banked
  2256  004B92  51E9               	movf	_pausa& (0+255),w,b
  2257  004B94  A4D8               	btfss	status,2,c
  2258  004B96  EFCF  F025         	goto	u11961
  2259  004B9A  EFD1  F025         	goto	u11960
  2260  004B9E                     u11961:
  2261  004B9E  EFE3  F025         	goto	l10915
  2262  004BA2                     u11960:
  2263  004BA2                     
  2264                           ; BSR set to: 1
  2265                           ;main.c: 1390:             if (!iniciado) {
  2266  004BA2  51E8               	movf	main@iniciado& (0+255),w,b
  2267  004BA4  A4D8               	btfss	status,2,c
  2268  004BA6  EFD7  F025         	goto	u11971
  2269  004BAA  EFD9  F025         	goto	u11970
  2270  004BAE                     u11971:
  2271  004BAE  EFDD  F025         	goto	l10911
  2272  004BB2                     u11970:
  2273  004BB2                     
  2274                           ; BSR set to: 1
  2275                           ;main.c: 1391:                 iniciado = 1;
  2276  004BB2  0E01               	movlw	1
  2277  004BB4  6FE8               	movwf	main@iniciado& (0+255),b
  2278  004BB6                     
  2279                           ; BSR set to: 1
  2280                           ;main.c: 1392:                 inicializarComportamientoBasico();
  2281  004BB6  EC9F  F029         	call	_inicializarComportamientoBasico	;wreg free
  2282  004BBA                     l10911:
  2283                           
  2284                           ;main.c: 1403:             comportamientoBasico();
  2285  004BBA  ECE0  F00D         	call	_comportamientoBasico	;wreg free
  2286  004BBE                     
  2287                           ;main.c: 1404:             forzarParoAuto();
  2288  004BBE  ECD9  F02B         	call	_forzarParoAuto	;wreg free
  2289                           
  2290                           ;main.c: 1406:         } else {
  2291  004BC2  EFC8  F025         	goto	l10899
  2292  004BC6                     l10915:
  2293                           
  2294                           ; BSR set to: 1
  2295                           ;main.c: 1408:             iniciado = 0;
  2296  004BC6  0E00               	movlw	0
  2297  004BC8  6FE8               	movwf	main@iniciado& (0+255),b
  2298  004BCA  EFC8  F025         	goto	l10899
  2299  004BCE  EF07  F000         	goto	start
  2300  004BD2                     __end_of_main:
  2301                           	opt callstack 0
  2302                           
  2303 ;; *************** function _visualizarPasosRealizados *****************
  2304 ;; Defined at:
  2305 ;;		line 197 in file "main.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  numMovimient    2  155[BANK0 ] unsigned int 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2319 ;;      Params:         0       2       0       0       0       0       0       0       0
  2320 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2321 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2322 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2323 ;;Total ram usage:        4 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:   10
  2326 ;; This function calls:
  2327 ;;		_UART_printf
  2328 ;;		_sprintf
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           	psect	text1
  2335  0047FA                     __ptext1:
  2336                           	opt callstack 0
  2337  0047FA                     _visualizarPasosRealizados:
  2338                           	opt callstack 20
  2339  0047FA                     
  2340                           ;main.c: 199:     switch (mouse.curr_state) {
  2341  0047FA  EF1F  F024         	goto	l10531
  2342  0047FE                     l10521:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;main.c: 201:             UART_printf("Enfrente\n");
  2346  0047FE  0ED3               	movlw	low STR_7
  2347  004800  6E07               	movwf	UART_printf@cadena^0,c
  2348  004802  0E7F               	movlw	high STR_7
  2349  004804  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2350  004806  EC1D  F028         	call	_UART_printf	;wreg free
  2351                           
  2352                           ;main.c: 202:             break;
  2353  00480A  EF3D  F024         	goto	l10533
  2354  00480E                     l10523:
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;main.c: 205:             UART_printf("Izquierda\n");
  2358  00480E  0EC8               	movlw	low STR_8
  2359  004810  6E07               	movwf	UART_printf@cadena^0,c
  2360  004812  0E7F               	movlw	high STR_8
  2361  004814  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2362  004816  EC1D  F028         	call	_UART_printf	;wreg free
  2363                           
  2364                           ;main.c: 206:             break;
  2365  00481A  EF3D  F024         	goto	l10533
  2366  00481E                     l10525:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;main.c: 209:             UART_printf("Derecha\n");
  2370  00481E  0EDD               	movlw	low STR_9
  2371  004820  6E07               	movwf	UART_printf@cadena^0,c
  2372  004822  0E7F               	movlw	high STR_9
  2373  004824  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2374  004826  EC1D  F028         	call	_UART_printf	;wreg free
  2375                           
  2376                           ;main.c: 210:             break;
  2377  00482A  EF3D  F024         	goto	l10533
  2378  00482E                     l10527:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;main.c: 213:             UART_printf("Alto\n");
  2382  00482E  0EE6               	movlw	low STR_10
  2383  004830  6E07               	movwf	UART_printf@cadena^0,c
  2384  004832  0E7F               	movlw	high STR_10
  2385  004834  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2386  004836  EC1D  F028         	call	_UART_printf	;wreg free
  2387                           
  2388                           ;main.c: 214:             break;
  2389  00483A  EF3D  F024         	goto	l10533
  2390  00483E                     l10531:
  2391  00483E  5057               	movf	_mouse^0,w,c
  2392  004840  0100               	movlb	0	; () banked
  2393  004842  6FFD               	movwf	??_visualizarPasosRealizados& (0+255),b
  2394  004844  6BFE               	clrf	(??_visualizarPasosRealizados+1)& (0+255),b
  2395                           
  2396                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2397                           ; Switch size 1, requested type "simple"
  2398                           ; Number of cases is 1, Range of values is 0 to 0
  2399                           ; switch strategies available:
  2400                           ; Name         Instructions Cycles
  2401                           ; simple_byte            4     3 (average)
  2402                           ;	Chosen strategy is simple_byte
  2403  004846  51FE               	movf	(??_visualizarPasosRealizados+1)& (0+255),w,b
  2404  004848  0A00               	xorlw	0	; case 0
  2405  00484A  B4D8               	btfsc	status,2,c
  2406  00484C  EF2A  F024         	goto	l11227
  2407  004850  EF3D  F024         	goto	l10533
  2408  004854                     l11227:
  2409                           
  2410                           ; BSR set to: 0
  2411                           ; Switch size 1, requested type "simple"
  2412                           ; Number of cases is 4, Range of values is 1 to 4
  2413                           ; switch strategies available:
  2414                           ; Name         Instructions Cycles
  2415                           ; simple_byte           13     7 (average)
  2416                           ;	Chosen strategy is simple_byte
  2417  004854  51FD               	movf	??_visualizarPasosRealizados& (0+255),w,b
  2418  004856  0A01               	xorlw	1	; case 1
  2419  004858  B4D8               	btfsc	status,2,c
  2420  00485A  EFFF  F023         	goto	l10521
  2421  00485E  0A03               	xorlw	3	; case 2
  2422  004860  B4D8               	btfsc	status,2,c
  2423  004862  EF07  F024         	goto	l10523
  2424  004866  0A01               	xorlw	1	; case 3
  2425  004868  B4D8               	btfsc	status,2,c
  2426  00486A  EF0F  F024         	goto	l10525
  2427  00486E  0A07               	xorlw	7	; case 4
  2428  004870  B4D8               	btfsc	status,2,c
  2429  004872  EF17  F024         	goto	l10527
  2430  004876  EF3D  F024         	goto	l10533
  2431  00487A                     l10533:
  2432                           
  2433                           ;main.c: 217:     sprintf(buffer, "\rMovimientos Realizados = %d\r\n\n", numMovimientos)
      +                          ;
  2434  00487A  0E91               	movlw	low _buffer
  2435  00487C  0100               	movlb	0	; () banked
  2436  00487E  6FE7               	movwf	sprintf@s& (0+255),b
  2437  004880  0E01               	movlw	high _buffer
  2438  004882  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  2439  004884  0ECB               	movlw	low STR_11
  2440  004886  6FE9               	movwf	sprintf@fmt& (0+255),b
  2441  004888  0E7E               	movlw	high STR_11
  2442  00488A  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  2443  00488C  C0FB  F0EB         	movff	visualizarPasosRealizados@numMovimientos,?_sprintf+4
  2444  004890  C0FC  F0EC         	movff	visualizarPasosRealizados@numMovimientos+1,?_sprintf+5
  2445  004894  ECFD  F028         	call	_sprintf	;wreg free
  2446  004898                     
  2447                           ;main.c: 218:     UART_printf(buffer);
  2448  004898  0E91               	movlw	low _buffer
  2449  00489A  6E07               	movwf	UART_printf@cadena^0,c
  2450  00489C  0E01               	movlw	high _buffer
  2451  00489E  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2452  0048A0  EC1D  F028         	call	_UART_printf	;wreg free
  2453  0048A4  0012               	return		;funcret
  2454  0048A6                     __end_of_visualizarPasosRealizados:
  2455                           	opt callstack 0
  2456                           
  2457 ;; *************** function _inicializarComportamientoBasico *****************
  2458 ;; Defined at:
  2459 ;;		line 236 in file "main.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2473 ;;      Params:         0       0       0       0       0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2476 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2477 ;;Total ram usage:        0 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    6
  2480 ;; This function calls:
  2481 ;;		_dameDistancia
  2482 ;;		_velocidadEstandar
  2483 ;; This function is called by:
  2484 ;;		_main
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text2
  2489  00533E                     __ptext2:
  2490                           	opt callstack 0
  2491  00533E                     _inicializarComportamientoBasico:
  2492                           	opt callstack 24
  2493  00533E                     
  2494                           ;main.c: 238:     mouse.curr_state = ENFRENTE;
  2495  00533E  0E01               	movlw	1
  2496  005340  6E57               	movwf	_mouse^0,c
  2497  005342                     
  2498                           ;main.c: 240:     oldSensorDerecha = dameDistancia(DERECHA);
  2499  005342  0E03               	movlw	3
  2500  005344  ECD2  F01E         	call	_dameDistancia
  2501  005348  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
  2502  00534C  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  2503  005350  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  2504  005354  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  2505  005358                     
  2506                           ;main.c: 241:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  2507  005358  0E02               	movlw	2
  2508  00535A  ECD2  F01E         	call	_dameDistancia
  2509  00535E  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  2510  005362  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  2511  005366  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  2512  00536A  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  2513  00536E                     
  2514                           ;main.c: 242:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  2515  00536E  0E01               	movlw	1
  2516  005370  ECD2  F01E         	call	_dameDistancia
  2517  005374  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  2518  005378  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  2519  00537C  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  2520  005380  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  2521  005384                     
  2522                           ;main.c: 244:     velocidadEstandar();
  2523  005384  EC5E  F02B         	call	_velocidadEstandar	;wreg free
  2524  005388  0012               	return		;funcret
  2525  00538A                     __end_of_inicializarComportamientoBasico:
  2526                           	opt callstack 0
  2527                           
  2528 ;; *************** function _configurarAdc *****************
  2529 ;; Defined at:
  2530 ;;		line 7 in file "./adc.h"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2544 ;;      Params:         0       0       0       0       0       0       0       0       0
  2545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2547 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2548 ;;Total ram usage:        0 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    2
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text3
  2559  0057F2                     __ptext3:
  2560                           	opt callstack 0
  2561  0057F2                     _configurarAdc:
  2562                           	opt callstack 28
  2563  0057F2                     
  2564                           ;./adc.h: 8:     ADCON1 = 0b00001110;
  2565  0057F2  0E0E               	movlw	14
  2566  0057F4  6EC1               	movwf	193,c	;volatile
  2567                           
  2568                           ;./adc.h: 9:     ADCON2 = 0b10100101;
  2569  0057F6  0EA5               	movlw	165
  2570  0057F8  6EC0               	movwf	192,c	;volatile
  2571  0057FA  0012               	return		;funcret
  2572  0057FC                     __end_of_configurarAdc:
  2573                           	opt callstack 0
  2574                           
  2575 ;; *************** function _configPwm *****************
  2576 ;; Defined at:
  2577 ;;		line 47 in file "./pwm.h"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  channel         1    wreg     unsigned char 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  channel         1    7[COMRAM] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2591 ;;      Params:         0       0       0       0       0       0       0       0       0
  2592 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2593 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2594 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2595 ;;Total ram usage:        3 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    2
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_main
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text4
  2606  00529E                     __ptext4:
  2607                           	opt callstack 0
  2608  00529E                     _configPwm:
  2609                           	opt callstack 28
  2610                           
  2611                           ;incstack = 0
  2612                           ;configPwm@channel stored from wreg
  2613  00529E  6E08               	movwf	configPwm@channel^0,c
  2614  0052A0                     
  2615                           ;./pwm.h: 56:         T2CKPS0 = 1;
  2616  0052A0  80CA               	bsf	4042,0,c	;volatile
  2617                           
  2618                           ;./pwm.h: 57:         T2CKPS1 = 1;
  2619  0052A2  82CA               	bsf	4042,1,c	;volatile
  2620  0052A4                     
  2621                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
  2622  0052A4  0E7C               	movlw	124
  2623  0052A6  6ECB               	movwf	203,c	;volatile
  2624                           
  2625                           ;./pwm.h: 63:     switch (channel) {
  2626  0052A8  EF60  F029         	goto	l10487
  2627  0052AC                     l163:
  2628                           
  2629                           ;./pwm.h: 66:             TRISC2 = 0;
  2630  0052AC  9494               	bcf	3988,2,c	;volatile
  2631                           
  2632                           ;./pwm.h: 67:             CCP1M3 = 1;
  2633  0052AE  86BD               	bsf	4029,3,c	;volatile
  2634                           
  2635                           ;./pwm.h: 68:             CCP1M2 = 1;
  2636  0052B0  84BD               	bsf	4029,2,c	;volatile
  2637                           
  2638                           ;./pwm.h: 71:             break;
  2639  0052B2  EF75  F029         	goto	l164
  2640  0052B6                     l165:
  2641                           
  2642                           ;./pwm.h: 74:             TRISC1 = 0;
  2643  0052B6  9294               	bcf	3988,1,c	;volatile
  2644                           
  2645                           ;./pwm.h: 75:             CCP2M3 = 1;
  2646  0052B8  86BA               	bsf	4026,3,c	;volatile
  2647                           
  2648                           ;./pwm.h: 76:             CCP2M2 = 1;
  2649  0052BA  84BA               	bsf	4026,2,c	;volatile
  2650                           
  2651                           ;./pwm.h: 77:             break;
  2652  0052BC  EF75  F029         	goto	l164
  2653  0052C0                     l10487:
  2654  0052C0  5008               	movf	configPwm@channel^0,w,c
  2655  0052C2  6E06               	movwf	??_configPwm^0,c
  2656  0052C4  6A07               	clrf	(??_configPwm+1)^0,c
  2657                           
  2658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2659                           ; Switch size 1, requested type "simple"
  2660                           ; Number of cases is 1, Range of values is 0 to 0
  2661                           ; switch strategies available:
  2662                           ; Name         Instructions Cycles
  2663                           ; simple_byte            4     3 (average)
  2664                           ;	Chosen strategy is simple_byte
  2665  0052C6  5007               	movf	(??_configPwm+1)^0,w,c
  2666  0052C8  0A00               	xorlw	0	; case 0
  2667  0052CA  B4D8               	btfsc	status,2,c
  2668  0052CC  EF6A  F029         	goto	l11229
  2669  0052D0  EF75  F029         	goto	l164
  2670  0052D4                     l11229:
  2671                           
  2672                           ; Switch size 1, requested type "simple"
  2673                           ; Number of cases is 2, Range of values is 1 to 2
  2674                           ; switch strategies available:
  2675                           ; Name         Instructions Cycles
  2676                           ; simple_byte            7     4 (average)
  2677                           ;	Chosen strategy is simple_byte
  2678  0052D4  5006               	movf	??_configPwm^0,w,c
  2679  0052D6  0A01               	xorlw	1	; case 1
  2680  0052D8  B4D8               	btfsc	status,2,c
  2681  0052DA  EF56  F029         	goto	l163
  2682  0052DE  0A03               	xorlw	3	; case 2
  2683  0052E0  B4D8               	btfsc	status,2,c
  2684  0052E2  EF5B  F029         	goto	l165
  2685  0052E6  EF75  F029         	goto	l164
  2686  0052EA                     l164:
  2687                           
  2688                           ;./pwm.h: 81:     TMR2ON = 1;
  2689  0052EA  84CA               	bsf	4042,2,c	;volatile
  2690  0052EC  0012               	return		;funcret
  2691  0052EE                     __end_of_configPwm:
  2692                           	opt callstack 0
  2693                           
  2694 ;; *************** function _comportamientoBasico *****************
  2695 ;; Defined at:
  2696 ;;		line 256 in file "main.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  direccionEle    1  158[BANK0 ] unsigned char 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2710 ;;      Params:         0       0       0       0       0       0       0       0       0
  2711 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2712 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2713 ;;      Totals:         0       1       2       0       0       0       0       0       0
  2714 ;;Total ram usage:        3 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:   11
  2717 ;; This function calls:
  2718 ;;		_PID
  2719 ;;		_UART_printf
  2720 ;;		_caminoCorrecto
  2721 ;;		_decidirDireccion
  2722 ;;		_finalizarRecorrido
  2723 ;;		_forzarEspejeo
  2724 ;;		_forzarParoAuto
  2725 ;;		_leerSensores
  2726 ;;		_limpiarMovimientos
  2727 ;;		_moverCarrito
  2728 ;;		_recorrerCaminoEncontrado
  2729 ;;		_regresarAlCruce
  2730 ;;		_regresarPuntoPartida
  2731 ;;		_velocidadBaja
  2732 ;;		_velocidadEstandar
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text5
  2739  001BC0                     __ptext5:
  2740                           	opt callstack 0
  2741  001BC0                     _comportamientoBasico:
  2742                           	opt callstack 19
  2743  001BC0                     
  2744                           ;main.c: 258:     static T_UBYTE espejearCarroY = 0;;main.c: 259:     static T_UBYTE car
      +                          roEspejeado = 0;;main.c: 260:     static T_UBYTE movimientosRealizados[200];;main.c: 261
      +                          :     static T_UBYTE caminoFinal[1000];;main.c: 262:     static T_UINT numMovimientos = 
      +                          0;;main.c: 263:     static T_UINT numMovimientosTotales = 0;;main.c: 264:     static T_U
      +                          BYTE mapear = 0;;main.c: 265:     static T_UBYTE cruceDetectado = 0;;main.c: 266:     st
      +                          atic T_UBYTE caminosRecorrer[3];;main.c: 267:     static T_UBYTE investigandoCruce = 0;
  2745  001BC0  0E00               	movlw	0
  2746  001BC2  0100               	movlb	0	; () banked
  2747  001BC4  6FFE               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  2748                           
  2749                           ;main.c: 276:     if (!caminoEncontrado) {
  2750  001BC6  0101               	movlb	1	; () banked
  2751  001BC8  5138               	movf	comportamientoBasico@caminoEncontrado& (0+255),w,b
  2752  001BCA  A4D8               	btfss	status,2,c
  2753  001BCC  EFEA  F00D         	goto	u11651
  2754  001BD0  EFEC  F00D         	goto	u11650
  2755  001BD4                     u11651:
  2756  001BD4  EFCF  F00F         	goto	l10687
  2757  001BD8                     u11650:
  2758  001BD8                     
  2759                           ; BSR set to: 1
  2760                           ;main.c: 278:         moverCarrito(espejearCarroY, &carroEspejeado, &avanceRectoLargo);
  2761  001BD8  0E59               	movlw	low comportamientoBasico@carroEspejeado
  2762  001BDA  0100               	movlb	0	; () banked
  2763  001BDC  6F88               	movwf	moverCarrito@carroEspejeado& (0+255),b
  2764  001BDE  0E00               	movlw	high comportamientoBasico@carroEspejeado
  2765  001BE0  6F89               	movwf	(moverCarrito@carroEspejeado+1)& (0+255),b
  2766  001BE2  0ECA               	movlw	low comportamientoBasico@avanceRectoLargo
  2767  001BE4  6F8A               	movwf	moverCarrito@avanceRectoLargo& (0+255),b
  2768  001BE6  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  2769  001BE8  6F8B               	movwf	(moverCarrito@avanceRectoLargo+1)& (0+255),b
  2770  001BEA  0101               	movlb	1	; () banked
  2771  001BEC  5139               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  2772  001BEE  EC09  F020         	call	_moverCarrito
  2773  001BF2                     
  2774                           ;main.c: 281:         if (!llegoDestino) {
  2775  001BF2  0100               	movlb	0	; () banked
  2776  001BF4  51FF               	movf	_llegoDestino& (0+255),w,b
  2777  001BF6  A4D8               	btfss	status,2,c
  2778  001BF8  EF00  F00E         	goto	u11661
  2779  001BFC  EF02  F00E         	goto	u11660
  2780  001C00                     u11661:
  2781  001C00  EFAD  F00F         	goto	l10685
  2782  001C04                     u11660:
  2783  001C04                     
  2784                           ; BSR set to: 0
  2785                           ;main.c: 283:             if (mapear)
  2786  001C04  0101               	movlb	1	; () banked
  2787  001C06  51D1               	movf	comportamientoBasico@mapear& (0+255),w,b
  2788  001C08  B4D8               	btfsc	status,2,c
  2789  001C0A  EF09  F00E         	goto	u11671
  2790  001C0E  EF0B  F00E         	goto	u11670
  2791  001C12                     u11671:
  2792  001C12  EF2F  F00E         	goto	l10571
  2793  001C16                     u11670:
  2794  001C16                     
  2795                           ; BSR set to: 1
  2796                           ;main.c: 284:             {;main.c: 285:                 if (numMovimientos < 200)
  2797  001C16  51C9               	movf	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2798  001C18  E107               	bnz	u11681
  2799  001C1A  0EC8               	movlw	200
  2800  001C1C  5DC8               	subwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2801  001C1E  B0D8               	btfsc	status,0,c
  2802  001C20  EF14  F00E         	goto	u11681
  2803  001C24  EF16  F00E         	goto	u11680
  2804  001C28                     u11681:
  2805  001C28  EF22  F00E         	goto	l10565
  2806  001C2C                     u11680:
  2807  001C2C                     
  2808                           ; BSR set to: 1
  2809                           ;main.c: 286:                     movimientosRealizados[numMovimientos++] = mouse.curr_s
      +                          tate;
  2810  001C2C  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  2811  001C2E  25C8               	addwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2812  001C30  6ED9               	movwf	fsr2l,c
  2813  001C32  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  2814  001C34  21C9               	addwfc	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2815  001C36  6EDA               	movwf	fsr2h,c
  2816  001C38  C057  FFDF         	movff	_mouse,indf2
  2817  001C3C                     
  2818                           ; BSR set to: 1
  2819  001C3C  4BC8               	infsnz	comportamientoBasico@numMovimientos& (0+255),f,b
  2820  001C3E  2BC9               	incf	(comportamientoBasico@numMovimientos+1)& (0+255),f,b
  2821  001C40  EF56  F00E         	goto	l10585
  2822  001C44                     l10565:
  2823                           
  2824                           ; BSR set to: 1
  2825                           ;main.c: 288:                     UART_printf("\n\nOVERFLOW en el mapeo de pasos Realiza
      +                          dos para cruce\n\n");
  2826  001C44  0E0C               	movlw	low STR_12
  2827  001C46  6E07               	movwf	UART_printf@cadena^0,c
  2828  001C48  0E7E               	movlw	high STR_12
  2829  001C4A  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2830  001C4C  EC1D  F028         	call	_UART_printf	;wreg free
  2831  001C50                     l10567:
  2832                           
  2833                           ;main.c: 289:                     forzarParoAuto();
  2834  001C50  ECD9  F02B         	call	_forzarParoAuto	;wreg free
  2835  001C54                     
  2836                           ;main.c: 290:                     pausa = 1;
  2837  001C54  0E01               	movlw	1
  2838  001C56  0101               	movlb	1	; () banked
  2839  001C58  6FE9               	movwf	_pausa& (0+255),b
  2840  001C5A  EF56  F00E         	goto	l10585
  2841  001C5E                     l10571:
  2842                           
  2843                           ; BSR set to: 1
  2844                           ;main.c: 311:                 if (!investigandoCruce) {
  2845  001C5E  51CF               	movf	comportamientoBasico@investigandoCruce& (0+255),w,b
  2846  001C60  A4D8               	btfss	status,2,c
  2847  001C62  EF35  F00E         	goto	u11691
  2848  001C66  EF37  F00E         	goto	u11690
  2849  001C6A                     u11691:
  2850  001C6A  EF56  F00E         	goto	l10585
  2851  001C6E                     u11690:
  2852  001C6E                     
  2853                           ; BSR set to: 1
  2854                           ;main.c: 312:                     if (numMovimientosTotales < 1000)
  2855  001C6E  0EE8               	movlw	232
  2856  001C70  5DC6               	subwf	comportamientoBasico@numMovimientosTotales& (0+255),w,b
  2857  001C72  0E03               	movlw	3
  2858  001C74  59C7               	subwfb	(comportamientoBasico@numMovimientosTotales+1)& (0+255),w,b
  2859  001C76  B0D8               	btfsc	status,0,c
  2860  001C78  EF40  F00E         	goto	u11701
  2861  001C7C  EF42  F00E         	goto	u11700
  2862  001C80                     u11701:
  2863  001C80  EF4E  F00E         	goto	l10579
  2864  001C84                     u11700:
  2865  001C84                     
  2866                           ; BSR set to: 1
  2867                           ;main.c: 313:                         caminoFinal[numMovimientosTotales++] = mouse.curr_
      +                          state;
  2868  001C84  0EC8               	movlw	low comportamientoBasico@caminoFinal
  2869  001C86  25C6               	addwf	comportamientoBasico@numMovimientosTotales& (0+255),w,b
  2870  001C88  6ED9               	movwf	fsr2l,c
  2871  001C8A  0E02               	movlw	high comportamientoBasico@caminoFinal
  2872  001C8C  21C7               	addwfc	(comportamientoBasico@numMovimientosTotales+1)& (0+255),w,b
  2873  001C8E  6EDA               	movwf	fsr2h,c
  2874  001C90  C057  FFDF         	movff	_mouse,indf2
  2875  001C94                     
  2876                           ; BSR set to: 1
  2877  001C94  4BC6               	infsnz	comportamientoBasico@numMovimientosTotales& (0+255),f,b
  2878  001C96  2BC7               	incf	(comportamientoBasico@numMovimientosTotales+1)& (0+255),f,b
  2879  001C98  EF56  F00E         	goto	l10585
  2880  001C9C                     l10579:
  2881                           
  2882                           ; BSR set to: 1
  2883                           ;main.c: 315:                         UART_printf("\n\nOVERFLOW en el mapeo de pasos Rea
      +                          lizados para camino Total\n\n");
  2884  001C9C  0ECD               	movlw	low STR_13
  2885  001C9E  6E07               	movwf	UART_printf@cadena^0,c
  2886  001CA0  0E7D               	movlw	high STR_13
  2887  001CA2  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2888  001CA4  EC1D  F028         	call	_UART_printf	;wreg free
  2889  001CA8  EF28  F00E         	goto	l10567
  2890  001CAC                     l10585:
  2891                           
  2892                           ; BSR set to: 1
  2893                           ;main.c: 322:             leerSensores();
  2894  001CAC  EC62  F01D         	call	_leerSensores	;wreg free
  2895  001CB0                     
  2896                           ;main.c: 325:             direccionElegida = decidirDireccion(caminosRecorrer, &investig
      +                          andoCruce,
  2897  001CB0  0EC3               	movlw	low comportamientoBasico@caminosRecorrer
  2898  001CB2  0101               	movlb	1	; () banked
  2899  001CB4  6FD2               	movwf	decidirDireccion@caminosRecorrer& (0+255),b
  2900  001CB6  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  2901  001CB8  6FD3               	movwf	(decidirDireccion@caminosRecorrer+1)& (0+255),b
  2902  001CBA  0ECF               	movlw	low comportamientoBasico@investigandoCruce
  2903  001CBC  6FD4               	movwf	decidirDireccion@investigandoCruce& (0+255),b
  2904  001CBE  0E01               	movlw	high comportamientoBasico@investigandoCruce
  2905  001CC0  6FD5               	movwf	(decidirDireccion@investigandoCruce+1)& (0+255),b
  2906  001CC2  0ECE               	movlw	low comportamientoBasico@posicionInvCruce
  2907  001CC4  6FD6               	movwf	decidirDireccion@posicionInvCruce& (0+255),b
  2908  001CC6  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  2909  001CC8  6FD7               	movwf	(decidirDireccion@posicionInvCruce+1)& (0+255),b
  2910  001CCA  0ECD               	movlw	low comportamientoBasico@contCaminosRecorridos
  2911  001CCC  6FD8               	movwf	decidirDireccion@contCaminosRecorridos& (0+255),b
  2912  001CCE  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  2913  001CD0  6FD9               	movwf	(decidirDireccion@contCaminosRecorridos+1)& (0+255),b
  2914  001CD2  0ECC               	movlw	low comportamientoBasico@caminoActual
  2915  001CD4  6FDA               	movwf	decidirDireccion@caminoActual& (0+255),b
  2916  001CD6  0E01               	movlw	high comportamientoBasico@caminoActual
  2917  001CD8  6FDB               	movwf	(decidirDireccion@caminoActual+1)& (0+255),b
  2918  001CDA  0ECB               	movlw	low comportamientoBasico@cambioOrientacionCarro
  2919  001CDC  6FDC               	movwf	decidirDireccion@cambioOrientacionCarro& (0+255),b
  2920  001CDE  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  2921  001CE0  6FDD               	movwf	(decidirDireccion@cambioOrientacionCarro+1)& (0+255),b
  2922  001CE2  0ED1               	movlw	low comportamientoBasico@mapear
  2923  001CE4  6FDE               	movwf	decidirDireccion@mapear& (0+255),b
  2924  001CE6  0E01               	movlw	high comportamientoBasico@mapear
  2925  001CE8  6FDF               	movwf	(decidirDireccion@mapear+1)& (0+255),b
  2926  001CEA  0ED0               	movlw	low comportamientoBasico@cruceDetectado
  2927  001CEC  6FE0               	movwf	decidirDireccion@cruceDetectado& (0+255),b
  2928  001CEE  0E01               	movlw	high comportamientoBasico@cruceDetectado
  2929  001CF0  6FE1               	movwf	(decidirDireccion@cruceDetectado+1)& (0+255),b
  2930  001CF2  0ECA               	movlw	low comportamientoBasico@avanceRectoLargo
  2931  001CF4  6FE2               	movwf	decidirDireccion@avanceRectoLargo& (0+255),b
  2932  001CF6  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  2933  001CF8  6FE3               	movwf	(decidirDireccion@avanceRectoLargo+1)& (0+255),b
  2934  001CFA  ECBA  F008         	call	_decidirDireccion	;wreg free
  2935  001CFE  0100               	movlb	0	; () banked
  2936  001D00  6FFE               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  2937  001D02  EFAD  F00F         	goto	l10685
  2938  001D06                     l10589:
  2939                           
  2940                           ; BSR set to: 1
  2941                           ;main.c: 339:                         mapear = 0;
  2942  001D06  0E00               	movlw	0
  2943  001D08  6FD1               	movwf	comportamientoBasico@mapear& (0+255),b
  2944                           
  2945                           ;main.c: 340:                         espejearCarroY = 1;
  2946  001D0A  0E01               	movlw	1
  2947  001D0C  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  2948                           
  2949                           ;main.c: 341:                         mouse.Next_state = IZQUIERDA;
  2950  001D0E  0E02               	movlw	2
  2951  001D10  6E58               	movwf	(_mouse+1)^0,c
  2952                           
  2953                           ;main.c: 342:                         break;
  2954  001D12  EFCB  F00F         	goto	l387
  2955  001D16                     l10591:
  2956                           
  2957                           ; BSR set to: 1
  2958                           ;main.c: 346:                         if (!paredEnfrente)
  2959  001D16  513C               	movf	_paredEnfrente& (0+255),w,b
  2960  001D18  A4D8               	btfss	status,2,c
  2961  001D1A  EF91  F00E         	goto	u11711
  2962  001D1E  EF93  F00E         	goto	u11710
  2963  001D22                     u11711:
  2964  001D22  EF97  F00E         	goto	l10595
  2965  001D26                     u11710:
  2966  001D26                     
  2967                           ; BSR set to: 1
  2968                           ;main.c: 347:                             velocidadBaja();
  2969  001D26  EC71  F02B         	call	_velocidadBaja	;wreg free
  2970  001D2A  EF99  F00E         	goto	l10597
  2971  001D2E                     l10595:
  2972                           
  2973                           ; BSR set to: 1
  2974                           ;main.c: 349:                             PID();
  2975  001D2E  EC22  F017         	call	_PID	;wreg free
  2976  001D32                     l10597:
  2977                           
  2978                           ;main.c: 351:                         mouse.Next_state = ENFRENTE;
  2979  001D32  0E01               	movlw	1
  2980  001D34  6E58               	movwf	(_mouse+1)^0,c
  2981                           
  2982                           ;main.c: 352:                         break;
  2983  001D36  EFCB  F00F         	goto	l387
  2984  001D3A                     l10599:
  2985                           
  2986                           ; BSR set to: 1
  2987                           ;main.c: 355:                         velocidadEstandar();
  2988  001D3A  EC5E  F02B         	call	_velocidadEstandar	;wreg free
  2989  001D3E                     l10601:
  2990                           
  2991                           ;main.c: 356:                         mouse.Next_state = IZQUIERDA;
  2992  001D3E  0E02               	movlw	2
  2993  001D40  6E58               	movwf	(_mouse+1)^0,c
  2994                           
  2995                           ;main.c: 357:                         break;
  2996  001D42  EFCB  F00F         	goto	l387
  2997  001D46                     l10603:
  2998                           
  2999                           ; BSR set to: 1
  3000                           ;main.c: 360:                         velocidadEstandar();
  3001  001D46  EC5E  F02B         	call	_velocidadEstandar	;wreg free
  3002  001D4A                     
  3003                           ;main.c: 361:                         mouse.Next_state = DERECHA;
  3004  001D4A  0E03               	movlw	3
  3005  001D4C  6E58               	movwf	(_mouse+1)^0,c
  3006                           
  3007                           ;main.c: 362:                         break;
  3008  001D4E  EFCB  F00F         	goto	l387
  3009  001D52                     l10607:
  3010                           
  3011                           ; BSR set to: 1
  3012                           ;main.c: 366:                         mouse.Next_state = ALTO;
  3013  001D52  0E04               	movlw	4
  3014  001D54  6E58               	movwf	(_mouse+1)^0,c
  3015                           
  3016                           ;main.c: 367:                         break;
  3017  001D56  EFCB  F00F         	goto	l387
  3018  001D5A                     l10611:
  3019                           
  3020                           ; BSR set to: 1
  3021  001D5A  0100               	movlb	0	; () banked
  3022  001D5C  51FE               	movf	comportamientoBasico@direccionElegida& (0+255),w,b
  3023  001D5E  0101               	movlb	1	; () banked
  3024  001D60  6FE4               	movwf	??_comportamientoBasico& (0+255),b
  3025  001D62  6BE5               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3026                           
  3027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3028                           ; Switch size 1, requested type "simple"
  3029                           ; Number of cases is 1, Range of values is 0 to 0
  3030                           ; switch strategies available:
  3031                           ; Name         Instructions Cycles
  3032                           ; simple_byte            4     3 (average)
  3033                           ;	Chosen strategy is simple_byte
  3034  001D64  51E5               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3035  001D66  0A00               	xorlw	0	; case 0
  3036  001D68  B4D8               	btfsc	status,2,c
  3037  001D6A  EFB9  F00E         	goto	l11231
  3038  001D6E  EFCB  F00F         	goto	l387
  3039  001D72                     l11231:
  3040                           
  3041                           ; BSR set to: 1
  3042                           ; Switch size 1, requested type "simple"
  3043                           ; Number of cases is 5, Range of values is 0 to 4
  3044                           ; switch strategies available:
  3045                           ; Name         Instructions Cycles
  3046                           ; simple_byte           16     9 (average)
  3047                           ;	Chosen strategy is simple_byte
  3048  001D72  51E4               	movf	??_comportamientoBasico& (0+255),w,b
  3049  001D74  0A00               	xorlw	0	; case 0
  3050  001D76  B4D8               	btfsc	status,2,c
  3051  001D78  EF83  F00E         	goto	l10589
  3052  001D7C  0A01               	xorlw	1	; case 1
  3053  001D7E  B4D8               	btfsc	status,2,c
  3054  001D80  EF8B  F00E         	goto	l10591
  3055  001D84  0A03               	xorlw	3	; case 2
  3056  001D86  B4D8               	btfsc	status,2,c
  3057  001D88  EF9D  F00E         	goto	l10599
  3058  001D8C  0A01               	xorlw	1	; case 3
  3059  001D8E  B4D8               	btfsc	status,2,c
  3060  001D90  EFA3  F00E         	goto	l10603
  3061  001D94  0A07               	xorlw	7	; case 4
  3062  001D96  B4D8               	btfsc	status,2,c
  3063  001D98  EFA9  F00E         	goto	l10607
  3064  001D9C  EFCB  F00F         	goto	l387
  3065  001DA0                     l10613:
  3066                           
  3067                           ; BSR set to: 1
  3068                           ;main.c: 375:                 if (carroEspejeado && espejearCarroY && !llegoDestino) {
  3069  001DA0  5059               	movf	comportamientoBasico@carroEspejeado^0,w,c
  3070  001DA2  B4D8               	btfsc	status,2,c
  3071  001DA4  EFD6  F00E         	goto	u11721
  3072  001DA8  EFD8  F00E         	goto	u11720
  3073  001DAC                     u11721:
  3074  001DAC  EF0B  F00F         	goto	l10633
  3075  001DB0                     u11720:
  3076  001DB0                     
  3077                           ; BSR set to: 1
  3078  001DB0  5139               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3079  001DB2  B4D8               	btfsc	status,2,c
  3080  001DB4  EFDE  F00E         	goto	u11731
  3081  001DB8  EFE0  F00E         	goto	u11730
  3082  001DBC                     u11731:
  3083  001DBC  EF0B  F00F         	goto	l10633
  3084  001DC0                     u11730:
  3085  001DC0                     
  3086                           ; BSR set to: 1
  3087  001DC0  0100               	movlb	0	; () banked
  3088  001DC2  51FF               	movf	_llegoDestino& (0+255),w,b
  3089  001DC4  A4D8               	btfss	status,2,c
  3090  001DC6  EFE7  F00E         	goto	u11741
  3091  001DCA  EFE9  F00E         	goto	u11740
  3092  001DCE                     u11741:
  3093  001DCE  EF0B  F00F         	goto	l10633
  3094  001DD2                     u11740:
  3095  001DD2                     
  3096                           ; BSR set to: 0
  3097                           ;main.c: 377:                     espejearCarroY = 0;
  3098  001DD2  0E00               	movlw	0
  3099  001DD4  0101               	movlb	1	; () banked
  3100  001DD6  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3101                           
  3102                           ;main.c: 378:                     carroEspejeado = 0;
  3103  001DD8  0E00               	movlw	0
  3104  001DDA  6E59               	movwf	comportamientoBasico@carroEspejeado^0,c
  3105  001DDC                     
  3106                           ; BSR set to: 1
  3107                           ;main.c: 380:                     regresarAlCruce(movimientosRealizados, numMovimientos)
      +                          ;
  3108  001DDC  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3109  001DDE  0100               	movlb	0	; () banked
  3110  001DE0  6F9A               	movwf	regresarAlCruce@movimientos& (0+255),b
  3111  001DE2  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3112  001DE4  6F9B               	movwf	(regresarAlCruce@movimientos+1)& (0+255),b
  3113  001DE6  C1C8  F09C         	movff	comportamientoBasico@numMovimientos,regresarAlCruce@numMovimientos
  3114  001DEA  C1C9  F09D         	movff	comportamientoBasico@numMovimientos+1,regresarAlCruce@numMovimientos+1
  3115  001DEE  EC53  F024         	call	_regresarAlCruce	;wreg free
  3116  001DF2                     
  3117                           ;main.c: 381:                     limpiarMovimientos(movimientosRealizados, &numMovimien
      +                          tos);
  3118  001DF2  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3119  001DF4  6E06               	movwf	limpiarMovimientos@movimientos^0,c
  3120  001DF6  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3121  001DF8  6E07               	movwf	(limpiarMovimientos@movimientos+1)^0,c
  3122  001DFA  0EC8               	movlw	low comportamientoBasico@numMovimientos
  3123  001DFC  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
  3124  001DFE  0E01               	movlw	high comportamientoBasico@numMovimientos
  3125  001E00  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
  3126  001E02  EC77  F029         	call	_limpiarMovimientos	;wreg free
  3127  001E06                     
  3128                           ;main.c: 383:                     cruceDetectado = 0;
  3129  001E06  0E00               	movlw	0
  3130  001E08  0101               	movlb	1	; () banked
  3131  001E0A  6FD0               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  3132  001E0C                     
  3133                           ; BSR set to: 1
  3134                           ;main.c: 384:                     posicionInvCruce = 1;
  3135  001E0C  0E01               	movlw	1
  3136  001E0E  6FCE               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  3137  001E10                     
  3138                           ; BSR set to: 1
  3139                           ;main.c: 385:                     contCaminosRecorridos++;
  3140  001E10  2BCD               	incf	comportamientoBasico@contCaminosRecorridos& (0+255),f,b
  3141  001E12  EFA9  F00E         	goto	l10607
  3142  001E16                     l10633:
  3143  001E16  0101               	movlb	1	; () banked
  3144  001E18  5139               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3145  001E1A  B4D8               	btfsc	status,2,c
  3146  001E1C  EF12  F00F         	goto	u11751
  3147  001E20  EF14  F00F         	goto	u11750
  3148  001E24                     u11751:
  3149  001E24  EF99  F00E         	goto	l10597
  3150  001E28                     u11750:
  3151  001E28                     
  3152                           ; BSR set to: 1
  3153  001E28  5059               	movf	comportamientoBasico@carroEspejeado^0,w,c
  3154  001E2A  B4D8               	btfsc	status,2,c
  3155  001E2C  EF1A  F00F         	goto	u11761
  3156  001E30  EF1C  F00F         	goto	u11760
  3157  001E34                     u11761:
  3158  001E34  EF99  F00E         	goto	l10597
  3159  001E38                     u11760:
  3160  001E38                     
  3161                           ; BSR set to: 1
  3162  001E38  0100               	movlb	0	; () banked
  3163  001E3A  51FF               	movf	_llegoDestino& (0+255),w,b
  3164  001E3C  B4D8               	btfsc	status,2,c
  3165  001E3E  EF23  F00F         	goto	u11771
  3166  001E42  EF25  F00F         	goto	u11770
  3167  001E46                     u11771:
  3168  001E46  EF99  F00E         	goto	l10597
  3169  001E4A                     u11770:
  3170  001E4A                     
  3171                           ; BSR set to: 0
  3172                           ;main.c: 388:                     espejearCarroY = 0;
  3173  001E4A  0E00               	movlw	0
  3174  001E4C  0101               	movlb	1	; () banked
  3175  001E4E  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3176                           
  3177                           ;main.c: 389:                     mouse.Next_state = ALTO;
  3178  001E50  0E04               	movlw	4
  3179  001E52  6E58               	movwf	(_mouse+1)^0,c
  3180                           
  3181                           ;main.c: 391:                 } else {
  3182  001E54  EFCB  F00F         	goto	l387
  3183  001E58                     l10645:
  3184                           
  3185                           ; BSR set to: 1
  3186                           ;main.c: 403:                 if (llegoDestino && carroEspejeado) {
  3187  001E58  0100               	movlb	0	; () banked
  3188  001E5A  51FF               	movf	_llegoDestino& (0+255),w,b
  3189  001E5C  B4D8               	btfsc	status,2,c
  3190  001E5E  EF33  F00F         	goto	u11781
  3191  001E62  EF35  F00F         	goto	u11780
  3192  001E66                     u11781:
  3193  001E66  EF59  F00F         	goto	l10661
  3194  001E6A                     u11780:
  3195  001E6A                     
  3196                           ; BSR set to: 0
  3197  001E6A  5059               	movf	comportamientoBasico@carroEspejeado^0,w,c
  3198  001E6C  B4D8               	btfsc	status,2,c
  3199  001E6E  EF3B  F00F         	goto	u11791
  3200  001E72  EF3D  F00F         	goto	u11790
  3201  001E76                     u11791:
  3202  001E76  EF59  F00F         	goto	l10661
  3203  001E7A                     u11790:
  3204  001E7A                     
  3205                           ; BSR set to: 0
  3206                           ;main.c: 405:                     carroEspejeado = 0;
  3207  001E7A  0E00               	movlw	0
  3208  001E7C  6E59               	movwf	comportamientoBasico@carroEspejeado^0,c
  3209  001E7E                     
  3210                           ; BSR set to: 0
  3211                           ;main.c: 406:                     regresarPuntoPartida(caminoFinal, numMovimientosTotale
      +                          s);
  3212  001E7E  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3213  001E80  6F9A               	movwf	regresarPuntoPartida@movimientos& (0+255),b
  3214  001E82  0E02               	movlw	high comportamientoBasico@caminoFinal
  3215  001E84  6F9B               	movwf	(regresarPuntoPartida@movimientos+1)& (0+255),b
  3216  001E86  C1C6  F09C         	movff	comportamientoBasico@numMovimientosTotales,regresarPuntoPartida@numMovimientos
  3217  001E8A  C1C7  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,regresarPuntoPartida@numMovimientos+
      +                          1
  3218  001E8E  ECFE  F024         	call	_regresarPuntoPartida	;wreg free
  3219  001E92                     
  3220                           ;main.c: 407:                     llegoDestino = 0;
  3221  001E92  0E00               	movlw	0
  3222  001E94  0100               	movlb	0	; () banked
  3223  001E96  6FFF               	movwf	_llegoDestino& (0+255),b
  3224  001E98                     
  3225                           ; BSR set to: 0
  3226                           ;main.c: 408:                     caminoEncontrado = 1;
  3227  001E98  0E01               	movlw	1
  3228  001E9A  0101               	movlb	1	; () banked
  3229  001E9C  6F38               	movwf	comportamientoBasico@caminoEncontrado& (0+255),b
  3230  001E9E                     
  3231                           ; BSR set to: 1
  3232                           ;main.c: 409:                     finalizarRecorrido();
  3233  001E9E  ECF1  F02B         	call	_finalizarRecorrido	;wreg free
  3234  001EA2                     
  3235                           ;main.c: 410:                     UART_printf("\rSe regreso al punto de partida\r\n");
  3236  001EA2  0E66               	movlw	low STR_14
  3237  001EA4  6E07               	movwf	UART_printf@cadena^0,c
  3238  001EA6  0E7E               	movlw	high STR_14
  3239  001EA8  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3240  001EAA  EC1D  F028         	call	_UART_printf	;wreg free
  3241                           
  3242                           ;main.c: 411:                 } else if (llegoDestino && !carroEspejeado) {
  3243  001EAE  EFCB  F00F         	goto	l387
  3244  001EB2                     l10661:
  3245                           
  3246                           ; BSR set to: 0
  3247  001EB2  51FF               	movf	_llegoDestino& (0+255),w,b
  3248  001EB4  B4D8               	btfsc	status,2,c
  3249  001EB6  EF5F  F00F         	goto	u11801
  3250  001EBA  EF61  F00F         	goto	u11800
  3251  001EBE                     u11801:
  3252  001EBE  EF95  F00F         	goto	l10675
  3253  001EC2                     u11800:
  3254  001EC2                     
  3255                           ; BSR set to: 0
  3256  001EC2  5059               	movf	comportamientoBasico@carroEspejeado^0,w,c
  3257  001EC4  A4D8               	btfss	status,2,c
  3258  001EC6  EF67  F00F         	goto	u11811
  3259  001ECA  EF69  F00F         	goto	u11810
  3260  001ECE                     u11811:
  3261  001ECE  EF95  F00F         	goto	l10675
  3262  001ED2                     u11810:
  3263  001ED2                     
  3264                           ; BSR set to: 0
  3265                           ;main.c: 413:                     caminoCorrecto(movimientosRealizados, caminoFinal, num
      +                          Movimientos,
  3266  001ED2  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3267  001ED4  6E12               	movwf	caminoCorrecto@movimientos^0,c
  3268  001ED6  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3269  001ED8  6E13               	movwf	(caminoCorrecto@movimientos+1)^0,c
  3270  001EDA  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3271  001EDC  6E14               	movwf	caminoCorrecto@caminoFinal^0,c
  3272  001EDE  0E02               	movlw	high comportamientoBasico@caminoFinal
  3273  001EE0  6E15               	movwf	(caminoCorrecto@caminoFinal+1)^0,c
  3274  001EE2  C1C8  F016         	movff	comportamientoBasico@numMovimientos,caminoCorrecto@numMovimientos
  3275  001EE6  C1C9  F017         	movff	comportamientoBasico@numMovimientos+1,caminoCorrecto@numMovimientos+1
  3276  001EEA  0EC6               	movlw	low comportamientoBasico@numMovimientosTotales
  3277  001EEC  6E18               	movwf	caminoCorrecto@numMovimientosFinal^0,c
  3278  001EEE  0E01               	movlw	high comportamientoBasico@numMovimientosTotales
  3279  001EF0  6E19               	movwf	(caminoCorrecto@numMovimientosFinal+1)^0,c
  3280  001EF2  C1CC  F01A         	movff	comportamientoBasico@caminoActual,caminoCorrecto@caminoActual
  3281  001EF6  EC53  F02A         	call	_caminoCorrecto	;wreg free
  3282  001EFA                     
  3283                           ;main.c: 416:                     espejearCarroY = 1;
  3284  001EFA  0E01               	movlw	1
  3285  001EFC  0101               	movlb	1	; () banked
  3286  001EFE  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3287  001F00                     
  3288                           ; BSR set to: 1
  3289                           ;main.c: 417:                     UART_printf("\rSe llego Al destino\r\n");
  3290  001F00  0E7B               	movlw	low STR_15
  3291  001F02  6E07               	movwf	UART_printf@cadena^0,c
  3292  001F04  0E7F               	movlw	high STR_15
  3293  001F06  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3294  001F08  EC1D  F028         	call	_UART_printf	;wreg free
  3295  001F0C                     
  3296                           ;main.c: 418:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
  3297  001F0C  0E10               	movlw	16
  3298  001F0E  0101               	movlb	1	; () banked
  3299  001F10  6FE5               	movwf	(??_comportamientoBasico+1)& (0+255),b
  3300  001F12  0E39               	movlw	57
  3301  001F14  6FE4               	movwf	??_comportamientoBasico& (0+255),b
  3302  001F16  0E0D               	movlw	13
  3303  001F18                     u11987:
  3304  001F18  2EE8               	decfsz	wreg,f,c
  3305  001F1A  D7FE               	bra	u11987
  3306  001F1C  2FE4               	decfsz	??_comportamientoBasico& (0+255),f,b
  3307  001F1E  D7FC               	bra	u11987
  3308  001F20  2FE5               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  3309  001F22  D7FA               	bra	u11987
  3310  001F24  D000               	nop2	
  3311  001F26  EF9F  F00E         	goto	l10601
  3312  001F2A                     l10675:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;main.c: 422:                     if (direccionElegida == IZQUIERDA || direccionElegida 
      +                          == DERECHA)
  3316  001F2A  0E02               	movlw	2
  3317  001F2C  19FE               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3318  001F2E  B4D8               	btfsc	status,2,c
  3319  001F30  EF9C  F00F         	goto	u11821
  3320  001F34  EF9E  F00F         	goto	u11820
  3321  001F38                     u11821:
  3322  001F38  EFA7  F00F         	goto	l10679
  3323  001F3C                     u11820:
  3324  001F3C                     
  3325                           ; BSR set to: 0
  3326  001F3C  0E03               	movlw	3
  3327  001F3E  19FE               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3328  001F40  A4D8               	btfss	status,2,c
  3329  001F42  EFA5  F00F         	goto	u11831
  3330  001F46  EFA7  F00F         	goto	u11830
  3331  001F4A                     u11831:
  3332  001F4A  EFA9  F00F         	goto	l10681
  3333  001F4E                     u11830:
  3334  001F4E                     l10679:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;main.c: 423:                         velocidadEstandar();
  3338  001F4E  EC5E  F02B         	call	_velocidadEstandar	;wreg free
  3339  001F52                     l10681:
  3340                           
  3341                           ;main.c: 425:                     mouse.Next_state = direccionElegida;
  3342  001F52  C0FE  F058         	movff	comportamientoBasico@direccionElegida,_mouse+1
  3343  001F56  EFCB  F00F         	goto	l387
  3344  001F5A                     l10685:
  3345                           
  3346                           ; BSR set to: 0
  3347  001F5A  5057               	movf	_mouse^0,w,c
  3348  001F5C  0101               	movlb	1	; () banked
  3349  001F5E  6FE4               	movwf	??_comportamientoBasico& (0+255),b
  3350  001F60  6BE5               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3351                           
  3352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3353                           ; Switch size 1, requested type "simple"
  3354                           ; Number of cases is 1, Range of values is 0 to 0
  3355                           ; switch strategies available:
  3356                           ; Name         Instructions Cycles
  3357                           ; simple_byte            4     3 (average)
  3358                           ;	Chosen strategy is simple_byte
  3359  001F62  51E5               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3360  001F64  0A00               	xorlw	0	; case 0
  3361  001F66  B4D8               	btfsc	status,2,c
  3362  001F68  EFB8  F00F         	goto	l11233
  3363  001F6C  EFCB  F00F         	goto	l387
  3364  001F70                     l11233:
  3365                           
  3366                           ; BSR set to: 1
  3367                           ; Switch size 1, requested type "simple"
  3368                           ; Number of cases is 4, Range of values is 1 to 4
  3369                           ; switch strategies available:
  3370                           ; Name         Instructions Cycles
  3371                           ; simple_byte           13     7 (average)
  3372                           ;	Chosen strategy is simple_byte
  3373  001F70  51E4               	movf	??_comportamientoBasico& (0+255),w,b
  3374  001F72  0A01               	xorlw	1	; case 1
  3375  001F74  B4D8               	btfsc	status,2,c
  3376  001F76  EFAD  F00E         	goto	l10611
  3377  001F7A  0A03               	xorlw	3	; case 2
  3378  001F7C  B4D8               	btfsc	status,2,c
  3379  001F7E  EFD0  F00E         	goto	l10613
  3380  001F82  0A01               	xorlw	1	; case 3
  3381  001F84  B4D8               	btfsc	status,2,c
  3382  001F86  EF99  F00E         	goto	l10597
  3383  001F8A  0A07               	xorlw	7	; case 4
  3384  001F8C  B4D8               	btfsc	status,2,c
  3385  001F8E  EF2C  F00F         	goto	l10645
  3386  001F92  EFCB  F00F         	goto	l387
  3387  001F96                     l387:
  3388                           
  3389                           ;main.c: 431:         mouse.curr_state = mouse.Next_state;
  3390  001F96  C058  F057         	movff	_mouse+1,_mouse
  3391                           
  3392                           ;main.c: 433:     } else {
  3393  001F9A  EFF6  F00F         	goto	l403
  3394  001F9E                     l10687:
  3395                           
  3396                           ; BSR set to: 1
  3397                           ;main.c: 434:         recorrerCaminoEncontrado(caminoFinal, numMovimientosTotales);
  3398  001F9E  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3399  001FA0  0100               	movlb	0	; () banked
  3400  001FA2  6F9A               	movwf	recorrerCaminoEncontrado@movimientos& (0+255),b
  3401  001FA4  0E02               	movlw	high comportamientoBasico@caminoFinal
  3402  001FA6  6F9B               	movwf	(recorrerCaminoEncontrado@movimientos+1)& (0+255),b
  3403  001FA8  C1C6  F09C         	movff	comportamientoBasico@numMovimientosTotales,recorrerCaminoEncontrado@numMovimiento
      +                          s
  3404  001FAC  C1C7  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,recorrerCaminoEncontrado@numMovimien
      +                          tos+1
  3405  001FB0  ECE9  F025         	call	_recorrerCaminoEncontrado	;wreg free
  3406  001FB4                     
  3407                           ;main.c: 435:         _delay((unsigned long)((3000)*(4000000/4000.0)));
  3408  001FB4  0E10               	movlw	16
  3409  001FB6  0101               	movlb	1	; () banked
  3410  001FB8  6FE5               	movwf	(??_comportamientoBasico+1)& (0+255),b
  3411  001FBA  0E39               	movlw	57
  3412  001FBC  6FE4               	movwf	??_comportamientoBasico& (0+255),b
  3413  001FBE  0E0D               	movlw	13
  3414  001FC0                     u11997:
  3415  001FC0  2EE8               	decfsz	wreg,f,c
  3416  001FC2  D7FE               	bra	u11997
  3417  001FC4  2FE4               	decfsz	??_comportamientoBasico& (0+255),f,b
  3418  001FC6  D7FC               	bra	u11997
  3419  001FC8  2FE5               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  3420  001FCA  D7FA               	bra	u11997
  3421  001FCC  D000               	nop2	
  3422  001FCE                     
  3423                           ;main.c: 436:         forzarEspejeo();
  3424  001FCE  EC98  F02A         	call	_forzarEspejeo	;wreg free
  3425  001FD2                     
  3426                           ;main.c: 437:         regresarPuntoPartida(caminoFinal, numMovimientosTotales);
  3427  001FD2  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3428  001FD4  0100               	movlb	0	; () banked
  3429  001FD6  6F9A               	movwf	regresarPuntoPartida@movimientos& (0+255),b
  3430  001FD8  0E02               	movlw	high comportamientoBasico@caminoFinal
  3431  001FDA  6F9B               	movwf	(regresarPuntoPartida@movimientos+1)& (0+255),b
  3432  001FDC  C1C6  F09C         	movff	comportamientoBasico@numMovimientosTotales,regresarPuntoPartida@numMovimientos
  3433  001FE0  C1C7  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,regresarPuntoPartida@numMovimientos+
      +                          1
  3434  001FE4  ECFE  F024         	call	_regresarPuntoPartida	;wreg free
  3435  001FE8                     
  3436                           ;main.c: 438:         finalizarRecorrido();
  3437  001FE8  ECF1  F02B         	call	_finalizarRecorrido	;wreg free
  3438  001FEC                     l403:
  3439  001FEC  0012               	return		;funcret
  3440  001FEE                     __end_of_comportamientoBasico:
  3441                           	opt callstack 0
  3442                           
  3443 ;; *************** function _regresarPuntoPartida *****************
  3444 ;; Defined at:
  3445 ;;		line 653 in file "main.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  3448 ;;		 -> comportamientoBasico@caminoFinal(1000), 
  3449 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  i               2   62[BANK0 ] int 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3461 ;;      Params:         0       4       0       0       0       0       0       0       0
  3462 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3463 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3464 ;;      Totals:         1       6       0       0       0       0       0       0       0
  3465 ;;Total ram usage:        7 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    6
  3468 ;; This function calls:
  3469 ;;		_PID
  3470 ;;		_mover
  3471 ;;		_velocidadEstandar
  3472 ;; This function is called by:
  3473 ;;		_comportamientoBasico
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text6
  3478  0049FC                     __ptext6:
  3479                           	opt callstack 0
  3480  0049FC                     _regresarPuntoPartida:
  3481                           	opt callstack 23
  3482  0049FC                     
  3483                           ;main.c: 655:     for (T_INT i = numMovimientos - 1; i >= 0; i--) {
  3484  0049FC  0EFF               	movlw	255
  3485  0049FE  0100               	movlb	0	; () banked
  3486  004A00  259C               	addwf	regresarPuntoPartida@numMovimientos& (0+255),w,b
  3487  004A02  6F9E               	movwf	regresarPuntoPartida@i& (0+255),b
  3488  004A04  0EFF               	movlw	255
  3489  004A06  219D               	addwfc	(regresarPuntoPartida@numMovimientos+1)& (0+255),w,b
  3490  004A08  6F9F               	movwf	(regresarPuntoPartida@i+1)& (0+255),b
  3491  004A0A  BF9F               	btfsc	(regresarPuntoPartida@i+1)& (0+255),7,b
  3492  004A0C  EF0C  F025         	goto	u11580
  3493  004A10  EF0A  F025         	goto	u11581
  3494  004A14                     u11581:
  3495  004A14  EF0E  F025         	goto	l10431
  3496  004A18                     u11580:
  3497  004A18  EF50  F025         	goto	l465
  3498  004A1C                     l10431:
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;main.c: 657:         if (movimientos[i] == IZQUIERDA) {
  3502  004A1C  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  3503  004A1E  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  3504  004A20  6ED9               	movwf	fsr2l,c
  3505  004A22  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  3506  004A24  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  3507  004A26  6EDA               	movwf	fsr2h,c
  3508  004A28  0E02               	movlw	2
  3509  004A2A  18DE               	xorwf	postinc2,w,c
  3510  004A2C  A4D8               	btfss	status,2,c
  3511  004A2E  EF1B  F025         	goto	u11591
  3512  004A32  EF1D  F025         	goto	u11590
  3513  004A36                     u11591:
  3514  004A36  EF23  F025         	goto	l10437
  3515  004A3A                     u11590:
  3516  004A3A                     
  3517                           ; BSR set to: 0
  3518                           ;main.c: 658:             velocidadEstandar();
  3519  004A3A  EC5E  F02B         	call	_velocidadEstandar	;wreg free
  3520  004A3E                     
  3521                           ;main.c: 659:             mouse.curr_state = DERECHA;
  3522  004A3E  0E03               	movlw	3
  3523  004A40  6E57               	movwf	_mouse^0,c
  3524                           
  3525                           ;main.c: 660:         } else if (movimientos[i] == DERECHA) {
  3526  004A42  EF43  F025         	goto	l10447
  3527  004A46                     l10437:
  3528                           
  3529                           ; BSR set to: 0
  3530  004A46  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  3531  004A48  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  3532  004A4A  6ED9               	movwf	fsr2l,c
  3533  004A4C  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  3534  004A4E  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  3535  004A50  6EDA               	movwf	fsr2h,c
  3536  004A52  0E03               	movlw	3
  3537  004A54  18DE               	xorwf	postinc2,w,c
  3538  004A56  A4D8               	btfss	status,2,c
  3539  004A58  EF30  F025         	goto	u11601
  3540  004A5C  EF32  F025         	goto	u11600
  3541  004A60                     u11601:
  3542  004A60  EF38  F025         	goto	l10443
  3543  004A64                     u11600:
  3544  004A64                     
  3545                           ; BSR set to: 0
  3546                           ;main.c: 661:             velocidadEstandar();
  3547  004A64  EC5E  F02B         	call	_velocidadEstandar	;wreg free
  3548  004A68                     
  3549                           ;main.c: 662:             mouse.curr_state = IZQUIERDA;
  3550  004A68  0E02               	movlw	2
  3551  004A6A  6E57               	movwf	_mouse^0,c
  3552                           
  3553                           ;main.c: 663:         } else {
  3554  004A6C  EF43  F025         	goto	l10447
  3555  004A70                     l10443:
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;main.c: 665:             PID();
  3559  004A70  EC22  F017         	call	_PID	;wreg free
  3560  004A74                     
  3561                           ;main.c: 666:             mouse.curr_state = movimientos[i];
  3562  004A74  0100               	movlb	0	; () banked
  3563  004A76  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  3564  004A78  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  3565  004A7A  6ED9               	movwf	fsr2l,c
  3566  004A7C  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  3567  004A7E  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  3568  004A80  6EDA               	movwf	fsr2h,c
  3569  004A82  50DF               	movf	indf2,w,c
  3570  004A84  6E57               	movwf	_mouse^0,c
  3571  004A86                     l10447:
  3572                           
  3573                           ;main.c: 669:         mover();
  3574  004A86  EC51  F025         	call	_mover	;wreg free
  3575  004A8A                     
  3576                           ;main.c: 670:     }
  3577  004A8A  0100               	movlb	0	; () banked
  3578  004A8C  079E               	decf	regresarPuntoPartida@i& (0+255),f,b
  3579  004A8E  A0D8               	btfss	status,0,c
  3580  004A90  079F               	decf	(regresarPuntoPartida@i+1)& (0+255),f,b
  3581  004A92                     
  3582                           ; BSR set to: 0
  3583  004A92  BF9F               	btfsc	(regresarPuntoPartida@i+1)& (0+255),7,b
  3584  004A94  EF50  F025         	goto	u11610
  3585  004A98  EF4E  F025         	goto	u11611
  3586  004A9C                     u11611:
  3587  004A9C  EF0E  F025         	goto	l10431
  3588  004AA0                     u11610:
  3589  004AA0                     l465:
  3590                           
  3591                           ; BSR set to: 0
  3592  004AA0  0012               	return		;funcret
  3593  004AA2                     __end_of_regresarPuntoPartida:
  3594                           	opt callstack 0
  3595                           
  3596 ;; *************** function _regresarAlCruce *****************
  3597 ;; Defined at:
  3598 ;;		line 673 in file "main.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  3601 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  3602 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  i               2   62[BANK0 ] int 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3614 ;;      Params:         0       4       0       0       0       0       0       0       0
  3615 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3616 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3617 ;;      Totals:         1       6       0       0       0       0       0       0       0
  3618 ;;Total ram usage:        7 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    6
  3621 ;; This function calls:
  3622 ;;		_PID
  3623 ;;		_mover
  3624 ;;		_velocidadEstandar
  3625 ;; This function is called by:
  3626 ;;		_comportamientoBasico
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text7
  3631  0048A6                     __ptext7:
  3632                           	opt callstack 0
  3633  0048A6                     _regresarAlCruce:
  3634                           	opt callstack 23
  3635  0048A6                     
  3636                           ;main.c: 675:     movimientos[1] = ENFRENTE;
  3637  0048A6  0100               	movlb	0	; () banked
  3638  0048A8  EE20 F001          	lfsr	2,1
  3639  0048AC  519A               	movf	regresarAlCruce@movimientos& (0+255),w,b
  3640  0048AE  26D9               	addwf	fsr2l,f,c
  3641  0048B0  519B               	movf	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3642  0048B2  22DA               	addwfc	fsr2h,f,c
  3643  0048B4  0E01               	movlw	1
  3644  0048B6  6EDF               	movwf	indf2,c
  3645  0048B8                     
  3646                           ; BSR set to: 0
  3647                           ;main.c: 677:     for (T_INT i = numMovimientos - 1; i >= 0; i--) {
  3648  0048B8  0EFF               	movlw	255
  3649  0048BA  259C               	addwf	regresarAlCruce@numMovimientos& (0+255),w,b
  3650  0048BC  6F9E               	movwf	regresarAlCruce@i& (0+255),b
  3651  0048BE  0EFF               	movlw	255
  3652  0048C0  219D               	addwfc	(regresarAlCruce@numMovimientos+1)& (0+255),w,b
  3653  0048C2  6F9F               	movwf	(regresarAlCruce@i+1)& (0+255),b
  3654  0048C4                     l10401:
  3655                           
  3656                           ; BSR set to: 0
  3657  0048C4  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  3658  0048C6  EF69  F024         	goto	u11550
  3659  0048CA  EF67  F024         	goto	u11551
  3660  0048CE                     u11551:
  3661  0048CE  EF6B  F024         	goto	l10405
  3662  0048D2                     u11550:
  3663  0048D2  EFA8  F024         	goto	l474
  3664  0048D6                     l10405:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;main.c: 681:         if (movimientos[i] == IZQUIERDA) {
  3668  0048D6  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3669  0048D8  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3670  0048DA  6ED9               	movwf	fsr2l,c
  3671  0048DC  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3672  0048DE  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3673  0048E0  6EDA               	movwf	fsr2h,c
  3674  0048E2  0E02               	movlw	2
  3675  0048E4  18DE               	xorwf	postinc2,w,c
  3676  0048E6  A4D8               	btfss	status,2,c
  3677  0048E8  EF78  F024         	goto	u11561
  3678  0048EC  EF7A  F024         	goto	u11560
  3679  0048F0                     u11561:
  3680  0048F0  EF80  F024         	goto	l10411
  3681  0048F4                     u11560:
  3682  0048F4                     
  3683                           ; BSR set to: 0
  3684                           ;main.c: 682:             velocidadEstandar();
  3685  0048F4  EC5E  F02B         	call	_velocidadEstandar	;wreg free
  3686  0048F8                     
  3687                           ;main.c: 683:             mouse.curr_state = DERECHA;
  3688  0048F8  0E03               	movlw	3
  3689  0048FA  6E57               	movwf	_mouse^0,c
  3690                           
  3691                           ;main.c: 684:         } else if (movimientos[i] == DERECHA) {
  3692  0048FC  EFA0  F024         	goto	l10421
  3693  004900                     l10411:
  3694                           
  3695                           ; BSR set to: 0
  3696  004900  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3697  004902  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3698  004904  6ED9               	movwf	fsr2l,c
  3699  004906  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3700  004908  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3701  00490A  6EDA               	movwf	fsr2h,c
  3702  00490C  0E03               	movlw	3
  3703  00490E  18DE               	xorwf	postinc2,w,c
  3704  004910  A4D8               	btfss	status,2,c
  3705  004912  EF8D  F024         	goto	u11571
  3706  004916  EF8F  F024         	goto	u11570
  3707  00491A                     u11571:
  3708  00491A  EF95  F024         	goto	l10417
  3709  00491E                     u11570:
  3710  00491E                     
  3711                           ; BSR set to: 0
  3712                           ;main.c: 685:             velocidadEstandar();
  3713  00491E  EC5E  F02B         	call	_velocidadEstandar	;wreg free
  3714  004922                     
  3715                           ;main.c: 686:             mouse.curr_state = IZQUIERDA;
  3716  004922  0E02               	movlw	2
  3717  004924  6E57               	movwf	_mouse^0,c
  3718                           
  3719                           ;main.c: 687:         } else {
  3720  004926  EFA0  F024         	goto	l10421
  3721  00492A                     l10417:
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;main.c: 689:             PID();
  3725  00492A  EC22  F017         	call	_PID	;wreg free
  3726  00492E                     
  3727                           ;main.c: 690:             mouse.curr_state = movimientos[i];
  3728  00492E  0100               	movlb	0	; () banked
  3729  004930  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3730  004932  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3731  004934  6ED9               	movwf	fsr2l,c
  3732  004936  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3733  004938  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3734  00493A  6EDA               	movwf	fsr2h,c
  3735  00493C  50DF               	movf	indf2,w,c
  3736  00493E  6E57               	movwf	_mouse^0,c
  3737  004940                     l10421:
  3738                           
  3739                           ;main.c: 693:         mover();
  3740  004940  EC51  F025         	call	_mover	;wreg free
  3741  004944                     
  3742                           ;main.c: 694:     }
  3743  004944  0100               	movlb	0	; () banked
  3744  004946  079E               	decf	regresarAlCruce@i& (0+255),f,b
  3745  004948  A0D8               	btfss	status,0,c
  3746  00494A  079F               	decf	(regresarAlCruce@i+1)& (0+255),f,b
  3747  00494C  EF62  F024         	goto	l10401
  3748  004950                     l474:
  3749                           
  3750                           ; BSR set to: 0
  3751  004950  0012               	return		;funcret
  3752  004952                     __end_of_regresarAlCruce:
  3753                           	opt callstack 0
  3754                           
  3755 ;; *************** function _recorrerCaminoEncontrado *****************
  3756 ;; Defined at:
  3757 ;;		line 697 in file "main.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  3760 ;;		 -> comportamientoBasico@caminoFinal(1000), 
  3761 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  i               2   62[BANK0 ] int 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3773 ;;      Params:         0       4       0       0       0       0       0       0       0
  3774 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3775 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3776 ;;      Totals:         1       6       0       0       0       0       0       0       0
  3777 ;;Total ram usage:        7 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    6
  3780 ;; This function calls:
  3781 ;;		_PID
  3782 ;;		_mover
  3783 ;;		_velocidadEstandar
  3784 ;; This function is called by:
  3785 ;;		_comportamientoBasico
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text8
  3790  004BD2                     __ptext8:
  3791                           	opt callstack 0
  3792  004BD2                     _recorrerCaminoEncontrado:
  3793                           	opt callstack 23
  3794  004BD2                     
  3795                           ;main.c: 699:     for (T_INT i = 0; i < numMovimientos; i++) {
  3796  004BD2  0E00               	movlw	0
  3797  004BD4  0100               	movlb	0	; () banked
  3798  004BD6  6F9F               	movwf	(recorrerCaminoEncontrado@i+1)& (0+255),b
  3799  004BD8  0E00               	movlw	0
  3800  004BDA  6F9E               	movwf	recorrerCaminoEncontrado@i& (0+255),b
  3801  004BDC  EF22  F026         	goto	l10475
  3802  004BE0                     l10461:
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;main.c: 701:         if (movimientos[i] == IZQUIERDA || movimientos[i] == DERECHA)
  3806  004BE0  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  3807  004BE2  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  3808  004BE4  6ED9               	movwf	fsr2l,c
  3809  004BE6  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  3810  004BE8  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  3811  004BEA  6EDA               	movwf	fsr2h,c
  3812  004BEC  0E02               	movlw	2
  3813  004BEE  18DE               	xorwf	postinc2,w,c
  3814  004BF0  B4D8               	btfsc	status,2,c
  3815  004BF2  EFFD  F025         	goto	u11621
  3816  004BF6  EFFF  F025         	goto	u11620
  3817  004BFA                     u11621:
  3818  004BFA  EF0E  F026         	goto	l10465
  3819  004BFE                     u11620:
  3820  004BFE                     
  3821                           ; BSR set to: 0
  3822  004BFE  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  3823  004C00  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  3824  004C02  6ED9               	movwf	fsr2l,c
  3825  004C04  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  3826  004C06  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  3827  004C08  6EDA               	movwf	fsr2h,c
  3828  004C0A  0E03               	movlw	3
  3829  004C0C  18DE               	xorwf	postinc2,w,c
  3830  004C0E  A4D8               	btfss	status,2,c
  3831  004C10  EF0C  F026         	goto	u11631
  3832  004C14  EF0E  F026         	goto	u11630
  3833  004C18                     u11631:
  3834  004C18  EF12  F026         	goto	l10467
  3835  004C1C                     u11630:
  3836  004C1C                     l10465:
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;main.c: 702:             velocidadEstandar();
  3840  004C1C  EC5E  F02B         	call	_velocidadEstandar	;wreg free
  3841  004C20  EF14  F026         	goto	l10469
  3842  004C24                     l10467:
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;main.c: 705:             PID();
  3846  004C24  EC22  F017         	call	_PID	;wreg free
  3847  004C28                     l10469:
  3848                           
  3849                           ;main.c: 707:         mouse.curr_state = movimientos[i];
  3850  004C28  0100               	movlb	0	; () banked
  3851  004C2A  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  3852  004C2C  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  3853  004C2E  6ED9               	movwf	fsr2l,c
  3854  004C30  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  3855  004C32  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  3856  004C34  6EDA               	movwf	fsr2h,c
  3857  004C36  50DF               	movf	indf2,w,c
  3858  004C38  6E57               	movwf	_mouse^0,c
  3859  004C3A                     
  3860                           ; BSR set to: 0
  3861                           ;main.c: 708:         mover();
  3862  004C3A  EC51  F025         	call	_mover	;wreg free
  3863  004C3E                     
  3864                           ;main.c: 709:     }
  3865  004C3E  0100               	movlb	0	; () banked
  3866  004C40  4B9E               	infsnz	recorrerCaminoEncontrado@i& (0+255),f,b
  3867  004C42  2B9F               	incf	(recorrerCaminoEncontrado@i+1)& (0+255),f,b
  3868  004C44                     l10475:
  3869                           
  3870                           ; BSR set to: 0
  3871  004C44  519C               	movf	recorrerCaminoEncontrado@numMovimientos& (0+255),w,b
  3872  004C46  5D9E               	subwf	recorrerCaminoEncontrado@i& (0+255),w,b
  3873  004C48  519D               	movf	(recorrerCaminoEncontrado@numMovimientos+1)& (0+255),w,b
  3874  004C4A  599F               	subwfb	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  3875  004C4C  A0D8               	btfss	status,0,c
  3876  004C4E  EF2B  F026         	goto	u11641
  3877  004C52  EF2D  F026         	goto	u11640
  3878  004C56                     u11641:
  3879  004C56  EFF0  F025         	goto	l10461
  3880  004C5A                     u11640:
  3881  004C5A                     
  3882                           ; BSR set to: 0
  3883  004C5A  0012               	return		;funcret
  3884  004C5C                     __end_of_recorrerCaminoEncontrado:
  3885                           	opt callstack 0
  3886                           
  3887 ;; *************** function _mover *****************
  3888 ;; Defined at:
  3889 ;;		line 598 in file "main.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3903 ;;      Params:         0       0       0       0       0       0       0       0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3905 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3906 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3907 ;;Total ram usage:        2 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    3
  3910 ;; This function calls:
  3911 ;;		_forzarAvanceRecto
  3912 ;; This function is called by:
  3913 ;;		_regresarPuntoPartida
  3914 ;;		_regresarAlCruce
  3915 ;;		_recorrerCaminoEncontrado
  3916 ;;		_probarGirosAuto
  3917 ;;		_probarPID
  3918 ;;		_probarCruceT
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text9
  3923  004AA2                     __ptext9:
  3924                           	opt callstack 0
  3925  004AA2                     _mover:
  3926                           	opt callstack 25
  3927  004AA2                     
  3928                           ;main.c: 600:     switch (mouse.curr_state) {
  3929  004AA2  EF80  F025         	goto	l9851
  3930  004AA6                     l450:
  3931                           
  3932                           ;main.c: 604:             LATB4 = 1;
  3933  004AA6  888A               	bsf	3978,4,c	;volatile
  3934                           
  3935                           ;main.c: 605:             LATB5 = 0;
  3936  004AA8  9A8A               	bcf	3978,5,c	;volatile
  3937                           
  3938                           ;main.c: 606:             LATB6 = 1;
  3939  004AAA  8C8A               	bsf	3978,6,c	;volatile
  3940                           
  3941                           ;main.c: 609:             if (!0)
  3942  004AAC  9E8A               	bcf	3978,7,c	;volatile
  3943  004AAE                     
  3944                           ;main.c: 610:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  3945  004AAE  0E48               	movlw	72
  3946  004AB0  6E08               	movwf	??_mover^0,c
  3947  004AB2  0E6C               	movlw	108
  3948  004AB4                     u12007:
  3949  004AB4  2EE8               	decfsz	wreg,f,c
  3950  004AB6  D7FE               	bra	u12007
  3951  004AB8  2E08               	decfsz	??_mover^0,f,c
  3952  004ABA  D7FC               	bra	u12007
  3953  004ABC  D000               	nop2	
  3954  004ABE  EF9D  F025         	goto	l456
  3955  004AC2                     l453:
  3956                           
  3957                           ;main.c: 616:             LATB4 = 0;
  3958  004AC2  988A               	bcf	3978,4,c	;volatile
  3959                           
  3960                           ;main.c: 617:             LATB5 = 0;
  3961  004AC4  9A8A               	bcf	3978,5,c	;volatile
  3962                           
  3963                           ;main.c: 618:             LATB6 = 1;
  3964  004AC6  8C8A               	bsf	3978,6,c	;volatile
  3965                           
  3966                           ;main.c: 619:             LATB7 = 0;
  3967  004AC8  9E8A               	bcf	3978,7,c	;volatile
  3968  004ACA                     l9841:
  3969                           
  3970                           ;main.c: 621:             _delay((unsigned long)((410)*(4000000/4000.0)));
  3971  004ACA  0E03               	movlw	3
  3972  004ACC  6E09               	movwf	(??_mover+1)^0,c
  3973  004ACE  0E15               	movlw	21
  3974  004AD0  6E08               	movwf	??_mover^0,c
  3975  004AD2  0E74               	movlw	116
  3976  004AD4                     u12017:
  3977  004AD4  2EE8               	decfsz	wreg,f,c
  3978  004AD6  D7FE               	bra	u12017
  3979  004AD8  2E08               	decfsz	??_mover^0,f,c
  3980  004ADA  D7FC               	bra	u12017
  3981  004ADC  2E09               	decfsz	(??_mover+1)^0,f,c
  3982  004ADE  D7FA               	bra	u12017
  3983  004AE0                     
  3984                           ;main.c: 623:             forzarAvanceRecto();
  3985  004AE0  EC97  F02B         	call	_forzarAvanceRecto	;wreg free
  3986                           
  3987                           ;main.c: 625:             break;
  3988  004AE4  EF9D  F025         	goto	l456
  3989  004AE8                     l454:
  3990                           
  3991                           ;main.c: 629:             LATB4 = 1;
  3992  004AE8  888A               	bsf	3978,4,c	;volatile
  3993                           
  3994                           ;main.c: 630:             LATB5 = 0;
  3995  004AEA  9A8A               	bcf	3978,5,c	;volatile
  3996                           
  3997                           ;main.c: 631:             LATB6 = 0;
  3998  004AEC  9C8A               	bcf	3978,6,c	;volatile
  3999                           
  4000                           ;main.c: 632:             LATB7 = 0;
  4001  004AEE  9E8A               	bcf	3978,7,c	;volatile
  4002  004AF0  EF65  F025         	goto	l9841
  4003  004AF4                     l455:
  4004                           
  4005                           ;main.c: 642:             LATB4 = 0;
  4006  004AF4  988A               	bcf	3978,4,c	;volatile
  4007                           
  4008                           ;main.c: 643:             LATB5 = 0;
  4009  004AF6  9A8A               	bcf	3978,5,c	;volatile
  4010                           
  4011                           ;main.c: 644:             LATB6 = 0;
  4012  004AF8  9C8A               	bcf	3978,6,c	;volatile
  4013                           
  4014                           ;main.c: 645:             LATB7 = 0;
  4015  004AFA  9E8A               	bcf	3978,7,c	;volatile
  4016                           
  4017                           ;main.c: 647:             break;
  4018  004AFC  EF9D  F025         	goto	l456
  4019  004B00                     l9851:
  4020  004B00  5057               	movf	_mouse^0,w,c
  4021  004B02  6E08               	movwf	??_mover^0,c
  4022  004B04  6A09               	clrf	(??_mover+1)^0,c
  4023                           
  4024                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4025                           ; Switch size 1, requested type "simple"
  4026                           ; Number of cases is 1, Range of values is 0 to 0
  4027                           ; switch strategies available:
  4028                           ; Name         Instructions Cycles
  4029                           ; simple_byte            4     3 (average)
  4030                           ;	Chosen strategy is simple_byte
  4031  004B06  5009               	movf	(??_mover+1)^0,w,c
  4032  004B08  0A00               	xorlw	0	; case 0
  4033  004B0A  B4D8               	btfsc	status,2,c
  4034  004B0C  EF8A  F025         	goto	l11235
  4035  004B10  EF9D  F025         	goto	l456
  4036  004B14                     l11235:
  4037                           
  4038                           ; Switch size 1, requested type "simple"
  4039                           ; Number of cases is 4, Range of values is 1 to 4
  4040                           ; switch strategies available:
  4041                           ; Name         Instructions Cycles
  4042                           ; simple_byte           13     7 (average)
  4043                           ;	Chosen strategy is simple_byte
  4044  004B14  5008               	movf	??_mover^0,w,c
  4045  004B16  0A01               	xorlw	1	; case 1
  4046  004B18  B4D8               	btfsc	status,2,c
  4047  004B1A  EF53  F025         	goto	l450
  4048  004B1E  0A03               	xorlw	3	; case 2
  4049  004B20  B4D8               	btfsc	status,2,c
  4050  004B22  EF61  F025         	goto	l453
  4051  004B26  0A01               	xorlw	1	; case 3
  4052  004B28  B4D8               	btfsc	status,2,c
  4053  004B2A  EF74  F025         	goto	l454
  4054  004B2E  0A07               	xorlw	7	; case 4
  4055  004B30  B4D8               	btfsc	status,2,c
  4056  004B32  EF7A  F025         	goto	l455
  4057  004B36  EF9D  F025         	goto	l456
  4058  004B3A                     l456:
  4059  004B3A  0012               	return		;funcret
  4060  004B3C                     __end_of_mover:
  4061                           	opt callstack 0
  4062                           
  4063 ;; *************** function _PID *****************
  4064 ;; Defined at:
  4065 ;;		line 1243 in file "main.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  error           2   56[BANK0 ] int 
  4070 ;;  dif             2   54[BANK0 ] int 
  4071 ;;  velocidadDer    2   50[BANK0 ] int 
  4072 ;;  velocidadIzq    2   46[BANK0 ] int 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4082 ;;      Params:         0       0       0       0       0       0       0       0       0
  4083 ;;      Locals:         0      16       0       0       0       0       0       0       0
  4084 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4085 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4086 ;;Total ram usage:       18 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    5
  4089 ;; This function calls:
  4090 ;;		___fladd
  4091 ;;		___flmul
  4092 ;;		___flsub
  4093 ;;		___fltol
  4094 ;;		___xxtofl
  4095 ;;		_pwmDuty
  4096 ;;		_roundf
  4097 ;; This function is called by:
  4098 ;;		_comportamientoBasico
  4099 ;;		_regresarPuntoPartida
  4100 ;;		_regresarAlCruce
  4101 ;;		_recorrerCaminoEncontrado
  4102 ;;		_probarPID
  4103 ;;		_probarCruceT
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text10
  4108  002E44                     __ptext10:
  4109                           	opt callstack 0
  4110  002E44                     _PID:
  4111                           	opt callstack 23
  4112  002E44                     
  4113                           ;main.c: 1246:     T_INT error = 0;
  4114  002E44  0E00               	movlw	0
  4115  002E46  0100               	movlb	0	; () banked
  4116  002E48  6F99               	movwf	(PID@error+1)& (0+255),b
  4117  002E4A  0E00               	movlw	0
  4118  002E4C  6F98               	movwf	PID@error& (0+255),b
  4119  002E4E                     
  4120                           ; BSR set to: 0
  4121                           ;main.c: 1247:     static T_INT difAnt = 0;;main.c: 1250:     dif = sensorIzquierda - se
      +                          nsorDerecha;
  4122  002E4E  C12C  F048         	movff	_sensorDerecha,___flsub@a
  4123  002E52  C12D  F049         	movff	_sensorDerecha+1,___flsub@a+1
  4124  002E56  C12E  F04A         	movff	_sensorDerecha+2,___flsub@a+2
  4125  002E5A  C12F  F04B         	movff	_sensorDerecha+3,___flsub@a+3
  4126  002E5E  C128  F044         	movff	_sensorIzquierda,___flsub@b
  4127  002E62  C129  F045         	movff	_sensorIzquierda+1,___flsub@b+1
  4128  002E66  C12A  F046         	movff	_sensorIzquierda+2,___flsub@b+2
  4129  002E6A  C12B  F047         	movff	_sensorIzquierda+3,___flsub@b+3
  4130  002E6E  EC0D  F02A         	call	___flsub	;wreg free
  4131  002E72  C044  F072         	movff	?___flsub,___fltol@f1
  4132  002E76  C045  F073         	movff	?___flsub+1,___fltol@f1+1
  4133  002E7A  C046  F074         	movff	?___flsub+2,___fltol@f1+2
  4134  002E7E  C047  F075         	movff	?___flsub+3,___fltol@f1+3
  4135  002E82  EC8D  F020         	call	___fltol	;wreg free
  4136  002E86  C072  F096         	movff	?___fltol,PID@dif
  4137  002E8A  C073  F097         	movff	?___fltol+1,PID@dif+1
  4138  002E8E                     
  4139                           ;main.c: 1252:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  4140  002E8E  0ECD               	movlw	205
  4141  002E90  6E1F               	movwf	___flmul@a^0,c
  4142  002E92  0ECC               	movlw	204
  4143  002E94  6E20               	movwf	(___flmul@a+1)^0,c
  4144  002E96  0ECC               	movlw	204
  4145  002E98  6E21               	movwf	(___flmul@a+2)^0,c
  4146  002E9A  0E3D               	movlw	61
  4147  002E9C  6E22               	movwf	(___flmul@a+3)^0,c
  4148  002E9E  0100               	movlb	0	; () banked
  4149  002EA0  5196               	movf	PID@dif& (0+255),w,b
  4150  002EA2  0101               	movlb	1	; () banked
  4151  002EA4  5D36               	subwf	PID@difAnt& (0+255),w,b
  4152  002EA6  0100               	movlb	0	; () banked
  4153  002EA8  6F88               	movwf	??_PID& (0+255),b
  4154  002EAA  5197               	movf	(PID@dif+1)& (0+255),w,b
  4155  002EAC  0101               	movlb	1	; () banked
  4156  002EAE  5937               	subwfb	(PID@difAnt+1)& (0+255),w,b
  4157  002EB0  0100               	movlb	0	; () banked
  4158  002EB2  6F89               	movwf	(??_PID+1)& (0+255),b
  4159  002EB4  C088  F00D         	movff	??_PID,___xxtofl@val
  4160  002EB8  C089  F00E         	movff	??_PID+1,___xxtofl@val+1
  4161  002EBC  0E00               	movlw	0
  4162  002EBE  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  4163  002EC0  0EFF               	movlw	-1
  4164  002EC2  6E0F               	movwf	(___xxtofl@val+2)^0,c
  4165  002EC4  6E10               	movwf	(___xxtofl@val+3)^0,c
  4166  002EC6  0E01               	movlw	1
  4167  002EC8  EC34  F01A         	call	___xxtofl
  4168  002ECC  C00D  F01B         	movff	?___xxtofl,___flmul@b
  4169  002ED0  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  4170  002ED4  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  4171  002ED8  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  4172  002EDC  ECF7  F00F         	call	___flmul	;wreg free
  4173  002EE0  C01B  F038         	movff	?___flmul,___fladd@a
  4174  002EE4  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  4175  002EE8  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  4176  002EEC  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  4177  002EF0  0E66               	movlw	102
  4178  002EF2  6E1F               	movwf	___flmul@a^0,c
  4179  002EF4  0E66               	movlw	102
  4180  002EF6  6E20               	movwf	(___flmul@a+1)^0,c
  4181  002EF8  0E66               	movlw	102
  4182  002EFA  6E21               	movwf	(___flmul@a+2)^0,c
  4183  002EFC  0E3F               	movlw	63
  4184  002EFE  6E22               	movwf	(___flmul@a+3)^0,c
  4185  002F00  C096  F00D         	movff	PID@dif,___xxtofl@val
  4186  002F04  C097  F00E         	movff	PID@dif+1,___xxtofl@val+1
  4187  002F08  0E00               	movlw	0
  4188  002F0A  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  4189  002F0C  0EFF               	movlw	-1
  4190  002F0E  6E0F               	movwf	(___xxtofl@val+2)^0,c
  4191  002F10  6E10               	movwf	(___xxtofl@val+3)^0,c
  4192  002F12  0E01               	movlw	1
  4193  002F14  EC34  F01A         	call	___xxtofl
  4194  002F18  C00D  F01B         	movff	?___xxtofl,___flmul@b
  4195  002F1C  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  4196  002F20  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  4197  002F24  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  4198  002F28  ECF7  F00F         	call	___flmul	;wreg free
  4199  002F2C  C01B  F034         	movff	?___flmul,___fladd@b
  4200  002F30  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  4201  002F34  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  4202  002F38  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  4203  002F3C  EC80  F00B         	call	___fladd	;wreg free
  4204  002F40  C034  F08A         	movff	?___fladd,_PID$1843
  4205  002F44  C035  F08B         	movff	?___fladd+1,_PID$1843+1
  4206  002F48  C036  F08C         	movff	?___fladd+2,_PID$1843+2
  4207  002F4C  C037  F08D         	movff	?___fladd+3,_PID$1843+3
  4208  002F50                     
  4209                           ;main.c: 1252:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  4210  002F50  C08A  F04C         	movff	_PID$1843,roundf@x
  4211  002F54  C08B  F04D         	movff	_PID$1843+1,roundf@x+1
  4212  002F58  C08C  F04E         	movff	_PID$1843+2,roundf@x+2
  4213  002F5C  C08D  F04F         	movff	_PID$1843+3,roundf@x+3
  4214  002F60  EC0C  F012         	call	_roundf	;wreg free
  4215  002F64  C04C  F072         	movff	?_roundf,___fltol@f1
  4216  002F68  C04D  F073         	movff	?_roundf+1,___fltol@f1+1
  4217  002F6C  C04E  F074         	movff	?_roundf+2,___fltol@f1+2
  4218  002F70  C04F  F075         	movff	?_roundf+3,___fltol@f1+3
  4219  002F74  EC8D  F020         	call	___fltol	;wreg free
  4220  002F78  C072  F098         	movff	?___fltol,PID@error
  4221  002F7C  C073  F099         	movff	?___fltol+1,PID@error+1
  4222  002F80                     
  4223                           ;main.c: 1254:     difAnt = dif;
  4224  002F80  C096  F136         	movff	PID@dif,PID@difAnt
  4225  002F84  C097  F137         	movff	PID@dif+1,PID@difAnt+1
  4226  002F88                     
  4227                           ;main.c: 1256:     T_INT velocidadIzquierda = ((100 - error)<(0)?(0):((100 - error)>(100
      +                          )?(100):(100 - error)));
  4228  002F88  0E64               	movlw	100
  4229  002F8A  0100               	movlb	0	; () banked
  4230  002F8C  6F88               	movwf	??_PID& (0+255),b
  4231  002F8E  0E00               	movlw	0
  4232  002F90  6F89               	movwf	(??_PID+1)& (0+255),b
  4233  002F92  5198               	movf	PID@error& (0+255),w,b
  4234  002F94  5D88               	subwf	??_PID& (0+255),w,b
  4235  002F96  5199               	movf	(PID@error+1)& (0+255),w,b
  4236  002F98  5989               	subwfb	(??_PID+1)& (0+255),w,b
  4237  002F9A  0B80               	andlw	128
  4238  002F9C  A4D8               	btfss	status,2,c
  4239  002F9E  EFD3  F017         	goto	u11111
  4240  002FA2  EFD5  F017         	goto	u11110
  4241  002FA6                     u11111:
  4242  002FA6  EFFF  F017         	goto	l9899
  4243  002FAA                     u11110:
  4244  002FAA                     
  4245                           ; BSR set to: 0
  4246  002FAA  0E64               	movlw	100
  4247  002FAC  6F88               	movwf	??_PID& (0+255),b
  4248  002FAE  0E00               	movlw	0
  4249  002FB0  6F89               	movwf	(??_PID+1)& (0+255),b
  4250  002FB2  5198               	movf	PID@error& (0+255),w,b
  4251  002FB4  5F88               	subwf	??_PID& (0+255),f,b
  4252  002FB6  5199               	movf	(PID@error+1)& (0+255),w,b
  4253  002FB8  5B89               	subwfb	(??_PID+1)& (0+255),f,b
  4254  002FBA  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  4255  002FBC  EFEB  F017         	goto	u11120
  4256  002FC0  5189               	movf	(??_PID+1)& (0+255),w,b
  4257  002FC2  E107               	bnz	u11121
  4258  002FC4  0E65               	movlw	101
  4259  002FC6  5D88               	subwf	??_PID& (0+255),w,b
  4260  002FC8  B0D8               	btfsc	status,0,c
  4261  002FCA  EFE9  F017         	goto	u11121
  4262  002FCE  EFEB  F017         	goto	u11120
  4263  002FD2                     u11121:
  4264  002FD2  EFF5  F017         	goto	l9895
  4265  002FD6                     u11120:
  4266  002FD6                     
  4267                           ; BSR set to: 0
  4268  002FD6  5198               	movf	PID@error& (0+255),w,b
  4269  002FD8  0864               	sublw	100
  4270  002FDA  6F90               	movwf	_PID$761& (0+255),b
  4271  002FDC  5199               	movf	(PID@error+1)& (0+255),w,b
  4272  002FDE  A0D8               	btfss	status,0,c
  4273  002FE0  2AE8               	incf	wreg,f,c
  4274  002FE2  0800               	sublw	0
  4275  002FE4  6F91               	movwf	(_PID$761+1)& (0+255),b
  4276  002FE6  EFF9  F017         	goto	l9897
  4277  002FEA                     l9895:
  4278                           
  4279                           ; BSR set to: 0
  4280  002FEA  0E00               	movlw	0
  4281  002FEC  6F91               	movwf	(_PID$761+1)& (0+255),b
  4282  002FEE  0E64               	movlw	100
  4283  002FF0  6F90               	movwf	_PID$761& (0+255),b
  4284  002FF2                     l9897:
  4285                           
  4286                           ; BSR set to: 0
  4287  002FF2  C090  F08E         	movff	_PID$761,PID@velocidadIzquierda
  4288  002FF6  C091  F08F         	movff	_PID$761+1,PID@velocidadIzquierda+1
  4289  002FFA  EF03  F018         	goto	l9901
  4290  002FFE                     l9899:
  4291                           
  4292                           ; BSR set to: 0
  4293  002FFE  0E00               	movlw	0
  4294  003000  6F8F               	movwf	(PID@velocidadIzquierda+1)& (0+255),b
  4295  003002  0E00               	movlw	0
  4296  003004  6F8E               	movwf	PID@velocidadIzquierda& (0+255),b
  4297  003006                     l9901:
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;main.c: 1257:     T_INT velocidadDerecha = ((100 + error)<(0)?(0):((100 + error)>(100)?
      +                          (100):(100 + error)));
  4301  003006  0E64               	movlw	100
  4302  003008  2598               	addwf	PID@error& (0+255),w,b
  4303  00300A  0E00               	movlw	0
  4304  00300C  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4305  00300E  0B80               	andlw	128
  4306  003010  A4D8               	btfss	status,2,c
  4307  003012  EF0D  F018         	goto	u11131
  4308  003016  EF0F  F018         	goto	u11130
  4309  00301A                     u11131:
  4310  00301A  EF35  F018         	goto	l9911
  4311  00301E                     u11130:
  4312  00301E                     
  4313                           ; BSR set to: 0
  4314  00301E  0E64               	movlw	100
  4315  003020  2598               	addwf	PID@error& (0+255),w,b
  4316  003022  6F88               	movwf	??_PID& (0+255),b
  4317  003024  0E00               	movlw	0
  4318  003026  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4319  003028  6F89               	movwf	(??_PID+1)& (0+255),b
  4320  00302A  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  4321  00302C  EF23  F018         	goto	u11140
  4322  003030  5189               	movf	(??_PID+1)& (0+255),w,b
  4323  003032  E107               	bnz	u11141
  4324  003034  0E65               	movlw	101
  4325  003036  5D88               	subwf	??_PID& (0+255),w,b
  4326  003038  B0D8               	btfsc	status,0,c
  4327  00303A  EF21  F018         	goto	u11141
  4328  00303E  EF23  F018         	goto	u11140
  4329  003042                     u11141:
  4330  003042  EF2B  F018         	goto	l9907
  4331  003046                     u11140:
  4332  003046                     
  4333                           ; BSR set to: 0
  4334  003046  0E64               	movlw	100
  4335  003048  2598               	addwf	PID@error& (0+255),w,b
  4336  00304A  6F94               	movwf	_PID$763& (0+255),b
  4337  00304C  0E00               	movlw	0
  4338  00304E  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4339  003050  6F95               	movwf	(_PID$763+1)& (0+255),b
  4340  003052  EF2F  F018         	goto	l9909
  4341  003056                     l9907:
  4342                           
  4343                           ; BSR set to: 0
  4344  003056  0E00               	movlw	0
  4345  003058  6F95               	movwf	(_PID$763+1)& (0+255),b
  4346  00305A  0E64               	movlw	100
  4347  00305C  6F94               	movwf	_PID$763& (0+255),b
  4348  00305E                     l9909:
  4349                           
  4350                           ; BSR set to: 0
  4351  00305E  C094  F092         	movff	_PID$763,PID@velocidadDerecha
  4352  003062  C095  F093         	movff	_PID$763+1,PID@velocidadDerecha+1
  4353  003066  EF39  F018         	goto	l9913
  4354  00306A                     l9911:
  4355                           
  4356                           ; BSR set to: 0
  4357  00306A  0E00               	movlw	0
  4358  00306C  6F93               	movwf	(PID@velocidadDerecha+1)& (0+255),b
  4359  00306E  0E00               	movlw	0
  4360  003070  6F92               	movwf	PID@velocidadDerecha& (0+255),b
  4361  003072                     l9913:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;main.c: 1259:     pwmDuty(velocidadIzquierda, 1);
  4365  003072  C08E  F07C         	movff	PID@velocidadIzquierda,pwmDuty@cicloTrabajo
  4366  003076  C08F  F07D         	movff	PID@velocidadIzquierda+1,pwmDuty@cicloTrabajo+1
  4367  00307A  0E01               	movlw	1
  4368  00307C  6F7E               	movwf	pwmDuty@channel& (0+255),b
  4369  00307E  EC56  F019         	call	_pwmDuty	;wreg free
  4370  003082                     
  4371                           ;main.c: 1260:     pwmDuty(velocidadDerecha, 2);
  4372  003082  C092  F07C         	movff	PID@velocidadDerecha,pwmDuty@cicloTrabajo
  4373  003086  C093  F07D         	movff	PID@velocidadDerecha+1,pwmDuty@cicloTrabajo+1
  4374  00308A  0E02               	movlw	2
  4375  00308C  0100               	movlb	0	; () banked
  4376  00308E  6F7E               	movwf	pwmDuty@channel& (0+255),b
  4377  003090  EC56  F019         	call	_pwmDuty	;wreg free
  4378  003094  0012               	return		;funcret
  4379  003096                     __end_of_PID:
  4380                           	opt callstack 0
  4381                           
  4382 ;; *************** function _roundf *****************
  4383 ;; Defined at:
  4384 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  x               4   75[COMRAM] float 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;  y               4   14[BANK0 ] float 
  4389 ;;  u               4   10[BANK0 ] struct .
  4390 ;;  e               2    4[BANK0 ] int 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  4   75[COMRAM] float 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4400 ;;      Params:         4       0       0       0       0       0       0       0       0
  4401 ;;      Locals:         0      18       0       0       0       0       0       0       0
  4402 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4403 ;;      Totals:         8      18       0       0       0       0       0       0       0
  4404 ;;Total ram usage:       26 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    4
  4407 ;; This function calls:
  4408 ;;		___fladd
  4409 ;;		___flge
  4410 ;;		___flmul
  4411 ;;		___flneg
  4412 ;;		___flsub
  4413 ;; This function is called by:
  4414 ;;		_PID
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text11
  4419  002418                     __ptext11:
  4420                           	opt callstack 0
  4421  002418                     _roundf:
  4422                           	opt callstack 23
  4423  002418  C100  F06A         	movff	roundf@F525,roundf@u
  4424  00241C  C101  F06B         	movff	roundf@F525+1,roundf@u+1
  4425  002420  C102  F06C         	movff	roundf@F525+2,roundf@u+2
  4426  002424  C103  F06D         	movff	roundf@F525+3,roundf@u+3
  4427  002428  C04C  F06A         	movff	roundf@x,roundf@u
  4428  00242C  C04D  F06B         	movff	roundf@x+1,roundf@u+1
  4429  002430  C04E  F06C         	movff	roundf@x+2,roundf@u+2
  4430  002434  C04F  F06D         	movff	roundf@x+3,roundf@u+3
  4431  002438  C06A  F050         	movff	roundf@u,??_roundf
  4432  00243C  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4433  002440  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4434  002444  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4435  002448  0E18               	movlw	24
  4436  00244A  EF2C  F012         	goto	u10860
  4437  00244E                     u10865:
  4438  00244E  90D8               	bcf	status,0,c
  4439  002450  3253               	rrcf	(??_roundf+3)^0,f,c
  4440  002452  3252               	rrcf	(??_roundf+2)^0,f,c
  4441  002454  3251               	rrcf	(??_roundf+1)^0,f,c
  4442  002456  3250               	rrcf	??_roundf^0,f,c
  4443  002458                     u10860:
  4444  002458  2EE8               	decfsz	wreg,f,c
  4445  00245A  EF27  F012         	goto	u10865
  4446  00245E  5050               	movf	??_roundf^0,w,c
  4447  002460  0100               	movlb	0	; () banked
  4448  002462  6F64               	movwf	roundf@e& (0+255),b
  4449  002464  6B65               	clrf	(roundf@e+1)& (0+255),b
  4450  002466  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4451  002468  EF3F  F012         	goto	u10871
  4452  00246C  5165               	movf	(roundf@e+1)& (0+255),w,b
  4453  00246E  E109               	bnz	u10870
  4454  002470  0E96               	movlw	150
  4455  002472  5D64               	subwf	roundf@e& (0+255),w,b
  4456  002474  A0D8               	btfss	status,0,c
  4457  002476  EF3F  F012         	goto	u10871
  4458  00247A  EF41  F012         	goto	u10870
  4459  00247E                     u10871:
  4460  00247E  EF4B  F012         	goto	l9733
  4461  002482                     u10870:
  4462  002482                     
  4463                           ; BSR set to: 0
  4464  002482  C04C  F04C         	movff	roundf@x,?_roundf
  4465  002486  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  4466  00248A  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  4467  00248E  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  4468  002492  EFE4  F013         	goto	l1752
  4469  002496                     l9733:
  4470                           
  4471                           ; BSR set to: 0
  4472  002496  C06A  F050         	movff	roundf@u,??_roundf
  4473  00249A  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4474  00249E  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4475  0024A2  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4476  0024A6  0E20               	movlw	32
  4477  0024A8  EF5B  F012         	goto	u10880
  4478  0024AC                     u10885:
  4479  0024AC  90D8               	bcf	status,0,c
  4480  0024AE  3253               	rrcf	(??_roundf+3)^0,f,c
  4481  0024B0  3252               	rrcf	(??_roundf+2)^0,f,c
  4482  0024B2  3251               	rrcf	(??_roundf+1)^0,f,c
  4483  0024B4  3250               	rrcf	??_roundf^0,f,c
  4484  0024B6                     u10880:
  4485  0024B6  2EE8               	decfsz	wreg,f,c
  4486  0024B8  EF56  F012         	goto	u10885
  4487  0024BC  5050               	movf	??_roundf^0,w,c
  4488  0024BE  1051               	iorwf	(??_roundf+1)^0,w,c
  4489  0024C0  1052               	iorwf	(??_roundf+2)^0,w,c
  4490  0024C2  1053               	iorwf	(??_roundf+3)^0,w,c
  4491  0024C4  B4D8               	btfsc	status,2,c
  4492  0024C6  EF67  F012         	goto	u10891
  4493  0024CA  EF69  F012         	goto	u10890
  4494  0024CE                     u10891:
  4495  0024CE  EF7B  F012         	goto	l9737
  4496  0024D2                     u10890:
  4497  0024D2                     
  4498                           ; BSR set to: 0
  4499  0024D2  C04C  F006         	movff	roundf@x,___flneg@f1
  4500  0024D6  C04D  F007         	movff	roundf@x+1,___flneg@f1+1
  4501  0024DA  C04E  F008         	movff	roundf@x+2,___flneg@f1+2
  4502  0024DE  C04F  F009         	movff	roundf@x+3,___flneg@f1+3
  4503  0024E2  ECF4  F02A         	call	___flneg	;wreg free
  4504  0024E6  C006  F04C         	movff	?___flneg,roundf@x
  4505  0024EA  C007  F04D         	movff	?___flneg+1,roundf@x+1
  4506  0024EE  C008  F04E         	movff	?___flneg+2,roundf@x+2
  4507  0024F2  C009  F04F         	movff	?___flneg+3,roundf@x+3
  4508  0024F6                     l9737:
  4509  0024F6  0100               	movlb	0	; () banked
  4510  0024F8  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4511  0024FA  EF8A  F012         	goto	u10900
  4512  0024FE  5165               	movf	(roundf@e+1)& (0+255),w,b
  4513  002500  E107               	bnz	u10901
  4514  002502  0E7E               	movlw	126
  4515  002504  5D64               	subwf	roundf@e& (0+255),w,b
  4516  002506  B0D8               	btfsc	status,0,c
  4517  002508  EF88  F012         	goto	u10901
  4518  00250C  EF8A  F012         	goto	u10900
  4519  002510                     u10901:
  4520  002510  EFA6  F012         	goto	l9743
  4521  002514                     u10900:
  4522  002514                     
  4523                           ; BSR set to: 0
  4524  002514  C06A  F01B         	movff	roundf@u,___flmul@b
  4525  002518  C06B  F01C         	movff	roundf@u+1,___flmul@b+1
  4526  00251C  C06C  F01D         	movff	roundf@u+2,___flmul@b+2
  4527  002520  C06D  F01E         	movff	roundf@u+3,___flmul@b+3
  4528  002524  0E00               	movlw	0
  4529  002526  6E1F               	movwf	___flmul@a^0,c
  4530  002528  0E00               	movlw	0
  4531  00252A  6E20               	movwf	(___flmul@a+1)^0,c
  4532  00252C  0E00               	movlw	0
  4533  00252E  6E21               	movwf	(___flmul@a+2)^0,c
  4534  002530  0E00               	movlw	0
  4535  002532  6E22               	movwf	(___flmul@a+3)^0,c
  4536  002534  ECF7  F00F         	call	___flmul	;wreg free
  4537  002538  C01B  F04C         	movff	?___flmul,?_roundf
  4538  00253C  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  4539  002540  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  4540  002544  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  4541  002548  EFE4  F013         	goto	l1752
  4542  00254C                     l9743:
  4543                           
  4544                           ; BSR set to: 0
  4545  00254C  0E00               	movlw	0
  4546  00254E  6E38               	movwf	___fladd@a^0,c
  4547  002550  0E00               	movlw	0
  4548  002552  6E39               	movwf	(___fladd@a+1)^0,c
  4549  002554  0E00               	movlw	0
  4550  002556  6E3A               	movwf	(___fladd@a+2)^0,c
  4551  002558  0E4B               	movlw	75
  4552  00255A  6E3B               	movwf	(___fladd@a+3)^0,c
  4553  00255C  C04C  F034         	movff	roundf@x,___fladd@b
  4554  002560  C04D  F035         	movff	roundf@x+1,___fladd@b+1
  4555  002564  C04E  F036         	movff	roundf@x+2,___fladd@b+2
  4556  002568  C04F  F037         	movff	roundf@x+3,___fladd@b+3
  4557  00256C  EC80  F00B         	call	___fladd	;wreg free
  4558  002570  C034  F066         	movff	?___fladd,_roundf$1844
  4559  002574  C035  F067         	movff	?___fladd+1,_roundf$1844+1
  4560  002578  C036  F068         	movff	?___fladd+2,_roundf$1844+2
  4561  00257C  C037  F069         	movff	?___fladd+3,_roundf$1844+3
  4562  002580  0E00               	movlw	0
  4563  002582  6E38               	movwf	___fladd@a^0,c
  4564  002584  0E00               	movlw	0
  4565  002586  6E39               	movwf	(___fladd@a+1)^0,c
  4566  002588  0E00               	movlw	0
  4567  00258A  6E3A               	movwf	(___fladd@a+2)^0,c
  4568  00258C  0ECB               	movlw	203
  4569  00258E  6E3B               	movwf	(___fladd@a+3)^0,c
  4570  002590  C066  F034         	movff	_roundf$1844,___fladd@b
  4571  002594  C067  F035         	movff	_roundf$1844+1,___fladd@b+1
  4572  002598  C068  F036         	movff	_roundf$1844+2,___fladd@b+2
  4573  00259C  C069  F037         	movff	_roundf$1844+3,___fladd@b+3
  4574  0025A0  EC80  F00B         	call	___fladd	;wreg free
  4575  0025A4  C034  F060         	movff	?___fladd,_roundf$1845
  4576  0025A8  C035  F061         	movff	?___fladd+1,_roundf$1845+1
  4577  0025AC  C036  F062         	movff	?___fladd+2,_roundf$1845+2
  4578  0025B0  C037  F063         	movff	?___fladd+3,_roundf$1845+3
  4579  0025B4  C060  F044         	movff	_roundf$1845,___flsub@b
  4580  0025B8  C061  F045         	movff	_roundf$1845+1,___flsub@b+1
  4581  0025BC  C062  F046         	movff	_roundf$1845+2,___flsub@b+2
  4582  0025C0  C063  F047         	movff	_roundf$1845+3,___flsub@b+3
  4583  0025C4  C04C  F048         	movff	roundf@x,___flsub@a
  4584  0025C8  C04D  F049         	movff	roundf@x+1,___flsub@a+1
  4585  0025CC  C04E  F04A         	movff	roundf@x+2,___flsub@a+2
  4586  0025D0  C04F  F04B         	movff	roundf@x+3,___flsub@a+3
  4587  0025D4  EC0D  F02A         	call	___flsub	;wreg free
  4588  0025D8  C044  F06E         	movff	?___flsub,roundf@y
  4589  0025DC  C045  F06F         	movff	?___flsub+1,roundf@y+1
  4590  0025E0  C046  F070         	movff	?___flsub+2,roundf@y+2
  4591  0025E4  C047  F071         	movff	?___flsub+3,roundf@y+3
  4592  0025E8  0E00               	movlw	0
  4593  0025EA  6E34               	movwf	___flge@ff1^0,c
  4594  0025EC  0E00               	movlw	0
  4595  0025EE  6E35               	movwf	(___flge@ff1+1)^0,c
  4596  0025F0  0E00               	movlw	0
  4597  0025F2  6E36               	movwf	(___flge@ff1+2)^0,c
  4598  0025F4  0E3F               	movlw	63
  4599  0025F6  6E37               	movwf	(___flge@ff1+3)^0,c
  4600  0025F8  C06E  F038         	movff	roundf@y,___flge@ff2
  4601  0025FC  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  4602  002600  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  4603  002604  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  4604  002608  EC11  F021         	call	___flge	;wreg free
  4605  00260C  B0D8               	btfsc	status,0,c
  4606  00260E  EF0B  F013         	goto	u10911
  4607  002612  EF0D  F013         	goto	u10910
  4608  002616                     u10911:
  4609  002616  EF43  F013         	goto	l9747
  4610  00261A                     u10910:
  4611  00261A  C04C  F038         	movff	roundf@x,___fladd@a
  4612  00261E  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4613  002622  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4614  002626  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4615  00262A  C06E  F034         	movff	roundf@y,___fladd@b
  4616  00262E  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4617  002632  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4618  002636  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4619  00263A  EC80  F00B         	call	___fladd	;wreg free
  4620  00263E  C034  F066         	movff	?___fladd,_roundf$1844
  4621  002642  C035  F067         	movff	?___fladd+1,_roundf$1844+1
  4622  002646  C036  F068         	movff	?___fladd+2,_roundf$1844+2
  4623  00264A  C037  F069         	movff	?___fladd+3,_roundf$1844+3
  4624  00264E  C066  F034         	movff	_roundf$1844,___fladd@b
  4625  002652  C067  F035         	movff	_roundf$1844+1,___fladd@b+1
  4626  002656  C068  F036         	movff	_roundf$1844+2,___fladd@b+2
  4627  00265A  C069  F037         	movff	_roundf$1844+3,___fladd@b+3
  4628  00265E  0E00               	movlw	0
  4629  002660  6E38               	movwf	___fladd@a^0,c
  4630  002662  0E00               	movlw	0
  4631  002664  6E39               	movwf	(___fladd@a+1)^0,c
  4632  002666  0E80               	movlw	128
  4633  002668  6E3A               	movwf	(___fladd@a+2)^0,c
  4634  00266A  0EBF               	movlw	191
  4635  00266C  6E3B               	movwf	(___fladd@a+3)^0,c
  4636  00266E  EC80  F00B         	call	___fladd	;wreg free
  4637  002672  C034  F06E         	movff	?___fladd,roundf@y
  4638  002676  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4639  00267A  C036  F070         	movff	?___fladd+2,roundf@y+2
  4640  00267E  C037  F071         	movff	?___fladd+3,roundf@y+3
  4641  002682  EFAC  F013         	goto	l9753
  4642  002686                     l9747:
  4643  002686  0E00               	movlw	0
  4644  002688  6E34               	movwf	___flge@ff1^0,c
  4645  00268A  0E00               	movlw	0
  4646  00268C  6E35               	movwf	(___flge@ff1+1)^0,c
  4647  00268E  0E00               	movlw	0
  4648  002690  6E36               	movwf	(___flge@ff1+2)^0,c
  4649  002692  0EBF               	movlw	191
  4650  002694  6E37               	movwf	(___flge@ff1+3)^0,c
  4651  002696  C06E  F038         	movff	roundf@y,___flge@ff2
  4652  00269A  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  4653  00269E  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  4654  0026A2  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  4655  0026A6  EC11  F021         	call	___flge	;wreg free
  4656  0026AA  A0D8               	btfss	status,0,c
  4657  0026AC  EF5A  F013         	goto	u10921
  4658  0026B0  EF5C  F013         	goto	u10920
  4659  0026B4                     u10921:
  4660  0026B4  EF92  F013         	goto	l9751
  4661  0026B8                     u10920:
  4662  0026B8  C04C  F038         	movff	roundf@x,___fladd@a
  4663  0026BC  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4664  0026C0  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4665  0026C4  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4666  0026C8  C06E  F034         	movff	roundf@y,___fladd@b
  4667  0026CC  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4668  0026D0  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4669  0026D4  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4670  0026D8  EC80  F00B         	call	___fladd	;wreg free
  4671  0026DC  C034  F066         	movff	?___fladd,_roundf$1844
  4672  0026E0  C035  F067         	movff	?___fladd+1,_roundf$1844+1
  4673  0026E4  C036  F068         	movff	?___fladd+2,_roundf$1844+2
  4674  0026E8  C037  F069         	movff	?___fladd+3,_roundf$1844+3
  4675  0026EC  C066  F034         	movff	_roundf$1844,___fladd@b
  4676  0026F0  C067  F035         	movff	_roundf$1844+1,___fladd@b+1
  4677  0026F4  C068  F036         	movff	_roundf$1844+2,___fladd@b+2
  4678  0026F8  C069  F037         	movff	_roundf$1844+3,___fladd@b+3
  4679  0026FC  0E00               	movlw	0
  4680  0026FE  6E38               	movwf	___fladd@a^0,c
  4681  002700  0E00               	movlw	0
  4682  002702  6E39               	movwf	(___fladd@a+1)^0,c
  4683  002704  0E80               	movlw	128
  4684  002706  6E3A               	movwf	(___fladd@a+2)^0,c
  4685  002708  0E3F               	movlw	63
  4686  00270A  6E3B               	movwf	(___fladd@a+3)^0,c
  4687  00270C  EC80  F00B         	call	___fladd	;wreg free
  4688  002710  C034  F06E         	movff	?___fladd,roundf@y
  4689  002714  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4690  002718  C036  F070         	movff	?___fladd+2,roundf@y+2
  4691  00271C  C037  F071         	movff	?___fladd+3,roundf@y+3
  4692  002720  EFAC  F013         	goto	l9753
  4693  002724                     l9751:
  4694  002724  C06E  F034         	movff	roundf@y,___fladd@b
  4695  002728  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4696  00272C  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4697  002730  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4698  002734  C04C  F038         	movff	roundf@x,___fladd@a
  4699  002738  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4700  00273C  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4701  002740  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4702  002744  EC80  F00B         	call	___fladd	;wreg free
  4703  002748  C034  F06E         	movff	?___fladd,roundf@y
  4704  00274C  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4705  002750  C036  F070         	movff	?___fladd+2,roundf@y+2
  4706  002754  C037  F071         	movff	?___fladd+3,roundf@y+3
  4707  002758                     l9753:
  4708  002758  C06A  F050         	movff	roundf@u,??_roundf
  4709  00275C  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4710  002760  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4711  002764  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4712  002768  0E20               	movlw	32
  4713  00276A  EFBC  F013         	goto	u10930
  4714  00276E                     u10935:
  4715  00276E  90D8               	bcf	status,0,c
  4716  002770  3253               	rrcf	(??_roundf+3)^0,f,c
  4717  002772  3252               	rrcf	(??_roundf+2)^0,f,c
  4718  002774  3251               	rrcf	(??_roundf+1)^0,f,c
  4719  002776  3250               	rrcf	??_roundf^0,f,c
  4720  002778                     u10930:
  4721  002778  2EE8               	decfsz	wreg,f,c
  4722  00277A  EFB7  F013         	goto	u10935
  4723  00277E  5050               	movf	??_roundf^0,w,c
  4724  002780  1051               	iorwf	(??_roundf+1)^0,w,c
  4725  002782  1052               	iorwf	(??_roundf+2)^0,w,c
  4726  002784  1053               	iorwf	(??_roundf+3)^0,w,c
  4727  002786  B4D8               	btfsc	status,2,c
  4728  002788  EFC8  F013         	goto	u10941
  4729  00278C  EFCA  F013         	goto	u10940
  4730  002790                     u10941:
  4731  002790  EFDC  F013         	goto	l9757
  4732  002794                     u10940:
  4733  002794  C06E  F006         	movff	roundf@y,___flneg@f1
  4734  002798  C06F  F007         	movff	roundf@y+1,___flneg@f1+1
  4735  00279C  C070  F008         	movff	roundf@y+2,___flneg@f1+2
  4736  0027A0  C071  F009         	movff	roundf@y+3,___flneg@f1+3
  4737  0027A4  ECF4  F02A         	call	___flneg	;wreg free
  4738  0027A8  C006  F06E         	movff	?___flneg,roundf@y
  4739  0027AC  C007  F06F         	movff	?___flneg+1,roundf@y+1
  4740  0027B0  C008  F070         	movff	?___flneg+2,roundf@y+2
  4741  0027B4  C009  F071         	movff	?___flneg+3,roundf@y+3
  4742  0027B8                     l9757:
  4743  0027B8  C06E  F04C         	movff	roundf@y,?_roundf
  4744  0027BC  C06F  F04D         	movff	roundf@y+1,?_roundf+1
  4745  0027C0  C070  F04E         	movff	roundf@y+2,?_roundf+2
  4746  0027C4  C071  F04F         	movff	roundf@y+3,?_roundf+3
  4747  0027C8                     l1752:
  4748  0027C8  0012               	return		;funcret
  4749  0027CA                     __end_of_roundf:
  4750                           	opt callstack 0
  4751                           
  4752 ;; *************** function _moverCarrito *****************
  4753 ;; Defined at:
  4754 ;;		line 535 in file "main.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  espejearCarr    1    wreg     unsigned char 
  4757 ;;  carroEspejea    2   40[BANK0 ] PTR unsigned char 
  4758 ;;		 -> comportamientoBasico@carroEspejeado(1), 
  4759 ;;  avanceRectoL    2   42[BANK0 ] PTR unsigned char 
  4760 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;  espejearCarr    1   46[BANK0 ] unsigned char 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      void 
  4765 ;; Registers used:
  4766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4772 ;;      Params:         0       4       0       0       0       0       0       0       0
  4773 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4774 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4775 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4776 ;;Total ram usage:        7 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    8
  4779 ;; This function calls:
  4780 ;;		_forzarAvanceRecto
  4781 ;;		_forzarEspejeo
  4782 ;; This function is called by:
  4783 ;;		_comportamientoBasico
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text12
  4788  004012                     __ptext12:
  4789                           	opt callstack 0
  4790  004012                     _moverCarrito:
  4791                           	opt callstack 21
  4792                           
  4793                           ;incstack = 0
  4794                           ;moverCarrito@espejearCarroY stored from wreg
  4795  004012  0100               	movlb	0	; () banked
  4796  004014  6F8E               	movwf	moverCarrito@espejearCarroY& (0+255),b
  4797  004016                     
  4798                           ;main.c: 537:     switch (mouse.curr_state) {
  4799  004016  EF6E  F020         	goto	l10087
  4800  00401A                     l437:
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;main.c: 541:             LATB4 = 1;
  4804  00401A  888A               	bsf	3978,4,c	;volatile
  4805                           
  4806                           ;main.c: 542:             LATB5 = 0;
  4807  00401C  9A8A               	bcf	3978,5,c	;volatile
  4808                           
  4809                           ;main.c: 543:             LATB6 = 1;
  4810  00401E  8C8A               	bsf	3978,6,c	;volatile
  4811                           
  4812                           ;main.c: 544:             LATB7 = 0;
  4813  004020  9E8A               	bcf	3978,7,c	;volatile
  4814  004022                     
  4815                           ; BSR set to: 0
  4816                           ;main.c: 546:             if (*avanceRectoLargo) {
  4817  004022  C08A  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4818  004026  C08B  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4819  00402A  50DF               	movf	indf2,w,c
  4820  00402C  B4D8               	btfsc	status,2,c
  4821  00402E  EF1B  F020         	goto	u11261
  4822  004032  EF1D  F020         	goto	u11260
  4823  004036                     u11261:
  4824  004036  EF30  F020         	goto	l10069
  4825  00403A                     u11260:
  4826  00403A                     
  4827                           ; BSR set to: 0
  4828                           ;main.c: 547:                 *avanceRectoLargo = 0;
  4829  00403A  C08A  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4830  00403E  C08B  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4831  004042  0E00               	movlw	0
  4832  004044  6EDF               	movwf	indf2,c
  4833  004046                     
  4834                           ; BSR set to: 0
  4835                           ;main.c: 548:                 _delay((unsigned long)((410 * 2)*(4000000/4000.0)));
  4836  004046  0E05               	movlw	5
  4837  004048  0100               	movlb	0	; () banked
  4838  00404A  6F8D               	movwf	(??_moverCarrito+1)& (0+255),b
  4839  00404C  0E29               	movlw	41
  4840  00404E  6F8C               	movwf	??_moverCarrito& (0+255),b
  4841  004050  0EEA               	movlw	234
  4842  004052                     u12027:
  4843  004052  2EE8               	decfsz	wreg,f,c
  4844  004054  D7FE               	bra	u12027
  4845  004056  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4846  004058  D7FC               	bra	u12027
  4847  00405A  2F8D               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4848  00405C  D7FA               	bra	u12027
  4849  00405E  F000               	nop	
  4850  004060                     l10069:
  4851                           
  4852                           ;main.c: 552:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  4853  004060  0E48               	movlw	72
  4854  004062  0100               	movlb	0	; () banked
  4855  004064  6F8C               	movwf	??_moverCarrito& (0+255),b
  4856  004066  0E6C               	movlw	108
  4857  004068                     u12037:
  4858  004068  2EE8               	decfsz	wreg,f,c
  4859  00406A  D7FE               	bra	u12037
  4860  00406C  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4861  00406E  D7FC               	bra	u12037
  4862  004070  F000               	nop	
  4863  004072  EF8C  F020         	goto	l446
  4864  004076                     l10071:
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;main.c: 558:             if (espejearCarroY) {
  4868  004076  518E               	movf	moverCarrito@espejearCarroY& (0+255),w,b
  4869  004078  B4D8               	btfsc	status,2,c
  4870  00407A  EF41  F020         	goto	u11271
  4871  00407E  EF43  F020         	goto	u11270
  4872  004082                     u11271:
  4873  004082  EF4D  F020         	goto	l442
  4874  004086                     u11270:
  4875  004086                     
  4876                           ; BSR set to: 0
  4877                           ;main.c: 559:                 forzarEspejeo();
  4878  004086  EC98  F02A         	call	_forzarEspejeo	;wreg free
  4879  00408A                     
  4880                           ;main.c: 560:                 *carroEspejeado = 1;
  4881  00408A  C088  FFD9         	movff	moverCarrito@carroEspejeado,fsr2l
  4882  00408E  C089  FFDA         	movff	moverCarrito@carroEspejeado+1,fsr2h
  4883  004092  0E01               	movlw	1
  4884  004094  6EDF               	movwf	indf2,c
  4885                           
  4886                           ;main.c: 561:             } else {
  4887  004096  EF8C  F020         	goto	l446
  4888  00409A                     l442:
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;main.c: 562:                 LATB4 = 0;
  4892  00409A  988A               	bcf	3978,4,c	;volatile
  4893                           
  4894                           ;main.c: 563:                 LATB5 = 0;
  4895  00409C  9A8A               	bcf	3978,5,c	;volatile
  4896                           
  4897                           ;main.c: 564:                 LATB6 = 1;
  4898  00409E  8C8A               	bsf	3978,6,c	;volatile
  4899                           
  4900                           ;main.c: 565:                 LATB7 = 0;
  4901  0040A0  9E8A               	bcf	3978,7,c	;volatile
  4902  0040A2                     l10077:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;main.c: 566:                 _delay((unsigned long)((410)*(4000000/4000.0)));
  4906  0040A2  0E03               	movlw	3
  4907  0040A4  0100               	movlb	0	; () banked
  4908  0040A6  6F8D               	movwf	(??_moverCarrito+1)& (0+255),b
  4909  0040A8  0E15               	movlw	21
  4910  0040AA  6F8C               	movwf	??_moverCarrito& (0+255),b
  4911  0040AC  0E73               	movlw	115
  4912  0040AE                     u12047:
  4913  0040AE  2EE8               	decfsz	wreg,f,c
  4914  0040B0  D7FE               	bra	u12047
  4915  0040B2  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4916  0040B4  D7FC               	bra	u12047
  4917  0040B6  2F8D               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4918  0040B8  D7FA               	bra	u12047
  4919  0040BA  D000               	nop2	
  4920  0040BC                     
  4921                           ;main.c: 567:                 forzarAvanceRecto();
  4922  0040BC  EC97  F02B         	call	_forzarAvanceRecto	;wreg free
  4923  0040C0  EF8C  F020         	goto	l446
  4924  0040C4                     l444:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;main.c: 575:             LATB4 = 1;
  4928  0040C4  888A               	bsf	3978,4,c	;volatile
  4929                           
  4930                           ;main.c: 576:             LATB5 = 0;
  4931  0040C6  9A8A               	bcf	3978,5,c	;volatile
  4932                           
  4933                           ;main.c: 577:             LATB6 = 0;
  4934  0040C8  9C8A               	bcf	3978,6,c	;volatile
  4935                           
  4936                           ;main.c: 578:             LATB7 = 0;
  4937  0040CA  9E8A               	bcf	3978,7,c	;volatile
  4938  0040CC  EF51  F020         	goto	l10077
  4939  0040D0                     l445:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;main.c: 587:             LATB4 = 0;
  4943  0040D0  988A               	bcf	3978,4,c	;volatile
  4944                           
  4945                           ;main.c: 588:             LATB5 = 0;
  4946  0040D2  9A8A               	bcf	3978,5,c	;volatile
  4947                           
  4948                           ;main.c: 589:             LATB6 = 0;
  4949  0040D4  9C8A               	bcf	3978,6,c	;volatile
  4950                           
  4951                           ;main.c: 590:             LATB7 = 0;
  4952  0040D6  9E8A               	bcf	3978,7,c	;volatile
  4953                           
  4954                           ;main.c: 592:             break;
  4955  0040D8  EF8C  F020         	goto	l446
  4956  0040DC                     l10087:
  4957  0040DC  5057               	movf	_mouse^0,w,c
  4958  0040DE  0100               	movlb	0	; () banked
  4959  0040E0  6F8C               	movwf	??_moverCarrito& (0+255),b
  4960  0040E2  6B8D               	clrf	(??_moverCarrito+1)& (0+255),b
  4961                           
  4962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4963                           ; Switch size 1, requested type "simple"
  4964                           ; Number of cases is 1, Range of values is 0 to 0
  4965                           ; switch strategies available:
  4966                           ; Name         Instructions Cycles
  4967                           ; simple_byte            4     3 (average)
  4968                           ;	Chosen strategy is simple_byte
  4969  0040E4  518D               	movf	(??_moverCarrito+1)& (0+255),w,b
  4970  0040E6  0A00               	xorlw	0	; case 0
  4971  0040E8  B4D8               	btfsc	status,2,c
  4972  0040EA  EF79  F020         	goto	l11237
  4973  0040EE  EF8C  F020         	goto	l446
  4974  0040F2                     l11237:
  4975                           
  4976                           ; BSR set to: 0
  4977                           ; Switch size 1, requested type "simple"
  4978                           ; Number of cases is 4, Range of values is 1 to 4
  4979                           ; switch strategies available:
  4980                           ; Name         Instructions Cycles
  4981                           ; simple_byte           13     7 (average)
  4982                           ;	Chosen strategy is simple_byte
  4983  0040F2  518C               	movf	??_moverCarrito& (0+255),w,b
  4984  0040F4  0A01               	xorlw	1	; case 1
  4985  0040F6  B4D8               	btfsc	status,2,c
  4986  0040F8  EF0D  F020         	goto	l437
  4987  0040FC  0A03               	xorlw	3	; case 2
  4988  0040FE  B4D8               	btfsc	status,2,c
  4989  004100  EF3B  F020         	goto	l10071
  4990  004104  0A01               	xorlw	1	; case 3
  4991  004106  B4D8               	btfsc	status,2,c
  4992  004108  EF62  F020         	goto	l444
  4993  00410C  0A07               	xorlw	7	; case 4
  4994  00410E  B4D8               	btfsc	status,2,c
  4995  004110  EF68  F020         	goto	l445
  4996  004114  EF8C  F020         	goto	l446
  4997  004118                     l446:
  4998  004118  0012               	return		;funcret
  4999  00411A                     __end_of_moverCarrito:
  5000                           	opt callstack 0
  5001                           
  5002 ;; *************** function _forzarAvanceRecto *****************
  5003 ;; Defined at:
  5004 ;;		line 471 in file "main.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5018 ;;      Params:         0       0       0       0       0       0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5020 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5021 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5022 ;;Total ram usage:        2 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    2
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_moverCarrito
  5029 ;;		_mover
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text13
  5034  00572E                     __ptext13:
  5035                           	opt callstack 0
  5036  00572E                     _forzarAvanceRecto:
  5037                           	opt callstack 25
  5038  00572E                     
  5039                           ;main.c: 472:     LATB4 = 1;
  5040  00572E  888A               	bsf	3978,4,c	;volatile
  5041                           
  5042                           ;main.c: 473:     LATB5 = 0;
  5043  005730  9A8A               	bcf	3978,5,c	;volatile
  5044                           
  5045                           ;main.c: 474:     LATB6 = 1;
  5046  005732  8C8A               	bsf	3978,6,c	;volatile
  5047                           
  5048                           ;main.c: 475:     LATB7 = 0;
  5049  005734  9E8A               	bcf	3978,7,c	;volatile
  5050  005736                     
  5051                           ;main.c: 477:     _delay((unsigned long)((550)*(4000000/4000.0)));
  5052  005736  0E03               	movlw	3
  5053  005738  6E07               	movwf	(??_forzarAvanceRecto+1)^0,c
  5054  00573A  0ECB               	movlw	203
  5055  00573C  6E06               	movwf	??_forzarAvanceRecto^0,c
  5056  00573E  0E45               	movlw	69
  5057  005740                     u12057:
  5058  005740  2EE8               	decfsz	wreg,f,c
  5059  005742  D7FE               	bra	u12057
  5060  005744  2E06               	decfsz	??_forzarAvanceRecto^0,f,c
  5061  005746  D7FC               	bra	u12057
  5062  005748  2E07               	decfsz	(??_forzarAvanceRecto+1)^0,f,c
  5063  00574A  D7FA               	bra	u12057
  5064  00574C  F000               	nop	
  5065  00574E  0012               	return		;funcret
  5066  005750                     __end_of_forzarAvanceRecto:
  5067                           	opt callstack 0
  5068                           
  5069 ;; *************** function _leerSensores *****************
  5070 ;; Defined at:
  5071 ;;		line 1210 in file "main.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5085 ;;      Params:         0       0       0       0       0       0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5088 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    4
  5092 ;; This function calls:
  5093 ;;		___fladd
  5094 ;;		___fldiv
  5095 ;;		_dameDistancia
  5096 ;; This function is called by:
  5097 ;;		_comportamientoBasico
  5098 ;;		_probarSensores
  5099 ;;		_probarPID
  5100 ;;		_probarCruceT
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text14
  5105  003AC4                     __ptext14:
  5106                           	opt callstack 0
  5107  003AC4                     _leerSensores:
  5108                           	opt callstack 25
  5109  003AC4                     
  5110                           ;main.c: 1212:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  5111  003AC4  C120  F038         	movff	_oldSensorDerecha,___fladd@a
  5112  003AC8  C121  F039         	movff	_oldSensorDerecha+1,___fladd@a+1
  5113  003ACC  C122  F03A         	movff	_oldSensorDerecha+2,___fladd@a+2
  5114  003AD0  C123  F03B         	movff	_oldSensorDerecha+3,___fladd@a+3
  5115  003AD4  0E03               	movlw	3
  5116  003AD6  ECD2  F01E         	call	_dameDistancia
  5117  003ADA  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5118  003ADE  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5119  003AE2  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5120  003AE6  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5121  003AEA  EC80  F00B         	call	___fladd	;wreg free
  5122  003AEE  C034  F044         	movff	?___fladd,___fldiv@b
  5123  003AF2  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5124  003AF6  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5125  003AFA  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5126  003AFE  0E00               	movlw	0
  5127  003B00  6E48               	movwf	___fldiv@a^0,c
  5128  003B02  0E00               	movlw	0
  5129  003B04  6E49               	movwf	(___fldiv@a+1)^0,c
  5130  003B06  0E00               	movlw	0
  5131  003B08  6E4A               	movwf	(___fldiv@a+2)^0,c
  5132  003B0A  0E40               	movlw	64
  5133  003B0C  6E4B               	movwf	(___fldiv@a+3)^0,c
  5134  003B0E  ECE5  F013         	call	___fldiv	;wreg free
  5135  003B12  C044  F12C         	movff	?___fldiv,_sensorDerecha
  5136  003B16  C045  F12D         	movff	?___fldiv+1,_sensorDerecha+1
  5137  003B1A  C046  F12E         	movff	?___fldiv+2,_sensorDerecha+2
  5138  003B1E  C047  F12F         	movff	?___fldiv+3,_sensorDerecha+3
  5139                           
  5140                           ;main.c: 1213:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
  5141  003B22  C11C  F038         	movff	_oldSensorIzquierda,___fladd@a
  5142  003B26  C11D  F039         	movff	_oldSensorIzquierda+1,___fladd@a+1
  5143  003B2A  C11E  F03A         	movff	_oldSensorIzquierda+2,___fladd@a+2
  5144  003B2E  C11F  F03B         	movff	_oldSensorIzquierda+3,___fladd@a+3
  5145  003B32  0E02               	movlw	2
  5146  003B34  ECD2  F01E         	call	_dameDistancia
  5147  003B38  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5148  003B3C  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5149  003B40  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5150  003B44  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5151  003B48  EC80  F00B         	call	___fladd	;wreg free
  5152  003B4C  C034  F044         	movff	?___fladd,___fldiv@b
  5153  003B50  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5154  003B54  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5155  003B58  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5156  003B5C  0E00               	movlw	0
  5157  003B5E  6E48               	movwf	___fldiv@a^0,c
  5158  003B60  0E00               	movlw	0
  5159  003B62  6E49               	movwf	(___fldiv@a+1)^0,c
  5160  003B64  0E00               	movlw	0
  5161  003B66  6E4A               	movwf	(___fldiv@a+2)^0,c
  5162  003B68  0E40               	movlw	64
  5163  003B6A  6E4B               	movwf	(___fldiv@a+3)^0,c
  5164  003B6C  ECE5  F013         	call	___fldiv	;wreg free
  5165  003B70  C044  F128         	movff	?___fldiv,_sensorIzquierda
  5166  003B74  C045  F129         	movff	?___fldiv+1,_sensorIzquierda+1
  5167  003B78  C046  F12A         	movff	?___fldiv+2,_sensorIzquierda+2
  5168  003B7C  C047  F12B         	movff	?___fldiv+3,_sensorIzquierda+3
  5169                           
  5170                           ;main.c: 1214:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  5171  003B80  C118  F038         	movff	_oldSensorEnfrente,___fladd@a
  5172  003B84  C119  F039         	movff	_oldSensorEnfrente+1,___fladd@a+1
  5173  003B88  C11A  F03A         	movff	_oldSensorEnfrente+2,___fladd@a+2
  5174  003B8C  C11B  F03B         	movff	_oldSensorEnfrente+3,___fladd@a+3
  5175  003B90  0E01               	movlw	1
  5176  003B92  ECD2  F01E         	call	_dameDistancia
  5177  003B96  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5178  003B9A  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5179  003B9E  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5180  003BA2  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5181  003BA6  EC80  F00B         	call	___fladd	;wreg free
  5182  003BAA  C034  F044         	movff	?___fladd,___fldiv@b
  5183  003BAE  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5184  003BB2  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5185  003BB6  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5186  003BBA  0E00               	movlw	0
  5187  003BBC  6E48               	movwf	___fldiv@a^0,c
  5188  003BBE  0E00               	movlw	0
  5189  003BC0  6E49               	movwf	(___fldiv@a+1)^0,c
  5190  003BC2  0E00               	movlw	0
  5191  003BC4  6E4A               	movwf	(___fldiv@a+2)^0,c
  5192  003BC6  0E40               	movlw	64
  5193  003BC8  6E4B               	movwf	(___fldiv@a+3)^0,c
  5194  003BCA  ECE5  F013         	call	___fldiv	;wreg free
  5195  003BCE  C044  F124         	movff	?___fldiv,_sensorEnfrente
  5196  003BD2  C045  F125         	movff	?___fldiv+1,_sensorEnfrente+1
  5197  003BD6  C046  F126         	movff	?___fldiv+2,_sensorEnfrente+2
  5198  003BDA  C047  F127         	movff	?___fldiv+3,_sensorEnfrente+3
  5199  003BDE                     
  5200                           ;main.c: 1216:     oldSensorDerecha = sensorDerecha;
  5201  003BDE  C12C  F120         	movff	_sensorDerecha,_oldSensorDerecha
  5202  003BE2  C12D  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
  5203  003BE6  C12E  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
  5204  003BEA  C12F  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
  5205  003BEE                     
  5206                           ;main.c: 1217:     oldSensorIzquierda = sensorIzquierda;
  5207  003BEE  C128  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
  5208  003BF2  C129  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
  5209  003BF6  C12A  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
  5210  003BFA  C12B  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
  5211  003BFE                     
  5212                           ;main.c: 1218:     oldSensorEnfrente = sensorEnfrente;
  5213  003BFE  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
  5214  003C02  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
  5215  003C06  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
  5216  003C0A  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
  5217  003C0E                     
  5218                           ;main.c: 1223:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
  5219  003C0E  C12C  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
  5220  003C12  C12D  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
  5221  003C16  C12E  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
  5222  003C1A  C12F  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
  5223  003C1E                     
  5224                           ;main.c: 1232:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
  5225  003C1E  C128  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
  5226  003C22  C129  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
  5227  003C26  C12A  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
  5228  003C2A  C12B  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
  5229  003C2E                     
  5230                           ;main.c: 1235:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
  5231  003C2E  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
  5232  003C32  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
  5233  003C36  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
  5234  003C3A  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
  5235  003C3E  0012               	return		;funcret
  5236  003C40                     __end_of_leerSensores:
  5237                           	opt callstack 0
  5238                           
  5239 ;; *************** function _dameDistancia *****************
  5240 ;; Defined at:
  5241 ;;		line 26 in file "./ultrasonico.h"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  numeroSensor    1    wreg     unsigned char 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  numeroSensor    1   32[COMRAM] unsigned char 
  5246 ;;  distancia       4   33[COMRAM] float 
  5247 ;;  conteo          2   37[COMRAM] unsigned int 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  4   26[COMRAM] float 
  5250 ;; Registers used:
  5251 ;;		wreg, status,2, status,0, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5257 ;;      Params:         4       0       0       0       0       0       0       0       0
  5258 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5259 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5260 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5261 ;;Total ram usage:       13 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; Hardware stack levels required when called:    3
  5264 ;; This function calls:
  5265 ;;		___lwdiv
  5266 ;;		___xxtofl
  5267 ;; This function is called by:
  5268 ;;		_inicializarComportamientoBasico
  5269 ;;		_leerSensores
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text15
  5274  003DA4                     __ptext15:
  5275                           	opt callstack 0
  5276  003DA4                     _dameDistancia:
  5277                           	opt callstack 26
  5278                           
  5279                           ;incstack = 0
  5280                           ;dameDistancia@numeroSensor stored from wreg
  5281  003DA4  6E21               	movwf	dameDistancia@numeroSensor^0,c
  5282  003DA6                     
  5283                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
  5284  003DA6  0E00               	movlw	0
  5285  003DA8  6ECF               	movwf	207,c	;volatile
  5286                           
  5287                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
  5288  003DAA  0E00               	movlw	0
  5289  003DAC  6ECE               	movwf	206,c	;volatile
  5290                           
  5291                           ;./ultrasonico.h: 33:     conteo = 0;
  5292  003DAE  0E00               	movlw	0
  5293  003DB0  6E27               	movwf	(dameDistancia@conteo+1)^0,c
  5294  003DB2  0E00               	movlw	0
  5295  003DB4  6E26               	movwf	dameDistancia@conteo^0,c
  5296  003DB6                     
  5297                           ;./ultrasonico.h: 34:     LATD3 = 1;
  5298  003DB6  868C               	bsf	3980,3,c	;volatile
  5299  003DB8                     
  5300                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
  5301  003DB8  0E04               	movlw	4
  5302  003DBA                     u12067:
  5303  003DBA  2EE8               	decfsz	wreg,f,c
  5304  003DBC  D7FE               	bra	u12067
  5305  003DBE                     
  5306                           ;./ultrasonico.h: 36:     LATD3 = 0;
  5307  003DBE  968C               	bcf	3980,3,c	;volatile
  5308                           
  5309                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
  5310  003DC0  EF2A  F01F         	goto	l9807
  5311  003DC4                     l183:
  5312  003DC4  A281               	btfss	129,1,c	;volatile
  5313  003DC6  EFE7  F01E         	goto	u10991
  5314  003DCA  EFE9  F01E         	goto	u10990
  5315  003DCE                     u10991:
  5316  003DCE  EFE2  F01E         	goto	l183
  5317  003DD2                     u10990:
  5318  003DD2                     
  5319                           ;./ultrasonico.h: 43:             TMR1ON = 1;
  5320  003DD2  80CD               	bsf	4045,0,c	;volatile
  5321  003DD4                     l186:
  5322  003DD4  A281               	btfss	129,1,c	;volatile
  5323  003DD6  EFEF  F01E         	goto	u11001
  5324  003DDA  EFF1  F01E         	goto	u11000
  5325  003DDE                     u11001:
  5326  003DDE  EF43  F01F         	goto	l191
  5327  003DE2                     u11000:
  5328  003DE2  A09E               	btfss	3998,0,c	;volatile
  5329  003DE4  EFF6  F01E         	goto	u11011
  5330  003DE8  EFF8  F01E         	goto	u11010
  5331  003DEC                     u11011:
  5332  003DEC  EFEA  F01E         	goto	l186
  5333  003DF0                     u11010:
  5334  003DF0  EF43  F01F         	goto	l191
  5335  003DF4                     l193:
  5336  003DF4  A481               	btfss	129,2,c	;volatile
  5337  003DF6  EFFF  F01E         	goto	u11021
  5338  003DFA  EF01  F01F         	goto	u11020
  5339  003DFE                     u11021:
  5340  003DFE  EFFA  F01E         	goto	l193
  5341  003E02                     u11020:
  5342  003E02                     
  5343                           ;./ultrasonico.h: 51:             TMR1ON = 1;
  5344  003E02  80CD               	bsf	4045,0,c	;volatile
  5345  003E04                     l196:
  5346  003E04  A481               	btfss	129,2,c	;volatile
  5347  003E06  EF07  F01F         	goto	u11031
  5348  003E0A  EF09  F01F         	goto	u11030
  5349  003E0E                     u11031:
  5350  003E0E  EF43  F01F         	goto	l191
  5351  003E12                     u11030:
  5352  003E12  A09E               	btfss	3998,0,c	;volatile
  5353  003E14  EF0E  F01F         	goto	u11041
  5354  003E18  EF10  F01F         	goto	u11040
  5355  003E1C                     u11041:
  5356  003E1C  EF02  F01F         	goto	l196
  5357  003E20                     u11040:
  5358  003E20  EF43  F01F         	goto	l191
  5359  003E24                     l202:
  5360  003E24  A681               	btfss	129,3,c	;volatile
  5361  003E26  EF17  F01F         	goto	u11051
  5362  003E2A  EF19  F01F         	goto	u11050
  5363  003E2E                     u11051:
  5364  003E2E  EF12  F01F         	goto	l202
  5365  003E32                     u11050:
  5366  003E32                     
  5367                           ;./ultrasonico.h: 59:             TMR1ON = 1;
  5368  003E32  80CD               	bsf	4045,0,c	;volatile
  5369  003E34                     l205:
  5370  003E34  A681               	btfss	129,3,c	;volatile
  5371  003E36  EF1F  F01F         	goto	u11061
  5372  003E3A  EF21  F01F         	goto	u11060
  5373  003E3E                     u11061:
  5374  003E3E  EF43  F01F         	goto	l191
  5375  003E42                     u11060:
  5376  003E42  A09E               	btfss	3998,0,c	;volatile
  5377  003E44  EF26  F01F         	goto	u11071
  5378  003E48  EF28  F01F         	goto	u11070
  5379  003E4C                     u11071:
  5380  003E4C  EF1A  F01F         	goto	l205
  5381  003E50                     u11070:
  5382  003E50  EF43  F01F         	goto	l191
  5383  003E54                     l9807:
  5384  003E54  5021               	movf	dameDistancia@numeroSensor^0,w,c
  5385  003E56  6E1F               	movwf	??_dameDistancia^0,c
  5386  003E58  6A20               	clrf	(??_dameDistancia+1)^0,c
  5387                           
  5388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5389                           ; Switch size 1, requested type "simple"
  5390                           ; Number of cases is 1, Range of values is 0 to 0
  5391                           ; switch strategies available:
  5392                           ; Name         Instructions Cycles
  5393                           ; simple_byte            4     3 (average)
  5394                           ;	Chosen strategy is simple_byte
  5395  003E5A  5020               	movf	(??_dameDistancia+1)^0,w,c
  5396  003E5C  0A00               	xorlw	0	; case 0
  5397  003E5E  B4D8               	btfsc	status,2,c
  5398  003E60  EF34  F01F         	goto	l11239
  5399  003E64  EF43  F01F         	goto	l191
  5400  003E68                     l11239:
  5401                           
  5402                           ; Switch size 1, requested type "simple"
  5403                           ; Number of cases is 3, Range of values is 1 to 3
  5404                           ; switch strategies available:
  5405                           ; Name         Instructions Cycles
  5406                           ; simple_byte           10     6 (average)
  5407                           ;	Chosen strategy is simple_byte
  5408  003E68  501F               	movf	??_dameDistancia^0,w,c
  5409  003E6A  0A01               	xorlw	1	; case 1
  5410  003E6C  B4D8               	btfsc	status,2,c
  5411  003E6E  EFE2  F01E         	goto	l183
  5412  003E72  0A03               	xorlw	3	; case 2
  5413  003E74  B4D8               	btfsc	status,2,c
  5414  003E76  EFFA  F01E         	goto	l193
  5415  003E7A  0A01               	xorlw	1	; case 3
  5416  003E7C  B4D8               	btfsc	status,2,c
  5417  003E7E  EF12  F01F         	goto	l202
  5418  003E82  EF43  F01F         	goto	l191
  5419  003E86                     l191:
  5420                           
  5421                           ;./ultrasonico.h: 66:     TMR1ON = 0;
  5422  003E86  90CD               	bcf	4045,0,c	;volatile
  5423                           
  5424                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
  5425  003E88  B09E               	btfsc	3998,0,c	;volatile
  5426  003E8A  EF49  F01F         	goto	u11081
  5427  003E8E  EF4B  F01F         	goto	u11080
  5428  003E92                     u11081:
  5429  003E92  EF71  F01F         	goto	l9813
  5430  003E96                     u11080:
  5431  003E96                     
  5432                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
  5433  003E96  50CF               	movf	207,w,c	;volatile
  5434  003E98  6E20               	movwf	(??_dameDistancia+1)^0,c
  5435  003E9A  6A1F               	clrf	??_dameDistancia^0,c
  5436  003E9C  501F               	movf	??_dameDistancia^0,w,c
  5437  003E9E  1226               	iorwf	dameDistancia@conteo^0,f,c
  5438  003EA0  5020               	movf	(??_dameDistancia+1)^0,w,c
  5439  003EA2  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
  5440                           
  5441                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
  5442  003EA4  50CE               	movf	206,w,c	;volatile
  5443  003EA6  1226               	iorwf	dameDistancia@conteo^0,f,c
  5444  003EA8                     
  5445                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
  5446  003EA8  0E00               	movlw	0
  5447  003EAA  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  5448  003EAC  0E3A               	movlw	58
  5449  003EAE  6E08               	movwf	___lwdiv@divisor^0,c
  5450  003EB0  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
  5451  003EB4  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
  5452  003EB8  ECAC  F026         	call	___lwdiv	;wreg free
  5453  003EBC  C006  F00D         	movff	?___lwdiv,___xxtofl@val
  5454  003EC0  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
  5455  003EC4  6A0F               	clrf	(___xxtofl@val+2)^0,c
  5456  003EC6  6A10               	clrf	(___xxtofl@val+3)^0,c
  5457  003EC8  0E00               	movlw	0
  5458  003ECA  EC34  F01A         	call	___xxtofl
  5459  003ECE  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
  5460  003ED2  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
  5461  003ED6  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
  5462  003EDA  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
  5463                           
  5464                           ;./ultrasonico.h: 73:     } else {
  5465  003EDE  EF7A  F01F         	goto	l9817
  5466  003EE2                     l9813:
  5467  003EE2                     
  5468                           ;./ultrasonico.h: 75:         TMR1IF = 0;
  5469  003EE2  909E               	bcf	3998,0,c	;volatile
  5470                           
  5471                           ;./ultrasonico.h: 76:         distancia = 0;
  5472  003EE4  0E00               	movlw	0
  5473  003EE6  6E22               	movwf	dameDistancia@distancia^0,c
  5474  003EE8  0E00               	movlw	0
  5475  003EEA  6E23               	movwf	(dameDistancia@distancia+1)^0,c
  5476  003EEC  0E00               	movlw	0
  5477  003EEE  6E24               	movwf	(dameDistancia@distancia+2)^0,c
  5478  003EF0  0E00               	movlw	0
  5479  003EF2  6E25               	movwf	(dameDistancia@distancia+3)^0,c
  5480  003EF4                     l9817:
  5481                           
  5482                           ;./ultrasonico.h: 80:     return distancia;
  5483  003EF4  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
  5484  003EF8  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
  5485  003EFC  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
  5486  003F00  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
  5487  003F04  0012               	return		;funcret
  5488  003F06                     __end_of_dameDistancia:
  5489                           	opt callstack 0
  5490                           
  5491 ;; *************** function ___lwdiv *****************
  5492 ;; Defined at:
  5493 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  dividend        2    5[COMRAM] unsigned int 
  5496 ;;  divisor         2    7[COMRAM] unsigned int 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  quotient        2   10[COMRAM] unsigned int 
  5499 ;;  counter         1    9[COMRAM] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  2    5[COMRAM] unsigned int 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5509 ;;      Params:         4       0       0       0       0       0       0       0       0
  5510 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5512 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5513 ;;Total ram usage:        7 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    2
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_dameDistancia
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text16
  5524  004D58                     __ptext16:
  5525                           	opt callstack 0
  5526  004D58                     ___lwdiv:
  5527                           	opt callstack 26
  5528  004D58  0E00               	movlw	0
  5529  004D5A  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  5530  004D5C  0E00               	movlw	0
  5531  004D5E  6E0B               	movwf	___lwdiv@quotient^0,c
  5532  004D60  5008               	movf	___lwdiv@divisor^0,w,c
  5533  004D62  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5534  004D64  B4D8               	btfsc	status,2,c
  5535  004D66  EFB7  F026         	goto	u10961
  5536  004D6A  EFB9  F026         	goto	u10960
  5537  004D6E                     u10961:
  5538  004D6E  EFE1  F026         	goto	l1452
  5539  004D72                     u10960:
  5540  004D72  0E01               	movlw	1
  5541  004D74  6E0A               	movwf	___lwdiv@counter^0,c
  5542  004D76  EFC1  F026         	goto	l9777
  5543  004D7A                     l9775:
  5544  004D7A  90D8               	bcf	status,0,c
  5545  004D7C  3608               	rlcf	___lwdiv@divisor^0,f,c
  5546  004D7E  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5547  004D80  2A0A               	incf	___lwdiv@counter^0,f,c
  5548  004D82                     l9777:
  5549  004D82  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  5550  004D84  EFC6  F026         	goto	u10971
  5551  004D88  EFC8  F026         	goto	u10970
  5552  004D8C                     u10971:
  5553  004D8C  EFBD  F026         	goto	l9775
  5554  004D90                     u10970:
  5555  004D90                     l9779:
  5556  004D90  90D8               	bcf	status,0,c
  5557  004D92  360B               	rlcf	___lwdiv@quotient^0,f,c
  5558  004D94  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5559  004D96  5008               	movf	___lwdiv@divisor^0,w,c
  5560  004D98  5C06               	subwf	___lwdiv@dividend^0,w,c
  5561  004D9A  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  5562  004D9C  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5563  004D9E  A0D8               	btfss	status,0,c
  5564  004DA0  EFD4  F026         	goto	u10981
  5565  004DA4  EFD6  F026         	goto	u10980
  5566  004DA8                     u10981:
  5567  004DA8  EFDB  F026         	goto	l9787
  5568  004DAC                     u10980:
  5569  004DAC  5008               	movf	___lwdiv@divisor^0,w,c
  5570  004DAE  5E06               	subwf	___lwdiv@dividend^0,f,c
  5571  004DB0  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  5572  004DB2  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5573  004DB4  800B               	bsf	___lwdiv@quotient^0,0,c
  5574  004DB6                     l9787:
  5575  004DB6  90D8               	bcf	status,0,c
  5576  004DB8  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5577  004DBA  3208               	rrcf	___lwdiv@divisor^0,f,c
  5578  004DBC  2E0A               	decfsz	___lwdiv@counter^0,f,c
  5579  004DBE  EFC8  F026         	goto	l9779
  5580  004DC2                     l1452:
  5581  004DC2  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  5582  004DC6  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5583  004DCA  0012               	return		;funcret
  5584  004DCC                     __end_of___lwdiv:
  5585                           	opt callstack 0
  5586                           
  5587 ;; *************** function _finalizarRecorrido *****************
  5588 ;; Defined at:
  5589 ;;		line 443 in file "main.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5603 ;;      Params:         0       0       0       0       0       0       0       0       0
  5604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5606 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5607 ;;Total ram usage:        0 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    8
  5610 ;; This function calls:
  5611 ;;		_forzarEspejeo
  5612 ;;		_forzarParoAuto
  5613 ;; This function is called by:
  5614 ;;		_comportamientoBasico
  5615 ;;		_probarPID
  5616 ;;		_probarCruceT
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           	psect	text17
  5621  0057E2                     __ptext17:
  5622                           	opt callstack 0
  5623  0057E2                     _finalizarRecorrido:
  5624                           	opt callstack 21
  5625  0057E2                     
  5626                           ;main.c: 444:     forzarEspejeo();
  5627  0057E2  EC98  F02A         	call	_forzarEspejeo	;wreg free
  5628  0057E6                     
  5629                           ;main.c: 445:     forzarParoAuto();
  5630  0057E6  ECD9  F02B         	call	_forzarParoAuto	;wreg free
  5631  0057EA                     
  5632                           ;main.c: 446:     pausa = 1;
  5633  0057EA  0E01               	movlw	1
  5634  0057EC  0101               	movlb	1	; () banked
  5635  0057EE  6FE9               	movwf	_pausa& (0+255),b
  5636  0057F0                     
  5637                           ; BSR set to: 1
  5638  0057F0  0012               	return		;funcret
  5639  0057F2                     __end_of_finalizarRecorrido:
  5640                           	opt callstack 0
  5641                           
  5642 ;; *************** function _forzarEspejeo *****************
  5643 ;; Defined at:
  5644 ;;		line 527 in file "main.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;		None
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5658 ;;      Params:         0       0       0       0       0       0       0       0       0
  5659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5661 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5662 ;;Total ram usage:        0 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; Hardware stack levels required when called:    7
  5665 ;; This function calls:
  5666 ;;		___flge
  5667 ;;		_forzarEspejeoDerecha
  5668 ;;		_forzarEspejeoIzquierda
  5669 ;; This function is called by:
  5670 ;;		_comportamientoBasico
  5671 ;;		_finalizarRecorrido
  5672 ;;		_moverCarrito
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text18
  5677  005530                     __ptext18:
  5678                           	opt callstack 0
  5679  005530                     _forzarEspejeo:
  5680                           	opt callstack 21
  5681  005530                     
  5682                           ;main.c: 529:     if (sensorIzquierda > sensorDerecha)
  5683  005530  C12C  F034         	movff	_sensorDerecha,___flge@ff1
  5684  005534  C12D  F035         	movff	_sensorDerecha+1,___flge@ff1+1
  5685  005538  C12E  F036         	movff	_sensorDerecha+2,___flge@ff1+2
  5686  00553C  C12F  F037         	movff	_sensorDerecha+3,___flge@ff1+3
  5687  005540  C128  F038         	movff	_sensorIzquierda,___flge@ff2
  5688  005544  C129  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
  5689  005548  C12A  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
  5690  00554C  C12B  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
  5691  005550  EC11  F021         	call	___flge	;wreg free
  5692  005554  B0D8               	btfsc	status,0,c
  5693  005556  EFAF  F02A         	goto	u11151
  5694  00555A  EFB1  F02A         	goto	u11150
  5695  00555E                     u11151:
  5696  00555E  EFB5  F02A         	goto	l9921
  5697  005562                     u11150:
  5698  005562                     
  5699                           ;main.c: 530:         forzarEspejeoIzquierda();
  5700  005562  ECC5  F029         	call	_forzarEspejeoIzquierda	;wreg free
  5701  005566  EFB7  F02A         	goto	l433
  5702  00556A                     l9921:
  5703                           
  5704                           ;main.c: 532:         forzarEspejeoDerecha();
  5705  00556A  ECE9  F029         	call	_forzarEspejeoDerecha	;wreg free
  5706  00556E                     l433:
  5707  00556E  0012               	return		;funcret
  5708  005570                     __end_of_forzarEspejeo:
  5709                           	opt callstack 0
  5710                           
  5711 ;; *************** function _forzarEspejeoIzquierda *****************
  5712 ;; Defined at:
  5713 ;;		line 499 in file "main.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5729 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5730 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5731 ;;Total ram usage:        1 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    6
  5734 ;; This function calls:
  5735 ;;		_forzarGiroIzquierda
  5736 ;;		_forzarParoAuto
  5737 ;;		_forzarReversa
  5738 ;;		_velocidadEstandar
  5739 ;; This function is called by:
  5740 ;;		_forzarEspejeo
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text19
  5745  00538A                     __ptext19:
  5746                           	opt callstack 0
  5747  00538A                     _forzarEspejeoIzquierda:
  5748                           	opt callstack 21
  5749  00538A                     
  5750                           ;main.c: 501:     forzarParoAuto();
  5751  00538A  ECD9  F02B         	call	_forzarParoAuto	;wreg free
  5752  00538E                     
  5753                           ;main.c: 502:     velocidadEstandar();
  5754  00538E  EC5E  F02B         	call	_velocidadEstandar	;wreg free
  5755  005392                     
  5756                           ;main.c: 503:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5757  005392  0E82               	movlw	130
  5758  005394  6E54               	movwf	??_forzarEspejeoIzquierda^0,c
  5759  005396  0EDE               	movlw	222
  5760  005398                     u12077:
  5761  005398  2EE8               	decfsz	wreg,f,c
  5762  00539A  D7FE               	bra	u12077
  5763  00539C  2E54               	decfsz	??_forzarEspejeoIzquierda^0,f,c
  5764  00539E  D7FC               	bra	u12077
  5765  0053A0                     
  5766                           ;main.c: 504:     forzarGiroIzquierda();
  5767  0053A0  ECB9  F02B         	call	_forzarGiroIzquierda	;wreg free
  5768  0053A4                     
  5769                           ;main.c: 505:     forzarParoAuto();
  5770  0053A4  ECD9  F02B         	call	_forzarParoAuto	;wreg free
  5771  0053A8                     
  5772                           ;main.c: 506:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5773  0053A8  0E82               	movlw	130
  5774  0053AA  6E54               	movwf	??_forzarEspejeoIzquierda^0,c
  5775  0053AC  0EDE               	movlw	222
  5776  0053AE                     u12087:
  5777  0053AE  2EE8               	decfsz	wreg,f,c
  5778  0053B0  D7FE               	bra	u12087
  5779  0053B2  2E54               	decfsz	??_forzarEspejeoIzquierda^0,f,c
  5780  0053B4  D7FC               	bra	u12087
  5781  0053B6                     
  5782                           ;main.c: 507:     forzarReversa();
  5783  0053B6  ECA8  F02B         	call	_forzarReversa	;wreg free
  5784  0053BA                     
  5785                           ;main.c: 508:     forzarParoAuto();
  5786  0053BA  ECD9  F02B         	call	_forzarParoAuto	;wreg free
  5787  0053BE                     
  5788                           ;main.c: 509:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5789  0053BE  0E82               	movlw	130
  5790  0053C0  6E54               	movwf	??_forzarEspejeoIzquierda^0,c
  5791  0053C2  0EDE               	movlw	222
  5792  0053C4                     u12097:
  5793  0053C4  2EE8               	decfsz	wreg,f,c
  5794  0053C6  D7FE               	bra	u12097
  5795  0053C8  2E54               	decfsz	??_forzarEspejeoIzquierda^0,f,c
  5796  0053CA  D7FC               	bra	u12097
  5797  0053CC                     
  5798                           ;main.c: 510:     forzarGiroIzquierda();
  5799  0053CC  ECB9  F02B         	call	_forzarGiroIzquierda	;wreg free
  5800  0053D0  0012               	return		;funcret
  5801  0053D2                     __end_of_forzarEspejeoIzquierda:
  5802                           	opt callstack 0
  5803                           
  5804 ;; *************** function _forzarGiroIzquierda *****************
  5805 ;; Defined at:
  5806 ;;		line 481 in file "main.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5820 ;;      Params:         0       0       0       0       0       0       0       0       0
  5821 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5822 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5823 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5824 ;;Total ram usage:        2 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    2
  5827 ;; This function calls:
  5828 ;;		Nothing
  5829 ;; This function is called by:
  5830 ;;		_forzarEspejeoIzquierda
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text20
  5835  005772                     __ptext20:
  5836                           	opt callstack 0
  5837  005772                     _forzarGiroIzquierda:
  5838                           	opt callstack 24
  5839  005772                     
  5840                           ;main.c: 482:     LATB4 = 0;
  5841  005772  988A               	bcf	3978,4,c	;volatile
  5842                           
  5843                           ;main.c: 483:     LATB5 = 0;
  5844  005774  9A8A               	bcf	3978,5,c	;volatile
  5845                           
  5846                           ;main.c: 484:     LATB6 = 1;
  5847  005776  8C8A               	bsf	3978,6,c	;volatile
  5848                           
  5849                           ;main.c: 485:     LATB7 = 0;
  5850  005778  9E8A               	bcf	3978,7,c	;volatile
  5851  00577A                     
  5852                           ;main.c: 486:     _delay((unsigned long)((410)*(4000000/4000.0)));
  5853  00577A  0E03               	movlw	3
  5854  00577C  6E07               	movwf	(??_forzarGiroIzquierda+1)^0,c
  5855  00577E  0E15               	movlw	21
  5856  005780  6E06               	movwf	??_forzarGiroIzquierda^0,c
  5857  005782  0E74               	movlw	116
  5858  005784                     u12107:
  5859  005784  2EE8               	decfsz	wreg,f,c
  5860  005786  D7FE               	bra	u12107
  5861  005788  2E06               	decfsz	??_forzarGiroIzquierda^0,f,c
  5862  00578A  D7FC               	bra	u12107
  5863  00578C  2E07               	decfsz	(??_forzarGiroIzquierda+1)^0,f,c
  5864  00578E  D7FA               	bra	u12107
  5865  005790  0012               	return		;funcret
  5866  005792                     __end_of_forzarGiroIzquierda:
  5867                           	opt callstack 0
  5868                           
  5869 ;; *************** function _forzarEspejeoDerecha *****************
  5870 ;; Defined at:
  5871 ;;		line 513 in file "main.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;		None
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5885 ;;      Params:         0       0       0       0       0       0       0       0       0
  5886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5887 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5888 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5889 ;;Total ram usage:        1 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:    6
  5892 ;; This function calls:
  5893 ;;		_forzarGiroDerecha
  5894 ;;		_forzarParoAuto
  5895 ;;		_forzarReversa
  5896 ;;		_velocidadEstandar
  5897 ;; This function is called by:
  5898 ;;		_forzarEspejeo
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text21
  5903  0053D2                     __ptext21:
  5904                           	opt callstack 0
  5905  0053D2                     _forzarEspejeoDerecha:
  5906                           	opt callstack 21
  5907  0053D2                     
  5908                           ;main.c: 515:     forzarParoAuto();
  5909  0053D2  ECD9  F02B         	call	_forzarParoAuto	;wreg free
  5910  0053D6                     
  5911                           ;main.c: 516:     velocidadEstandar();
  5912  0053D6  EC5E  F02B         	call	_velocidadEstandar	;wreg free
  5913  0053DA                     
  5914                           ;main.c: 517:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5915  0053DA  0E82               	movlw	130
  5916  0053DC  6E54               	movwf	??_forzarEspejeoDerecha^0,c
  5917  0053DE  0EDE               	movlw	222
  5918  0053E0                     u12117:
  5919  0053E0  2EE8               	decfsz	wreg,f,c
  5920  0053E2  D7FE               	bra	u12117
  5921  0053E4  2E54               	decfsz	??_forzarEspejeoDerecha^0,f,c
  5922  0053E6  D7FC               	bra	u12117
  5923  0053E8                     
  5924                           ;main.c: 518:     forzarGiroDerecha();
  5925  0053E8  ECC9  F02B         	call	_forzarGiroDerecha	;wreg free
  5926  0053EC                     
  5927                           ;main.c: 519:     forzarParoAuto();
  5928  0053EC  ECD9  F02B         	call	_forzarParoAuto	;wreg free
  5929  0053F0                     
  5930                           ;main.c: 520:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5931  0053F0  0E82               	movlw	130
  5932  0053F2  6E54               	movwf	??_forzarEspejeoDerecha^0,c
  5933  0053F4  0EDE               	movlw	222
  5934  0053F6                     u12127:
  5935  0053F6  2EE8               	decfsz	wreg,f,c
  5936  0053F8  D7FE               	bra	u12127
  5937  0053FA  2E54               	decfsz	??_forzarEspejeoDerecha^0,f,c
  5938  0053FC  D7FC               	bra	u12127
  5939  0053FE                     
  5940                           ;main.c: 521:     forzarReversa();
  5941  0053FE  ECA8  F02B         	call	_forzarReversa	;wreg free
  5942  005402                     
  5943                           ;main.c: 522:     forzarParoAuto();
  5944  005402  ECD9  F02B         	call	_forzarParoAuto	;wreg free
  5945  005406                     
  5946                           ;main.c: 523:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5947  005406  0E82               	movlw	130
  5948  005408  6E54               	movwf	??_forzarEspejeoDerecha^0,c
  5949  00540A  0EDE               	movlw	222
  5950  00540C                     u12137:
  5951  00540C  2EE8               	decfsz	wreg,f,c
  5952  00540E  D7FE               	bra	u12137
  5953  005410  2E54               	decfsz	??_forzarEspejeoDerecha^0,f,c
  5954  005412  D7FC               	bra	u12137
  5955  005414                     
  5956                           ;main.c: 524:     forzarGiroDerecha();
  5957  005414  ECC9  F02B         	call	_forzarGiroDerecha	;wreg free
  5958  005418  0012               	return		;funcret
  5959  00541A                     __end_of_forzarEspejeoDerecha:
  5960                           	opt callstack 0
  5961                           
  5962 ;; *************** function _velocidadEstandar *****************
  5963 ;; Defined at:
  5964 ;;		line 1323 in file "main.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      void 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5981 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5982 ;;Total ram usage:        0 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    5
  5985 ;; This function calls:
  5986 ;;		_pwmDuty
  5987 ;; This function is called by:
  5988 ;;		_inicializarComportamientoBasico
  5989 ;;		_comportamientoBasico
  5990 ;;		_forzarEspejeoIzquierda
  5991 ;;		_forzarEspejeoDerecha
  5992 ;;		_regresarPuntoPartida
  5993 ;;		_regresarAlCruce
  5994 ;;		_recorrerCaminoEncontrado
  5995 ;;		_probarCruceT
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text22
  6000  0056BC                     __ptext22:
  6001                           	opt callstack 0
  6002  0056BC                     _velocidadEstandar:
  6003                           	opt callstack 24
  6004  0056BC                     
  6005                           ;main.c: 1325:     pwmDuty(100, 1);
  6006  0056BC  0E00               	movlw	0
  6007  0056BE  0100               	movlb	0	; () banked
  6008  0056C0  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  6009  0056C2  0E64               	movlw	100
  6010  0056C4  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  6011  0056C6  0E01               	movlw	1
  6012  0056C8  6F7E               	movwf	pwmDuty@channel& (0+255),b
  6013  0056CA  EC56  F019         	call	_pwmDuty	;wreg free
  6014                           
  6015                           ;main.c: 1326:     pwmDuty(100, 2);
  6016  0056CE  0E00               	movlw	0
  6017  0056D0  0100               	movlb	0	; () banked
  6018  0056D2  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  6019  0056D4  0E64               	movlw	100
  6020  0056D6  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  6021  0056D8  0E02               	movlw	2
  6022  0056DA  6F7E               	movwf	pwmDuty@channel& (0+255),b
  6023  0056DC  EC56  F019         	call	_pwmDuty	;wreg free
  6024  0056E0  0012               	return		;funcret
  6025  0056E2                     __end_of_velocidadEstandar:
  6026                           	opt callstack 0
  6027                           
  6028 ;; *************** function _forzarReversa *****************
  6029 ;; Defined at:
  6030 ;;		line 461 in file "main.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;		None
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;		None
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  1    wreg      void 
  6037 ;; Registers used:
  6038 ;;		wreg
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6044 ;;      Params:         0       0       0       0       0       0       0       0       0
  6045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6046 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6047 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6048 ;;Total ram usage:        2 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:    2
  6051 ;; This function calls:
  6052 ;;		Nothing
  6053 ;; This function is called by:
  6054 ;;		_forzarEspejeoIzquierda
  6055 ;;		_forzarEspejeoDerecha
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text23
  6060  005750                     __ptext23:
  6061                           	opt callstack 0
  6062  005750                     _forzarReversa:
  6063                           	opt callstack 24
  6064  005750                     
  6065                           ;main.c: 462:     LATB4 = 0;
  6066  005750  988A               	bcf	3978,4,c	;volatile
  6067                           
  6068                           ;main.c: 463:     LATB5 = 1;
  6069  005752  8A8A               	bsf	3978,5,c	;volatile
  6070                           
  6071                           ;main.c: 464:     LATB6 = 0;
  6072  005754  9C8A               	bcf	3978,6,c	;volatile
  6073                           
  6074                           ;main.c: 465:     LATB7 = 1;
  6075  005756  8E8A               	bsf	3978,7,c	;volatile
  6076  005758                     
  6077                           ;main.c: 467:     _delay((unsigned long)((400)*(4000000/4000.0)));
  6078  005758  0E03               	movlw	3
  6079  00575A  6E07               	movwf	(??_forzarReversa+1)^0,c
  6080  00575C  0E08               	movlw	8
  6081  00575E  6E06               	movwf	??_forzarReversa^0,c
  6082  005760  0E77               	movlw	119
  6083  005762                     u12147:
  6084  005762  2EE8               	decfsz	wreg,f,c
  6085  005764  D7FE               	bra	u12147
  6086  005766  2E06               	decfsz	??_forzarReversa^0,f,c
  6087  005768  D7FC               	bra	u12147
  6088  00576A  2E07               	decfsz	(??_forzarReversa+1)^0,f,c
  6089  00576C  D7FA               	bra	u12147
  6090  00576E  F000               	nop	
  6091  005770  0012               	return		;funcret
  6092  005772                     __end_of_forzarReversa:
  6093                           	opt callstack 0
  6094                           
  6095 ;; *************** function _forzarParoAuto *****************
  6096 ;; Defined at:
  6097 ;;		line 450 in file "main.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1    wreg      void 
  6104 ;; Registers used:
  6105 ;;		wreg
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6111 ;;      Params:         0       0       0       0       0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6113 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6114 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6115 ;;Total ram usage:        1 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    2
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_comportamientoBasico
  6122 ;;		_finalizarRecorrido
  6123 ;;		_forzarEspejeoIzquierda
  6124 ;;		_forzarEspejeoDerecha
  6125 ;;		_main
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text24
  6130  0057B2                     __ptext24:
  6131                           	opt callstack 0
  6132  0057B2                     _forzarParoAuto:
  6133                           	opt callstack 28
  6134  0057B2                     
  6135                           ;main.c: 452:     LATB4 = 0;
  6136  0057B2  988A               	bcf	3978,4,c	;volatile
  6137                           
  6138                           ;main.c: 453:     LATB5 = 0;
  6139  0057B4  9A8A               	bcf	3978,5,c	;volatile
  6140                           
  6141                           ;main.c: 454:     LATB6 = 0;
  6142  0057B6  9C8A               	bcf	3978,6,c	;volatile
  6143                           
  6144                           ;main.c: 457:     if (!0)
  6145  0057B8  9E8A               	bcf	3978,7,c	;volatile
  6146  0057BA                     
  6147                           ;main.c: 458:         _delay((unsigned long)((30)*(4000000/4000.0)));
  6148  0057BA  0E27               	movlw	39
  6149  0057BC  6E06               	movwf	??_forzarParoAuto^0,c
  6150  0057BE  0EF5               	movlw	245
  6151  0057C0                     u12157:
  6152  0057C0  2EE8               	decfsz	wreg,f,c
  6153  0057C2  D7FE               	bra	u12157
  6154  0057C4  2E06               	decfsz	??_forzarParoAuto^0,f,c
  6155  0057C6  D7FC               	bra	u12157
  6156  0057C8  F000               	nop	
  6157  0057CA  0012               	return		;funcret
  6158  0057CC                     __end_of_forzarParoAuto:
  6159                           	opt callstack 0
  6160                           
  6161 ;; *************** function _forzarGiroDerecha *****************
  6162 ;; Defined at:
  6163 ;;		line 490 in file "main.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;		None
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;		None
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      void 
  6170 ;; Registers used:
  6171 ;;		wreg
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6177 ;;      Params:         0       0       0       0       0       0       0       0       0
  6178 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6179 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6180 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6181 ;;Total ram usage:        2 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    2
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_forzarEspejeoDerecha
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           	psect	text25
  6192  005792                     __ptext25:
  6193                           	opt callstack 0
  6194  005792                     _forzarGiroDerecha:
  6195                           	opt callstack 24
  6196  005792                     
  6197                           ;main.c: 491:     LATB4 = 1;
  6198  005792  888A               	bsf	3978,4,c	;volatile
  6199                           
  6200                           ;main.c: 492:     LATB5 = 0;
  6201  005794  9A8A               	bcf	3978,5,c	;volatile
  6202                           
  6203                           ;main.c: 493:     LATB6 = 0;
  6204  005796  9C8A               	bcf	3978,6,c	;volatile
  6205                           
  6206                           ;main.c: 494:     LATB7 = 0;
  6207  005798  9E8A               	bcf	3978,7,c	;volatile
  6208  00579A                     
  6209                           ;main.c: 495:     _delay((unsigned long)((410)*(4000000/4000.0)));
  6210  00579A  0E03               	movlw	3
  6211  00579C  6E07               	movwf	(??_forzarGiroDerecha+1)^0,c
  6212  00579E  0E15               	movlw	21
  6213  0057A0  6E06               	movwf	??_forzarGiroDerecha^0,c
  6214  0057A2  0E74               	movlw	116
  6215  0057A4                     u12167:
  6216  0057A4  2EE8               	decfsz	wreg,f,c
  6217  0057A6  D7FE               	bra	u12167
  6218  0057A8  2E06               	decfsz	??_forzarGiroDerecha^0,f,c
  6219  0057AA  D7FC               	bra	u12167
  6220  0057AC  2E07               	decfsz	(??_forzarGiroDerecha+1)^0,f,c
  6221  0057AE  D7FA               	bra	u12167
  6222  0057B0  0012               	return		;funcret
  6223  0057B2                     __end_of_forzarGiroDerecha:
  6224                           	opt callstack 0
  6225                           
  6226 ;; *************** function _decidirDireccion *****************
  6227 ;; Defined at:
  6228 ;;		line 885 in file "main.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  caminosRecor    2    0[BANK1 ] PTR unsigned char 
  6231 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
  6232 ;;  investigando    2    2[BANK1 ] PTR unsigned char 
  6233 ;;		 -> comportamientoBasico@investigandoCruce(1), 
  6234 ;;  posicionInvC    2    4[BANK1 ] PTR unsigned char 
  6235 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
  6236 ;;  contCaminosR    2    6[BANK1 ] PTR unsigned char 
  6237 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
  6238 ;;  caminoActual    2    8[BANK1 ] PTR unsigned char 
  6239 ;;		 -> comportamientoBasico@caminoActual(1), 
  6240 ;;  cambioOrient    2   10[BANK1 ] PTR unsigned char 
  6241 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
  6242 ;;  mapear          2   12[BANK1 ] PTR unsigned char 
  6243 ;;		 -> comportamientoBasico@mapear(1), 
  6244 ;;  cruceDetecta    2   14[BANK1 ] PTR unsigned char 
  6245 ;;		 -> comportamientoBasico@cruceDetectado(1), 
  6246 ;;  avanceRectoL    2   16[BANK1 ] PTR unsigned char 
  6247 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  direccionEle    1   83[COMRAM] unsigned char 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  1    wreg      unsigned char 
  6252 ;; Registers used:
  6253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6259 ;;      Params:         0       0      18       0       0       0       0       0       0
  6260 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6261 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6262 ;;      Totals:         1       3      18       0       0       0       0       0       0
  6263 ;;Total ram usage:       22 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:   10
  6266 ;; This function calls:
  6267 ;;		_UART_printf
  6268 ;;		___flge
  6269 ;;		_hayCruce
  6270 ;;		_mostrarDireccionElegida
  6271 ;;		_seLlegoAlDestino
  6272 ;;		_sprintf
  6273 ;;		_velocidadBaja
  6274 ;; This function is called by:
  6275 ;;		_comportamientoBasico
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text26
  6280  001174                     __ptext26:
  6281                           	opt callstack 0
  6282  001174                     _decidirDireccion:
  6283                           	opt callstack 19
  6284  001174                     
  6285                           ;main.c: 885: T_UBYTE decidirDireccion(T_UBYTE* caminosRecorrer, T_UBYTE* investigandoCr
      +                          uce, T_UBYTE* posicionInvCruce,;main.c: 886:         T_UBYTE* contCaminosRecorridos, T_U
      +                          BYTE* caminoActual, T_BOOL* cambioOrientacionCarro,;main.c: 887:         T_UBYTE* mapear
      +                          , T_UBYTE* cruceDetectado, T_BOOL* avanceRectoLargo) {;main.c: 889:     T_UBYTE direccio
      +                          nElegida;;main.c: 890:     llegoDestino = seLlegoAlDestino();
  6286  001174  EC47  F02B         	call	_seLlegoAlDestino	;wreg free
  6287  001178  0100               	movlb	0	; () banked
  6288  00117A  6FFF               	movwf	_llegoDestino& (0+255),b
  6289  00117C                     
  6290                           ; BSR set to: 0
  6291                           ;main.c: 893:     if (*posicionInvCruce && *investigandoCruce) {
  6292  00117C  C1D6  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6293  001180  C1D7  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6294  001184  50DF               	movf	indf2,w,c
  6295  001186  B4D8               	btfsc	status,2,c
  6296  001188  EFC8  F008         	goto	u11281
  6297  00118C  EFCA  F008         	goto	u11280
  6298  001190                     u11281:
  6299  001190  EF9B  F00A         	goto	l10349
  6300  001194                     u11280:
  6301  001194                     
  6302                           ; BSR set to: 0
  6303  001194  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6304  001198  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6305  00119C  50DF               	movf	indf2,w,c
  6306  00119E  B4D8               	btfsc	status,2,c
  6307  0011A0  EFD4  F008         	goto	u11291
  6308  0011A4  EFD6  F008         	goto	u11290
  6309  0011A8                     u11291:
  6310  0011A8  EF9B  F00A         	goto	l10349
  6311  0011AC                     u11290:
  6312  0011AC                     
  6313                           ; BSR set to: 0
  6314                           ;main.c: 895:         if (*posicionInvCruce)
  6315  0011AC  C1D6  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6316  0011B0  C1D7  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6317  0011B4  50DF               	movf	indf2,w,c
  6318  0011B6  B4D8               	btfsc	status,2,c
  6319  0011B8  EFE0  F008         	goto	u11301
  6320  0011BC  EFE2  F008         	goto	u11300
  6321  0011C0                     u11301:
  6322  0011C0  EFE8  F008         	goto	l10105
  6323  0011C4                     u11300:
  6324  0011C4                     
  6325                           ; BSR set to: 0
  6326                           ;main.c: 896:             *posicionInvCruce = 0;
  6327  0011C4  C1D6  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6328  0011C8  C1D7  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6329  0011CC  0E00               	movlw	0
  6330  0011CE  6EDF               	movwf	indf2,c
  6331  0011D0                     l10105:
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;main.c: 898:         if (llegoDestino) {
  6335  0011D0  51FF               	movf	_llegoDestino& (0+255),w,b
  6336  0011D2  B4D8               	btfsc	status,2,c
  6337  0011D4  EFEE  F008         	goto	u11311
  6338  0011D8  EFF0  F008         	goto	u11310
  6339  0011DC                     u11311:
  6340  0011DC  EF51  F009         	goto	l10129
  6341  0011E0                     u11310:
  6342  0011E0                     
  6343                           ; BSR set to: 0
  6344                           ;main.c: 899:             direccionElegida = ALTO;
  6345  0011E0  0E04               	movlw	4
  6346  0011E2  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6347                           
  6348                           ;main.c: 901:         } else {
  6349  0011E4  EF6E  F009         	goto	l10131
  6350  0011E8                     l10109:
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;main.c: 905:                     if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1'
      +                          )
  6354  0011E8  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6355  0011EC  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6356  0011F0  0E31               	movlw	49
  6357  0011F2  18DE               	xorwf	postinc2,w,c
  6358  0011F4  A4D8               	btfss	status,2,c
  6359  0011F6  EFFF  F008         	goto	u11321
  6360  0011FA  EF01  F009         	goto	u11320
  6361  0011FE                     u11321:
  6362  0011FE  EF09  F009         	goto	l10113
  6363  001202                     u11320:
  6364  001202                     
  6365                           ; BSR set to: 0
  6366                           ;main.c: 906:                         caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] = 'X';
  6367  001202  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6368  001206  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6369  00120A  0E58               	movlw	88
  6370  00120C  6EDF               	movwf	indf2,c
  6371  00120E  EF6E  F009         	goto	l10131
  6372  001212                     l10113:
  6373                           
  6374                           ; BSR set to: 0
  6375  001212  0101               	movlb	1	; () banked
  6376  001214  EE20 F001          	lfsr	2,1
  6377  001218  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6378  00121A  26D9               	addwf	fsr2l,f,c
  6379  00121C  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6380  00121E  22DA               	addwfc	fsr2h,f,c
  6381  001220  0E31               	movlw	49
  6382  001222  18DE               	xorwf	postinc2,w,c
  6383  001224  A4D8               	btfss	status,2,c
  6384  001226  EF17  F009         	goto	u11331
  6385  00122A  EF19  F009         	goto	u11330
  6386  00122E                     u11331:
  6387  00122E  EF6E  F009         	goto	l565
  6388  001232                     u11330:
  6389  001232                     l10115:
  6390                           
  6391                           ; BSR set to: 1
  6392  001232  EE20 F001          	lfsr	2,1
  6393  001236  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6394  001238  26D9               	addwf	fsr2l,f,c
  6395  00123A  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6396  00123C  22DA               	addwfc	fsr2h,f,c
  6397  00123E  0E58               	movlw	88
  6398  001240  6EDF               	movwf	indf2,c
  6399  001242  EF6E  F009         	goto	l10131
  6400  001246                     l10117:
  6401                           
  6402                           ; BSR set to: 0
  6403  001246  0101               	movlb	1	; () banked
  6404  001248  EE20 F001          	lfsr	2,1
  6405  00124C  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6406  00124E  26D9               	addwf	fsr2l,f,c
  6407  001250  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6408  001252  22DA               	addwfc	fsr2h,f,c
  6409  001254  0E31               	movlw	49
  6410  001256  18DE               	xorwf	postinc2,w,c
  6411  001258  A4D8               	btfss	status,2,c
  6412  00125A  EF31  F009         	goto	u11341
  6413  00125E  EF33  F009         	goto	u11340
  6414  001262                     u11341:
  6415  001262  EF35  F009         	goto	l10121
  6416  001266                     u11340:
  6417  001266  EF19  F009         	goto	l10115
  6418  00126A                     l10121:
  6419                           
  6420                           ; BSR set to: 1
  6421  00126A  EE20 F002          	lfsr	2,2
  6422  00126E  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6423  001270  26D9               	addwf	fsr2l,f,c
  6424  001272  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6425  001274  22DA               	addwfc	fsr2h,f,c
  6426  001276  0E58               	movlw	88
  6427  001278  6EDF               	movwf	indf2,c
  6428  00127A  EF6E  F009         	goto	l10131
  6429  00127E                     l10123:
  6430                           
  6431                           ; BSR set to: 0
  6432  00127E  0101               	movlb	1	; () banked
  6433  001280  EE20 F002          	lfsr	2,2
  6434  001284  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6435  001286  26D9               	addwf	fsr2l,f,c
  6436  001288  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6437  00128A  22DA               	addwfc	fsr2h,f,c
  6438  00128C  0E31               	movlw	49
  6439  00128E  18DE               	xorwf	postinc2,w,c
  6440  001290  A4D8               	btfss	status,2,c
  6441  001292  EF4D  F009         	goto	u11351
  6442  001296  EF4F  F009         	goto	u11350
  6443  00129A                     u11351:
  6444  00129A  EF6E  F009         	goto	l10131
  6445  00129E                     u11350:
  6446  00129E  EF35  F009         	goto	l10121
  6447  0012A2                     l10129:
  6448                           
  6449                           ; BSR set to: 0
  6450  0012A2  C1D8  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6451  0012A6  C1D9  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6452  0012AA  50DF               	movf	indf2,w,c
  6453  0012AC  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6454  0012AE  6BFC               	clrf	(??_decidirDireccion+1)& (0+255),b
  6455                           
  6456                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6457                           ; Switch size 1, requested type "simple"
  6458                           ; Number of cases is 1, Range of values is 0 to 0
  6459                           ; switch strategies available:
  6460                           ; Name         Instructions Cycles
  6461                           ; simple_byte            4     3 (average)
  6462                           ;	Chosen strategy is simple_byte
  6463  0012B0  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6464  0012B2  0A00               	xorlw	0	; case 0
  6465  0012B4  B4D8               	btfsc	status,2,c
  6466  0012B6  EF5F  F009         	goto	l11241
  6467  0012BA  EF6E  F009         	goto	l10131
  6468  0012BE                     l11241:
  6469                           
  6470                           ; BSR set to: 0
  6471                           ; Switch size 1, requested type "simple"
  6472                           ; Number of cases is 3, Range of values is 1 to 3
  6473                           ; switch strategies available:
  6474                           ; Name         Instructions Cycles
  6475                           ; simple_byte           10     6 (average)
  6476                           ;	Chosen strategy is simple_byte
  6477  0012BE  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6478  0012C0  0A01               	xorlw	1	; case 1
  6479  0012C2  B4D8               	btfsc	status,2,c
  6480  0012C4  EFF4  F008         	goto	l10109
  6481  0012C8  0A03               	xorlw	3	; case 2
  6482  0012CA  B4D8               	btfsc	status,2,c
  6483  0012CC  EF23  F009         	goto	l10117
  6484  0012D0  0A01               	xorlw	1	; case 3
  6485  0012D2  B4D8               	btfsc	status,2,c
  6486  0012D4  EF3F  F009         	goto	l10123
  6487  0012D8  EF6E  F009         	goto	l10131
  6488  0012DC                     l565:
  6489  0012DC                     l10131:
  6490                           
  6491                           ;main.c: 934:         if (!(*cambioOrientacionCarro)) {
  6492  0012DC  C1DC  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6493  0012E0  C1DD  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6494  0012E4  50DF               	movf	indf2,w,c
  6495  0012E6  A4D8               	btfss	status,2,c
  6496  0012E8  EF78  F009         	goto	u11361
  6497  0012EC  EF7A  F009         	goto	u11360
  6498  0012F0                     u11361:
  6499  0012F0  EF6A  F00A         	goto	l10341
  6500  0012F4                     u11360:
  6501  0012F4                     
  6502                           ;main.c: 936:             if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1')
  6503  0012F4  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6504  0012F8  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6505  0012FC  0E31               	movlw	49
  6506  0012FE  18DE               	xorwf	postinc2,w,c
  6507  001300  A4D8               	btfss	status,2,c
  6508  001302  EF85  F009         	goto	u11371
  6509  001306  EF87  F009         	goto	u11370
  6510  00130A                     u11371:
  6511  00130A  EF8B  F009         	goto	l10137
  6512  00130E                     u11370:
  6513  00130E  0E01               	movlw	1
  6514  001310  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6515  001312  EFB0  F009         	goto	l10145
  6516  001316                     l10137:
  6517  001316  0101               	movlb	1	; () banked
  6518  001318  EE20 F001          	lfsr	2,1
  6519  00131C  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6520  00131E  26D9               	addwf	fsr2l,f,c
  6521  001320  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6522  001322  22DA               	addwfc	fsr2h,f,c
  6523  001324  0E31               	movlw	49
  6524  001326  18DE               	xorwf	postinc2,w,c
  6525  001328  A4D8               	btfss	status,2,c
  6526  00132A  EF99  F009         	goto	u11381
  6527  00132E  EF9B  F009         	goto	u11380
  6528  001332                     u11381:
  6529  001332  EF9F  F009         	goto	l10141
  6530  001336                     u11380:
  6531  001336                     
  6532                           ; BSR set to: 1
  6533  001336  0E02               	movlw	2
  6534  001338  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6535  00133A  EFB0  F009         	goto	l10145
  6536  00133E                     l10141:
  6537                           
  6538                           ; BSR set to: 1
  6539  00133E  EE20 F002          	lfsr	2,2
  6540  001342  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6541  001344  26D9               	addwf	fsr2l,f,c
  6542  001346  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6543  001348  22DA               	addwfc	fsr2h,f,c
  6544  00134A  0E31               	movlw	49
  6545  00134C  18DE               	xorwf	postinc2,w,c
  6546  00134E  A4D8               	btfss	status,2,c
  6547  001350  EFAC  F009         	goto	u11391
  6548  001354  EFAE  F009         	goto	u11390
  6549  001358                     u11391:
  6550  001358  EFB0  F009         	goto	l10145
  6551  00135C                     u11390:
  6552  00135C                     
  6553                           ; BSR set to: 1
  6554  00135C  0E03               	movlw	3
  6555  00135E  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6556  001360                     l10145:
  6557                           
  6558                           ;main.c: 944:             *caminoActual = direccionElegida;
  6559  001360  C1DA  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6560  001364  C1DB  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6561  001368  C054  FFDF         	movff	decidirDireccion@direccionElegida,indf2
  6562  00136C                     
  6563                           ;main.c: 945:             *cambioOrientacionCarro = 1;
  6564  00136C  C1DC  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6565  001370  C1DD  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6566  001374  0E01               	movlw	1
  6567  001376  6EDF               	movwf	indf2,c
  6568                           
  6569                           ;main.c: 947:         } else {
  6570  001378  EF88  F00A         	goto	l10343
  6571  00137C                     l595:
  6572                           
  6573                           ; BSR set to: 1
  6574  00137C  EF02  F00A         	goto	l10245
  6575  001380                     l10203:
  6576                           
  6577                           ; BSR set to: 0
  6578                           ;main.c: 1001:                         if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] =
      +                          = 'X') {
  6579  001380  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6580  001384  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6581  001388  0E58               	movlw	88
  6582  00138A  18DE               	xorwf	postinc2,w,c
  6583  00138C  A4D8               	btfss	status,2,c
  6584  00138E  EFCB  F009         	goto	u11401
  6585  001392  EFCD  F009         	goto	u11400
  6586  001396                     u11401:
  6587  001396  EF02  F00A         	goto	l10245
  6588  00139A                     u11400:
  6589  00139A                     
  6590                           ; BSR set to: 0
  6591  00139A  0101               	movlb	1	; () banked
  6592  00139C  EE20 F001          	lfsr	2,1
  6593  0013A0  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6594  0013A2  26D9               	addwf	fsr2l,f,c
  6595  0013A4  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6596  0013A6  22DA               	addwfc	fsr2h,f,c
  6597  0013A8  0E31               	movlw	49
  6598  0013AA  18DE               	xorwf	postinc2,w,c
  6599  0013AC  A4D8               	btfss	status,2,c
  6600  0013AE  EFDB  F009         	goto	u11411
  6601  0013B2  EFDD  F009         	goto	u11410
  6602  0013B6                     u11411:
  6603  0013B6  EFE7  F009         	goto	l10223
  6604  0013BA                     u11410:
  6605  0013BA                     
  6606                           ; BSR set to: 1
  6607                           ;main.c: 1004:                                     caminosRecorrer[SENSOR_PRIORIDAD_MEDI
      +                          A - 1] == '1') {;main.c: 1005:                                 *caminoActual = IZQUIERDA
      +                          ;
  6608  0013BA  C1DA  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6609  0013BE  C1DB  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6610  0013C2  0E02               	movlw	2
  6611  0013C4  6EDF               	movwf	indf2,c
  6612  0013C6                     
  6613                           ; BSR set to: 1
  6614                           ;main.c: 1006:                                 direccionElegida = DERECHA;
  6615  0013C6  0E03               	movlw	3
  6616  0013C8  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6617                           
  6618                           ;main.c: 1007:                             } else if (SENSOR_PRIORIDAD_MEDIA == DERECHA 
      +                          &&
  6619  0013CA  EF02  F00A         	goto	l10245
  6620  0013CE                     l10223:
  6621                           
  6622                           ; BSR set to: 1
  6623  0013CE  EE20 F002          	lfsr	2,2
  6624  0013D2  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6625  0013D4  26D9               	addwf	fsr2l,f,c
  6626  0013D6  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6627  0013D8  22DA               	addwfc	fsr2h,f,c
  6628  0013DA  0E31               	movlw	49
  6629  0013DC  18DE               	xorwf	postinc2,w,c
  6630  0013DE  A4D8               	btfss	status,2,c
  6631  0013E0  EFF4  F009         	goto	u11421
  6632  0013E4  EFF6  F009         	goto	u11420
  6633  0013E8                     u11421:
  6634  0013E8  EFBE  F009         	goto	l595
  6635  0013EC                     u11420:
  6636  0013EC                     
  6637                           ; BSR set to: 1
  6638                           ;main.c: 1016:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1017:                                 *caminoActual = DERECHA;
  6639  0013EC  C1DA  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6640  0013F0  C1DB  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6641  0013F4  0E03               	movlw	3
  6642  0013F6  6EDF               	movwf	indf2,c
  6643  0013F8                     
  6644                           ; BSR set to: 1
  6645                           ;main.c: 1018:                                 direccionElegida = IZQUIERDA;
  6646  0013F8  0E02               	movlw	2
  6647  0013FA  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6648  0013FC  EF02  F00A         	goto	l10245
  6649  001400                     l612:
  6650                           
  6651                           ; BSR set to: 1
  6652  001400  EF88  F00A         	goto	l10343
  6653  001404                     l10245:
  6654  001404  0101               	movlb	1	; () banked
  6655  001406  EE20 F001          	lfsr	2,1
  6656  00140A  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6657  00140C  26D9               	addwf	fsr2l,f,c
  6658  00140E  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6659  001410  22DA               	addwfc	fsr2h,f,c
  6660  001412  0E58               	movlw	88
  6661  001414  18DE               	xorwf	postinc2,w,c
  6662  001416  A4D8               	btfss	status,2,c
  6663  001418  EF10  F00A         	goto	u11431
  6664  00141C  EF12  F00A         	goto	u11430
  6665  001420                     u11431:
  6666  001420  EF88  F00A         	goto	l10343
  6667  001424                     u11430:
  6668  001424                     
  6669                           ; BSR set to: 1
  6670  001424  EE20 F002          	lfsr	2,2
  6671  001428  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6672  00142A  26D9               	addwf	fsr2l,f,c
  6673  00142C  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6674  00142E  22DA               	addwfc	fsr2h,f,c
  6675  001430  0E31               	movlw	49
  6676  001432  18DE               	xorwf	postinc2,w,c
  6677  001434  A4D8               	btfss	status,2,c
  6678  001436  EF1F  F00A         	goto	u11441
  6679  00143A  EF21  F00A         	goto	u11440
  6680  00143E                     u11441:
  6681  00143E  EF00  F00A         	goto	l612
  6682  001442                     u11440:
  6683  001442                     l10249:
  6684                           
  6685                           ; BSR set to: 1
  6686                           ;main.c: 1046:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1047:                                 *caminoActual = DERECHA;
  6687  001442  C1DA  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6688  001446  C1DB  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6689  00144A  0E03               	movlw	3
  6690  00144C  6EDF               	movwf	indf2,c
  6691  00144E                     
  6692                           ; BSR set to: 1
  6693                           ;main.c: 1048:                                 direccionElegida = ENFRENTE;
  6694  00144E  0E01               	movlw	1
  6695  001450  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6696                           
  6697                           ;main.c: 1049:                             } else if (SENSOR_PRIORIDAD_BAJA == ENFRENTE 
      +                          &&
  6698  001452  EF88  F00A         	goto	l10343
  6699  001456                     l10291:
  6700                           
  6701                           ; BSR set to: 0
  6702  001456  0101               	movlb	1	; () banked
  6703  001458  EE20 F001          	lfsr	2,1
  6704  00145C  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6705  00145E  26D9               	addwf	fsr2l,f,c
  6706  001460  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6707  001462  22DA               	addwfc	fsr2h,f,c
  6708  001464  0E58               	movlw	88
  6709  001466  18DE               	xorwf	postinc2,w,c
  6710  001468  A4D8               	btfss	status,2,c
  6711  00146A  EF39  F00A         	goto	u11451
  6712  00146E  EF3B  F00A         	goto	u11450
  6713  001472                     u11451:
  6714  001472  EF88  F00A         	goto	l10343
  6715  001476                     u11450:
  6716  001476                     
  6717                           ; BSR set to: 1
  6718  001476  EE20 F002          	lfsr	2,2
  6719  00147A  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6720  00147C  26D9               	addwf	fsr2l,f,c
  6721  00147E  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6722  001480  22DA               	addwfc	fsr2h,f,c
  6723  001482  0E31               	movlw	49
  6724  001484  18DE               	xorwf	postinc2,w,c
  6725  001486  A4D8               	btfss	status,2,c
  6726  001488  EF48  F00A         	goto	u11461
  6727  00148C  EF4A  F00A         	goto	u11460
  6728  001490                     u11461:
  6729  001490  EF4C  F00A         	goto	l10305
  6730  001494                     u11460:
  6731  001494  EF21  F00A         	goto	l10249
  6732  001498                     l10305:
  6733                           
  6734                           ; BSR set to: 1
  6735                           ;main.c: 1109:                                 *contCaminosRecorridos = 3;
  6736  001498  C1D8  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6737  00149C  C1D9  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6738  0014A0  0E03               	movlw	3
  6739  0014A2  6EDF               	movwf	indf2,c
  6740  0014A4  EF88  F00A         	goto	l10343
  6741  0014A8                     l10335:
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;main.c: 1148:                     *cambioOrientacionCarro = 0;
  6745  0014A8  C1DC  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6746  0014AC  C1DD  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6747  0014B0  0E00               	movlw	0
  6748  0014B2  6EDF               	movwf	indf2,c
  6749                           
  6750                           ;main.c: 1149:                     *contCaminosRecorridos = 0;
  6751  0014B4  C1D8  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6752  0014B8  C1D9  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6753  0014BC  0E00               	movlw	0
  6754  0014BE  6EDF               	movwf	indf2,c
  6755                           
  6756                           ;main.c: 1150:                     *investigandoCruce = 0;
  6757  0014C0  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6758  0014C4  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6759  0014C8  0E00               	movlw	0
  6760  0014CA  6EDF               	movwf	indf2,c
  6761  0014CC                     
  6762                           ; BSR set to: 0
  6763                           ;main.c: 1151:                     direccionElegida = ALTO;
  6764  0014CC  0E04               	movlw	4
  6765  0014CE  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6766                           
  6767                           ;main.c: 1153:                     break;
  6768  0014D0  EF88  F00A         	goto	l10343
  6769  0014D4                     l10341:
  6770  0014D4  C1D8  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6771  0014D8  C1D9  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6772  0014DC  50DF               	movf	indf2,w,c
  6773  0014DE  0100               	movlb	0	; () banked
  6774  0014E0  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6775  0014E2  6BFC               	clrf	(??_decidirDireccion+1)& (0+255),b
  6776                           
  6777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6778                           ; Switch size 1, requested type "simple"
  6779                           ; Number of cases is 1, Range of values is 0 to 0
  6780                           ; switch strategies available:
  6781                           ; Name         Instructions Cycles
  6782                           ; simple_byte            4     3 (average)
  6783                           ;	Chosen strategy is simple_byte
  6784  0014E4  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6785  0014E6  0A00               	xorlw	0	; case 0
  6786  0014E8  B4D8               	btfsc	status,2,c
  6787  0014EA  EF79  F00A         	goto	l11243
  6788  0014EE  EF88  F00A         	goto	l10343
  6789  0014F2                     l11243:
  6790                           
  6791                           ; BSR set to: 0
  6792                           ; Switch size 1, requested type "simple"
  6793                           ; Number of cases is 3, Range of values is 1 to 3
  6794                           ; switch strategies available:
  6795                           ; Name         Instructions Cycles
  6796                           ; simple_byte           10     6 (average)
  6797                           ;	Chosen strategy is simple_byte
  6798  0014F2  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6799  0014F4  0A01               	xorlw	1	; case 1
  6800  0014F6  B4D8               	btfsc	status,2,c
  6801  0014F8  EFC0  F009         	goto	l10203
  6802  0014FC  0A03               	xorlw	3	; case 2
  6803  0014FE  B4D8               	btfsc	status,2,c
  6804  001500  EF2B  F00A         	goto	l10291
  6805  001504  0A01               	xorlw	1	; case 3
  6806  001506  B4D8               	btfsc	status,2,c
  6807  001508  EF54  F00A         	goto	l10335
  6808  00150C  EF88  F00A         	goto	l10343
  6809  001510                     l10343:
  6810                           
  6811                           ;main.c: 1157:         if (direccionElegida == ENFRENTE)
  6812  001510  0454               	decf	decidirDireccion@direccionElegida^0,w,c
  6813  001512  A4D8               	btfss	status,2,c
  6814  001514  EF8E  F00A         	goto	u11471
  6815  001518  EF90  F00A         	goto	u11470
  6816  00151C                     u11471:
  6817  00151C  EF96  F00A         	goto	l10347
  6818  001520                     u11470:
  6819  001520                     
  6820                           ;main.c: 1158:             *avanceRectoLargo = 1;
  6821  001520  C1E2  FFD9         	movff	decidirDireccion@avanceRectoLargo,fsr2l
  6822  001524  C1E3  FFDA         	movff	decidirDireccion@avanceRectoLargo+1,fsr2h
  6823  001528  0E01               	movlw	1
  6824  00152A  6EDF               	movwf	indf2,c
  6825  00152C                     l10347:
  6826                           
  6827                           ;main.c: 1160:         mostrarDireccionElegida(direccionElegida);
  6828  00152C  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  6829  00152E  EC2E  F026         	call	_mostrarDireccionElegida
  6830                           
  6831                           ;main.c: 1162:     } else {
  6832  001532  EF7E  F00B         	goto	l659
  6833  001536                     l10349:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;main.c: 1164:         if (llegoDestino) {
  6837  001536  51FF               	movf	_llegoDestino& (0+255),w,b
  6838  001538  B4D8               	btfsc	status,2,c
  6839  00153A  EFA1  F00A         	goto	u11481
  6840  00153E  EFA3  F00A         	goto	u11480
  6841  001542                     u11481:
  6842  001542  EFA7  F00A         	goto	l10353
  6843  001546                     u11480:
  6844  001546                     
  6845                           ; BSR set to: 0
  6846                           ;main.c: 1165:             direccionElegida = ALTO;
  6847  001546  0E04               	movlw	4
  6848  001548  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6849                           
  6850                           ;main.c: 1167:         } else {
  6851  00154A  EF7E  F00B         	goto	l659
  6852  00154E                     l10353:
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;main.c: 1169:             if (hayCruce(caminosRecorrer, *investigandoCruce)) {
  6856  00154E  C1D2  F040         	movff	decidirDireccion@caminosRecorrer,hayCruce@caminosRecorrer
  6857  001552  C1D3  F041         	movff	decidirDireccion@caminosRecorrer+1,hayCruce@caminosRecorrer+1
  6858  001556  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6859  00155A  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6860  00155E  50DF               	movf	indf2,w,c
  6861  001560  6E42               	movwf	hayCruce@investigandoCruce^0,c
  6862  001562  ECD6  F01B         	call	_hayCruce	;wreg free
  6863  001566  0900               	iorlw	0
  6864  001568  B4D8               	btfsc	status,2,c
  6865  00156A  EFB9  F00A         	goto	u11491
  6866  00156E  EFBB  F00A         	goto	u11490
  6867  001572                     u11491:
  6868  001572  EF25  F00B         	goto	l10369
  6869  001576                     u11490:
  6870  001576                     
  6871                           ;main.c: 1171:                 velocidadBaja();
  6872  001576  EC71  F02B         	call	_velocidadBaja	;wreg free
  6873  00157A                     
  6874                           ;main.c: 1173:                 if (!(*cruceDetectado)) {
  6875  00157A  C1E0  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  6876  00157E  C1E1  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  6877  001582  50DF               	movf	indf2,w,c
  6878  001584  A4D8               	btfss	status,2,c
  6879  001586  EFC7  F00A         	goto	u11501
  6880  00158A  EFC9  F00A         	goto	u11500
  6881  00158E                     u11501:
  6882  00158E  EF7E  F00B         	goto	l659
  6883  001592                     u11500:
  6884  001592                     
  6885                           ;main.c: 1175:                     if (!(*investigandoCruce))
  6886  001592  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6887  001596  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6888  00159A  50DF               	movf	indf2,w,c
  6889  00159C  A4D8               	btfss	status,2,c
  6890  00159E  EFD3  F00A         	goto	u11511
  6891  0015A2  EFD5  F00A         	goto	u11510
  6892  0015A6                     u11511:
  6893  0015A6  EFDB  F00A         	goto	l664
  6894  0015AA                     u11510:
  6895  0015AA                     
  6896                           ;main.c: 1176:                         *posicionInvCruce = 1;
  6897  0015AA  C1D6  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6898  0015AE  C1D7  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6899  0015B2  0E01               	movlw	1
  6900  0015B4  6EDF               	movwf	indf2,c
  6901  0015B6                     l664:
  6902                           
  6903                           ;main.c: 1178:                     *mapear = 1;
  6904  0015B6  C1DE  FFD9         	movff	decidirDireccion@mapear,fsr2l
  6905  0015BA  C1DF  FFDA         	movff	decidirDireccion@mapear+1,fsr2h
  6906  0015BE  0E01               	movlw	1
  6907  0015C0  6EDF               	movwf	indf2,c
  6908                           
  6909                           ;main.c: 1179:                     *cruceDetectado = 1;
  6910  0015C2  C1E0  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  6911  0015C6  C1E1  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  6912  0015CA  0E01               	movlw	1
  6913  0015CC  6EDF               	movwf	indf2,c
  6914                           
  6915                           ;main.c: 1180:                     *investigandoCruce = 1;
  6916  0015CE  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6917  0015D2  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6918  0015D6  0E01               	movlw	1
  6919  0015D8  6EDF               	movwf	indf2,c
  6920  0015DA                     
  6921                           ;main.c: 1181:                     direccionElegida = ALTO;
  6922  0015DA  0E04               	movlw	4
  6923  0015DC  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6924  0015DE                     
  6925                           ;main.c: 1183:                     sprintf(buffer, "Investigando Cruce: %c | %c | %c\n",
  6926  0015DE  0E91               	movlw	low _buffer
  6927  0015E0  0100               	movlb	0	; () banked
  6928  0015E2  6FE7               	movwf	sprintf@s& (0+255),b
  6929  0015E4  0E01               	movlw	high _buffer
  6930  0015E6  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  6931  0015E8  0E88               	movlw	low STR_20
  6932  0015EA  6FE9               	movwf	sprintf@fmt& (0+255),b
  6933  0015EC  0E7E               	movlw	high STR_20
  6934  0015EE  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  6935  0015F0  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6936  0015F4  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6937  0015F8  50DF               	movf	indf2,w,c
  6938  0015FA  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6939  0015FC  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6940  0015FE  6FEB               	movwf	(?_sprintf+4)& (0+255),b
  6941  001600  6BEC               	clrf	(?_sprintf+5)& (0+255),b
  6942  001602  0101               	movlb	1	; () banked
  6943  001604  EE20 F001          	lfsr	2,1
  6944  001608  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6945  00160A  26D9               	addwf	fsr2l,f,c
  6946  00160C  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6947  00160E  22DA               	addwfc	fsr2h,f,c
  6948  001610  50DF               	movf	indf2,w,c
  6949  001612  0100               	movlb	0	; () banked
  6950  001614  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  6951  001616  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6952  001618  6FED               	movwf	(?_sprintf+6)& (0+255),b
  6953  00161A  6BEE               	clrf	(?_sprintf+7)& (0+255),b
  6954  00161C  0101               	movlb	1	; () banked
  6955  00161E  EE20 F002          	lfsr	2,2
  6956  001622  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6957  001624  26D9               	addwf	fsr2l,f,c
  6958  001626  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6959  001628  22DA               	addwfc	fsr2h,f,c
  6960  00162A  50DF               	movf	indf2,w,c
  6961  00162C  0100               	movlb	0	; () banked
  6962  00162E  6FFD               	movwf	(??_decidirDireccion+2)& (0+255),b
  6963  001630  51FD               	movf	(??_decidirDireccion+2)& (0+255),w,b
  6964  001632  6FEF               	movwf	(?_sprintf+8)& (0+255),b
  6965  001634  6BF0               	clrf	(?_sprintf+9)& (0+255),b
  6966  001636  ECFD  F028         	call	_sprintf	;wreg free
  6967  00163A                     
  6968                           ;main.c: 1185:                     UART_printf(buffer);
  6969  00163A  0E91               	movlw	low _buffer
  6970  00163C  6E07               	movwf	UART_printf@cadena^0,c
  6971  00163E  0E01               	movlw	high _buffer
  6972  001640  6E08               	movwf	(UART_printf@cadena+1)^0,c
  6973  001642  EC1D  F028         	call	_UART_printf	;wreg free
  6974  001646  EF7E  F00B         	goto	l659
  6975  00164A                     l10369:
  6976                           
  6977                           ;main.c: 1191:                 if (DISTANCIA_PRIORIDAD_ALTA > 14)
  6978  00164A  0E00               	movlw	0
  6979  00164C  6E34               	movwf	___flge@ff1^0,c
  6980  00164E  0E00               	movlw	0
  6981  001650  6E35               	movwf	(___flge@ff1+1)^0,c
  6982  001652  0E60               	movlw	96
  6983  001654  6E36               	movwf	(___flge@ff1+2)^0,c
  6984  001656  0E41               	movlw	65
  6985  001658  6E37               	movwf	(___flge@ff1+3)^0,c
  6986  00165A  C114  F038         	movff	_DISTANCIA_PRIORIDAD_ALTA,___flge@ff2
  6987  00165E  C115  F039         	movff	_DISTANCIA_PRIORIDAD_ALTA+1,___flge@ff2+1
  6988  001662  C116  F03A         	movff	_DISTANCIA_PRIORIDAD_ALTA+2,___flge@ff2+2
  6989  001666  C117  F03B         	movff	_DISTANCIA_PRIORIDAD_ALTA+3,___flge@ff2+3
  6990  00166A  EC11  F021         	call	___flge	;wreg free
  6991  00166E  B0D8               	btfsc	status,0,c
  6992  001670  EF3C  F00B         	goto	u11521
  6993  001674  EF3E  F00B         	goto	u11520
  6994  001678                     u11521:
  6995  001678  EF42  F00B         	goto	l10373
  6996  00167C                     u11520:
  6997  00167C  0E01               	movlw	1
  6998  00167E  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6999  001680  EF7E  F00B         	goto	l659
  7000  001684                     l10373:
  7001  001684  0E00               	movlw	0
  7002  001686  6E34               	movwf	___flge@ff1^0,c
  7003  001688  0E00               	movlw	0
  7004  00168A  6E35               	movwf	(___flge@ff1+1)^0,c
  7005  00168C  0EF0               	movlw	240
  7006  00168E  6E36               	movwf	(___flge@ff1+2)^0,c
  7007  001690  0E41               	movlw	65
  7008  001692  6E37               	movwf	(___flge@ff1+3)^0,c
  7009  001694  C110  F038         	movff	_DISTANCIA_PRIORIDAD_MEDIA,___flge@ff2
  7010  001698  C111  F039         	movff	_DISTANCIA_PRIORIDAD_MEDIA+1,___flge@ff2+1
  7011  00169C  C112  F03A         	movff	_DISTANCIA_PRIORIDAD_MEDIA+2,___flge@ff2+2
  7012  0016A0  C113  F03B         	movff	_DISTANCIA_PRIORIDAD_MEDIA+3,___flge@ff2+3
  7013  0016A4  EC11  F021         	call	___flge	;wreg free
  7014  0016A8  B0D8               	btfsc	status,0,c
  7015  0016AA  EF59  F00B         	goto	u11531
  7016  0016AE  EF5B  F00B         	goto	u11530
  7017  0016B2                     u11531:
  7018  0016B2  EF5F  F00B         	goto	l10377
  7019  0016B6                     u11530:
  7020  0016B6  0E02               	movlw	2
  7021  0016B8  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7022  0016BA  EF7E  F00B         	goto	l659
  7023  0016BE                     l10377:
  7024  0016BE  0E00               	movlw	0
  7025  0016C0  6E34               	movwf	___flge@ff1^0,c
  7026  0016C2  0E00               	movlw	0
  7027  0016C4  6E35               	movwf	(___flge@ff1+1)^0,c
  7028  0016C6  0EF0               	movlw	240
  7029  0016C8  6E36               	movwf	(___flge@ff1+2)^0,c
  7030  0016CA  0E41               	movlw	65
  7031  0016CC  6E37               	movwf	(___flge@ff1+3)^0,c
  7032  0016CE  C10C  F038         	movff	_DISTANCIA_PRIORIDAD_BAJA,___flge@ff2
  7033  0016D2  C10D  F039         	movff	_DISTANCIA_PRIORIDAD_BAJA+1,___flge@ff2+1
  7034  0016D6  C10E  F03A         	movff	_DISTANCIA_PRIORIDAD_BAJA+2,___flge@ff2+2
  7035  0016DA  C10F  F03B         	movff	_DISTANCIA_PRIORIDAD_BAJA+3,___flge@ff2+3
  7036  0016DE  EC11  F021         	call	___flge	;wreg free
  7037  0016E2  B0D8               	btfsc	status,0,c
  7038  0016E4  EF76  F00B         	goto	u11541
  7039  0016E8  EF78  F00B         	goto	u11540
  7040  0016EC                     u11541:
  7041  0016EC  EF7C  F00B         	goto	l10381
  7042  0016F0                     u11540:
  7043  0016F0  0E03               	movlw	3
  7044  0016F2  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7045  0016F4  EF7E  F00B         	goto	l659
  7046  0016F8                     l10381:
  7047                           
  7048                           ;main.c: 1198:                     direccionElegida = 0;
  7049  0016F8  0E00               	movlw	0
  7050  0016FA  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7051  0016FC                     l659:
  7052                           
  7053                           ;main.c: 1207:     return direccionElegida;
  7054  0016FC  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  7055  0016FE  0012               	return		;funcret
  7056  001700                     __end_of_decidirDireccion:
  7057                           	opt callstack 0
  7058                           
  7059 ;; *************** function _velocidadBaja *****************
  7060 ;; Defined at:
  7061 ;;		line 1330 in file "main.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;		None
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;		None
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7075 ;;      Params:         0       0       0       0       0       0       0       0       0
  7076 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7077 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7078 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7079 ;;Total ram usage:        0 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    5
  7082 ;; This function calls:
  7083 ;;		_pwmDuty
  7084 ;; This function is called by:
  7085 ;;		_comportamientoBasico
  7086 ;;		_decidirDireccion
  7087 ;;		_probarCruceT
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           	psect	text27
  7092  0056E2                     __ptext27:
  7093                           	opt callstack 0
  7094  0056E2                     _velocidadBaja:
  7095                           	opt callstack 24
  7096  0056E2                     
  7097                           ;main.c: 1332:     pwmDuty(70, 1);
  7098  0056E2  0E00               	movlw	0
  7099  0056E4  0100               	movlb	0	; () banked
  7100  0056E6  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7101  0056E8  0E46               	movlw	70
  7102  0056EA  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7103  0056EC  0E01               	movlw	1
  7104  0056EE  6F7E               	movwf	pwmDuty@channel& (0+255),b
  7105  0056F0  EC56  F019         	call	_pwmDuty	;wreg free
  7106                           
  7107                           ;main.c: 1333:     pwmDuty(70, 2);
  7108  0056F4  0E00               	movlw	0
  7109  0056F6  0100               	movlb	0	; () banked
  7110  0056F8  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7111  0056FA  0E46               	movlw	70
  7112  0056FC  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7113  0056FE  0E02               	movlw	2
  7114  005700  6F7E               	movwf	pwmDuty@channel& (0+255),b
  7115  005702  EC56  F019         	call	_pwmDuty	;wreg free
  7116  005706  0012               	return		;funcret
  7117  005708                     __end_of_velocidadBaja:
  7118                           	opt callstack 0
  7119                           
  7120 ;; *************** function _pwmDuty *****************
  7121 ;; Defined at:
  7122 ;;		line 20 in file "./pwm.h"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;  cicloTrabajo    2   28[BANK0 ] unsigned int 
  7125 ;;  channel         1   30[BANK0 ] unsigned char 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  duty            4   36[BANK0 ] long 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7137 ;;      Params:         0       3       0       0       0       0       0       0       0
  7138 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7139 ;;      Temps:          0       5       0       0       0       0       0       0       0
  7140 ;;      Totals:         0      12       0       0       0       0       0       0       0
  7141 ;;Total ram usage:       12 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; Hardware stack levels required when called:    4
  7144 ;; This function calls:
  7145 ;;		___fldiv
  7146 ;;		___flmul
  7147 ;;		___fltol
  7148 ;;		___xxtofl
  7149 ;;		_map
  7150 ;; This function is called by:
  7151 ;;		_PID
  7152 ;;		_velocidadEstandar
  7153 ;;		_velocidadBaja
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text28
  7158  0032AC                     __ptext28:
  7159                           	opt callstack 0
  7160  0032AC                     _pwmDuty:
  7161                           	opt callstack 24
  7162  0032AC                     
  7163                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
  7164  0032AC  C07C  F020         	movff	pwmDuty@cicloTrabajo,map@x
  7165  0032B0  C07D  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
  7166  0032B4  6A22               	clrf	(map@x+2)^0,c
  7167  0032B6  6A23               	clrf	(map@x+3)^0,c
  7168  0032B8  0E00               	movlw	0
  7169  0032BA  6E24               	movwf	map@in_min^0,c
  7170  0032BC  0E00               	movlw	0
  7171  0032BE  6E25               	movwf	(map@in_min+1)^0,c
  7172  0032C0  0E00               	movlw	0
  7173  0032C2  6E26               	movwf	(map@in_min+2)^0,c
  7174  0032C4  0E00               	movlw	0
  7175  0032C6  6E27               	movwf	(map@in_min+3)^0,c
  7176  0032C8  0E64               	movlw	100
  7177  0032CA  6E28               	movwf	map@in_max^0,c
  7178  0032CC  0E00               	movlw	0
  7179  0032CE  6E29               	movwf	(map@in_max+1)^0,c
  7180  0032D0  0E00               	movlw	0
  7181  0032D2  6E2A               	movwf	(map@in_max+2)^0,c
  7182  0032D4  0E00               	movlw	0
  7183  0032D6  6E2B               	movwf	(map@in_max+3)^0,c
  7184  0032D8  0E00               	movlw	0
  7185  0032DA  6E2C               	movwf	map@out_min^0,c
  7186  0032DC  0E00               	movlw	0
  7187  0032DE  6E2D               	movwf	(map@out_min+1)^0,c
  7188  0032E0  0E00               	movlw	0
  7189  0032E2  6E2E               	movwf	(map@out_min+2)^0,c
  7190  0032E4  0E00               	movlw	0
  7191  0032E6  6E2F               	movwf	(map@out_min+3)^0,c
  7192  0032E8  0EFF               	movlw	255
  7193  0032EA  6E30               	movwf	map@out_max^0,c
  7194  0032EC  0E03               	movlw	3
  7195  0032EE  6E31               	movwf	(map@out_max+1)^0,c
  7196  0032F0  0E00               	movlw	0
  7197  0032F2  6E32               	movwf	(map@out_max+2)^0,c
  7198  0032F4  0E00               	movlw	0
  7199  0032F6  6E33               	movwf	(map@out_max+3)^0,c
  7200  0032F8  EC6F  F026         	call	_map	;wreg free
  7201  0032FC  C020  F084         	movff	?_map,pwmDuty@duty
  7202  003300  C021  F085         	movff	?_map+1,pwmDuty@duty+1
  7203  003304  C022  F086         	movff	?_map+2,pwmDuty@duty+2
  7204  003308  C023  F087         	movff	?_map+3,pwmDuty@duty+3
  7205  00330C                     
  7206                           ;./pwm.h: 24:     if (duty < 1024) {
  7207  00330C  0100               	movlb	0	; () banked
  7208  00330E  BF87               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
  7209  003310  EF96  F019         	goto	u9810
  7210  003314  5187               	movf	(pwmDuty@duty+3)& (0+255),w,b
  7211  003316  1186               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
  7212  003318  E107               	bnz	u9811
  7213  00331A  0E04               	movlw	4
  7214  00331C  5D85               	subwf	(pwmDuty@duty+1)& (0+255),w,b
  7215  00331E  B0D8               	btfsc	status,0,c
  7216  003320  EF94  F019         	goto	u9811
  7217  003324  EF96  F019         	goto	u9810
  7218  003328                     u9811:
  7219  003328  EF33  F01A         	goto	l155
  7220  00332C                     u9810:
  7221  00332C                     
  7222                           ; BSR set to: 0
  7223                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
  7224  00332C  0E00               	movlw	0
  7225  00332E  6E1F               	movwf	___flmul@a^0,c
  7226  003330  0E00               	movlw	0
  7227  003332  6E20               	movwf	(___flmul@a+1)^0,c
  7228  003334  0EFA               	movlw	250
  7229  003336  6E21               	movwf	(___flmul@a+2)^0,c
  7230  003338  0E43               	movlw	67
  7231  00333A  6E22               	movwf	(___flmul@a+3)^0,c
  7232  00333C  0E00               	movlw	0
  7233  00333E  6E48               	movwf	___fldiv@a^0,c
  7234  003340  0EC0               	movlw	192
  7235  003342  6E49               	movwf	(___fldiv@a+1)^0,c
  7236  003344  0E7F               	movlw	127
  7237  003346  6E4A               	movwf	(___fldiv@a+2)^0,c
  7238  003348  0E44               	movlw	68
  7239  00334A  6E4B               	movwf	(___fldiv@a+3)^0,c
  7240  00334C  C084  F00D         	movff	pwmDuty@duty,___xxtofl@val
  7241  003350  C085  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
  7242  003354  C086  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
  7243  003358  C087  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
  7244  00335C  0E01               	movlw	1
  7245  00335E  EC34  F01A         	call	___xxtofl
  7246  003362  C00D  F044         	movff	?___xxtofl,___fldiv@b
  7247  003366  C00E  F045         	movff	?___xxtofl+1,___fldiv@b+1
  7248  00336A  C00F  F046         	movff	?___xxtofl+2,___fldiv@b+2
  7249  00336E  C010  F047         	movff	?___xxtofl+3,___fldiv@b+3
  7250  003372  ECE5  F013         	call	___fldiv	;wreg free
  7251  003376  C044  F01B         	movff	?___fldiv,___flmul@b
  7252  00337A  C045  F01C         	movff	?___fldiv+1,___flmul@b+1
  7253  00337E  C046  F01D         	movff	?___fldiv+2,___flmul@b+2
  7254  003382  C047  F01E         	movff	?___fldiv+3,___flmul@b+3
  7255  003386  ECF7  F00F         	call	___flmul	;wreg free
  7256  00338A  C01B  F072         	movff	?___flmul,___fltol@f1
  7257  00338E  C01C  F073         	movff	?___flmul+1,___fltol@f1+1
  7258  003392  C01D  F074         	movff	?___flmul+2,___fltol@f1+2
  7259  003396  C01E  F075         	movff	?___flmul+3,___fltol@f1+3
  7260  00339A  EC8D  F020         	call	___fltol	;wreg free
  7261  00339E  C072  F084         	movff	?___fltol,pwmDuty@duty
  7262  0033A2  C073  F085         	movff	?___fltol+1,pwmDuty@duty+1
  7263  0033A6  C074  F086         	movff	?___fltol+2,pwmDuty@duty+2
  7264  0033AA  C075  F087         	movff	?___fltol+3,pwmDuty@duty+3
  7265                           
  7266                           ;./pwm.h: 28:         switch (channel) {
  7267  0033AE  EF1D  F01A         	goto	l9091
  7268  0033B2                     l9085:
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
  7272  0033B2  0E02               	movlw	2
  7273  0033B4  6F7F               	movwf	??_pwmDuty& (0+255),b
  7274  0033B6  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
  7275  0033BA  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7276  0033BE  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7277  0033C2  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7278  0033C6                     u9825:
  7279  0033C6  677F               	tstfsz	??_pwmDuty& (0+255),b
  7280  0033C8  EFE8  F019         	goto	u9826
  7281  0033CC  EFF0  F019         	goto	u9827
  7282  0033D0                     u9826:
  7283  0033D0  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7284  0033D2  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7285  0033D4  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7286  0033D6  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7287  0033D8  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7288  0033DA  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
  7289  0033DC  EFE3  F019         	goto	u9825
  7290  0033E0                     u9827:
  7291  0033E0  0100               	movlb	0	; () banked
  7292  0033E2  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7293  0033E4  6EBE               	movwf	190,c	;volatile
  7294                           
  7295                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
  7296  0033E6  0ECF               	movlw	207
  7297  0033E8  16BD               	andwf	189,f,c	;volatile
  7298                           
  7299                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
  7300  0033EA  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7301  0033EC  0BF0               	andlw	240
  7302  0033EE  0B30               	andlw	48
  7303  0033F0  12BD               	iorwf	189,f,c	;volatile
  7304                           
  7305                           ;./pwm.h: 34:                 break;
  7306  0033F2  EF33  F01A         	goto	l155
  7307  0033F6                     l9087:
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
  7311  0033F6  0E02               	movlw	2
  7312  0033F8  6F7F               	movwf	??_pwmDuty& (0+255),b
  7313  0033FA  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
  7314  0033FE  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7315  003402  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7316  003406  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7317  00340A                     u9835:
  7318  00340A  677F               	tstfsz	??_pwmDuty& (0+255),b
  7319  00340C  EF0A  F01A         	goto	u9836
  7320  003410  EF12  F01A         	goto	u9837
  7321  003414                     u9836:
  7322  003414  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7323  003416  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7324  003418  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7325  00341A  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7326  00341C  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7327  00341E  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
  7328  003420  EF05  F01A         	goto	u9835
  7329  003424                     u9837:
  7330  003424  0100               	movlb	0	; () banked
  7331  003426  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7332  003428  6EBB               	movwf	187,c	;volatile
  7333                           
  7334                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
  7335  00342A  0ECF               	movlw	207
  7336  00342C  16BA               	andwf	186,f,c	;volatile
  7337                           
  7338                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
  7339  00342E  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7340  003430  0BF0               	andlw	240
  7341  003432  0B30               	andlw	48
  7342  003434  12BA               	iorwf	186,f,c	;volatile
  7343                           
  7344                           ;./pwm.h: 40:                 break;
  7345  003436  EF33  F01A         	goto	l155
  7346  00343A                     l9091:
  7347  00343A  0100               	movlb	0	; () banked
  7348  00343C  517E               	movf	pwmDuty@channel& (0+255),w,b
  7349  00343E  6F7F               	movwf	??_pwmDuty& (0+255),b
  7350  003440  6B80               	clrf	(??_pwmDuty+1)& (0+255),b
  7351                           
  7352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7353                           ; Switch size 1, requested type "simple"
  7354                           ; Number of cases is 1, Range of values is 0 to 0
  7355                           ; switch strategies available:
  7356                           ; Name         Instructions Cycles
  7357                           ; simple_byte            4     3 (average)
  7358                           ;	Chosen strategy is simple_byte
  7359  003442  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7360  003444  0A00               	xorlw	0	; case 0
  7361  003446  B4D8               	btfsc	status,2,c
  7362  003448  EF28  F01A         	goto	l11245
  7363  00344C  EF33  F01A         	goto	l155
  7364  003450                     l11245:
  7365                           
  7366                           ; BSR set to: 0
  7367                           ; Switch size 1, requested type "simple"
  7368                           ; Number of cases is 2, Range of values is 1 to 2
  7369                           ; switch strategies available:
  7370                           ; Name         Instructions Cycles
  7371                           ; simple_byte            7     4 (average)
  7372                           ;	Chosen strategy is simple_byte
  7373  003450  517F               	movf	??_pwmDuty& (0+255),w,b
  7374  003452  0A01               	xorlw	1	; case 1
  7375  003454  B4D8               	btfsc	status,2,c
  7376  003456  EFD9  F019         	goto	l9085
  7377  00345A  0A03               	xorlw	3	; case 2
  7378  00345C  B4D8               	btfsc	status,2,c
  7379  00345E  EFFB  F019         	goto	l9087
  7380  003462  EF33  F01A         	goto	l155
  7381  003466                     l155:
  7382                           
  7383                           ; BSR set to: 0
  7384  003466  0012               	return		;funcret
  7385  003468                     __end_of_pwmDuty:
  7386                           	opt callstack 0
  7387                           
  7388 ;; *************** function _map *****************
  7389 ;; Defined at:
  7390 ;;		line 16 in file "./pwm.h"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;  x               4   31[COMRAM] long 
  7393 ;;  in_min          4   35[COMRAM] long 
  7394 ;;  in_max          4   39[COMRAM] long 
  7395 ;;  out_min         4   43[COMRAM] long 
  7396 ;;  out_max         4   47[COMRAM] long 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;		None
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  4   31[COMRAM] long 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2, status,0, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7408 ;;      Params:        20       0       0       0       0       0       0       0       0
  7409 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7411 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7412 ;;Total ram usage:       20 bytes
  7413 ;; Hardware stack levels used:    1
  7414 ;; Hardware stack levels required when called:    3
  7415 ;; This function calls:
  7416 ;;		___aldiv
  7417 ;;		___lmul
  7418 ;; This function is called by:
  7419 ;;		_pwmDuty
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text29
  7424  004CDE                     __ptext29:
  7425                           	opt callstack 0
  7426  004CDE                     _map:
  7427                           	opt callstack 24
  7428  004CDE                     
  7429                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  7430  004CDE  5024               	movf	map@in_min^0,w,c
  7431  004CE0  5C20               	subwf	map@x^0,w,c
  7432  004CE2  6E06               	movwf	___lmul@multiplier^0,c
  7433  004CE4  5025               	movf	(map@in_min+1)^0,w,c
  7434  004CE6  5821               	subwfb	(map@x+1)^0,w,c
  7435  004CE8  6E07               	movwf	(___lmul@multiplier+1)^0,c
  7436  004CEA  5026               	movf	(map@in_min+2)^0,w,c
  7437  004CEC  5822               	subwfb	(map@x+2)^0,w,c
  7438  004CEE  6E08               	movwf	(___lmul@multiplier+2)^0,c
  7439  004CF0  5027               	movf	(map@in_min+3)^0,w,c
  7440  004CF2  5823               	subwfb	(map@x+3)^0,w,c
  7441  004CF4  6E09               	movwf	(___lmul@multiplier+3)^0,c
  7442  004CF6  502C               	movf	map@out_min^0,w,c
  7443  004CF8  5C30               	subwf	map@out_max^0,w,c
  7444  004CFA  6E0A               	movwf	___lmul@multiplicand^0,c
  7445  004CFC  502D               	movf	(map@out_min+1)^0,w,c
  7446  004CFE  5831               	subwfb	(map@out_max+1)^0,w,c
  7447  004D00  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  7448  004D02  502E               	movf	(map@out_min+2)^0,w,c
  7449  004D04  5832               	subwfb	(map@out_max+2)^0,w,c
  7450  004D06  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  7451  004D08  502F               	movf	(map@out_min+3)^0,w,c
  7452  004D0A  5833               	subwfb	(map@out_max+3)^0,w,c
  7453  004D0C  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  7454  004D0E  EC1E  F027         	call	___lmul	;wreg free
  7455  004D12  C006  F012         	movff	?___lmul,___aldiv@dividend
  7456  004D16  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
  7457  004D1A  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
  7458  004D1E  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
  7459  004D22  5024               	movf	map@in_min^0,w,c
  7460  004D24  5C28               	subwf	map@in_max^0,w,c
  7461  004D26  6E16               	movwf	___aldiv@divisor^0,c
  7462  004D28  5025               	movf	(map@in_min+1)^0,w,c
  7463  004D2A  5829               	subwfb	(map@in_max+1)^0,w,c
  7464  004D2C  6E17               	movwf	(___aldiv@divisor+1)^0,c
  7465  004D2E  5026               	movf	(map@in_min+2)^0,w,c
  7466  004D30  582A               	subwfb	(map@in_max+2)^0,w,c
  7467  004D32  6E18               	movwf	(___aldiv@divisor+2)^0,c
  7468  004D34  5027               	movf	(map@in_min+3)^0,w,c
  7469  004D36  582B               	subwfb	(map@in_max+3)^0,w,c
  7470  004D38  6E19               	movwf	(___aldiv@divisor+3)^0,c
  7471  004D3A  EC83  F01F         	call	___aldiv	;wreg free
  7472  004D3E  502C               	movf	map@out_min^0,w,c
  7473  004D40  2412               	addwf	?___aldiv^0,w,c
  7474  004D42  6E20               	movwf	?_map^0,c
  7475  004D44  502D               	movf	(map@out_min+1)^0,w,c
  7476  004D46  2013               	addwfc	(?___aldiv+1)^0,w,c
  7477  004D48  6E21               	movwf	(?_map+1)^0,c
  7478  004D4A  502E               	movf	(map@out_min+2)^0,w,c
  7479  004D4C  2014               	addwfc	(?___aldiv+2)^0,w,c
  7480  004D4E  6E22               	movwf	(?_map+2)^0,c
  7481  004D50  502F               	movf	(map@out_min+3)^0,w,c
  7482  004D52  2015               	addwfc	(?___aldiv+3)^0,w,c
  7483  004D54  6E23               	movwf	(?_map+3)^0,c
  7484  004D56  0012               	return		;funcret
  7485  004D58                     __end_of_map:
  7486                           	opt callstack 0
  7487                           
  7488 ;; *************** function ___lmul *****************
  7489 ;; Defined at:
  7490 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  multiplier      4    5[COMRAM] unsigned long 
  7493 ;;  multiplicand    4    9[COMRAM] unsigned long 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  product         4   13[COMRAM] unsigned long 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  4    5[COMRAM] unsigned long 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7505 ;;      Params:         8       0       0       0       0       0       0       0       0
  7506 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7508 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7509 ;;Total ram usage:       12 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    2
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_map
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           	psect	text30
  7520  004E3C                     __ptext30:
  7521                           	opt callstack 0
  7522  004E3C                     ___lmul:
  7523                           	opt callstack 24
  7524  004E3C  0E00               	movlw	0
  7525  004E3E  6E0E               	movwf	___lmul@product^0,c
  7526  004E40  0E00               	movlw	0
  7527  004E42  6E0F               	movwf	(___lmul@product+1)^0,c
  7528  004E44  0E00               	movlw	0
  7529  004E46  6E10               	movwf	(___lmul@product+2)^0,c
  7530  004E48  0E00               	movlw	0
  7531  004E4A  6E11               	movwf	(___lmul@product+3)^0,c
  7532  004E4C                     l8139:
  7533  004E4C  A006               	btfss	___lmul@multiplier^0,0,c
  7534  004E4E  EF2B  F027         	goto	u8101
  7535  004E52  EF2D  F027         	goto	u8100
  7536  004E56                     u8101:
  7537  004E56  EF35  F027         	goto	l8143
  7538  004E5A                     u8100:
  7539  004E5A  500A               	movf	___lmul@multiplicand^0,w,c
  7540  004E5C  260E               	addwf	___lmul@product^0,f,c
  7541  004E5E  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  7542  004E60  220F               	addwfc	(___lmul@product+1)^0,f,c
  7543  004E62  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  7544  004E64  2210               	addwfc	(___lmul@product+2)^0,f,c
  7545  004E66  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  7546  004E68  2211               	addwfc	(___lmul@product+3)^0,f,c
  7547  004E6A                     l8143:
  7548  004E6A  90D8               	bcf	status,0,c
  7549  004E6C  360A               	rlcf	___lmul@multiplicand^0,f,c
  7550  004E6E  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7551  004E70  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7552  004E72  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7553  004E74  90D8               	bcf	status,0,c
  7554  004E76  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  7555  004E78  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  7556  004E7A  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  7557  004E7C  3206               	rrcf	___lmul@multiplier^0,f,c
  7558  004E7E  5006               	movf	___lmul@multiplier^0,w,c
  7559  004E80  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  7560  004E82  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  7561  004E84  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  7562  004E86  A4D8               	btfss	status,2,c
  7563  004E88  EF48  F027         	goto	u8111
  7564  004E8C  EF4A  F027         	goto	u8110
  7565  004E90                     u8111:
  7566  004E90  EF26  F027         	goto	l8139
  7567  004E94                     u8110:
  7568  004E94  C00E  F006         	movff	___lmul@product,?___lmul
  7569  004E98  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  7570  004E9C  C010  F008         	movff	___lmul@product+2,?___lmul+2
  7571  004EA0  C011  F009         	movff	___lmul@product+3,?___lmul+3
  7572  004EA4  0012               	return		;funcret
  7573  004EA6                     __end_of___lmul:
  7574                           	opt callstack 0
  7575                           
  7576 ;; *************** function ___xxtofl *****************
  7577 ;; Defined at:
  7578 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;  sign            1    wreg     unsigned char 
  7581 ;;  val             4   12[COMRAM] long 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  sign            1   20[COMRAM] unsigned char 
  7584 ;;  arg             4   22[COMRAM] unsigned long 
  7585 ;;  exp             1   21[COMRAM] unsigned char 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  4   12[COMRAM] unsigned char 
  7588 ;; Registers used:
  7589 ;;		wreg, status,2, status,0
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7595 ;;      Params:         4       0       0       0       0       0       0       0       0
  7596 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7597 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7598 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7599 ;;Total ram usage:       14 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:    2
  7602 ;; This function calls:
  7603 ;;		Nothing
  7604 ;; This function is called by:
  7605 ;;		_pwmDuty
  7606 ;;		_dameDistancia
  7607 ;;		_PID
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           	psect	text31
  7612  003468                     __ptext31:
  7613                           	opt callstack 0
  7614  003468                     ___xxtofl:
  7615                           	opt callstack 25
  7616                           
  7617                           ;incstack = 0
  7618                           ;___xxtofl@sign stored from wreg
  7619  003468  6E15               	movwf	___xxtofl@sign^0,c
  7620  00346A  5015               	movf	___xxtofl@sign^0,w,c
  7621  00346C  B4D8               	btfsc	status,2,c
  7622  00346E  EF3B  F01A         	goto	u9691
  7623  003472  EF3D  F01A         	goto	u9690
  7624  003476                     u9691:
  7625  003476  EF5F  F01A         	goto	l1616
  7626  00347A                     u9690:
  7627  00347A  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7628  00347C  EF44  F01A         	goto	u9700
  7629  003480  EF42  F01A         	goto	u9701
  7630  003484                     u9701:
  7631  003484  EF5F  F01A         	goto	l1616
  7632  003488                     u9700:
  7633  003488  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  7634  00348C  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  7635  003490  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  7636  003494  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  7637  003498  1E11               	comf	??___xxtofl^0,f,c
  7638  00349A  1E12               	comf	(??___xxtofl+1)^0,f,c
  7639  00349C  1E13               	comf	(??___xxtofl+2)^0,f,c
  7640  00349E  1E14               	comf	(??___xxtofl+3)^0,f,c
  7641  0034A0  2A11               	incf	??___xxtofl^0,f,c
  7642  0034A2  0E00               	movlw	0
  7643  0034A4  2212               	addwfc	(??___xxtofl+1)^0,f,c
  7644  0034A6  2213               	addwfc	(??___xxtofl+2)^0,f,c
  7645  0034A8  2214               	addwfc	(??___xxtofl+3)^0,f,c
  7646  0034AA  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  7647  0034AE  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  7648  0034B2  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  7649  0034B6  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  7650  0034BA  EF67  F01A         	goto	l9027
  7651  0034BE                     l1616:
  7652  0034BE  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  7653  0034C2  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7654  0034C6  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7655  0034CA  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7656  0034CE                     l9027:
  7657  0034CE  500D               	movf	___xxtofl@val^0,w,c
  7658  0034D0  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  7659  0034D2  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  7660  0034D4  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  7661  0034D6  A4D8               	btfss	status,2,c
  7662  0034D8  EF70  F01A         	goto	u9711
  7663  0034DC  EF72  F01A         	goto	u9710
  7664  0034E0                     u9711:
  7665  0034E0  EF7C  F01A         	goto	l9033
  7666  0034E4                     u9710:
  7667  0034E4  0E00               	movlw	0
  7668  0034E6  6E0D               	movwf	?___xxtofl^0,c
  7669  0034E8  0E00               	movlw	0
  7670  0034EA  6E0E               	movwf	(?___xxtofl+1)^0,c
  7671  0034EC  0E00               	movlw	0
  7672  0034EE  6E0F               	movwf	(?___xxtofl+2)^0,c
  7673  0034F0  0E00               	movlw	0
  7674  0034F2  6E10               	movwf	(?___xxtofl+3)^0,c
  7675  0034F4  EF0D  F01B         	goto	l1619
  7676  0034F8                     l9033:
  7677  0034F8  0E96               	movlw	150
  7678  0034FA  6E16               	movwf	___xxtofl@exp^0,c
  7679  0034FC  EF86  F01A         	goto	l9037
  7680  003500                     l9035:
  7681  003500  2A16               	incf	___xxtofl@exp^0,f,c
  7682  003502  90D8               	bcf	status,0,c
  7683  003504  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7684  003506  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7685  003508  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7686  00350A  3217               	rrcf	___xxtofl@arg^0,f,c
  7687  00350C                     l9037:
  7688  00350C  0E00               	movlw	0
  7689  00350E  1417               	andwf	___xxtofl@arg^0,w,c
  7690  003510  6E11               	movwf	??___xxtofl^0,c
  7691  003512  0E00               	movlw	0
  7692  003514  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7693  003516  6E12               	movwf	(??___xxtofl+1)^0,c
  7694  003518  0E00               	movlw	0
  7695  00351A  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7696  00351C  6E13               	movwf	(??___xxtofl+2)^0,c
  7697  00351E  0EFE               	movlw	254
  7698  003520  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7699  003522  6E14               	movwf	(??___xxtofl+3)^0,c
  7700  003524  5011               	movf	??___xxtofl^0,w,c
  7701  003526  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7702  003528  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7703  00352A  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7704  00352C  A4D8               	btfss	status,2,c
  7705  00352E  EF9B  F01A         	goto	u9721
  7706  003532  EF9D  F01A         	goto	u9720
  7707  003536                     u9721:
  7708  003536  EF80  F01A         	goto	l9035
  7709  00353A                     u9720:
  7710  00353A  EFAB  F01A         	goto	l1623
  7711  00353E                     l9039:
  7712  00353E  2A16               	incf	___xxtofl@exp^0,f,c
  7713  003540  0E01               	movlw	1
  7714  003542  2617               	addwf	___xxtofl@arg^0,f,c
  7715  003544  0E00               	movlw	0
  7716  003546  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  7717  003548  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  7718  00354A  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  7719  00354C  90D8               	bcf	status,0,c
  7720  00354E  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7721  003550  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7722  003552  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7723  003554  3217               	rrcf	___xxtofl@arg^0,f,c
  7724  003556                     l1623:
  7725  003556  0E00               	movlw	0
  7726  003558  1417               	andwf	___xxtofl@arg^0,w,c
  7727  00355A  6E11               	movwf	??___xxtofl^0,c
  7728  00355C  0E00               	movlw	0
  7729  00355E  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7730  003560  6E12               	movwf	(??___xxtofl+1)^0,c
  7731  003562  0E00               	movlw	0
  7732  003564  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7733  003566  6E13               	movwf	(??___xxtofl+2)^0,c
  7734  003568  0EFF               	movlw	255
  7735  00356A  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7736  00356C  6E14               	movwf	(??___xxtofl+3)^0,c
  7737  00356E  5011               	movf	??___xxtofl^0,w,c
  7738  003570  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7739  003572  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7740  003574  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7741  003576  A4D8               	btfss	status,2,c
  7742  003578  EFC0  F01A         	goto	u9731
  7743  00357C  EFC2  F01A         	goto	u9730
  7744  003580                     u9731:
  7745  003580  EF9F  F01A         	goto	l9039
  7746  003584                     u9730:
  7747  003584  EFCA  F01A         	goto	l9047
  7748  003588                     l9045:
  7749  003588  0616               	decf	___xxtofl@exp^0,f,c
  7750  00358A  90D8               	bcf	status,0,c
  7751  00358C  3617               	rlcf	___xxtofl@arg^0,f,c
  7752  00358E  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  7753  003590  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  7754  003592  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  7755  003594                     l9047:
  7756  003594  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  7757  003596  EFCF  F01A         	goto	u9741
  7758  00359A  EFD1  F01A         	goto	u9740
  7759  00359E                     u9741:
  7760  00359E  EFD9  F01A         	goto	l1630
  7761  0035A2                     u9740:
  7762  0035A2  0E02               	movlw	2
  7763  0035A4  6016               	cpfslt	___xxtofl@exp^0,c
  7764  0035A6  EFD7  F01A         	goto	u9751
  7765  0035AA  EFD9  F01A         	goto	u9750
  7766  0035AE                     u9751:
  7767  0035AE  EFC4  F01A         	goto	l9045
  7768  0035B2                     u9750:
  7769  0035B2                     l1630:
  7770  0035B2  B016               	btfsc	___xxtofl@exp^0,0,c
  7771  0035B4  EFDE  F01A         	goto	u9761
  7772  0035B8  EFE0  F01A         	goto	u9760
  7773  0035BC                     u9761:
  7774  0035BC  EFE1  F01A         	goto	l9053
  7775  0035C0                     u9760:
  7776  0035C0  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  7777  0035C2                     l9053:
  7778  0035C2  90D8               	bcf	status,0,c
  7779  0035C4  3216               	rrcf	___xxtofl@exp^0,f,c
  7780  0035C6  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  7781  0035CA  6A12               	clrf	(??___xxtofl+1)^0,c
  7782  0035CC  6A13               	clrf	(??___xxtofl+2)^0,c
  7783  0035CE  6A14               	clrf	(??___xxtofl+3)^0,c
  7784  0035D0  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  7785  0035D4  6A13               	clrf	(??___xxtofl+2)^0,c
  7786  0035D6  6A12               	clrf	(??___xxtofl+1)^0,c
  7787  0035D8  6A11               	clrf	??___xxtofl^0,c
  7788  0035DA  5011               	movf	??___xxtofl^0,w,c
  7789  0035DC  1217               	iorwf	___xxtofl@arg^0,f,c
  7790  0035DE  5012               	movf	(??___xxtofl+1)^0,w,c
  7791  0035E0  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  7792  0035E2  5013               	movf	(??___xxtofl+2)^0,w,c
  7793  0035E4  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  7794  0035E6  5014               	movf	(??___xxtofl+3)^0,w,c
  7795  0035E8  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  7796  0035EA  5015               	movf	___xxtofl@sign^0,w,c
  7797  0035EC  B4D8               	btfsc	status,2,c
  7798  0035EE  EFFB  F01A         	goto	u9771
  7799  0035F2  EFFD  F01A         	goto	u9770
  7800  0035F6                     u9771:
  7801  0035F6  EF05  F01B         	goto	l9063
  7802  0035FA                     u9770:
  7803  0035FA  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7804  0035FC  EF04  F01B         	goto	u9780
  7805  003600  EF02  F01B         	goto	u9781
  7806  003604                     u9781:
  7807  003604  EF05  F01B         	goto	l9063
  7808  003608                     u9780:
  7809  003608  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  7810  00360A                     l9063:
  7811  00360A  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  7812  00360E  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  7813  003612  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  7814  003616  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  7815  00361A                     l1619:
  7816  00361A  0012               	return		;funcret
  7817  00361C                     __end_of___xxtofl:
  7818                           	opt callstack 0
  7819                           
  7820 ;; *************** function _sprintf *****************
  7821 ;; Defined at:
  7822 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  s               2  135[BANK0 ] PTR unsigned char 
  7825 ;;		 -> buffer(50), 
  7826 ;;  fmt             2  137[BANK0 ] PTR const unsigned char 
  7827 ;;		 -> STR_20(34), STR_11(32), STR_6(17), STR_5(19), 
  7828 ;;		 -> STR_4(18), STR_3(34), 
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;  f               6  149[BANK0 ] struct _IO_FILE
  7831 ;;  ap              2  147[BANK0 ] PTR void [1]
  7832 ;;		 -> ?_sprintf(2), 
  7833 ;;  ret             2    0        int 
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  2  135[BANK0 ] int 
  7836 ;; Registers used:
  7837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7843 ;;      Params:         0      10       0       0       0       0       0       0       0
  7844 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7846 ;;      Totals:         0      20       0       0       0       0       0       0       0
  7847 ;;Total ram usage:       20 bytes
  7848 ;; Hardware stack levels used:    1
  7849 ;; Hardware stack levels required when called:    9
  7850 ;; This function calls:
  7851 ;;		_vfprintf
  7852 ;; This function is called by:
  7853 ;;		_visualizarPasosRealizados
  7854 ;;		_decidirDireccion
  7855 ;;		_probarSensores
  7856 ;;		_probarUltrasonico
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           	psect	text32
  7861  0051FA                     __ptext32:
  7862                           	opt callstack 0
  7863  0051FA                     _sprintf:
  7864                           	opt callstack 20
  7865  0051FA  0EEB               	movlw	low (?_sprintf+4)
  7866  0051FC  0100               	movlb	0	; () banked
  7867  0051FE  6FF3               	movwf	sprintf@ap& (0+255),b
  7868  005200  0E00               	movlw	high (?_sprintf+4)
  7869  005202  6FF4               	movwf	(sprintf@ap+1)& (0+255),b
  7870  005204  C0E7  F0F5         	movff	sprintf@s,sprintf@f
  7871  005208  C0E8  F0F6         	movff	sprintf@s+1,sprintf@f+1
  7872  00520C                     
  7873                           ; BSR set to: 0
  7874  00520C  0E00               	movlw	0
  7875  00520E  6FF8               	movwf	(sprintf@f+3)& (0+255),b
  7876  005210  0E00               	movlw	0
  7877  005212  6FF7               	movwf	(sprintf@f+2)& (0+255),b
  7878  005214                     
  7879                           ; BSR set to: 0
  7880  005214  0E00               	movlw	0
  7881  005216  6FFA               	movwf	(sprintf@f+5)& (0+255),b
  7882  005218  0E00               	movlw	0
  7883  00521A  6FF9               	movwf	(sprintf@f+4)& (0+255),b
  7884  00521C                     
  7885                           ; BSR set to: 0
  7886  00521C  0EF5               	movlw	low sprintf@f
  7887  00521E  6FDF               	movwf	vfprintf@fp& (0+255),b
  7888  005220  0E00               	movlw	high sprintf@f
  7889  005222  6FE0               	movwf	(vfprintf@fp+1)& (0+255),b
  7890  005224  C0E9  F0E1         	movff	sprintf@fmt,vfprintf@fmt
  7891  005228  C0EA  F0E2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7892  00522C  0EF3               	movlw	low sprintf@ap
  7893  00522E  6FE3               	movwf	vfprintf@ap& (0+255),b
  7894  005230  0E00               	movlw	high sprintf@ap
  7895  005232  6FE4               	movwf	(vfprintf@ap+1)& (0+255),b
  7896  005234  EC53  F027         	call	_vfprintf	;wreg free
  7897  005238  0100               	movlb	0	; () banked
  7898  00523A  51F7               	movf	(sprintf@f+2)& (0+255),w,b
  7899  00523C  25E7               	addwf	sprintf@s& (0+255),w,b
  7900  00523E  6ED9               	movwf	fsr2l,c
  7901  005240  51F8               	movf	(sprintf@f+3)& (0+255),w,b
  7902  005242  21E8               	addwfc	(sprintf@s+1)& (0+255),w,b
  7903  005244  6EDA               	movwf	fsr2h,c
  7904  005246  0E00               	movlw	0
  7905  005248  6EDF               	movwf	indf2,c
  7906  00524A                     
  7907                           ; BSR set to: 0
  7908  00524A  0012               	return		;funcret
  7909  00524C                     __end_of_sprintf:
  7910                           	opt callstack 0
  7911                           
  7912 ;; *************** function _vfprintf *****************
  7913 ;; Defined at:
  7914 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  fp              2  127[BANK0 ] PTR struct _IO_FILE
  7917 ;;		 -> sprintf@f(6), 
  7918 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  7919 ;;		 -> STR_20(34), STR_11(32), STR_6(17), STR_5(19), 
  7920 ;;		 -> STR_4(18), STR_3(34), 
  7921 ;;  ap              2  131[BANK0 ] PTR PTR void 
  7922 ;;		 -> sprintf@ap(2), 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  cfmt            2  133[BANK0 ] PTR unsigned char 
  7925 ;;		 -> STR_20(34), STR_11(32), STR_6(17), STR_5(19), 
  7926 ;;		 -> STR_4(18), STR_3(34), 
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  2  127[BANK0 ] int 
  7929 ;; Registers used:
  7930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7936 ;;      Params:         0       6       0       0       0       0       0       0       0
  7937 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7939 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7940 ;;Total ram usage:        8 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    8
  7943 ;; This function calls:
  7944 ;;		_vfpfcnvrt
  7945 ;; This function is called by:
  7946 ;;		_sprintf
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text33
  7951  004EA6                     __ptext33:
  7952                           	opt callstack 0
  7953  004EA6                     _vfprintf:
  7954                           	opt callstack 20
  7955  004EA6                     
  7956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7957  004EA6  C0E1  F0E5         	movff	vfprintf@fmt,vfprintf@cfmt
  7958  004EAA  C0E2  F0E6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7959  004EAE                     
  7960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7961  004EAE  0E00               	movlw	0
  7962  004EB0  0101               	movlb	1	; () banked
  7963  004EB2  6F31               	movwf	(_nout+1)& (0+255),b
  7964  004EB4  0E00               	movlw	0
  7965  004EB6  6F30               	movwf	_nout& (0+255),b
  7966                           
  7967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7968  004EB8  EF75  F027         	goto	l9767
  7969  004EBC                     l9765:
  7970                           
  7971                           ; BSR set to: 1
  7972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7973  004EBC  C0DF  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  7974  004EC0  C0E0  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7975  004EC4  0EE5               	movlw	low vfprintf@cfmt
  7976  004EC6  0100               	movlb	0	; () banked
  7977  004EC8  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  7978  004ECA  0E00               	movlw	high vfprintf@cfmt
  7979  004ECC  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7980  004ECE  C0E3  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  7981  004ED2  C0E4  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7982  004ED6  ECE6  F005         	call	_vfpfcnvrt	;wreg free
  7983  004EDA  0100               	movlb	0	; () banked
  7984  004EDC  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  7985  004EDE  0101               	movlb	1	; () banked
  7986  004EE0  2730               	addwf	_nout& (0+255),f,b
  7987  004EE2  0100               	movlb	0	; () banked
  7988  004EE4  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7989  004EE6  0101               	movlb	1	; () banked
  7990  004EE8  2331               	addwfc	(_nout+1)& (0+255),f,b
  7991  004EEA                     l9767:
  7992                           
  7993                           ; BSR set to: 1
  7994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7995  004EEA  C0E5  FFF6         	movff	vfprintf@cfmt,tblptrl
  7996  004EEE  C0E6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7997  004EF2                     	if	0	;tblptru may be non-zero
  7998  004EF2                     	endif
  7999  004EF2                     	if	0	;tblptru may be non-zero
  8000  004EF2                     	endif
  8001  004EF2  0008               	tblrd		*
  8002  004EF4  50F5               	movf	tablat,w,c
  8003  004EF6  0900               	iorlw	0
  8004  004EF8  A4D8               	btfss	status,2,c
  8005  004EFA  EF81  F027         	goto	u10951
  8006  004EFE  EF83  F027         	goto	u10950
  8007  004F02                     u10951:
  8008  004F02  EF5E  F027         	goto	l9765
  8009  004F06                     u10950:
  8010  004F06                     
  8011                           ; BSR set to: 1
  8012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8013  004F06  C130  F0DF         	movff	_nout,?_vfprintf
  8014  004F0A  C131  F0E0         	movff	_nout+1,?_vfprintf+1
  8015  004F0E                     
  8016                           ; BSR set to: 1
  8017  004F0E  0012               	return		;funcret
  8018  004F10                     __end_of_vfprintf:
  8019                           	opt callstack 0
  8020                           
  8021 ;; *************** function _vfpfcnvrt *****************
  8022 ;; Defined at:
  8023 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  8026 ;;		 -> sprintf@f(6), 
  8027 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  8028 ;;		 -> vfprintf@cfmt(2), 
  8029 ;;  ap              2  101[BANK0 ] PTR PTR void 
  8030 ;;		 -> sprintf@ap(2), 
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;  ll              8  107[BANK0 ] long long 
  8033 ;;  llu             8    0        unsigned long long 
  8034 ;;  f               4  119[BANK0 ] unsigned long long 
  8035 ;;  ct              3  123[BANK0 ] unsigned char [3]
  8036 ;;  vp              3    0        PTR void 
  8037 ;;  cp              3    0        PTR unsigned char 
  8038 ;;  i               2    0        int 
  8039 ;;  done            2    0        int 
  8040 ;;  c               1  126[BANK0 ] unsigned char 
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  2   97[BANK0 ] int 
  8043 ;; Registers used:
  8044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8050 ;;      Params:         0       6       0       0       0       0       0       0       0
  8051 ;;      Locals:         0      20       0       0       0       0       0       0       0
  8052 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8053 ;;      Totals:         0      30       0       0       0       0       0       0       0
  8054 ;;Total ram usage:       30 bytes
  8055 ;; Hardware stack levels used:    1
  8056 ;; Hardware stack levels required when called:    7
  8057 ;; This function calls:
  8058 ;;		_atoi
  8059 ;;		_ctoa
  8060 ;;		_dtoa
  8061 ;;		_efgtoa
  8062 ;;		_fputc
  8063 ;;		_isdigit
  8064 ;;		_isupper
  8065 ;;		_strncmp
  8066 ;;		_tolower
  8067 ;; This function is called by:
  8068 ;;		_vfprintf
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           	psect	text34
  8073  000BCC                     __ptext34:
  8074                           	opt callstack 0
  8075  000BCC                     _vfpfcnvrt:
  8076                           	opt callstack 20
  8077  000BCC                     
  8078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8079  000BCC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8080  000BD0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8081  000BD4  CFDE FFF6          	movff	postinc2,tblptrl
  8082  000BD8  CFDD FFF7          	movff	postdec2,tblptrh
  8083  000BDC                     	if	0	;tblptru may be non-zero
  8084  000BDC                     	endif
  8085  000BDC                     	if	0	;tblptru may be non-zero
  8086  000BDC                     	endif
  8087  000BDC  0008               	tblrd		*
  8088  000BDE  50F5               	movf	tablat,w,c
  8089  000BE0  0A25               	xorlw	37
  8090  000BE2  A4D8               	btfss	status,2,c
  8091  000BE4  EFF6  F005         	goto	u10651
  8092  000BE8  EFF8  F005         	goto	u10650
  8093  000BEC                     u10651:
  8094  000BEC  EF9E  F008         	goto	l9653
  8095  000BF0                     u10650:
  8096  000BF0                     
  8097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8098  000BF0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8099  000BF4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8100  000BF8  2ADE               	incf	postinc2,f,c
  8101  000BFA  0E00               	movlw	0
  8102  000BFC  22DD               	addwfc	postdec2,f,c
  8103  000BFE                     
  8104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8105  000BFE  0E00               	movlw	0
  8106  000C00  0101               	movlb	1	; () banked
  8107  000C02  6F33               	movwf	(_width+1)& (0+255),b
  8108  000C04  0E00               	movlw	0
  8109  000C06  6F32               	movwf	_width& (0+255),b
  8110  000C08  C132  F055         	movff	_width,_flags
  8111  000C0C  C133  F056         	movff	_width+1,_flags+1
  8112  000C10                     
  8113                           ; BSR set to: 1
  8114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8115  000C10  6934               	setf	_prec& (0+255),b
  8116  000C12  6935               	setf	(_prec+1)& (0+255),b
  8117  000C14                     
  8118                           ; BSR set to: 1
  8119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  8120  000C14  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8121  000C18  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8122  000C1C  CFDE FFF6          	movff	postinc2,tblptrl
  8123  000C20  CFDD FFF7          	movff	postdec2,tblptrh
  8124  000C24                     	if	0	;tblptru may be non-zero
  8125  000C24                     	endif
  8126  000C24                     	if	0	;tblptru may be non-zero
  8127  000C24                     	endif
  8128  000C24  0008               	tblrd		*
  8129  000C26  50F5               	movf	tablat,w,c
  8130  000C28  0A2E               	xorlw	46
  8131  000C2A  A4D8               	btfss	status,2,c
  8132  000C2C  EF1A  F006         	goto	u10661
  8133  000C30  EF1C  F006         	goto	u10660
  8134  000C34                     u10661:
  8135  000C34  EF9A  F006         	goto	l9581
  8136  000C38                     u10660:
  8137  000C38                     
  8138                           ; BSR set to: 1
  8139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  8140  000C38  0E00               	movlw	0
  8141  000C3A  6F35               	movwf	(_prec+1)& (0+255),b
  8142  000C3C  0E00               	movlw	0
  8143  000C3E  6F34               	movwf	_prec& (0+255),b
  8144  000C40                     
  8145                           ; BSR set to: 1
  8146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  8147  000C40  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8148  000C44  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8149  000C48  2ADE               	incf	postinc2,f,c
  8150  000C4A  0E00               	movlw	0
  8151  000C4C  22DD               	addwfc	postdec2,f,c
  8152  000C4E                     
  8153                           ; BSR set to: 1
  8154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  8155  000C4E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8156  000C52  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8157  000C56  CFDE FFF6          	movff	postinc2,tblptrl
  8158  000C5A  CFDD FFF7          	movff	postdec2,tblptrh
  8159  000C5E                     	if	0	;tblptru may be non-zero
  8160  000C5E                     	endif
  8161  000C5E                     	if	0	;tblptru may be non-zero
  8162  000C5E                     	endif
  8163  000C5E  0008               	tblrd		*
  8164  000C60  50F5               	movf	tablat,w,c
  8165  000C62  0A2A               	xorlw	42
  8166  000C64  A4D8               	btfss	status,2,c
  8167  000C66  EF37  F006         	goto	u10671
  8168  000C6A  EF39  F006         	goto	u10670
  8169  000C6E                     u10671:
  8170  000C6E  EF56  F006         	goto	l9571
  8171  000C72                     u10670:
  8172  000C72                     
  8173                           ; BSR set to: 1
  8174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  8175  000C72  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8176  000C76  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8177  000C7A  2ADE               	incf	postinc2,f,c
  8178  000C7C  0E00               	movlw	0
  8179  000C7E  22DD               	addwfc	postdec2,f,c
  8180                           
  8181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  8182  000C80  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8183  000C84  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8184  000C88  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8185  000C8C  0E02               	movlw	2
  8186  000C8E  26DE               	addwf	postinc2,f,c
  8187  000C90  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8188  000C94  0E00               	movlw	0
  8189  000C96  22DD               	addwfc	postdec2,f,c
  8190  000C98  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8191  000C9C  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8192  000CA0  CFDE F134          	movff	postinc2,_prec
  8193  000CA4  CFDD F135          	movff	postdec2,_prec+1
  8194                           
  8195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  8196  000CA8  EF9A  F006         	goto	l9581
  8197  000CAC                     l9571:
  8198                           
  8199                           ; BSR set to: 1
  8200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  8201  000CAC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8202  000CB0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8203  000CB4  CFDE F00D          	movff	postinc2,atoi@s
  8204  000CB8  CFDD F00E          	movff	postdec2,atoi@s+1
  8205  000CBC  EC0E  F01B         	call	_atoi	;wreg free
  8206  000CC0  C00D  F134         	movff	?_atoi,_prec
  8207  000CC4  C00E  F135         	movff	?_atoi+1,_prec+1
  8208                           
  8209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8210  000CC8  EF6D  F006         	goto	l9575
  8211  000CCC                     l9573:
  8212                           
  8213                           ; BSR set to: 0
  8214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  8215  000CCC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8216  000CD0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8217  000CD4  2ADE               	incf	postinc2,f,c
  8218  000CD6  0E00               	movlw	0
  8219  000CD8  22DD               	addwfc	postdec2,f,c
  8220  000CDA                     l9575:
  8221  000CDA  0ED0               	movlw	208
  8222  000CDC  0100               	movlb	0	; () banked
  8223  000CDE  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  8224  000CE0  0EFF               	movlw	255
  8225  000CE2  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8226  000CE4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8227  000CE8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8228  000CEC  CFDE FFF6          	movff	postinc2,tblptrl
  8229  000CF0  CFDD FFF7          	movff	postdec2,tblptrh
  8230  000CF4                     	if	0	;tblptru may be non-zero
  8231  000CF4                     	endif
  8232  000CF4                     	if	0	;tblptru may be non-zero
  8233  000CF4                     	endif
  8234  000CF4  0008               	tblrd		*
  8235  000CF6  50F5               	movf	tablat,w,c
  8236  000CF8  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8237  000CFA  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8238  000CFC  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  8239  000CFE  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8240  000D00  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8241  000D02  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8242  000D04  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8243  000D06  E10A               	bnz	u10680
  8244  000D08  0E0A               	movlw	10
  8245  000D0A  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8246  000D0C  A0D8               	btfss	status,0,c
  8247  000D0E  EF8B  F006         	goto	u10681
  8248  000D12  EF8E  F006         	goto	u10680
  8249  000D16                     u10681:
  8250  000D16  0E01               	movlw	1
  8251  000D18  EF8F  F006         	goto	u10690
  8252  000D1C                     u10680:
  8253  000D1C  0E00               	movlw	0
  8254  000D1E                     u10690:
  8255  000D1E  6FD3               	movwf	_vfpfcnvrt$965& (0+255),b
  8256  000D20  6BD4               	clrf	(_vfpfcnvrt$965+1)& (0+255),b
  8257  000D22                     
  8258                           ; BSR set to: 0
  8259  000D22  51D3               	movf	_vfpfcnvrt$965& (0+255),w,b
  8260  000D24  11D4               	iorwf	(_vfpfcnvrt$965+1)& (0+255),w,b
  8261  000D26  A4D8               	btfss	status,2,c
  8262  000D28  EF98  F006         	goto	u10701
  8263  000D2C  EF9A  F006         	goto	u10700
  8264  000D30                     u10701:
  8265  000D30  EF66  F006         	goto	l9573
  8266  000D34                     u10700:
  8267  000D34                     l9581:
  8268                           
  8269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  8270  000D34  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8271  000D38  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8272  000D3C  CFDE FFF6          	movff	postinc2,tblptrl
  8273  000D40  CFDD FFF7          	movff	postdec2,tblptrh
  8274  000D44                     	if	0	;tblptru may be non-zero
  8275  000D44                     	endif
  8276  000D44                     	if	0	;tblptru may be non-zero
  8277  000D44                     	endif
  8278  000D44  0008               	tblrd		*
  8279  000D46  50F5               	movf	tablat,w,c
  8280  000D48  6E0C               	movwf	tolower@c^0,c
  8281  000D4A  6A0D               	clrf	(tolower@c+1)^0,c
  8282  000D4C  ECED  F027         	call	_tolower	;wreg free
  8283  000D50  500C               	movf	?_tolower^0,w,c
  8284  000D52  0100               	movlb	0	; () banked
  8285  000D54  6FDB               	movwf	vfpfcnvrt@ct& (0+255),b
  8286  000D56                     
  8287                           ; BSR set to: 0
  8288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  8289  000D56  51DB               	movf	vfpfcnvrt@ct& (0+255),w,b
  8290  000D58  B4D8               	btfsc	status,2,c
  8291  000D5A  EFB1  F006         	goto	u10711
  8292  000D5E  EFB3  F006         	goto	u10710
  8293  000D62                     u10711:
  8294  000D62  EFED  F006         	goto	l9591
  8295  000D66                     u10710:
  8296  000D66                     
  8297                           ; BSR set to: 0
  8298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  8299  000D66  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8300  000D6A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8301  000D6E  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8302  000D72  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8303  000D76  0E01               	movlw	1
  8304  000D78  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8305  000D7A  0E00               	movlw	0
  8306  000D7C  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8307  000D7E  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8308  000D82  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8309  000D86                     	if	0	;tblptru may be non-zero
  8310  000D86                     	endif
  8311  000D86                     	if	0	;tblptru may be non-zero
  8312  000D86                     	endif
  8313  000D86  0008               	tblrd		*
  8314  000D88  50F5               	movf	tablat,w,c
  8315  000D8A  6E0C               	movwf	tolower@c^0,c
  8316  000D8C  6A0D               	clrf	(tolower@c+1)^0,c
  8317  000D8E  ECED  F027         	call	_tolower	;wreg free
  8318  000D92  500C               	movf	?_tolower^0,w,c
  8319  000D94  0100               	movlb	0	; () banked
  8320  000D96  6FDC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  8321  000D98                     
  8322                           ; BSR set to: 0
  8323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  8324  000D98  51DC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  8325  000D9A  B4D8               	btfsc	status,2,c
  8326  000D9C  EFD2  F006         	goto	u10721
  8327  000DA0  EFD4  F006         	goto	u10720
  8328  000DA4                     u10721:
  8329  000DA4  EFED  F006         	goto	l9591
  8330  000DA8                     u10720:
  8331  000DA8                     
  8332                           ; BSR set to: 0
  8333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  8334  000DA8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8335  000DAC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8336  000DB0  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8337  000DB4  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8338  000DB8  0E02               	movlw	2
  8339  000DBA  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8340  000DBC  0E00               	movlw	0
  8341  000DBE  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8342  000DC0  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8343  000DC4  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8344  000DC8                     	if	0	;tblptru may be non-zero
  8345  000DC8                     	endif
  8346  000DC8                     	if	0	;tblptru may be non-zero
  8347  000DC8                     	endif
  8348  000DC8  0008               	tblrd		*
  8349  000DCA  50F5               	movf	tablat,w,c
  8350  000DCC  6E0C               	movwf	tolower@c^0,c
  8351  000DCE  6A0D               	clrf	(tolower@c+1)^0,c
  8352  000DD0  ECED  F027         	call	_tolower	;wreg free
  8353  000DD4  500C               	movf	?_tolower^0,w,c
  8354  000DD6  0100               	movlb	0	; () banked
  8355  000DD8  6FDD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  8356  000DDA                     l9591:
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8360  000DDA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8361  000DDE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8362  000DE2  CFDE FFF6          	movff	postinc2,tblptrl
  8363  000DE6  CFDD FFF7          	movff	postdec2,tblptrh
  8364  000DEA                     	if	0	;tblptru may be non-zero
  8365  000DEA                     	endif
  8366  000DEA                     	if	0	;tblptru may be non-zero
  8367  000DEA                     	endif
  8368  000DEA  0008               	tblrd		*
  8369  000DEC  50F5               	movf	tablat,w,c
  8370  000DEE  0A63               	xorlw	99
  8371  000DF0  A4D8               	btfss	status,2,c
  8372  000DF2  EFFD  F006         	goto	u10731
  8373  000DF6  EFFF  F006         	goto	u10730
  8374  000DFA                     u10731:
  8375  000DFA  EF26  F007         	goto	l9599
  8376  000DFE                     u10730:
  8377  000DFE                     
  8378                           ; BSR set to: 0
  8379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  8380  000DFE  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8381  000E02  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8382  000E06  2ADE               	incf	postinc2,f,c
  8383  000E08  0E00               	movlw	0
  8384  000E0A  22DD               	addwfc	postdec2,f,c
  8385                           
  8386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8387  000E0C  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8388  000E10  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8389  000E14  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8390  000E18  0E02               	movlw	2
  8391  000E1A  26DE               	addwf	postinc2,f,c
  8392  000E1C  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8393  000E20  0E00               	movlw	0
  8394  000E22  22DD               	addwfc	postdec2,f,c
  8395  000E24  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8396  000E28  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8397  000E2C  50DF               	movf	indf2,w,c
  8398  000E2E  6FDE               	movwf	vfpfcnvrt@c& (0+255),b
  8399  000E30                     
  8400                           ; BSR set to: 0
  8401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  8402  000E30  C0C1  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  8403  000E34  C0C2  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8404  000E38  C0DE  F023         	movff	vfpfcnvrt@c,ctoa@c
  8405  000E3C  EC7A  F028         	call	_ctoa	;wreg free
  8406  000E40  C021  F0C1         	movff	?_ctoa,?_vfpfcnvrt
  8407  000E44  C022  F0C2         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8408  000E48  EFB9  F008         	goto	l940
  8409  000E4C                     l9599:
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8413  000E4C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8414  000E50  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8415  000E54  CFDE FFF6          	movff	postinc2,tblptrl
  8416  000E58  CFDD FFF7          	movff	postdec2,tblptrh
  8417  000E5C                     	if	0	;tblptru may be non-zero
  8418  000E5C                     	endif
  8419  000E5C                     	if	0	;tblptru may be non-zero
  8420  000E5C                     	endif
  8421  000E5C  0008               	tblrd		*
  8422  000E5E  50F5               	movf	tablat,w,c
  8423  000E60  0A64               	xorlw	100
  8424  000E62  B4D8               	btfsc	status,2,c
  8425  000E64  EF36  F007         	goto	u10741
  8426  000E68  EF38  F007         	goto	u10740
  8427  000E6C                     u10741:
  8428  000E6C  EF4A  F007         	goto	l9603
  8429  000E70                     u10740:
  8430  000E70                     
  8431                           ; BSR set to: 0
  8432  000E70  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8433  000E74  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8434  000E78  CFDE FFF6          	movff	postinc2,tblptrl
  8435  000E7C  CFDD FFF7          	movff	postdec2,tblptrh
  8436  000E80                     	if	0	;tblptru may be non-zero
  8437  000E80                     	endif
  8438  000E80                     	if	0	;tblptru may be non-zero
  8439  000E80                     	endif
  8440  000E80  0008               	tblrd		*
  8441  000E82  50F5               	movf	tablat,w,c
  8442  000E84  0A69               	xorlw	105
  8443  000E86  A4D8               	btfss	status,2,c
  8444  000E88  EF48  F007         	goto	u10751
  8445  000E8C  EF4A  F007         	goto	u10750
  8446  000E90                     u10751:
  8447  000E90  EF8A  F007         	goto	l9609
  8448  000E94                     u10750:
  8449  000E94                     l9603:
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8453  000E94  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8454  000E98  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8455  000E9C  2ADE               	incf	postinc2,f,c
  8456  000E9E  0E00               	movlw	0
  8457  000EA0  22DD               	addwfc	postdec2,f,c
  8458                           
  8459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8460  000EA2  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8461  000EA6  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8462  000EAA  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8463  000EAE  0E02               	movlw	2
  8464  000EB0  26DE               	addwf	postinc2,f,c
  8465  000EB2  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8466  000EB6  0E00               	movlw	0
  8467  000EB8  22DD               	addwfc	postdec2,f,c
  8468  000EBA  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8469  000EBE  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8470  000EC2  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  8471  000EC6  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  8472  000ECA  0E00               	movlw	0
  8473  000ECC  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8474  000ECE  0EFF               	movlw	-1
  8475  000ED0  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8476  000ED2  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8477  000ED4  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8478  000ED6  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8479  000ED8  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8480  000EDA  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8481  000EDC                     
  8482                           ; BSR set to: 0
  8483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8484  000EDC  C0C1  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  8485  000EE0  C0C2  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8486  000EE4  C0CB  F023         	movff	vfpfcnvrt@ll,dtoa@d
  8487  000EE8  C0CC  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8488  000EEC  C0CD  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8489  000EF0  C0CE  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8490  000EF4  C0CF  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8491  000EF8  C0D0  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8492  000EFC  C0D1  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8493  000F00  C0D2  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8494  000F04  ECB3  F015         	call	_dtoa	;wreg free
  8495  000F08  C021  F0C1         	movff	?_dtoa,?_vfpfcnvrt
  8496  000F0C  C022  F0C2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8497  000F10  EFB9  F008         	goto	l940
  8498  000F14                     l9609:
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  8502  000F14  0E66               	movlw	102
  8503  000F16  19DB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  8504  000F18  A4D8               	btfss	status,2,c
  8505  000F1A  EF91  F007         	goto	u10761
  8506  000F1E  EF93  F007         	goto	u10760
  8507  000F22                     u10761:
  8508  000F22  EFD3  F007         	goto	l9621
  8509  000F26                     u10760:
  8510  000F26                     
  8511                           ; BSR set to: 0
  8512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  8513  000F26  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8514  000F2A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8515  000F2E  CFDE FFF6          	movff	postinc2,tblptrl
  8516  000F32  CFDD FFF7          	movff	postdec2,tblptrh
  8517  000F36                     	if	0	;tblptru may be non-zero
  8518  000F36                     	endif
  8519  000F36                     	if	0	;tblptru may be non-zero
  8520  000F36                     	endif
  8521  000F36  0008               	tblrd		*
  8522  000F38  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  8523  000F3C                     
  8524                           ; BSR set to: 0
  8525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  8526  000F3C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8527  000F40  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8528  000F44  2ADE               	incf	postinc2,f,c
  8529  000F46  0E00               	movlw	0
  8530  000F48  22DD               	addwfc	postdec2,f,c
  8531  000F4A                     
  8532                           ; BSR set to: 0
  8533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8534  000F4A  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8535  000F4E  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8536  000F52  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8537  000F56  0E04               	movlw	4
  8538  000F58  26DE               	addwf	postinc2,f,c
  8539  000F5A  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8540  000F5E  0E00               	movlw	0
  8541  000F60  22DD               	addwfc	postdec2,f,c
  8542  000F62  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8543  000F66  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8544  000F6A  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8545  000F6E  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8546  000F72  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8547  000F76  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8548  000F7A                     l9617:
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  8552  000F7A  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  8553  000F7E  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8554  000F82  C0D7  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  8555  000F86  C0D8  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  8556  000F8A  C0D9  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  8557  000F8E  C0DA  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  8558  000F92  C0DE  F083         	movff	vfpfcnvrt@c,efgtoa@c
  8559  000F96  EC09  F000         	call	_efgtoa	;wreg free
  8560  000F9A  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  8561  000F9E  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  8562  000FA2  EFB9  F008         	goto	l940
  8563  000FA6                     l9621:
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8567  000FA6  0EDB               	movlw	low vfpfcnvrt@ct
  8568  000FA8  6E06               	movwf	strncmp@_l^0,c
  8569  000FAA  0E00               	movlw	high vfpfcnvrt@ct
  8570  000FAC  6E07               	movwf	(strncmp@_l+1)^0,c
  8571  000FAE  0EFC               	movlw	low STR_29
  8572  000FB0  6E08               	movwf	strncmp@_r^0,c
  8573  000FB2  0E7F               	movlw	high STR_29
  8574  000FB4  6E09               	movwf	(strncmp@_r+1)^0,c
  8575  000FB6  0E00               	movlw	0
  8576  000FB8  6E0B               	movwf	(strncmp@n+1)^0,c
  8577  000FBA  0E02               	movlw	2
  8578  000FBC  6E0A               	movwf	strncmp@n^0,c
  8579  000FBE  EC12  F022         	call	_strncmp	;wreg free
  8580  000FC2  5006               	movf	?_strncmp^0,w,c
  8581  000FC4  1007               	iorwf	(?_strncmp+1)^0,w,c
  8582  000FC6  A4D8               	btfss	status,2,c
  8583  000FC8  EFE8  F007         	goto	u10771
  8584  000FCC  EFEA  F007         	goto	u10770
  8585  000FD0                     u10771:
  8586  000FD0  EF66  F008         	goto	l9637
  8587  000FD4                     u10770:
  8588  000FD4                     
  8589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8590  000FD4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8591  000FD8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8592  000FDC  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8593  000FE0  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8594  000FE4  0E01               	movlw	1
  8595  000FE6  0100               	movlb	0	; () banked
  8596  000FE8  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8597  000FEA  0E00               	movlw	0
  8598  000FEC  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8599  000FEE  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8600  000FF2  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8601  000FF6                     	if	0	;tblptru may be non-zero
  8602  000FF6                     	endif
  8603  000FF6                     	if	0	;tblptru may be non-zero
  8604  000FF6                     	endif
  8605  000FF6  0008               	tblrd		*
  8606  000FF8  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  8607  000FFC  0EBF               	movlw	191
  8608  000FFE  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  8609  001000  0EFF               	movlw	255
  8610  001002  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8611  001004  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8612  001008  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8613  00100C  CFDE FFF6          	movff	postinc2,tblptrl
  8614  001010  CFDD FFF7          	movff	postdec2,tblptrh
  8615  001014                     	if	0	;tblptru may be non-zero
  8616  001014                     	endif
  8617  001014                     	if	0	;tblptru may be non-zero
  8618  001014                     	endif
  8619  001014  0008               	tblrd		*
  8620  001016  50F5               	movf	tablat,w,c
  8621  001018  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8622  00101A  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8623  00101C  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  8624  00101E  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8625  001020  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8626  001022  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8627  001024  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8628  001026  E10A               	bnz	u10780
  8629  001028  0E1A               	movlw	26
  8630  00102A  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8631  00102C  A0D8               	btfss	status,0,c
  8632  00102E  EF1B  F008         	goto	u10781
  8633  001032  EF1E  F008         	goto	u10780
  8634  001036                     u10781:
  8635  001036  0E01               	movlw	1
  8636  001038  EF1F  F008         	goto	u10790
  8637  00103C                     u10780:
  8638  00103C  0E00               	movlw	0
  8639  00103E                     u10790:
  8640  00103E  6FD5               	movwf	_vfpfcnvrt$971& (0+255),b
  8641  001040  6BD6               	clrf	(_vfpfcnvrt$971+1)& (0+255),b
  8642  001042                     
  8643                           ; BSR set to: 0
  8644  001042  51D5               	movf	_vfpfcnvrt$971& (0+255),w,b
  8645  001044  11D6               	iorwf	(_vfpfcnvrt$971+1)& (0+255),w,b
  8646  001046  B4D8               	btfsc	status,2,c
  8647  001048  EF28  F008         	goto	u10801
  8648  00104C  EF2A  F008         	goto	u10800
  8649  001050                     u10801:
  8650  001050  EF44  F008         	goto	l9631
  8651  001054                     u10800:
  8652  001054                     
  8653                           ; BSR set to: 0
  8654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8655  001054  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8656  001058  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8657  00105C  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8658  001060  0E04               	movlw	4
  8659  001062  26DE               	addwf	postinc2,f,c
  8660  001064  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8661  001068  0E00               	movlw	0
  8662  00106A  22DD               	addwfc	postdec2,f,c
  8663  00106C  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8664  001070  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8665  001074  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8666  001078  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8667  00107C  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8668  001080  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8669                           
  8670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  8671  001084  EF5C  F008         	goto	l951
  8672  001088                     l9631:
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8676  001088  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8677  00108C  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8678  001090  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8679  001094  0E04               	movlw	4
  8680  001096  26DE               	addwf	postinc2,f,c
  8681  001098  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8682  00109C  0E00               	movlw	0
  8683  00109E  22DD               	addwfc	postdec2,f,c
  8684  0010A0  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8685  0010A4  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8686  0010A8  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8687  0010AC  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8688  0010B0  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8689  0010B4  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8690  0010B8                     l951:
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  8694  0010B8  0E02               	movlw	2
  8695  0010BA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8696  0010BE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8697  0010C2  26DE               	addwf	postinc2,f,c
  8698  0010C4  0E00               	movlw	0
  8699  0010C6  22DD               	addwfc	postdec2,f,c
  8700  0010C8  EFBD  F007         	goto	l9617
  8701  0010CC                     l9637:
  8702                           
  8703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8704  0010CC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8705  0010D0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8706  0010D4  CFDE FFF6          	movff	postinc2,tblptrl
  8707  0010D8  CFDD FFF7          	movff	postdec2,tblptrh
  8708  0010DC                     	if	0	;tblptru may be non-zero
  8709  0010DC                     	endif
  8710  0010DC                     	if	0	;tblptru may be non-zero
  8711  0010DC                     	endif
  8712  0010DC  0008               	tblrd		*
  8713  0010DE  50F5               	movf	tablat,w,c
  8714  0010E0  0A25               	xorlw	37
  8715  0010E2  A4D8               	btfss	status,2,c
  8716  0010E4  EF76  F008         	goto	u10811
  8717  0010E8  EF78  F008         	goto	u10810
  8718  0010EC                     u10811:
  8719  0010EC  EF90  F008         	goto	l9647
  8720  0010F0                     u10810:
  8721  0010F0                     
  8722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8723  0010F0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8724  0010F4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8725  0010F8  2ADE               	incf	postinc2,f,c
  8726  0010FA  0E00               	movlw	0
  8727  0010FC  22DD               	addwfc	postdec2,f,c
  8728  0010FE                     
  8729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8730  0010FE  0E00               	movlw	0
  8731  001100  6E07               	movwf	(fputc@c+1)^0,c
  8732  001102  0E25               	movlw	37
  8733  001104  6E06               	movwf	fputc@c^0,c
  8734  001106  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  8735  00110A  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8736  00110E  EC7D  F022         	call	_fputc	;wreg free
  8737  001112                     l9643:
  8738                           
  8739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8740  001112  0E00               	movlw	0
  8741  001114  0100               	movlb	0	; () banked
  8742  001116  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8743  001118  0E01               	movlw	1
  8744  00111A  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  8745  00111C  EFB9  F008         	goto	l940
  8746  001120                     l9647:
  8747                           
  8748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8749  001120  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8750  001124  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8751  001128  2ADE               	incf	postinc2,f,c
  8752  00112A  0E00               	movlw	0
  8753  00112C  22DD               	addwfc	postdec2,f,c
  8754  00112E                     
  8755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  8756  00112E  0E00               	movlw	0
  8757  001130  0100               	movlb	0	; () banked
  8758  001132  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8759  001134  0E00               	movlw	0
  8760  001136  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  8761  001138  EFB9  F008         	goto	l940
  8762  00113C                     l9653:
  8763                           
  8764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  8765  00113C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8766  001140  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8767  001144  CFDE FFF6          	movff	postinc2,tblptrl
  8768  001148  CFDD FFF7          	movff	postdec2,tblptrh
  8769  00114C                     	if	0	;tblptru may be non-zero
  8770  00114C                     	endif
  8771  00114C                     	if	0	;tblptru may be non-zero
  8772  00114C                     	endif
  8773  00114C  0008               	tblrd		*
  8774  00114E  50F5               	movf	tablat,w,c
  8775  001150  6E06               	movwf	fputc@c^0,c
  8776  001152  6A07               	clrf	(fputc@c+1)^0,c
  8777  001154  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  8778  001158  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8779  00115C  EC7D  F022         	call	_fputc	;wreg free
  8780  001160                     
  8781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  8782  001160  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8783  001164  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8784  001168  2ADE               	incf	postinc2,f,c
  8785  00116A  0E00               	movlw	0
  8786  00116C  22DD               	addwfc	postdec2,f,c
  8787  00116E  EF89  F008         	goto	l9643
  8788  001172                     l940:
  8789  001172  0012               	return		;funcret
  8790  001174                     __end_of_vfpfcnvrt:
  8791                           	opt callstack 0
  8792                           
  8793 ;; *************** function _strncmp *****************
  8794 ;; Defined at:
  8795 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  8798 ;;		 -> vfpfcnvrt@ct(3), 
  8799 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  8800 ;;		 -> STR_31(3), 
  8801 ;;  n               2    9[COMRAM] unsigned int 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;  r               2   14[COMRAM] PTR const unsigned char 
  8804 ;;		 -> STR_31(3), 
  8805 ;;  l               2   12[COMRAM] PTR const unsigned char 
  8806 ;;		 -> vfpfcnvrt@ct(3), 
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  2    5[COMRAM] int 
  8809 ;; Registers used:
  8810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8816 ;;      Params:         6       0       0       0       0       0       0       0       0
  8817 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8818 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8819 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8820 ;;Total ram usage:       11 bytes
  8821 ;; Hardware stack levels used:    1
  8822 ;; Hardware stack levels required when called:    2
  8823 ;; This function calls:
  8824 ;;		Nothing
  8825 ;; This function is called by:
  8826 ;;		_vfpfcnvrt
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           	psect	text35
  8831  004424                     __ptext35:
  8832                           	opt callstack 0
  8833  004424                     _strncmp:
  8834                           	opt callstack 24
  8835  004424  C006  F00D         	movff	strncmp@_l,strncmp@l
  8836  004428  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  8837  00442C  C008  F00F         	movff	strncmp@_r,strncmp@r
  8838  004430  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  8839  004434  060A               	decf	strncmp@n^0,f,c
  8840  004436  A0D8               	btfss	status,0,c
  8841  004438  060B               	decf	(strncmp@n+1)^0,f,c
  8842  00443A  280A               	incf	strncmp@n^0,w,c
  8843  00443C  E106               	bnz	u10591
  8844  00443E  280B               	incf	(strncmp@n+1)^0,w,c
  8845  004440  A4D8               	btfss	status,2,c
  8846  004442  EF25  F022         	goto	u10591
  8847  004446  EF27  F022         	goto	u10590
  8848  00444A                     u10591:
  8849  00444A  EF34  F022         	goto	l9521
  8850  00444E                     u10590:
  8851  00444E  0E00               	movlw	0
  8852  004450  6E07               	movwf	(?_strncmp+1)^0,c
  8853  004452  0E00               	movlw	0
  8854  004454  6E06               	movwf	?_strncmp^0,c
  8855  004456  EF7C  F022         	goto	l1775
  8856  00445A                     l9519:
  8857  00445A  4A0D               	infsnz	strncmp@l^0,f,c
  8858  00445C  2A0E               	incf	(strncmp@l+1)^0,f,c
  8859  00445E  4A0F               	infsnz	strncmp@r^0,f,c
  8860  004460  2A10               	incf	(strncmp@r+1)^0,f,c
  8861  004462  060A               	decf	strncmp@n^0,f,c
  8862  004464  A0D8               	btfss	status,0,c
  8863  004466  060B               	decf	(strncmp@n+1)^0,f,c
  8864  004468                     l9521:
  8865  004468  C00D  FFD9         	movff	strncmp@l,fsr2l
  8866  00446C  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  8867  004470  50DF               	movf	indf2,w,c
  8868  004472  B4D8               	btfsc	status,2,c
  8869  004474  EF3E  F022         	goto	u10601
  8870  004478  EF40  F022         	goto	u10600
  8871  00447C                     u10601:
  8872  00447C  EF6B  F022         	goto	l9529
  8873  004480                     u10600:
  8874  004480  C00F  FFF6         	movff	strncmp@r,tblptrl
  8875  004484  C010  FFF7         	movff	strncmp@r+1,tblptrh
  8876  004488                     	if	0	;tblptru may be non-zero
  8877  004488                     	endif
  8878  004488                     	if	0	;tblptru may be non-zero
  8879  004488                     	endif
  8880  004488  0008               	tblrd		*
  8881  00448A  50F5               	movf	tablat,w,c
  8882  00448C  0900               	iorlw	0
  8883  00448E  B4D8               	btfsc	status,2,c
  8884  004490  EF4C  F022         	goto	u10611
  8885  004494  EF4E  F022         	goto	u10610
  8886  004498                     u10611:
  8887  004498  EF6B  F022         	goto	l9529
  8888  00449C                     u10610:
  8889  00449C  500A               	movf	strncmp@n^0,w,c
  8890  00449E  100B               	iorwf	(strncmp@n+1)^0,w,c
  8891  0044A0  B4D8               	btfsc	status,2,c
  8892  0044A2  EF55  F022         	goto	u10621
  8893  0044A6  EF57  F022         	goto	u10620
  8894  0044AA                     u10621:
  8895  0044AA  EF6B  F022         	goto	l9529
  8896  0044AE                     u10620:
  8897  0044AE  C00D  FFD9         	movff	strncmp@l,fsr2l
  8898  0044B2  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  8899  0044B6  50DF               	movf	indf2,w,c
  8900  0044B8  6E0C               	movwf	??_strncmp^0,c
  8901  0044BA  C00F  FFF6         	movff	strncmp@r,tblptrl
  8902  0044BE  C010  FFF7         	movff	strncmp@r+1,tblptrh
  8903  0044C2                     	if	0	;tblptru may be non-zero
  8904  0044C2                     	endif
  8905  0044C2                     	if	0	;tblptru may be non-zero
  8906  0044C2                     	endif
  8907  0044C2  0008               	tblrd		*
  8908  0044C4  50F5               	movf	tablat,w,c
  8909  0044C6  180C               	xorwf	??_strncmp^0,w,c
  8910  0044C8  B4D8               	btfsc	status,2,c
  8911  0044CA  EF69  F022         	goto	u10631
  8912  0044CE  EF6B  F022         	goto	u10630
  8913  0044D2                     u10631:
  8914  0044D2  EF2D  F022         	goto	l9519
  8915  0044D6                     u10630:
  8916  0044D6                     l9529:
  8917  0044D6  C00D  FFD9         	movff	strncmp@l,fsr2l
  8918  0044DA  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  8919  0044DE  50DF               	movf	indf2,w,c
  8920  0044E0  6E0C               	movwf	??_strncmp^0,c
  8921  0044E2  C00F  FFF6         	movff	strncmp@r,tblptrl
  8922  0044E6  C010  FFF7         	movff	strncmp@r+1,tblptrh
  8923  0044EA                     	if	0	;tblptru may be non-zero
  8924  0044EA                     	endif
  8925  0044EA                     	if	0	;tblptru may be non-zero
  8926  0044EA                     	endif
  8927  0044EA  0008               	tblrd		*
  8928  0044EC  50F5               	movf	tablat,w,c
  8929  0044EE  5C0C               	subwf	??_strncmp^0,w,c
  8930  0044F0  6E06               	movwf	?_strncmp^0,c
  8931  0044F2  6A07               	clrf	(?_strncmp+1)^0,c
  8932  0044F4  A0D8               	btfss	status,0,c
  8933  0044F6  0607               	decf	(?_strncmp+1)^0,f,c
  8934  0044F8                     l1775:
  8935  0044F8  0012               	return		;funcret
  8936  0044FA                     __end_of_strncmp:
  8937                           	opt callstack 0
  8938                           
  8939 ;; *************** function _efgtoa *****************
  8940 ;; Defined at:
  8941 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  8944 ;;		 -> sprintf@f(6), 
  8945 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  8946 ;;  c               1   35[BANK0 ] unsigned char 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;  u               4   93[BANK0 ] unsigned char 
  8949 ;;  g               4   85[BANK0 ] unsigned char 
  8950 ;;  l               4   79[BANK0 ] unsigned char 
  8951 ;;  h               4   75[BANK0 ] unsigned char 
  8952 ;;  ou              4   41[BANK0 ] unsigned char 
  8953 ;;  n               2   91[BANK0 ] int 
  8954 ;;  e               2   89[BANK0 ] int 
  8955 ;;  i               2   83[BANK0 ] int 
  8956 ;;  w               2   72[BANK0 ] int 
  8957 ;;  p               2   69[BANK0 ] int 
  8958 ;;  sign            2   67[BANK0 ] int 
  8959 ;;  d               2   65[BANK0 ] int 
  8960 ;;  ne              2   63[BANK0 ] int 
  8961 ;;  m               2   61[BANK0 ] int 
  8962 ;;  pp              2   59[BANK0 ] int 
  8963 ;;  t               2   57[BANK0 ] int 
  8964 ;;  mode            1   74[BANK0 ] unsigned char 
  8965 ;;  nmode           1   71[BANK0 ] unsigned char 
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  2   29[BANK0 ] int 
  8968 ;; Registers used:
  8969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8975 ;;      Params:         0       7       0       0       0       0       0       0       0
  8976 ;;      Locals:         0      56       0       0       0       0       0       0       0
  8977 ;;      Temps:          0       5       0       0       0       0       0       0       0
  8978 ;;      Totals:         0      68       0       0       0       0       0       0       0
  8979 ;;Total ram usage:       68 bytes
  8980 ;; Hardware stack levels used:    1
  8981 ;; Hardware stack levels required when called:    6
  8982 ;; This function calls:
  8983 ;;		___awdiv
  8984 ;;		___awmod
  8985 ;;		___fladd
  8986 ;;		___fldiv
  8987 ;;		___fleq
  8988 ;;		___flge
  8989 ;;		___flmul
  8990 ;;		___flneg
  8991 ;;		___flsub
  8992 ;;		___fltol
  8993 ;;		___fpclassifyf
  8994 ;;		_floorf
  8995 ;;		_isupper
  8996 ;;		_pad
  8997 ;;		_strcpy
  8998 ;;		_tolower
  8999 ;; This function is called by:
  9000 ;;		_vfpfcnvrt
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text36
  9005  000012                     __ptext36:
  9006                           	opt callstack 0
  9007  000012                     _efgtoa:
  9008                           	opt callstack 20
  9009  000012                     
  9010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  9011  000012  0E00               	movlw	0
  9012  000014  0100               	movlb	0	; () banked
  9013  000016  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  9014  000018  0E00               	movlw	0
  9015  00001A  6FA3               	movwf	efgtoa@sign& (0+255),b
  9016  00001C                     
  9017                           ; BSR set to: 0
  9018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  9019  00001C  C07F  F0B5         	movff	efgtoa@f,efgtoa@g
  9020  000020  C080  F0B6         	movff	efgtoa@f+1,efgtoa@g+1
  9021  000024  C081  F0B7         	movff	efgtoa@f+2,efgtoa@g+2
  9022  000028  C082  F0B8         	movff	efgtoa@f+3,efgtoa@g+3
  9023  00002C                     
  9024                           ; BSR set to: 0
  9025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  9026  00002C  BFB8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9027  00002E  EF1D  F000         	goto	u10000
  9028  000032  EF1B  F000         	goto	u10001
  9029  000036                     u10001:
  9030  000036  EF33  F000         	goto	l9183
  9031  00003A                     u10000:
  9032  00003A                     
  9033                           ; BSR set to: 0
  9034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  9035  00003A  0E00               	movlw	0
  9036  00003C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  9037  00003E  0E01               	movlw	1
  9038  000040  6FA3               	movwf	efgtoa@sign& (0+255),b
  9039  000042                     
  9040                           ; BSR set to: 0
  9041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  9042  000042  C0B5  F006         	movff	efgtoa@g,___flneg@f1
  9043  000046  C0B6  F007         	movff	efgtoa@g+1,___flneg@f1+1
  9044  00004A  C0B7  F008         	movff	efgtoa@g+2,___flneg@f1+2
  9045  00004E  C0B8  F009         	movff	efgtoa@g+3,___flneg@f1+3
  9046  000052  ECF4  F02A         	call	___flneg	;wreg free
  9047  000056  C006  F0B5         	movff	?___flneg,efgtoa@g
  9048  00005A  C007  F0B6         	movff	?___flneg+1,efgtoa@g+1
  9049  00005E  C008  F0B7         	movff	?___flneg+2,efgtoa@g+2
  9050  000062  C009  F0B8         	movff	?___flneg+3,efgtoa@g+3
  9051  000066                     l9183:
  9052                           
  9053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  9054  000066  0E00               	movlw	0
  9055  000068  0100               	movlb	0	; () banked
  9056  00006A  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  9057  00006C  0E00               	movlw	0
  9058  00006E  6FBB               	movwf	efgtoa@n& (0+255),b
  9059  000070                     
  9060                           ; BSR set to: 0
  9061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  9062  000070  C132  F0A8         	movff	_width,efgtoa@w
  9063  000074  C133  F0A9         	movff	_width+1,efgtoa@w+1
  9064  000078                     
  9065                           ; BSR set to: 0
  9066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9067  000078  51A3               	movf	efgtoa@sign& (0+255),w,b
  9068  00007A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9069  00007C  A4D8               	btfss	status,2,c
  9070  00007E  EF43  F000         	goto	u10011
  9071  000082  EF45  F000         	goto	u10010
  9072  000086                     u10011:
  9073  000086  EF4C  F000         	goto	l9191
  9074  00008A                     u10010:
  9075  00008A                     
  9076                           ; BSR set to: 0
  9077  00008A  A455               	btfss	_flags^0,2,c
  9078  00008C  EF4A  F000         	goto	u10021
  9079  000090  EF4C  F000         	goto	u10020
  9080  000094                     u10021:
  9081  000094  EF66  F000         	goto	l9203
  9082  000098                     u10020:
  9083  000098                     l9191:
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9087  000098  51A3               	movf	efgtoa@sign& (0+255),w,b
  9088  00009A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9089  00009C  A4D8               	btfss	status,2,c
  9090  00009E  EF53  F000         	goto	u10031
  9091  0000A2  EF55  F000         	goto	u10030
  9092  0000A6                     u10031:
  9093  0000A6  EF5B  F000         	goto	l9195
  9094  0000AA                     u10030:
  9095  0000AA                     
  9096                           ; BSR set to: 0
  9097  0000AA  0E00               	movlw	0
  9098  0000AC  6F8E               	movwf	(_efgtoa$940+1)& (0+255),b
  9099  0000AE  0E2B               	movlw	43
  9100  0000B0  6F8D               	movwf	_efgtoa$940& (0+255),b
  9101  0000B2  EF5F  F000         	goto	l9197
  9102  0000B6                     l9195:
  9103                           
  9104                           ; BSR set to: 0
  9105  0000B6  0E00               	movlw	0
  9106  0000B8  6F8E               	movwf	(_efgtoa$940+1)& (0+255),b
  9107  0000BA  0E2D               	movlw	45
  9108  0000BC  6F8D               	movwf	_efgtoa$940& (0+255),b
  9109  0000BE                     l9197:
  9110                           
  9111                           ; BSR set to: 0
  9112  0000BE  C08D  F141         	movff	_efgtoa$940,_dbuf
  9113  0000C2                     
  9114                           ; BSR set to: 0
  9115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9116  0000C2  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  9117  0000C4  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  9118  0000C6                     
  9119                           ; BSR set to: 0
  9120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9121  0000C6  07A8               	decf	efgtoa@w& (0+255),f,b
  9122  0000C8  A0D8               	btfss	status,0,c
  9123  0000CA  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  9124  0000CC                     l9203:
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9128  0000CC  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  9129  0000D0  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9130  0000D4  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9131  0000D8  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9132  0000DC  EC93  F021         	call	___fpclassifyf	;wreg free
  9133  0000E0  0406               	decf	?___fpclassifyf^0,w,c
  9134  0000E2  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9135  0000E4  A4D8               	btfss	status,2,c
  9136  0000E6  EF77  F000         	goto	u10041
  9137  0000EA  EF79  F000         	goto	u10040
  9138  0000EE                     u10041:
  9139  0000EE  EFD0  F000         	goto	l9221
  9140  0000F2                     u10040:
  9141  0000F2  0EBF               	movlw	191
  9142  0000F4  0100               	movlb	0	; () banked
  9143  0000F6  6F84               	movwf	??_efgtoa& (0+255),b
  9144  0000F8  0EFF               	movlw	255
  9145  0000FA  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9146  0000FC  5183               	movf	efgtoa@c& (0+255),w,b
  9147  0000FE  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  9148  000100  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  9149  000102  5184               	movf	??_efgtoa& (0+255),w,b
  9150  000104  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9151  000106  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9152  000108  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9153  00010A  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9154  00010C  E10A               	bnz	u10050
  9155  00010E  0E1A               	movlw	26
  9156  000110  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9157  000112  A0D8               	btfss	status,0,c
  9158  000114  EF8E  F000         	goto	u10051
  9159  000118  EF91  F000         	goto	u10050
  9160  00011C                     u10051:
  9161  00011C  0E01               	movlw	1
  9162  00011E  EF92  F000         	goto	u10060
  9163  000122                     u10050:
  9164  000122  0E00               	movlw	0
  9165  000124                     u10060:
  9166  000124  6F8F               	movwf	_efgtoa$941& (0+255),b
  9167  000126  6B90               	clrf	(_efgtoa$941+1)& (0+255),b
  9168  000128                     
  9169                           ; BSR set to: 0
  9170  000128  518F               	movf	_efgtoa$941& (0+255),w,b
  9171  00012A  1190               	iorwf	(_efgtoa$941+1)& (0+255),w,b
  9172  00012C  B4D8               	btfsc	status,2,c
  9173  00012E  EF9B  F000         	goto	u10071
  9174  000132  EF9D  F000         	goto	u10070
  9175  000136                     u10071:
  9176  000136  EFAB  F000         	goto	l9213
  9177  00013A                     u10070:
  9178  00013A                     
  9179                           ; BSR set to: 0
  9180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  9181  00013A  0E41               	movlw	low _dbuf
  9182  00013C  25BB               	addwf	efgtoa@n& (0+255),w,b
  9183  00013E  6E06               	movwf	strcpy@dest^0,c
  9184  000140  0E01               	movlw	high _dbuf
  9185  000142  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9186  000144  6E07               	movwf	(strcpy@dest+1)^0,c
  9187  000146  0EEC               	movlw	low STR_21
  9188  000148  6E08               	movwf	strcpy@src^0,c
  9189  00014A  0E7F               	movlw	high STR_21
  9190  00014C  6E09               	movwf	(strcpy@src+1)^0,c
  9191  00014E  EC4C  F028         	call	_strcpy	;wreg free
  9192                           
  9193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9194  000152  EFB7  F000         	goto	l9215
  9195  000156                     l9213:
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9199  000156  0E41               	movlw	low _dbuf
  9200  000158  25BB               	addwf	efgtoa@n& (0+255),w,b
  9201  00015A  6E06               	movwf	strcpy@dest^0,c
  9202  00015C  0E01               	movlw	high _dbuf
  9203  00015E  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9204  000160  6E07               	movwf	(strcpy@dest+1)^0,c
  9205  000162  0EF4               	movlw	low STR_22
  9206  000164  6E08               	movwf	strcpy@src^0,c
  9207  000166  0E7F               	movlw	high STR_22
  9208  000168  6E09               	movwf	(strcpy@src+1)^0,c
  9209  00016A  EC4C  F028         	call	_strcpy	;wreg free
  9210  00016E                     l9215:
  9211                           
  9212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9213  00016E  0100               	movlb	0	; () banked
  9214  000170  0EFD               	movlw	253
  9215  000172  27A8               	addwf	efgtoa@w& (0+255),f,b
  9216  000174  0EFF               	movlw	255
  9217  000176  23A9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9218  000178                     l9217:
  9219                           
  9220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9221  000178  C07D  F016         	movff	efgtoa@fp,pad@fp
  9222  00017C  C07E  F017         	movff	efgtoa@fp+1,pad@fp+1
  9223  000180  0E41               	movlw	low _dbuf
  9224  000182  6E18               	movwf	pad@buf^0,c
  9225  000184  0E01               	movlw	high _dbuf
  9226  000186  6E19               	movwf	(pad@buf+1)^0,c
  9227  000188  C0A8  F01A         	movff	efgtoa@w,pad@p
  9228  00018C  C0A9  F01B         	movff	efgtoa@w+1,pad@p+1
  9229  000190  EC44  F023         	call	_pad	;wreg free
  9230  000194  C016  F07D         	movff	?_pad,?_efgtoa
  9231  000198  C017  F07E         	movff	?_pad+1,?_efgtoa+1
  9232  00019C  EFE5  F005         	goto	l850
  9233  0001A0                     l9221:
  9234                           
  9235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9236  0001A0  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  9237  0001A4  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9238  0001A8  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9239  0001AC  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9240  0001B0  EC93  F021         	call	___fpclassifyf	;wreg free
  9241  0001B4  5006               	movf	?___fpclassifyf^0,w,c
  9242  0001B6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9243  0001B8  A4D8               	btfss	status,2,c
  9244  0001BA  EFE1  F000         	goto	u10081
  9245  0001BE  EFE3  F000         	goto	u10080
  9246  0001C2                     u10081:
  9247  0001C2  EF23  F001         	goto	l9239
  9248  0001C6                     u10080:
  9249  0001C6  0EBF               	movlw	191
  9250  0001C8  0100               	movlb	0	; () banked
  9251  0001CA  6F84               	movwf	??_efgtoa& (0+255),b
  9252  0001CC  0EFF               	movlw	255
  9253  0001CE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9254  0001D0  5183               	movf	efgtoa@c& (0+255),w,b
  9255  0001D2  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  9256  0001D4  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  9257  0001D6  5184               	movf	??_efgtoa& (0+255),w,b
  9258  0001D8  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9259  0001DA  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9260  0001DC  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9261  0001DE  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9262  0001E0  E10A               	bnz	u10090
  9263  0001E2  0E1A               	movlw	26
  9264  0001E4  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9265  0001E6  A0D8               	btfss	status,0,c
  9266  0001E8  EFF8  F000         	goto	u10091
  9267  0001EC  EFFB  F000         	goto	u10090
  9268  0001F0                     u10091:
  9269  0001F0  0E01               	movlw	1
  9270  0001F2  EFFC  F000         	goto	u10100
  9271  0001F6                     u10090:
  9272  0001F6  0E00               	movlw	0
  9273  0001F8                     u10100:
  9274  0001F8  6F91               	movwf	_efgtoa$945& (0+255),b
  9275  0001FA  6B92               	clrf	(_efgtoa$945+1)& (0+255),b
  9276  0001FC                     
  9277                           ; BSR set to: 0
  9278  0001FC  5191               	movf	_efgtoa$945& (0+255),w,b
  9279  0001FE  1192               	iorwf	(_efgtoa$945+1)& (0+255),w,b
  9280  000200  B4D8               	btfsc	status,2,c
  9281  000202  EF05  F001         	goto	u10111
  9282  000206  EF07  F001         	goto	u10110
  9283  00020A                     u10111:
  9284  00020A  EF15  F001         	goto	l9231
  9285  00020E                     u10110:
  9286  00020E                     
  9287                           ; BSR set to: 0
  9288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9289  00020E  0E41               	movlw	low _dbuf
  9290  000210  25BB               	addwf	efgtoa@n& (0+255),w,b
  9291  000212  6E06               	movwf	strcpy@dest^0,c
  9292  000214  0E01               	movlw	high _dbuf
  9293  000216  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9294  000218  6E07               	movwf	(strcpy@dest+1)^0,c
  9295  00021A  0EF0               	movlw	low STR_25
  9296  00021C  6E08               	movwf	strcpy@src^0,c
  9297  00021E  0E7F               	movlw	high STR_25
  9298  000220  6E09               	movwf	(strcpy@src+1)^0,c
  9299  000222  EC4C  F028         	call	_strcpy	;wreg free
  9300                           
  9301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9302  000226  EFB7  F000         	goto	l9215
  9303  00022A                     l9231:
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9307  00022A  0E41               	movlw	low _dbuf
  9308  00022C  25BB               	addwf	efgtoa@n& (0+255),w,b
  9309  00022E  6E06               	movwf	strcpy@dest^0,c
  9310  000230  0E01               	movlw	high _dbuf
  9311  000232  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9312  000234  6E07               	movwf	(strcpy@dest+1)^0,c
  9313  000236  0EF8               	movlw	low STR_26
  9314  000238  6E08               	movwf	strcpy@src^0,c
  9315  00023A  0E7F               	movlw	high STR_26
  9316  00023C  6E09               	movwf	(strcpy@src+1)^0,c
  9317  00023E  EC4C  F028         	call	_strcpy	;wreg free
  9318  000242  EFB7  F000         	goto	l9215
  9319  000246                     l9239:
  9320                           
  9321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9322  000246  0E00               	movlw	0
  9323  000248  0100               	movlb	0	; () banked
  9324  00024A  6FBD               	movwf	efgtoa@u& (0+255),b
  9325  00024C  0E00               	movlw	0
  9326  00024E  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  9327  000250  0E80               	movlw	128
  9328  000252  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  9329  000254  0E3F               	movlw	63
  9330  000256  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  9331                           
  9332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9333  000258  0E00               	movlw	0
  9334  00025A  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  9335  00025C  0E00               	movlw	0
  9336  00025E  6FB9               	movwf	efgtoa@e& (0+255),b
  9337  000260                     
  9338                           ; BSR set to: 0
  9339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9340  000260  C0B5  F006         	movff	efgtoa@g,___fleq@ff1
  9341  000264  C0B6  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  9342  000268  C0B7  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  9343  00026C  C0B8  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  9344  000270  0E00               	movlw	0
  9345  000272  6E0A               	movwf	___fleq@ff2^0,c
  9346  000274  0E00               	movlw	0
  9347  000276  6E0B               	movwf	(___fleq@ff2+1)^0,c
  9348  000278  0E00               	movlw	0
  9349  00027A  6E0C               	movwf	(___fleq@ff2+2)^0,c
  9350  00027C  0E00               	movlw	0
  9351  00027E  6E0D               	movwf	(___fleq@ff2+3)^0,c
  9352  000280  ECA9  F024         	call	___fleq	;wreg free
  9353  000284  B0D8               	btfsc	status,0,c
  9354  000286  EF47  F001         	goto	u10121
  9355  00028A  EF49  F001         	goto	u10120
  9356  00028E                     u10121:
  9357  00028E  EFCC  F001         	goto	l9257
  9358  000292                     u10120:
  9359  000292  EF68  F001         	goto	l9249
  9360  000296                     l9245:
  9361                           
  9362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9363  000296  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9364  00029A  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9365  00029E  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9366  0002A2  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9367  0002A6  0E00               	movlw	0
  9368  0002A8  6E1F               	movwf	___flmul@a^0,c
  9369  0002AA  0E00               	movlw	0
  9370  0002AC  6E20               	movwf	(___flmul@a+1)^0,c
  9371  0002AE  0E20               	movlw	32
  9372  0002B0  6E21               	movwf	(___flmul@a+2)^0,c
  9373  0002B2  0E41               	movlw	65
  9374  0002B4  6E22               	movwf	(___flmul@a+3)^0,c
  9375  0002B6  ECF7  F00F         	call	___flmul	;wreg free
  9376  0002BA  C01B  F0BD         	movff	?___flmul,efgtoa@u
  9377  0002BE  C01C  F0BE         	movff	?___flmul+1,efgtoa@u+1
  9378  0002C2  C01D  F0BF         	movff	?___flmul+2,efgtoa@u+2
  9379  0002C6  C01E  F0C0         	movff	?___flmul+3,efgtoa@u+3
  9380  0002CA                     
  9381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9382  0002CA  0100               	movlb	0	; () banked
  9383  0002CC  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  9384  0002CE  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  9385  0002D0                     l9249:
  9386                           
  9387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9388  0002D0  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  9389  0002D4  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  9390  0002D8  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  9391  0002DC  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  9392  0002E0  0E00               	movlw	0
  9393  0002E2  6E1F               	movwf	___flmul@a^0,c
  9394  0002E4  0E00               	movlw	0
  9395  0002E6  6E20               	movwf	(___flmul@a+1)^0,c
  9396  0002E8  0E20               	movlw	32
  9397  0002EA  6E21               	movwf	(___flmul@a+2)^0,c
  9398  0002EC  0E41               	movlw	65
  9399  0002EE  6E22               	movwf	(___flmul@a+3)^0,c
  9400  0002F0  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9401  0002F4  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9402  0002F8  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9403  0002FC  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9404  000300  ECF7  F00F         	call	___flmul	;wreg free
  9405  000304  C01B  F038         	movff	?___flmul,___flge@ff2
  9406  000308  C01C  F039         	movff	?___flmul+1,___flge@ff2+1
  9407  00030C  C01D  F03A         	movff	?___flmul+2,___flge@ff2+2
  9408  000310  C01E  F03B         	movff	?___flmul+3,___flge@ff2+3
  9409  000314  EC11  F021         	call	___flge	;wreg free
  9410  000318  B0D8               	btfsc	status,0,c
  9411  00031A  EF91  F001         	goto	u10131
  9412  00031E  EF93  F001         	goto	u10130
  9413  000322                     u10131:
  9414  000322  EF4B  F001         	goto	l9245
  9415  000326                     u10130:
  9416  000326  EFB3  F001         	goto	l9255
  9417  00032A                     l9251:
  9418                           
  9419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9420  00032A  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  9421  00032E  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  9422  000332  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  9423  000336  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  9424  00033A  0E00               	movlw	0
  9425  00033C  6E48               	movwf	___fldiv@a^0,c
  9426  00033E  0E00               	movlw	0
  9427  000340  6E49               	movwf	(___fldiv@a+1)^0,c
  9428  000342  0E20               	movlw	32
  9429  000344  6E4A               	movwf	(___fldiv@a+2)^0,c
  9430  000346  0E41               	movlw	65
  9431  000348  6E4B               	movwf	(___fldiv@a+3)^0,c
  9432  00034A  ECE5  F013         	call	___fldiv	;wreg free
  9433  00034E  C044  F0BD         	movff	?___fldiv,efgtoa@u
  9434  000352  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  9435  000356  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  9436  00035A  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  9437  00035E                     
  9438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9439  00035E  0100               	movlb	0	; () banked
  9440  000360  07B9               	decf	efgtoa@e& (0+255),f,b
  9441  000362  A0D8               	btfss	status,0,c
  9442  000364  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  9443  000366                     l9255:
  9444                           
  9445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9446  000366  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  9447  00036A  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  9448  00036E  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  9449  000372  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  9450  000376  C0BD  F038         	movff	efgtoa@u,___flge@ff2
  9451  00037A  C0BE  F039         	movff	efgtoa@u+1,___flge@ff2+1
  9452  00037E  C0BF  F03A         	movff	efgtoa@u+2,___flge@ff2+2
  9453  000382  C0C0  F03B         	movff	efgtoa@u+3,___flge@ff2+3
  9454  000386  EC11  F021         	call	___flge	;wreg free
  9455  00038A  A0D8               	btfss	status,0,c
  9456  00038C  EFCA  F001         	goto	u10141
  9457  000390  EFCC  F001         	goto	u10140
  9458  000394                     u10141:
  9459  000394  EF95  F001         	goto	l9251
  9460  000398                     u10140:
  9461  000398                     l9257:
  9462                           
  9463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9464  000398  C083  F00C         	movff	efgtoa@c,tolower@c
  9465  00039C  6A0D               	clrf	(tolower@c+1)^0,c
  9466  00039E  ECED  F027         	call	_tolower	;wreg free
  9467  0003A2  500C               	movf	?_tolower^0,w,c
  9468  0003A4  0100               	movlb	0	; () banked
  9469  0003A6  6FAA               	movwf	efgtoa@mode& (0+255),b
  9470  0003A8                     
  9471                           ; BSR set to: 0
  9472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9473  0003A8  C0AA  F0A7         	movff	efgtoa@mode,efgtoa@nmode
  9474  0003AC                     
  9475                           ; BSR set to: 0
  9476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9477  0003AC  0E67               	movlw	103
  9478  0003AE  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9479  0003B0  A4D8               	btfss	status,2,c
  9480  0003B2  EFDD  F001         	goto	u10151
  9481  0003B6  EFDF  F001         	goto	u10150
  9482  0003BA                     u10151:
  9483  0003BA  EF07  F002         	goto	l9271
  9484  0003BE                     u10150:
  9485  0003BE                     
  9486                           ; BSR set to: 0
  9487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9488  0003BE  0101               	movlb	1	; () banked
  9489  0003C0  5134               	movf	_prec& (0+255),w,b
  9490  0003C2  1135               	iorwf	(_prec+1)& (0+255),w,b
  9491  0003C4  A4D8               	btfss	status,2,c
  9492  0003C6  EFE7  F001         	goto	u10161
  9493  0003CA  EFE9  F001         	goto	u10160
  9494  0003CE                     u10161:
  9495  0003CE  EFED  F001         	goto	l9267
  9496  0003D2                     u10160:
  9497  0003D2                     
  9498                           ; BSR set to: 1
  9499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9500  0003D2  0E00               	movlw	0
  9501  0003D4  6F35               	movwf	(_prec+1)& (0+255),b
  9502  0003D6  0E01               	movlw	1
  9503  0003D8  6F34               	movwf	_prec& (0+255),b
  9504  0003DA                     l9267:
  9505                           
  9506                           ; BSR set to: 1
  9507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9508  0003DA  BF35               	btfsc	(_prec+1)& (0+255),7,b
  9509  0003DC  EFFA  F001         	goto	u10170
  9510  0003E0  5135               	movf	(_prec+1)& (0+255),w,b
  9511  0003E2  E106               	bnz	u10171
  9512  0003E4  0534               	decf	_prec& (0+255),w,b
  9513  0003E6  B0D8               	btfsc	status,0,c
  9514  0003E8  EFF8  F001         	goto	u10171
  9515  0003EC  EFFA  F001         	goto	u10170
  9516  0003F0                     u10171:
  9517  0003F0  EF01  F002         	goto	l868
  9518  0003F4                     u10170:
  9519  0003F4                     l9269:
  9520                           
  9521                           ; BSR set to: 1
  9522  0003F4  0E00               	movlw	0
  9523  0003F6  0100               	movlb	0	; () banked
  9524  0003F8  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  9525  0003FA  0E06               	movlw	6
  9526  0003FC  6FA5               	movwf	efgtoa@p& (0+255),b
  9527  0003FE  EF11  F002         	goto	l9277
  9528  000402                     l868:
  9529                           
  9530                           ; BSR set to: 1
  9531  000402  C134  F0A5         	movff	_prec,efgtoa@p
  9532  000406  C135  F0A6         	movff	_prec+1,efgtoa@p+1
  9533  00040A  EF11  F002         	goto	l9277
  9534  00040E                     l9271:
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9538  00040E  0101               	movlb	1	; () banked
  9539  000410  BF35               	btfsc	(_prec+1)& (0+255),7,b
  9540  000412  EF0D  F002         	goto	u10181
  9541  000416  EF0F  F002         	goto	u10180
  9542  00041A                     u10181:
  9543  00041A  EFFA  F001         	goto	l9269
  9544  00041E                     u10180:
  9545  00041E  EF01  F002         	goto	l868
  9546  000422                     l9277:
  9547                           
  9548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9549  000422  0E67               	movlw	103
  9550  000424  0100               	movlb	0	; () banked
  9551  000426  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9552  000428  A4D8               	btfss	status,2,c
  9553  00042A  EF19  F002         	goto	u10191
  9554  00042E  EF1B  F002         	goto	u10190
  9555  000432                     u10191:
  9556  000432  EF4A  F002         	goto	l9287
  9557  000436                     u10190:
  9558  000436                     
  9559                           ; BSR set to: 0
  9560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9561  000436  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  9562  000438  EF29  F002         	goto	u10200
  9563  00043C  0EFC               	movlw	252
  9564  00043E  5DB9               	subwf	efgtoa@e& (0+255),w,b
  9565  000440  0EFF               	movlw	255
  9566  000442  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9567  000444  A0D8               	btfss	status,0,c
  9568  000446  EF27  F002         	goto	u10201
  9569  00044A  EF29  F002         	goto	u10200
  9570  00044E                     u10201:
  9571  00044E  EF48  F002         	goto	l9285
  9572  000452                     u10200:
  9573  000452                     
  9574                           ; BSR set to: 0
  9575  000452  0EFF               	movlw	255
  9576  000454  6F84               	movwf	??_efgtoa& (0+255),b
  9577  000456  0EFF               	movlw	255
  9578  000458  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9579  00045A  C0A5  F086         	movff	efgtoa@p,??_efgtoa+2
  9580  00045E  C0A6  F087         	movff	efgtoa@p+1,??_efgtoa+3
  9581  000462  5184               	movf	??_efgtoa& (0+255),w,b
  9582  000464  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9583  000466  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9584  000468  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9585  00046A  51B9               	movf	efgtoa@e& (0+255),w,b
  9586  00046C  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9587  00046E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9588  000470  0A80               	xorlw	128
  9589  000472  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  9590  000474  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  9591  000476  0A80               	xorlw	128
  9592  000478  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  9593  00047A  A0D8               	btfss	status,0,c
  9594  00047C  EF42  F002         	goto	u10211
  9595  000480  EF44  F002         	goto	u10210
  9596  000484                     u10211:
  9597  000484  EF48  F002         	goto	l9285
  9598  000488                     u10210:
  9599  000488                     
  9600                           ; BSR set to: 0
  9601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9602  000488  0E66               	movlw	102
  9603  00048A  6FA7               	movwf	efgtoa@nmode& (0+255),b
  9604                           
  9605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9606  00048C  EF4A  F002         	goto	l9287
  9607  000490                     l9285:
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9611  000490  0E65               	movlw	101
  9612  000492  6FA7               	movwf	efgtoa@nmode& (0+255),b
  9613  000494                     l9287:
  9614                           
  9615                           ; BSR set to: 0
  9616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9617  000494  C0A5  F09D         	movff	efgtoa@p,efgtoa@m
  9618  000498  C0A6  F09E         	movff	efgtoa@p+1,efgtoa@m+1
  9619  00049C                     
  9620                           ; BSR set to: 0
  9621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9622  00049C  0E67               	movlw	103
  9623  00049E  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9624  0004A0  A4D8               	btfss	status,2,c
  9625  0004A2  EF55  F002         	goto	u10221
  9626  0004A6  EF57  F002         	goto	u10220
  9627  0004AA                     u10221:
  9628  0004AA  EF67  F002         	goto	l9295
  9629  0004AE                     u10220:
  9630  0004AE                     
  9631                           ; BSR set to: 0
  9632  0004AE  0E66               	movlw	102
  9633  0004B0  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9634  0004B2  A4D8               	btfss	status,2,c
  9635  0004B4  EF5E  F002         	goto	u10231
  9636  0004B8  EF60  F002         	goto	u10230
  9637  0004BC                     u10231:
  9638  0004BC  EF69  F002         	goto	l9297
  9639  0004C0                     u10230:
  9640  0004C0                     
  9641                           ; BSR set to: 0
  9642  0004C0  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9643  0004C2  EF67  F002         	goto	u10240
  9644  0004C6  EF65  F002         	goto	u10241
  9645  0004CA                     u10241:
  9646  0004CA  EF69  F002         	goto	l9297
  9647  0004CE                     u10240:
  9648  0004CE                     l9295:
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9652  0004CE  4B9D               	infsnz	efgtoa@m& (0+255),f,b
  9653  0004D0  2B9E               	incf	(efgtoa@m+1)& (0+255),f,b
  9654  0004D2                     l9297:
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9658  0004D2  0E66               	movlw	102
  9659  0004D4  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9660  0004D6  A4D8               	btfss	status,2,c
  9661  0004D8  EF70  F002         	goto	u10251
  9662  0004DC  EF72  F002         	goto	u10250
  9663  0004E0                     u10251:
  9664  0004E0  EF92  F002         	goto	l9307
  9665  0004E4                     u10250:
  9666  0004E4                     
  9667                           ; BSR set to: 0
  9668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9669  0004E4  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9670  0004E6  EF79  F002         	goto	u10260
  9671  0004EA  EF77  F002         	goto	u10261
  9672  0004EE                     u10261:
  9673  0004EE  EF85  F002         	goto	l9303
  9674  0004F2                     u10260:
  9675  0004F2                     
  9676                           ; BSR set to: 0
  9677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9678  0004F2  0E00               	movlw	0
  9679  0004F4  6FBD               	movwf	efgtoa@u& (0+255),b
  9680  0004F6  0E00               	movlw	0
  9681  0004F8  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  9682  0004FA  0E80               	movlw	128
  9683  0004FC  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  9684  0004FE  0E3F               	movlw	63
  9685  000500  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  9686                           
  9687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9688  000502  0E00               	movlw	0
  9689  000504  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  9690  000506  0E00               	movlw	0
  9691  000508  6FB9               	movwf	efgtoa@e& (0+255),b
  9692  00050A                     l9303:
  9693                           
  9694                           ; BSR set to: 0
  9695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9696  00050A  0E67               	movlw	103
  9697  00050C  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9698  00050E  B4D8               	btfsc	status,2,c
  9699  000510  EF8C  F002         	goto	u10271
  9700  000514  EF8E  F002         	goto	u10270
  9701  000518                     u10271:
  9702  000518  EF92  F002         	goto	l9307
  9703  00051C                     u10270:
  9704  00051C                     
  9705                           ; BSR set to: 0
  9706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9707  00051C  51B9               	movf	efgtoa@e& (0+255),w,b
  9708  00051E  279D               	addwf	efgtoa@m& (0+255),f,b
  9709  000520  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  9710  000522  239E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9711  000524                     l9307:
  9712                           
  9713                           ; BSR set to: 0
  9714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9715  000524  0E00               	movlw	0
  9716  000526  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  9717  000528  0E00               	movlw	0
  9718  00052A  6FB3               	movwf	efgtoa@i& (0+255),b
  9719  00052C                     
  9720                           ; BSR set to: 0
  9721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9722  00052C  C0B5  F0AB         	movff	efgtoa@g,efgtoa@h
  9723  000530  C0B6  F0AC         	movff	efgtoa@g+1,efgtoa@h+1
  9724  000534  C0B7  F0AD         	movff	efgtoa@g+2,efgtoa@h+2
  9725  000538  C0B8  F0AE         	movff	efgtoa@g+3,efgtoa@h+3
  9726  00053C                     
  9727                           ; BSR set to: 0
  9728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9729  00053C  C0BD  F089         	movff	efgtoa@u,efgtoa@ou
  9730  000540  C0BE  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
  9731  000544  C0BF  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
  9732  000548  C0C0  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
  9733                           
  9734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9735  00054C  EF23  F003         	goto	l9321
  9736  000550                     l9313:
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9740  000550  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  9741  000554  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  9742  000558  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  9743  00055C  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  9744  000560  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  9745  000564  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  9746  000568  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  9747  00056C  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  9748  000570  ECE5  F013         	call	___fldiv	;wreg free
  9749  000574  C044  F050         	movff	?___fldiv,floorf@x
  9750  000578  C045  F051         	movff	?___fldiv+1,floorf@x+1
  9751  00057C  C046  F052         	movff	?___fldiv+2,floorf@x+2
  9752  000580  C047  F053         	movff	?___fldiv+3,floorf@x+3
  9753  000584  EC4B  F018         	call	_floorf	;wreg free
  9754  000588  C050  F0AF         	movff	?_floorf,efgtoa@l
  9755  00058C  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  9756  000590  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  9757  000594  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  9758                           
  9759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9760  000598  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  9761  00059C  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  9762  0005A0  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  9763  0005A4  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  9764  0005A8  EC8D  F020         	call	___fltol	;wreg free
  9765  0005AC  C072  F0A1         	movff	?___fltol,efgtoa@d
  9766  0005B0  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  9767  0005B4                     
  9768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9769  0005B4  C0AB  F044         	movff	efgtoa@h,___flsub@b
  9770  0005B8  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  9771  0005BC  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  9772  0005C0  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  9773  0005C4  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  9774  0005C8  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  9775  0005CC  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  9776  0005D0  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  9777  0005D4  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  9778  0005D8  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  9779  0005DC  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  9780  0005E0  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  9781  0005E4  ECF7  F00F         	call	___flmul	;wreg free
  9782  0005E8  C01B  F048         	movff	?___flmul,___flsub@a
  9783  0005EC  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  9784  0005F0  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  9785  0005F4  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  9786  0005F8  EC0D  F02A         	call	___flsub	;wreg free
  9787  0005FC  C044  F0AB         	movff	?___flsub,efgtoa@h
  9788  000600  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  9789  000604  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  9790  000608  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  9791  00060C                     
  9792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9793  00060C  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  9794  000610  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  9795  000614  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  9796  000618  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  9797  00061C  0E00               	movlw	0
  9798  00061E  6E48               	movwf	___fldiv@a^0,c
  9799  000620  0E00               	movlw	0
  9800  000622  6E49               	movwf	(___fldiv@a+1)^0,c
  9801  000624  0E20               	movlw	32
  9802  000626  6E4A               	movwf	(___fldiv@a+2)^0,c
  9803  000628  0E41               	movlw	65
  9804  00062A  6E4B               	movwf	(___fldiv@a+3)^0,c
  9805  00062C  ECE5  F013         	call	___fldiv	;wreg free
  9806  000630  C044  F0BD         	movff	?___fldiv,efgtoa@u
  9807  000634  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  9808  000638  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  9809  00063C  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  9810  000640                     
  9811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9812  000640  0100               	movlb	0	; () banked
  9813  000642  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  9814  000644  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  9815  000646                     l9321:
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9819  000646  519D               	movf	efgtoa@m& (0+255),w,b
  9820  000648  5DB3               	subwf	efgtoa@i& (0+255),w,b
  9821  00064A  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  9822  00064C  0A80               	xorlw	128
  9823  00064E  6F84               	movwf	??_efgtoa& (0+255),b
  9824  000650  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  9825  000652  0A80               	xorlw	128
  9826  000654  5984               	subwfb	??_efgtoa& (0+255),w,b
  9827  000656  A0D8               	btfss	status,0,c
  9828  000658  EF30  F003         	goto	u10281
  9829  00065C  EF32  F003         	goto	u10280
  9830  000660                     u10281:
  9831  000660  EFA8  F002         	goto	l9313
  9832  000664                     u10280:
  9833  000664                     
  9834                           ; BSR set to: 0
  9835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9836  000664  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9837  000668  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9838  00066C  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9839  000670  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9840  000674  0E00               	movlw	0
  9841  000676  6E1F               	movwf	___flmul@a^0,c
  9842  000678  0E00               	movlw	0
  9843  00067A  6E20               	movwf	(___flmul@a+1)^0,c
  9844  00067C  0EA0               	movlw	160
  9845  00067E  6E21               	movwf	(___flmul@a+2)^0,c
  9846  000680  0E40               	movlw	64
  9847  000682  6E22               	movwf	(___flmul@a+3)^0,c
  9848  000684  ECF7  F00F         	call	___flmul	;wreg free
  9849  000688  C01B  F0AF         	movff	?___flmul,efgtoa@l
  9850  00068C  C01C  F0B0         	movff	?___flmul+1,efgtoa@l+1
  9851  000690  C01D  F0B1         	movff	?___flmul+2,efgtoa@l+2
  9852  000694  C01E  F0B2         	movff	?___flmul+3,efgtoa@l+3
  9853  000698                     
  9854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9855  000698  C0AB  F034         	movff	efgtoa@h,___flge@ff1
  9856  00069C  C0AC  F035         	movff	efgtoa@h+1,___flge@ff1+1
  9857  0006A0  C0AD  F036         	movff	efgtoa@h+2,___flge@ff1+2
  9858  0006A4  C0AE  F037         	movff	efgtoa@h+3,___flge@ff1+3
  9859  0006A8  C0AF  F038         	movff	efgtoa@l,___flge@ff2
  9860  0006AC  C0B0  F039         	movff	efgtoa@l+1,___flge@ff2+1
  9861  0006B0  C0B1  F03A         	movff	efgtoa@l+2,___flge@ff2+2
  9862  0006B4  C0B2  F03B         	movff	efgtoa@l+3,___flge@ff2+3
  9863  0006B8  EC11  F021         	call	___flge	;wreg free
  9864  0006BC  B0D8               	btfsc	status,0,c
  9865  0006BE  EF63  F003         	goto	u10291
  9866  0006C2  EF65  F003         	goto	u10290
  9867  0006C6                     u10291:
  9868  0006C6  EF70  F003         	goto	l9329
  9869  0006CA                     u10290:
  9870  0006CA                     
  9871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9872  0006CA  0E00               	movlw	0
  9873  0006CC  0100               	movlb	0	; () banked
  9874  0006CE  6FAF               	movwf	efgtoa@l& (0+255),b
  9875  0006D0  0E00               	movlw	0
  9876  0006D2  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  9877  0006D4  0E00               	movlw	0
  9878  0006D6  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  9879  0006D8  0E00               	movlw	0
  9880  0006DA  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  9881                           
  9882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9883  0006DC  EF99  F003         	goto	l9335
  9884  0006E0                     l9329:
  9885                           
  9886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9887  0006E0  C0AB  F006         	movff	efgtoa@h,___fleq@ff1
  9888  0006E4  C0AC  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  9889  0006E8  C0AD  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  9890  0006EC  C0AE  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  9891  0006F0  C0AF  F00A         	movff	efgtoa@l,___fleq@ff2
  9892  0006F4  C0B0  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  9893  0006F8  C0B1  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  9894  0006FC  C0B2  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  9895  000700  ECA9  F024         	call	___fleq	;wreg free
  9896  000704  A0D8               	btfss	status,0,c
  9897  000706  EF87  F003         	goto	u10301
  9898  00070A  EF89  F003         	goto	u10300
  9899  00070E                     u10301:
  9900  00070E  EF99  F003         	goto	l9335
  9901  000712                     u10300:
  9902  000712  0100               	movlb	0	; () banked
  9903  000714  B1A1               	btfsc	efgtoa@d& (0+255),0,b
  9904  000716  EF8F  F003         	goto	u10311
  9905  00071A  EF91  F003         	goto	u10310
  9906  00071E                     u10311:
  9907  00071E  EF99  F003         	goto	l9335
  9908  000722                     u10310:
  9909  000722                     
  9910                           ; BSR set to: 0
  9911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9912  000722  0E00               	movlw	0
  9913  000724  6FAF               	movwf	efgtoa@l& (0+255),b
  9914  000726  0E00               	movlw	0
  9915  000728  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  9916  00072A  0E00               	movlw	0
  9917  00072C  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  9918  00072E  0E00               	movlw	0
  9919  000730  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  9920  000732                     l9335:
  9921                           
  9922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9923  000732  C0B5  F034         	movff	efgtoa@g,___fladd@b
  9924  000736  C0B6  F035         	movff	efgtoa@g+1,___fladd@b+1
  9925  00073A  C0B7  F036         	movff	efgtoa@g+2,___fladd@b+2
  9926  00073E  C0B8  F037         	movff	efgtoa@g+3,___fladd@b+3
  9927  000742  C0AF  F038         	movff	efgtoa@l,___fladd@a
  9928  000746  C0B0  F039         	movff	efgtoa@l+1,___fladd@a+1
  9929  00074A  C0B1  F03A         	movff	efgtoa@l+2,___fladd@a+2
  9930  00074E  C0B2  F03B         	movff	efgtoa@l+3,___fladd@a+3
  9931  000752  EC80  F00B         	call	___fladd	;wreg free
  9932  000756  C034  F0AB         	movff	?___fladd,efgtoa@h
  9933  00075A  C035  F0AC         	movff	?___fladd+1,efgtoa@h+1
  9934  00075E  C036  F0AD         	movff	?___fladd+2,efgtoa@h+2
  9935  000762  C037  F0AE         	movff	?___fladd+3,efgtoa@h+3
  9936  000766                     
  9937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9938  000766  C089  F0BD         	movff	efgtoa@ou,efgtoa@u
  9939  00076A  C08A  F0BE         	movff	efgtoa@ou+1,efgtoa@u+1
  9940  00076E  C08B  F0BF         	movff	efgtoa@ou+2,efgtoa@u+2
  9941  000772  C08C  F0C0         	movff	efgtoa@ou+3,efgtoa@u+3
  9942  000776                     
  9943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9944  000776  0E65               	movlw	101
  9945  000778  0100               	movlb	0	; () banked
  9946  00077A  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9947  00077C  B4D8               	btfsc	status,2,c
  9948  00077E  EFC3  F003         	goto	u10321
  9949  000782  EFC5  F003         	goto	u10320
  9950  000786                     u10321:
  9951  000786  EFCB  F003         	goto	l9343
  9952  00078A                     u10320:
  9953  00078A                     
  9954                           ; BSR set to: 0
  9955  00078A  C0B9  F09F         	movff	efgtoa@e,efgtoa@ne
  9956  00078E  C0BA  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  9957  000792  EFCF  F003         	goto	l894
  9958  000796                     l9343:
  9959                           
  9960                           ; BSR set to: 0
  9961  000796  0E00               	movlw	0
  9962  000798  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  9963  00079A  0E00               	movlw	0
  9964  00079C  6F9F               	movwf	efgtoa@ne& (0+255),b
  9965  00079E                     l894:
  9966                           
  9967                           ; BSR set to: 0
  9968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9969  00079E  0E00               	movlw	0
  9970  0007A0  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  9971  0007A2  0E00               	movlw	0
  9972  0007A4  6F9B               	movwf	efgtoa@pp& (0+255),b
  9973                           
  9974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9975  0007A6  0E00               	movlw	0
  9976  0007A8  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
  9977  0007AA  0E00               	movlw	0
  9978  0007AC  6F99               	movwf	efgtoa@t& (0+255),b
  9979                           
  9980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9981  0007AE  0E00               	movlw	0
  9982  0007B0  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  9983  0007B2  0E00               	movlw	0
  9984  0007B4  6FB3               	movwf	efgtoa@i& (0+255),b
  9985                           
  9986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9987  0007B6  EFCB  F004         	goto	l9393
  9988  0007BA                     l9345:
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9992  0007BA  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  9993  0007BE  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  9994  0007C2  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  9995  0007C6  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  9996  0007CA  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  9997  0007CE  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  9998  0007D2  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  9999  0007D6  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
 10000  0007DA  ECE5  F013         	call	___fldiv	;wreg free
 10001  0007DE  C044  F050         	movff	?___fldiv,floorf@x
 10002  0007E2  C045  F051         	movff	?___fldiv+1,floorf@x+1
 10003  0007E6  C046  F052         	movff	?___fldiv+2,floorf@x+2
 10004  0007EA  C047  F053         	movff	?___fldiv+3,floorf@x+3
 10005  0007EE  EC4B  F018         	call	_floorf	;wreg free
 10006  0007F2  C050  F0AF         	movff	?_floorf,efgtoa@l
 10007  0007F6  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
 10008  0007FA  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
 10009  0007FE  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
 10010                           
 10011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 10012  000802  C0AF  F072         	movff	efgtoa@l,___fltol@f1
 10013  000806  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
 10014  00080A  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
 10015  00080E  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
 10016  000812  EC8D  F020         	call	___fltol	;wreg free
 10017  000816  C072  F0A1         	movff	?___fltol,efgtoa@d
 10018  00081A  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
 10019  00081E                     
 10020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10021  00081E  B855               	btfsc	_flags^0,4,c
 10022  000820  EF14  F004         	goto	u10331
 10023  000824  EF16  F004         	goto	u10330
 10024  000828                     u10331:
 10025  000828  EF34  F004         	goto	l9357
 10026  00082C                     u10330:
 10027  00082C  0100               	movlb	0	; () banked
 10028  00082E  51A1               	movf	efgtoa@d& (0+255),w,b
 10029  000830  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
 10030  000832  A4D8               	btfss	status,2,c
 10031  000834  EF1E  F004         	goto	u10341
 10032  000838  EF20  F004         	goto	u10340
 10033  00083C                     u10341:
 10034  00083C  EF34  F004         	goto	l9357
 10035  000840                     u10340:
 10036  000840                     
 10037                           ; BSR set to: 0
 10038  000840  0E67               	movlw	103
 10039  000842  19AA               	xorwf	efgtoa@mode& (0+255),w,b
 10040  000844  A4D8               	btfss	status,2,c
 10041  000846  EF27  F004         	goto	u10351
 10042  00084A  EF29  F004         	goto	u10350
 10043  00084E                     u10351:
 10044  00084E  EF34  F004         	goto	l9357
 10045  000852                     u10350:
 10046  000852                     
 10047                           ; BSR set to: 0
 10048  000852  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10049  000854  EF30  F004         	goto	u10360
 10050  000858  EF2E  F004         	goto	u10361
 10051  00085C                     u10361:
 10052  00085C  EF34  F004         	goto	l9357
 10053  000860                     u10360:
 10054  000860                     
 10055                           ; BSR set to: 0
 10056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 10057  000860  4B99               	infsnz	efgtoa@t& (0+255),f,b
 10058  000862  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
 10059                           
 10060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 10061  000864  EF7F  F004         	goto	l9385
 10062  000868                     l9357:
 10063                           
 10064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 10065  000868  0100               	movlb	0	; () banked
 10066  00086A  519B               	movf	efgtoa@pp& (0+255),w,b
 10067  00086C  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10068  00086E  A4D8               	btfss	status,2,c
 10069  000870  EF3C  F004         	goto	u10371
 10070  000874  EF3E  F004         	goto	u10370
 10071  000878                     u10371:
 10072  000878  EF68  F004         	goto	l9377
 10073  00087C                     u10370:
 10074  00087C                     
 10075                           ; BSR set to: 0
 10076  00087C  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10077  00087E  EF45  F004         	goto	u10380
 10078  000882  EF43  F004         	goto	u10381
 10079  000886                     u10381:
 10080  000886  EF68  F004         	goto	l9377
 10081  00088A                     u10380:
 10082  00088A                     
 10083                           ; BSR set to: 0
 10084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 10085  00088A  0E41               	movlw	low _dbuf
 10086  00088C  25BB               	addwf	efgtoa@n& (0+255),w,b
 10087  00088E  6ED9               	movwf	fsr2l,c
 10088  000890  0E01               	movlw	high _dbuf
 10089  000892  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10090  000894  6EDA               	movwf	fsr2h,c
 10091  000896  0E2E               	movlw	46
 10092  000898  6EDF               	movwf	indf2,c
 10093  00089A                     
 10094                           ; BSR set to: 0
 10095  00089A  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10096  00089C  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10097  00089E                     
 10098                           ; BSR set to: 0
 10099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 10100  00089E  07A8               	decf	efgtoa@w& (0+255),f,b
 10101  0008A0  A0D8               	btfss	status,0,c
 10102  0008A2  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10103  0008A4                     
 10104                           ; BSR set to: 0
 10105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 10106  0008A4  0E00               	movlw	0
 10107  0008A6  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
 10108  0008A8  0E01               	movlw	1
 10109  0008AA  6F9B               	movwf	efgtoa@pp& (0+255),b
 10110  0008AC  EF68  F004         	goto	l9377
 10111  0008B0                     l9369:
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 10115  0008B0  0E41               	movlw	low _dbuf
 10116  0008B2  25BB               	addwf	efgtoa@n& (0+255),w,b
 10117  0008B4  6ED9               	movwf	fsr2l,c
 10118  0008B6  0E01               	movlw	high _dbuf
 10119  0008B8  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10120  0008BA  6EDA               	movwf	fsr2h,c
 10121  0008BC  0E30               	movlw	48
 10122  0008BE  6EDF               	movwf	indf2,c
 10123  0008C0                     
 10124                           ; BSR set to: 0
 10125  0008C0  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10126  0008C2  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10127  0008C4                     
 10128                           ; BSR set to: 0
 10129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 10130  0008C4  07A8               	decf	efgtoa@w& (0+255),f,b
 10131  0008C6  A0D8               	btfss	status,0,c
 10132  0008C8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10133  0008CA                     
 10134                           ; BSR set to: 0
 10135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 10136  0008CA  0799               	decf	efgtoa@t& (0+255),f,b
 10137  0008CC  A0D8               	btfss	status,0,c
 10138  0008CE  079A               	decf	(efgtoa@t+1)& (0+255),f,b
 10139  0008D0                     l9377:
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 10143  0008D0  5199               	movf	efgtoa@t& (0+255),w,b
 10144  0008D2  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10145  0008D4  A4D8               	btfss	status,2,c
 10146  0008D6  EF6F  F004         	goto	u10391
 10147  0008DA  EF71  F004         	goto	u10390
 10148  0008DE                     u10391:
 10149  0008DE  EF58  F004         	goto	l9369
 10150  0008E2                     u10390:
 10151  0008E2                     
 10152                           ; BSR set to: 0
 10153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 10154  0008E2  0E41               	movlw	low _dbuf
 10155  0008E4  25BB               	addwf	efgtoa@n& (0+255),w,b
 10156  0008E6  6ED9               	movwf	fsr2l,c
 10157  0008E8  0E01               	movlw	high _dbuf
 10158  0008EA  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10159  0008EC  6EDA               	movwf	fsr2h,c
 10160  0008EE  51A1               	movf	efgtoa@d& (0+255),w,b
 10161  0008F0  0F30               	addlw	48
 10162  0008F2  6EDF               	movwf	indf2,c
 10163  0008F4                     
 10164                           ; BSR set to: 0
 10165  0008F4  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10166  0008F6  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10167  0008F8                     
 10168                           ; BSR set to: 0
 10169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 10170  0008F8  07A8               	decf	efgtoa@w& (0+255),f,b
 10171  0008FA  A0D8               	btfss	status,0,c
 10172  0008FC  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10173  0008FE                     l9385:
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 10177  0008FE  C0AB  F044         	movff	efgtoa@h,___flsub@b
 10178  000902  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
 10179  000906  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
 10180  00090A  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
 10181  00090E  C0BD  F01F         	movff	efgtoa@u,___flmul@a
 10182  000912  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
 10183  000916  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
 10184  00091A  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
 10185  00091E  C0AF  F01B         	movff	efgtoa@l,___flmul@b
 10186  000922  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
 10187  000926  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
 10188  00092A  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
 10189  00092E  ECF7  F00F         	call	___flmul	;wreg free
 10190  000932  C01B  F048         	movff	?___flmul,___flsub@a
 10191  000936  C01C  F049         	movff	?___flmul+1,___flsub@a+1
 10192  00093A  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
 10193  00093E  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
 10194  000942  EC0D  F02A         	call	___flsub	;wreg free
 10195  000946  C044  F0AB         	movff	?___flsub,efgtoa@h
 10196  00094A  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
 10197  00094E  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
 10198  000952  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
 10199  000956                     
 10200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 10201  000956  C0BD  F044         	movff	efgtoa@u,___fldiv@b
 10202  00095A  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
 10203  00095E  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
 10204  000962  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
 10205  000966  0E00               	movlw	0
 10206  000968  6E48               	movwf	___fldiv@a^0,c
 10207  00096A  0E00               	movlw	0
 10208  00096C  6E49               	movwf	(___fldiv@a+1)^0,c
 10209  00096E  0E20               	movlw	32
 10210  000970  6E4A               	movwf	(___fldiv@a+2)^0,c
 10211  000972  0E41               	movlw	65
 10212  000974  6E4B               	movwf	(___fldiv@a+3)^0,c
 10213  000976  ECE5  F013         	call	___fldiv	;wreg free
 10214  00097A  C044  F0BD         	movff	?___fldiv,efgtoa@u
 10215  00097E  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
 10216  000982  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
 10217  000986  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
 10218  00098A                     
 10219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 10220  00098A  0100               	movlb	0	; () banked
 10221  00098C  079F               	decf	efgtoa@ne& (0+255),f,b
 10222  00098E  A0D8               	btfss	status,0,c
 10223  000990  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
 10224  000992                     
 10225                           ; BSR set to: 0
 10226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 10227  000992  4BB3               	infsnz	efgtoa@i& (0+255),f,b
 10228  000994  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
 10229  000996                     l9393:
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10233  000996  519D               	movf	efgtoa@m& (0+255),w,b
 10234  000998  5DB3               	subwf	efgtoa@i& (0+255),w,b
 10235  00099A  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
 10236  00099C  0A80               	xorlw	128
 10237  00099E  6F84               	movwf	??_efgtoa& (0+255),b
 10238  0009A0  519E               	movf	(efgtoa@m+1)& (0+255),w,b
 10239  0009A2  0A80               	xorlw	128
 10240  0009A4  5984               	subwfb	??_efgtoa& (0+255),w,b
 10241  0009A6  B0D8               	btfsc	status,0,c
 10242  0009A8  EFD8  F004         	goto	u10401
 10243  0009AC  EFDA  F004         	goto	u10400
 10244  0009B0                     u10401:
 10245  0009B0  EFE8  F004         	goto	l9397
 10246  0009B4                     u10400:
 10247  0009B4                     
 10248                           ; BSR set to: 0
 10249  0009B4  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10250  0009B6  EFE6  F004         	goto	u10411
 10251  0009BA  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
 10252  0009BC  E109               	bnz	u10410
 10253  0009BE  0E4B               	movlw	75
 10254  0009C0  5DBB               	subwf	efgtoa@n& (0+255),w,b
 10255  0009C2  A0D8               	btfss	status,0,c
 10256  0009C4  EFE6  F004         	goto	u10411
 10257  0009C8  EFE8  F004         	goto	u10410
 10258  0009CC                     u10411:
 10259  0009CC  EFDD  F003         	goto	l9345
 10260  0009D0                     u10410:
 10261  0009D0                     l9397:
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 10265  0009D0  519B               	movf	efgtoa@pp& (0+255),w,b
 10266  0009D2  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10267  0009D4  A4D8               	btfss	status,2,c
 10268  0009D6  EFEF  F004         	goto	u10421
 10269  0009DA  EFF1  F004         	goto	u10420
 10270  0009DE                     u10421:
 10271  0009DE  EF02  F005         	goto	l9405
 10272  0009E2                     u10420:
 10273  0009E2                     
 10274                           ; BSR set to: 0
 10275  0009E2  A855               	btfss	_flags^0,4,c
 10276  0009E4  EFF6  F004         	goto	u10431
 10277  0009E8  EFF8  F004         	goto	u10430
 10278  0009EC                     u10431:
 10279  0009EC  EF02  F005         	goto	l9405
 10280  0009F0                     u10430:
 10281  0009F0                     
 10282                           ; BSR set to: 0
 10283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 10284  0009F0  0E41               	movlw	low _dbuf
 10285  0009F2  25BB               	addwf	efgtoa@n& (0+255),w,b
 10286  0009F4  6ED9               	movwf	fsr2l,c
 10287  0009F6  0E01               	movlw	high _dbuf
 10288  0009F8  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10289  0009FA  6EDA               	movwf	fsr2h,c
 10290  0009FC  0E2E               	movlw	46
 10291  0009FE  6EDF               	movwf	indf2,c
 10292  000A00                     
 10293                           ; BSR set to: 0
 10294  000A00  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10295  000A02  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10296  000A04                     l9405:
 10297                           
 10298                           ; BSR set to: 0
 10299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 10300  000A04  0E41               	movlw	low _dbuf
 10301  000A06  25BB               	addwf	efgtoa@n& (0+255),w,b
 10302  000A08  6ED9               	movwf	fsr2l,c
 10303  000A0A  0E01               	movlw	high _dbuf
 10304  000A0C  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10305  000A0E  6EDA               	movwf	fsr2h,c
 10306  000A10  0E00               	movlw	0
 10307  000A12  6EDF               	movwf	indf2,c
 10308  000A14                     
 10309                           ; BSR set to: 0
 10310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 10311  000A14  0E65               	movlw	101
 10312  000A16  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
 10313  000A18  A4D8               	btfss	status,2,c
 10314  000A1A  EF11  F005         	goto	u10441
 10315  000A1E  EF13  F005         	goto	u10440
 10316  000A22                     u10441:
 10317  000A22  EFBC  F000         	goto	l9217
 10318  000A26                     u10440:
 10319  000A26                     
 10320                           ; BSR set to: 0
 10321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10322  000A26  0E00               	movlw	0
 10323  000A28  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
 10324  000A2A  0E4F               	movlw	79
 10325  000A2C  6FB3               	movwf	efgtoa@i& (0+255),b
 10326  000A2E                     
 10327                           ; BSR set to: 0
 10328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10329  000A2E  0E41               	movlw	low _dbuf
 10330  000A30  25B3               	addwf	efgtoa@i& (0+255),w,b
 10331  000A32  6ED9               	movwf	fsr2l,c
 10332  000A34  0E01               	movlw	high _dbuf
 10333  000A36  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10334  000A38  6EDA               	movwf	fsr2h,c
 10335  000A3A  0E00               	movlw	0
 10336  000A3C  6EDF               	movwf	indf2,c
 10337  000A3E                     
 10338                           ; BSR set to: 0
 10339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10340  000A3E  0E00               	movlw	0
 10341  000A40  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
 10342  000A42  0E00               	movlw	0
 10343  000A44  6FA3               	movwf	efgtoa@sign& (0+255),b
 10344  000A46                     
 10345                           ; BSR set to: 0
 10346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10347  000A46  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10348  000A48  EF2A  F005         	goto	u10450
 10349  000A4C  EF28  F005         	goto	u10451
 10350  000A50                     u10451:
 10351  000A50  EF32  F005         	goto	l9421
 10352  000A54                     u10450:
 10353  000A54                     
 10354                           ; BSR set to: 0
 10355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10356  000A54  0E00               	movlw	0
 10357  000A56  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
 10358  000A58  0E01               	movlw	1
 10359  000A5A  6FA3               	movwf	efgtoa@sign& (0+255),b
 10360  000A5C                     
 10361                           ; BSR set to: 0
 10362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10363  000A5C  6DB9               	negf	efgtoa@e& (0+255),b
 10364  000A5E  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
 10365  000A60  B0D8               	btfsc	status,0,c
 10366  000A62  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
 10367  000A64                     l9421:
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10371  000A64  0E00               	movlw	0
 10372  000A66  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
 10373  000A68  0E02               	movlw	2
 10374  000A6A  6FA5               	movwf	efgtoa@p& (0+255),b
 10375                           
 10376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10377  000A6C  EF63  F005         	goto	l9433
 10378  000A70                     l9423:
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10382  000A70  07B3               	decf	efgtoa@i& (0+255),f,b
 10383  000A72  A0D8               	btfss	status,0,c
 10384  000A74  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10385  000A76                     
 10386                           ; BSR set to: 0
 10387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10388  000A76  0E41               	movlw	low _dbuf
 10389  000A78  25B3               	addwf	efgtoa@i& (0+255),w,b
 10390  000A7A  6ED9               	movwf	fsr2l,c
 10391  000A7C  0E01               	movlw	high _dbuf
 10392  000A7E  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10393  000A80  6EDA               	movwf	fsr2h,c
 10394  000A82  C0B9  F006         	movff	efgtoa@e,___awmod@dividend
 10395  000A86  C0BA  F007         	movff	efgtoa@e+1,___awmod@dividend+1
 10396  000A8A  0E00               	movlw	0
 10397  000A8C  6E09               	movwf	(___awmod@divisor+1)^0,c
 10398  000A8E  0E0A               	movlw	10
 10399  000A90  6E08               	movwf	___awmod@divisor^0,c
 10400  000A92  ECA5  F023         	call	___awmod	;wreg free
 10401  000A96  5006               	movf	?___awmod^0,w,c
 10402  000A98  0F30               	addlw	48
 10403  000A9A  6EDF               	movwf	indf2,c
 10404  000A9C                     
 10405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10406  000A9C  C0B9  F006         	movff	efgtoa@e,___awdiv@dividend
 10407  000AA0  C0BA  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
 10408  000AA4  0E00               	movlw	0
 10409  000AA6  6E09               	movwf	(___awdiv@divisor+1)^0,c
 10410  000AA8  0E0A               	movlw	10
 10411  000AAA  6E08               	movwf	___awdiv@divisor^0,c
 10412  000AAC  ECE2  F022         	call	___awdiv	;wreg free
 10413  000AB0  C006  F0B9         	movff	?___awdiv,efgtoa@e
 10414  000AB4  C007  F0BA         	movff	?___awdiv+1,efgtoa@e+1
 10415  000AB8                     
 10416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10417  000AB8  0100               	movlb	0	; () banked
 10418  000ABA  07A5               	decf	efgtoa@p& (0+255),f,b
 10419  000ABC  A0D8               	btfss	status,0,c
 10420  000ABE  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
 10421  000AC0                     
 10422                           ; BSR set to: 0
 10423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10424  000AC0  07A8               	decf	efgtoa@w& (0+255),f,b
 10425  000AC2  A0D8               	btfss	status,0,c
 10426  000AC4  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10427  000AC6                     l9433:
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10431  000AC6  51B9               	movf	efgtoa@e& (0+255),w,b
 10432  000AC8  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10433  000ACA  A4D8               	btfss	status,2,c
 10434  000ACC  EF6A  F005         	goto	u10461
 10435  000AD0  EF6C  F005         	goto	u10460
 10436  000AD4                     u10461:
 10437  000AD4  EF38  F005         	goto	l9423
 10438  000AD8                     u10460:
 10439  000AD8                     
 10440                           ; BSR set to: 0
 10441  000AD8  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10442  000ADA  EF79  F005         	goto	u10470
 10443  000ADE  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
 10444  000AE0  E106               	bnz	u10471
 10445  000AE2  05A5               	decf	efgtoa@p& (0+255),w,b
 10446  000AE4  B0D8               	btfsc	status,0,c
 10447  000AE6  EF77  F005         	goto	u10471
 10448  000AEA  EF79  F005         	goto	u10470
 10449  000AEE                     u10471:
 10450  000AEE  EF38  F005         	goto	l9423
 10451  000AF2                     u10470:
 10452  000AF2                     
 10453                           ; BSR set to: 0
 10454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10455  000AF2  07B3               	decf	efgtoa@i& (0+255),f,b
 10456  000AF4  A0D8               	btfss	status,0,c
 10457  000AF6  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10458  000AF8                     
 10459                           ; BSR set to: 0
 10460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10461  000AF8  51A3               	movf	efgtoa@sign& (0+255),w,b
 10462  000AFA  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10463  000AFC  A4D8               	btfss	status,2,c
 10464  000AFE  EF83  F005         	goto	u10481
 10465  000B02  EF85  F005         	goto	u10480
 10466  000B06                     u10481:
 10467  000B06  EF8B  F005         	goto	l9443
 10468  000B0A                     u10480:
 10469  000B0A                     
 10470                           ; BSR set to: 0
 10471  000B0A  0E00               	movlw	0
 10472  000B0C  6F94               	movwf	(_efgtoa$949+1)& (0+255),b
 10473  000B0E  0E2B               	movlw	43
 10474  000B10  6F93               	movwf	_efgtoa$949& (0+255),b
 10475  000B12  EF8F  F005         	goto	l9445
 10476  000B16                     l9443:
 10477                           
 10478                           ; BSR set to: 0
 10479  000B16  0E00               	movlw	0
 10480  000B18  6F94               	movwf	(_efgtoa$949+1)& (0+255),b
 10481  000B1A  0E2D               	movlw	45
 10482  000B1C  6F93               	movwf	_efgtoa$949& (0+255),b
 10483  000B1E                     l9445:
 10484                           
 10485                           ; BSR set to: 0
 10486  000B1E  0E41               	movlw	low _dbuf
 10487  000B20  25B3               	addwf	efgtoa@i& (0+255),w,b
 10488  000B22  6ED9               	movwf	fsr2l,c
 10489  000B24  0E01               	movlw	high _dbuf
 10490  000B26  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10491  000B28  6EDA               	movwf	fsr2h,c
 10492  000B2A  C093  FFDF         	movff	_efgtoa$949,indf2
 10493  000B2E                     
 10494                           ; BSR set to: 0
 10495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10496  000B2E  07A8               	decf	efgtoa@w& (0+255),f,b
 10497  000B30  A0D8               	btfss	status,0,c
 10498  000B32  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10499  000B34                     
 10500                           ; BSR set to: 0
 10501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10502  000B34  07B3               	decf	efgtoa@i& (0+255),f,b
 10503  000B36  A0D8               	btfss	status,0,c
 10504  000B38  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10505  000B3A                     
 10506                           ; BSR set to: 0
 10507  000B3A  0EBF               	movlw	191
 10508  000B3C  6F84               	movwf	??_efgtoa& (0+255),b
 10509  000B3E  0EFF               	movlw	255
 10510  000B40  6F85               	movwf	(??_efgtoa+1)& (0+255),b
 10511  000B42  5183               	movf	efgtoa@c& (0+255),w,b
 10512  000B44  6F86               	movwf	(??_efgtoa+2)& (0+255),b
 10513  000B46  6B87               	clrf	(??_efgtoa+3)& (0+255),b
 10514  000B48  5184               	movf	??_efgtoa& (0+255),w,b
 10515  000B4A  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
 10516  000B4C  5185               	movf	(??_efgtoa+1)& (0+255),w,b
 10517  000B4E  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10518  000B50  5187               	movf	(??_efgtoa+3)& (0+255),w,b
 10519  000B52  E10A               	bnz	u10490
 10520  000B54  0E1A               	movlw	26
 10521  000B56  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
 10522  000B58  A0D8               	btfss	status,0,c
 10523  000B5A  EFB1  F005         	goto	u10491
 10524  000B5E  EFB4  F005         	goto	u10490
 10525  000B62                     u10491:
 10526  000B62  0E01               	movlw	1
 10527  000B64  EFB5  F005         	goto	u10500
 10528  000B68                     u10490:
 10529  000B68  0E00               	movlw	0
 10530  000B6A                     u10500:
 10531  000B6A  6F97               	movwf	_efgtoa$951& (0+255),b
 10532  000B6C  6B98               	clrf	(_efgtoa$951+1)& (0+255),b
 10533  000B6E                     
 10534                           ; BSR set to: 0
 10535  000B6E  5197               	movf	_efgtoa$951& (0+255),w,b
 10536  000B70  1198               	iorwf	(_efgtoa$951+1)& (0+255),w,b
 10537  000B72  A4D8               	btfss	status,2,c
 10538  000B74  EFBE  F005         	goto	u10511
 10539  000B78  EFC0  F005         	goto	u10510
 10540  000B7C                     u10511:
 10541  000B7C  EFC6  F005         	goto	l9459
 10542  000B80                     u10510:
 10543  000B80                     
 10544                           ; BSR set to: 0
 10545  000B80  0E00               	movlw	0
 10546  000B82  6F96               	movwf	(_efgtoa$950+1)& (0+255),b
 10547  000B84  0E65               	movlw	101
 10548  000B86  6F95               	movwf	_efgtoa$950& (0+255),b
 10549  000B88  EFCA  F005         	goto	l9461
 10550  000B8C                     l9459:
 10551                           
 10552                           ; BSR set to: 0
 10553  000B8C  0E00               	movlw	0
 10554  000B8E  6F96               	movwf	(_efgtoa$950+1)& (0+255),b
 10555  000B90  0E45               	movlw	69
 10556  000B92  6F95               	movwf	_efgtoa$950& (0+255),b
 10557  000B94                     l9461:
 10558                           
 10559                           ; BSR set to: 0
 10560  000B94  0E41               	movlw	low _dbuf
 10561  000B96  25B3               	addwf	efgtoa@i& (0+255),w,b
 10562  000B98  6ED9               	movwf	fsr2l,c
 10563  000B9A  0E01               	movlw	high _dbuf
 10564  000B9C  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10565  000B9E  6EDA               	movwf	fsr2h,c
 10566  000BA0  C095  FFDF         	movff	_efgtoa$950,indf2
 10567  000BA4                     
 10568                           ; BSR set to: 0
 10569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10570  000BA4  07A8               	decf	efgtoa@w& (0+255),f,b
 10571  000BA6  A0D8               	btfss	status,0,c
 10572  000BA8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10573  000BAA                     
 10574                           ; BSR set to: 0
 10575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10576  000BAA  0E41               	movlw	low _dbuf
 10577  000BAC  25BB               	addwf	efgtoa@n& (0+255),w,b
 10578  000BAE  6E06               	movwf	strcpy@dest^0,c
 10579  000BB0  0E01               	movlw	high _dbuf
 10580  000BB2  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10581  000BB4  6E07               	movwf	(strcpy@dest+1)^0,c
 10582  000BB6  0E41               	movlw	low _dbuf
 10583  000BB8  25B3               	addwf	efgtoa@i& (0+255),w,b
 10584  000BBA  6E08               	movwf	strcpy@src^0,c
 10585  000BBC  0E01               	movlw	high _dbuf
 10586  000BBE  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10587  000BC0  6E09               	movwf	(strcpy@src+1)^0,c
 10588  000BC2  EC4C  F028         	call	_strcpy	;wreg free
 10589  000BC6  EFBC  F000         	goto	l9217
 10590  000BCA                     l850:
 10591  000BCA  0012               	return		;funcret
 10592  000BCC                     __end_of_efgtoa:
 10593                           	opt callstack 0
 10594                           
 10595 ;; *************** function _tolower *****************
 10596 ;; Defined at:
 10597 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 10598 ;; Parameters:    Size  Location     Type
 10599 ;;  c               2   11[COMRAM] int 
 10600 ;; Auto vars:     Size  Location     Type
 10601 ;;		None
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  2   11[COMRAM] int 
 10604 ;; Registers used:
 10605 ;;		wreg, status,2, status,0
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10611 ;;      Params:         2       0       0       0       0       0       0       0       0
 10612 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10613 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10614 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10615 ;;Total ram usage:        8 bytes
 10616 ;; Hardware stack levels used:    1
 10617 ;; Hardware stack levels required when called:    3
 10618 ;; This function calls:
 10619 ;;		_isupper
 10620 ;; This function is called by:
 10621 ;;		_efgtoa
 10622 ;;		_vfpfcnvrt
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626                           	psect	text37
 10627  004FDA                     __ptext37:
 10628                           	opt callstack 0
 10629  004FDA                     _tolower:
 10630                           	opt callstack 23
 10631  004FDA  0EBF               	movlw	191
 10632  004FDC  6E0E               	movwf	??_tolower^0,c
 10633  004FDE  0EFF               	movlw	255
 10634  004FE0  6E0F               	movwf	(??_tolower+1)^0,c
 10635  004FE2  C00C  F010         	movff	tolower@c,??_tolower+2
 10636  004FE6  C00D  F011         	movff	tolower@c+1,??_tolower+3
 10637  004FEA  500E               	movf	??_tolower^0,w,c
 10638  004FEC  2610               	addwf	(??_tolower+2)^0,f,c
 10639  004FEE  500F               	movf	(??_tolower+1)^0,w,c
 10640  004FF0  2211               	addwfc	(??_tolower+3)^0,f,c
 10641  004FF2  5011               	movf	(??_tolower+3)^0,w,c
 10642  004FF4  E10A               	bnz	u8710
 10643  004FF6  0E1A               	movlw	26
 10644  004FF8  5C10               	subwf	(??_tolower+2)^0,w,c
 10645  004FFA  A0D8               	btfss	status,0,c
 10646  004FFC  EF02  F028         	goto	u8711
 10647  005000  EF05  F028         	goto	u8710
 10648  005004                     u8711:
 10649  005004  0E01               	movlw	1
 10650  005006  EF06  F028         	goto	u8720
 10651  00500A                     u8710:
 10652  00500A  0E00               	movlw	0
 10653  00500C                     u8720:
 10654  00500C  6E12               	movwf	_tolower$1574^0,c
 10655  00500E  6A13               	clrf	(_tolower$1574+1)^0,c
 10656  005010  5012               	movf	_tolower$1574^0,w,c
 10657  005012  1013               	iorwf	(_tolower$1574+1)^0,w,c
 10658  005014  B4D8               	btfsc	status,2,c
 10659  005016  EF0F  F028         	goto	u8731
 10660  00501A  EF11  F028         	goto	u8730
 10661  00501E                     u8731:
 10662  00501E  EF18  F028         	goto	l1785
 10663  005022                     u8730:
 10664  005022  0E20               	movlw	32
 10665  005024  100C               	iorwf	tolower@c^0,w,c
 10666  005026  6E0C               	movwf	?_tolower^0,c
 10667  005028  500D               	movf	(tolower@c+1)^0,w,c
 10668  00502A  6E0D               	movwf	(?_tolower+1)^0,c
 10669  00502C  EF1C  F028         	goto	l1790
 10670  005030                     l1785:
 10671  005030  C00C  F00C         	movff	tolower@c,?_tolower
 10672  005034  C00D  F00D         	movff	tolower@c+1,?_tolower+1
 10673  005038                     l1790:
 10674  005038  0012               	return		;funcret
 10675  00503A                     __end_of_tolower:
 10676                           	opt callstack 0
 10677                           
 10678 ;; *************** function _isupper *****************
 10679 ;; Defined at:
 10680 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10681 ;; Parameters:    Size  Location     Type
 10682 ;;  c               2    5[COMRAM] int 
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;		None
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  2    5[COMRAM] int 
 10687 ;; Registers used:
 10688 ;;		wreg, status,2, status,0
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10694 ;;      Params:         2       0       0       0       0       0       0       0       0
 10695 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10696 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10697 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10698 ;;Total ram usage:        6 bytes
 10699 ;; Hardware stack levels used:    1
 10700 ;; Hardware stack levels required when called:    2
 10701 ;; This function calls:
 10702 ;;		Nothing
 10703 ;; This function is called by:
 10704 ;;		_efgtoa
 10705 ;;		_vfpfcnvrt
 10706 ;;		_tolower
 10707 ;; This function uses a non-reentrant model
 10708 ;;
 10709                           
 10710                           	psect	text38
 10711  0055B0                     __ptext38:
 10712                           	opt callstack 0
 10713  0055B0                     _isupper:
 10714                           	opt callstack 23
 10715  0055B0  0EBF               	movlw	191
 10716  0055B2  6E08               	movwf	??_isupper^0,c
 10717  0055B4  0EFF               	movlw	255
 10718  0055B6  6E09               	movwf	(??_isupper+1)^0,c
 10719  0055B8  C006  F00A         	movff	isupper@c,??_isupper+2
 10720  0055BC  C007  F00B         	movff	isupper@c+1,??_isupper+3
 10721  0055C0  5008               	movf	??_isupper^0,w,c
 10722  0055C2  260A               	addwf	(??_isupper+2)^0,f,c
 10723  0055C4  5009               	movf	(??_isupper+1)^0,w,c
 10724  0055C6  220B               	addwfc	(??_isupper+3)^0,f,c
 10725  0055C8  500B               	movf	(??_isupper+3)^0,w,c
 10726  0055CA  E10A               	bnz	u8080
 10727  0055CC  0E1A               	movlw	26
 10728  0055CE  5C0A               	subwf	(??_isupper+2)^0,w,c
 10729  0055D0  A0D8               	btfss	status,0,c
 10730  0055D2  EFED  F02A         	goto	u8081
 10731  0055D6  EFF0  F02A         	goto	u8080
 10732  0055DA                     u8081:
 10733  0055DA  0E01               	movlw	1
 10734  0055DC  EFF1  F02A         	goto	u8090
 10735  0055E0                     u8080:
 10736  0055E0  0E00               	movlw	0
 10737  0055E2                     u8090:
 10738  0055E2  6E06               	movwf	?_isupper^0,c
 10739  0055E4  6A07               	clrf	(?_isupper+1)^0,c
 10740  0055E6  0012               	return		;funcret
 10741  0055E8                     __end_of_isupper:
 10742                           	opt callstack 0
 10743                           
 10744 ;; *************** function _strcpy *****************
 10745 ;; Defined at:
 10746 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  dest            2    5[COMRAM] PTR unsigned char 
 10749 ;;		 -> dbuf(80), 
 10750 ;;  src             2    7[COMRAM] PTR const unsigned char 
 10751 ;;		 -> STR_26(4), STR_25(4), STR_22(4), STR_21(4), 
 10752 ;;		 -> dbuf(80), 
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;  d               2   13[COMRAM] PTR unsigned char 
 10755 ;;		 -> dbuf(80), 
 10756 ;;  s               2   11[COMRAM] PTR const unsigned char 
 10757 ;;		 -> STR_26(4), STR_25(4), STR_22(4), STR_21(4), 
 10758 ;;		 -> dbuf(80), 
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  2    5[COMRAM] PTR unsigned char 
 10761 ;; Registers used:
 10762 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10768 ;;      Params:         4       0       0       0       0       0       0       0       0
 10769 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10770 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10771 ;;      Totals:        10       0       0       0       0       0       0       0       0
 10772 ;;Total ram usage:       10 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:    2
 10775 ;; This function calls:
 10776 ;;		Nothing
 10777 ;; This function is called by:
 10778 ;;		_efgtoa
 10779 ;; This function uses a non-reentrant model
 10780 ;;
 10781                           
 10782                           	psect	text39
 10783  005098                     __ptext39:
 10784                           	opt callstack 0
 10785  005098                     _strcpy:
 10786                           	opt callstack 23
 10787  005098  C008  F00C         	movff	strcpy@src,strcpy@s
 10788  00509C  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
 10789  0050A0  C006  F00E         	movff	strcpy@dest,strcpy@d
 10790  0050A4  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
 10791  0050A8                     l8447:
 10792  0050A8  500C               	movf	strcpy@s^0,w,c
 10793  0050AA  6E0A               	movwf	??_strcpy^0,c
 10794  0050AC  500D               	movf	(strcpy@s+1)^0,w,c
 10795  0050AE  6E0B               	movwf	(??_strcpy+1)^0,c
 10796  0050B0  4A0C               	infsnz	strcpy@s^0,f,c
 10797  0050B2  2A0D               	incf	(strcpy@s+1)^0,f,c
 10798  0050B4  C00A  FFF6         	movff	??_strcpy,tblptrl
 10799  0050B8  C00B  FFF7         	movff	??_strcpy+1,tblptrh
 10800  0050BC  6AF8               	clrf	tblptru,c
 10801  0050BE  C00E  FFD9         	movff	strcpy@d,fsr2l
 10802  0050C2  C00F  FFDA         	movff	strcpy@d+1,fsr2h
 10803  0050C6  4A0E               	infsnz	strcpy@d^0,f,c
 10804  0050C8  2A0F               	incf	(strcpy@d+1)^0,f,c
 10805  0050CA  0E07               	movlw	(high __ramtop+-1)
 10806  0050CC  64F7               	cpfsgt	tblptrh,c
 10807  0050CE  D003               	bra	u8697
 10808  0050D0  0008               	tblrd		*
 10809  0050D2  50F5               	movf	tablat,w,c
 10810  0050D4  D005               	bra	u8690
 10811  0050D6                     u8697:
 10812  0050D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 10813  0050DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 10814  0050DE  50EF               	movf	indf0,w,c
 10815  0050E0                     u8690:
 10816  0050E0  6EDF               	movwf	indf2,c
 10817  0050E2  50DF               	movf	indf2,w,c
 10818  0050E4  A4D8               	btfss	status,2,c
 10819  0050E6  EF77  F028         	goto	u8701
 10820  0050EA  EF79  F028         	goto	u8700
 10821  0050EE                     u8701:
 10822  0050EE  EF54  F028         	goto	l8447
 10823  0050F2                     u8700:
 10824  0050F2  0012               	return		;funcret
 10825  0050F4                     __end_of_strcpy:
 10826                           	opt callstack 0
 10827                           
 10828 ;; *************** function _floorf *****************
 10829 ;; Defined at:
 10830 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  x               4   79[COMRAM] float 
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;  u               4   25[BANK0 ] struct .
 10835 ;;  m               4   19[BANK0 ] unsigned long 
 10836 ;;  e               2   23[BANK0 ] int 
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  4   79[COMRAM] float 
 10839 ;; Registers used:
 10840 ;;		wreg, status,2, status,0
 10841 ;; Tracked objects:
 10842 ;;		On entry : 0/0
 10843 ;;		On exit  : 0/0
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10846 ;;      Params:         4       0       0       0       0       0       0       0       0
 10847 ;;      Locals:         0      10       0       0       0       0       0       0       0
 10848 ;;      Temps:          0       6       0       0       0       0       0       0       0
 10849 ;;      Totals:         4      16       0       0       0       0       0       0       0
 10850 ;;Total ram usage:       20 bytes
 10851 ;; Hardware stack levels used:    1
 10852 ;; Hardware stack levels required when called:    2
 10853 ;; This function calls:
 10854 ;;		Nothing
 10855 ;; This function is called by:
 10856 ;;		_efgtoa
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           	psect	text40
 10861  003096                     __ptext40:
 10862                           	opt callstack 0
 10863  003096                     _floorf:
 10864                           	opt callstack 23
 10865  003096  C104  F079         	movff	floorf@F524,floorf@u
 10866  00309A  C105  F07A         	movff	floorf@F524+1,floorf@u+1
 10867  00309E  C106  F07B         	movff	floorf@F524+2,floorf@u+2
 10868  0030A2  C107  F07C         	movff	floorf@F524+3,floorf@u+3
 10869  0030A6  C050  F079         	movff	floorf@x,floorf@u
 10870  0030AA  C051  F07A         	movff	floorf@x+1,floorf@u+1
 10871  0030AE  C052  F07B         	movff	floorf@x+2,floorf@u+2
 10872  0030B2  C053  F07C         	movff	floorf@x+3,floorf@u+3
 10873  0030B6  0E81               	movlw	129
 10874  0030B8  0100               	movlb	0	; () banked
 10875  0030BA  6F6D               	movwf	??_floorf& (0+255),b
 10876  0030BC  0EFF               	movlw	255
 10877  0030BE  6F6E               	movwf	(??_floorf+1)& (0+255),b
 10878  0030C0  C079  F06F         	movff	floorf@u,??_floorf+2
 10879  0030C4  C07A  F070         	movff	floorf@u+1,??_floorf+3
 10880  0030C8  C07B  F071         	movff	floorf@u+2,??_floorf+4
 10881  0030CC  C07C  F072         	movff	floorf@u+3,??_floorf+5
 10882  0030D0  0E18               	movlw	24
 10883  0030D2  EF70  F018         	goto	u8740
 10884  0030D6                     u8745:
 10885  0030D6  90D8               	bcf	status,0,c
 10886  0030D8  3372               	rrcf	(??_floorf+5)& (0+255),f,b
 10887  0030DA  3371               	rrcf	(??_floorf+4)& (0+255),f,b
 10888  0030DC  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 10889  0030DE  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 10890  0030E0                     u8740:
 10891  0030E0  2EE8               	decfsz	wreg,f,c
 10892  0030E2  EF6B  F018         	goto	u8745
 10893  0030E6  516F               	movf	(??_floorf+2)& (0+255),w,b
 10894  0030E8  256D               	addwf	??_floorf& (0+255),w,b
 10895  0030EA  6F77               	movwf	floorf@e& (0+255),b
 10896  0030EC  0E00               	movlw	0
 10897  0030EE  216E               	addwfc	(??_floorf+1)& (0+255),w,b
 10898  0030F0  6F78               	movwf	(floorf@e+1)& (0+255),b
 10899  0030F2  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
 10900  0030F4  EF85  F018         	goto	u8751
 10901  0030F8  5178               	movf	(floorf@e+1)& (0+255),w,b
 10902  0030FA  E109               	bnz	u8750
 10903  0030FC  0E17               	movlw	23
 10904  0030FE  5D77               	subwf	floorf@e& (0+255),w,b
 10905  003100  A0D8               	btfss	status,0,c
 10906  003102  EF85  F018         	goto	u8751
 10907  003106  EF87  F018         	goto	u8750
 10908  00310A                     u8751:
 10909  00310A  EF91  F018         	goto	l8465
 10910  00310E                     u8750:
 10911  00310E                     l8463:
 10912                           
 10913                           ; BSR set to: 0
 10914  00310E  C050  F050         	movff	floorf@x,?_floorf
 10915  003112  C051  F051         	movff	floorf@x+1,?_floorf+1
 10916  003116  C052  F052         	movff	floorf@x+2,?_floorf+2
 10917  00311A  C053  F053         	movff	floorf@x+3,?_floorf+3
 10918  00311E  EF55  F019         	goto	l1687
 10919  003122                     l8465:
 10920                           
 10921                           ; BSR set to: 0
 10922  003122  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
 10923  003124  EF96  F018         	goto	u8761
 10924  003128  EF98  F018         	goto	u8760
 10925  00312C                     u8761:
 10926  00312C  EF09  F019         	goto	l8475
 10927  003130                     u8760:
 10928  003130                     
 10929                           ; BSR set to: 0
 10930  003130  C077  F06D         	movff	floorf@e,??_floorf
 10931  003134  0EFF               	movlw	255
 10932  003136  6F6E               	movwf	(??_floorf+1)& (0+255),b
 10933  003138  0EFF               	movlw	255
 10934  00313A  6F6F               	movwf	(??_floorf+2)& (0+255),b
 10935  00313C  0E7F               	movlw	127
 10936  00313E  6F70               	movwf	(??_floorf+3)& (0+255),b
 10937  003140  0E00               	movlw	0
 10938  003142  6F71               	movwf	(??_floorf+4)& (0+255),b
 10939  003144                     u8775:
 10940  003144  676D               	tstfsz	??_floorf& (0+255),b
 10941  003146  EFA7  F018         	goto	u8776
 10942  00314A  EFAF  F018         	goto	u8777
 10943  00314E                     u8776:
 10944  00314E  3571               	rlcf	(??_floorf+4)& (0+255),w,b
 10945  003150  3371               	rrcf	(??_floorf+4)& (0+255),f,b
 10946  003152  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 10947  003154  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 10948  003156  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 10949  003158  2F6D               	decfsz	??_floorf& (0+255),f,b
 10950  00315A  EFA2  F018         	goto	u8775
 10951  00315E                     u8777:
 10952  00315E  C06E  F073         	movff	??_floorf+1,floorf@m
 10953  003162  C06F  F074         	movff	??_floorf+2,floorf@m+1
 10954  003166  C070  F075         	movff	??_floorf+3,floorf@m+2
 10955  00316A  C071  F076         	movff	??_floorf+4,floorf@m+3
 10956  00316E  0100               	movlb	0	; () banked
 10957  003170  5173               	movf	floorf@m& (0+255),w,b
 10958  003172  1579               	andwf	floorf@u& (0+255),w,b
 10959  003174  6F6D               	movwf	??_floorf& (0+255),b
 10960  003176  5174               	movf	(floorf@m+1)& (0+255),w,b
 10961  003178  157A               	andwf	(floorf@u+1)& (0+255),w,b
 10962  00317A  6F6E               	movwf	(??_floorf+1)& (0+255),b
 10963  00317C  5175               	movf	(floorf@m+2)& (0+255),w,b
 10964  00317E  157B               	andwf	(floorf@u+2)& (0+255),w,b
 10965  003180  6F6F               	movwf	(??_floorf+2)& (0+255),b
 10966  003182  5176               	movf	(floorf@m+3)& (0+255),w,b
 10967  003184  157C               	andwf	(floorf@u+3)& (0+255),w,b
 10968  003186  6F70               	movwf	(??_floorf+3)& (0+255),b
 10969  003188  516D               	movf	??_floorf& (0+255),w,b
 10970  00318A  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 10971  00318C  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 10972  00318E  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 10973  003190  A4D8               	btfss	status,2,c
 10974  003192  EFCD  F018         	goto	u8781
 10975  003196  EFCF  F018         	goto	u8780
 10976  00319A                     u8781:
 10977  00319A  EFD1  F018         	goto	l8471
 10978  00319E                     u8780:
 10979  00319E  EF87  F018         	goto	l8463
 10980  0031A2                     l8471:
 10981                           
 10982                           ; BSR set to: 0
 10983  0031A2  C079  F06D         	movff	floorf@u,??_floorf
 10984  0031A6  C07A  F06E         	movff	floorf@u+1,??_floorf+1
 10985  0031AA  C07B  F06F         	movff	floorf@u+2,??_floorf+2
 10986  0031AE  C07C  F070         	movff	floorf@u+3,??_floorf+3
 10987  0031B2  0E20               	movlw	32
 10988  0031B4  EFE1  F018         	goto	u8790
 10989  0031B8                     u8795:
 10990  0031B8  90D8               	bcf	status,0,c
 10991  0031BA  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 10992  0031BC  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 10993  0031BE  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 10994  0031C0  336D               	rrcf	??_floorf& (0+255),f,b
 10995  0031C2                     u8790:
 10996  0031C2  2EE8               	decfsz	wreg,f,c
 10997  0031C4  EFDC  F018         	goto	u8795
 10998  0031C8  516D               	movf	??_floorf& (0+255),w,b
 10999  0031CA  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11000  0031CC  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11001  0031CE  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11002  0031D0  B4D8               	btfsc	status,2,c
 11003  0031D2  EFED  F018         	goto	u8801
 11004  0031D6  EFEF  F018         	goto	u8800
 11005  0031DA                     u8801:
 11006  0031DA  EFF7  F018         	goto	l1690
 11007  0031DE                     u8800:
 11008  0031DE                     
 11009                           ; BSR set to: 0
 11010  0031DE  5173               	movf	floorf@m& (0+255),w,b
 11011  0031E0  2779               	addwf	floorf@u& (0+255),f,b
 11012  0031E2  5174               	movf	(floorf@m+1)& (0+255),w,b
 11013  0031E4  237A               	addwfc	(floorf@u+1)& (0+255),f,b
 11014  0031E6  5175               	movf	(floorf@m+2)& (0+255),w,b
 11015  0031E8  237B               	addwfc	(floorf@u+2)& (0+255),f,b
 11016  0031EA  5176               	movf	(floorf@m+3)& (0+255),w,b
 11017  0031EC  237C               	addwfc	(floorf@u+3)& (0+255),f,b
 11018  0031EE                     l1690:
 11019                           
 11020                           ; BSR set to: 0
 11021  0031EE  1D73               	comf	floorf@m& (0+255),w,b
 11022  0031F0  6F6D               	movwf	??_floorf& (0+255),b
 11023  0031F2  1D74               	comf	(floorf@m+1)& (0+255),w,b
 11024  0031F4  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11025  0031F6  1D75               	comf	(floorf@m+2)& (0+255),w,b
 11026  0031F8  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11027  0031FA  1D76               	comf	(floorf@m+3)& (0+255),w,b
 11028  0031FC  6F70               	movwf	(??_floorf+3)& (0+255),b
 11029  0031FE  516D               	movf	??_floorf& (0+255),w,b
 11030  003200  1779               	andwf	floorf@u& (0+255),f,b
 11031  003202  516E               	movf	(??_floorf+1)& (0+255),w,b
 11032  003204  177A               	andwf	(floorf@u+1)& (0+255),f,b
 11033  003206  516F               	movf	(??_floorf+2)& (0+255),w,b
 11034  003208  177B               	andwf	(floorf@u+2)& (0+255),f,b
 11035  00320A  5170               	movf	(??_floorf+3)& (0+255),w,b
 11036  00320C  177C               	andwf	(floorf@u+3)& (0+255),f,b
 11037  00320E  EF4D  F019         	goto	l8483
 11038  003212                     l8475:
 11039                           
 11040                           ; BSR set to: 0
 11041  003212  C079  F06D         	movff	floorf@u,??_floorf
 11042  003216  C07A  F06E         	movff	floorf@u+1,??_floorf+1
 11043  00321A  C07B  F06F         	movff	floorf@u+2,??_floorf+2
 11044  00321E  C07C  F070         	movff	floorf@u+3,??_floorf+3
 11045  003222  0E20               	movlw	32
 11046  003224  EF19  F019         	goto	u8810
 11047  003228                     u8815:
 11048  003228  90D8               	bcf	status,0,c
 11049  00322A  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11050  00322C  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11051  00322E  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 11052  003230  336D               	rrcf	??_floorf& (0+255),f,b
 11053  003232                     u8810:
 11054  003232  2EE8               	decfsz	wreg,f,c
 11055  003234  EF14  F019         	goto	u8815
 11056  003238  516D               	movf	??_floorf& (0+255),w,b
 11057  00323A  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11058  00323C  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11059  00323E  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11060  003240  A4D8               	btfss	status,2,c
 11061  003242  EF25  F019         	goto	u8821
 11062  003246  EF27  F019         	goto	u8820
 11063  00324A                     u8821:
 11064  00324A  EF31  F019         	goto	l8479
 11065  00324E                     u8820:
 11066  00324E                     
 11067                           ; BSR set to: 0
 11068  00324E  0E00               	movlw	0
 11069  003250  6F79               	movwf	floorf@u& (0+255),b
 11070  003252  0E00               	movlw	0
 11071  003254  6F7A               	movwf	(floorf@u+1)& (0+255),b
 11072  003256  0E00               	movlw	0
 11073  003258  6F7B               	movwf	(floorf@u+2)& (0+255),b
 11074  00325A  0E00               	movlw	0
 11075  00325C  6F7C               	movwf	(floorf@u+3)& (0+255),b
 11076  00325E  EF4D  F019         	goto	l8483
 11077  003262                     l8479:
 11078                           
 11079                           ; BSR set to: 0
 11080  003262  90D8               	bcf	status,0,c
 11081  003264  3579               	rlcf	floorf@u& (0+255),w,b
 11082  003266  6F6D               	movwf	??_floorf& (0+255),b
 11083  003268  357A               	rlcf	(floorf@u+1)& (0+255),w,b
 11084  00326A  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11085  00326C  357B               	rlcf	(floorf@u+2)& (0+255),w,b
 11086  00326E  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11087  003270  357C               	rlcf	(floorf@u+3)& (0+255),w,b
 11088  003272  6F70               	movwf	(??_floorf+3)& (0+255),b
 11089  003274  516D               	movf	??_floorf& (0+255),w,b
 11090  003276  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11091  003278  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11092  00327A  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11093  00327C  B4D8               	btfsc	status,2,c
 11094  00327E  EF43  F019         	goto	u8831
 11095  003282  EF45  F019         	goto	u8830
 11096  003286                     u8831:
 11097  003286  EF4D  F019         	goto	l8483
 11098  00328A                     u8830:
 11099  00328A                     
 11100                           ; BSR set to: 0
 11101  00328A  0E00               	movlw	0
 11102  00328C  6F79               	movwf	floorf@u& (0+255),b
 11103  00328E  0E00               	movlw	0
 11104  003290  6F7A               	movwf	(floorf@u+1)& (0+255),b
 11105  003292  0E80               	movlw	128
 11106  003294  6F7B               	movwf	(floorf@u+2)& (0+255),b
 11107  003296  0EBF               	movlw	191
 11108  003298  6F7C               	movwf	(floorf@u+3)& (0+255),b
 11109  00329A                     l8483:
 11110                           
 11111                           ; BSR set to: 0
 11112  00329A  C079  F050         	movff	floorf@u,?_floorf
 11113  00329E  C07A  F051         	movff	floorf@u+1,?_floorf+1
 11114  0032A2  C07B  F052         	movff	floorf@u+2,?_floorf+2
 11115  0032A6  C07C  F053         	movff	floorf@u+3,?_floorf+3
 11116  0032AA                     l1687:
 11117                           
 11118                           ; BSR set to: 0
 11119  0032AA  0012               	return		;funcret
 11120  0032AC                     __end_of_floorf:
 11121                           	opt callstack 0
 11122                           
 11123 ;; *************** function ___fpclassifyf *****************
 11124 ;; Defined at:
 11125 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 11126 ;; Parameters:    Size  Location     Type
 11127 ;;  x               4    5[COMRAM] float 
 11128 ;; Auto vars:     Size  Location     Type
 11129 ;;  u               4   15[COMRAM] struct .
 11130 ;;  e               2   13[COMRAM] int 
 11131 ;; Return value:  Size  Location     Type
 11132 ;;                  2    5[COMRAM] int 
 11133 ;; Registers used:
 11134 ;;		wreg, status,2, status,0
 11135 ;; Tracked objects:
 11136 ;;		On entry : 0/0
 11137 ;;		On exit  : 0/0
 11138 ;;		Unchanged: 0/0
 11139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11140 ;;      Params:         4       0       0       0       0       0       0       0       0
 11141 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11142 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11143 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11144 ;;Total ram usage:       14 bytes
 11145 ;; Hardware stack levels used:    1
 11146 ;; Hardware stack levels required when called:    2
 11147 ;; This function calls:
 11148 ;;		Nothing
 11149 ;; This function is called by:
 11150 ;;		_efgtoa
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           
 11154                           	psect	text41
 11155  004326                     __ptext41:
 11156                           	opt callstack 0
 11157  004326                     ___fpclassifyf:
 11158                           	opt callstack 23
 11159  004326  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
 11160  00432A  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 11161  00432E  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 11162  004332  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 11163  004336  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11164  00433A  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11165  00433E  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11166  004342  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11167  004346  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11168  00434A  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11169  00434E  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11170  004352  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11171  004356  0E18               	movlw	24
 11172  004358  EFB3  F021         	goto	u8620
 11173  00435C                     u8625:
 11174  00435C  90D8               	bcf	status,0,c
 11175  00435E  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11176  004360  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11177  004362  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11178  004364  320A               	rrcf	??___fpclassifyf^0,f,c
 11179  004366                     u8620:
 11180  004366  2EE8               	decfsz	wreg,f,c
 11181  004368  EFAE  F021         	goto	u8625
 11182  00436C  500A               	movf	??___fpclassifyf^0,w,c
 11183  00436E  6E0E               	movwf	___fpclassifyf@e^0,c
 11184  004370  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11185  004372  500E               	movf	___fpclassifyf@e^0,w,c
 11186  004374  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11187  004376  A4D8               	btfss	status,2,c
 11188  004378  EFC0  F021         	goto	u8631
 11189  00437C  EFC2  F021         	goto	u8630
 11190  004380                     u8631:
 11191  004380  EFE2  F021         	goto	l8435
 11192  004384                     u8630:
 11193  004384  90D8               	bcf	status,0,c
 11194  004386  3410               	rlcf	___fpclassifyf@u^0,w,c
 11195  004388  6E0A               	movwf	??___fpclassifyf^0,c
 11196  00438A  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11197  00438C  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11198  00438E  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11199  004390  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11200  004392  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11201  004394  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11202  004396  500A               	movf	??___fpclassifyf^0,w,c
 11203  004398  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11204  00439A  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11205  00439C  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11206  00439E  A4D8               	btfss	status,2,c
 11207  0043A0  EFD4  F021         	goto	u8641
 11208  0043A4  EFD6  F021         	goto	u8640
 11209  0043A8                     u8641:
 11210  0043A8  EFDC  F021         	goto	l8431
 11211  0043AC                     u8640:
 11212  0043AC  0E00               	movlw	0
 11213  0043AE  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11214  0043B0  0E02               	movlw	2
 11215  0043B2  6E06               	movwf	?___fpclassifyf^0,c
 11216  0043B4  EF11  F022         	goto	l1642
 11217  0043B8                     l8431:
 11218  0043B8  0E00               	movlw	0
 11219  0043BA  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11220  0043BC  0E03               	movlw	3
 11221  0043BE  6E06               	movwf	?___fpclassifyf^0,c
 11222  0043C0  EF11  F022         	goto	l1642
 11223  0043C4                     l8435:
 11224  0043C4  280E               	incf	___fpclassifyf@e^0,w,c
 11225  0043C6  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11226  0043C8  A4D8               	btfss	status,2,c
 11227  0043CA  EFE9  F021         	goto	u8651
 11228  0043CE  EFEB  F021         	goto	u8650
 11229  0043D2                     u8651:
 11230  0043D2  EF0D  F022         	goto	l8441
 11231  0043D6                     u8650:
 11232  0043D6  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11233  0043DA  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11234  0043DE  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11235  0043E2  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11236  0043E6  0E09               	movlw	9
 11237  0043E8                     u8665:
 11238  0043E8  90D8               	bcf	status,0,c
 11239  0043EA  360A               	rlcf	??___fpclassifyf^0,f,c
 11240  0043EC  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11241  0043EE  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11242  0043F0  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11243  0043F2  2EE8               	decfsz	wreg,f,c
 11244  0043F4  EFF4  F021         	goto	u8665
 11245  0043F8  500A               	movf	??___fpclassifyf^0,w,c
 11246  0043FA  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11247  0043FC  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11248  0043FE  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11249  004400  B4D8               	btfsc	status,2,c
 11250  004402  EF05  F022         	goto	u8671
 11251  004406  EF08  F022         	goto	u8670
 11252  00440A                     u8671:
 11253  00440A  0E01               	movlw	1
 11254  00440C  EF09  F022         	goto	u8680
 11255  004410                     u8670:
 11256  004410  0E00               	movlw	0
 11257  004412                     u8680:
 11258  004412  6E06               	movwf	?___fpclassifyf^0,c
 11259  004414  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11260  004416  EF11  F022         	goto	l1642
 11261  00441A                     l8441:
 11262  00441A  0E00               	movlw	0
 11263  00441C  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11264  00441E  0E04               	movlw	4
 11265  004420  6E06               	movwf	?___fpclassifyf^0,c
 11266  004422                     l1642:
 11267  004422  0012               	return		;funcret
 11268  004424                     __end_of___fpclassifyf:
 11269                           	opt callstack 0
 11270                           
 11271 ;; *************** function ___fltol *****************
 11272 ;; Defined at:
 11273 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11274 ;; Parameters:    Size  Location     Type
 11275 ;;  f1              4   18[BANK0 ] int 
 11276 ;; Auto vars:     Size  Location     Type
 11277 ;;  exp1            1   27[BANK0 ] unsigned char 
 11278 ;;  sign1           1   26[BANK0 ] unsigned char 
 11279 ;; Return value:  Size  Location     Type
 11280 ;;                  4   18[BANK0 ] long 
 11281 ;; Registers used:
 11282 ;;		wreg, status,2, status,0
 11283 ;; Tracked objects:
 11284 ;;		On entry : 0/0
 11285 ;;		On exit  : 0/0
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11288 ;;      Params:         0       4       0       0       0       0       0       0       0
 11289 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11290 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11291 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11292 ;;Total ram usage:       10 bytes
 11293 ;; Hardware stack levels used:    1
 11294 ;; Hardware stack levels required when called:    2
 11295 ;; This function calls:
 11296 ;;		Nothing
 11297 ;; This function is called by:
 11298 ;;		_pwmDuty
 11299 ;;		_PID
 11300 ;;		_efgtoa
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text42
 11305  00411A                     __ptext42:
 11306                           	opt callstack 0
 11307  00411A                     ___fltol:
 11308                           	opt callstack 23
 11309  00411A  0100               	movlb	0	; () banked
 11310  00411C  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11311  00411E  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11312  004120  6F7B               	movwf	___fltol@exp1& (0+255),b
 11313  004122  517B               	movf	___fltol@exp1& (0+255),w,b
 11314  004124  A4D8               	btfss	status,2,c
 11315  004126  EF97  F020         	goto	u9621
 11316  00412A  EF99  F020         	goto	u9620
 11317  00412E                     u9621:
 11318  00412E  EFA3  F020         	goto	l8983
 11319  004132                     u9620:
 11320  004132                     l8979:
 11321                           
 11322                           ; BSR set to: 0
 11323  004132  0E00               	movlw	0
 11324  004134  6F72               	movwf	?___fltol& (0+255),b
 11325  004136  0E00               	movlw	0
 11326  004138  6F73               	movwf	(?___fltol+1)& (0+255),b
 11327  00413A  0E00               	movlw	0
 11328  00413C  6F74               	movwf	(?___fltol+2)& (0+255),b
 11329  00413E  0E00               	movlw	0
 11330  004140  6F75               	movwf	(?___fltol+3)& (0+255),b
 11331  004142  EF10  F021         	goto	l1258
 11332  004146                     l8983:
 11333                           
 11334                           ; BSR set to: 0
 11335  004146  C072  F076         	movff	___fltol@f1,??___fltol
 11336  00414A  C073  F077         	movff	___fltol@f1+1,??___fltol+1
 11337  00414E  C074  F078         	movff	___fltol@f1+2,??___fltol+2
 11338  004152  C075  F079         	movff	___fltol@f1+3,??___fltol+3
 11339  004156  0E20               	movlw	32
 11340  004158  EFB3  F020         	goto	u9630
 11341  00415C                     u9635:
 11342  00415C  90D8               	bcf	status,0,c
 11343  00415E  3379               	rrcf	(??___fltol+3)& (0+255),f,b
 11344  004160  3378               	rrcf	(??___fltol+2)& (0+255),f,b
 11345  004162  3377               	rrcf	(??___fltol+1)& (0+255),f,b
 11346  004164  3376               	rrcf	??___fltol& (0+255),f,b
 11347  004166                     u9630:
 11348  004166  2EE8               	decfsz	wreg,f,c
 11349  004168  EFAE  F020         	goto	u9635
 11350  00416C  5176               	movf	??___fltol& (0+255),w,b
 11351  00416E  6F7A               	movwf	___fltol@sign1& (0+255),b
 11352  004170                     
 11353                           ; BSR set to: 0
 11354  004170  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
 11355  004172                     
 11356                           ; BSR set to: 0
 11357  004172  0EFF               	movlw	255
 11358  004174  1772               	andwf	___fltol@f1& (0+255),f,b
 11359  004176  0EFF               	movlw	255
 11360  004178  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
 11361  00417A  0EFF               	movlw	255
 11362  00417C  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
 11363  00417E  0E00               	movlw	0
 11364  004180  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
 11365  004182                     
 11366                           ; BSR set to: 0
 11367  004182  0E96               	movlw	150
 11368  004184  5F7B               	subwf	___fltol@exp1& (0+255),f,b
 11369  004186                     
 11370                           ; BSR set to: 0
 11371  004186  BF7B               	btfsc	___fltol@exp1& (0+255),7,b
 11372  004188  EFCA  F020         	goto	u9640
 11373  00418C  EFC8  F020         	goto	u9641
 11374  004190                     u9641:
 11375  004190  EFE0  F020         	goto	l9003
 11376  004194                     u9640:
 11377  004194                     
 11378                           ; BSR set to: 0
 11379  004194  517B               	movf	___fltol@exp1& (0+255),w,b
 11380  004196  0A80               	xorlw	128
 11381  004198  0F97               	addlw	151
 11382  00419A  B0D8               	btfsc	status,0,c
 11383  00419C  EFD2  F020         	goto	u9651
 11384  0041A0  EFD4  F020         	goto	u9650
 11385  0041A4                     u9651:
 11386  0041A4  EFD6  F020         	goto	l8999
 11387  0041A8                     u9650:
 11388  0041A8  EF99  F020         	goto	l8979
 11389  0041AC                     l8999:
 11390                           
 11391                           ; BSR set to: 0
 11392  0041AC  90D8               	bcf	status,0,c
 11393  0041AE  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11394  0041B0  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11395  0041B2  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11396  0041B4  3372               	rrcf	___fltol@f1& (0+255),f,b
 11397  0041B6                     
 11398                           ; BSR set to: 0
 11399  0041B6  3F7B               	incfsz	___fltol@exp1& (0+255),f,b
 11400  0041B8  EFD6  F020         	goto	l8999
 11401  0041BC  EFF8  F020         	goto	l9013
 11402  0041C0                     l9003:
 11403                           
 11404                           ; BSR set to: 0
 11405  0041C0  0E1F               	movlw	31
 11406  0041C2  657B               	cpfsgt	___fltol@exp1& (0+255),b
 11407  0041C4  EFE6  F020         	goto	u9661
 11408  0041C8  EFE8  F020         	goto	u9660
 11409  0041CC                     u9661:
 11410  0041CC  EFF0  F020         	goto	l9011
 11411  0041D0                     u9660:
 11412  0041D0  EF99  F020         	goto	l8979
 11413  0041D4                     l9009:
 11414                           
 11415                           ; BSR set to: 0
 11416  0041D4  90D8               	bcf	status,0,c
 11417  0041D6  3772               	rlcf	___fltol@f1& (0+255),f,b
 11418  0041D8  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11419  0041DA  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11420  0041DC  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11421  0041DE  077B               	decf	___fltol@exp1& (0+255),f,b
 11422  0041E0                     l9011:
 11423                           
 11424                           ; BSR set to: 0
 11425  0041E0  517B               	movf	___fltol@exp1& (0+255),w,b
 11426  0041E2  A4D8               	btfss	status,2,c
 11427  0041E4  EFF6  F020         	goto	u9671
 11428  0041E8  EFF8  F020         	goto	u9670
 11429  0041EC                     u9671:
 11430  0041EC  EFEA  F020         	goto	l9009
 11431  0041F0                     u9670:
 11432  0041F0                     l9013:
 11433                           
 11434                           ; BSR set to: 0
 11435  0041F0  517A               	movf	___fltol@sign1& (0+255),w,b
 11436  0041F2  B4D8               	btfsc	status,2,c
 11437  0041F4  EFFE  F020         	goto	u9681
 11438  0041F8  EF00  F021         	goto	u9680
 11439  0041FC                     u9681:
 11440  0041FC  EF08  F021         	goto	l9017
 11441  004200                     u9680:
 11442  004200                     
 11443                           ; BSR set to: 0
 11444  004200  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
 11445  004202  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
 11446  004204  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
 11447  004206  6D72               	negf	___fltol@f1& (0+255),b
 11448  004208  0E00               	movlw	0
 11449  00420A  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11450  00420C  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11451  00420E  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11452  004210                     l9017:
 11453                           
 11454                           ; BSR set to: 0
 11455  004210  C072  F072         	movff	___fltol@f1,?___fltol
 11456  004214  C073  F073         	movff	___fltol@f1+1,?___fltol+1
 11457  004218  C074  F074         	movff	___fltol@f1+2,?___fltol+2
 11458  00421C  C075  F075         	movff	___fltol@f1+3,?___fltol+3
 11459  004220                     l1258:
 11460                           
 11461                           ; BSR set to: 0
 11462  004220  0012               	return		;funcret
 11463  004222                     __end_of___fltol:
 11464                           	opt callstack 0
 11465                           
 11466 ;; *************** function ___flsub *****************
 11467 ;; Defined at:
 11468 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11469 ;; Parameters:    Size  Location     Type
 11470 ;;  b               4   67[COMRAM] long 
 11471 ;;  a               4   71[COMRAM] long 
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;		None
 11474 ;; Return value:  Size  Location     Type
 11475 ;;                  4   67[COMRAM] long 
 11476 ;; Registers used:
 11477 ;;		wreg, status,2, status,0, cstack
 11478 ;; Tracked objects:
 11479 ;;		On entry : 0/0
 11480 ;;		On exit  : 0/0
 11481 ;;		Unchanged: 0/0
 11482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11483 ;;      Params:         8       0       0       0       0       0       0       0       0
 11484 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11485 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11486 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11487 ;;Total ram usage:        8 bytes
 11488 ;; Hardware stack levels used:    1
 11489 ;; Hardware stack levels required when called:    3
 11490 ;; This function calls:
 11491 ;;		___fladd
 11492 ;; This function is called by:
 11493 ;;		_PID
 11494 ;;		_efgtoa
 11495 ;;		_roundf
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           	psect	text43
 11500  00541A                     __ptext43:
 11501                           	opt callstack 0
 11502  00541A                     ___flsub:
 11503                           	opt callstack 22
 11504  00541A  0E00               	movlw	0
 11505  00541C  1A48               	xorwf	___flsub@a^0,f,c
 11506  00541E  0E00               	movlw	0
 11507  005420  1A49               	xorwf	(___flsub@a+1)^0,f,c
 11508  005422  0E00               	movlw	0
 11509  005424  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 11510  005426  0E80               	movlw	128
 11511  005428  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 11512  00542A  C044  F034         	movff	___flsub@b,___fladd@b
 11513  00542E  C045  F035         	movff	___flsub@b+1,___fladd@b+1
 11514  005432  C046  F036         	movff	___flsub@b+2,___fladd@b+2
 11515  005436  C047  F037         	movff	___flsub@b+3,___fladd@b+3
 11516  00543A  C048  F038         	movff	___flsub@a,___fladd@a
 11517  00543E  C049  F039         	movff	___flsub@a+1,___fladd@a+1
 11518  005442  C04A  F03A         	movff	___flsub@a+2,___fladd@a+2
 11519  005446  C04B  F03B         	movff	___flsub@a+3,___fladd@a+3
 11520  00544A  EC80  F00B         	call	___fladd	;wreg free
 11521  00544E  C034  F044         	movff	?___fladd,?___flsub
 11522  005452  C035  F045         	movff	?___fladd+1,?___flsub+1
 11523  005456  C036  F046         	movff	?___fladd+2,?___flsub+2
 11524  00545A  C037  F047         	movff	?___fladd+3,?___flsub+3
 11525  00545E  0012               	return		;funcret
 11526  005460                     __end_of___flsub:
 11527                           	opt callstack 0
 11528                           
 11529 ;; *************** function ___fladd *****************
 11530 ;; Defined at:
 11531 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11532 ;; Parameters:    Size  Location     Type
 11533 ;;  b               4   51[COMRAM] long 
 11534 ;;  a               4   55[COMRAM] long 
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;  grs             1   66[COMRAM] unsigned char 
 11537 ;;  bexp            1   65[COMRAM] unsigned char 
 11538 ;;  aexp            1   64[COMRAM] unsigned char 
 11539 ;;  signs           1   63[COMRAM] unsigned char 
 11540 ;; Return value:  Size  Location     Type
 11541 ;;                  4   51[COMRAM] unsigned char 
 11542 ;; Registers used:
 11543 ;;		wreg, status,2, status,0
 11544 ;; Tracked objects:
 11545 ;;		On entry : 0/0
 11546 ;;		On exit  : 0/0
 11547 ;;		Unchanged: 0/0
 11548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11549 ;;      Params:         8       0       0       0       0       0       0       0       0
 11550 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11551 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11552 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11553 ;;Total ram usage:       16 bytes
 11554 ;; Hardware stack levels used:    1
 11555 ;; Hardware stack levels required when called:    2
 11556 ;; This function calls:
 11557 ;;		Nothing
 11558 ;; This function is called by:
 11559 ;;		_leerSensores
 11560 ;;		_PID
 11561 ;;		_efgtoa
 11562 ;;		___flsub
 11563 ;;		_roundf
 11564 ;; This function uses a non-reentrant model
 11565 ;;
 11566                           
 11567                           	psect	text44
 11568  001700                     __ptext44:
 11569                           	opt callstack 0
 11570  001700                     ___fladd:
 11571                           	opt callstack 22
 11572  001700  5037               	movf	(___fladd@b+3)^0,w,c
 11573  001702  0B80               	andlw	128
 11574  001704  6E40               	movwf	___fladd@signs^0,c
 11575  001706  5037               	movf	(___fladd@b+3)^0,w,c
 11576  001708  2437               	addwf	(___fladd@b+3)^0,w,c
 11577  00170A  6E42               	movwf	___fladd@bexp^0,c
 11578  00170C  AE36               	btfss	(___fladd@b+2)^0,7,c
 11579  00170E  EF8B  F00B         	goto	u8181
 11580  001712  EF8D  F00B         	goto	u8180
 11581  001716                     u8181:
 11582  001716  EF8E  F00B         	goto	l8197
 11583  00171A                     u8180:
 11584  00171A  8042               	bsf	___fladd@bexp^0,0,c
 11585  00171C                     l8197:
 11586  00171C  5042               	movf	___fladd@bexp^0,w,c
 11587  00171E  B4D8               	btfsc	status,2,c
 11588  001720  EF94  F00B         	goto	u8191
 11589  001724  EF96  F00B         	goto	u8190
 11590  001728                     u8191:
 11591  001728  EFAB  F00B         	goto	l8207
 11592  00172C                     u8190:
 11593  00172C  2842               	incf	___fladd@bexp^0,w,c
 11594  00172E  A4D8               	btfss	status,2,c
 11595  001730  EF9C  F00B         	goto	u8201
 11596  001734  EF9E  F00B         	goto	u8200
 11597  001738                     u8201:
 11598  001738  EFA6  F00B         	goto	l8203
 11599  00173C                     u8200:
 11600  00173C  0E00               	movlw	0
 11601  00173E  6E34               	movwf	___fladd@b^0,c
 11602  001740  0E00               	movlw	0
 11603  001742  6E35               	movwf	(___fladd@b+1)^0,c
 11604  001744  0E00               	movlw	0
 11605  001746  6E36               	movwf	(___fladd@b+2)^0,c
 11606  001748  0E00               	movlw	0
 11607  00174A  6E37               	movwf	(___fladd@b+3)^0,c
 11608  00174C                     l8203:
 11609  00174C  8E36               	bsf	(___fladd@b+2)^0,7,c
 11610  00174E  0E00               	movlw	0
 11611  001750  6E37               	movwf	(___fladd@b+3)^0,c
 11612  001752  EFB3  F00B         	goto	l8209
 11613  001756                     l8207:
 11614  001756  0E00               	movlw	0
 11615  001758  6E34               	movwf	___fladd@b^0,c
 11616  00175A  0E00               	movlw	0
 11617  00175C  6E35               	movwf	(___fladd@b+1)^0,c
 11618  00175E  0E00               	movlw	0
 11619  001760  6E36               	movwf	(___fladd@b+2)^0,c
 11620  001762  0E00               	movlw	0
 11621  001764  6E37               	movwf	(___fladd@b+3)^0,c
 11622  001766                     l8209:
 11623  001766  503B               	movf	(___fladd@a+3)^0,w,c
 11624  001768  0B80               	andlw	128
 11625  00176A  6E41               	movwf	___fladd@aexp^0,c
 11626  00176C  5040               	movf	___fladd@signs^0,w,c
 11627  00176E  1841               	xorwf	___fladd@aexp^0,w,c
 11628  001770  B4D8               	btfsc	status,2,c
 11629  001772  EFBD  F00B         	goto	u8211
 11630  001776  EFBF  F00B         	goto	u8210
 11631  00177A                     u8211:
 11632  00177A  EFC0  F00B         	goto	l8215
 11633  00177E                     u8210:
 11634  00177E  8C40               	bsf	___fladd@signs^0,6,c
 11635  001780                     l8215:
 11636  001780  503B               	movf	(___fladd@a+3)^0,w,c
 11637  001782  243B               	addwf	(___fladd@a+3)^0,w,c
 11638  001784  6E41               	movwf	___fladd@aexp^0,c
 11639  001786  AE3A               	btfss	(___fladd@a+2)^0,7,c
 11640  001788  EFC8  F00B         	goto	u8221
 11641  00178C  EFCA  F00B         	goto	u8220
 11642  001790                     u8221:
 11643  001790  EFCB  F00B         	goto	l8221
 11644  001794                     u8220:
 11645  001794  8041               	bsf	___fladd@aexp^0,0,c
 11646  001796                     l8221:
 11647  001796  5041               	movf	___fladd@aexp^0,w,c
 11648  001798  B4D8               	btfsc	status,2,c
 11649  00179A  EFD1  F00B         	goto	u8231
 11650  00179E  EFD3  F00B         	goto	u8230
 11651  0017A2                     u8231:
 11652  0017A2  EFE8  F00B         	goto	l8231
 11653  0017A6                     u8230:
 11654  0017A6  2841               	incf	___fladd@aexp^0,w,c
 11655  0017A8  A4D8               	btfss	status,2,c
 11656  0017AA  EFD9  F00B         	goto	u8241
 11657  0017AE  EFDB  F00B         	goto	u8240
 11658  0017B2                     u8241:
 11659  0017B2  EFE3  F00B         	goto	l8227
 11660  0017B6                     u8240:
 11661  0017B6  0E00               	movlw	0
 11662  0017B8  6E38               	movwf	___fladd@a^0,c
 11663  0017BA  0E00               	movlw	0
 11664  0017BC  6E39               	movwf	(___fladd@a+1)^0,c
 11665  0017BE  0E00               	movlw	0
 11666  0017C0  6E3A               	movwf	(___fladd@a+2)^0,c
 11667  0017C2  0E00               	movlw	0
 11668  0017C4  6E3B               	movwf	(___fladd@a+3)^0,c
 11669  0017C6                     l8227:
 11670  0017C6  8E3A               	bsf	(___fladd@a+2)^0,7,c
 11671  0017C8  0E00               	movlw	0
 11672  0017CA  6E3B               	movwf	(___fladd@a+3)^0,c
 11673  0017CC  EFF0  F00B         	goto	l8233
 11674  0017D0                     l8231:
 11675  0017D0  0E00               	movlw	0
 11676  0017D2  6E38               	movwf	___fladd@a^0,c
 11677  0017D4  0E00               	movlw	0
 11678  0017D6  6E39               	movwf	(___fladd@a+1)^0,c
 11679  0017D8  0E00               	movlw	0
 11680  0017DA  6E3A               	movwf	(___fladd@a+2)^0,c
 11681  0017DC  0E00               	movlw	0
 11682  0017DE  6E3B               	movwf	(___fladd@a+3)^0,c
 11683  0017E0                     l8233:
 11684  0017E0  5042               	movf	___fladd@bexp^0,w,c
 11685  0017E2  5C41               	subwf	___fladd@aexp^0,w,c
 11686  0017E4  B0D8               	btfsc	status,0,c
 11687  0017E6  EFF7  F00B         	goto	u8251
 11688  0017EA  EFF9  F00B         	goto	u8250
 11689  0017EE                     u8251:
 11690  0017EE  EF20  F00C         	goto	l8269
 11691  0017F2                     u8250:
 11692  0017F2  AC40               	btfss	___fladd@signs^0,6,c
 11693  0017F4  EFFE  F00B         	goto	u8261
 11694  0017F8  EF00  F00C         	goto	u8260
 11695  0017FC                     u8261:
 11696  0017FC  EF02  F00C         	goto	l8239
 11697  001800                     u8260:
 11698  001800  0E80               	movlw	128
 11699  001802  1A40               	xorwf	___fladd@signs^0,f,c
 11700  001804                     l8239:
 11701  001804  C042  F043         	movff	___fladd@bexp,___fladd@grs
 11702  001808  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11703  00180C  C043  F041         	movff	___fladd@grs,___fladd@aexp
 11704  001810  C034  F043         	movff	___fladd@b,___fladd@grs
 11705  001814  C038  F034         	movff	___fladd@a,___fladd@b
 11706  001818  C043  F038         	movff	___fladd@grs,___fladd@a
 11707  00181C  C035  F043         	movff	___fladd@b+1,___fladd@grs
 11708  001820  C039  F035         	movff	___fladd@a+1,___fladd@b+1
 11709  001824  C043  F039         	movff	___fladd@grs,___fladd@a+1
 11710  001828  C036  F043         	movff	___fladd@b+2,___fladd@grs
 11711  00182C  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
 11712  001830  C043  F03A         	movff	___fladd@grs,___fladd@a+2
 11713  001834  C037  F043         	movff	___fladd@b+3,___fladd@grs
 11714  001838  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
 11715  00183C  C043  F03B         	movff	___fladd@grs,___fladd@a+3
 11716  001840                     l8269:
 11717  001840  0E00               	movlw	0
 11718  001842  6E43               	movwf	___fladd@grs^0,c
 11719  001844  5042               	movf	___fladd@bexp^0,w,c
 11720  001846  C041  F03C         	movff	___fladd@aexp,??___fladd
 11721  00184A  6A3D               	clrf	(??___fladd+1)^0,c
 11722  00184C  5E3C               	subwf	??___fladd^0,f,c
 11723  00184E  0E00               	movlw	0
 11724  001850  5A3D               	subwfb	(??___fladd+1)^0,f,c
 11725  001852  BE3D               	btfsc	(??___fladd+1)^0,7,c
 11726  001854  EF35  F00C         	goto	u8271
 11727  001858  503D               	movf	(??___fladd+1)^0,w,c
 11728  00185A  E109               	bnz	u8270
 11729  00185C  0E1A               	movlw	26
 11730  00185E  5C3C               	subwf	??___fladd^0,w,c
 11731  001860  A0D8               	btfss	status,0,c
 11732  001862  EF35  F00C         	goto	u8271
 11733  001866  EF37  F00C         	goto	u8270
 11734  00186A                     u8271:
 11735  00186A  EF6E  F00C         	goto	l1490
 11736  00186E                     u8270:
 11737  00186E  5034               	movf	___fladd@b^0,w,c
 11738  001870  1035               	iorwf	(___fladd@b+1)^0,w,c
 11739  001872  1036               	iorwf	(___fladd@b+2)^0,w,c
 11740  001874  1037               	iorwf	(___fladd@b+3)^0,w,c
 11741  001876  A4D8               	btfss	status,2,c
 11742  001878  EF40  F00C         	goto	u8281
 11743  00187C  EF43  F00C         	goto	u8280
 11744  001880                     u8281:
 11745  001880  0E01               	movlw	1
 11746  001882  EF44  F00C         	goto	u8290
 11747  001886                     u8280:
 11748  001886  0E00               	movlw	0
 11749  001888                     u8290:
 11750  001888  6E43               	movwf	___fladd@grs^0,c
 11751  00188A  0E00               	movlw	0
 11752  00188C  6E34               	movwf	___fladd@b^0,c
 11753  00188E  0E00               	movlw	0
 11754  001890  6E35               	movwf	(___fladd@b+1)^0,c
 11755  001892  0E00               	movlw	0
 11756  001894  6E36               	movwf	(___fladd@b+2)^0,c
 11757  001896  0E00               	movlw	0
 11758  001898  6E37               	movwf	(___fladd@b+3)^0,c
 11759  00189A  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11760  00189E  EF77  F00C         	goto	l1489
 11761  0018A2                     l1491:
 11762  0018A2  A043               	btfss	___fladd@grs^0,0,c
 11763  0018A4  EF56  F00C         	goto	u8301
 11764  0018A8  EF58  F00C         	goto	u8300
 11765  0018AC                     u8301:
 11766  0018AC  EF5E  F00C         	goto	l8281
 11767  0018B0                     u8300:
 11768  0018B0  90D8               	bcf	status,0,c
 11769  0018B2  3043               	rrcf	___fladd@grs^0,w,c
 11770  0018B4  0901               	iorlw	1
 11771  0018B6  6E43               	movwf	___fladd@grs^0,c
 11772  0018B8  EF60  F00C         	goto	l8283
 11773  0018BC                     l8281:
 11774  0018BC  90D8               	bcf	status,0,c
 11775  0018BE  3243               	rrcf	___fladd@grs^0,f,c
 11776  0018C0                     l8283:
 11777  0018C0  A034               	btfss	___fladd@b^0,0,c
 11778  0018C2  EF65  F00C         	goto	u8311
 11779  0018C6  EF67  F00C         	goto	u8310
 11780  0018CA                     u8311:
 11781  0018CA  EF68  F00C         	goto	l8287
 11782  0018CE                     u8310:
 11783  0018CE  8E43               	bsf	___fladd@grs^0,7,c
 11784  0018D0                     l8287:
 11785  0018D0  3437               	rlcf	(___fladd@b+3)^0,w,c
 11786  0018D2  3237               	rrcf	(___fladd@b+3)^0,f,c
 11787  0018D4  3236               	rrcf	(___fladd@b+2)^0,f,c
 11788  0018D6  3235               	rrcf	(___fladd@b+1)^0,f,c
 11789  0018D8  3234               	rrcf	___fladd@b^0,f,c
 11790  0018DA  2A42               	incf	___fladd@bexp^0,f,c
 11791  0018DC                     l1490:
 11792  0018DC  5041               	movf	___fladd@aexp^0,w,c
 11793  0018DE  5C42               	subwf	___fladd@bexp^0,w,c
 11794  0018E0  A0D8               	btfss	status,0,c
 11795  0018E2  EF75  F00C         	goto	u8321
 11796  0018E6  EF77  F00C         	goto	u8320
 11797  0018EA                     u8321:
 11798  0018EA  EF51  F00C         	goto	l1491
 11799  0018EE                     u8320:
 11800  0018EE                     l1489:
 11801  0018EE  BC40               	btfsc	___fladd@signs^0,6,c
 11802  0018F0  EF7C  F00C         	goto	u8331
 11803  0018F4  EF7E  F00C         	goto	u8330
 11804  0018F8                     u8331:
 11805  0018F8  EFBE  F00C         	goto	l8315
 11806  0018FC                     u8330:
 11807  0018FC  5042               	movf	___fladd@bexp^0,w,c
 11808  0018FE  A4D8               	btfss	status,2,c
 11809  001900  EF84  F00C         	goto	u8341
 11810  001904  EF86  F00C         	goto	u8340
 11811  001908                     u8341:
 11812  001908  EF90  F00C         	goto	l8297
 11813  00190C                     u8340:
 11814  00190C  0E00               	movlw	0
 11815  00190E  6E34               	movwf	?___fladd^0,c
 11816  001910  0E00               	movlw	0
 11817  001912  6E35               	movwf	(?___fladd+1)^0,c
 11818  001914  0E00               	movlw	0
 11819  001916  6E36               	movwf	(?___fladd+2)^0,c
 11820  001918  0E00               	movlw	0
 11821  00191A  6E37               	movwf	(?___fladd+3)^0,c
 11822  00191C  EFDF  F00D         	goto	l1498
 11823  001920                     l8297:
 11824  001920  5038               	movf	___fladd@a^0,w,c
 11825  001922  2634               	addwf	___fladd@b^0,f,c
 11826  001924  5039               	movf	(___fladd@a+1)^0,w,c
 11827  001926  2235               	addwfc	(___fladd@b+1)^0,f,c
 11828  001928  503A               	movf	(___fladd@a+2)^0,w,c
 11829  00192A  2236               	addwfc	(___fladd@b+2)^0,f,c
 11830  00192C  503B               	movf	(___fladd@a+3)^0,w,c
 11831  00192E  2237               	addwfc	(___fladd@b+3)^0,f,c
 11832  001930  A037               	btfss	(___fladd@b+3)^0,0,c
 11833  001932  EF9D  F00C         	goto	u8351
 11834  001936  EF9F  F00C         	goto	u8350
 11835  00193A                     u8351:
 11836  00193A  EF4B  F00D         	goto	l8351
 11837  00193E                     u8350:
 11838  00193E  A043               	btfss	___fladd@grs^0,0,c
 11839  001940  EFA4  F00C         	goto	u8361
 11840  001944  EFA6  F00C         	goto	u8360
 11841  001948                     u8361:
 11842  001948  EFAC  F00C         	goto	l8305
 11843  00194C                     u8360:
 11844  00194C  90D8               	bcf	status,0,c
 11845  00194E  3043               	rrcf	___fladd@grs^0,w,c
 11846  001950  0901               	iorlw	1
 11847  001952  6E43               	movwf	___fladd@grs^0,c
 11848  001954  EFAE  F00C         	goto	l8307
 11849  001958                     l8305:
 11850  001958  90D8               	bcf	status,0,c
 11851  00195A  3243               	rrcf	___fladd@grs^0,f,c
 11852  00195C                     l8307:
 11853  00195C  A034               	btfss	___fladd@b^0,0,c
 11854  00195E  EFB3  F00C         	goto	u8371
 11855  001962  EFB5  F00C         	goto	u8370
 11856  001966                     u8371:
 11857  001966  EFB6  F00C         	goto	l8311
 11858  00196A                     u8370:
 11859  00196A  8E43               	bsf	___fladd@grs^0,7,c
 11860  00196C                     l8311:
 11861  00196C  3437               	rlcf	(___fladd@b+3)^0,w,c
 11862  00196E  3237               	rrcf	(___fladd@b+3)^0,f,c
 11863  001970  3236               	rrcf	(___fladd@b+2)^0,f,c
 11864  001972  3235               	rrcf	(___fladd@b+1)^0,f,c
 11865  001974  3234               	rrcf	___fladd@b^0,f,c
 11866  001976  2A42               	incf	___fladd@bexp^0,f,c
 11867  001978  EF4B  F00D         	goto	l8351
 11868  00197C                     l8315:
 11869  00197C  5038               	movf	___fladd@a^0,w,c
 11870  00197E  5C34               	subwf	___fladd@b^0,w,c
 11871  001980  5039               	movf	(___fladd@a+1)^0,w,c
 11872  001982  5835               	subwfb	(___fladd@b+1)^0,w,c
 11873  001984  503A               	movf	(___fladd@a+2)^0,w,c
 11874  001986  5836               	subwfb	(___fladd@b+2)^0,w,c
 11875  001988  5037               	movf	(___fladd@b+3)^0,w,c
 11876  00198A  0A80               	xorlw	128
 11877  00198C  6E3C               	movwf	??___fladd^0,c
 11878  00198E  503B               	movf	(___fladd@a+3)^0,w,c
 11879  001990  0A80               	xorlw	128
 11880  001992  583C               	subwfb	??___fladd^0,w,c
 11881  001994  B0D8               	btfsc	status,0,c
 11882  001996  EFCF  F00C         	goto	u8381
 11883  00199A  EFD1  F00C         	goto	u8380
 11884  00199E                     u8381:
 11885  00199E  EFFC  F00C         	goto	l8325
 11886  0019A2                     u8380:
 11887  0019A2  5034               	movf	___fladd@b^0,w,c
 11888  0019A4  5C38               	subwf	___fladd@a^0,w,c
 11889  0019A6  6E3C               	movwf	??___fladd^0,c
 11890  0019A8  5035               	movf	(___fladd@b+1)^0,w,c
 11891  0019AA  5839               	subwfb	(___fladd@a+1)^0,w,c
 11892  0019AC  6E3D               	movwf	(??___fladd+1)^0,c
 11893  0019AE  5036               	movf	(___fladd@b+2)^0,w,c
 11894  0019B0  583A               	subwfb	(___fladd@a+2)^0,w,c
 11895  0019B2  6E3E               	movwf	(??___fladd+2)^0,c
 11896  0019B4  5037               	movf	(___fladd@b+3)^0,w,c
 11897  0019B6  583B               	subwfb	(___fladd@a+3)^0,w,c
 11898  0019B8  6E3F               	movwf	(??___fladd+3)^0,c
 11899  0019BA  0EFF               	movlw	255
 11900  0019BC  243C               	addwf	??___fladd^0,w,c
 11901  0019BE  6E34               	movwf	___fladd@b^0,c
 11902  0019C0  0EFF               	movlw	255
 11903  0019C2  203D               	addwfc	(??___fladd+1)^0,w,c
 11904  0019C4  6E35               	movwf	(___fladd@b+1)^0,c
 11905  0019C6  0EFF               	movlw	255
 11906  0019C8  203E               	addwfc	(??___fladd+2)^0,w,c
 11907  0019CA  6E36               	movwf	(___fladd@b+2)^0,c
 11908  0019CC  0EFF               	movlw	255
 11909  0019CE  203F               	addwfc	(??___fladd+3)^0,w,c
 11910  0019D0  6E37               	movwf	(___fladd@b+3)^0,c
 11911  0019D2  0E80               	movlw	128
 11912  0019D4  1A40               	xorwf	___fladd@signs^0,f,c
 11913  0019D6  6C43               	negf	___fladd@grs^0,c
 11914  0019D8  5043               	movf	___fladd@grs^0,w,c
 11915  0019DA  A4D8               	btfss	status,2,c
 11916  0019DC  EFF2  F00C         	goto	u8391
 11917  0019E0  EFF4  F00C         	goto	u8390
 11918  0019E4                     u8391:
 11919  0019E4  EF04  F00D         	goto	l1506
 11920  0019E8                     u8390:
 11921  0019E8  0E01               	movlw	1
 11922  0019EA  2634               	addwf	___fladd@b^0,f,c
 11923  0019EC  0E00               	movlw	0
 11924  0019EE  2235               	addwfc	(___fladd@b+1)^0,f,c
 11925  0019F0  2236               	addwfc	(___fladd@b+2)^0,f,c
 11926  0019F2  2237               	addwfc	(___fladd@b+3)^0,f,c
 11927  0019F4  EF04  F00D         	goto	l1506
 11928  0019F8                     l8325:
 11929  0019F8  5038               	movf	___fladd@a^0,w,c
 11930  0019FA  5E34               	subwf	___fladd@b^0,f,c
 11931  0019FC  5039               	movf	(___fladd@a+1)^0,w,c
 11932  0019FE  5A35               	subwfb	(___fladd@b+1)^0,f,c
 11933  001A00  503A               	movf	(___fladd@a+2)^0,w,c
 11934  001A02  5A36               	subwfb	(___fladd@b+2)^0,f,c
 11935  001A04  503B               	movf	(___fladd@a+3)^0,w,c
 11936  001A06  5A37               	subwfb	(___fladd@b+3)^0,f,c
 11937  001A08                     l1506:
 11938  001A08  5034               	movf	___fladd@b^0,w,c
 11939  001A0A  1035               	iorwf	(___fladd@b+1)^0,w,c
 11940  001A0C  1036               	iorwf	(___fladd@b+2)^0,w,c
 11941  001A0E  1037               	iorwf	(___fladd@b+3)^0,w,c
 11942  001A10  A4D8               	btfss	status,2,c
 11943  001A12  EF0D  F00D         	goto	u8401
 11944  001A16  EF0F  F00D         	goto	u8400
 11945  001A1A                     u8401:
 11946  001A1A  EF44  F00D         	goto	l8349
 11947  001A1E                     u8400:
 11948  001A1E  5043               	movf	___fladd@grs^0,w,c
 11949  001A20  A4D8               	btfss	status,2,c
 11950  001A22  EF15  F00D         	goto	u8411
 11951  001A26  EF17  F00D         	goto	u8410
 11952  001A2A                     u8411:
 11953  001A2A  EF44  F00D         	goto	l8349
 11954  001A2E                     u8410:
 11955  001A2E  0E00               	movlw	0
 11956  001A30  6E34               	movwf	?___fladd^0,c
 11957  001A32  0E00               	movlw	0
 11958  001A34  6E35               	movwf	(?___fladd+1)^0,c
 11959  001A36  0E00               	movlw	0
 11960  001A38  6E36               	movwf	(?___fladd+2)^0,c
 11961  001A3A  0E00               	movlw	0
 11962  001A3C  6E37               	movwf	(?___fladd+3)^0,c
 11963  001A3E  EFDF  F00D         	goto	l1498
 11964  001A42                     l8333:
 11965  001A42  90D8               	bcf	status,0,c
 11966  001A44  3634               	rlcf	___fladd@b^0,f,c
 11967  001A46  3635               	rlcf	(___fladd@b+1)^0,f,c
 11968  001A48  3636               	rlcf	(___fladd@b+2)^0,f,c
 11969  001A4A  3637               	rlcf	(___fladd@b+3)^0,f,c
 11970  001A4C  AE43               	btfss	___fladd@grs^0,7,c
 11971  001A4E  EF2B  F00D         	goto	u8421
 11972  001A52  EF2D  F00D         	goto	u8420
 11973  001A56                     u8421:
 11974  001A56  EF2E  F00D         	goto	l8339
 11975  001A5A                     u8420:
 11976  001A5A  8034               	bsf	___fladd@b^0,0,c
 11977  001A5C                     l8339:
 11978  001A5C  A043               	btfss	___fladd@grs^0,0,c
 11979  001A5E  EF33  F00D         	goto	u8431
 11980  001A62  EF35  F00D         	goto	u8430
 11981  001A66                     u8431:
 11982  001A66  EF39  F00D         	goto	l8343
 11983  001A6A                     u8430:
 11984  001A6A  80D8               	bsf	status,0,c
 11985  001A6C  3643               	rlcf	___fladd@grs^0,f,c
 11986  001A6E  EF3B  F00D         	goto	l8345
 11987  001A72                     l8343:
 11988  001A72  90D8               	bcf	status,0,c
 11989  001A74  3643               	rlcf	___fladd@grs^0,f,c
 11990  001A76                     l8345:
 11991  001A76  5042               	movf	___fladd@bexp^0,w,c
 11992  001A78  B4D8               	btfsc	status,2,c
 11993  001A7A  EF41  F00D         	goto	u8441
 11994  001A7E  EF43  F00D         	goto	u8440
 11995  001A82                     u8441:
 11996  001A82  EF44  F00D         	goto	l8349
 11997  001A86                     u8440:
 11998  001A86  0642               	decf	___fladd@bexp^0,f,c
 11999  001A88                     l8349:
 12000  001A88  AE36               	btfss	(___fladd@b+2)^0,7,c
 12001  001A8A  EF49  F00D         	goto	u8451
 12002  001A8E  EF4B  F00D         	goto	u8450
 12003  001A92                     u8451:
 12004  001A92  EF21  F00D         	goto	l8333
 12005  001A96                     u8450:
 12006  001A96                     l8351:
 12007  001A96  0E00               	movlw	0
 12008  001A98  6E41               	movwf	___fladd@aexp^0,c
 12009  001A9A  AE43               	btfss	___fladd@grs^0,7,c
 12010  001A9C  EF52  F00D         	goto	u8461
 12011  001AA0  EF54  F00D         	goto	u8460
 12012  001AA4                     u8461:
 12013  001AA4  EF6C  F00D         	goto	l1515
 12014  001AA8                     u8460:
 12015  001AA8  C043  F03C         	movff	___fladd@grs,??___fladd
 12016  001AAC  0E7F               	movlw	127
 12017  001AAE  163C               	andwf	??___fladd^0,f,c
 12018  001AB0  B4D8               	btfsc	status,2,c
 12019  001AB2  EF5D  F00D         	goto	u8471
 12020  001AB6  EF5F  F00D         	goto	u8470
 12021  001ABA                     u8471:
 12022  001ABA  EF63  F00D         	goto	l1516
 12023  001ABE                     u8470:
 12024  001ABE                     l8357:
 12025  001ABE  0E01               	movlw	1
 12026  001AC0  6E41               	movwf	___fladd@aexp^0,c
 12027  001AC2  EF6C  F00D         	goto	l1515
 12028  001AC6                     l1516:
 12029  001AC6  A034               	btfss	___fladd@b^0,0,c
 12030  001AC8  EF68  F00D         	goto	u8481
 12031  001ACC  EF6A  F00D         	goto	u8480
 12032  001AD0                     u8481:
 12033  001AD0  EF6C  F00D         	goto	l1515
 12034  001AD4                     u8480:
 12035  001AD4  EF5F  F00D         	goto	l8357
 12036  001AD8                     l1515:
 12037  001AD8  5041               	movf	___fladd@aexp^0,w,c
 12038  001ADA  B4D8               	btfsc	status,2,c
 12039  001ADC  EF72  F00D         	goto	u8491
 12040  001AE0  EF74  F00D         	goto	u8490
 12041  001AE4                     u8491:
 12042  001AE4  EF9F  F00D         	goto	l8369
 12043  001AE8                     u8490:
 12044  001AE8  0E01               	movlw	1
 12045  001AEA  2634               	addwf	___fladd@b^0,f,c
 12046  001AEC  0E00               	movlw	0
 12047  001AEE  2235               	addwfc	(___fladd@b+1)^0,f,c
 12048  001AF0  2236               	addwfc	(___fladd@b+2)^0,f,c
 12049  001AF2  2237               	addwfc	(___fladd@b+3)^0,f,c
 12050  001AF4  A037               	btfss	(___fladd@b+3)^0,0,c
 12051  001AF6  EF7F  F00D         	goto	u8501
 12052  001AFA  EF81  F00D         	goto	u8500
 12053  001AFE                     u8501:
 12054  001AFE  EF9F  F00D         	goto	l8369
 12055  001B02                     u8500:
 12056  001B02  C034  F03C         	movff	___fladd@b,??___fladd
 12057  001B06  C035  F03D         	movff	___fladd@b+1,??___fladd+1
 12058  001B0A  C036  F03E         	movff	___fladd@b+2,??___fladd+2
 12059  001B0E  C037  F03F         	movff	___fladd@b+3,??___fladd+3
 12060  001B12  343F               	rlcf	(??___fladd+3)^0,w,c
 12061  001B14  323F               	rrcf	(??___fladd+3)^0,f,c
 12062  001B16  323E               	rrcf	(??___fladd+2)^0,f,c
 12063  001B18  323D               	rrcf	(??___fladd+1)^0,f,c
 12064  001B1A  323C               	rrcf	??___fladd^0,f,c
 12065  001B1C  C03C  F034         	movff	??___fladd,___fladd@b
 12066  001B20  C03D  F035         	movff	??___fladd+1,___fladd@b+1
 12067  001B24  C03E  F036         	movff	??___fladd+2,___fladd@b+2
 12068  001B28  C03F  F037         	movff	??___fladd+3,___fladd@b+3
 12069  001B2C  2842               	incf	___fladd@bexp^0,w,c
 12070  001B2E  B4D8               	btfsc	status,2,c
 12071  001B30  EF9C  F00D         	goto	u8511
 12072  001B34  EF9E  F00D         	goto	u8510
 12073  001B38                     u8511:
 12074  001B38  EF9F  F00D         	goto	l8369
 12075  001B3C                     u8510:
 12076  001B3C  2A42               	incf	___fladd@bexp^0,f,c
 12077  001B3E                     l8369:
 12078  001B3E  2842               	incf	___fladd@bexp^0,w,c
 12079  001B40  B4D8               	btfsc	status,2,c
 12080  001B42  EFA5  F00D         	goto	u8521
 12081  001B46  EFA7  F00D         	goto	u8520
 12082  001B4A                     u8521:
 12083  001B4A  EFAF  F00D         	goto	l8373
 12084  001B4E                     u8520:
 12085  001B4E  5042               	movf	___fladd@bexp^0,w,c
 12086  001B50  A4D8               	btfss	status,2,c
 12087  001B52  EFAD  F00D         	goto	u8531
 12088  001B56  EFAF  F00D         	goto	u8530
 12089  001B5A                     u8531:
 12090  001B5A  EFC1  F00D         	goto	l8377
 12091  001B5E                     u8530:
 12092  001B5E                     l8373:
 12093  001B5E  0E00               	movlw	0
 12094  001B60  6E34               	movwf	___fladd@b^0,c
 12095  001B62  0E00               	movlw	0
 12096  001B64  6E35               	movwf	(___fladd@b+1)^0,c
 12097  001B66  0E00               	movlw	0
 12098  001B68  6E36               	movwf	(___fladd@b+2)^0,c
 12099  001B6A  0E00               	movlw	0
 12100  001B6C  6E37               	movwf	(___fladd@b+3)^0,c
 12101  001B6E  5042               	movf	___fladd@bexp^0,w,c
 12102  001B70  A4D8               	btfss	status,2,c
 12103  001B72  EFBD  F00D         	goto	u8541
 12104  001B76  EFBF  F00D         	goto	u8540
 12105  001B7A                     u8541:
 12106  001B7A  EFC1  F00D         	goto	l8377
 12107  001B7E                     u8540:
 12108  001B7E  0E00               	movlw	0
 12109  001B80  6E40               	movwf	___fladd@signs^0,c
 12110  001B82                     l8377:
 12111  001B82  A042               	btfss	___fladd@bexp^0,0,c
 12112  001B84  EFC6  F00D         	goto	u8551
 12113  001B88  EFC8  F00D         	goto	u8550
 12114  001B8C                     u8551:
 12115  001B8C  EFCB  F00D         	goto	l8381
 12116  001B90                     u8550:
 12117  001B90  8E36               	bsf	(___fladd@b+2)^0,7,c
 12118  001B92  EFCC  F00D         	goto	l8383
 12119  001B96                     l8381:
 12120  001B96  9E36               	bcf	(___fladd@b+2)^0,7,c
 12121  001B98                     l8383:
 12122  001B98  90D8               	bcf	status,0,c
 12123  001B9A  3042               	rrcf	___fladd@bexp^0,w,c
 12124  001B9C  6E37               	movwf	(___fladd@b+3)^0,c
 12125  001B9E  AE40               	btfss	___fladd@signs^0,7,c
 12126  001BA0  EFD4  F00D         	goto	u8561
 12127  001BA4  EFD6  F00D         	goto	u8560
 12128  001BA8                     u8561:
 12129  001BA8  EFD7  F00D         	goto	l8389
 12130  001BAC                     u8560:
 12131  001BAC  8E37               	bsf	(___fladd@b+3)^0,7,c
 12132  001BAE                     l8389:
 12133  001BAE  C034  F034         	movff	___fladd@b,?___fladd
 12134  001BB2  C035  F035         	movff	___fladd@b+1,?___fladd+1
 12135  001BB6  C036  F036         	movff	___fladd@b+2,?___fladd+2
 12136  001BBA  C037  F037         	movff	___fladd@b+3,?___fladd+3
 12137  001BBE                     l1498:
 12138  001BBE  0012               	return		;funcret
 12139  001BC0                     __end_of___fladd:
 12140                           	opt callstack 0
 12141                           
 12142 ;; *************** function ___flneg *****************
 12143 ;; Defined at:
 12144 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;  f1              4    5[COMRAM] unsigned char 
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;		None
 12149 ;; Return value:  Size  Location     Type
 12150 ;;                  4    5[COMRAM] unsigned char 
 12151 ;; Registers used:
 12152 ;;		wreg, status,2, status,0
 12153 ;; Tracked objects:
 12154 ;;		On entry : 0/0
 12155 ;;		On exit  : 0/0
 12156 ;;		Unchanged: 0/0
 12157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12158 ;;      Params:         4       0       0       0       0       0       0       0       0
 12159 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12160 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12161 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12162 ;;Total ram usage:        4 bytes
 12163 ;; Hardware stack levels used:    1
 12164 ;; Hardware stack levels required when called:    2
 12165 ;; This function calls:
 12166 ;;		Nothing
 12167 ;; This function is called by:
 12168 ;;		_efgtoa
 12169 ;;		_roundf
 12170 ;; This function uses a non-reentrant model
 12171 ;;
 12172                           
 12173                           	psect	text45
 12174  0055E8                     __ptext45:
 12175                           	opt callstack 0
 12176  0055E8                     ___flneg:
 12177                           	opt callstack 23
 12178  0055E8  5006               	movf	___flneg@f1^0,w,c
 12179  0055EA  1007               	iorwf	(___flneg@f1+1)^0,w,c
 12180  0055EC  1008               	iorwf	(___flneg@f1+2)^0,w,c
 12181  0055EE  1009               	iorwf	(___flneg@f1+3)^0,w,c
 12182  0055F0  B4D8               	btfsc	status,2,c
 12183  0055F2  EFFD  F02A         	goto	u9611
 12184  0055F6  EFFF  F02A         	goto	u9610
 12185  0055FA                     u9611:
 12186  0055FA  EF07  F02B         	goto	l8973
 12187  0055FE                     u9610:
 12188  0055FE  0E00               	movlw	0
 12189  005600  1A06               	xorwf	___flneg@f1^0,f,c
 12190  005602  0E00               	movlw	0
 12191  005604  1A07               	xorwf	(___flneg@f1+1)^0,f,c
 12192  005606  0E00               	movlw	0
 12193  005608  1A08               	xorwf	(___flneg@f1+2)^0,f,c
 12194  00560A  0E80               	movlw	128
 12195  00560C  1A09               	xorwf	(___flneg@f1+3)^0,f,c
 12196  00560E                     l8973:
 12197  00560E  C006  F006         	movff	___flneg@f1,?___flneg
 12198  005612  C007  F007         	movff	___flneg@f1+1,?___flneg+1
 12199  005616  C008  F008         	movff	___flneg@f1+2,?___flneg+2
 12200  00561A  C009  F009         	movff	___flneg@f1+3,?___flneg+3
 12201  00561E  0012               	return		;funcret
 12202  005620                     __end_of___flneg:
 12203                           	opt callstack 0
 12204                           
 12205 ;; *************** function ___flmul *****************
 12206 ;; Defined at:
 12207 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 12208 ;; Parameters:    Size  Location     Type
 12209 ;;  b               4   26[COMRAM] unsigned char 
 12210 ;;  a               4   30[COMRAM] unsigned char 
 12211 ;; Auto vars:     Size  Location     Type
 12212 ;;  prod            4   45[COMRAM] struct .
 12213 ;;  grs             4   40[COMRAM] unsigned long 
 12214 ;;  temp            2   49[COMRAM] struct .
 12215 ;;  bexp            1   44[COMRAM] unsigned char 
 12216 ;;  aexp            1   39[COMRAM] unsigned char 
 12217 ;;  sign            1   38[COMRAM] unsigned char 
 12218 ;; Return value:  Size  Location     Type
 12219 ;;                  4   26[COMRAM] unsigned char 
 12220 ;; Registers used:
 12221 ;;		wreg, status,2, status,0, prodl, prodh
 12222 ;; Tracked objects:
 12223 ;;		On entry : 0/0
 12224 ;;		On exit  : 0/0
 12225 ;;		Unchanged: 0/0
 12226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12227 ;;      Params:         8       0       0       0       0       0       0       0       0
 12228 ;;      Locals:        13       0       0       0       0       0       0       0       0
 12229 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12230 ;;      Totals:        25       0       0       0       0       0       0       0       0
 12231 ;;Total ram usage:       25 bytes
 12232 ;; Hardware stack levels used:    1
 12233 ;; Hardware stack levels required when called:    2
 12234 ;; This function calls:
 12235 ;;		Nothing
 12236 ;; This function is called by:
 12237 ;;		_pwmDuty
 12238 ;;		_PID
 12239 ;;		_efgtoa
 12240 ;;		_roundf
 12241 ;; This function uses a non-reentrant model
 12242 ;;
 12243                           
 12244                           	psect	text46
 12245  001FEE                     __ptext46:
 12246                           	opt callstack 0
 12247  001FEE                     ___flmul:
 12248                           	opt callstack 23
 12249  001FEE  501E               	movf	(___flmul@b+3)^0,w,c
 12250  001FF0  0B80               	andlw	128
 12251  001FF2  6E27               	movwf	___flmul@sign^0,c
 12252  001FF4  501E               	movf	(___flmul@b+3)^0,w,c
 12253  001FF6  241E               	addwf	(___flmul@b+3)^0,w,c
 12254  001FF8  6E2D               	movwf	___flmul@bexp^0,c
 12255  001FFA  AE1D               	btfss	(___flmul@b+2)^0,7,c
 12256  001FFC  EF02  F010         	goto	u9221
 12257  002000  EF04  F010         	goto	u9220
 12258  002004                     u9221:
 12259  002004  EF05  F010         	goto	l8721
 12260  002008                     u9220:
 12261  002008  802D               	bsf	___flmul@bexp^0,0,c
 12262  00200A                     l8721:
 12263  00200A  502D               	movf	___flmul@bexp^0,w,c
 12264  00200C  B4D8               	btfsc	status,2,c
 12265  00200E  EF0B  F010         	goto	u9231
 12266  002012  EF0D  F010         	goto	u9230
 12267  002016                     u9231:
 12268  002016  EF20  F010         	goto	l8729
 12269  00201A                     u9230:
 12270  00201A  282D               	incf	___flmul@bexp^0,w,c
 12271  00201C  A4D8               	btfss	status,2,c
 12272  00201E  EF13  F010         	goto	u9241
 12273  002022  EF15  F010         	goto	u9240
 12274  002026                     u9241:
 12275  002026  EF1D  F010         	goto	l8727
 12276  00202A                     u9240:
 12277  00202A  0E00               	movlw	0
 12278  00202C  6E1B               	movwf	___flmul@b^0,c
 12279  00202E  0E00               	movlw	0
 12280  002030  6E1C               	movwf	(___flmul@b+1)^0,c
 12281  002032  0E00               	movlw	0
 12282  002034  6E1D               	movwf	(___flmul@b+2)^0,c
 12283  002036  0E00               	movlw	0
 12284  002038  6E1E               	movwf	(___flmul@b+3)^0,c
 12285  00203A                     l8727:
 12286  00203A  8E1D               	bsf	(___flmul@b+2)^0,7,c
 12287  00203C  EF28  F010         	goto	l8731
 12288  002040                     l8729:
 12289  002040  0E00               	movlw	0
 12290  002042  6E1B               	movwf	___flmul@b^0,c
 12291  002044  0E00               	movlw	0
 12292  002046  6E1C               	movwf	(___flmul@b+1)^0,c
 12293  002048  0E00               	movlw	0
 12294  00204A  6E1D               	movwf	(___flmul@b+2)^0,c
 12295  00204C  0E00               	movlw	0
 12296  00204E  6E1E               	movwf	(___flmul@b+3)^0,c
 12297  002050                     l8731:
 12298  002050  5022               	movf	(___flmul@a+3)^0,w,c
 12299  002052  0B80               	andlw	128
 12300  002054  1A27               	xorwf	___flmul@sign^0,f,c
 12301  002056  5022               	movf	(___flmul@a+3)^0,w,c
 12302  002058  2422               	addwf	(___flmul@a+3)^0,w,c
 12303  00205A  6E28               	movwf	___flmul@aexp^0,c
 12304  00205C  AE21               	btfss	(___flmul@a+2)^0,7,c
 12305  00205E  EF33  F010         	goto	u9251
 12306  002062  EF35  F010         	goto	u9250
 12307  002066                     u9251:
 12308  002066  EF36  F010         	goto	l8739
 12309  00206A                     u9250:
 12310  00206A  8028               	bsf	___flmul@aexp^0,0,c
 12311  00206C                     l8739:
 12312  00206C  5028               	movf	___flmul@aexp^0,w,c
 12313  00206E  B4D8               	btfsc	status,2,c
 12314  002070  EF3C  F010         	goto	u9261
 12315  002074  EF3E  F010         	goto	u9260
 12316  002078                     u9261:
 12317  002078  EF51  F010         	goto	l8747
 12318  00207C                     u9260:
 12319  00207C  2828               	incf	___flmul@aexp^0,w,c
 12320  00207E  A4D8               	btfss	status,2,c
 12321  002080  EF44  F010         	goto	u9271
 12322  002084  EF46  F010         	goto	u9270
 12323  002088                     u9271:
 12324  002088  EF4E  F010         	goto	l8745
 12325  00208C                     u9270:
 12326  00208C  0E00               	movlw	0
 12327  00208E  6E1F               	movwf	___flmul@a^0,c
 12328  002090  0E00               	movlw	0
 12329  002092  6E20               	movwf	(___flmul@a+1)^0,c
 12330  002094  0E00               	movlw	0
 12331  002096  6E21               	movwf	(___flmul@a+2)^0,c
 12332  002098  0E00               	movlw	0
 12333  00209A  6E22               	movwf	(___flmul@a+3)^0,c
 12334  00209C                     l8745:
 12335  00209C  8E21               	bsf	(___flmul@a+2)^0,7,c
 12336  00209E  EF59  F010         	goto	l1575
 12337  0020A2                     l8747:
 12338  0020A2  0E00               	movlw	0
 12339  0020A4  6E1F               	movwf	___flmul@a^0,c
 12340  0020A6  0E00               	movlw	0
 12341  0020A8  6E20               	movwf	(___flmul@a+1)^0,c
 12342  0020AA  0E00               	movlw	0
 12343  0020AC  6E21               	movwf	(___flmul@a+2)^0,c
 12344  0020AE  0E00               	movlw	0
 12345  0020B0  6E22               	movwf	(___flmul@a+3)^0,c
 12346  0020B2                     l1575:
 12347  0020B2  5028               	movf	___flmul@aexp^0,w,c
 12348  0020B4  B4D8               	btfsc	status,2,c
 12349  0020B6  EF5F  F010         	goto	u9281
 12350  0020BA  EF61  F010         	goto	u9280
 12351  0020BE                     u9281:
 12352  0020BE  EF69  F010         	goto	l8751
 12353  0020C2                     u9280:
 12354  0020C2  502D               	movf	___flmul@bexp^0,w,c
 12355  0020C4  A4D8               	btfss	status,2,c
 12356  0020C6  EF67  F010         	goto	u9291
 12357  0020CA  EF69  F010         	goto	u9290
 12358  0020CE                     u9291:
 12359  0020CE  EF73  F010         	goto	l8755
 12360  0020D2                     u9290:
 12361  0020D2                     l8751:
 12362  0020D2  0E00               	movlw	0
 12363  0020D4  6E1B               	movwf	?___flmul^0,c
 12364  0020D6  0E00               	movlw	0
 12365  0020D8  6E1C               	movwf	(?___flmul+1)^0,c
 12366  0020DA  0E00               	movlw	0
 12367  0020DC  6E1D               	movwf	(?___flmul+2)^0,c
 12368  0020DE  0E00               	movlw	0
 12369  0020E0  6E1E               	movwf	(?___flmul+3)^0,c
 12370  0020E2  EF0B  F012         	goto	l1579
 12371  0020E6                     l8755:
 12372  0020E6  5021               	movf	(___flmul@a+2)^0,w,c
 12373  0020E8  021B               	mulwf	___flmul@b^0,c
 12374  0020EA  CFF3 F032          	movff	prodl,___flmul@temp
 12375  0020EE  CFF4 F033          	movff	prodh,___flmul@temp+1
 12376  0020F2  5032               	movf	___flmul@temp^0,w,c
 12377  0020F4  6E29               	movwf	___flmul@grs^0,c
 12378  0020F6  6A2A               	clrf	(___flmul@grs+1)^0,c
 12379  0020F8  6A2B               	clrf	(___flmul@grs+2)^0,c
 12380  0020FA  6A2C               	clrf	(___flmul@grs+3)^0,c
 12381  0020FC  5033               	movf	(___flmul@temp+1)^0,w,c
 12382  0020FE  6E2E               	movwf	___flmul@prod^0,c
 12383  002100  6A2F               	clrf	(___flmul@prod+1)^0,c
 12384  002102  6A30               	clrf	(___flmul@prod+2)^0,c
 12385  002104  6A31               	clrf	(___flmul@prod+3)^0,c
 12386  002106  5020               	movf	(___flmul@a+1)^0,w,c
 12387  002108  021C               	mulwf	(___flmul@b+1)^0,c
 12388  00210A  CFF3 F032          	movff	prodl,___flmul@temp
 12389  00210E  CFF4 F033          	movff	prodh,___flmul@temp+1
 12390  002112  5032               	movf	___flmul@temp^0,w,c
 12391  002114  2629               	addwf	___flmul@grs^0,f,c
 12392  002116  0E00               	movlw	0
 12393  002118  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12394  00211A  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12395  00211C  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12396  00211E  5033               	movf	(___flmul@temp+1)^0,w,c
 12397  002120  262E               	addwf	___flmul@prod^0,f,c
 12398  002122  0E00               	movlw	0
 12399  002124  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12400  002126  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12401  002128  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12402  00212A  501F               	movf	___flmul@a^0,w,c
 12403  00212C  021D               	mulwf	(___flmul@b+2)^0,c
 12404  00212E  CFF3 F032          	movff	prodl,___flmul@temp
 12405  002132  CFF4 F033          	movff	prodh,___flmul@temp+1
 12406  002136  5032               	movf	___flmul@temp^0,w,c
 12407  002138  2629               	addwf	___flmul@grs^0,f,c
 12408  00213A  0E00               	movlw	0
 12409  00213C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12410  00213E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12411  002140  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12412  002142  5033               	movf	(___flmul@temp+1)^0,w,c
 12413  002144  262E               	addwf	___flmul@prod^0,f,c
 12414  002146  0E00               	movlw	0
 12415  002148  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12416  00214A  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12417  00214C  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12418  00214E  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12419  002152  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12420  002156  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12421  00215A  6A29               	clrf	___flmul@grs^0,c
 12422  00215C  501F               	movf	___flmul@a^0,w,c
 12423  00215E  021C               	mulwf	(___flmul@b+1)^0,c
 12424  002160  CFF3 F032          	movff	prodl,___flmul@temp
 12425  002164  CFF4 F033          	movff	prodh,___flmul@temp+1
 12426  002168  5032               	movf	___flmul@temp^0,w,c
 12427  00216A  2629               	addwf	___flmul@grs^0,f,c
 12428  00216C  5033               	movf	(___flmul@temp+1)^0,w,c
 12429  00216E  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12430  002170  0E00               	movlw	0
 12431  002172  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12432  002174  0E00               	movlw	0
 12433  002176  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12434  002178  5020               	movf	(___flmul@a+1)^0,w,c
 12435  00217A  021B               	mulwf	___flmul@b^0,c
 12436  00217C  CFF3 F032          	movff	prodl,___flmul@temp
 12437  002180  CFF4 F033          	movff	prodh,___flmul@temp+1
 12438  002184  5032               	movf	___flmul@temp^0,w,c
 12439  002186  2629               	addwf	___flmul@grs^0,f,c
 12440  002188  5033               	movf	(___flmul@temp+1)^0,w,c
 12441  00218A  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12442  00218C  0E00               	movlw	0
 12443  00218E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12444  002190  0E00               	movlw	0
 12445  002192  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12446  002194  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12447  002198  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12448  00219C  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12449  0021A0  6A29               	clrf	___flmul@grs^0,c
 12450  0021A2  501F               	movf	___flmul@a^0,w,c
 12451  0021A4  021B               	mulwf	___flmul@b^0,c
 12452  0021A6  CFF3 F032          	movff	prodl,___flmul@temp
 12453  0021AA  CFF4 F033          	movff	prodh,___flmul@temp+1
 12454  0021AE  5032               	movf	___flmul@temp^0,w,c
 12455  0021B0  2629               	addwf	___flmul@grs^0,f,c
 12456  0021B2  5033               	movf	(___flmul@temp+1)^0,w,c
 12457  0021B4  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12458  0021B6  0E00               	movlw	0
 12459  0021B8  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12460  0021BA  0E00               	movlw	0
 12461  0021BC  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12462  0021BE  5021               	movf	(___flmul@a+2)^0,w,c
 12463  0021C0  021C               	mulwf	(___flmul@b+1)^0,c
 12464  0021C2  CFF3 F032          	movff	prodl,___flmul@temp
 12465  0021C6  CFF4 F033          	movff	prodh,___flmul@temp+1
 12466  0021CA  5032               	movf	___flmul@temp^0,w,c
 12467  0021CC  262E               	addwf	___flmul@prod^0,f,c
 12468  0021CE  5033               	movf	(___flmul@temp+1)^0,w,c
 12469  0021D0  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12470  0021D2  0E00               	movlw	0
 12471  0021D4  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12472  0021D6  0E00               	movlw	0
 12473  0021D8  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12474  0021DA  5020               	movf	(___flmul@a+1)^0,w,c
 12475  0021DC  021D               	mulwf	(___flmul@b+2)^0,c
 12476  0021DE  CFF3 F032          	movff	prodl,___flmul@temp
 12477  0021E2  CFF4 F033          	movff	prodh,___flmul@temp+1
 12478  0021E6  5032               	movf	___flmul@temp^0,w,c
 12479  0021E8  262E               	addwf	___flmul@prod^0,f,c
 12480  0021EA  5033               	movf	(___flmul@temp+1)^0,w,c
 12481  0021EC  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12482  0021EE  0E00               	movlw	0
 12483  0021F0  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12484  0021F2  0E00               	movlw	0
 12485  0021F4  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12486  0021F6  5021               	movf	(___flmul@a+2)^0,w,c
 12487  0021F8  021D               	mulwf	(___flmul@b+2)^0,c
 12488  0021FA  CFF3 F032          	movff	prodl,___flmul@temp
 12489  0021FE  CFF4 F033          	movff	prodh,___flmul@temp+1
 12490  002202  5032               	movf	___flmul@temp^0,w,c
 12491  002204  6E23               	movwf	??___flmul^0,c
 12492  002206  5033               	movf	(___flmul@temp+1)^0,w,c
 12493  002208  6E24               	movwf	(??___flmul+1)^0,c
 12494  00220A  6A25               	clrf	(??___flmul+2)^0,c
 12495  00220C  6A26               	clrf	(??___flmul+3)^0,c
 12496  00220E  C025  F026         	movff	??___flmul+2,??___flmul+3
 12497  002212  C024  F025         	movff	??___flmul+1,??___flmul+2
 12498  002216  C023  F024         	movff	??___flmul,??___flmul+1
 12499  00221A  6A23               	clrf	??___flmul^0,c
 12500  00221C  5023               	movf	??___flmul^0,w,c
 12501  00221E  262E               	addwf	___flmul@prod^0,f,c
 12502  002220  5024               	movf	(??___flmul+1)^0,w,c
 12503  002222  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12504  002224  5025               	movf	(??___flmul+2)^0,w,c
 12505  002226  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12506  002228  5026               	movf	(??___flmul+3)^0,w,c
 12507  00222A  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12508  00222C  C029  F023         	movff	___flmul@grs,??___flmul
 12509  002230  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
 12510  002234  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
 12511  002238  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
 12512  00223C  0E19               	movlw	25
 12513  00223E  EF26  F011         	goto	u9300
 12514  002242                     u9305:
 12515  002242  90D8               	bcf	status,0,c
 12516  002244  3226               	rrcf	(??___flmul+3)^0,f,c
 12517  002246  3225               	rrcf	(??___flmul+2)^0,f,c
 12518  002248  3224               	rrcf	(??___flmul+1)^0,f,c
 12519  00224A  3223               	rrcf	??___flmul^0,f,c
 12520  00224C                     u9300:
 12521  00224C  2EE8               	decfsz	wreg,f,c
 12522  00224E  EF21  F011         	goto	u9305
 12523  002252  5023               	movf	??___flmul^0,w,c
 12524  002254  262E               	addwf	___flmul@prod^0,f,c
 12525  002256  5024               	movf	(??___flmul+1)^0,w,c
 12526  002258  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12527  00225A  5025               	movf	(??___flmul+2)^0,w,c
 12528  00225C  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12529  00225E  5026               	movf	(??___flmul+3)^0,w,c
 12530  002260  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12531  002262  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12532  002266  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12533  00226A  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12534  00226E  6A29               	clrf	___flmul@grs^0,c
 12535  002270  5028               	movf	___flmul@aexp^0,w,c
 12536  002272  C02D  F023         	movff	___flmul@bexp,??___flmul
 12537  002276  6A24               	clrf	(??___flmul+1)^0,c
 12538  002278  2623               	addwf	??___flmul^0,f,c
 12539  00227A  0E00               	movlw	0
 12540  00227C  2224               	addwfc	(??___flmul+1)^0,f,c
 12541  00227E  0E82               	movlw	130
 12542  002280  2423               	addwf	??___flmul^0,w,c
 12543  002282  6E32               	movwf	___flmul@temp^0,c
 12544  002284  0EFF               	movlw	255
 12545  002286  2024               	addwfc	(??___flmul+1)^0,w,c
 12546  002288  6E33               	movwf	(___flmul@temp+1)^0,c
 12547  00228A  EF5C  F011         	goto	l8803
 12548  00228E                     l8797:
 12549  00228E  90D8               	bcf	status,0,c
 12550  002290  362E               	rlcf	___flmul@prod^0,f,c
 12551  002292  362F               	rlcf	(___flmul@prod+1)^0,f,c
 12552  002294  3630               	rlcf	(___flmul@prod+2)^0,f,c
 12553  002296  3631               	rlcf	(___flmul@prod+3)^0,f,c
 12554  002298  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 12555  00229A  EF51  F011         	goto	u9311
 12556  00229E  EF53  F011         	goto	u9310
 12557  0022A2                     u9311:
 12558  0022A2  EF54  F011         	goto	l1582
 12559  0022A6                     u9310:
 12560  0022A6  802E               	bsf	___flmul@prod^0,0,c
 12561  0022A8                     l1582:
 12562  0022A8  90D8               	bcf	status,0,c
 12563  0022AA  3629               	rlcf	___flmul@grs^0,f,c
 12564  0022AC  362A               	rlcf	(___flmul@grs+1)^0,f,c
 12565  0022AE  362B               	rlcf	(___flmul@grs+2)^0,f,c
 12566  0022B0  362C               	rlcf	(___flmul@grs+3)^0,f,c
 12567  0022B2  0632               	decf	___flmul@temp^0,f,c
 12568  0022B4  A0D8               	btfss	status,0,c
 12569  0022B6  0633               	decf	(___flmul@temp+1)^0,f,c
 12570  0022B8                     l8803:
 12571  0022B8  AE30               	btfss	(___flmul@prod+2)^0,7,c
 12572  0022BA  EF61  F011         	goto	u9321
 12573  0022BE  EF63  F011         	goto	u9320
 12574  0022C2                     u9321:
 12575  0022C2  EF47  F011         	goto	l8797
 12576  0022C6                     u9320:
 12577  0022C6  0E00               	movlw	0
 12578  0022C8  6E28               	movwf	___flmul@aexp^0,c
 12579  0022CA  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 12580  0022CC  EF6A  F011         	goto	u9331
 12581  0022D0  EF6C  F011         	goto	u9330
 12582  0022D4                     u9331:
 12583  0022D4  EF90  F011         	goto	l1584
 12584  0022D8                     u9330:
 12585  0022D8  0EFF               	movlw	255
 12586  0022DA  1429               	andwf	___flmul@grs^0,w,c
 12587  0022DC  6E23               	movwf	??___flmul^0,c
 12588  0022DE  0EFF               	movlw	255
 12589  0022E0  142A               	andwf	(___flmul@grs+1)^0,w,c
 12590  0022E2  6E24               	movwf	(??___flmul+1)^0,c
 12591  0022E4  0EFF               	movlw	255
 12592  0022E6  142B               	andwf	(___flmul@grs+2)^0,w,c
 12593  0022E8  6E25               	movwf	(??___flmul+2)^0,c
 12594  0022EA  0E7F               	movlw	127
 12595  0022EC  142C               	andwf	(___flmul@grs+3)^0,w,c
 12596  0022EE  6E26               	movwf	(??___flmul+3)^0,c
 12597  0022F0  5023               	movf	??___flmul^0,w,c
 12598  0022F2  1024               	iorwf	(??___flmul+1)^0,w,c
 12599  0022F4  1025               	iorwf	(??___flmul+2)^0,w,c
 12600  0022F6  1026               	iorwf	(??___flmul+3)^0,w,c
 12601  0022F8  B4D8               	btfsc	status,2,c
 12602  0022FA  EF81  F011         	goto	u9341
 12603  0022FE  EF83  F011         	goto	u9340
 12604  002302                     u9341:
 12605  002302  EF87  F011         	goto	l1585
 12606  002306                     u9340:
 12607  002306                     l8811:
 12608  002306  0E01               	movlw	1
 12609  002308  6E28               	movwf	___flmul@aexp^0,c
 12610  00230A  EF90  F011         	goto	l1584
 12611  00230E                     l1585:
 12612  00230E  A02E               	btfss	___flmul@prod^0,0,c
 12613  002310  EF8C  F011         	goto	u9351
 12614  002314  EF8E  F011         	goto	u9350
 12615  002318                     u9351:
 12616  002318  EF90  F011         	goto	l1584
 12617  00231C                     u9350:
 12618  00231C  EF83  F011         	goto	l8811
 12619  002320                     l1584:
 12620  002320  5028               	movf	___flmul@aexp^0,w,c
 12621  002322  B4D8               	btfsc	status,2,c
 12622  002324  EF96  F011         	goto	u9361
 12623  002328  EF98  F011         	goto	u9360
 12624  00232C                     u9361:
 12625  00232C  EFBC  F011         	goto	l8823
 12626  002330                     u9360:
 12627  002330  0E01               	movlw	1
 12628  002332  262E               	addwf	___flmul@prod^0,f,c
 12629  002334  0E00               	movlw	0
 12630  002336  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12631  002338  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12632  00233A  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12633  00233C  A031               	btfss	(___flmul@prod+3)^0,0,c
 12634  00233E  EFA3  F011         	goto	u9371
 12635  002342  EFA5  F011         	goto	u9370
 12636  002346                     u9371:
 12637  002346  EFBC  F011         	goto	l8823
 12638  00234A                     u9370:
 12639  00234A  C02E  F023         	movff	___flmul@prod,??___flmul
 12640  00234E  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
 12641  002352  C030  F025         	movff	___flmul@prod+2,??___flmul+2
 12642  002356  C031  F026         	movff	___flmul@prod+3,??___flmul+3
 12643  00235A  3426               	rlcf	(??___flmul+3)^0,w,c
 12644  00235C  3226               	rrcf	(??___flmul+3)^0,f,c
 12645  00235E  3225               	rrcf	(??___flmul+2)^0,f,c
 12646  002360  3224               	rrcf	(??___flmul+1)^0,f,c
 12647  002362  3223               	rrcf	??___flmul^0,f,c
 12648  002364  C023  F02E         	movff	??___flmul,___flmul@prod
 12649  002368  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
 12650  00236C  C025  F030         	movff	??___flmul+2,___flmul@prod+2
 12651  002370  C026  F031         	movff	??___flmul+3,___flmul@prod+3
 12652  002374  4A32               	infsnz	___flmul@temp^0,f,c
 12653  002376  2A33               	incf	(___flmul@temp+1)^0,f,c
 12654  002378                     l8823:
 12655  002378  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 12656  00237A  EFC7  F011         	goto	u9381
 12657  00237E  5033               	movf	(___flmul@temp+1)^0,w,c
 12658  002380  E108               	bnz	u9380
 12659  002382  2832               	incf	___flmul@temp^0,w,c
 12660  002384  A0D8               	btfss	status,0,c
 12661  002386  EFC7  F011         	goto	u9381
 12662  00238A  EFC9  F011         	goto	u9380
 12663  00238E                     u9381:
 12664  00238E  EFD3  F011         	goto	l8827
 12665  002392                     u9380:
 12666  002392  0E00               	movlw	0
 12667  002394  6E2E               	movwf	___flmul@prod^0,c
 12668  002396  0E00               	movlw	0
 12669  002398  6E2F               	movwf	(___flmul@prod+1)^0,c
 12670  00239A  0E80               	movlw	128
 12671  00239C  6E30               	movwf	(___flmul@prod+2)^0,c
 12672  00239E  0E7F               	movlw	127
 12673  0023A0  6E31               	movwf	(___flmul@prod+3)^0,c
 12674  0023A2  EF01  F012         	goto	l8839
 12675  0023A6                     l8827:
 12676  0023A6  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 12677  0023A8  EFE0  F011         	goto	u9390
 12678  0023AC  5033               	movf	(___flmul@temp+1)^0,w,c
 12679  0023AE  E106               	bnz	u9391
 12680  0023B0  0432               	decf	___flmul@temp^0,w,c
 12681  0023B2  B0D8               	btfsc	status,0,c
 12682  0023B4  EFDE  F011         	goto	u9391
 12683  0023B8  EFE0  F011         	goto	u9390
 12684  0023BC                     u9391:
 12685  0023BC  EFEC  F011         	goto	l1592
 12686  0023C0                     u9390:
 12687  0023C0  0E00               	movlw	0
 12688  0023C2  6E2E               	movwf	___flmul@prod^0,c
 12689  0023C4  0E00               	movlw	0
 12690  0023C6  6E2F               	movwf	(___flmul@prod+1)^0,c
 12691  0023C8  0E00               	movlw	0
 12692  0023CA  6E30               	movwf	(___flmul@prod+2)^0,c
 12693  0023CC  0E00               	movlw	0
 12694  0023CE  6E31               	movwf	(___flmul@prod+3)^0,c
 12695  0023D0  0E00               	movlw	0
 12696  0023D2  6E27               	movwf	___flmul@sign^0,c
 12697  0023D4  EF01  F012         	goto	l8839
 12698  0023D8                     l1592:
 12699  0023D8  C032  F02D         	movff	___flmul@temp,___flmul@bexp
 12700  0023DC  0EFF               	movlw	255
 12701  0023DE  162E               	andwf	___flmul@prod^0,f,c
 12702  0023E0  0EFF               	movlw	255
 12703  0023E2  162F               	andwf	(___flmul@prod+1)^0,f,c
 12704  0023E4  0E7F               	movlw	127
 12705  0023E6  1630               	andwf	(___flmul@prod+2)^0,f,c
 12706  0023E8  0E00               	movlw	0
 12707  0023EA  1631               	andwf	(___flmul@prod+3)^0,f,c
 12708  0023EC  A02D               	btfss	___flmul@bexp^0,0,c
 12709  0023EE  EFFB  F011         	goto	u9401
 12710  0023F2  EFFD  F011         	goto	u9400
 12711  0023F6                     u9401:
 12712  0023F6  EFFE  F011         	goto	l8837
 12713  0023FA                     u9400:
 12714  0023FA  8E30               	bsf	(___flmul@prod+2)^0,7,c
 12715  0023FC                     l8837:
 12716  0023FC  90D8               	bcf	status,0,c
 12717  0023FE  302D               	rrcf	___flmul@bexp^0,w,c
 12718  002400  6E31               	movwf	(___flmul@prod+3)^0,c
 12719  002402                     l8839:
 12720  002402  5027               	movf	___flmul@sign^0,w,c
 12721  002404  1231               	iorwf	(___flmul@prod+3)^0,f,c
 12722  002406  C02E  F01B         	movff	___flmul@prod,?___flmul
 12723  00240A  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
 12724  00240E  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
 12725  002412  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
 12726  002416                     l1579:
 12727  002416  0012               	return		;funcret
 12728  002418                     __end_of___flmul:
 12729                           	opt callstack 0
 12730                           
 12731 ;; *************** function ___fleq *****************
 12732 ;; Defined at:
 12733 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12734 ;; Parameters:    Size  Location     Type
 12735 ;;  ff1             4    5[COMRAM] unsigned char 
 12736 ;;  ff2             4    9[COMRAM] unsigned char 
 12737 ;; Auto vars:     Size  Location     Type
 12738 ;;		None
 12739 ;; Return value:  Size  Location     Type
 12740 ;;		None               void
 12741 ;; Registers used:
 12742 ;;		wreg, status,2, status,0
 12743 ;; Tracked objects:
 12744 ;;		On entry : 0/0
 12745 ;;		On exit  : 0/0
 12746 ;;		Unchanged: 0/0
 12747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12748 ;;      Params:         8       0       0       0       0       0       0       0       0
 12749 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12750 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12751 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12752 ;;Total ram usage:       12 bytes
 12753 ;; Hardware stack levels used:    1
 12754 ;; Hardware stack levels required when called:    2
 12755 ;; This function calls:
 12756 ;;		Nothing
 12757 ;; This function is called by:
 12758 ;;		_efgtoa
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           	psect	text47
 12763  004952                     __ptext47:
 12764                           	opt callstack 0
 12765  004952                     ___fleq:
 12766                           	opt callstack 23
 12767  004952  0E00               	movlw	0
 12768  004954  1406               	andwf	___fleq@ff1^0,w,c
 12769  004956  6E0E               	movwf	??___fleq^0,c
 12770  004958  0E00               	movlw	0
 12771  00495A  1407               	andwf	(___fleq@ff1+1)^0,w,c
 12772  00495C  6E0F               	movwf	(??___fleq+1)^0,c
 12773  00495E  0E80               	movlw	128
 12774  004960  1408               	andwf	(___fleq@ff1+2)^0,w,c
 12775  004962  6E10               	movwf	(??___fleq+2)^0,c
 12776  004964  0E7F               	movlw	127
 12777  004966  1409               	andwf	(___fleq@ff1+3)^0,w,c
 12778  004968  6E11               	movwf	(??___fleq+3)^0,c
 12779  00496A  500E               	movf	??___fleq^0,w,c
 12780  00496C  100F               	iorwf	(??___fleq+1)^0,w,c
 12781  00496E  1010               	iorwf	(??___fleq+2)^0,w,c
 12782  004970  1011               	iorwf	(??___fleq+3)^0,w,c
 12783  004972  A4D8               	btfss	status,2,c
 12784  004974  EFBE  F024         	goto	u9531
 12785  004978  EFC0  F024         	goto	u9530
 12786  00497C                     u9531:
 12787  00497C  EFC8  F024         	goto	l8935
 12788  004980                     u9530:
 12789  004980  0E00               	movlw	0
 12790  004982  6E06               	movwf	___fleq@ff1^0,c
 12791  004984  0E00               	movlw	0
 12792  004986  6E07               	movwf	(___fleq@ff1+1)^0,c
 12793  004988  0E00               	movlw	0
 12794  00498A  6E08               	movwf	(___fleq@ff1+2)^0,c
 12795  00498C  0E00               	movlw	0
 12796  00498E  6E09               	movwf	(___fleq@ff1+3)^0,c
 12797  004990                     l8935:
 12798  004990  0E00               	movlw	0
 12799  004992  140A               	andwf	___fleq@ff2^0,w,c
 12800  004994  6E0E               	movwf	??___fleq^0,c
 12801  004996  0E00               	movlw	0
 12802  004998  140B               	andwf	(___fleq@ff2+1)^0,w,c
 12803  00499A  6E0F               	movwf	(??___fleq+1)^0,c
 12804  00499C  0E80               	movlw	128
 12805  00499E  140C               	andwf	(___fleq@ff2+2)^0,w,c
 12806  0049A0  6E10               	movwf	(??___fleq+2)^0,c
 12807  0049A2  0E7F               	movlw	127
 12808  0049A4  140D               	andwf	(___fleq@ff2+3)^0,w,c
 12809  0049A6  6E11               	movwf	(??___fleq+3)^0,c
 12810  0049A8  500E               	movf	??___fleq^0,w,c
 12811  0049AA  100F               	iorwf	(??___fleq+1)^0,w,c
 12812  0049AC  1010               	iorwf	(??___fleq+2)^0,w,c
 12813  0049AE  1011               	iorwf	(??___fleq+3)^0,w,c
 12814  0049B0  A4D8               	btfss	status,2,c
 12815  0049B2  EFDD  F024         	goto	u9541
 12816  0049B6  EFDF  F024         	goto	u9540
 12817  0049BA                     u9541:
 12818  0049BA  EFE7  F024         	goto	l8939
 12819  0049BE                     u9540:
 12820  0049BE  0E00               	movlw	0
 12821  0049C0  6E0A               	movwf	___fleq@ff2^0,c
 12822  0049C2  0E00               	movlw	0
 12823  0049C4  6E0B               	movwf	(___fleq@ff2+1)^0,c
 12824  0049C6  0E00               	movlw	0
 12825  0049C8  6E0C               	movwf	(___fleq@ff2+2)^0,c
 12826  0049CA  0E00               	movlw	0
 12827  0049CC  6E0D               	movwf	(___fleq@ff2+3)^0,c
 12828  0049CE                     l8939:
 12829  0049CE  500A               	movf	___fleq@ff2^0,w,c
 12830  0049D0  1806               	xorwf	___fleq@ff1^0,w,c
 12831  0049D2  E10F               	bnz	u9550
 12832  0049D4  500B               	movf	(___fleq@ff2+1)^0,w,c
 12833  0049D6  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 12834  0049D8  E10C               	bnz	u9550
 12835  0049DA  500C               	movf	(___fleq@ff2+2)^0,w,c
 12836  0049DC  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 12837  0049DE  E109               	bnz	u9550
 12838  0049E0  500D               	movf	(___fleq@ff2+3)^0,w,c
 12839  0049E2  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 12840  0049E4  B4D8               	btfsc	status,2,c
 12841  0049E6  EFF7  F024         	goto	u9551
 12842  0049EA  EFF9  F024         	goto	u9550
 12843  0049EE                     u9551:
 12844  0049EE  EFFC  F024         	goto	l8943
 12845  0049F2                     u9550:
 12846  0049F2  90D8               	bcf	status,0,c
 12847  0049F4  EFFD  F024         	goto	l1220
 12848  0049F8                     l8943:
 12849  0049F8  80D8               	bsf	status,0,c
 12850  0049FA                     l1220:
 12851  0049FA  0012               	return		;funcret
 12852  0049FC                     __end_of___fleq:
 12853                           	opt callstack 0
 12854                           
 12855 ;; *************** function ___fldiv *****************
 12856 ;; Defined at:
 12857 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12858 ;; Parameters:    Size  Location     Type
 12859 ;;  b               4   67[COMRAM] unsigned char 
 12860 ;;  a               4   71[COMRAM] unsigned char 
 12861 ;; Auto vars:     Size  Location     Type
 12862 ;;  grs             4    7[BANK0 ] unsigned long 
 12863 ;;  rem             4    0[BANK0 ] unsigned long 
 12864 ;;  new_exp         2    5[BANK0 ] short 
 12865 ;;  aexp            1   12[BANK0 ] unsigned char 
 12866 ;;  bexp            1   11[BANK0 ] unsigned char 
 12867 ;;  sign            1    4[BANK0 ] unsigned char 
 12868 ;; Return value:  Size  Location     Type
 12869 ;;                  4   67[COMRAM] unsigned char 
 12870 ;; Registers used:
 12871 ;;		wreg, status,2, status,0
 12872 ;; Tracked objects:
 12873 ;;		On entry : 0/0
 12874 ;;		On exit  : 0/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12877 ;;      Params:         8       0       0       0       0       0       0       0       0
 12878 ;;      Locals:         0      13       0       0       0       0       0       0       0
 12879 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12880 ;;      Totals:        12      13       0       0       0       0       0       0       0
 12881 ;;Total ram usage:       25 bytes
 12882 ;; Hardware stack levels used:    1
 12883 ;; Hardware stack levels required when called:    2
 12884 ;; This function calls:
 12885 ;;		Nothing
 12886 ;; This function is called by:
 12887 ;;		_pwmDuty
 12888 ;;		_leerSensores
 12889 ;;		_efgtoa
 12890 ;; This function uses a non-reentrant model
 12891 ;;
 12892                           
 12893                           	psect	text48
 12894  0027CA                     __ptext48:
 12895                           	opt callstack 0
 12896  0027CA                     ___fldiv:
 12897                           	opt callstack 23
 12898  0027CA  5047               	movf	(___fldiv@b+3)^0,w,c
 12899  0027CC  0B80               	andlw	128
 12900  0027CE  0100               	movlb	0	; () banked
 12901  0027D0  6F64               	movwf	___fldiv@sign& (0+255),b
 12902  0027D2  5047               	movf	(___fldiv@b+3)^0,w,c
 12903  0027D4  2447               	addwf	(___fldiv@b+3)^0,w,c
 12904  0027D6  6F6B               	movwf	___fldiv@bexp& (0+255),b
 12905  0027D8                     
 12906                           ; BSR set to: 0
 12907  0027D8  AE46               	btfss	(___fldiv@b+2)^0,7,c
 12908  0027DA  EFF1  F013         	goto	u8991
 12909  0027DE  EFF3  F013         	goto	u8990
 12910  0027E2                     u8991:
 12911  0027E2  EFF4  F013         	goto	l8583
 12912  0027E6                     u8990:
 12913  0027E6                     
 12914                           ; BSR set to: 0
 12915  0027E6  816B               	bsf	___fldiv@bexp& (0+255),0,b
 12916  0027E8                     l8583:
 12917                           
 12918                           ; BSR set to: 0
 12919  0027E8  516B               	movf	___fldiv@bexp& (0+255),w,b
 12920  0027EA  B4D8               	btfsc	status,2,c
 12921  0027EC  EFFA  F013         	goto	u9001
 12922  0027F0  EFFC  F013         	goto	u9000
 12923  0027F4                     u9001:
 12924  0027F4  EF11  F014         	goto	l8593
 12925  0027F8                     u9000:
 12926  0027F8                     
 12927                           ; BSR set to: 0
 12928  0027F8  296B               	incf	___fldiv@bexp& (0+255),w,b
 12929  0027FA  A4D8               	btfss	status,2,c
 12930  0027FC  EF02  F014         	goto	u9011
 12931  002800  EF04  F014         	goto	u9010
 12932  002804                     u9011:
 12933  002804  EF0C  F014         	goto	l8589
 12934  002808                     u9010:
 12935  002808                     
 12936                           ; BSR set to: 0
 12937  002808  0E00               	movlw	0
 12938  00280A  6E44               	movwf	___fldiv@b^0,c
 12939  00280C  0E00               	movlw	0
 12940  00280E  6E45               	movwf	(___fldiv@b+1)^0,c
 12941  002810  0E00               	movlw	0
 12942  002812  6E46               	movwf	(___fldiv@b+2)^0,c
 12943  002814  0E00               	movlw	0
 12944  002816  6E47               	movwf	(___fldiv@b+3)^0,c
 12945  002818                     l8589:
 12946                           
 12947                           ; BSR set to: 0
 12948  002818  8E46               	bsf	(___fldiv@b+2)^0,7,c
 12949  00281A                     
 12950                           ; BSR set to: 0
 12951  00281A  0E00               	movlw	0
 12952  00281C  6E47               	movwf	(___fldiv@b+3)^0,c
 12953  00281E  EF19  F014         	goto	l8595
 12954  002822                     l8593:
 12955                           
 12956                           ; BSR set to: 0
 12957  002822  0E00               	movlw	0
 12958  002824  6E44               	movwf	___fldiv@b^0,c
 12959  002826  0E00               	movlw	0
 12960  002828  6E45               	movwf	(___fldiv@b+1)^0,c
 12961  00282A  0E00               	movlw	0
 12962  00282C  6E46               	movwf	(___fldiv@b+2)^0,c
 12963  00282E  0E00               	movlw	0
 12964  002830  6E47               	movwf	(___fldiv@b+3)^0,c
 12965  002832                     l8595:
 12966                           
 12967                           ; BSR set to: 0
 12968  002832  504B               	movf	(___fldiv@a+3)^0,w,c
 12969  002834  0B80               	andlw	128
 12970  002836  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 12971  002838                     
 12972                           ; BSR set to: 0
 12973  002838  504B               	movf	(___fldiv@a+3)^0,w,c
 12974  00283A  244B               	addwf	(___fldiv@a+3)^0,w,c
 12975  00283C  6F6C               	movwf	___fldiv@aexp& (0+255),b
 12976  00283E                     
 12977                           ; BSR set to: 0
 12978  00283E  AE4A               	btfss	(___fldiv@a+2)^0,7,c
 12979  002840  EF24  F014         	goto	u9021
 12980  002844  EF26  F014         	goto	u9020
 12981  002848                     u9021:
 12982  002848  EF27  F014         	goto	l8603
 12983  00284C                     u9020:
 12984  00284C                     
 12985                           ; BSR set to: 0
 12986  00284C  816C               	bsf	___fldiv@aexp& (0+255),0,b
 12987  00284E                     l8603:
 12988                           
 12989                           ; BSR set to: 0
 12990  00284E  516C               	movf	___fldiv@aexp& (0+255),w,b
 12991  002850  B4D8               	btfsc	status,2,c
 12992  002852  EF2D  F014         	goto	u9031
 12993  002856  EF2F  F014         	goto	u9030
 12994  00285A                     u9031:
 12995  00285A  EF44  F014         	goto	l8613
 12996  00285E                     u9030:
 12997  00285E                     
 12998                           ; BSR set to: 0
 12999  00285E  296C               	incf	___fldiv@aexp& (0+255),w,b
 13000  002860  A4D8               	btfss	status,2,c
 13001  002862  EF35  F014         	goto	u9041
 13002  002866  EF37  F014         	goto	u9040
 13003  00286A                     u9041:
 13004  00286A  EF3F  F014         	goto	l8609
 13005  00286E                     u9040:
 13006  00286E                     
 13007                           ; BSR set to: 0
 13008  00286E  0E00               	movlw	0
 13009  002870  6E48               	movwf	___fldiv@a^0,c
 13010  002872  0E00               	movlw	0
 13011  002874  6E49               	movwf	(___fldiv@a+1)^0,c
 13012  002876  0E00               	movlw	0
 13013  002878  6E4A               	movwf	(___fldiv@a+2)^0,c
 13014  00287A  0E00               	movlw	0
 13015  00287C  6E4B               	movwf	(___fldiv@a+3)^0,c
 13016  00287E                     l8609:
 13017                           
 13018                           ; BSR set to: 0
 13019  00287E  8E4A               	bsf	(___fldiv@a+2)^0,7,c
 13020  002880                     
 13021                           ; BSR set to: 0
 13022  002880  0E00               	movlw	0
 13023  002882  6E4B               	movwf	(___fldiv@a+3)^0,c
 13024  002884  EF4C  F014         	goto	l8615
 13025  002888                     l8613:
 13026                           
 13027                           ; BSR set to: 0
 13028  002888  0E00               	movlw	0
 13029  00288A  6E48               	movwf	___fldiv@a^0,c
 13030  00288C  0E00               	movlw	0
 13031  00288E  6E49               	movwf	(___fldiv@a+1)^0,c
 13032  002890  0E00               	movlw	0
 13033  002892  6E4A               	movwf	(___fldiv@a+2)^0,c
 13034  002894  0E00               	movlw	0
 13035  002896  6E4B               	movwf	(___fldiv@a+3)^0,c
 13036  002898                     l8615:
 13037                           
 13038                           ; BSR set to: 0
 13039  002898  5048               	movf	___fldiv@a^0,w,c
 13040  00289A  1049               	iorwf	(___fldiv@a+1)^0,w,c
 13041  00289C  104A               	iorwf	(___fldiv@a+2)^0,w,c
 13042  00289E  104B               	iorwf	(___fldiv@a+3)^0,w,c
 13043  0028A0  A4D8               	btfss	status,2,c
 13044  0028A2  EF55  F014         	goto	u9051
 13045  0028A6  EF57  F014         	goto	u9050
 13046  0028AA                     u9051:
 13047  0028AA  EF6F  F014         	goto	l8627
 13048  0028AE                     u9050:
 13049  0028AE                     
 13050                           ; BSR set to: 0
 13051  0028AE  0E00               	movlw	0
 13052  0028B0  6E44               	movwf	___fldiv@b^0,c
 13053  0028B2  0E00               	movlw	0
 13054  0028B4  6E45               	movwf	(___fldiv@b+1)^0,c
 13055  0028B6  0E00               	movlw	0
 13056  0028B8  6E46               	movwf	(___fldiv@b+2)^0,c
 13057  0028BA  0E00               	movlw	0
 13058  0028BC  6E47               	movwf	(___fldiv@b+3)^0,c
 13059  0028BE                     
 13060                           ; BSR set to: 0
 13061  0028BE  0E80               	movlw	128
 13062  0028C0  1246               	iorwf	(___fldiv@b+2)^0,f,c
 13063  0028C2  0E7F               	movlw	127
 13064  0028C4  1247               	iorwf	(___fldiv@b+3)^0,f,c
 13065  0028C6                     l8621:
 13066                           
 13067                           ; BSR set to: 0
 13068  0028C6  5164               	movf	___fldiv@sign& (0+255),w,b
 13069  0028C8  1247               	iorwf	(___fldiv@b+3)^0,f,c
 13070  0028CA                     
 13071                           ; BSR set to: 0
 13072  0028CA  C044  F044         	movff	___fldiv@b,?___fldiv
 13073  0028CE  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
 13074  0028D2  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
 13075  0028D6  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
 13076  0028DA  EFB2  F015         	goto	l1543
 13077  0028DE                     l8627:
 13078                           
 13079                           ; BSR set to: 0
 13080  0028DE  516B               	movf	___fldiv@bexp& (0+255),w,b
 13081  0028E0  A4D8               	btfss	status,2,c
 13082  0028E2  EF75  F014         	goto	u9061
 13083  0028E6  EF77  F014         	goto	u9060
 13084  0028EA                     u9061:
 13085  0028EA  EF81  F014         	goto	l8635
 13086  0028EE                     u9060:
 13087  0028EE                     
 13088                           ; BSR set to: 0
 13089  0028EE  0E00               	movlw	0
 13090  0028F0  6E44               	movwf	?___fldiv^0,c
 13091  0028F2  0E00               	movlw	0
 13092  0028F4  6E45               	movwf	(?___fldiv+1)^0,c
 13093  0028F6  0E00               	movlw	0
 13094  0028F8  6E46               	movwf	(?___fldiv+2)^0,c
 13095  0028FA  0E00               	movlw	0
 13096  0028FC  6E47               	movwf	(?___fldiv+3)^0,c
 13097  0028FE  EFB2  F015         	goto	l1543
 13098  002902                     l8635:
 13099                           
 13100                           ; BSR set to: 0
 13101  002902  516C               	movf	___fldiv@aexp& (0+255),w,b
 13102  002904  C06B  F04C         	movff	___fldiv@bexp,??___fldiv
 13103  002908  6A4D               	clrf	(??___fldiv+1)^0,c
 13104  00290A  5E4C               	subwf	??___fldiv^0,f,c
 13105  00290C  0E00               	movlw	0
 13106  00290E  5A4D               	subwfb	(??___fldiv+1)^0,f,c
 13107  002910  0E7F               	movlw	127
 13108  002912  244C               	addwf	??___fldiv^0,w,c
 13109  002914  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13110  002916  0E00               	movlw	0
 13111  002918  204D               	addwfc	(??___fldiv+1)^0,w,c
 13112  00291A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13113  00291C                     
 13114                           ; BSR set to: 0
 13115  00291C  C044  F060         	movff	___fldiv@b,___fldiv@rem
 13116  002920  C045  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 13117  002924  C046  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 13118  002928  C047  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 13119  00292C                     
 13120                           ; BSR set to: 0
 13121  00292C  0E00               	movlw	0
 13122  00292E  6E44               	movwf	___fldiv@b^0,c
 13123  002930  0E00               	movlw	0
 13124  002932  6E45               	movwf	(___fldiv@b+1)^0,c
 13125  002934  0E00               	movlw	0
 13126  002936  6E46               	movwf	(___fldiv@b+2)^0,c
 13127  002938  0E00               	movlw	0
 13128  00293A  6E47               	movwf	(___fldiv@b+3)^0,c
 13129  00293C                     
 13130                           ; BSR set to: 0
 13131  00293C  0E00               	movlw	0
 13132  00293E  6F67               	movwf	___fldiv@grs& (0+255),b
 13133  002940  0E00               	movlw	0
 13134  002942  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 13135  002944  0E00               	movlw	0
 13136  002946  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 13137  002948  0E00               	movlw	0
 13138  00294A  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 13139  00294C                     
 13140                           ; BSR set to: 0
 13141  00294C  0E00               	movlw	0
 13142  00294E  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13143  002950  EFE2  F014         	goto	l1545
 13144  002954                     l8645:
 13145                           
 13146                           ; BSR set to: 0
 13147  002954  516C               	movf	___fldiv@aexp& (0+255),w,b
 13148  002956  B4D8               	btfsc	status,2,c
 13149  002958  EFB0  F014         	goto	u9071
 13150  00295C  EFB2  F014         	goto	u9070
 13151  002960                     u9071:
 13152  002960  EFC9  F014         	goto	l8653
 13153  002964                     u9070:
 13154  002964                     
 13155                           ; BSR set to: 0
 13156  002964  90D8               	bcf	status,0,c
 13157  002966  3760               	rlcf	___fldiv@rem& (0+255),f,b
 13158  002968  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13159  00296A  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13160  00296C  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13161  00296E  90D8               	bcf	status,0,c
 13162  002970  3644               	rlcf	___fldiv@b^0,f,c
 13163  002972  3645               	rlcf	(___fldiv@b+1)^0,f,c
 13164  002974  3646               	rlcf	(___fldiv@b+2)^0,f,c
 13165  002976  3647               	rlcf	(___fldiv@b+3)^0,f,c
 13166  002978                     
 13167                           ; BSR set to: 0
 13168  002978  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13169  00297A  EFC1  F014         	goto	u9081
 13170  00297E  EFC3  F014         	goto	u9080
 13171  002982                     u9081:
 13172  002982  EFC4  F014         	goto	l1548
 13173  002986                     u9080:
 13174  002986                     
 13175                           ; BSR set to: 0
 13176  002986  8044               	bsf	___fldiv@b^0,0,c
 13177  002988                     l1548:
 13178                           
 13179                           ; BSR set to: 0
 13180  002988  90D8               	bcf	status,0,c
 13181  00298A  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13182  00298C  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13183  00298E  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13184  002990  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13185  002992                     l8653:
 13186                           
 13187                           ; BSR set to: 0
 13188  002992  5048               	movf	___fldiv@a^0,w,c
 13189  002994  5D60               	subwf	___fldiv@rem& (0+255),w,b
 13190  002996  5049               	movf	(___fldiv@a+1)^0,w,c
 13191  002998  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13192  00299A  504A               	movf	(___fldiv@a+2)^0,w,c
 13193  00299C  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13194  00299E  504B               	movf	(___fldiv@a+3)^0,w,c
 13195  0029A0  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13196  0029A2  A0D8               	btfss	status,0,c
 13197  0029A4  EFD6  F014         	goto	u9091
 13198  0029A8  EFD8  F014         	goto	u9090
 13199  0029AC                     u9091:
 13200  0029AC  EFE1  F014         	goto	l8659
 13201  0029B0                     u9090:
 13202  0029B0                     
 13203                           ; BSR set to: 0
 13204  0029B0  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13205  0029B2                     
 13206                           ; BSR set to: 0
 13207  0029B2  5048               	movf	___fldiv@a^0,w,c
 13208  0029B4  5F60               	subwf	___fldiv@rem& (0+255),f,b
 13209  0029B6  5049               	movf	(___fldiv@a+1)^0,w,c
 13210  0029B8  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13211  0029BA  504A               	movf	(___fldiv@a+2)^0,w,c
 13212  0029BC  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13213  0029BE  504B               	movf	(___fldiv@a+3)^0,w,c
 13214  0029C0  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13215  0029C2                     l8659:
 13216                           
 13217                           ; BSR set to: 0
 13218  0029C2  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 13219  0029C4                     l1545:
 13220                           
 13221                           ; BSR set to: 0
 13222  0029C4  0E19               	movlw	25
 13223  0029C6  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 13224  0029C8  EFE8  F014         	goto	u9101
 13225  0029CC  EFEA  F014         	goto	u9100
 13226  0029D0                     u9101:
 13227  0029D0  EFAA  F014         	goto	l8645
 13228  0029D4                     u9100:
 13229  0029D4                     
 13230                           ; BSR set to: 0
 13231  0029D4  5160               	movf	___fldiv@rem& (0+255),w,b
 13232  0029D6  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13233  0029D8  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13234  0029DA  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13235  0029DC  B4D8               	btfsc	status,2,c
 13236  0029DE  EFF3  F014         	goto	u9111
 13237  0029E2  EFF5  F014         	goto	u9110
 13238  0029E6                     u9111:
 13239  0029E6  EF0D  F015         	goto	l8671
 13240  0029EA                     u9110:
 13241  0029EA                     
 13242                           ; BSR set to: 0
 13243  0029EA  8167               	bsf	___fldiv@grs& (0+255),0,b
 13244  0029EC  EF0D  F015         	goto	l8671
 13245  0029F0                     l8665:
 13246                           
 13247                           ; BSR set to: 0
 13248  0029F0  90D8               	bcf	status,0,c
 13249  0029F2  3644               	rlcf	___fldiv@b^0,f,c
 13250  0029F4  3645               	rlcf	(___fldiv@b+1)^0,f,c
 13251  0029F6  3646               	rlcf	(___fldiv@b+2)^0,f,c
 13252  0029F8  3647               	rlcf	(___fldiv@b+3)^0,f,c
 13253  0029FA                     
 13254                           ; BSR set to: 0
 13255  0029FA  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13256  0029FC  EF02  F015         	goto	u9121
 13257  002A00  EF04  F015         	goto	u9120
 13258  002A04                     u9121:
 13259  002A04  EF05  F015         	goto	l1554
 13260  002A08                     u9120:
 13261  002A08                     
 13262                           ; BSR set to: 0
 13263  002A08  8044               	bsf	___fldiv@b^0,0,c
 13264  002A0A                     l1554:
 13265                           
 13266                           ; BSR set to: 0
 13267  002A0A  90D8               	bcf	status,0,c
 13268  002A0C  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13269  002A0E  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13270  002A10  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13271  002A12  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13272  002A14  0765               	decf	___fldiv@new_exp& (0+255),f,b
 13273  002A16  A0D8               	btfss	status,0,c
 13274  002A18  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13275  002A1A                     l8671:
 13276                           
 13277                           ; BSR set to: 0
 13278  002A1A  AE46               	btfss	(___fldiv@b+2)^0,7,c
 13279  002A1C  EF12  F015         	goto	u9131
 13280  002A20  EF14  F015         	goto	u9130
 13281  002A24                     u9131:
 13282  002A24  EFF8  F014         	goto	l8665
 13283  002A28                     u9130:
 13284  002A28                     
 13285                           ; BSR set to: 0
 13286  002A28  0E00               	movlw	0
 13287  002A2A  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13288  002A2C                     
 13289                           ; BSR set to: 0
 13290  002A2C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13291  002A2E  EF1B  F015         	goto	u9141
 13292  002A32  EF1D  F015         	goto	u9140
 13293  002A36                     u9141:
 13294  002A36  EF41  F015         	goto	l1556
 13295  002A3A                     u9140:
 13296  002A3A                     
 13297                           ; BSR set to: 0
 13298  002A3A  0EFF               	movlw	255
 13299  002A3C  1567               	andwf	___fldiv@grs& (0+255),w,b
 13300  002A3E  6E4C               	movwf	??___fldiv^0,c
 13301  002A40  0EFF               	movlw	255
 13302  002A42  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13303  002A44  6E4D               	movwf	(??___fldiv+1)^0,c
 13304  002A46  0EFF               	movlw	255
 13305  002A48  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13306  002A4A  6E4E               	movwf	(??___fldiv+2)^0,c
 13307  002A4C  0E7F               	movlw	127
 13308  002A4E  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13309  002A50  6E4F               	movwf	(??___fldiv+3)^0,c
 13310  002A52  504C               	movf	??___fldiv^0,w,c
 13311  002A54  104D               	iorwf	(??___fldiv+1)^0,w,c
 13312  002A56  104E               	iorwf	(??___fldiv+2)^0,w,c
 13313  002A58  104F               	iorwf	(??___fldiv+3)^0,w,c
 13314  002A5A  B4D8               	btfsc	status,2,c
 13315  002A5C  EF32  F015         	goto	u9151
 13316  002A60  EF34  F015         	goto	u9150
 13317  002A64                     u9151:
 13318  002A64  EF38  F015         	goto	l1557
 13319  002A68                     u9150:
 13320  002A68                     l8679:
 13321                           
 13322                           ; BSR set to: 0
 13323  002A68  0E01               	movlw	1
 13324  002A6A  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13325  002A6C  EF41  F015         	goto	l1556
 13326  002A70                     l1557:
 13327                           
 13328                           ; BSR set to: 0
 13329  002A70  A044               	btfss	___fldiv@b^0,0,c
 13330  002A72  EF3D  F015         	goto	u9161
 13331  002A76  EF3F  F015         	goto	u9160
 13332  002A7A                     u9161:
 13333  002A7A  EF41  F015         	goto	l1556
 13334  002A7E                     u9160:
 13335  002A7E  EF34  F015         	goto	l8679
 13336  002A82                     l1556:
 13337                           
 13338                           ; BSR set to: 0
 13339  002A82  516C               	movf	___fldiv@aexp& (0+255),w,b
 13340  002A84  B4D8               	btfsc	status,2,c
 13341  002A86  EF47  F015         	goto	u9171
 13342  002A8A  EF49  F015         	goto	u9170
 13343  002A8E                     u9171:
 13344  002A8E  EF6D  F015         	goto	l8691
 13345  002A92                     u9170:
 13346  002A92                     
 13347                           ; BSR set to: 0
 13348  002A92  0E01               	movlw	1
 13349  002A94  2644               	addwf	___fldiv@b^0,f,c
 13350  002A96  0E00               	movlw	0
 13351  002A98  2245               	addwfc	(___fldiv@b+1)^0,f,c
 13352  002A9A  2246               	addwfc	(___fldiv@b+2)^0,f,c
 13353  002A9C  2247               	addwfc	(___fldiv@b+3)^0,f,c
 13354  002A9E                     
 13355                           ; BSR set to: 0
 13356  002A9E  A047               	btfss	(___fldiv@b+3)^0,0,c
 13357  002AA0  EF54  F015         	goto	u9181
 13358  002AA4  EF56  F015         	goto	u9180
 13359  002AA8                     u9181:
 13360  002AA8  EF6D  F015         	goto	l8691
 13361  002AAC                     u9180:
 13362  002AAC                     
 13363                           ; BSR set to: 0
 13364  002AAC  C044  F04C         	movff	___fldiv@b,??___fldiv
 13365  002AB0  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
 13366  002AB4  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
 13367  002AB8  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
 13368  002ABC  344F               	rlcf	(??___fldiv+3)^0,w,c
 13369  002ABE  324F               	rrcf	(??___fldiv+3)^0,f,c
 13370  002AC0  324E               	rrcf	(??___fldiv+2)^0,f,c
 13371  002AC2  324D               	rrcf	(??___fldiv+1)^0,f,c
 13372  002AC4  324C               	rrcf	??___fldiv^0,f,c
 13373  002AC6  C04C  F044         	movff	??___fldiv,___fldiv@b
 13374  002ACA  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
 13375  002ACE  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
 13376  002AD2  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
 13377  002AD6                     
 13378                           ; BSR set to: 0
 13379  002AD6  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 13380  002AD8  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13381  002ADA                     l8691:
 13382                           
 13383                           ; BSR set to: 0
 13384  002ADA  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13385  002ADC  EF78  F015         	goto	u9191
 13386  002AE0  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13387  002AE2  E108               	bnz	u9190
 13388  002AE4  2965               	incf	___fldiv@new_exp& (0+255),w,b
 13389  002AE6  A0D8               	btfss	status,0,c
 13390  002AE8  EF78  F015         	goto	u9191
 13391  002AEC  EF7A  F015         	goto	u9190
 13392  002AF0                     u9191:
 13393  002AF0  EF85  F015         	goto	l8695
 13394  002AF4                     u9190:
 13395  002AF4                     
 13396                           ; BSR set to: 0
 13397  002AF4  0E00               	movlw	0
 13398  002AF6  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13399  002AF8  6965               	setf	___fldiv@new_exp& (0+255),b
 13400  002AFA  0E00               	movlw	0
 13401  002AFC  6E44               	movwf	___fldiv@b^0,c
 13402  002AFE  0E00               	movlw	0
 13403  002B00  6E45               	movwf	(___fldiv@b+1)^0,c
 13404  002B02  0E00               	movlw	0
 13405  002B04  6E46               	movwf	(___fldiv@b+2)^0,c
 13406  002B06  0E00               	movlw	0
 13407  002B08  6E47               	movwf	(___fldiv@b+3)^0,c
 13408  002B0A                     l8695:
 13409                           
 13410                           ; BSR set to: 0
 13411  002B0A  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13412  002B0C  EF92  F015         	goto	u9200
 13413  002B10  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13414  002B12  E106               	bnz	u9201
 13415  002B14  0565               	decf	___fldiv@new_exp& (0+255),w,b
 13416  002B16  B0D8               	btfsc	status,0,c
 13417  002B18  EF90  F015         	goto	u9201
 13418  002B1C  EF92  F015         	goto	u9200
 13419  002B20                     u9201:
 13420  002B20  EFA0  F015         	goto	l8699
 13421  002B24                     u9200:
 13422  002B24                     
 13423                           ; BSR set to: 0
 13424  002B24  0E00               	movlw	0
 13425  002B26  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13426  002B28  0E00               	movlw	0
 13427  002B2A  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13428  002B2C  0E00               	movlw	0
 13429  002B2E  6E44               	movwf	___fldiv@b^0,c
 13430  002B30  0E00               	movlw	0
 13431  002B32  6E45               	movwf	(___fldiv@b+1)^0,c
 13432  002B34  0E00               	movlw	0
 13433  002B36  6E46               	movwf	(___fldiv@b+2)^0,c
 13434  002B38  0E00               	movlw	0
 13435  002B3A  6E47               	movwf	(___fldiv@b+3)^0,c
 13436  002B3C  0E00               	movlw	0
 13437  002B3E  6F64               	movwf	___fldiv@sign& (0+255),b
 13438  002B40                     l8699:
 13439                           
 13440                           ; BSR set to: 0
 13441  002B40  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 13442  002B44                     
 13443                           ; BSR set to: 0
 13444  002B44  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 13445  002B46  EFA7  F015         	goto	u9211
 13446  002B4A  EFA9  F015         	goto	u9210
 13447  002B4E                     u9211:
 13448  002B4E  EFAC  F015         	goto	l8705
 13449  002B52                     u9210:
 13450  002B52                     
 13451                           ; BSR set to: 0
 13452  002B52  8E46               	bsf	(___fldiv@b+2)^0,7,c
 13453  002B54  EFAD  F015         	goto	l8707
 13454  002B58                     l8705:
 13455                           
 13456                           ; BSR set to: 0
 13457  002B58  9E46               	bcf	(___fldiv@b+2)^0,7,c
 13458  002B5A                     l8707:
 13459                           
 13460                           ; BSR set to: 0
 13461  002B5A  90D8               	bcf	status,0,c
 13462  002B5C  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 13463  002B5E  6E47               	movwf	(___fldiv@b+3)^0,c
 13464  002B60  EF63  F014         	goto	l8621
 13465  002B64                     l1543:
 13466                           
 13467                           ; BSR set to: 0
 13468  002B64  0012               	return		;funcret
 13469  002B66                     __end_of___fldiv:
 13470                           	opt callstack 0
 13471                           
 13472 ;; *************** function ___awmod *****************
 13473 ;; Defined at:
 13474 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;  dividend        2    5[COMRAM] int 
 13477 ;;  divisor         2    7[COMRAM] int 
 13478 ;; Auto vars:     Size  Location     Type
 13479 ;;  sign            1   10[COMRAM] unsigned char 
 13480 ;;  counter         1    9[COMRAM] unsigned char 
 13481 ;; Return value:  Size  Location     Type
 13482 ;;                  2    5[COMRAM] int 
 13483 ;; Registers used:
 13484 ;;		wreg, status,2, status,0
 13485 ;; Tracked objects:
 13486 ;;		On entry : 0/0
 13487 ;;		On exit  : 0/0
 13488 ;;		Unchanged: 0/0
 13489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13490 ;;      Params:         4       0       0       0       0       0       0       0       0
 13491 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13492 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13493 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13494 ;;Total ram usage:        6 bytes
 13495 ;; Hardware stack levels used:    1
 13496 ;; Hardware stack levels required when called:    2
 13497 ;; This function calls:
 13498 ;;		Nothing
 13499 ;; This function is called by:
 13500 ;;		_efgtoa
 13501 ;; This function uses a non-reentrant model
 13502 ;;
 13503                           
 13504                           	psect	text49
 13505  00474A                     __ptext49:
 13506                           	opt callstack 0
 13507  00474A                     ___awmod:
 13508                           	opt callstack 23
 13509  00474A  0E00               	movlw	0
 13510  00474C  6E0B               	movwf	___awmod@sign^0,c
 13511  00474E  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 13512  004750  EFAE  F023         	goto	u9470
 13513  004754  EFAC  F023         	goto	u9471
 13514  004758                     u9471:
 13515  004758  EFB4  F023         	goto	l8903
 13516  00475C                     u9470:
 13517  00475C  6C06               	negf	___awmod@dividend^0,c
 13518  00475E  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13519  004760  B0D8               	btfsc	status,0,c
 13520  004762  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13521  004764  0E01               	movlw	1
 13522  004766  6E0B               	movwf	___awmod@sign^0,c
 13523  004768                     l8903:
 13524  004768  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 13525  00476A  EFBB  F023         	goto	u9480
 13526  00476E  EFB9  F023         	goto	u9481
 13527  004772                     u9481:
 13528  004772  EFBF  F023         	goto	l8907
 13529  004776                     u9480:
 13530  004776  6C08               	negf	___awmod@divisor^0,c
 13531  004778  1E09               	comf	(___awmod@divisor+1)^0,f,c
 13532  00477A  B0D8               	btfsc	status,0,c
 13533  00477C  2A09               	incf	(___awmod@divisor+1)^0,f,c
 13534  00477E                     l8907:
 13535  00477E  5008               	movf	___awmod@divisor^0,w,c
 13536  004780  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 13537  004782  B4D8               	btfsc	status,2,c
 13538  004784  EFC6  F023         	goto	u9491
 13539  004788  EFC8  F023         	goto	u9490
 13540  00478C                     u9491:
 13541  00478C  EFEC  F023         	goto	l8923
 13542  004790                     u9490:
 13543  004790  0E01               	movlw	1
 13544  004792  6E0A               	movwf	___awmod@counter^0,c
 13545  004794  EFD0  F023         	goto	l8913
 13546  004798                     l8911:
 13547  004798  90D8               	bcf	status,0,c
 13548  00479A  3608               	rlcf	___awmod@divisor^0,f,c
 13549  00479C  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 13550  00479E  2A0A               	incf	___awmod@counter^0,f,c
 13551  0047A0                     l8913:
 13552  0047A0  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 13553  0047A2  EFD5  F023         	goto	u9501
 13554  0047A6  EFD7  F023         	goto	u9500
 13555  0047AA                     u9501:
 13556  0047AA  EFCC  F023         	goto	l8911
 13557  0047AE                     u9500:
 13558  0047AE                     l8915:
 13559  0047AE  5008               	movf	___awmod@divisor^0,w,c
 13560  0047B0  5C06               	subwf	___awmod@dividend^0,w,c
 13561  0047B2  5009               	movf	(___awmod@divisor+1)^0,w,c
 13562  0047B4  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 13563  0047B6  A0D8               	btfss	status,0,c
 13564  0047B8  EFE0  F023         	goto	u9511
 13565  0047BC  EFE2  F023         	goto	u9510
 13566  0047C0                     u9511:
 13567  0047C0  EFE6  F023         	goto	l8919
 13568  0047C4                     u9510:
 13569  0047C4  5008               	movf	___awmod@divisor^0,w,c
 13570  0047C6  5E06               	subwf	___awmod@dividend^0,f,c
 13571  0047C8  5009               	movf	(___awmod@divisor+1)^0,w,c
 13572  0047CA  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 13573  0047CC                     l8919:
 13574  0047CC  90D8               	bcf	status,0,c
 13575  0047CE  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 13576  0047D0  3208               	rrcf	___awmod@divisor^0,f,c
 13577  0047D2  2E0A               	decfsz	___awmod@counter^0,f,c
 13578  0047D4  EFD7  F023         	goto	l8915
 13579  0047D8                     l8923:
 13580  0047D8  500B               	movf	___awmod@sign^0,w,c
 13581  0047DA  B4D8               	btfsc	status,2,c
 13582  0047DC  EFF2  F023         	goto	u9521
 13583  0047E0  EFF4  F023         	goto	u9520
 13584  0047E4                     u9521:
 13585  0047E4  EFF8  F023         	goto	l8927
 13586  0047E8                     u9520:
 13587  0047E8  6C06               	negf	___awmod@dividend^0,c
 13588  0047EA  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13589  0047EC  B0D8               	btfsc	status,0,c
 13590  0047EE  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13591  0047F0                     l8927:
 13592  0047F0  C006  F006         	movff	___awmod@dividend,?___awmod
 13593  0047F4  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 13594  0047F8  0012               	return		;funcret
 13595  0047FA                     __end_of___awmod:
 13596                           	opt callstack 0
 13597                           
 13598 ;; *************** function ___awdiv *****************
 13599 ;; Defined at:
 13600 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13601 ;; Parameters:    Size  Location     Type
 13602 ;;  dividend        2    5[COMRAM] int 
 13603 ;;  divisor         2    7[COMRAM] int 
 13604 ;; Auto vars:     Size  Location     Type
 13605 ;;  quotient        2   11[COMRAM] int 
 13606 ;;  sign            1   10[COMRAM] unsigned char 
 13607 ;;  counter         1    9[COMRAM] unsigned char 
 13608 ;; Return value:  Size  Location     Type
 13609 ;;                  2    5[COMRAM] int 
 13610 ;; Registers used:
 13611 ;;		wreg, status,2, status,0
 13612 ;; Tracked objects:
 13613 ;;		On entry : 0/0
 13614 ;;		On exit  : 0/0
 13615 ;;		Unchanged: 0/0
 13616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13617 ;;      Params:         4       0       0       0       0       0       0       0       0
 13618 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13619 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13620 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13621 ;;Total ram usage:        8 bytes
 13622 ;; Hardware stack levels used:    1
 13623 ;; Hardware stack levels required when called:    2
 13624 ;; This function calls:
 13625 ;;		Nothing
 13626 ;; This function is called by:
 13627 ;;		_efgtoa
 13628 ;; This function uses a non-reentrant model
 13629 ;;
 13630                           
 13631                           	psect	text50
 13632  0045C4                     __ptext50:
 13633                           	opt callstack 0
 13634  0045C4                     ___awdiv:
 13635                           	opt callstack 23
 13636  0045C4  0E00               	movlw	0
 13637  0045C6  6E0B               	movwf	___awdiv@sign^0,c
 13638  0045C8  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 13639  0045CA  EFEB  F022         	goto	u9410
 13640  0045CE  EFE9  F022         	goto	u9411
 13641  0045D2                     u9411:
 13642  0045D2  EFF1  F022         	goto	l8859
 13643  0045D6                     u9410:
 13644  0045D6  6C08               	negf	___awdiv@divisor^0,c
 13645  0045D8  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 13646  0045DA  B0D8               	btfsc	status,0,c
 13647  0045DC  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 13648  0045DE  0E01               	movlw	1
 13649  0045E0  6E0B               	movwf	___awdiv@sign^0,c
 13650  0045E2                     l8859:
 13651  0045E2  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 13652  0045E4  EFF8  F022         	goto	u9420
 13653  0045E8  EFF6  F022         	goto	u9421
 13654  0045EC                     u9421:
 13655  0045EC  EFFE  F022         	goto	l8865
 13656  0045F0                     u9420:
 13657  0045F0  6C06               	negf	___awdiv@dividend^0,c
 13658  0045F2  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 13659  0045F4  B0D8               	btfsc	status,0,c
 13660  0045F6  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 13661  0045F8  0E01               	movlw	1
 13662  0045FA  1A0B               	xorwf	___awdiv@sign^0,f,c
 13663  0045FC                     l8865:
 13664  0045FC  0E00               	movlw	0
 13665  0045FE  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 13666  004600  0E00               	movlw	0
 13667  004602  6E0C               	movwf	___awdiv@quotient^0,c
 13668  004604  5008               	movf	___awdiv@divisor^0,w,c
 13669  004606  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 13670  004608  B4D8               	btfsc	status,2,c
 13671  00460A  EF09  F023         	goto	u9431
 13672  00460E  EF0B  F023         	goto	u9430
 13673  004612                     u9431:
 13674  004612  EF33  F023         	goto	l8887
 13675  004616                     u9430:
 13676  004616  0E01               	movlw	1
 13677  004618  6E0A               	movwf	___awdiv@counter^0,c
 13678  00461A  EF13  F023         	goto	l8873
 13679  00461E                     l8871:
 13680  00461E  90D8               	bcf	status,0,c
 13681  004620  3608               	rlcf	___awdiv@divisor^0,f,c
 13682  004622  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 13683  004624  2A0A               	incf	___awdiv@counter^0,f,c
 13684  004626                     l8873:
 13685  004626  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 13686  004628  EF18  F023         	goto	u9441
 13687  00462C  EF1A  F023         	goto	u9440
 13688  004630                     u9441:
 13689  004630  EF0F  F023         	goto	l8871
 13690  004634                     u9440:
 13691  004634                     l8875:
 13692  004634  90D8               	bcf	status,0,c
 13693  004636  360C               	rlcf	___awdiv@quotient^0,f,c
 13694  004638  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 13695  00463A  5008               	movf	___awdiv@divisor^0,w,c
 13696  00463C  5C06               	subwf	___awdiv@dividend^0,w,c
 13697  00463E  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13698  004640  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 13699  004642  A0D8               	btfss	status,0,c
 13700  004644  EF26  F023         	goto	u9451
 13701  004648  EF28  F023         	goto	u9450
 13702  00464C                     u9451:
 13703  00464C  EF2D  F023         	goto	l8883
 13704  004650                     u9450:
 13705  004650  5008               	movf	___awdiv@divisor^0,w,c
 13706  004652  5E06               	subwf	___awdiv@dividend^0,f,c
 13707  004654  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13708  004656  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 13709  004658  800C               	bsf	___awdiv@quotient^0,0,c
 13710  00465A                     l8883:
 13711  00465A  90D8               	bcf	status,0,c
 13712  00465C  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 13713  00465E  3208               	rrcf	___awdiv@divisor^0,f,c
 13714  004660  2E0A               	decfsz	___awdiv@counter^0,f,c
 13715  004662  EF1A  F023         	goto	l8875
 13716  004666                     l8887:
 13717  004666  500B               	movf	___awdiv@sign^0,w,c
 13718  004668  B4D8               	btfsc	status,2,c
 13719  00466A  EF39  F023         	goto	u9461
 13720  00466E  EF3B  F023         	goto	u9460
 13721  004672                     u9461:
 13722  004672  EF3F  F023         	goto	l8891
 13723  004676                     u9460:
 13724  004676  6C0C               	negf	___awdiv@quotient^0,c
 13725  004678  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 13726  00467A  B0D8               	btfsc	status,0,c
 13727  00467C  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 13728  00467E                     l8891:
 13729  00467E  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 13730  004682  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 13731  004686  0012               	return		;funcret
 13732  004688                     __end_of___awdiv:
 13733                           	opt callstack 0
 13734                           
 13735 ;; *************** function _dtoa *****************
 13736 ;; Defined at:
 13737 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13738 ;; Parameters:    Size  Location     Type
 13739 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 13740 ;;		 -> sprintf@f(6), 
 13741 ;;  d               8   34[COMRAM] long long 
 13742 ;; Auto vars:     Size  Location     Type
 13743 ;;  n               8   58[COMRAM] long long 
 13744 ;;  i               2   66[COMRAM] int 
 13745 ;;  s               2   56[COMRAM] int 
 13746 ;;  w               2   54[COMRAM] int 
 13747 ;;  p               2   52[COMRAM] int 
 13748 ;; Return value:  Size  Location     Type
 13749 ;;                  2   32[COMRAM] int 
 13750 ;; Registers used:
 13751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13752 ;; Tracked objects:
 13753 ;;		On entry : 0/0
 13754 ;;		On exit  : 0/0
 13755 ;;		Unchanged: 0/0
 13756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13757 ;;      Params:        10       0       0       0       0       0       0       0       0
 13758 ;;      Locals:        18       0       0       0       0       0       0       0       0
 13759 ;;      Temps:          8       0       0       0       0       0       0       0       0
 13760 ;;      Totals:        36       0       0       0       0       0       0       0       0
 13761 ;;Total ram usage:       36 bytes
 13762 ;; Hardware stack levels used:    1
 13763 ;; Hardware stack levels required when called:    6
 13764 ;; This function calls:
 13765 ;;		___aodiv
 13766 ;;		___aomod
 13767 ;;		_abs
 13768 ;;		_pad
 13769 ;; This function is called by:
 13770 ;;		_vfpfcnvrt
 13771 ;; This function uses a non-reentrant model
 13772 ;;
 13773                           
 13774                           	psect	text51
 13775  002B66                     __ptext51:
 13776                           	opt callstack 0
 13777  002B66                     _dtoa:
 13778                           	opt callstack 20
 13779  002B66                     
 13780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13781  002B66  C023  F03B         	movff	dtoa@d,dtoa@n
 13782  002B6A  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
 13783  002B6E  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
 13784  002B72  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
 13785  002B76  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
 13786  002B7A  C028  F040         	movff	dtoa@d+5,dtoa@n+5
 13787  002B7E  C029  F041         	movff	dtoa@d+6,dtoa@n+6
 13788  002B82  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
 13789  002B86                     
 13790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13791  002B86  BE42               	btfsc	(dtoa@n+7)^0,7,c
 13792  002B88  EFC8  F015         	goto	u9851
 13793  002B8C  EFCB  F015         	goto	u9850
 13794  002B90                     u9851:
 13795  002B90  0E01               	movlw	1
 13796  002B92  EFCC  F015         	goto	u9860
 13797  002B96                     u9850:
 13798  002B96  0E00               	movlw	0
 13799  002B98                     u9860:
 13800  002B98  6E39               	movwf	dtoa@s^0,c
 13801  002B9A  6A3A               	clrf	(dtoa@s+1)^0,c
 13802                           
 13803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13804  002B9C  5039               	movf	dtoa@s^0,w,c
 13805  002B9E  103A               	iorwf	(dtoa@s+1)^0,w,c
 13806  002BA0  B4D8               	btfsc	status,2,c
 13807  002BA2  EFD5  F015         	goto	u9871
 13808  002BA6  EFD7  F015         	goto	u9870
 13809  002BAA                     u9871:
 13810  002BAA  EFE7  F015         	goto	l9117
 13811  002BAE                     u9870:
 13812  002BAE                     
 13813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13814  002BAE  1E42               	comf	(dtoa@n+7)^0,f,c
 13815  002BB0  1E41               	comf	(dtoa@n+6)^0,f,c
 13816  002BB2  1E40               	comf	(dtoa@n+5)^0,f,c
 13817  002BB4  1E3F               	comf	(dtoa@n+4)^0,f,c
 13818  002BB6  1E3E               	comf	(dtoa@n+3)^0,f,c
 13819  002BB8  1E3D               	comf	(dtoa@n+2)^0,f,c
 13820  002BBA  1E3C               	comf	(dtoa@n+1)^0,f,c
 13821  002BBC  6C3B               	negf	dtoa@n^0,c
 13822  002BBE  0E00               	movlw	0
 13823  002BC0  223C               	addwfc	(dtoa@n+1)^0,f,c
 13824  002BC2  223D               	addwfc	(dtoa@n+2)^0,f,c
 13825  002BC4  223E               	addwfc	(dtoa@n+3)^0,f,c
 13826  002BC6  223F               	addwfc	(dtoa@n+4)^0,f,c
 13827  002BC8  2240               	addwfc	(dtoa@n+5)^0,f,c
 13828  002BCA  2241               	addwfc	(dtoa@n+6)^0,f,c
 13829  002BCC  2242               	addwfc	(dtoa@n+7)^0,f,c
 13830  002BCE                     l9117:
 13831                           
 13832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13833  002BCE  0101               	movlb	1	; () banked
 13834  002BD0  BF35               	btfsc	(_prec+1)& (0+255),7,b
 13835  002BD2  EFED  F015         	goto	u9881
 13836  002BD6  EFEF  F015         	goto	u9880
 13837  002BDA                     u9881:
 13838  002BDA  EFF0  F015         	goto	l9121
 13839  002BDE                     u9880:
 13840  002BDE                     
 13841                           ; BSR set to: 1
 13842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13843  002BDE  9255               	bcf	_flags^0,1,c
 13844  002BE0                     l9121:
 13845                           
 13846                           ; BSR set to: 1
 13847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13848  002BE0  BF35               	btfsc	(_prec+1)& (0+255),7,b
 13849  002BE2  EFFD  F015         	goto	u9890
 13850  002BE6  5135               	movf	(_prec+1)& (0+255),w,b
 13851  002BE8  E106               	bnz	u9891
 13852  002BEA  0534               	decf	_prec& (0+255),w,b
 13853  002BEC  B0D8               	btfsc	status,0,c
 13854  002BEE  EFFB  F015         	goto	u9891
 13855  002BF2  EFFD  F015         	goto	u9890
 13856  002BF6                     u9891:
 13857  002BF6  EF03  F016         	goto	l812
 13858  002BFA                     u9890:
 13859  002BFA                     
 13860                           ; BSR set to: 1
 13861  002BFA  0E00               	movlw	0
 13862  002BFC  6E36               	movwf	(dtoa@p+1)^0,c
 13863  002BFE  0E01               	movlw	1
 13864  002C00  6E35               	movwf	dtoa@p^0,c
 13865  002C02  EF07  F016         	goto	l814
 13866  002C06                     l812:
 13867                           
 13868                           ; BSR set to: 1
 13869  002C06  C134  F035         	movff	_prec,dtoa@p
 13870  002C0A  C135  F036         	movff	_prec+1,dtoa@p+1
 13871  002C0E                     l814:
 13872                           
 13873                           ; BSR set to: 1
 13874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13875  002C0E  C132  F037         	movff	_width,dtoa@w
 13876  002C12  C133  F038         	movff	_width+1,dtoa@w+1
 13877  002C16                     
 13878                           ; BSR set to: 1
 13879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13880  002C16  5039               	movf	dtoa@s^0,w,c
 13881  002C18  103A               	iorwf	(dtoa@s+1)^0,w,c
 13882  002C1A  A4D8               	btfss	status,2,c
 13883  002C1C  EF12  F016         	goto	u9901
 13884  002C20  EF14  F016         	goto	u9900
 13885  002C24                     u9901:
 13886  002C24  EF1B  F016         	goto	l9129
 13887  002C28                     u9900:
 13888  002C28                     
 13889                           ; BSR set to: 1
 13890  002C28  A455               	btfss	_flags^0,2,c
 13891  002C2A  EF19  F016         	goto	u9911
 13892  002C2E  EF1B  F016         	goto	u9910
 13893  002C32                     u9911:
 13894  002C32  EF1E  F016         	goto	l9131
 13895  002C36                     u9910:
 13896  002C36                     l9129:
 13897                           
 13898                           ; BSR set to: 1
 13899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13900  002C36  0637               	decf	dtoa@w^0,f,c
 13901  002C38  A0D8               	btfss	status,0,c
 13902  002C3A  0638               	decf	(dtoa@w+1)^0,f,c
 13903  002C3C                     l9131:
 13904                           
 13905                           ; BSR set to: 1
 13906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13907  002C3C  0E00               	movlw	0
 13908  002C3E  6E44               	movwf	(dtoa@i+1)^0,c
 13909  002C40  0E4F               	movlw	79
 13910  002C42  6E43               	movwf	dtoa@i^0,c
 13911  002C44                     
 13912                           ; BSR set to: 1
 13913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13914  002C44  0E00               	movlw	0
 13915  002C46  6F90               	movwf	(_dbuf+79)& (0+255),b
 13916                           
 13917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13918  002C48  EFA2  F016         	goto	l9145
 13919  002C4C                     l9135:
 13920                           
 13921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13922  002C4C  0643               	decf	dtoa@i^0,f,c
 13923  002C4E  A0D8               	btfss	status,0,c
 13924  002C50  0644               	decf	(dtoa@i+1)^0,f,c
 13925  002C52                     
 13926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13927  002C52  0E41               	movlw	low _dbuf
 13928  002C54  2443               	addwf	dtoa@i^0,w,c
 13929  002C56  6ED9               	movwf	fsr2l,c
 13930  002C58  0E01               	movlw	high _dbuf
 13931  002C5A  2044               	addwfc	(dtoa@i+1)^0,w,c
 13932  002C5C  6EDA               	movwf	fsr2h,c
 13933  002C5E  C03B  F006         	movff	dtoa@n,___aomod@dividend
 13934  002C62  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
 13935  002C66  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
 13936  002C6A  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
 13937  002C6E  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 13938  002C72  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 13939  002C76  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 13940  002C7A  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 13941  002C7E  0E0A               	movlw	10
 13942  002C80  6E0E               	movwf	___aomod@divisor^0,c
 13943  002C82  0E00               	movlw	0
 13944  002C84  6E0F               	movwf	(___aomod@divisor+1)^0,c
 13945  002C86  0E00               	movlw	0
 13946  002C88  6E10               	movwf	(___aomod@divisor+2)^0,c
 13947  002C8A  0E00               	movlw	0
 13948  002C8C  6E11               	movwf	(___aomod@divisor+3)^0,c
 13949  002C8E  0E00               	movlw	0
 13950  002C90  6E12               	movwf	(___aomod@divisor+4)^0,c
 13951  002C92  0E00               	movlw	0
 13952  002C94  6E13               	movwf	(___aomod@divisor+5)^0,c
 13953  002C96  0E00               	movlw	0
 13954  002C98  6E14               	movwf	(___aomod@divisor+6)^0,c
 13955  002C9A  0E00               	movlw	0
 13956  002C9C  6E15               	movwf	(___aomod@divisor+7)^0,c
 13957  002C9E  EC20  F01E         	call	___aomod	;wreg free
 13958  002CA2  C006  F02B         	movff	?___aomod,??_dtoa
 13959  002CA6  C007  F02C         	movff	?___aomod+1,??_dtoa+1
 13960  002CAA  C008  F02D         	movff	?___aomod+2,??_dtoa+2
 13961  002CAE  C009  F02E         	movff	?___aomod+3,??_dtoa+3
 13962  002CB2  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
 13963  002CB6  C00B  F030         	movff	?___aomod+5,??_dtoa+5
 13964  002CBA  C00C  F031         	movff	?___aomod+6,??_dtoa+6
 13965  002CBE  C00D  F032         	movff	?___aomod+7,??_dtoa+7
 13966  002CC2  C02B  F018         	movff	??_dtoa,abs@a
 13967  002CC6  C02D  F019         	movff	??_dtoa+2,abs@a+1
 13968  002CCA  ECB8  F02A         	call	_abs	;wreg free
 13969  002CCE  5018               	movf	?_abs^0,w,c
 13970  002CD0  0F30               	addlw	48
 13971  002CD2  6EDF               	movwf	indf2,c
 13972  002CD4                     
 13973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13974  002CD4  0635               	decf	dtoa@p^0,f,c
 13975  002CD6  A0D8               	btfss	status,0,c
 13976  002CD8  0636               	decf	(dtoa@p+1)^0,f,c
 13977  002CDA                     
 13978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13979  002CDA  0637               	decf	dtoa@w^0,f,c
 13980  002CDC  A0D8               	btfss	status,0,c
 13981  002CDE  0638               	decf	(dtoa@w+1)^0,f,c
 13982  002CE0                     
 13983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13984  002CE0  C03B  F006         	movff	dtoa@n,___aodiv@dividend
 13985  002CE4  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 13986  002CE8  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 13987  002CEC  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 13988  002CF0  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 13989  002CF4  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 13990  002CF8  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 13991  002CFC  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 13992  002D00  0E0A               	movlw	10
 13993  002D02  6E0E               	movwf	___aodiv@divisor^0,c
 13994  002D04  0E00               	movlw	0
 13995  002D06  6E0F               	movwf	(___aodiv@divisor+1)^0,c
 13996  002D08  0E00               	movlw	0
 13997  002D0A  6E10               	movwf	(___aodiv@divisor+2)^0,c
 13998  002D0C  0E00               	movlw	0
 13999  002D0E  6E11               	movwf	(___aodiv@divisor+3)^0,c
 14000  002D10  0E00               	movlw	0
 14001  002D12  6E12               	movwf	(___aodiv@divisor+4)^0,c
 14002  002D14  0E00               	movlw	0
 14003  002D16  6E13               	movwf	(___aodiv@divisor+5)^0,c
 14004  002D18  0E00               	movlw	0
 14005  002D1A  6E14               	movwf	(___aodiv@divisor+6)^0,c
 14006  002D1C  0E00               	movlw	0
 14007  002D1E  6E15               	movwf	(___aodiv@divisor+7)^0,c
 14008  002D20  EC9E  F01C         	call	___aodiv	;wreg free
 14009  002D24  C006  F03B         	movff	?___aodiv,dtoa@n
 14010  002D28  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
 14011  002D2C  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
 14012  002D30  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
 14013  002D34  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
 14014  002D38  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
 14015  002D3C  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
 14016  002D40  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
 14017  002D44                     l9145:
 14018                           
 14019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14020  002D44  BE44               	btfsc	(dtoa@i+1)^0,7,c
 14021  002D46  EFAD  F016         	goto	u9921
 14022  002D4A  5044               	movf	(dtoa@i+1)^0,w,c
 14023  002D4C  E108               	bnz	u9920
 14024  002D4E  0443               	decf	dtoa@i^0,w,c
 14025  002D50  A0D8               	btfss	status,0,c
 14026  002D52  EFAD  F016         	goto	u9921
 14027  002D56  EFAF  F016         	goto	u9920
 14028  002D5A                     u9921:
 14029  002D5A  EFDF  F016         	goto	l9155
 14030  002D5E                     u9920:
 14031  002D5E  503B               	movf	dtoa@n^0,w,c
 14032  002D60  103C               	iorwf	(dtoa@n+1)^0,w,c
 14033  002D62  103D               	iorwf	(dtoa@n+2)^0,w,c
 14034  002D64  103E               	iorwf	(dtoa@n+3)^0,w,c
 14035  002D66  103F               	iorwf	(dtoa@n+4)^0,w,c
 14036  002D68  1040               	iorwf	(dtoa@n+5)^0,w,c
 14037  002D6A  1041               	iorwf	(dtoa@n+6)^0,w,c
 14038  002D6C  1042               	iorwf	(dtoa@n+7)^0,w,c
 14039  002D6E  A4D8               	btfss	status,2,c
 14040  002D70  EFBC  F016         	goto	u9931
 14041  002D74  EFBE  F016         	goto	u9930
 14042  002D78                     u9931:
 14043  002D78  EF26  F016         	goto	l9135
 14044  002D7C                     u9930:
 14045  002D7C  BE36               	btfsc	(dtoa@p+1)^0,7,c
 14046  002D7E  EFCB  F016         	goto	u9940
 14047  002D82  5036               	movf	(dtoa@p+1)^0,w,c
 14048  002D84  E106               	bnz	u9941
 14049  002D86  0435               	decf	dtoa@p^0,w,c
 14050  002D88  B0D8               	btfsc	status,0,c
 14051  002D8A  EFC9  F016         	goto	u9941
 14052  002D8E  EFCB  F016         	goto	u9940
 14053  002D92                     u9941:
 14054  002D92  EF26  F016         	goto	l9135
 14055  002D96                     u9940:
 14056  002D96  BE38               	btfsc	(dtoa@w+1)^0,7,c
 14057  002D98  EFD6  F016         	goto	u9951
 14058  002D9C  5038               	movf	(dtoa@w+1)^0,w,c
 14059  002D9E  E108               	bnz	u9950
 14060  002DA0  0437               	decf	dtoa@w^0,w,c
 14061  002DA2  A0D8               	btfss	status,0,c
 14062  002DA4  EFD6  F016         	goto	u9951
 14063  002DA8  EFD8  F016         	goto	u9950
 14064  002DAC                     u9951:
 14065  002DAC  EFDF  F016         	goto	l9155
 14066  002DB0                     u9950:
 14067  002DB0  B255               	btfsc	_flags^0,1,c
 14068  002DB2  EFDD  F016         	goto	u9961
 14069  002DB6  EFDF  F016         	goto	u9960
 14070  002DBA                     u9961:
 14071  002DBA  EF26  F016         	goto	l9135
 14072  002DBE                     u9960:
 14073  002DBE                     l9155:
 14074                           
 14075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 14076  002DBE  5039               	movf	dtoa@s^0,w,c
 14077  002DC0  103A               	iorwf	(dtoa@s+1)^0,w,c
 14078  002DC2  A4D8               	btfss	status,2,c
 14079  002DC4  EFE6  F016         	goto	u9971
 14080  002DC8  EFE8  F016         	goto	u9970
 14081  002DCC                     u9971:
 14082  002DCC  EFEF  F016         	goto	l9159
 14083  002DD0                     u9970:
 14084  002DD0  A455               	btfss	_flags^0,2,c
 14085  002DD2  EFED  F016         	goto	u9981
 14086  002DD6  EFEF  F016         	goto	u9980
 14087  002DDA                     u9981:
 14088  002DDA  EF0D  F017         	goto	l9169
 14089  002DDE                     u9980:
 14090  002DDE                     l9159:
 14091                           
 14092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 14093  002DDE  0643               	decf	dtoa@i^0,f,c
 14094  002DE0  A0D8               	btfss	status,0,c
 14095  002DE2  0644               	decf	(dtoa@i+1)^0,f,c
 14096  002DE4                     
 14097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 14098  002DE4  5039               	movf	dtoa@s^0,w,c
 14099  002DE6  103A               	iorwf	(dtoa@s+1)^0,w,c
 14100  002DE8  A4D8               	btfss	status,2,c
 14101  002DEA  EFF9  F016         	goto	u9991
 14102  002DEE  EFFB  F016         	goto	u9990
 14103  002DF2                     u9991:
 14104  002DF2  EF01  F017         	goto	l9165
 14105  002DF6                     u9990:
 14106  002DF6  0E00               	movlw	0
 14107  002DF8  6E34               	movwf	(_dtoa$917+1)^0,c
 14108  002DFA  0E2B               	movlw	43
 14109  002DFC  6E33               	movwf	_dtoa$917^0,c
 14110  002DFE  EF05  F017         	goto	l9167
 14111  002E02                     l9165:
 14112  002E02  0E00               	movlw	0
 14113  002E04  6E34               	movwf	(_dtoa$917+1)^0,c
 14114  002E06  0E2D               	movlw	45
 14115  002E08  6E33               	movwf	_dtoa$917^0,c
 14116  002E0A                     l9167:
 14117  002E0A  0E41               	movlw	low _dbuf
 14118  002E0C  2443               	addwf	dtoa@i^0,w,c
 14119  002E0E  6ED9               	movwf	fsr2l,c
 14120  002E10  0E01               	movlw	high _dbuf
 14121  002E12  2044               	addwfc	(dtoa@i+1)^0,w,c
 14122  002E14  6EDA               	movwf	fsr2h,c
 14123  002E16  C033  FFDF         	movff	_dtoa$917,indf2
 14124  002E1A                     l9169:
 14125                           
 14126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 14127  002E1A  C021  F016         	movff	dtoa@fp,pad@fp
 14128  002E1E  C022  F017         	movff	dtoa@fp+1,pad@fp+1
 14129  002E22  0E41               	movlw	low _dbuf
 14130  002E24  2443               	addwf	dtoa@i^0,w,c
 14131  002E26  6E18               	movwf	pad@buf^0,c
 14132  002E28  0E01               	movlw	high _dbuf
 14133  002E2A  2044               	addwfc	(dtoa@i+1)^0,w,c
 14134  002E2C  6E19               	movwf	(pad@buf+1)^0,c
 14135  002E2E  C037  F01A         	movff	dtoa@w,pad@p
 14136  002E32  C038  F01B         	movff	dtoa@w+1,pad@p+1
 14137  002E36  EC44  F023         	call	_pad	;wreg free
 14138  002E3A  C016  F021         	movff	?_pad,?_dtoa
 14139  002E3E  C017  F022         	movff	?_pad+1,?_dtoa+1
 14140  002E42  0012               	return		;funcret
 14141  002E44                     __end_of_dtoa:
 14142                           	opt callstack 0
 14143                           
 14144 ;; *************** function _abs *****************
 14145 ;; Defined at:
 14146 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 14147 ;; Parameters:    Size  Location     Type
 14148 ;;  a               2   23[COMRAM] int 
 14149 ;; Auto vars:     Size  Location     Type
 14150 ;;		None
 14151 ;; Return value:  Size  Location     Type
 14152 ;;                  2   23[COMRAM] int 
 14153 ;; Registers used:
 14154 ;;		wreg, status,2, status,0
 14155 ;; Tracked objects:
 14156 ;;		On entry : 0/0
 14157 ;;		On exit  : 0/0
 14158 ;;		Unchanged: 0/0
 14159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14160 ;;      Params:         2       0       0       0       0       0       0       0       0
 14161 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14162 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14163 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14164 ;;Total ram usage:        4 bytes
 14165 ;; Hardware stack levels used:    1
 14166 ;; Hardware stack levels required when called:    2
 14167 ;; This function calls:
 14168 ;;		Nothing
 14169 ;; This function is called by:
 14170 ;;		_dtoa
 14171 ;; This function uses a non-reentrant model
 14172 ;;
 14173                           
 14174                           	psect	text52
 14175  005570                     __ptext52:
 14176                           	opt callstack 0
 14177  005570                     _abs:
 14178                           	opt callstack 23
 14179  005570  BE19               	btfsc	(abs@a+1)^0,7,c
 14180  005572  EFC5  F02A         	goto	u8610
 14181  005576  5019               	movf	(abs@a+1)^0,w,c
 14182  005578  E106               	bnz	u8611
 14183  00557A  0418               	decf	abs@a^0,w,c
 14184  00557C  B0D8               	btfsc	status,0,c
 14185  00557E  EFC3  F02A         	goto	u8611
 14186  005582  EFC5  F02A         	goto	u8610
 14187  005586                     u8611:
 14188  005586  EFD3  F02A         	goto	l1647
 14189  00558A                     u8610:
 14190  00558A  C018  F01A         	movff	abs@a,??_abs
 14191  00558E  C019  F01B         	movff	abs@a+1,??_abs+1
 14192  005592  1E1A               	comf	??_abs^0,f,c
 14193  005594  1E1B               	comf	(??_abs+1)^0,f,c
 14194  005596  4A1A               	infsnz	??_abs^0,f,c
 14195  005598  2A1B               	incf	(??_abs+1)^0,f,c
 14196  00559A  C01A  F018         	movff	??_abs,?_abs
 14197  00559E  C01B  F019         	movff	??_abs+1,?_abs+1
 14198  0055A2  EFD7  F02A         	goto	l1650
 14199  0055A6                     l1647:
 14200  0055A6  C018  F018         	movff	abs@a,?_abs
 14201  0055AA  C019  F019         	movff	abs@a+1,?_abs+1
 14202  0055AE                     l1650:
 14203  0055AE  0012               	return		;funcret
 14204  0055B0                     __end_of_abs:
 14205                           	opt callstack 0
 14206                           
 14207 ;; *************** function ___aomod *****************
 14208 ;; Defined at:
 14209 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 14210 ;; Parameters:    Size  Location     Type
 14211 ;;  dividend        8    5[COMRAM] long long 
 14212 ;;  divisor         8   13[COMRAM] long long 
 14213 ;; Auto vars:     Size  Location     Type
 14214 ;;  sign            1   22[COMRAM] unsigned char 
 14215 ;;  counter         1   21[COMRAM] unsigned char 
 14216 ;; Return value:  Size  Location     Type
 14217 ;;                  8    5[COMRAM] long long 
 14218 ;; Registers used:
 14219 ;;		wreg, status,2, status,0
 14220 ;; Tracked objects:
 14221 ;;		On entry : 0/0
 14222 ;;		On exit  : 0/0
 14223 ;;		Unchanged: 0/0
 14224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14225 ;;      Params:        16       0       0       0       0       0       0       0       0
 14226 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14227 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14228 ;;      Totals:        18       0       0       0       0       0       0       0       0
 14229 ;;Total ram usage:       18 bytes
 14230 ;; Hardware stack levels used:    1
 14231 ;; Hardware stack levels required when called:    2
 14232 ;; This function calls:
 14233 ;;		Nothing
 14234 ;; This function is called by:
 14235 ;;		_dtoa
 14236 ;; This function uses a non-reentrant model
 14237 ;;
 14238                           
 14239                           	psect	text53
 14240  003C40                     __ptext53:
 14241                           	opt callstack 0
 14242  003C40                     ___aomod:
 14243                           	opt callstack 23
 14244  003C40  0E00               	movlw	0
 14245  003C42  6E17               	movwf	___aomod@sign^0,c
 14246  003C44  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
 14247  003C46  EF29  F01E         	goto	u8930
 14248  003C4A  EF27  F01E         	goto	u8931
 14249  003C4E                     u8931:
 14250  003C4E  EF3B  F01E         	goto	l8549
 14251  003C52                     u8930:
 14252  003C52  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 14253  003C54  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 14254  003C56  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 14255  003C58  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 14256  003C5A  1E09               	comf	(___aomod@dividend+3)^0,f,c
 14257  003C5C  1E08               	comf	(___aomod@dividend+2)^0,f,c
 14258  003C5E  1E07               	comf	(___aomod@dividend+1)^0,f,c
 14259  003C60  6C06               	negf	___aomod@dividend^0,c
 14260  003C62  0E00               	movlw	0
 14261  003C64  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 14262  003C66  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 14263  003C68  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 14264  003C6A  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 14265  003C6C  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 14266  003C6E  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 14267  003C70  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 14268  003C72  0E01               	movlw	1
 14269  003C74  6E17               	movwf	___aomod@sign^0,c
 14270  003C76                     l8549:
 14271  003C76  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
 14272  003C78  EF42  F01E         	goto	u8940
 14273  003C7C  EF40  F01E         	goto	u8941
 14274  003C80                     u8941:
 14275  003C80  EF52  F01E         	goto	l8553
 14276  003C84                     u8940:
 14277  003C84  1E15               	comf	(___aomod@divisor+7)^0,f,c
 14278  003C86  1E14               	comf	(___aomod@divisor+6)^0,f,c
 14279  003C88  1E13               	comf	(___aomod@divisor+5)^0,f,c
 14280  003C8A  1E12               	comf	(___aomod@divisor+4)^0,f,c
 14281  003C8C  1E11               	comf	(___aomod@divisor+3)^0,f,c
 14282  003C8E  1E10               	comf	(___aomod@divisor+2)^0,f,c
 14283  003C90  1E0F               	comf	(___aomod@divisor+1)^0,f,c
 14284  003C92  6C0E               	negf	___aomod@divisor^0,c
 14285  003C94  0E00               	movlw	0
 14286  003C96  220F               	addwfc	(___aomod@divisor+1)^0,f,c
 14287  003C98  2210               	addwfc	(___aomod@divisor+2)^0,f,c
 14288  003C9A  2211               	addwfc	(___aomod@divisor+3)^0,f,c
 14289  003C9C  2212               	addwfc	(___aomod@divisor+4)^0,f,c
 14290  003C9E  2213               	addwfc	(___aomod@divisor+5)^0,f,c
 14291  003CA0  2214               	addwfc	(___aomod@divisor+6)^0,f,c
 14292  003CA2  2215               	addwfc	(___aomod@divisor+7)^0,f,c
 14293  003CA4                     l8553:
 14294  003CA4  500E               	movf	___aomod@divisor^0,w,c
 14295  003CA6  100F               	iorwf	(___aomod@divisor+1)^0,w,c
 14296  003CA8  1010               	iorwf	(___aomod@divisor+2)^0,w,c
 14297  003CAA  1011               	iorwf	(___aomod@divisor+3)^0,w,c
 14298  003CAC  1012               	iorwf	(___aomod@divisor+4)^0,w,c
 14299  003CAE  1013               	iorwf	(___aomod@divisor+5)^0,w,c
 14300  003CB0  1014               	iorwf	(___aomod@divisor+6)^0,w,c
 14301  003CB2  1015               	iorwf	(___aomod@divisor+7)^0,w,c
 14302  003CB4  B4D8               	btfsc	status,2,c
 14303  003CB6  EF5F  F01E         	goto	u8951
 14304  003CBA  EF61  F01E         	goto	u8950
 14305  003CBE                     u8951:
 14306  003CBE  EFA9  F01E         	goto	l8569
 14307  003CC2                     u8950:
 14308  003CC2  0E01               	movlw	1
 14309  003CC4  6E16               	movwf	___aomod@counter^0,c
 14310  003CC6  EF6F  F01E         	goto	l8559
 14311  003CCA                     l8557:
 14312  003CCA  90D8               	bcf	status,0,c
 14313  003CCC  360E               	rlcf	___aomod@divisor^0,f,c
 14314  003CCE  360F               	rlcf	(___aomod@divisor+1)^0,f,c
 14315  003CD0  3610               	rlcf	(___aomod@divisor+2)^0,f,c
 14316  003CD2  3611               	rlcf	(___aomod@divisor+3)^0,f,c
 14317  003CD4  3612               	rlcf	(___aomod@divisor+4)^0,f,c
 14318  003CD6  3613               	rlcf	(___aomod@divisor+5)^0,f,c
 14319  003CD8  3614               	rlcf	(___aomod@divisor+6)^0,f,c
 14320  003CDA  3615               	rlcf	(___aomod@divisor+7)^0,f,c
 14321  003CDC  2A16               	incf	___aomod@counter^0,f,c
 14322  003CDE                     l8559:
 14323  003CDE  AE15               	btfss	(___aomod@divisor+7)^0,7,c
 14324  003CE0  EF74  F01E         	goto	u8961
 14325  003CE4  EF76  F01E         	goto	u8960
 14326  003CE8                     u8961:
 14327  003CE8  EF65  F01E         	goto	l8557
 14328  003CEC                     u8960:
 14329  003CEC                     l8561:
 14330  003CEC  500E               	movf	___aomod@divisor^0,w,c
 14331  003CEE  5C06               	subwf	___aomod@dividend^0,w,c
 14332  003CF0  500F               	movf	(___aomod@divisor+1)^0,w,c
 14333  003CF2  5807               	subwfb	(___aomod@dividend+1)^0,w,c
 14334  003CF4  5010               	movf	(___aomod@divisor+2)^0,w,c
 14335  003CF6  5808               	subwfb	(___aomod@dividend+2)^0,w,c
 14336  003CF8  5011               	movf	(___aomod@divisor+3)^0,w,c
 14337  003CFA  5809               	subwfb	(___aomod@dividend+3)^0,w,c
 14338  003CFC  5012               	movf	(___aomod@divisor+4)^0,w,c
 14339  003CFE  580A               	subwfb	(___aomod@dividend+4)^0,w,c
 14340  003D00  5013               	movf	(___aomod@divisor+5)^0,w,c
 14341  003D02  580B               	subwfb	(___aomod@dividend+5)^0,w,c
 14342  003D04  5014               	movf	(___aomod@divisor+6)^0,w,c
 14343  003D06  580C               	subwfb	(___aomod@dividend+6)^0,w,c
 14344  003D08  5015               	movf	(___aomod@divisor+7)^0,w,c
 14345  003D0A  580D               	subwfb	(___aomod@dividend+7)^0,w,c
 14346  003D0C  A0D8               	btfss	status,0,c
 14347  003D0E  EF8B  F01E         	goto	u8971
 14348  003D12  EF8D  F01E         	goto	u8970
 14349  003D16                     u8971:
 14350  003D16  EF9D  F01E         	goto	l8565
 14351  003D1A                     u8970:
 14352  003D1A  500E               	movf	___aomod@divisor^0,w,c
 14353  003D1C  5E06               	subwf	___aomod@dividend^0,f,c
 14354  003D1E  500F               	movf	(___aomod@divisor+1)^0,w,c
 14355  003D20  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
 14356  003D22  5010               	movf	(___aomod@divisor+2)^0,w,c
 14357  003D24  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
 14358  003D26  5011               	movf	(___aomod@divisor+3)^0,w,c
 14359  003D28  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
 14360  003D2A  5012               	movf	(___aomod@divisor+4)^0,w,c
 14361  003D2C  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
 14362  003D2E  5013               	movf	(___aomod@divisor+5)^0,w,c
 14363  003D30  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
 14364  003D32  5014               	movf	(___aomod@divisor+6)^0,w,c
 14365  003D34  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
 14366  003D36  5015               	movf	(___aomod@divisor+7)^0,w,c
 14367  003D38  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
 14368  003D3A                     l8565:
 14369  003D3A  90D8               	bcf	status,0,c
 14370  003D3C  3215               	rrcf	(___aomod@divisor+7)^0,f,c
 14371  003D3E  3214               	rrcf	(___aomod@divisor+6)^0,f,c
 14372  003D40  3213               	rrcf	(___aomod@divisor+5)^0,f,c
 14373  003D42  3212               	rrcf	(___aomod@divisor+4)^0,f,c
 14374  003D44  3211               	rrcf	(___aomod@divisor+3)^0,f,c
 14375  003D46  3210               	rrcf	(___aomod@divisor+2)^0,f,c
 14376  003D48  320F               	rrcf	(___aomod@divisor+1)^0,f,c
 14377  003D4A  320E               	rrcf	___aomod@divisor^0,f,c
 14378  003D4C  2E16               	decfsz	___aomod@counter^0,f,c
 14379  003D4E  EF76  F01E         	goto	l8561
 14380  003D52                     l8569:
 14381  003D52  5017               	movf	___aomod@sign^0,w,c
 14382  003D54  B4D8               	btfsc	status,2,c
 14383  003D56  EFAF  F01E         	goto	u8981
 14384  003D5A  EFB1  F01E         	goto	u8980
 14385  003D5E                     u8981:
 14386  003D5E  EFC1  F01E         	goto	l8573
 14387  003D62                     u8980:
 14388  003D62  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 14389  003D64  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 14390  003D66  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 14391  003D68  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 14392  003D6A  1E09               	comf	(___aomod@dividend+3)^0,f,c
 14393  003D6C  1E08               	comf	(___aomod@dividend+2)^0,f,c
 14394  003D6E  1E07               	comf	(___aomod@dividend+1)^0,f,c
 14395  003D70  6C06               	negf	___aomod@dividend^0,c
 14396  003D72  0E00               	movlw	0
 14397  003D74  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 14398  003D76  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 14399  003D78  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 14400  003D7A  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 14401  003D7C  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 14402  003D7E  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 14403  003D80  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 14404  003D82                     l8573:
 14405  003D82  C006  F006         	movff	___aomod@dividend,?___aomod
 14406  003D86  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 14407  003D8A  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 14408  003D8E  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 14409  003D92  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 14410  003D96  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 14411  003D9A  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 14412  003D9E  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 14413  003DA2  0012               	return		;funcret
 14414  003DA4                     __end_of___aomod:
 14415                           	opt callstack 0
 14416                           
 14417 ;; *************** function ___aodiv *****************
 14418 ;; Defined at:
 14419 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14420 ;; Parameters:    Size  Location     Type
 14421 ;;  dividend        8    5[COMRAM] long long 
 14422 ;;  divisor         8   13[COMRAM] long long 
 14423 ;; Auto vars:     Size  Location     Type
 14424 ;;  quotient        8   23[COMRAM] long long 
 14425 ;;  sign            1   22[COMRAM] unsigned char 
 14426 ;;  counter         1   21[COMRAM] unsigned char 
 14427 ;; Return value:  Size  Location     Type
 14428 ;;                  8    5[COMRAM] long long 
 14429 ;; Registers used:
 14430 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14431 ;; Tracked objects:
 14432 ;;		On entry : 0/0
 14433 ;;		On exit  : 0/0
 14434 ;;		Unchanged: 0/0
 14435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14436 ;;      Params:        16       0       0       0       0       0       0       0       0
 14437 ;;      Locals:        10       0       0       0       0       0       0       0       0
 14438 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14439 ;;      Totals:        26       0       0       0       0       0       0       0       0
 14440 ;;Total ram usage:       26 bytes
 14441 ;; Hardware stack levels used:    1
 14442 ;; Hardware stack levels required when called:    2
 14443 ;; This function calls:
 14444 ;;		Nothing
 14445 ;; This function is called by:
 14446 ;;		_dtoa
 14447 ;; This function uses a non-reentrant model
 14448 ;;
 14449                           
 14450                           	psect	text54
 14451  00393C                     __ptext54:
 14452                           	opt callstack 0
 14453  00393C                     ___aodiv:
 14454                           	opt callstack 23
 14455  00393C  0E00               	movlw	0
 14456  00393E  6E17               	movwf	___aodiv@sign^0,c
 14457  003940  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
 14458  003942  EFA7  F01C         	goto	u8860
 14459  003946  EFA5  F01C         	goto	u8861
 14460  00394A                     u8861:
 14461  00394A  EFB9  F01C         	goto	l8505
 14462  00394E                     u8860:
 14463  00394E  1E15               	comf	(___aodiv@divisor+7)^0,f,c
 14464  003950  1E14               	comf	(___aodiv@divisor+6)^0,f,c
 14465  003952  1E13               	comf	(___aodiv@divisor+5)^0,f,c
 14466  003954  1E12               	comf	(___aodiv@divisor+4)^0,f,c
 14467  003956  1E11               	comf	(___aodiv@divisor+3)^0,f,c
 14468  003958  1E10               	comf	(___aodiv@divisor+2)^0,f,c
 14469  00395A  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
 14470  00395C  6C0E               	negf	___aodiv@divisor^0,c
 14471  00395E  0E00               	movlw	0
 14472  003960  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
 14473  003962  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
 14474  003964  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
 14475  003966  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
 14476  003968  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
 14477  00396A  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
 14478  00396C  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
 14479  00396E  0E01               	movlw	1
 14480  003970  6E17               	movwf	___aodiv@sign^0,c
 14481  003972                     l8505:
 14482  003972  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
 14483  003974  EFC0  F01C         	goto	u8870
 14484  003978  EFBE  F01C         	goto	u8871
 14485  00397C                     u8871:
 14486  00397C  EFD2  F01C         	goto	l8511
 14487  003980                     u8870:
 14488  003980  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
 14489  003982  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
 14490  003984  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
 14491  003986  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
 14492  003988  1E09               	comf	(___aodiv@dividend+3)^0,f,c
 14493  00398A  1E08               	comf	(___aodiv@dividend+2)^0,f,c
 14494  00398C  1E07               	comf	(___aodiv@dividend+1)^0,f,c
 14495  00398E  6C06               	negf	___aodiv@dividend^0,c
 14496  003990  0E00               	movlw	0
 14497  003992  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
 14498  003994  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
 14499  003996  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
 14500  003998  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
 14501  00399A  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
 14502  00399C  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
 14503  00399E  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
 14504  0039A0  0E01               	movlw	1
 14505  0039A2  1A17               	xorwf	___aodiv@sign^0,f,c
 14506  0039A4                     l8511:
 14507  0039A4  EE20  F018         	lfsr	2,___aodiv@quotient
 14508  0039A8  0E07               	movlw	7
 14509  0039AA                     u8881:
 14510  0039AA  6ADE               	clrf	postinc2,c
 14511  0039AC  06E8               	decf	wreg,f,c
 14512  0039AE  E2FD               	bc	u8881
 14513  0039B0  500E               	movf	___aodiv@divisor^0,w,c
 14514  0039B2  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
 14515  0039B4  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
 14516  0039B6  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
 14517  0039B8  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
 14518  0039BA  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
 14519  0039BC  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
 14520  0039BE  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
 14521  0039C0  B4D8               	btfsc	status,2,c
 14522  0039C2  EFE5  F01C         	goto	u8891
 14523  0039C6  EFE7  F01C         	goto	u8890
 14524  0039CA                     u8891:
 14525  0039CA  EF39  F01D         	goto	l8533
 14526  0039CE                     u8890:
 14527  0039CE  0E01               	movlw	1
 14528  0039D0  6E16               	movwf	___aodiv@counter^0,c
 14529  0039D2  EFF5  F01C         	goto	l8519
 14530  0039D6                     l8517:
 14531  0039D6  90D8               	bcf	status,0,c
 14532  0039D8  360E               	rlcf	___aodiv@divisor^0,f,c
 14533  0039DA  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
 14534  0039DC  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
 14535  0039DE  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
 14536  0039E0  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
 14537  0039E2  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
 14538  0039E4  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
 14539  0039E6  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
 14540  0039E8  2A16               	incf	___aodiv@counter^0,f,c
 14541  0039EA                     l8519:
 14542  0039EA  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
 14543  0039EC  EFFA  F01C         	goto	u8901
 14544  0039F0  EFFC  F01C         	goto	u8900
 14545  0039F4                     u8901:
 14546  0039F4  EFEB  F01C         	goto	l8517
 14547  0039F8                     u8900:
 14548  0039F8                     l8521:
 14549  0039F8  90D8               	bcf	status,0,c
 14550  0039FA  3618               	rlcf	___aodiv@quotient^0,f,c
 14551  0039FC  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
 14552  0039FE  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
 14553  003A00  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
 14554  003A02  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
 14555  003A04  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
 14556  003A06  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
 14557  003A08  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
 14558  003A0A  500E               	movf	___aodiv@divisor^0,w,c
 14559  003A0C  5C06               	subwf	___aodiv@dividend^0,w,c
 14560  003A0E  500F               	movf	(___aodiv@divisor+1)^0,w,c
 14561  003A10  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
 14562  003A12  5010               	movf	(___aodiv@divisor+2)^0,w,c
 14563  003A14  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
 14564  003A16  5011               	movf	(___aodiv@divisor+3)^0,w,c
 14565  003A18  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
 14566  003A1A  5012               	movf	(___aodiv@divisor+4)^0,w,c
 14567  003A1C  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
 14568  003A1E  5013               	movf	(___aodiv@divisor+5)^0,w,c
 14569  003A20  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
 14570  003A22  5014               	movf	(___aodiv@divisor+6)^0,w,c
 14571  003A24  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
 14572  003A26  5015               	movf	(___aodiv@divisor+7)^0,w,c
 14573  003A28  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
 14574  003A2A  A0D8               	btfss	status,0,c
 14575  003A2C  EF1A  F01D         	goto	u8911
 14576  003A30  EF1C  F01D         	goto	u8910
 14577  003A34                     u8911:
 14578  003A34  EF2D  F01D         	goto	l8529
 14579  003A38                     u8910:
 14580  003A38  500E               	movf	___aodiv@divisor^0,w,c
 14581  003A3A  5E06               	subwf	___aodiv@dividend^0,f,c
 14582  003A3C  500F               	movf	(___aodiv@divisor+1)^0,w,c
 14583  003A3E  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
 14584  003A40  5010               	movf	(___aodiv@divisor+2)^0,w,c
 14585  003A42  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
 14586  003A44  5011               	movf	(___aodiv@divisor+3)^0,w,c
 14587  003A46  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
 14588  003A48  5012               	movf	(___aodiv@divisor+4)^0,w,c
 14589  003A4A  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
 14590  003A4C  5013               	movf	(___aodiv@divisor+5)^0,w,c
 14591  003A4E  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
 14592  003A50  5014               	movf	(___aodiv@divisor+6)^0,w,c
 14593  003A52  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
 14594  003A54  5015               	movf	(___aodiv@divisor+7)^0,w,c
 14595  003A56  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
 14596  003A58  8018               	bsf	___aodiv@quotient^0,0,c
 14597  003A5A                     l8529:
 14598  003A5A  90D8               	bcf	status,0,c
 14599  003A5C  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
 14600  003A5E  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
 14601  003A60  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
 14602  003A62  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
 14603  003A64  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
 14604  003A66  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
 14605  003A68  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
 14606  003A6A  320E               	rrcf	___aodiv@divisor^0,f,c
 14607  003A6C  2E16               	decfsz	___aodiv@counter^0,f,c
 14608  003A6E  EFFC  F01C         	goto	l8521
 14609  003A72                     l8533:
 14610  003A72  5017               	movf	___aodiv@sign^0,w,c
 14611  003A74  B4D8               	btfsc	status,2,c
 14612  003A76  EF3F  F01D         	goto	u8921
 14613  003A7A  EF41  F01D         	goto	u8920
 14614  003A7E                     u8921:
 14615  003A7E  EF51  F01D         	goto	l8537
 14616  003A82                     u8920:
 14617  003A82  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
 14618  003A84  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
 14619  003A86  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
 14620  003A88  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
 14621  003A8A  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
 14622  003A8C  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
 14623  003A8E  1E19               	comf	(___aodiv@quotient+1)^0,f,c
 14624  003A90  6C18               	negf	___aodiv@quotient^0,c
 14625  003A92  0E00               	movlw	0
 14626  003A94  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
 14627  003A96  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
 14628  003A98  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
 14629  003A9A  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
 14630  003A9C  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
 14631  003A9E  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
 14632  003AA0  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
 14633  003AA2                     l8537:
 14634  003AA2  C018  F006         	movff	___aodiv@quotient,?___aodiv
 14635  003AA6  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 14636  003AAA  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 14637  003AAE  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 14638  003AB2  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 14639  003AB6  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 14640  003ABA  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 14641  003ABE  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 14642  003AC2  0012               	return		;funcret
 14643  003AC4                     __end_of___aodiv:
 14644                           	opt callstack 0
 14645                           
 14646 ;; *************** function _ctoa *****************
 14647 ;; Defined at:
 14648 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14649 ;; Parameters:    Size  Location     Type
 14650 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 14651 ;;		 -> sprintf@f(6), 
 14652 ;;  c               1   34[COMRAM] unsigned char 
 14653 ;; Auto vars:     Size  Location     Type
 14654 ;;  w               2   35[COMRAM] int 
 14655 ;;  l               2    0        int 
 14656 ;; Return value:  Size  Location     Type
 14657 ;;                  2   32[COMRAM] int 
 14658 ;; Registers used:
 14659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14660 ;; Tracked objects:
 14661 ;;		On entry : 0/0
 14662 ;;		On exit  : 0/0
 14663 ;;		Unchanged: 0/0
 14664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14665 ;;      Params:         3       0       0       0       0       0       0       0       0
 14666 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14667 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14668 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14669 ;;Total ram usage:        5 bytes
 14670 ;; Hardware stack levels used:    1
 14671 ;; Hardware stack levels required when called:    6
 14672 ;; This function calls:
 14673 ;;		_pad
 14674 ;; This function is called by:
 14675 ;;		_vfpfcnvrt
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679                           	psect	text55
 14680  0050F4                     __ptext55:
 14681                           	opt callstack 0
 14682  0050F4                     _ctoa:
 14683                           	opt callstack 20
 14684  0050F4                     
 14685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14686  0050F4  0101               	movlb	1	; () banked
 14687  0050F6  5132               	movf	_width& (0+255),w,b
 14688  0050F8  1133               	iorwf	(_width+1)& (0+255),w,b
 14689  0050FA  A4D8               	btfss	status,2,c
 14690  0050FC  EF82  F028         	goto	u9841
 14691  005100  EF84  F028         	goto	u9840
 14692  005104                     u9841:
 14693  005104  EF8A  F028         	goto	l9101
 14694  005108                     u9840:
 14695  005108                     
 14696                           ; BSR set to: 1
 14697  005108  C132  F024         	movff	_width,ctoa@w
 14698  00510C  C133  F025         	movff	_width+1,ctoa@w+1
 14699  005110  EF90  F028         	goto	l9103
 14700  005114                     l9101:
 14701                           
 14702                           ; BSR set to: 1
 14703  005114  0EFF               	movlw	255
 14704  005116  2532               	addwf	_width& (0+255),w,b
 14705  005118  6E24               	movwf	ctoa@w^0,c
 14706  00511A  0EFF               	movlw	255
 14707  00511C  2133               	addwfc	(_width+1)& (0+255),w,b
 14708  00511E  6E25               	movwf	(ctoa@w+1)^0,c
 14709  005120                     l9103:
 14710                           
 14711                           ; BSR set to: 1
 14712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14713  005120  C023  F141         	movff	ctoa@c,_dbuf
 14714  005124                     
 14715                           ; BSR set to: 1
 14716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14717  005124  0E00               	movlw	0
 14718  005126  6F42               	movwf	(_dbuf+1)& (0+255),b
 14719  005128                     
 14720                           ; BSR set to: 1
 14721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14722  005128  C021  F016         	movff	ctoa@fp,pad@fp
 14723  00512C  C022  F017         	movff	ctoa@fp+1,pad@fp+1
 14724  005130  0E41               	movlw	low _dbuf
 14725  005132  6E18               	movwf	pad@buf^0,c
 14726  005134  0E01               	movlw	high _dbuf
 14727  005136  6E19               	movwf	(pad@buf+1)^0,c
 14728  005138  C024  F01A         	movff	ctoa@w,pad@p
 14729  00513C  C025  F01B         	movff	ctoa@w+1,pad@p+1
 14730  005140  EC44  F023         	call	_pad	;wreg free
 14731  005144  C016  F021         	movff	?_pad,?_ctoa
 14732  005148  C017  F022         	movff	?_pad+1,?_ctoa+1
 14733  00514C  0012               	return		;funcret
 14734  00514E                     __end_of_ctoa:
 14735                           	opt callstack 0
 14736                           
 14737 ;; *************** function _pad *****************
 14738 ;; Defined at:
 14739 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14740 ;; Parameters:    Size  Location     Type
 14741 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
 14742 ;;		 -> sprintf@f(6), 
 14743 ;;  buf             2   23[COMRAM] PTR unsigned char 
 14744 ;;		 -> dbuf(80), 
 14745 ;;  p               2   25[COMRAM] int 
 14746 ;; Auto vars:     Size  Location     Type
 14747 ;;  w               2   30[COMRAM] int 
 14748 ;;  i               2   28[COMRAM] int 
 14749 ;; Return value:  Size  Location     Type
 14750 ;;                  2   21[COMRAM] int 
 14751 ;; Registers used:
 14752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14753 ;; Tracked objects:
 14754 ;;		On entry : 0/0
 14755 ;;		On exit  : 0/0
 14756 ;;		Unchanged: 0/0
 14757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14758 ;;      Params:         6       0       0       0       0       0       0       0       0
 14759 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14760 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14761 ;;      Totals:        11       0       0       0       0       0       0       0       0
 14762 ;;Total ram usage:       11 bytes
 14763 ;; Hardware stack levels used:    1
 14764 ;; Hardware stack levels required when called:    5
 14765 ;; This function calls:
 14766 ;;		_fputc
 14767 ;;		_fputs
 14768 ;;		_strlen
 14769 ;; This function is called by:
 14770 ;;		_ctoa
 14771 ;;		_dtoa
 14772 ;;		_efgtoa
 14773 ;; This function uses a non-reentrant model
 14774 ;;
 14775                           
 14776                           	psect	text56
 14777  004688                     __ptext56:
 14778                           	opt callstack 0
 14779  004688                     _pad:
 14780                           	opt callstack 20
 14781  004688                     
 14782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14783  004688  A055               	btfss	_flags^0,0,c
 14784  00468A  EF49  F023         	goto	u8571
 14785  00468E  EF4B  F023         	goto	u8570
 14786  004692                     u8571:
 14787  004692  EF55  F023         	goto	l8401
 14788  004696                     u8570:
 14789  004696                     
 14790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14791  004696  C018  F00F         	movff	pad@buf,fputs@s
 14792  00469A  C019  F010         	movff	pad@buf+1,fputs@s+1
 14793  00469E  C016  F011         	movff	pad@fp,fputs@fp
 14794  0046A2  C017  F012         	movff	pad@fp+1,fputs@fp+1
 14795  0046A6  EC76  F02A         	call	_fputs	;wreg free
 14796  0046AA                     l8401:
 14797                           
 14798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14799  0046AA  BE1B               	btfsc	(pad@p+1)^0,7,c
 14800  0046AC  EF5A  F023         	goto	u8581
 14801  0046B0  EF5C  F023         	goto	u8580
 14802  0046B4                     u8581:
 14803  0046B4  EF62  F023         	goto	l8405
 14804  0046B8                     u8580:
 14805  0046B8  C01A  F01F         	movff	pad@p,pad@w
 14806  0046BC  C01B  F020         	movff	pad@p+1,pad@w+1
 14807  0046C0  EF66  F023         	goto	l794
 14808  0046C4                     l8405:
 14809  0046C4  0E00               	movlw	0
 14810  0046C6  6E20               	movwf	(pad@w+1)^0,c
 14811  0046C8  0E00               	movlw	0
 14812  0046CA  6E1F               	movwf	pad@w^0,c
 14813  0046CC                     l794:
 14814                           
 14815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14816  0046CC  0E00               	movlw	0
 14817  0046CE  6E1E               	movwf	(pad@i+1)^0,c
 14818  0046D0  0E00               	movlw	0
 14819  0046D2  6E1D               	movwf	pad@i^0,c
 14820                           
 14821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14822  0046D4  EF78  F023         	goto	l8411
 14823  0046D8                     l8407:
 14824                           
 14825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14826  0046D8  0E00               	movlw	0
 14827  0046DA  6E07               	movwf	(fputc@c+1)^0,c
 14828  0046DC  0E20               	movlw	32
 14829  0046DE  6E06               	movwf	fputc@c^0,c
 14830  0046E0  C016  F008         	movff	pad@fp,fputc@fp
 14831  0046E4  C017  F009         	movff	pad@fp+1,fputc@fp+1
 14832  0046E8  EC7D  F022         	call	_fputc	;wreg free
 14833  0046EC                     
 14834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14835  0046EC  4A1D               	infsnz	pad@i^0,f,c
 14836  0046EE  2A1E               	incf	(pad@i+1)^0,f,c
 14837  0046F0                     l8411:
 14838                           
 14839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14840  0046F0  501F               	movf	pad@w^0,w,c
 14841  0046F2  5C1D               	subwf	pad@i^0,w,c
 14842  0046F4  501E               	movf	(pad@i+1)^0,w,c
 14843  0046F6  0A80               	xorlw	128
 14844  0046F8  6E1C               	movwf	??_pad^0,c
 14845  0046FA  5020               	movf	(pad@w+1)^0,w,c
 14846  0046FC  0A80               	xorlw	128
 14847  0046FE  581C               	subwfb	??_pad^0,w,c
 14848  004700  A0D8               	btfss	status,0,c
 14849  004702  EF85  F023         	goto	u8591
 14850  004706  EF87  F023         	goto	u8590
 14851  00470A                     u8591:
 14852  00470A  EF6C  F023         	goto	l8407
 14853  00470E                     u8590:
 14854  00470E                     
 14855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14856  00470E  B055               	btfsc	_flags^0,0,c
 14857  004710  EF8C  F023         	goto	u8601
 14858  004714  EF8E  F023         	goto	u8600
 14859  004718                     u8601:
 14860  004718  EF98  F023         	goto	l8415
 14861  00471C                     u8600:
 14862  00471C                     
 14863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14864  00471C  C018  F00F         	movff	pad@buf,fputs@s
 14865  004720  C019  F010         	movff	pad@buf+1,fputs@s+1
 14866  004724  C016  F011         	movff	pad@fp,fputs@fp
 14867  004728  C017  F012         	movff	pad@fp+1,fputs@fp+1
 14868  00472C  EC76  F02A         	call	_fputs	;wreg free
 14869  004730                     l8415:
 14870                           
 14871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14872  004730  C018  F006         	movff	pad@buf,strlen@s
 14873  004734  C019  F007         	movff	pad@buf+1,strlen@s+1
 14874  004738  EC2C  F02B         	call	_strlen	;wreg free
 14875  00473C  501F               	movf	pad@w^0,w,c
 14876  00473E  2406               	addwf	?_strlen^0,w,c
 14877  004740  6E16               	movwf	?_pad^0,c
 14878  004742  5020               	movf	(pad@w+1)^0,w,c
 14879  004744  2007               	addwfc	(?_strlen+1)^0,w,c
 14880  004746  6E17               	movwf	(?_pad+1)^0,c
 14881  004748  0012               	return		;funcret
 14882  00474A                     __end_of_pad:
 14883                           	opt callstack 0
 14884                           
 14885 ;; *************** function _strlen *****************
 14886 ;; Defined at:
 14887 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14888 ;; Parameters:    Size  Location     Type
 14889 ;;  s               2    5[COMRAM] PTR const unsigned char 
 14890 ;;		 -> dbuf(80), 
 14891 ;; Auto vars:     Size  Location     Type
 14892 ;;  a               2    7[COMRAM] PTR const unsigned char 
 14893 ;;		 -> dbuf(80), 
 14894 ;; Return value:  Size  Location     Type
 14895 ;;                  2    5[COMRAM] unsigned int 
 14896 ;; Registers used:
 14897 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14898 ;; Tracked objects:
 14899 ;;		On entry : 0/0
 14900 ;;		On exit  : 0/0
 14901 ;;		Unchanged: 0/0
 14902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14903 ;;      Params:         2       0       0       0       0       0       0       0       0
 14904 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14905 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14906 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14907 ;;Total ram usage:        4 bytes
 14908 ;; Hardware stack levels used:    1
 14909 ;; Hardware stack levels required when called:    2
 14910 ;; This function calls:
 14911 ;;		Nothing
 14912 ;; This function is called by:
 14913 ;;		_pad
 14914 ;; This function uses a non-reentrant model
 14915 ;;
 14916                           
 14917                           	psect	text57
 14918  005658                     __ptext57:
 14919                           	opt callstack 0
 14920  005658                     _strlen:
 14921                           	opt callstack 22
 14922  005658  C006  F008         	movff	strlen@s,strlen@a
 14923  00565C  C007  F009         	movff	strlen@s+1,strlen@a+1
 14924  005660  EF34  F02B         	goto	l8127
 14925  005664                     l8125:
 14926  005664  4A06               	infsnz	strlen@s^0,f,c
 14927  005666  2A07               	incf	(strlen@s+1)^0,f,c
 14928  005668                     l8127:
 14929  005668  C006  FFD9         	movff	strlen@s,fsr2l
 14930  00566C  C007  FFDA         	movff	strlen@s+1,fsr2h
 14931  005670  50DF               	movf	indf2,w,c
 14932  005672  A4D8               	btfss	status,2,c
 14933  005674  EF3E  F02B         	goto	u8071
 14934  005678  EF40  F02B         	goto	u8070
 14935  00567C                     u8071:
 14936  00567C  EF32  F02B         	goto	l8125
 14937  005680                     u8070:
 14938  005680  5008               	movf	strlen@a^0,w,c
 14939  005682  5C06               	subwf	strlen@s^0,w,c
 14940  005684  6E06               	movwf	?_strlen^0,c
 14941  005686  5009               	movf	(strlen@a+1)^0,w,c
 14942  005688  5807               	subwfb	(strlen@s+1)^0,w,c
 14943  00568A  6E07               	movwf	(?_strlen+1)^0,c
 14944  00568C  0012               	return		;funcret
 14945  00568E                     __end_of_strlen:
 14946                           	opt callstack 0
 14947                           
 14948 ;; *************** function _fputs *****************
 14949 ;; Defined at:
 14950 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14951 ;; Parameters:    Size  Location     Type
 14952 ;;  s               2   14[COMRAM] PTR const unsigned char 
 14953 ;;		 -> dbuf(80), 
 14954 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 14955 ;;		 -> sprintf@f(6), 
 14956 ;; Auto vars:     Size  Location     Type
 14957 ;;  i               2   19[COMRAM] int 
 14958 ;;  c               1   18[COMRAM] unsigned char 
 14959 ;; Return value:  Size  Location     Type
 14960 ;;                  2   14[COMRAM] int 
 14961 ;; Registers used:
 14962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14963 ;; Tracked objects:
 14964 ;;		On entry : 0/0
 14965 ;;		On exit  : 0/0
 14966 ;;		Unchanged: 0/0
 14967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14968 ;;      Params:         4       0       0       0       0       0       0       0       0
 14969 ;;      Locals:         3       0       0       0       0       0       0       0       0
 14970 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14971 ;;      Totals:         7       0       0       0       0       0       0       0       0
 14972 ;;Total ram usage:        7 bytes
 14973 ;; Hardware stack levels used:    1
 14974 ;; Hardware stack levels required when called:    4
 14975 ;; This function calls:
 14976 ;;		_fputc
 14977 ;; This function is called by:
 14978 ;;		_pad
 14979 ;; This function uses a non-reentrant model
 14980 ;;
 14981                           
 14982                           	psect	text58
 14983  0054EC                     __ptext58:
 14984                           	opt callstack 0
 14985  0054EC                     _fputs:
 14986                           	opt callstack 20
 14987  0054EC  0E00               	movlw	0
 14988  0054EE  6E15               	movwf	(fputs@i+1)^0,c
 14989  0054F0  0E00               	movlw	0
 14990  0054F2  6E14               	movwf	fputs@i^0,c
 14991  0054F4  EF87  F02A         	goto	l8121
 14992  0054F8                     l8117:
 14993  0054F8  C013  F006         	movff	fputs@c,fputc@c
 14994  0054FC  6A07               	clrf	(fputc@c+1)^0,c
 14995  0054FE  C011  F008         	movff	fputs@fp,fputc@fp
 14996  005502  C012  F009         	movff	fputs@fp+1,fputc@fp+1
 14997  005506  EC7D  F022         	call	_fputc	;wreg free
 14998  00550A  4A14               	infsnz	fputs@i^0,f,c
 14999  00550C  2A15               	incf	(fputs@i+1)^0,f,c
 15000  00550E                     l8121:
 15001  00550E  5014               	movf	fputs@i^0,w,c
 15002  005510  240F               	addwf	fputs@s^0,w,c
 15003  005512  6ED9               	movwf	fsr2l,c
 15004  005514  5015               	movf	(fputs@i+1)^0,w,c
 15005  005516  2010               	addwfc	(fputs@s+1)^0,w,c
 15006  005518  6EDA               	movwf	fsr2h,c
 15007  00551A  50DF               	movf	indf2,w,c
 15008  00551C  6E13               	movwf	fputs@c^0,c
 15009  00551E  5013               	movf	fputs@c^0,w,c
 15010  005520  A4D8               	btfss	status,2,c
 15011  005522  EF95  F02A         	goto	u8061
 15012  005526  EF97  F02A         	goto	u8060
 15013  00552A                     u8061:
 15014  00552A  EF7C  F02A         	goto	l8117
 15015  00552E                     u8060:
 15016  00552E  0012               	return		;funcret
 15017  005530                     __end_of_fputs:
 15018                           	opt callstack 0
 15019                           
 15020 ;; *************** function _fputc *****************
 15021 ;; Defined at:
 15022 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 15023 ;; Parameters:    Size  Location     Type
 15024 ;;  c               2    5[COMRAM] int 
 15025 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
 15026 ;;		 -> sprintf@f(6), 
 15027 ;; Auto vars:     Size  Location     Type
 15028 ;;		None
 15029 ;; Return value:  Size  Location     Type
 15030 ;;                  2    5[COMRAM] int 
 15031 ;; Registers used:
 15032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15033 ;; Tracked objects:
 15034 ;;		On entry : 0/0
 15035 ;;		On exit  : 0/0
 15036 ;;		Unchanged: 0/0
 15037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15038 ;;      Params:         4       0       0       0       0       0       0       0       0
 15039 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15040 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15041 ;;      Totals:         9       0       0       0       0       0       0       0       0
 15042 ;;Total ram usage:        9 bytes
 15043 ;; Hardware stack levels used:    1
 15044 ;; Hardware stack levels required when called:    3
 15045 ;; This function calls:
 15046 ;;		_putch
 15047 ;; This function is called by:
 15048 ;;		_pad
 15049 ;;		_vfpfcnvrt
 15050 ;;		_fputs
 15051 ;; This function uses a non-reentrant model
 15052 ;;
 15053                           
 15054                           	psect	text59
 15055  0044FA                     __ptext59:
 15056                           	opt callstack 0
 15057  0044FA                     _fputc:
 15058                           	opt callstack 23
 15059  0044FA  5008               	movf	fputc@fp^0,w,c
 15060  0044FC  1009               	iorwf	(fputc@fp+1)^0,w,c
 15061  0044FE  B4D8               	btfsc	status,2,c
 15062  004500  EF84  F022         	goto	u8021
 15063  004504  EF86  F022         	goto	u8020
 15064  004508                     u8021:
 15065  004508  EF8F  F022         	goto	l8105
 15066  00450C                     u8020:
 15067  00450C  5008               	movf	fputc@fp^0,w,c
 15068  00450E  1009               	iorwf	(fputc@fp+1)^0,w,c
 15069  004510  A4D8               	btfss	status,2,c
 15070  004512  EF8D  F022         	goto	u8031
 15071  004516  EF8F  F022         	goto	u8030
 15072  00451A                     u8031:
 15073  00451A  EF94  F022         	goto	l8107
 15074  00451E                     u8030:
 15075  00451E                     l8105:
 15076  00451E  5006               	movf	fputc@c^0,w,c
 15077  004520  EC00  F02C         	call	_putch
 15078  004524  EFE1  F022         	goto	l1726
 15079  004528                     l8107:
 15080  004528  EE20 F004          	lfsr	2,4
 15081  00452C  5008               	movf	fputc@fp^0,w,c
 15082  00452E  26D9               	addwf	fsr2l,f,c
 15083  004530  5009               	movf	(fputc@fp+1)^0,w,c
 15084  004532  22DA               	addwfc	fsr2h,f,c
 15085  004534  50DE               	movf	postinc2,w,c
 15086  004536  10DE               	iorwf	postinc2,w,c
 15087  004538  B4D8               	btfsc	status,2,c
 15088  00453A  EFA1  F022         	goto	u8041
 15089  00453E  EFA3  F022         	goto	u8040
 15090  004542                     u8041:
 15091  004542  EFBE  F022         	goto	l8111
 15092  004546                     u8040:
 15093  004546  EE20 F004          	lfsr	2,4
 15094  00454A  5008               	movf	fputc@fp^0,w,c
 15095  00454C  26D9               	addwf	fsr2l,f,c
 15096  00454E  5009               	movf	(fputc@fp+1)^0,w,c
 15097  004550  22DA               	addwfc	fsr2h,f,c
 15098  004552  EE10 F002          	lfsr	1,2
 15099  004556  5008               	movf	fputc@fp^0,w,c
 15100  004558  26E1               	addwf	fsr1l,f,c
 15101  00455A  5009               	movf	(fputc@fp+1)^0,w,c
 15102  00455C  22E2               	addwfc	fsr1h,f,c
 15103  00455E  50DE               	movf	postinc2,w,c
 15104  004560  5CE6               	subwf	postinc1,w,c
 15105  004562  50E6               	movf	postinc1,w,c
 15106  004564  0A80               	xorlw	128
 15107  004566  6E0E               	movwf	(??_fputc+4)^0,c
 15108  004568  50DE               	movf	postinc2,w,c
 15109  00456A  0A80               	xorlw	128
 15110  00456C  580E               	subwfb	(??_fputc+4)^0,w,c
 15111  00456E  B0D8               	btfsc	status,0,c
 15112  004570  EFBC  F022         	goto	u8051
 15113  004574  EFBE  F022         	goto	u8050
 15114  004578                     u8051:
 15115  004578  EFE1  F022         	goto	l1726
 15116  00457C                     u8050:
 15117  00457C                     l8111:
 15118  00457C  EE20 F002          	lfsr	2,2
 15119  004580  5008               	movf	fputc@fp^0,w,c
 15120  004582  26D9               	addwf	fsr2l,f,c
 15121  004584  5009               	movf	(fputc@fp+1)^0,w,c
 15122  004586  22DA               	addwfc	fsr2h,f,c
 15123  004588  CFDE F00A          	movff	postinc2,??_fputc
 15124  00458C  CFDD F00B          	movff	postdec2,??_fputc+1
 15125  004590  C008  FFD9         	movff	fputc@fp,fsr2l
 15126  004594  C009  FFDA         	movff	fputc@fp+1,fsr2h
 15127  004598  CFDE F00C          	movff	postinc2,??_fputc+2
 15128  00459C  CFDD F00D          	movff	postdec2,??_fputc+3
 15129  0045A0  500A               	movf	??_fputc^0,w,c
 15130  0045A2  240C               	addwf	(??_fputc+2)^0,w,c
 15131  0045A4  6ED9               	movwf	fsr2l,c
 15132  0045A6  500B               	movf	(??_fputc+1)^0,w,c
 15133  0045A8  200D               	addwfc	(??_fputc+3)^0,w,c
 15134  0045AA  6EDA               	movwf	fsr2h,c
 15135  0045AC  C006  FFDF         	movff	fputc@c,indf2
 15136  0045B0  EE20 F002          	lfsr	2,2
 15137  0045B4  5008               	movf	fputc@fp^0,w,c
 15138  0045B6  26D9               	addwf	fsr2l,f,c
 15139  0045B8  5009               	movf	(fputc@fp+1)^0,w,c
 15140  0045BA  22DA               	addwfc	fsr2h,f,c
 15141  0045BC  2ADE               	incf	postinc2,f,c
 15142  0045BE  0E00               	movlw	0
 15143  0045C0  22DD               	addwfc	postdec2,f,c
 15144  0045C2                     l1726:
 15145  0045C2  0012               	return		;funcret
 15146  0045C4                     __end_of_fputc:
 15147                           	opt callstack 0
 15148                           
 15149 ;; *************** function _putch *****************
 15150 ;; Defined at:
 15151 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 15152 ;; Parameters:    Size  Location     Type
 15153 ;;  c               1    wreg     unsigned char 
 15154 ;; Auto vars:     Size  Location     Type
 15155 ;;  c               1    0[COMRAM] unsigned char 
 15156 ;; Return value:  Size  Location     Type
 15157 ;;                  1    wreg      void 
 15158 ;; Registers used:
 15159 ;;		wreg
 15160 ;; Tracked objects:
 15161 ;;		On entry : 0/0
 15162 ;;		On exit  : 0/0
 15163 ;;		Unchanged: 0/0
 15164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15165 ;;      Params:         0       0       0       0       0       0       0       0       0
 15166 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15167 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15168 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15169 ;;Total ram usage:        0 bytes
 15170 ;; Hardware stack levels used:    1
 15171 ;; Hardware stack levels required when called:    2
 15172 ;; This function calls:
 15173 ;;		Nothing
 15174 ;; This function is called by:
 15175 ;;		_fputc
 15176 ;; This function uses a non-reentrant model
 15177 ;;
 15178                           
 15179                           	psect	text60
 15180  005800                     __ptext60:
 15181                           	opt callstack 0
 15182  005800                     _putch:
 15183                           	opt callstack 23
 15184  005800  0012               	return		;funcret
 15185  005802                     __end_of_putch:
 15186                           	opt callstack 0
 15187                           
 15188 ;; *************** function _atoi *****************
 15189 ;; Defined at:
 15190 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 15191 ;; Parameters:    Size  Location     Type
 15192 ;;  s               2   12[COMRAM] PTR const unsigned char 
 15193 ;;		 -> STR_20(34), STR_11(32), STR_6(17), STR_5(19), 
 15194 ;;		 -> STR_4(18), STR_3(34), 
 15195 ;; Auto vars:     Size  Location     Type
 15196 ;;  n               2   25[COMRAM] int 
 15197 ;;  neg             2   18[COMRAM] int 
 15198 ;; Return value:  Size  Location     Type
 15199 ;;                  2   12[COMRAM] int 
 15200 ;; Registers used:
 15201 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15202 ;; Tracked objects:
 15203 ;;		On entry : 0/0
 15204 ;;		On exit  : 0/0
 15205 ;;		Unchanged: 0/0
 15206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15207 ;;      Params:         2       0       0       0       0       0       0       0       0
 15208 ;;      Locals:         9       0       0       0       0       0       0       0       0
 15209 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15210 ;;      Totals:        15       0       0       0       0       0       0       0       0
 15211 ;;Total ram usage:       15 bytes
 15212 ;; Hardware stack levels used:    1
 15213 ;; Hardware stack levels required when called:    3
 15214 ;; This function calls:
 15215 ;;		___wmul
 15216 ;;		_isdigit
 15217 ;;		_isspace
 15218 ;; This function is called by:
 15219 ;;		_vfpfcnvrt
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223                           	psect	text61
 15224  00361C                     __ptext61:
 15225                           	opt callstack 0
 15226  00361C                     _atoi:
 15227                           	opt callstack 23
 15228  00361C  0E00               	movlw	0
 15229  00361E  6E1B               	movwf	(atoi@n+1)^0,c
 15230  003620  0E00               	movlw	0
 15231  003622  6E1A               	movwf	atoi@n^0,c
 15232  003624  0E00               	movlw	0
 15233  003626  6E14               	movwf	(atoi@neg+1)^0,c
 15234  003628  0E00               	movlw	0
 15235  00362A  6E13               	movwf	atoi@neg^0,c
 15236  00362C  EF1A  F01B         	goto	l9475
 15237  003630                     l9473:
 15238  003630  4A0D               	infsnz	atoi@s^0,f,c
 15239  003632  2A0E               	incf	(atoi@s+1)^0,f,c
 15240  003634                     l9475:
 15241  003634  0E01               	movlw	1
 15242  003636  6E19               	movwf	_atoi$1445^0,c
 15243  003638  C00D  FFF6         	movff	atoi@s,tblptrl
 15244  00363C  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15245  003640                     	if	0	;tblptru may be non-zero
 15246  003640                     	endif
 15247  003640                     	if	0	;tblptru may be non-zero
 15248  003640                     	endif
 15249  003640  0008               	tblrd		*
 15250  003642  50F5               	movf	tablat,w,c
 15251  003644  0A20               	xorlw	32
 15252  003646  B4D8               	btfsc	status,2,c
 15253  003648  EF28  F01B         	goto	u10521
 15254  00364C  EF2A  F01B         	goto	u10520
 15255  003650                     u10521:
 15256  003650  EF47  F01B         	goto	l9483
 15257  003654                     u10520:
 15258  003654  0EF7               	movlw	247
 15259  003656  6E0F               	movwf	??_atoi^0,c
 15260  003658  0EFF               	movlw	255
 15261  00365A  6E10               	movwf	(??_atoi+1)^0,c
 15262  00365C  C00D  FFF6         	movff	atoi@s,tblptrl
 15263  003660  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15264  003664                     	if	0	;tblptru may be non-zero
 15265  003664                     	endif
 15266  003664                     	if	0	;tblptru may be non-zero
 15267  003664                     	endif
 15268  003664  0008               	tblrd		*
 15269  003666  50F5               	movf	tablat,w,c
 15270  003668  6E11               	movwf	(??_atoi+2)^0,c
 15271  00366A  6A12               	clrf	(??_atoi+3)^0,c
 15272  00366C  500F               	movf	??_atoi^0,w,c
 15273  00366E  2611               	addwf	(??_atoi+2)^0,f,c
 15274  003670  5010               	movf	(??_atoi+1)^0,w,c
 15275  003672  2212               	addwfc	(??_atoi+3)^0,f,c
 15276  003674  5012               	movf	(??_atoi+3)^0,w,c
 15277  003676  E109               	bnz	u10530
 15278  003678  0E05               	movlw	5
 15279  00367A  5C11               	subwf	(??_atoi+2)^0,w,c
 15280  00367C  A0D8               	btfss	status,0,c
 15281  00367E  EF43  F01B         	goto	u10531
 15282  003682  EF45  F01B         	goto	u10530
 15283  003686                     u10531:
 15284  003686  EF47  F01B         	goto	l9483
 15285  00368A                     u10530:
 15286  00368A  0E00               	movlw	0
 15287  00368C  6E19               	movwf	_atoi$1445^0,c
 15288  00368E                     l9483:
 15289  00368E  C019  F015         	movff	_atoi$1445,_atoi$1444
 15290  003692  6A16               	clrf	(_atoi$1444+1)^0,c
 15291  003694  5015               	movf	_atoi$1444^0,w,c
 15292  003696  1016               	iorwf	(_atoi$1444+1)^0,w,c
 15293  003698  A4D8               	btfss	status,2,c
 15294  00369A  EF51  F01B         	goto	u10541
 15295  00369E  EF53  F01B         	goto	u10540
 15296  0036A2                     u10541:
 15297  0036A2  EF18  F01B         	goto	l9473
 15298  0036A6                     u10540:
 15299  0036A6  EF5D  F01B         	goto	l9493
 15300  0036AA                     l9489:
 15301  0036AA  0E00               	movlw	0
 15302  0036AC  6E14               	movwf	(atoi@neg+1)^0,c
 15303  0036AE  0E01               	movlw	1
 15304  0036B0  6E13               	movwf	atoi@neg^0,c
 15305  0036B2                     l9491:
 15306  0036B2  4A0D               	infsnz	atoi@s^0,f,c
 15307  0036B4  2A0E               	incf	(atoi@s+1)^0,f,c
 15308  0036B6  EF92  F01B         	goto	l9499
 15309  0036BA                     l9493:
 15310  0036BA  C00D  FFF6         	movff	atoi@s,tblptrl
 15311  0036BE  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15312  0036C2                     	if	0	;tblptru may be non-zero
 15313  0036C2                     	endif
 15314  0036C2                     	if	0	;tblptru may be non-zero
 15315  0036C2                     	endif
 15316  0036C2  0008               	tblrd		*
 15317  0036C4  50F5               	movf	tablat,w,c
 15318  0036C6  6E0F               	movwf	??_atoi^0,c
 15319  0036C8  6A10               	clrf	(??_atoi+1)^0,c
 15320                           
 15321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15322                           ; Switch size 1, requested type "simple"
 15323                           ; Number of cases is 1, Range of values is 0 to 0
 15324                           ; switch strategies available:
 15325                           ; Name         Instructions Cycles
 15326                           ; simple_byte            4     3 (average)
 15327                           ;	Chosen strategy is simple_byte
 15328  0036CA  5010               	movf	(??_atoi+1)^0,w,c
 15329  0036CC  0A00               	xorlw	0	; case 0
 15330  0036CE  B4D8               	btfsc	status,2,c
 15331  0036D0  EF6C  F01B         	goto	l11247
 15332  0036D4  EF92  F01B         	goto	l9499
 15333  0036D8                     l11247:
 15334                           
 15335                           ; Switch size 1, requested type "simple"
 15336                           ; Number of cases is 2, Range of values is 43 to 45
 15337                           ; switch strategies available:
 15338                           ; Name         Instructions Cycles
 15339                           ; simple_byte            7     4 (average)
 15340                           ;	Chosen strategy is simple_byte
 15341  0036D8  500F               	movf	??_atoi^0,w,c
 15342  0036DA  0A2B               	xorlw	43	; case 43
 15343  0036DC  B4D8               	btfsc	status,2,c
 15344  0036DE  EF59  F01B         	goto	l9491
 15345  0036E2  0A06               	xorlw	6	; case 45
 15346  0036E4  B4D8               	btfsc	status,2,c
 15347  0036E6  EF55  F01B         	goto	l9489
 15348  0036EA  EF92  F01B         	goto	l9499
 15349  0036EE                     l9495:
 15350  0036EE  C01A  F006         	movff	atoi@n,___wmul@multiplier
 15351  0036F2  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 15352  0036F6  0E00               	movlw	0
 15353  0036F8  6E09               	movwf	(___wmul@multiplicand+1)^0,c
 15354  0036FA  0E0A               	movlw	10
 15355  0036FC  6E08               	movwf	___wmul@multiplicand^0,c
 15356  0036FE  EC84  F02B         	call	___wmul	;wreg free
 15357  003702  C00D  FFF6         	movff	atoi@s,tblptrl
 15358  003706  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15359  00370A                     	if	0	;tblptru may be non-zero
 15360  00370A                     	endif
 15361  00370A                     	if	0	;tblptru may be non-zero
 15362  00370A                     	endif
 15363  00370A  0008               	tblrd		*
 15364  00370C  50F5               	movf	tablat,w,c
 15365  00370E  5E06               	subwf	?___wmul^0,f,c
 15366  003710  0E00               	movlw	0
 15367  003712  5A07               	subwfb	(?___wmul+1)^0,f,c
 15368  003714  0E30               	movlw	48
 15369  003716  2406               	addwf	?___wmul^0,w,c
 15370  003718  6E1A               	movwf	atoi@n^0,c
 15371  00371A  0E00               	movlw	0
 15372  00371C  2007               	addwfc	(?___wmul+1)^0,w,c
 15373  00371E  6E1B               	movwf	(atoi@n+1)^0,c
 15374  003720  EF59  F01B         	goto	l9491
 15375  003724                     l9499:
 15376  003724  0ED0               	movlw	208
 15377  003726  6E0F               	movwf	??_atoi^0,c
 15378  003728  0EFF               	movlw	255
 15379  00372A  6E10               	movwf	(??_atoi+1)^0,c
 15380  00372C  C00D  FFF6         	movff	atoi@s,tblptrl
 15381  003730  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15382  003734                     	if	0	;tblptru may be non-zero
 15383  003734                     	endif
 15384  003734                     	if	0	;tblptru may be non-zero
 15385  003734                     	endif
 15386  003734  0008               	tblrd		*
 15387  003736  50F5               	movf	tablat,w,c
 15388  003738  6E11               	movwf	(??_atoi+2)^0,c
 15389  00373A  6A12               	clrf	(??_atoi+3)^0,c
 15390  00373C  500F               	movf	??_atoi^0,w,c
 15391  00373E  2611               	addwf	(??_atoi+2)^0,f,c
 15392  003740  5010               	movf	(??_atoi+1)^0,w,c
 15393  003742  2212               	addwfc	(??_atoi+3)^0,f,c
 15394  003744  5012               	movf	(??_atoi+3)^0,w,c
 15395  003746  E10A               	bnz	u10550
 15396  003748  0E0A               	movlw	10
 15397  00374A  5C11               	subwf	(??_atoi+2)^0,w,c
 15398  00374C  A0D8               	btfss	status,0,c
 15399  00374E  EFAB  F01B         	goto	u10551
 15400  003752  EFAE  F01B         	goto	u10550
 15401  003756                     u10551:
 15402  003756  0E01               	movlw	1
 15403  003758  EFAF  F01B         	goto	u10560
 15404  00375C                     u10550:
 15405  00375C  0E00               	movlw	0
 15406  00375E                     u10560:
 15407  00375E  6E17               	movwf	_atoi$1446^0,c
 15408  003760  6A18               	clrf	(_atoi$1446+1)^0,c
 15409  003762  5017               	movf	_atoi$1446^0,w,c
 15410  003764  1018               	iorwf	(_atoi$1446+1)^0,w,c
 15411  003766  A4D8               	btfss	status,2,c
 15412  003768  EFB8  F01B         	goto	u10571
 15413  00376C  EFBA  F01B         	goto	u10570
 15414  003770                     u10571:
 15415  003770  EF77  F01B         	goto	l9495
 15416  003774                     u10570:
 15417  003774  5013               	movf	atoi@neg^0,w,c
 15418  003776  1014               	iorwf	(atoi@neg+1)^0,w,c
 15419  003778  A4D8               	btfss	status,2,c
 15420  00377A  EFC1  F01B         	goto	u10581
 15421  00377E  EFC3  F01B         	goto	u10580
 15422  003782                     u10581:
 15423  003782  EFD1  F01B         	goto	l1678
 15424  003786                     u10580:
 15425  003786  C01A  F00F         	movff	atoi@n,??_atoi
 15426  00378A  C01B  F010         	movff	atoi@n+1,??_atoi+1
 15427  00378E  1E0F               	comf	??_atoi^0,f,c
 15428  003790  1E10               	comf	(??_atoi+1)^0,f,c
 15429  003792  4A0F               	infsnz	??_atoi^0,f,c
 15430  003794  2A10               	incf	(??_atoi+1)^0,f,c
 15431  003796  C00F  F00D         	movff	??_atoi,?_atoi
 15432  00379A  C010  F00E         	movff	??_atoi+1,?_atoi+1
 15433  00379E  EFD5  F01B         	goto	l1681
 15434  0037A2                     l1678:
 15435  0037A2  C01A  F00D         	movff	atoi@n,?_atoi
 15436  0037A6  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 15437  0037AA                     l1681:
 15438  0037AA  0012               	return		;funcret
 15439  0037AC                     __end_of_atoi:
 15440                           	opt callstack 0
 15441                           
 15442 ;; *************** function _isspace *****************
 15443 ;; Defined at:
 15444 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 15445 ;; Parameters:    Size  Location     Type
 15446 ;;  c               2    5[COMRAM] int 
 15447 ;; Auto vars:     Size  Location     Type
 15448 ;;		None
 15449 ;; Return value:  Size  Location     Type
 15450 ;;                  2    5[COMRAM] int 
 15451 ;; Registers used:
 15452 ;;		wreg, status,2, status,0
 15453 ;; Tracked objects:
 15454 ;;		On entry : 0/0
 15455 ;;		On exit  : 0/0
 15456 ;;		Unchanged: 0/0
 15457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15458 ;;      Params:         2       0       0       0       0       0       0       0       0
 15459 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15460 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15461 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15462 ;;Total ram usage:        7 bytes
 15463 ;; Hardware stack levels used:    1
 15464 ;; Hardware stack levels required when called:    2
 15465 ;; This function calls:
 15466 ;;		Nothing
 15467 ;; This function is called by:
 15468 ;;		_atoi
 15469 ;; This function uses a non-reentrant model
 15470 ;;
 15471                           
 15472                           	psect	text62
 15473  00524C                     __ptext62:
 15474                           	opt callstack 0
 15475  00524C                     _isspace:
 15476                           	opt callstack 23
 15477  00524C  0E01               	movlw	1
 15478  00524E  6E0C               	movwf	_isspace$1475^0,c
 15479  005250  0E20               	movlw	32
 15480  005252  1806               	xorwf	isspace@c^0,w,c
 15481  005254  1007               	iorwf	(isspace@c+1)^0,w,c
 15482  005256  B4D8               	btfsc	status,2,c
 15483  005258  EF30  F029         	goto	u9791
 15484  00525C  EF32  F029         	goto	u9790
 15485  005260                     u9791:
 15486  005260  EF4B  F029         	goto	l9075
 15487  005264                     u9790:
 15488  005264  0EF7               	movlw	247
 15489  005266  6E08               	movwf	??_isspace^0,c
 15490  005268  0EFF               	movlw	255
 15491  00526A  6E09               	movwf	(??_isspace+1)^0,c
 15492  00526C  C006  F00A         	movff	isspace@c,??_isspace+2
 15493  005270  C007  F00B         	movff	isspace@c+1,??_isspace+3
 15494  005274  5008               	movf	??_isspace^0,w,c
 15495  005276  260A               	addwf	(??_isspace+2)^0,f,c
 15496  005278  5009               	movf	(??_isspace+1)^0,w,c
 15497  00527A  220B               	addwfc	(??_isspace+3)^0,f,c
 15498  00527C  500B               	movf	(??_isspace+3)^0,w,c
 15499  00527E  E109               	bnz	u9800
 15500  005280  0E05               	movlw	5
 15501  005282  5C0A               	subwf	(??_isspace+2)^0,w,c
 15502  005284  A0D8               	btfss	status,0,c
 15503  005286  EF47  F029         	goto	u9801
 15504  00528A  EF49  F029         	goto	u9800
 15505  00528E                     u9801:
 15506  00528E  EF4B  F029         	goto	l9075
 15507  005292                     u9800:
 15508  005292  0E00               	movlw	0
 15509  005294  6E0C               	movwf	_isspace$1475^0,c
 15510  005296                     l9075:
 15511  005296  C00C  F006         	movff	_isspace$1475,?_isspace
 15512  00529A  6A07               	clrf	(?_isspace+1)^0,c
 15513  00529C  0012               	return		;funcret
 15514  00529E                     __end_of_isspace:
 15515                           	opt callstack 0
 15516                           
 15517 ;; *************** function _isdigit *****************
 15518 ;; Defined at:
 15519 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15520 ;; Parameters:    Size  Location     Type
 15521 ;;  c               2    5[COMRAM] int 
 15522 ;; Auto vars:     Size  Location     Type
 15523 ;;		None
 15524 ;; Return value:  Size  Location     Type
 15525 ;;                  2    5[COMRAM] int 
 15526 ;; Registers used:
 15527 ;;		wreg, status,2, status,0
 15528 ;; Tracked objects:
 15529 ;;		On entry : 0/0
 15530 ;;		On exit  : 0/0
 15531 ;;		Unchanged: 0/0
 15532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15533 ;;      Params:         2       0       0       0       0       0       0       0       0
 15534 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15535 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15536 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15537 ;;Total ram usage:        6 bytes
 15538 ;; Hardware stack levels used:    1
 15539 ;; Hardware stack levels required when called:    2
 15540 ;; This function calls:
 15541 ;;		Nothing
 15542 ;; This function is called by:
 15543 ;;		_vfpfcnvrt
 15544 ;;		_atoi
 15545 ;; This function uses a non-reentrant model
 15546 ;;
 15547                           
 15548                           	psect	text63
 15549  005620                     __ptext63:
 15550                           	opt callstack 0
 15551  005620                     _isdigit:
 15552                           	opt callstack 24
 15553  005620  0ED0               	movlw	208
 15554  005622  6E08               	movwf	??_isdigit^0,c
 15555  005624  0EFF               	movlw	255
 15556  005626  6E09               	movwf	(??_isdigit+1)^0,c
 15557  005628  C006  F00A         	movff	isdigit@c,??_isdigit+2
 15558  00562C  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 15559  005630  5008               	movf	??_isdigit^0,w,c
 15560  005632  260A               	addwf	(??_isdigit+2)^0,f,c
 15561  005634  5009               	movf	(??_isdigit+1)^0,w,c
 15562  005636  220B               	addwfc	(??_isdigit+3)^0,f,c
 15563  005638  500B               	movf	(??_isdigit+3)^0,w,c
 15564  00563A  E10A               	bnz	u8840
 15565  00563C  0E0A               	movlw	10
 15566  00563E  5C0A               	subwf	(??_isdigit+2)^0,w,c
 15567  005640  A0D8               	btfss	status,0,c
 15568  005642  EF25  F02B         	goto	u8841
 15569  005646  EF28  F02B         	goto	u8840
 15570  00564A                     u8841:
 15571  00564A  0E01               	movlw	1
 15572  00564C  EF29  F02B         	goto	u8850
 15573  005650                     u8840:
 15574  005650  0E00               	movlw	0
 15575  005652                     u8850:
 15576  005652  6E06               	movwf	?_isdigit^0,c
 15577  005654  6A07               	clrf	(?_isdigit+1)^0,c
 15578  005656  0012               	return		;funcret
 15579  005658                     __end_of_isdigit:
 15580                           	opt callstack 0
 15581                           
 15582 ;; *************** function ___wmul *****************
 15583 ;; Defined at:
 15584 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15585 ;; Parameters:    Size  Location     Type
 15586 ;;  multiplier      2    5[COMRAM] unsigned int 
 15587 ;;  multiplicand    2    7[COMRAM] unsigned int 
 15588 ;; Auto vars:     Size  Location     Type
 15589 ;;  product         2    9[COMRAM] unsigned int 
 15590 ;; Return value:  Size  Location     Type
 15591 ;;                  2    5[COMRAM] unsigned int 
 15592 ;; Registers used:
 15593 ;;		wreg, status,2, status,0, prodl, prodh
 15594 ;; Tracked objects:
 15595 ;;		On entry : 0/0
 15596 ;;		On exit  : 0/0
 15597 ;;		Unchanged: 0/0
 15598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15599 ;;      Params:         4       0       0       0       0       0       0       0       0
 15600 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15601 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15602 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15603 ;;Total ram usage:        6 bytes
 15604 ;; Hardware stack levels used:    1
 15605 ;; Hardware stack levels required when called:    2
 15606 ;; This function calls:
 15607 ;;		Nothing
 15608 ;; This function is called by:
 15609 ;;		_atoi
 15610 ;; This function uses a non-reentrant model
 15611 ;;
 15612                           
 15613                           	psect	text64
 15614  005708                     __ptext64:
 15615                           	opt callstack 0
 15616  005708                     ___wmul:
 15617                           	opt callstack 23
 15618  005708  5006               	movf	___wmul@multiplier^0,w,c
 15619  00570A  0208               	mulwf	___wmul@multiplicand^0,c
 15620  00570C  CFF3 F00A          	movff	prodl,___wmul@product
 15621  005710  CFF4 F00B          	movff	prodh,___wmul@product+1
 15622  005714  5006               	movf	___wmul@multiplier^0,w,c
 15623  005716  0209               	mulwf	(___wmul@multiplicand+1)^0,c
 15624  005718  50F3               	movf	243,w,c
 15625  00571A  260B               	addwf	(___wmul@product+1)^0,f,c
 15626  00571C  5007               	movf	(___wmul@multiplier+1)^0,w,c
 15627  00571E  0208               	mulwf	___wmul@multiplicand^0,c
 15628  005720  50F3               	movf	243,w,c
 15629  005722  260B               	addwf	(___wmul@product+1)^0,f,c
 15630  005724  C00A  F006         	movff	___wmul@product,?___wmul
 15631  005728  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 15632  00572C  0012               	return		;funcret
 15633  00572E                     __end_of___wmul:
 15634                           	opt callstack 0
 15635                           
 15636 ;; *************** function _seLlegoAlDestino *****************
 15637 ;; Defined at:
 15638 ;;		line 848 in file "main.c"
 15639 ;; Parameters:    Size  Location     Type
 15640 ;;		None
 15641 ;; Auto vars:     Size  Location     Type
 15642 ;;  llegoDestino    1   10[COMRAM] unsigned char 
 15643 ;; Return value:  Size  Location     Type
 15644 ;;                  1    wreg      unsigned char 
 15645 ;; Registers used:
 15646 ;;		wreg, status,2, status,0, cstack
 15647 ;; Tracked objects:
 15648 ;;		On entry : 0/0
 15649 ;;		On exit  : 0/0
 15650 ;;		Unchanged: 0/0
 15651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15652 ;;      Params:         0       0       0       0       0       0       0       0       0
 15653 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15654 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15655 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15656 ;;Total ram usage:        1 bytes
 15657 ;; Hardware stack levels used:    1
 15658 ;; Hardware stack levels required when called:    3
 15659 ;; This function calls:
 15660 ;;		_dameLecturaAdc
 15661 ;; This function is called by:
 15662 ;;		_decidirDireccion
 15663 ;; This function uses a non-reentrant model
 15664 ;;
 15665                           
 15666                           	psect	text65
 15667  00568E                     __ptext65:
 15668                           	opt callstack 0
 15669  00568E                     _seLlegoAlDestino:
 15670                           	opt callstack 25
 15671  00568E                     
 15672                           ;main.c: 850:     T_BOOL llegoDestino = 0;
 15673  00568E  0E00               	movlw	0
 15674  005690  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15675  005692                     
 15676                           ;main.c: 853:     if (dameLecturaAdc(0) < 20)
 15677  005692  0E00               	movlw	0
 15678  005694  EC30  F02A         	call	_dameLecturaAdc
 15679  005698  BE07               	btfsc	(?_dameLecturaAdc+1)^0,7,c
 15680  00569A  EF5A  F02B         	goto	u11250
 15681  00569E  5007               	movf	(?_dameLecturaAdc+1)^0,w,c
 15682  0056A0  E107               	bnz	u11251
 15683  0056A2  0E14               	movlw	20
 15684  0056A4  5C06               	subwf	?_dameLecturaAdc^0,w,c
 15685  0056A6  B0D8               	btfsc	status,0,c
 15686  0056A8  EF58  F02B         	goto	u11251
 15687  0056AC  EF5A  F02B         	goto	u11250
 15688  0056B0                     u11251:
 15689  0056B0  EF5C  F02B         	goto	l542
 15690  0056B4                     u11250:
 15691  0056B4                     
 15692                           ;main.c: 854:         llegoDestino = 1;
 15693  0056B4  0E01               	movlw	1
 15694  0056B6  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15695  0056B8                     l542:
 15696                           
 15697                           ;main.c: 856:     return llegoDestino;
 15698  0056B8  500B               	movf	seLlegoAlDestino@llegoDestino^0,w,c
 15699  0056BA  0012               	return		;funcret
 15700  0056BC                     __end_of_seLlegoAlDestino:
 15701                           	opt callstack 0
 15702                           
 15703 ;; *************** function _dameLecturaAdc *****************
 15704 ;; Defined at:
 15705 ;;		line 12 in file "./adc.h"
 15706 ;; Parameters:    Size  Location     Type
 15707 ;;  canalLeer       1    wreg     unsigned char 
 15708 ;; Auto vars:     Size  Location     Type
 15709 ;;  canalLeer       1    9[COMRAM] unsigned char 
 15710 ;; Return value:  Size  Location     Type
 15711 ;;                  2    5[COMRAM] short 
 15712 ;; Registers used:
 15713 ;;		wreg, status,2, status,0
 15714 ;; Tracked objects:
 15715 ;;		On entry : 0/0
 15716 ;;		On exit  : 0/0
 15717 ;;		Unchanged: 0/0
 15718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15719 ;;      Params:         2       0       0       0       0       0       0       0       0
 15720 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15721 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15722 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15723 ;;Total ram usage:        5 bytes
 15724 ;; Hardware stack levels used:    1
 15725 ;; Hardware stack levels required when called:    2
 15726 ;; This function calls:
 15727 ;;		Nothing
 15728 ;; This function is called by:
 15729 ;;		_seLlegoAlDestino
 15730 ;;		_probarSensores
 15731 ;; This function uses a non-reentrant model
 15732 ;;
 15733                           
 15734                           	psect	text66
 15735  005460                     __ptext66:
 15736                           	opt callstack 0
 15737  005460                     _dameLecturaAdc:
 15738                           	opt callstack 25
 15739                           
 15740                           ;incstack = 0
 15741                           ;dameLecturaAdc@canalLeer stored from wreg
 15742  005460  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
 15743  005462                     
 15744                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 15745  005462  0E06               	movlw	6
 15746  005464                     u12177:
 15747  005464  2EE8               	decfsz	wreg,f,c
 15748  005466  D7FE               	bra	u12177
 15749  005468  D000               	nop2	
 15750  00546A                     
 15751                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
 15752  00546A  80C2               	bsf	194,0,c	;volatile
 15753  00546C                     
 15754                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
 15755  00546C  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
 15756  005470  4608               	rlncf	??_dameLecturaAdc^0,f,c
 15757  005472  4608               	rlncf	??_dameLecturaAdc^0,f,c
 15758  005474  50C2               	movf	194,w,c	;volatile
 15759  005476  1808               	xorwf	??_dameLecturaAdc^0,w,c
 15760  005478  0BC3               	andlw	-61
 15761  00547A  1808               	xorwf	??_dameLecturaAdc^0,w,c
 15762  00547C  6EC2               	movwf	194,c	;volatile
 15763  00547E                     
 15764                           ;./adc.h: 18:     ADCON0bits.GO = 1;
 15765  00547E  82C2               	bsf	194,1,c	;volatile
 15766  005480                     
 15767                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
 15768  005480  82C2               	bsf	194,1,c	;volatile
 15769  005482                     l239:
 15770  005482  B2C2               	btfsc	194,1,c	;volatile
 15771  005484  EF46  F02A         	goto	u10851
 15772  005488  EF48  F02A         	goto	u10850
 15773  00548C                     u10851:
 15774  00548C  EF41  F02A         	goto	l239
 15775  005490                     u10850:
 15776  005490                     
 15777                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
 15778  005490  90C2               	bcf	194,0,c	;volatile
 15779  005492                     
 15780                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
 15781  005492  50C4               	movf	196,w,c	;volatile
 15782  005494  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
 15783  005496  6A08               	clrf	??_dameLecturaAdc^0,c
 15784  005498  50C3               	movf	195,w,c	;volatile
 15785  00549A  2408               	addwf	??_dameLecturaAdc^0,w,c
 15786  00549C  6E06               	movwf	?_dameLecturaAdc^0,c
 15787  00549E  0E00               	movlw	0
 15788  0054A0  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
 15789  0054A2  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
 15790  0054A4  0012               	return		;funcret
 15791  0054A6                     __end_of_dameLecturaAdc:
 15792                           	opt callstack 0
 15793                           
 15794 ;; *************** function _mostrarDireccionElegida *****************
 15795 ;; Defined at:
 15796 ;;		line 860 in file "main.c"
 15797 ;; Parameters:    Size  Location     Type
 15798 ;;  direccionEle    1    wreg     unsigned char 
 15799 ;; Auto vars:     Size  Location     Type
 15800 ;;  direccionEle    1   10[COMRAM] unsigned char 
 15801 ;; Return value:  Size  Location     Type
 15802 ;;                  1    wreg      void 
 15803 ;; Registers used:
 15804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15805 ;; Tracked objects:
 15806 ;;		On entry : 0/0
 15807 ;;		On exit  : 0/0
 15808 ;;		Unchanged: 0/0
 15809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15810 ;;      Params:         0       0       0       0       0       0       0       0       0
 15811 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15812 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15813 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15814 ;;Total ram usage:        3 bytes
 15815 ;; Hardware stack levels used:    1
 15816 ;; Hardware stack levels required when called:    4
 15817 ;; This function calls:
 15818 ;;		_UART_printf
 15819 ;; This function is called by:
 15820 ;;		_decidirDireccion
 15821 ;; This function uses a non-reentrant model
 15822 ;;
 15823                           
 15824                           	psect	text67
 15825  004C5C                     __ptext67:
 15826                           	opt callstack 0
 15827  004C5C                     _mostrarDireccionElegida:
 15828                           	opt callstack 24
 15829                           
 15830                           ;incstack = 0
 15831                           ;mostrarDireccionElegida@direccionElegida stored from wreg
 15832  004C5C  6E0B               	movwf	mostrarDireccionElegida@direccionElegida^0,c
 15833  004C5E                     
 15834                           ;main.c: 862:     switch (direccionElegida) {
 15835  004C5E  EF51  F026         	goto	l10033
 15836  004C62                     l10023:
 15837                           
 15838                           ;main.c: 864:             UART_printf("\rDireccion Elegida: ENFRENTE\n\n\r");
 15839  004C62  0EEB               	movlw	low STR_16
 15840  004C64  6E07               	movwf	UART_printf@cadena^0,c
 15841  004C66  0E7E               	movlw	high STR_16
 15842  004C68  6E08               	movwf	(UART_printf@cadena+1)^0,c
 15843  004C6A  EC1D  F028         	call	_UART_printf	;wreg free
 15844                           
 15845                           ;main.c: 865:             break;
 15846  004C6E  EF6E  F026         	goto	l553
 15847  004C72                     l10025:
 15848                           
 15849                           ;main.c: 868:             UART_printf("\rDireccion Elegida: IZQUIERDA\n\n\r");
 15850  004C72  0EAA               	movlw	low STR_17
 15851  004C74  6E07               	movwf	UART_printf@cadena^0,c
 15852  004C76  0E7E               	movlw	high STR_17
 15853  004C78  6E08               	movwf	(UART_printf@cadena+1)^0,c
 15854  004C7A  EC1D  F028         	call	_UART_printf	;wreg free
 15855                           
 15856                           ;main.c: 869:             break;
 15857  004C7E  EF6E  F026         	goto	l553
 15858  004C82                     l10027:
 15859                           
 15860                           ;main.c: 872:             UART_printf("\rDireccion Elegida: DERECHA\n\n\r");
 15861  004C82  0E2B               	movlw	low STR_18
 15862  004C84  6E07               	movwf	UART_printf@cadena^0,c
 15863  004C86  0E7F               	movlw	high STR_18
 15864  004C88  6E08               	movwf	(UART_printf@cadena+1)^0,c
 15865  004C8A  EC1D  F028         	call	_UART_printf	;wreg free
 15866                           
 15867                           ;main.c: 873:             break;
 15868  004C8E  EF6E  F026         	goto	l553
 15869  004C92                     l10029:
 15870                           
 15871                           ;main.c: 876:             UART_printf("\rDireccion Elegida: CALLEJON\n\n\r");
 15872  004C92  0E0B               	movlw	low STR_19
 15873  004C94  6E07               	movwf	UART_printf@cadena^0,c
 15874  004C96  0E7F               	movlw	high STR_19
 15875  004C98  6E08               	movwf	(UART_printf@cadena+1)^0,c
 15876  004C9A  EC1D  F028         	call	_UART_printf	;wreg free
 15877                           
 15878                           ;main.c: 877:             break;
 15879  004C9E  EF6E  F026         	goto	l553
 15880  004CA2                     l10033:
 15881  004CA2  500B               	movf	mostrarDireccionElegida@direccionElegida^0,w,c
 15882  004CA4  6E09               	movwf	??_mostrarDireccionElegida^0,c
 15883  004CA6  6A0A               	clrf	(??_mostrarDireccionElegida+1)^0,c
 15884                           
 15885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15886                           ; Switch size 1, requested type "simple"
 15887                           ; Number of cases is 1, Range of values is 0 to 0
 15888                           ; switch strategies available:
 15889                           ; Name         Instructions Cycles
 15890                           ; simple_byte            4     3 (average)
 15891                           ;	Chosen strategy is simple_byte
 15892  004CA8  500A               	movf	(??_mostrarDireccionElegida+1)^0,w,c
 15893  004CAA  0A00               	xorlw	0	; case 0
 15894  004CAC  B4D8               	btfsc	status,2,c
 15895  004CAE  EF5B  F026         	goto	l11249
 15896  004CB2  EF6E  F026         	goto	l553
 15897  004CB6                     l11249:
 15898                           
 15899                           ; Switch size 1, requested type "simple"
 15900                           ; Number of cases is 4, Range of values is 0 to 3
 15901                           ; switch strategies available:
 15902                           ; Name         Instructions Cycles
 15903                           ; simple_byte           13     7 (average)
 15904                           ;	Chosen strategy is simple_byte
 15905  004CB6  5009               	movf	??_mostrarDireccionElegida^0,w,c
 15906  004CB8  0A00               	xorlw	0	; case 0
 15907  004CBA  B4D8               	btfsc	status,2,c
 15908  004CBC  EF49  F026         	goto	l10029
 15909  004CC0  0A01               	xorlw	1	; case 1
 15910  004CC2  B4D8               	btfsc	status,2,c
 15911  004CC4  EF31  F026         	goto	l10023
 15912  004CC8  0A03               	xorlw	3	; case 2
 15913  004CCA  B4D8               	btfsc	status,2,c
 15914  004CCC  EF39  F026         	goto	l10025
 15915  004CD0  0A01               	xorlw	1	; case 3
 15916  004CD2  B4D8               	btfsc	status,2,c
 15917  004CD4  EF41  F026         	goto	l10027
 15918  004CD8  EF6E  F026         	goto	l553
 15919  004CDC                     l553:
 15920  004CDC  0012               	return		;funcret
 15921  004CDE                     __end_of_mostrarDireccionElegida:
 15922                           	opt callstack 0
 15923                           
 15924 ;; *************** function _UART_printf *****************
 15925 ;; Defined at:
 15926 ;;		line 47 in file "./UART.h"
 15927 ;; Parameters:    Size  Location     Type
 15928 ;;  cadena          2    6[COMRAM] PTR unsigned char 
 15929 ;;		 -> STR_19(32), STR_18(31), STR_17(33), STR_16(32), 
 15930 ;;		 -> STR_15(23), STR_14(34), STR_13(63), STR_12(56), 
 15931 ;;		 -> STR_10(6), STR_9(9), STR_8(11), STR_7(10), 
 15932 ;;		 -> buffer(50), STR_2(25), STR_1(24), 
 15933 ;; Auto vars:     Size  Location     Type
 15934 ;;		None
 15935 ;; Return value:  Size  Location     Type
 15936 ;;                  1    wreg      void 
 15937 ;; Registers used:
 15938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15939 ;; Tracked objects:
 15940 ;;		On entry : 0/0
 15941 ;;		On exit  : 0/0
 15942 ;;		Unchanged: 0/0
 15943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15944 ;;      Params:         2       0       0       0       0       0       0       0       0
 15945 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15946 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15947 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15948 ;;Total ram usage:        2 bytes
 15949 ;; Hardware stack levels used:    1
 15950 ;; Hardware stack levels required when called:    3
 15951 ;; This function calls:
 15952 ;;		_UART_write
 15953 ;; This function is called by:
 15954 ;;		_visualizarPasosRealizados
 15955 ;;		_comportamientoBasico
 15956 ;;		_mostrarDireccionElegida
 15957 ;;		_decidirDireccion
 15958 ;;		_probarSensores
 15959 ;;		_probarUltrasonico
 15960 ;; This function uses a non-reentrant model
 15961 ;;
 15962                           
 15963                           	psect	text68
 15964  00503A                     __ptext68:
 15965                           	opt callstack 0
 15966  00503A                     _UART_printf:
 15967                           	opt callstack 26
 15968  00503A                     
 15969                           ;./UART.h: 48:     while (*cadena) {
 15970  00503A  EF33  F028         	goto	l9667
 15971  00503E                     l9663:
 15972                           
 15973                           ;./UART.h: 49:         UART_write(*cadena++);
 15974  00503E  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 15975  005042  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 15976  005046  6AF8               	clrf	tblptru,c
 15977  005048  0E07               	movlw	(high __ramtop+-1)
 15978  00504A  64F7               	cpfsgt	tblptrh,c
 15979  00504C  D003               	bra	u10827
 15980  00504E  0008               	tblrd		*
 15981  005050  50F5               	movf	tablat,w,c
 15982  005052  D005               	bra	u10820
 15983  005054                     u10827:
 15984  005054  CFF6 FFE9          	movff	tblptrl,fsr0l
 15985  005058  CFF7 FFEA          	movff	tblptrh,fsr0h
 15986  00505C  50EF               	movf	indf0,w,c
 15987  00505E                     u10820:
 15988  00505E  ECE6  F02B         	call	_UART_write
 15989  005062  4A07               	infsnz	UART_printf@cadena^0,f,c
 15990  005064  2A08               	incf	(UART_printf@cadena+1)^0,f,c
 15991  005066                     l9667:
 15992                           
 15993                           ;./UART.h: 48:     while (*cadena) {
 15994  005066  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 15995  00506A  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 15996  00506E  6AF8               	clrf	tblptru,c
 15997  005070  0E07               	movlw	(high __ramtop+-1)
 15998  005072  64F7               	cpfsgt	tblptrh,c
 15999  005074  D003               	bra	u10837
 16000  005076  0008               	tblrd		*
 16001  005078  50F5               	movf	tablat,w,c
 16002  00507A  D005               	bra	u10830
 16003  00507C                     u10837:
 16004  00507C  CFF6 FFE9          	movff	tblptrl,fsr0l
 16005  005080  CFF7 FFEA          	movff	tblptrh,fsr0h
 16006  005084  50EF               	movf	indf0,w,c
 16007  005086                     u10830:
 16008  005086  0900               	iorlw	0
 16009  005088  A4D8               	btfss	status,2,c
 16010  00508A  EF49  F028         	goto	u10841
 16011  00508E  EF4B  F028         	goto	u10840
 16012  005092                     u10841:
 16013  005092  EF1F  F028         	goto	l9663
 16014  005096                     u10840:
 16015  005096  0012               	return		;funcret
 16016  005098                     __end_of_UART_printf:
 16017                           	opt callstack 0
 16018                           
 16019 ;; *************** function _UART_write *****************
 16020 ;; Defined at:
 16021 ;;		line 42 in file "./UART.h"
 16022 ;; Parameters:    Size  Location     Type
 16023 ;;  dato            1    wreg     unsigned char 
 16024 ;; Auto vars:     Size  Location     Type
 16025 ;;  dato            1    5[COMRAM] unsigned char 
 16026 ;; Return value:  Size  Location     Type
 16027 ;;                  1    wreg      void 
 16028 ;; Registers used:
 16029 ;;		wreg
 16030 ;; Tracked objects:
 16031 ;;		On entry : 0/0
 16032 ;;		On exit  : 0/0
 16033 ;;		Unchanged: 0/0
 16034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16035 ;;      Params:         0       0       0       0       0       0       0       0       0
 16036 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16037 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16038 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16039 ;;Total ram usage:        1 bytes
 16040 ;; Hardware stack levels used:    1
 16041 ;; Hardware stack levels required when called:    2
 16042 ;; This function calls:
 16043 ;;		Nothing
 16044 ;; This function is called by:
 16045 ;;		_UART_printf
 16046 ;; This function uses a non-reentrant model
 16047 ;;
 16048                           
 16049                           	psect	text69
 16050  0057CC                     __ptext69:
 16051                           	opt callstack 0
 16052  0057CC                     _UART_write:
 16053                           	opt callstack 26
 16054                           
 16055                           ;incstack = 0
 16056                           ;UART_write@dato stored from wreg
 16057  0057CC  6E06               	movwf	UART_write@dato^0,c
 16058  0057CE                     
 16059                           ;./UART.h: 43:     TXREG = dato;
 16060  0057CE  C006  FFAD         	movff	UART_write@dato,4013	;volatile
 16061  0057D2                     l224:
 16062  0057D2  A2AC               	btfss	172,1,c	;volatile
 16063  0057D4  EFEE  F02B         	goto	u10641
 16064  0057D8  EFF0  F02B         	goto	u10640
 16065  0057DC                     u10641:
 16066  0057DC  EFE9  F02B         	goto	l224
 16067  0057E0                     u10640:
 16068  0057E0  0012               	return		;funcret
 16069  0057E2                     __end_of_UART_write:
 16070                           	opt callstack 0
 16071                           
 16072 ;; *************** function _hayCruce *****************
 16073 ;; Defined at:
 16074 ;;		line 712 in file "main.c"
 16075 ;; Parameters:    Size  Location     Type
 16076 ;;  caminosRecor    2   63[COMRAM] PTR unsigned char 
 16077 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 16078 ;;  investigando    1   65[COMRAM] unsigned char 
 16079 ;; Auto vars:     Size  Location     Type
 16080 ;;  contCaminos     1   66[COMRAM] unsigned char 
 16081 ;; Return value:  Size  Location     Type
 16082 ;;                  1    wreg      unsigned char 
 16083 ;; Registers used:
 16084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16085 ;; Tracked objects:
 16086 ;;		On entry : 0/0
 16087 ;;		On exit  : 0/0
 16088 ;;		Unchanged: 0/0
 16089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16090 ;;      Params:         3       0       0       0       0       0       0       0       0
 16091 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16092 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16093 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16094 ;;Total ram usage:        4 bytes
 16095 ;; Hardware stack levels used:    1
 16096 ;; Hardware stack levels required when called:    3
 16097 ;; This function calls:
 16098 ;;		___flge
 16099 ;; This function is called by:
 16100 ;;		_decidirDireccion
 16101 ;; This function uses a non-reentrant model
 16102 ;;
 16103                           
 16104                           	psect	text70
 16105  0037AC                     __ptext70:
 16106                           	opt callstack 0
 16107  0037AC                     _hayCruce:
 16108                           	opt callstack 25
 16109  0037AC                     
 16110                           ;main.c: 714:     T_UBYTE contCaminos = 0;
 16111  0037AC  0E00               	movlw	0
 16112  0037AE  6E43               	movwf	hayCruce@contCaminos^0,c
 16113                           
 16114                           ;main.c: 716:     paredEnfrente = 0;
 16115  0037B0  0E00               	movlw	0
 16116  0037B2  0101               	movlb	1	; () banked
 16117  0037B4  6F3C               	movwf	_paredEnfrente& (0+255),b
 16118                           
 16119                           ;main.c: 717:     paredDerecha = 0;
 16120  0037B6  0E00               	movlw	0
 16121  0037B8  6F3B               	movwf	_paredDerecha& (0+255),b
 16122                           
 16123                           ;main.c: 718:     paredIzquierda = 0;
 16124  0037BA  0E00               	movlw	0
 16125  0037BC  6F3A               	movwf	_paredIzquierda& (0+255),b
 16126                           
 16127                           ;main.c: 720:     if (!investigandoCruce) {
 16128  0037BE  5042               	movf	hayCruce@investigandoCruce^0,w,c
 16129  0037C0  A4D8               	btfss	status,2,c
 16130  0037C2  EFE5  F01B         	goto	u11161
 16131  0037C6  EFE7  F01B         	goto	u11160
 16132  0037CA                     u11161:
 16133  0037CA  EF91  F01C         	goto	l10001
 16134  0037CE                     u11160:
 16135  0037CE                     
 16136                           ; BSR set to: 1
 16137                           ;main.c: 722:         if (sensorEnfrente > 35) {
 16138  0037CE  0E00               	movlw	0
 16139  0037D0  6E34               	movwf	___flge@ff1^0,c
 16140  0037D2  0E00               	movlw	0
 16141  0037D4  6E35               	movwf	(___flge@ff1+1)^0,c
 16142  0037D6  0E0C               	movlw	12
 16143  0037D8  6E36               	movwf	(___flge@ff1+2)^0,c
 16144  0037DA  0E42               	movlw	66
 16145  0037DC  6E37               	movwf	(___flge@ff1+3)^0,c
 16146  0037DE  C124  F038         	movff	_sensorEnfrente,___flge@ff2
 16147  0037E2  C125  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
 16148  0037E6  C126  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
 16149  0037EA  C127  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
 16150  0037EE  EC11  F021         	call	___flge	;wreg free
 16151  0037F2  B0D8               	btfsc	status,0,c
 16152  0037F4  EFFE  F01B         	goto	u11171
 16153  0037F8  EF00  F01C         	goto	u11170
 16154  0037FC                     u11171:
 16155  0037FC  EF04  F01C         	goto	l9931
 16156  003800                     u11170:
 16157  003800                     
 16158                           ;main.c: 723:             paredEnfrente = 1;
 16159  003800  0E01               	movlw	1
 16160  003802  0101               	movlb	1	; () banked
 16161  003804  6F3C               	movwf	_paredEnfrente& (0+255),b
 16162  003806                     
 16163                           ; BSR set to: 1
 16164                           ;main.c: 724:             contCaminos++;
 16165  003806  2A43               	incf	hayCruce@contCaminos^0,f,c
 16166  003808                     l9931:
 16167                           
 16168                           ;main.c: 727:         if (sensorIzquierda > 30) {
 16169  003808  0E00               	movlw	0
 16170  00380A  6E34               	movwf	___flge@ff1^0,c
 16171  00380C  0E00               	movlw	0
 16172  00380E  6E35               	movwf	(___flge@ff1+1)^0,c
 16173  003810  0EF0               	movlw	240
 16174  003812  6E36               	movwf	(___flge@ff1+2)^0,c
 16175  003814  0E41               	movlw	65
 16176  003816  6E37               	movwf	(___flge@ff1+3)^0,c
 16177  003818  C128  F038         	movff	_sensorIzquierda,___flge@ff2
 16178  00381C  C129  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
 16179  003820  C12A  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
 16180  003824  C12B  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
 16181  003828  EC11  F021         	call	___flge	;wreg free
 16182  00382C  B0D8               	btfsc	status,0,c
 16183  00382E  EF1B  F01C         	goto	u11181
 16184  003832  EF1D  F01C         	goto	u11180
 16185  003836                     u11181:
 16186  003836  EF21  F01C         	goto	l9937
 16187  00383A                     u11180:
 16188  00383A                     
 16189                           ;main.c: 728:             paredIzquierda = 1;
 16190  00383A  0E01               	movlw	1
 16191  00383C  0101               	movlb	1	; () banked
 16192  00383E  6F3A               	movwf	_paredIzquierda& (0+255),b
 16193  003840                     
 16194                           ; BSR set to: 1
 16195                           ;main.c: 729:             contCaminos++;
 16196  003840  2A43               	incf	hayCruce@contCaminos^0,f,c
 16197  003842                     l9937:
 16198                           
 16199                           ;main.c: 732:         if (sensorDerecha > 30) {
 16200  003842  0E00               	movlw	0
 16201  003844  6E34               	movwf	___flge@ff1^0,c
 16202  003846  0E00               	movlw	0
 16203  003848  6E35               	movwf	(___flge@ff1+1)^0,c
 16204  00384A  0EF0               	movlw	240
 16205  00384C  6E36               	movwf	(___flge@ff1+2)^0,c
 16206  00384E  0E41               	movlw	65
 16207  003850  6E37               	movwf	(___flge@ff1+3)^0,c
 16208  003852  C12C  F038         	movff	_sensorDerecha,___flge@ff2
 16209  003856  C12D  F039         	movff	_sensorDerecha+1,___flge@ff2+1
 16210  00385A  C12E  F03A         	movff	_sensorDerecha+2,___flge@ff2+2
 16211  00385E  C12F  F03B         	movff	_sensorDerecha+3,___flge@ff2+3
 16212  003862  EC11  F021         	call	___flge	;wreg free
 16213  003866  B0D8               	btfsc	status,0,c
 16214  003868  EF38  F01C         	goto	u11191
 16215  00386C  EF3A  F01C         	goto	u11190
 16216  003870                     u11191:
 16217  003870  EF3E  F01C         	goto	l9943
 16218  003874                     u11190:
 16219  003874                     
 16220                           ;main.c: 733:             paredDerecha = 1;
 16221  003874  0E01               	movlw	1
 16222  003876  0101               	movlb	1	; () banked
 16223  003878  6F3B               	movwf	_paredDerecha& (0+255),b
 16224  00387A                     
 16225                           ; BSR set to: 1
 16226                           ;main.c: 734:             contCaminos++;
 16227  00387A  2A43               	incf	hayCruce@contCaminos^0,f,c
 16228  00387C                     l9943:
 16229                           
 16230                           ;main.c: 738:         if (contCaminos > 1) {
 16231  00387C  0E01               	movlw	1
 16232  00387E  6443               	cpfsgt	hayCruce@contCaminos^0,c
 16233  003880  EF44  F01C         	goto	u11201
 16234  003884  EF46  F01C         	goto	u11200
 16235  003888                     u11201:
 16236  003888  EF91  F01C         	goto	l10001
 16237  00388C                     u11200:
 16238  00388C                     
 16239                           ;main.c: 749:                 if (paredDerecha)
 16240  00388C  0101               	movlb	1	; () banked
 16241  00388E  513B               	movf	_paredDerecha& (0+255),w,b
 16242  003890  B4D8               	btfsc	status,2,c
 16243  003892  EF4D  F01C         	goto	u11211
 16244  003896  EF4F  F01C         	goto	u11210
 16245  00389A                     u11211:
 16246  00389A  EF59  F01C         	goto	l9957
 16247  00389E                     u11210:
 16248  00389E                     
 16249                           ; BSR set to: 1
 16250  00389E  EE20 F002          	lfsr	2,2
 16251  0038A2  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16252  0038A4  26D9               	addwf	fsr2l,f,c
 16253  0038A6  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16254  0038A8  22DA               	addwfc	fsr2h,f,c
 16255  0038AA  0E31               	movlw	49
 16256  0038AC  6EDF               	movwf	indf2,c
 16257  0038AE  EF61  F01C         	goto	l9977
 16258  0038B2                     l9957:
 16259                           
 16260                           ; BSR set to: 1
 16261  0038B2  EE20 F002          	lfsr	2,2
 16262  0038B6  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16263  0038B8  26D9               	addwf	fsr2l,f,c
 16264  0038BA  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16265  0038BC  22DA               	addwfc	fsr2h,f,c
 16266  0038BE  0E30               	movlw	48
 16267  0038C0  6EDF               	movwf	indf2,c
 16268  0038C2                     l9977:
 16269                           
 16270                           ; BSR set to: 1
 16271                           ;main.c: 779:                 if (paredIzquierda)
 16272  0038C2  513A               	movf	_paredIzquierda& (0+255),w,b
 16273  0038C4  B4D8               	btfsc	status,2,c
 16274  0038C6  EF67  F01C         	goto	u11221
 16275  0038CA  EF69  F01C         	goto	u11220
 16276  0038CE                     u11221:
 16277  0038CE  EF73  F01C         	goto	l9981
 16278  0038D2                     u11220:
 16279  0038D2                     
 16280                           ; BSR set to: 1
 16281  0038D2  EE20 F001          	lfsr	2,1
 16282  0038D6  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16283  0038D8  26D9               	addwf	fsr2l,f,c
 16284  0038DA  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16285  0038DC  22DA               	addwfc	fsr2h,f,c
 16286  0038DE  0E31               	movlw	49
 16287  0038E0  6EDF               	movwf	indf2,c
 16288  0038E2  EF7B  F01C         	goto	l9983
 16289  0038E6                     l9981:
 16290                           
 16291                           ; BSR set to: 1
 16292  0038E6  EE20 F001          	lfsr	2,1
 16293  0038EA  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16294  0038EC  26D9               	addwf	fsr2l,f,c
 16295  0038EE  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16296  0038F0  22DA               	addwfc	fsr2h,f,c
 16297  0038F2  0E30               	movlw	48
 16298  0038F4  6EDF               	movwf	indf2,c
 16299  0038F6                     l9983:
 16300                           
 16301                           ; BSR set to: 1
 16302                           ;main.c: 788:                 if (paredEnfrente)
 16303  0038F6  513C               	movf	_paredEnfrente& (0+255),w,b
 16304  0038F8  B4D8               	btfsc	status,2,c
 16305  0038FA  EF81  F01C         	goto	u11231
 16306  0038FE  EF83  F01C         	goto	u11230
 16307  003902                     u11231:
 16308  003902  EF8B  F01C         	goto	l9987
 16309  003906                     u11230:
 16310  003906                     
 16311                           ; BSR set to: 1
 16312                           ;main.c: 789:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '1';
 16313  003906  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 16314  00390A  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 16315  00390E  0E31               	movlw	49
 16316  003910  6EDF               	movwf	indf2,c
 16317  003912  EF91  F01C         	goto	l10001
 16318  003916                     l9987:
 16319                           
 16320                           ; BSR set to: 1
 16321                           ;main.c: 791:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '0';
 16322  003916  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 16323  00391A  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 16324  00391E  0E30               	movlw	48
 16325  003920  6EDF               	movwf	indf2,c
 16326  003922                     l10001:
 16327                           
 16328                           ;main.c: 816:     if (contCaminos > 1)
 16329  003922  0E01               	movlw	1
 16330  003924  6443               	cpfsgt	hayCruce@contCaminos^0,c
 16331  003926  EF97  F01C         	goto	u11241
 16332  00392A  EF99  F01C         	goto	u11240
 16333  00392E                     u11241:
 16334  00392E  EF9C  F01C         	goto	l10009
 16335  003932                     u11240:
 16336  003932                     
 16337                           ;main.c: 817:         return 1;
 16338  003932  0E01               	movlw	1
 16339  003934  EF9D  F01C         	goto	l523
 16340  003938                     l10009:
 16341                           
 16342                           ;main.c: 820:         return 0;
 16343  003938  0E00               	movlw	0
 16344  00393A                     l523:
 16345  00393A  0012               	return		;funcret
 16346  00393C                     __end_of_hayCruce:
 16347                           	opt callstack 0
 16348                           
 16349 ;; *************** function ___flge *****************
 16350 ;; Defined at:
 16351 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 16352 ;; Parameters:    Size  Location     Type
 16353 ;;  ff1             4   51[COMRAM] unsigned char 
 16354 ;;  ff2             4   55[COMRAM] unsigned char 
 16355 ;; Auto vars:     Size  Location     Type
 16356 ;;		None
 16357 ;; Return value:  Size  Location     Type
 16358 ;;		None               void
 16359 ;; Registers used:
 16360 ;;		wreg, status,2, status,0
 16361 ;; Tracked objects:
 16362 ;;		On entry : 0/0
 16363 ;;		On exit  : 0/0
 16364 ;;		Unchanged: 0/0
 16365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16366 ;;      Params:         8       0       0       0       0       0       0       0       0
 16367 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16368 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16369 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16370 ;;Total ram usage:       12 bytes
 16371 ;; Hardware stack levels used:    1
 16372 ;; Hardware stack levels required when called:    2
 16373 ;; This function calls:
 16374 ;;		Nothing
 16375 ;; This function is called by:
 16376 ;;		_forzarEspejeo
 16377 ;;		_hayCruce
 16378 ;;		_decidirDireccion
 16379 ;;		_efgtoa
 16380 ;;		_roundf
 16381 ;;		_probarPID
 16382 ;;		_probarCruceT
 16383 ;; This function uses a non-reentrant model
 16384 ;;
 16385                           
 16386                           	psect	text71
 16387  004222                     __ptext71:
 16388                           	opt callstack 0
 16389  004222                     ___flge:
 16390                           	opt callstack 23
 16391  004222  0E00               	movlw	0
 16392  004224  1434               	andwf	___flge@ff1^0,w,c
 16393  004226  6E3C               	movwf	??___flge^0,c
 16394  004228  0E00               	movlw	0
 16395  00422A  1435               	andwf	(___flge@ff1+1)^0,w,c
 16396  00422C  6E3D               	movwf	(??___flge+1)^0,c
 16397  00422E  0E80               	movlw	128
 16398  004230  1436               	andwf	(___flge@ff1+2)^0,w,c
 16399  004232  6E3E               	movwf	(??___flge+2)^0,c
 16400  004234  0E7F               	movlw	127
 16401  004236  1437               	andwf	(___flge@ff1+3)^0,w,c
 16402  004238  6E3F               	movwf	(??___flge+3)^0,c
 16403  00423A  503C               	movf	??___flge^0,w,c
 16404  00423C  103D               	iorwf	(??___flge+1)^0,w,c
 16405  00423E  103E               	iorwf	(??___flge+2)^0,w,c
 16406  004240  103F               	iorwf	(??___flge+3)^0,w,c
 16407  004242  A4D8               	btfss	status,2,c
 16408  004244  EF26  F021         	goto	u9561
 16409  004248  EF28  F021         	goto	u9560
 16410  00424C                     u9561:
 16411  00424C  EF30  F021         	goto	l8951
 16412  004250                     u9560:
 16413  004250  0E00               	movlw	0
 16414  004252  6E34               	movwf	___flge@ff1^0,c
 16415  004254  0E00               	movlw	0
 16416  004256  6E35               	movwf	(___flge@ff1+1)^0,c
 16417  004258  0E00               	movlw	0
 16418  00425A  6E36               	movwf	(___flge@ff1+2)^0,c
 16419  00425C  0E00               	movlw	0
 16420  00425E  6E37               	movwf	(___flge@ff1+3)^0,c
 16421  004260                     l8951:
 16422  004260  0E00               	movlw	0
 16423  004262  1438               	andwf	___flge@ff2^0,w,c
 16424  004264  6E3C               	movwf	??___flge^0,c
 16425  004266  0E00               	movlw	0
 16426  004268  1439               	andwf	(___flge@ff2+1)^0,w,c
 16427  00426A  6E3D               	movwf	(??___flge+1)^0,c
 16428  00426C  0E80               	movlw	128
 16429  00426E  143A               	andwf	(___flge@ff2+2)^0,w,c
 16430  004270  6E3E               	movwf	(??___flge+2)^0,c
 16431  004272  0E7F               	movlw	127
 16432  004274  143B               	andwf	(___flge@ff2+3)^0,w,c
 16433  004276  6E3F               	movwf	(??___flge+3)^0,c
 16434  004278  503C               	movf	??___flge^0,w,c
 16435  00427A  103D               	iorwf	(??___flge+1)^0,w,c
 16436  00427C  103E               	iorwf	(??___flge+2)^0,w,c
 16437  00427E  103F               	iorwf	(??___flge+3)^0,w,c
 16438  004280  A4D8               	btfss	status,2,c
 16439  004282  EF45  F021         	goto	u9571
 16440  004286  EF47  F021         	goto	u9570
 16441  00428A                     u9571:
 16442  00428A  EF4F  F021         	goto	l8955
 16443  00428E                     u9570:
 16444  00428E  0E00               	movlw	0
 16445  004290  6E38               	movwf	___flge@ff2^0,c
 16446  004292  0E00               	movlw	0
 16447  004294  6E39               	movwf	(___flge@ff2+1)^0,c
 16448  004296  0E00               	movlw	0
 16449  004298  6E3A               	movwf	(___flge@ff2+2)^0,c
 16450  00429A  0E00               	movlw	0
 16451  00429C  6E3B               	movwf	(___flge@ff2+3)^0,c
 16452  00429E                     l8955:
 16453  00429E  AE37               	btfss	(___flge@ff1+3)^0,7,c
 16454  0042A0  EF54  F021         	goto	u9581
 16455  0042A4  EF56  F021         	goto	u9580
 16456  0042A8                     u9581:
 16457  0042A8  EF5F  F021         	goto	l8959
 16458  0042AC                     u9580:
 16459  0042AC  6C34               	negf	___flge@ff1^0,c
 16460  0042AE  1E35               	comf	(___flge@ff1+1)^0,f,c
 16461  0042B0  B0D8               	btfsc	status,0,c
 16462  0042B2  2A35               	incf	(___flge@ff1+1)^0,f,c
 16463  0042B4  1E36               	comf	(___flge@ff1+2)^0,f,c
 16464  0042B6  B0D8               	btfsc	status,0,c
 16465  0042B8  2A36               	incf	(___flge@ff1+2)^0,f,c
 16466  0042BA  0E80               	movlw	128
 16467  0042BC  5637               	subfwb	(___flge@ff1+3)^0,f,c
 16468  0042BE                     l8959:
 16469  0042BE  AE3B               	btfss	(___flge@ff2+3)^0,7,c
 16470  0042C0  EF64  F021         	goto	u9591
 16471  0042C4  EF66  F021         	goto	u9590
 16472  0042C8                     u9591:
 16473  0042C8  EF6F  F021         	goto	l1226
 16474  0042CC                     u9590:
 16475  0042CC  6C38               	negf	___flge@ff2^0,c
 16476  0042CE  1E39               	comf	(___flge@ff2+1)^0,f,c
 16477  0042D0  B0D8               	btfsc	status,0,c
 16478  0042D2  2A39               	incf	(___flge@ff2+1)^0,f,c
 16479  0042D4  1E3A               	comf	(___flge@ff2+2)^0,f,c
 16480  0042D6  B0D8               	btfsc	status,0,c
 16481  0042D8  2A3A               	incf	(___flge@ff2+2)^0,f,c
 16482  0042DA  0E80               	movlw	128
 16483  0042DC  563B               	subfwb	(___flge@ff2+3)^0,f,c
 16484  0042DE                     l1226:
 16485  0042DE  0E00               	movlw	0
 16486  0042E0  1A34               	xorwf	___flge@ff1^0,f,c
 16487  0042E2  0E00               	movlw	0
 16488  0042E4  1A35               	xorwf	(___flge@ff1+1)^0,f,c
 16489  0042E6  0E00               	movlw	0
 16490  0042E8  1A36               	xorwf	(___flge@ff1+2)^0,f,c
 16491  0042EA  0E80               	movlw	128
 16492  0042EC  1A37               	xorwf	(___flge@ff1+3)^0,f,c
 16493  0042EE  0E00               	movlw	0
 16494  0042F0  1A38               	xorwf	___flge@ff2^0,f,c
 16495  0042F2  0E00               	movlw	0
 16496  0042F4  1A39               	xorwf	(___flge@ff2+1)^0,f,c
 16497  0042F6  0E00               	movlw	0
 16498  0042F8  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
 16499  0042FA  0E80               	movlw	128
 16500  0042FC  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
 16501  0042FE  5038               	movf	___flge@ff2^0,w,c
 16502  004300  5C34               	subwf	___flge@ff1^0,w,c
 16503  004302  5039               	movf	(___flge@ff2+1)^0,w,c
 16504  004304  5835               	subwfb	(___flge@ff1+1)^0,w,c
 16505  004306  503A               	movf	(___flge@ff2+2)^0,w,c
 16506  004308  5836               	subwfb	(___flge@ff1+2)^0,w,c
 16507  00430A  503B               	movf	(___flge@ff2+3)^0,w,c
 16508  00430C  5837               	subwfb	(___flge@ff1+3)^0,w,c
 16509  00430E  B0D8               	btfsc	status,0,c
 16510  004310  EF8C  F021         	goto	u9601
 16511  004314  EF8E  F021         	goto	u9600
 16512  004318                     u9601:
 16513  004318  EF91  F021         	goto	l8965
 16514  00431C                     u9600:
 16515  00431C  90D8               	bcf	status,0,c
 16516  00431E  EF92  F021         	goto	l1231
 16517  004322                     l8965:
 16518  004322  80D8               	bsf	status,0,c
 16519  004324                     l1231:
 16520  004324  0012               	return		;funcret
 16521  004326                     __end_of___flge:
 16522                           	opt callstack 0
 16523                           
 16524 ;; *************** function _caminoCorrecto *****************
 16525 ;; Defined at:
 16526 ;;		line 248 in file "main.c"
 16527 ;; Parameters:    Size  Location     Type
 16528 ;;  movimientos     2   17[COMRAM] PTR unsigned char 
 16529 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 16530 ;;  caminoFinal     2   19[COMRAM] PTR unsigned char 
 16531 ;;		 -> comportamientoBasico@caminoFinal(1000), 
 16532 ;;  numMovimient    2   21[COMRAM] unsigned int 
 16533 ;;  numMovimient    2   23[COMRAM] PTR unsigned int 
 16534 ;;		 -> comportamientoBasico@numMovimientosTotales(2), 
 16535 ;;  caminoActual    1   25[COMRAM] unsigned char 
 16536 ;; Auto vars:     Size  Location     Type
 16537 ;;		None
 16538 ;; Return value:  Size  Location     Type
 16539 ;;                  1    wreg      void 
 16540 ;; Registers used:
 16541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16542 ;; Tracked objects:
 16543 ;;		On entry : 0/0
 16544 ;;		On exit  : 0/0
 16545 ;;		Unchanged: 0/0
 16546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16547 ;;      Params:         9       0       0       0       0       0       0       0       0
 16548 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16549 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16550 ;;      Totals:         9       0       0       0       0       0       0       0       0
 16551 ;;Total ram usage:        9 bytes
 16552 ;; Hardware stack levels used:    1
 16553 ;; Hardware stack levels required when called:    3
 16554 ;; This function calls:
 16555 ;;		_combinarArreglos
 16556 ;;		_limpiarMovimientos
 16557 ;; This function is called by:
 16558 ;;		_comportamientoBasico
 16559 ;; This function uses a non-reentrant model
 16560 ;;
 16561                           
 16562                           	psect	text72
 16563  0054A6                     __ptext72:
 16564                           	opt callstack 0
 16565  0054A6                     _caminoCorrecto:
 16566                           	opt callstack 26
 16567  0054A6                     
 16568                           ;main.c: 248: void caminoCorrecto(T_UBYTE* movimientos, T_UBYTE* caminoFinal, T_UINT num
      +                          Movimientos,;main.c: 249:         T_UINT* numMovimientosFinal, T_UBYTE caminoActual) {;m
      +                          ain.c: 251:     movimientos[0] = caminoActual;
 16569  0054A6  C012  FFD9         	movff	caminoCorrecto@movimientos,fsr2l
 16570  0054AA  C013  FFDA         	movff	caminoCorrecto@movimientos+1,fsr2h
 16571  0054AE  C01A  FFDF         	movff	caminoCorrecto@caminoActual,indf2
 16572  0054B2                     
 16573                           ;main.c: 252:     combinarArreglos(movimientos, caminoFinal, numMovimientos, numMovimien
      +                          tosFinal);
 16574  0054B2  C012  F006         	movff	caminoCorrecto@movimientos,combinarArreglos@movimientos
 16575  0054B6  C013  F007         	movff	caminoCorrecto@movimientos+1,combinarArreglos@movimientos+1
 16576  0054BA  C014  F008         	movff	caminoCorrecto@caminoFinal,combinarArreglos@caminoFinal
 16577  0054BE  C015  F009         	movff	caminoCorrecto@caminoFinal+1,combinarArreglos@caminoFinal+1
 16578  0054C2  C016  F00A         	movff	caminoCorrecto@numMovimientos,combinarArreglos@numMovimientos
 16579  0054C6  C017  F00B         	movff	caminoCorrecto@numMovimientos+1,combinarArreglos@numMovimientos+1
 16580  0054CA  C018  F00C         	movff	caminoCorrecto@numMovimientosFinal,combinarArreglos@numMovimientosFinal
 16581  0054CE  C019  F00D         	movff	caminoCorrecto@numMovimientosFinal+1,combinarArreglos@numMovimientosFinal+1
 16582  0054D2  ECBC  F027         	call	_combinarArreglos	;wreg free
 16583  0054D6                     
 16584                           ;main.c: 253:     limpiarMovimientos(movimientos, &numMovimientos);
 16585  0054D6  C012  F006         	movff	caminoCorrecto@movimientos,limpiarMovimientos@movimientos
 16586  0054DA  C013  F007         	movff	caminoCorrecto@movimientos+1,limpiarMovimientos@movimientos+1
 16587  0054DE  0E16               	movlw	low caminoCorrecto@numMovimientos
 16588  0054E0  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
 16589  0054E2  0E00               	movlw	high caminoCorrecto@numMovimientos
 16590  0054E4  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
 16591  0054E6  EC77  F029         	call	_limpiarMovimientos	;wreg free
 16592  0054EA  0012               	return		;funcret
 16593  0054EC                     __end_of_caminoCorrecto:
 16594                           	opt callstack 0
 16595                           
 16596 ;; *************** function _limpiarMovimientos *****************
 16597 ;; Defined at:
 16598 ;;		line 840 in file "main.c"
 16599 ;; Parameters:    Size  Location     Type
 16600 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
 16601 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 16602 ;;  numMovimient    2    7[COMRAM] PTR unsigned int 
 16603 ;;		 -> comportamientoBasico@numMovimientos(2), caminoCorrecto@numMovimientos(2), 
 16604 ;; Auto vars:     Size  Location     Type
 16605 ;;  i               2   11[COMRAM] int 
 16606 ;; Return value:  Size  Location     Type
 16607 ;;                  1    wreg      void 
 16608 ;; Registers used:
 16609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16610 ;; Tracked objects:
 16611 ;;		On entry : 0/0
 16612 ;;		On exit  : 0/0
 16613 ;;		Unchanged: 0/0
 16614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16615 ;;      Params:         4       0       0       0       0       0       0       0       0
 16616 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16617 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16618 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16619 ;;Total ram usage:        8 bytes
 16620 ;; Hardware stack levels used:    1
 16621 ;; Hardware stack levels required when called:    2
 16622 ;; This function calls:
 16623 ;;		Nothing
 16624 ;; This function is called by:
 16625 ;;		_caminoCorrecto
 16626 ;;		_comportamientoBasico
 16627 ;; This function uses a non-reentrant model
 16628 ;;
 16629                           
 16630                           	psect	text73
 16631  0052EE                     __ptext73:
 16632                           	opt callstack 0
 16633  0052EE                     _limpiarMovimientos:
 16634                           	opt callstack 27
 16635  0052EE                     
 16636                           ;main.c: 842:     for (T_INT i = 0; i < *numMovimientos; i++)
 16637  0052EE  0E00               	movlw	0
 16638  0052F0  6E0D               	movwf	(limpiarMovimientos@i+1)^0,c
 16639  0052F2  0E00               	movlw	0
 16640  0052F4  6E0C               	movwf	limpiarMovimientos@i^0,c
 16641  0052F6  EF87  F029         	goto	l9873
 16642  0052FA                     l9869:
 16643                           
 16644                           ;main.c: 843:         movimientos[i] = 0;
 16645  0052FA  500C               	movf	limpiarMovimientos@i^0,w,c
 16646  0052FC  2406               	addwf	limpiarMovimientos@movimientos^0,w,c
 16647  0052FE  6ED9               	movwf	fsr2l,c
 16648  005300  500D               	movf	(limpiarMovimientos@i+1)^0,w,c
 16649  005302  2007               	addwfc	(limpiarMovimientos@movimientos+1)^0,w,c
 16650  005304  6EDA               	movwf	fsr2h,c
 16651  005306  0E00               	movlw	0
 16652  005308  6EDF               	movwf	indf2,c
 16653  00530A  4A0C               	infsnz	limpiarMovimientos@i^0,f,c
 16654  00530C  2A0D               	incf	(limpiarMovimientos@i+1)^0,f,c
 16655  00530E                     l9873:
 16656  00530E  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
 16657  005312  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
 16658  005316  50DE               	movf	postinc2,w,c
 16659  005318  5C0C               	subwf	limpiarMovimientos@i^0,w,c
 16660  00531A  50DE               	movf	postinc2,w,c
 16661  00531C  580D               	subwfb	(limpiarMovimientos@i+1)^0,w,c
 16662  00531E  A0D8               	btfss	status,0,c
 16663  005320  EF94  F029         	goto	u11101
 16664  005324  EF96  F029         	goto	u11100
 16665  005328                     u11101:
 16666  005328  EF7D  F029         	goto	l9869
 16667  00532C                     u11100:
 16668  00532C                     
 16669                           ;main.c: 845:     *numMovimientos = 0;
 16670  00532C  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
 16671  005330  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
 16672  005334  0E00               	movlw	0
 16673  005336  6EDE               	movwf	postinc2,c
 16674  005338  0E00               	movlw	0
 16675  00533A  6EDD               	movwf	postdec2,c
 16676  00533C  0012               	return		;funcret
 16677  00533E                     __end_of_limpiarMovimientos:
 16678                           	opt callstack 0
 16679                           
 16680 ;; *************** function _combinarArreglos *****************
 16681 ;; Defined at:
 16682 ;;		line 1337 in file "main.c"
 16683 ;; Parameters:    Size  Location     Type
 16684 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
 16685 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 16686 ;;  caminoFinal     2    7[COMRAM] PTR unsigned char 
 16687 ;;		 -> comportamientoBasico@caminoFinal(1000), 
 16688 ;;  numMovimient    2    9[COMRAM] unsigned int 
 16689 ;;  numMovimient    2   11[COMRAM] PTR unsigned int 
 16690 ;;		 -> comportamientoBasico@numMovimientosTotales(2), 
 16691 ;; Auto vars:     Size  Location     Type
 16692 ;;  i               2   15[COMRAM] int 
 16693 ;; Return value:  Size  Location     Type
 16694 ;;                  1    wreg      void 
 16695 ;; Registers used:
 16696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16697 ;; Tracked objects:
 16698 ;;		On entry : 0/0
 16699 ;;		On exit  : 0/0
 16700 ;;		Unchanged: 0/0
 16701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16702 ;;      Params:         8       0       0       0       0       0       0       0       0
 16703 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16704 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16705 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16706 ;;Total ram usage:       12 bytes
 16707 ;; Hardware stack levels used:    1
 16708 ;; Hardware stack levels required when called:    2
 16709 ;; This function calls:
 16710 ;;		Nothing
 16711 ;; This function is called by:
 16712 ;;		_caminoCorrecto
 16713 ;; This function uses a non-reentrant model
 16714 ;;
 16715                           
 16716                           	psect	text74
 16717  004F78                     __ptext74:
 16718                           	opt callstack 0
 16719  004F78                     _combinarArreglos:
 16720                           	opt callstack 26
 16721  004F78                     
 16722                           ;main.c: 1337: void combinarArreglos(T_UBYTE* movimientos, T_UBYTE* caminoFinal, T_UINT 
      +                          numMovimientos,;main.c: 1338:         T_UINT* numMovimientosFinal) {;main.c: 1339:     f
      +                          or (T_INT i = 0; i < numMovimientos; i++) {
 16723  004F78  0E00               	movlw	0
 16724  004F7A  6E11               	movwf	(combinarArreglos@i+1)^0,c
 16725  004F7C  0E00               	movlw	0
 16726  004F7E  6E10               	movwf	combinarArreglos@i^0,c
 16727  004F80  EFE1  F027         	goto	l9865
 16728  004F84                     l9859:
 16729                           
 16730                           ;main.c: 1341:         caminoFinal[*numMovimientosFinal] = movimientos[i];
 16731  004F84  5010               	movf	combinarArreglos@i^0,w,c
 16732  004F86  2406               	addwf	combinarArreglos@movimientos^0,w,c
 16733  004F88  6ED9               	movwf	fsr2l,c
 16734  004F8A  5011               	movf	(combinarArreglos@i+1)^0,w,c
 16735  004F8C  2007               	addwfc	(combinarArreglos@movimientos+1)^0,w,c
 16736  004F8E  6EDA               	movwf	fsr2h,c
 16737  004F90  C00C  FFE1         	movff	combinarArreglos@numMovimientosFinal,fsr1l
 16738  004F94  C00D  FFE2         	movff	combinarArreglos@numMovimientosFinal+1,fsr1h
 16739  004F98  CFE6 F00E          	movff	postinc1,??_combinarArreglos
 16740  004F9C  CFE5 F00F          	movff	postdec1,??_combinarArreglos+1
 16741  004FA0  500E               	movf	??_combinarArreglos^0,w,c
 16742  004FA2  2408               	addwf	combinarArreglos@caminoFinal^0,w,c
 16743  004FA4  6EE1               	movwf	fsr1l,c
 16744  004FA6  500F               	movf	(??_combinarArreglos+1)^0,w,c
 16745  004FA8  2009               	addwfc	(combinarArreglos@caminoFinal+1)^0,w,c
 16746  004FAA  6EE2               	movwf	fsr1h,c
 16747  004FAC  CFDF FFE7          	movff	indf2,indf1
 16748  004FB0                     
 16749                           ;main.c: 1342:         *numMovimientosFinal += 1;
 16750  004FB0  C00C  FFD9         	movff	combinarArreglos@numMovimientosFinal,fsr2l
 16751  004FB4  C00D  FFDA         	movff	combinarArreglos@numMovimientosFinal+1,fsr2h
 16752  004FB8  2ADE               	incf	postinc2,f,c
 16753  004FBA  0E00               	movlw	0
 16754  004FBC  22DD               	addwfc	postdec2,f,c
 16755  004FBE                     
 16756                           ;main.c: 1343:     }
 16757  004FBE  4A10               	infsnz	combinarArreglos@i^0,f,c
 16758  004FC0  2A11               	incf	(combinarArreglos@i+1)^0,f,c
 16759  004FC2                     l9865:
 16760  004FC2  500A               	movf	combinarArreglos@numMovimientos^0,w,c
 16761  004FC4  5C10               	subwf	combinarArreglos@i^0,w,c
 16762  004FC6  500B               	movf	(combinarArreglos@numMovimientos+1)^0,w,c
 16763  004FC8  5811               	subwfb	(combinarArreglos@i+1)^0,w,c
 16764  004FCA  A0D8               	btfss	status,0,c
 16765  004FCC  EFEA  F027         	goto	u11091
 16766  004FD0  EFEC  F027         	goto	u11090
 16767  004FD4                     u11091:
 16768  004FD4  EFC2  F027         	goto	l9859
 16769  004FD8                     u11090:
 16770  004FD8  0012               	return		;funcret
 16771  004FDA                     __end_of_combinarArreglos:
 16772                           	opt callstack 0
 16773                           
 16774 ;; *************** function _UART_init *****************
 16775 ;; Defined at:
 16776 ;;		line 13 in file "./UART.h"
 16777 ;; Parameters:    Size  Location     Type
 16778 ;;  BAUD            4   31[COMRAM] long 
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;  frecuenciaCr    4    0        long 
 16781 ;; Return value:  Size  Location     Type
 16782 ;;                  1    wreg      void 
 16783 ;; Registers used:
 16784 ;;		wreg, status,2, status,0, cstack
 16785 ;; Tracked objects:
 16786 ;;		On entry : 0/0
 16787 ;;		On exit  : 0/0
 16788 ;;		Unchanged: 0/0
 16789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16790 ;;      Params:         4       0       0       0       0       0       0       0       0
 16791 ;;      Locals:         8       0       0       0       0       0       0       0       0
 16792 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16793 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16794 ;;Total ram usage:       12 bytes
 16795 ;; Hardware stack levels used:    1
 16796 ;; Hardware stack levels required when called:    3
 16797 ;; This function calls:
 16798 ;;		___aldiv
 16799 ;; This function is called by:
 16800 ;;		_main
 16801 ;; This function uses a non-reentrant model
 16802 ;;
 16803                           
 16804                           	psect	text75
 16805  004DCC                     __ptext75:
 16806                           	opt callstack 0
 16807  004DCC                     _UART_init:
 16808                           	opt callstack 27
 16809  004DCC                     
 16810                           ;./UART.h: 16:     TRISC6 = 0;
 16811  004DCC  9C94               	bcf	3988,6,c	;volatile
 16812  004DCE                     
 16813                           ;./UART.h: 17:     TRISC7 = 1;
 16814  004DCE  8E94               	bsf	3988,7,c	;volatile
 16815  004DD0                     
 16816                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16817  004DD0  0E10               	movlw	16
 16818  004DD2  6E16               	movwf	___aldiv@divisor^0,c
 16819  004DD4  0E00               	movlw	0
 16820  004DD6  6E17               	movwf	(___aldiv@divisor+1)^0,c
 16821  004DD8  0E00               	movlw	0
 16822  004DDA  6E18               	movwf	(___aldiv@divisor+2)^0,c
 16823  004DDC  0E00               	movlw	0
 16824  004DDE  6E19               	movwf	(___aldiv@divisor+3)^0,c
 16825  004DE0  0E00               	movlw	0
 16826  004DE2  6E12               	movwf	___aldiv@dividend^0,c
 16827  004DE4  0E09               	movlw	9
 16828  004DE6  6E13               	movwf	(___aldiv@dividend+1)^0,c
 16829  004DE8  0E3D               	movlw	61
 16830  004DEA  6E14               	movwf	(___aldiv@dividend+2)^0,c
 16831  004DEC  0E00               	movlw	0
 16832  004DEE  6E15               	movwf	(___aldiv@dividend+3)^0,c
 16833  004DF0  EC83  F01F         	call	___aldiv	;wreg free
 16834  004DF4  C012  F028         	movff	?___aldiv,_UART_init$1842
 16835  004DF8  C013  F029         	movff	?___aldiv+1,_UART_init$1842+1
 16836  004DFC  C014  F02A         	movff	?___aldiv+2,_UART_init$1842+2
 16837  004E00  C015  F02B         	movff	?___aldiv+3,_UART_init$1842+3
 16838  004E04                     
 16839                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16840  004E04  C028  F012         	movff	_UART_init$1842,___aldiv@dividend
 16841  004E08  C029  F013         	movff	_UART_init$1842+1,___aldiv@dividend+1
 16842  004E0C  C02A  F014         	movff	_UART_init$1842+2,___aldiv@dividend+2
 16843  004E10  C02B  F015         	movff	_UART_init$1842+3,___aldiv@dividend+3
 16844  004E14  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 16845  004E18  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 16846  004E1C  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 16847  004E20  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 16848  004E24  EC83  F01F         	call	___aldiv	;wreg free
 16849  004E28  0412               	decf	?___aldiv^0,w,c
 16850  004E2A  6EAF               	movwf	175,c	;volatile
 16851  004E2C                     
 16852                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 16853  004E2C  84AC               	bsf	172,2,c	;volatile
 16854  004E2E                     
 16855                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 16856  004E2E  98AC               	bcf	172,4,c	;volatile
 16857  004E30                     
 16858                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 16859  004E30  8EAB               	bsf	171,7,c	;volatile
 16860  004E32                     
 16861                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 16862  004E32  9CAC               	bcf	172,6,c	;volatile
 16863  004E34                     
 16864                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 16865  004E34  8AAC               	bsf	172,5,c	;volatile
 16866  004E36                     
 16867                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 16868  004E36  9CAB               	bcf	171,6,c	;volatile
 16869  004E38                     
 16870                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 16871  004E38  88AB               	bsf	171,4,c	;volatile
 16872  004E3A  0012               	return		;funcret
 16873  004E3C                     __end_of_UART_init:
 16874                           	opt callstack 0
 16875                           
 16876 ;; *************** function ___aldiv *****************
 16877 ;; Defined at:
 16878 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 16879 ;; Parameters:    Size  Location     Type
 16880 ;;  dividend        4   17[COMRAM] long 
 16881 ;;  divisor         4   21[COMRAM] long 
 16882 ;; Auto vars:     Size  Location     Type
 16883 ;;  quotient        4   27[COMRAM] long 
 16884 ;;  sign            1   26[COMRAM] unsigned char 
 16885 ;;  counter         1   25[COMRAM] unsigned char 
 16886 ;; Return value:  Size  Location     Type
 16887 ;;                  4   17[COMRAM] long 
 16888 ;; Registers used:
 16889 ;;		wreg, status,2, status,0
 16890 ;; Tracked objects:
 16891 ;;		On entry : 0/0
 16892 ;;		On exit  : 0/0
 16893 ;;		Unchanged: 0/0
 16894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16895 ;;      Params:         8       0       0       0       0       0       0       0       0
 16896 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16897 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16898 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16899 ;;Total ram usage:       14 bytes
 16900 ;; Hardware stack levels used:    1
 16901 ;; Hardware stack levels required when called:    2
 16902 ;; This function calls:
 16903 ;;		Nothing
 16904 ;; This function is called by:
 16905 ;;		_map
 16906 ;;		_UART_init
 16907 ;; This function uses a non-reentrant model
 16908 ;;
 16909                           
 16910                           	psect	text76
 16911  003F06                     __ptext76:
 16912                           	opt callstack 0
 16913  003F06                     ___aldiv:
 16914                           	opt callstack 24
 16915  003F06  0E00               	movlw	0
 16916  003F08  6E1B               	movwf	___aldiv@sign^0,c
 16917  003F0A  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 16918  003F0C  EF8C  F01F         	goto	u8120
 16919  003F10  EF8A  F01F         	goto	u8121
 16920  003F14                     u8121:
 16921  003F14  EF96  F01F         	goto	l8155
 16922  003F18                     u8120:
 16923  003F18  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 16924  003F1A  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 16925  003F1C  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 16926  003F1E  6C16               	negf	___aldiv@divisor^0,c
 16927  003F20  0E00               	movlw	0
 16928  003F22  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 16929  003F24  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 16930  003F26  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 16931  003F28  0E01               	movlw	1
 16932  003F2A  6E1B               	movwf	___aldiv@sign^0,c
 16933  003F2C                     l8155:
 16934  003F2C  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 16935  003F2E  EF9D  F01F         	goto	u8130
 16936  003F32  EF9B  F01F         	goto	u8131
 16937  003F36                     u8131:
 16938  003F36  EFA7  F01F         	goto	l8161
 16939  003F3A                     u8130:
 16940  003F3A  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 16941  003F3C  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 16942  003F3E  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 16943  003F40  6C12               	negf	___aldiv@dividend^0,c
 16944  003F42  0E00               	movlw	0
 16945  003F44  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 16946  003F46  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 16947  003F48  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 16948  003F4A  0E01               	movlw	1
 16949  003F4C  1A1B               	xorwf	___aldiv@sign^0,f,c
 16950  003F4E                     l8161:
 16951  003F4E  0E00               	movlw	0
 16952  003F50  6E1C               	movwf	___aldiv@quotient^0,c
 16953  003F52  0E00               	movlw	0
 16954  003F54  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 16955  003F56  0E00               	movlw	0
 16956  003F58  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 16957  003F5A  0E00               	movlw	0
 16958  003F5C  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 16959  003F5E  5016               	movf	___aldiv@divisor^0,w,c
 16960  003F60  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 16961  003F62  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 16962  003F64  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 16963  003F66  B4D8               	btfsc	status,2,c
 16964  003F68  EFB8  F01F         	goto	u8141
 16965  003F6C  EFBA  F01F         	goto	u8140
 16966  003F70                     u8141:
 16967  003F70  EFF0  F01F         	goto	l8183
 16968  003F74                     u8140:
 16969  003F74  0E01               	movlw	1
 16970  003F76  6E1A               	movwf	___aldiv@counter^0,c
 16971  003F78  EFC4  F01F         	goto	l8169
 16972  003F7C                     l8167:
 16973  003F7C  90D8               	bcf	status,0,c
 16974  003F7E  3616               	rlcf	___aldiv@divisor^0,f,c
 16975  003F80  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 16976  003F82  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 16977  003F84  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 16978  003F86  2A1A               	incf	___aldiv@counter^0,f,c
 16979  003F88                     l8169:
 16980  003F88  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 16981  003F8A  EFC9  F01F         	goto	u8151
 16982  003F8E  EFCB  F01F         	goto	u8150
 16983  003F92                     u8151:
 16984  003F92  EFBE  F01F         	goto	l8167
 16985  003F96                     u8150:
 16986  003F96                     l8171:
 16987  003F96  90D8               	bcf	status,0,c
 16988  003F98  361C               	rlcf	___aldiv@quotient^0,f,c
 16989  003F9A  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 16990  003F9C  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 16991  003F9E  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 16992  003FA0  5016               	movf	___aldiv@divisor^0,w,c
 16993  003FA2  5C12               	subwf	___aldiv@dividend^0,w,c
 16994  003FA4  5017               	movf	(___aldiv@divisor+1)^0,w,c
 16995  003FA6  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 16996  003FA8  5018               	movf	(___aldiv@divisor+2)^0,w,c
 16997  003FAA  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 16998  003FAC  5019               	movf	(___aldiv@divisor+3)^0,w,c
 16999  003FAE  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 17000  003FB0  A0D8               	btfss	status,0,c
 17001  003FB2  EFDD  F01F         	goto	u8161
 17002  003FB6  EFDF  F01F         	goto	u8160
 17003  003FBA                     u8161:
 17004  003FBA  EFE8  F01F         	goto	l8179
 17005  003FBE                     u8160:
 17006  003FBE  5016               	movf	___aldiv@divisor^0,w,c
 17007  003FC0  5E12               	subwf	___aldiv@dividend^0,f,c
 17008  003FC2  5017               	movf	(___aldiv@divisor+1)^0,w,c
 17009  003FC4  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 17010  003FC6  5018               	movf	(___aldiv@divisor+2)^0,w,c
 17011  003FC8  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 17012  003FCA  5019               	movf	(___aldiv@divisor+3)^0,w,c
 17013  003FCC  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 17014  003FCE  801C               	bsf	___aldiv@quotient^0,0,c
 17015  003FD0                     l8179:
 17016  003FD0  90D8               	bcf	status,0,c
 17017  003FD2  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 17018  003FD4  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 17019  003FD6  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 17020  003FD8  3216               	rrcf	___aldiv@divisor^0,f,c
 17021  003FDA  2E1A               	decfsz	___aldiv@counter^0,f,c
 17022  003FDC  EFCB  F01F         	goto	l8171
 17023  003FE0                     l8183:
 17024  003FE0  501B               	movf	___aldiv@sign^0,w,c
 17025  003FE2  B4D8               	btfsc	status,2,c
 17026  003FE4  EFF6  F01F         	goto	u8171
 17027  003FE8  EFF8  F01F         	goto	u8170
 17028  003FEC                     u8171:
 17029  003FEC  EF00  F020         	goto	l8187
 17030  003FF0                     u8170:
 17031  003FF0  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 17032  003FF2  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 17033  003FF4  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 17034  003FF6  6C1C               	negf	___aldiv@quotient^0,c
 17035  003FF8  0E00               	movlw	0
 17036  003FFA  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 17037  003FFC  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 17038  003FFE  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 17039  004000                     l8187:
 17040  004000  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 17041  004004  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 17042  004008  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 17043  00400C  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 17044  004010  0012               	return		;funcret
 17045  004012                     __end_of___aldiv:
 17046                           	opt callstack 0
 17047                           
 17048 ;; *************** function _boton *****************
 17049 ;; Defined at:
 17050 ;;		line 109 in file "main.c"
 17051 ;; Parameters:    Size  Location     Type
 17052 ;;		None
 17053 ;; Auto vars:     Size  Location     Type
 17054 ;;		None
 17055 ;; Return value:  Size  Location     Type
 17056 ;;                  1    wreg      void 
 17057 ;; Registers used:
 17058 ;;		wreg, status,2, status,0, cstack
 17059 ;; Tracked objects:
 17060 ;;		On entry : 0/0
 17061 ;;		On exit  : 0/0
 17062 ;;		Unchanged: 0/0
 17063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17064 ;;      Params:         0       0       0       0       0       0       0       0       0
 17065 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17066 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17067 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17068 ;;Total ram usage:        2 bytes
 17069 ;; Hardware stack levels used:    1
 17070 ;; Hardware stack levels required when called:    1
 17071 ;; This function calls:
 17072 ;;		_antiRebote
 17073 ;; This function is called by:
 17074 ;;		Interrupt level 2
 17075 ;; This function uses a non-reentrant model
 17076 ;;
 17077                           
 17078                           	psect	intcode
 17079  000008                     __pintcode:
 17080                           	opt callstack 0
 17081  000008                     _boton:
 17082                           	opt callstack 19
 17083                           
 17084                           ;incstack = 0
 17085  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17086  00000A  EDD3  F028         	call	int_func,f	;refresh shadow registers
 17087                           
 17088                           	psect	intcode_body
 17089  0051A6                     __pintcode_body:
 17090                           	opt callstack 19
 17091  0051A6                     int_func:
 17092                           	opt callstack 19
 17093  0051A6  0006               	pop		; remove dummy address from shadow register refresh
 17094  0051A8                     
 17095                           ;main.c: 111:     if (INT0IF)
 17096  0051A8  A2F2               	btfss	4082,1,c	;volatile
 17097  0051AA  EFD9  F028         	goto	i2u786_41
 17098  0051AE  EFDB  F028         	goto	i2u786_40
 17099  0051B2                     i2u786_41:
 17100  0051B2  EFFB  F028         	goto	i2l284
 17101  0051B6                     i2u786_40:
 17102  0051B6                     
 17103                           ;main.c: 112:     {;main.c: 113:         antiRebote(1);
 17104  0051B6  0E01               	movlw	1
 17105  0051B8  ECA7  F028         	call	_antiRebote
 17106  0051BC                     
 17107                           ;main.c: 114:         if (pausa) {
 17108  0051BC  0101               	movlb	1	; () banked
 17109  0051BE  51E9               	movf	_pausa& (0+255),w,b
 17110  0051C0  B4D8               	btfsc	status,2,c
 17111  0051C2  EFE5  F028         	goto	i2u787_41
 17112  0051C6  EFE7  F028         	goto	i2u787_40
 17113  0051CA                     i2u787_41:
 17114  0051CA  EFF7  F028         	goto	i2l282
 17115  0051CE                     i2u787_40:
 17116  0051CE                     
 17117                           ; BSR set to: 1
 17118                           ;main.c: 115:             pausa = 0;
 17119  0051CE  0E00               	movlw	0
 17120  0051D0  6FE9               	movwf	_pausa& (0+255),b
 17121  0051D2                     
 17122                           ; BSR set to: 1
 17123                           ;main.c: 116:             LATD2 = 1;
 17124  0051D2  848C               	bsf	3980,2,c	;volatile
 17125  0051D4                     
 17126                           ; BSR set to: 1
 17127                           ;main.c: 117:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 17128  0051D4  0E10               	movlw	16
 17129  0051D6  6E05               	movwf	(??_boton+1)^0,c
 17130  0051D8  0E39               	movlw	57
 17131  0051DA  6E04               	movwf	??_boton^0,c
 17132  0051DC  0E0E               	movlw	14
 17133  0051DE                     i2u1218_47:
 17134  0051DE  2EE8               	decfsz	wreg,f,c
 17135  0051E0  D7FE               	bra	i2u1218_47
 17136  0051E2  2E04               	decfsz	??_boton^0,f,c
 17137  0051E4  D7FC               	bra	i2u1218_47
 17138  0051E6  2E05               	decfsz	(??_boton+1)^0,f,c
 17139  0051E8  D7FA               	bra	i2u1218_47
 17140                           
 17141                           ;main.c: 118:         } else {
 17142  0051EA  EFFA  F028         	goto	i2l7581
 17143  0051EE                     i2l282:
 17144                           
 17145                           ; BSR set to: 1
 17146                           ;main.c: 119:             LATD2 = 0;
 17147  0051EE  948C               	bcf	3980,2,c	;volatile
 17148  0051F0                     
 17149                           ; BSR set to: 1
 17150                           ;main.c: 120:             pausa = 1;
 17151  0051F0  0E01               	movlw	1
 17152  0051F2  6FE9               	movwf	_pausa& (0+255),b
 17153  0051F4                     i2l7581:
 17154                           
 17155                           ;main.c: 123:         INT0IF = 0;
 17156  0051F4  92F2               	bcf	4082,1,c	;volatile
 17157  0051F6                     i2l284:
 17158  0051F6  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17159  0051F8  0011               	retfie		f
 17160  0051FA                     __end_of_boton:
 17161                           	opt callstack 0
 17162                           
 17163 ;; *************** function _antiRebote *****************
 17164 ;; Defined at:
 17165 ;;		line 221 in file "main.c"
 17166 ;; Parameters:    Size  Location     Type
 17167 ;;  pin             1    wreg     unsigned char 
 17168 ;; Auto vars:     Size  Location     Type
 17169 ;;  pin             1    2[COMRAM] unsigned char 
 17170 ;; Return value:  Size  Location     Type
 17171 ;;                  1    wreg      void 
 17172 ;; Registers used:
 17173 ;;		wreg, status,2, status,0
 17174 ;; Tracked objects:
 17175 ;;		On entry : 0/0
 17176 ;;		On exit  : 0/0
 17177 ;;		Unchanged: 0/0
 17178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17179 ;;      Params:         0       0       0       0       0       0       0       0       0
 17180 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17181 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17182 ;;      Totals:         3       0       0       0       0       0       0       0       0
 17183 ;;Total ram usage:        3 bytes
 17184 ;; Hardware stack levels used:    1
 17185 ;; This function calls:
 17186 ;;		Nothing
 17187 ;; This function is called by:
 17188 ;;		_boton
 17189 ;; This function uses a non-reentrant model
 17190 ;;
 17191                           
 17192                           	psect	text78
 17193  00514E                     __ptext78:
 17194                           	opt callstack 0
 17195  00514E                     _antiRebote:
 17196                           	opt callstack 19
 17197                           
 17198                           ;incstack = 0
 17199                           ;antiRebote@pin stored from wreg
 17200  00514E  6E03               	movwf	antiRebote@pin^0,c
 17201  005150                     
 17202                           ;main.c: 223:     switch (pin) {
 17203  005150  EFC1  F028         	goto	i2l7371
 17204  005154                     i2l318:
 17205  005154  A081               	btfss	129,0,c	;volatile
 17206  005156  EFAF  F028         	goto	i2u765_41
 17207  00515A  EFB1  F028         	goto	i2u765_40
 17208  00515E                     i2u765_41:
 17209  00515E  EFAA  F028         	goto	i2l318
 17210  005162                     i2u765_40:
 17211  005162                     i2l321:
 17212  005162  B081               	btfsc	129,0,c	;volatile
 17213  005164  EFB6  F028         	goto	i2u766_41
 17214  005168  EFB8  F028         	goto	i2u766_40
 17215  00516C                     i2u766_41:
 17216  00516C  EFB1  F028         	goto	i2l321
 17217  005170                     i2u766_40:
 17218  005170                     
 17219                           ;main.c: 227:             _delay((unsigned long)((100)*(4000000/4000.0)));
 17220  005170  0E82               	movlw	130
 17221  005172  6E01               	movwf	??_antiRebote^0,c
 17222  005174  0EDE               	movlw	222
 17223  005176                     i2u1219_47:
 17224  005176  2EE8               	decfsz	wreg,f,c
 17225  005178  D7FE               	bra	i2u1219_47
 17226  00517A  2E01               	decfsz	??_antiRebote^0,f,c
 17227  00517C  D7FC               	bra	i2u1219_47
 17228                           
 17229                           ;main.c: 228:             break;
 17230  00517E  EFD2  F028         	goto	i2l326
 17231  005182                     i2l7371:
 17232  005182  5003               	movf	antiRebote@pin^0,w,c
 17233  005184  6E01               	movwf	??_antiRebote^0,c
 17234  005186  6A02               	clrf	(??_antiRebote+1)^0,c
 17235                           
 17236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17237                           ; Switch size 1, requested type "simple"
 17238                           ; Number of cases is 1, Range of values is 0 to 0
 17239                           ; switch strategies available:
 17240                           ; Name         Instructions Cycles
 17241                           ; simple_byte            4     3 (average)
 17242                           ;	Chosen strategy is simple_byte
 17243  005188  5002               	movf	(??_antiRebote+1)^0,w,c
 17244  00518A  0A00               	xorlw	0	; case 0
 17245  00518C  B4D8               	btfsc	status,2,c
 17246  00518E  EFCB  F028         	goto	i2l11251
 17247  005192  EFD2  F028         	goto	i2l326
 17248  005196                     i2l11251:
 17249                           
 17250                           ; Switch size 1, requested type "simple"
 17251                           ; Number of cases is 1, Range of values is 1 to 1
 17252                           ; switch strategies available:
 17253                           ; Name         Instructions Cycles
 17254                           ; simple_byte            4     3 (average)
 17255                           ;	Chosen strategy is simple_byte
 17256  005196  5001               	movf	??_antiRebote^0,w,c
 17257  005198  0A01               	xorlw	1	; case 1
 17258  00519A  B4D8               	btfsc	status,2,c
 17259  00519C  EFAA  F028         	goto	i2l318
 17260  0051A0  EFD2  F028         	goto	i2l326
 17261  0051A4                     i2l326:
 17262  0051A4  0012               	return		;funcret
 17263  0051A6                     __end_of_antiRebote:
 17264                           	opt callstack 0
 17265                           
 17266                           	psect	rparam
 17267  0000                     
 17268                           	psect	temp
 17269  00005A                     btemp:
 17270                           	opt callstack 0
 17271  00005A                     	ds	1
 17272  0000                     int$flags	set	btemp
 17273  0000                     wtemp8	set	btemp+1
 17274  0000                     ttemp5	set	btemp+1
 17275  0000                     ttemp6	set	btemp+4
 17276  0000                     ttemp7	set	btemp+8
 17277                           tosu	equ	0xFFF
 17278                           tosh	equ	0xFFE
 17279                           tosl	equ	0xFFD
 17280                           stkptr	equ	0xFFC
 17281                           pclatu	equ	0xFFB
 17282                           pclath	equ	0xFFA
 17283                           pcl	equ	0xFF9
 17284                           tblptru	equ	0xFF8
 17285                           tblptrh	equ	0xFF7
 17286                           tblptrl	equ	0xFF6
 17287                           tablat	equ	0xFF5
 17288                           prodh	equ	0xFF4
 17289                           prodl	equ	0xFF3
 17290                           indf0	equ	0xFEF
 17291                           postinc0	equ	0xFEE
 17292                           postdec0	equ	0xFED
 17293                           preinc0	equ	0xFEC
 17294                           plusw0	equ	0xFEB
 17295                           fsr0h	equ	0xFEA
 17296                           fsr0l	equ	0xFE9
 17297                           wreg	equ	0xFE8
 17298                           indf1	equ	0xFE7
 17299                           postinc1	equ	0xFE6
 17300                           postdec1	equ	0xFE5
 17301                           preinc1	equ	0xFE4
 17302                           plusw1	equ	0xFE3
 17303                           fsr1h	equ	0xFE2
 17304                           fsr1l	equ	0xFE1
 17305                           bsr	equ	0xFE0
 17306                           indf2	equ	0xFDF
 17307                           postinc2	equ	0xFDE
 17308                           postdec2	equ	0xFDD
 17309                           preinc2	equ	0xFDC
 17310                           plusw2	equ	0xFDB
 17311                           fsr2h	equ	0xFDA
 17312                           fsr2l	equ	0xFD9
 17313                           status	equ	0xFD8


Data Sizes:
    Strings     562
    Constant    4
    Data        4
    BSS         1416
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    159     160
    BANK1           256     23     237
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_31(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_31(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_26(CODE[4]), STR_25(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_26(CODE[4]), STR_25(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_20(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1488_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_20(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_20(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_20(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    combinarArreglos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    combinarArreglos@numMovimientosFinal	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientosTotales(BANK1[2]), 

    combinarArreglos@caminoFinal	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    decidirDireccion@mapear	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@mapear(BANK1[1]), 

    decidirDireccion@cruceDetectado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cruceDetectado(BANK1[1]), 

    decidirDireccion@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    decidirDireccion@caminoActual	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@caminoActual(BANK1[1]), 

    decidirDireccion@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    decidirDireccion@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    decidirDireccion@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    decidirDireccion@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    limpiarMovimientos@numMovimientos	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientos(BANK1[2]), caminoCorrecto@numMovimientos(COMRAM[2]), 

    limpiarMovimientos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    hayCruce@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    recorrerCaminoEncontrado@movimientos	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    regresarAlCruce@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    regresarPuntoPartida@movimientos	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    moverCarrito@carroEspejeado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@carroEspejeado(COMRAM[1]), 

    moverCarrito@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    caminoCorrecto@numMovimientosFinal	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientosTotales(BANK1[2]), 

    caminoCorrecto@caminoFinal	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    caminoCorrecto@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 63
		 -> STR_19(CODE[32]), STR_18(CODE[31]), STR_17(CODE[33]), STR_16(CODE[32]), 
		 -> STR_15(CODE[23]), STR_14(CODE[34]), STR_13(CODE[63]), STR_12(CODE[56]), 
		 -> STR_10(CODE[6]), STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[10]), 
		 -> buffer(BANK1[50]), STR_2(CODE[25]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _comportamientoBasico->_decidirDireccion
    _comportamientoBasico->_recorrerCaminoEncontrado
    _comportamientoBasico->_regresarAlCruce
    _comportamientoBasico->_regresarPuntoPartida
    _mover->_forzarAvanceRecto
    _PID->_roundf
    _roundf->___flsub
    _leerSensores->___fldiv
    _dameDistancia->___xxtofl
    _forzarEspejeo->_forzarEspejeoDerecha
    _forzarEspejeo->_forzarEspejeoIzquierda
    _map->___aldiv
    ___xxtofl->___lwdiv
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->_roundf
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _seLlegoAlDestino->_dameLecturaAdc
    _mostrarDireccionElegida->_UART_printf
    _UART_printf->_UART_write
    _hayCruce->___flge
    ___flge->___flmul
    _caminoCorrecto->_combinarArreglos
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _main->_comportamientoBasico
    _main->_visualizarPasosRealizados
    _visualizarPasosRealizados->_sprintf
    _comportamientoBasico->_decidirDireccion
    _regresarPuntoPartida->_PID
    _regresarAlCruce->_PID
    _recorrerCaminoEncontrado->_PID
    _PID->_pwmDuty
    _leerSensores->___fldiv
    _velocidadEstandar->_pwmDuty
    _decidirDireccion->_sprintf
    _velocidadBaja->_pwmDuty
    _pwmDuty->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___fltol->_roundf

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_comportamientoBasico
    _comportamientoBasico->_decidirDireccion

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  534071
                                             20 BANK1      3     3      0
                          _UART_init
               _comportamientoBasico
                          _configPwm
                      _configurarAdc
                     _forzarParoAuto
    _inicializarComportamientoBasico
          _visualizarPasosRealizados
 ---------------------------------------------------------------------------------
 (1) _visualizarPasosRealizados                            4     2      2   61323
                                            155 BANK0      4     2      2
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13829
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _comportamientoBasico                                 3     3      0  457637
                                            158 BANK0      1     1      0
                                             18 BANK1      2     2      0
                                _PID
                        _UART_printf
                     _caminoCorrecto
                   _decidirDireccion
                 _finalizarRecorrido
                      _forzarEspejeo
                     _forzarParoAuto
                       _leerSensores
                 _limpiarMovimientos
                       _moverCarrito
           _recorrerCaminoEncontrado
                    _regresarAlCruce
               _regresarPuntoPartida
                      _velocidadBaja
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarPuntoPartida                                 7     3      4   64212
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarAlCruce                                      7     3      4   64063
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _recorrerCaminoEncontrado                             7     3      4   64001
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (3) _mover                                                2     2      0       0
                                              7 COMRAM     2     2      0
                  _forzarAvanceRecto
 ---------------------------------------------------------------------------------
 (3) _PID                                                 18    18      0   51106
                                             40 BANK0     18    18      0
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _pwmDuty
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   20827
                                             75 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _moverCarrito                                         7     3      4   29092
                                             40 BANK0      7     3      4
                  _forzarAvanceRecto
                      _forzarEspejeo
 ---------------------------------------------------------------------------------
 (4) _forzarAvanceRecto                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10233
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (2) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _finalizarRecorrido                                   0     0      0   28788
                      _forzarEspejeo
                     _forzarParoAuto
 ---------------------------------------------------------------------------------
 (3) _forzarEspejeo                                        0     0      0   28788
                             ___flge
               _forzarEspejeoDerecha
             _forzarEspejeoIzquierda
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoIzquierda                               1     1      0   12461
                                             83 COMRAM     1     1      0
                _forzarGiroIzquierda
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarGiroIzquierda                                  2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoDerecha                                 1     1      0   12461
                                             83 COMRAM     1     1      0
                  _forzarGiroDerecha
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (5) _forzarReversa                                        2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _forzarParoAuto                                       1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _forzarGiroDerecha                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _decidirDireccion                                    22     4     18   88254
                                             83 COMRAM     1     1      0
                                            155 BANK0      3     3      0
                                              0 BANK1     18     0     18
                        _UART_printf
                             ___flge
                           _hayCruce
            _mostrarDireccionElegida
                   _seLlegoAlDestino
                            _sprintf
                      _velocidadBaja
 ---------------------------------------------------------------------------------
 (2) _velocidadBaja                                        0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12461
                                             28 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   59486
                                            135 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   58070
                                            127 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   57522
                                             97 BANK0     30    24      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   38677
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             79 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6347
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5422
                                             51 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3953
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             67 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6763
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4776
                                             32 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4497
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1665
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     562
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _seLlegoAlDestino                                     1     1      0      68
                                             10 COMRAM     1     1      0
                     _dameLecturaAdc
 ---------------------------------------------------------------------------------
 (4) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _mostrarDireccionElegida                              3     3      0    1747
                                              8 COMRAM     3     3      0
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2    1716
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _hayCruce                                             4     1      3    4709
                                             63 COMRAM     4     1      3
                             ___flge
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    3866
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _caminoCorrecto                                       9     0      9    1811
                                             17 COMRAM     9     0      9
                   _combinarArreglos
                 _limpiarMovimientos
 ---------------------------------------------------------------------------------
 (2) _limpiarMovimientos                                   8     4      4     521
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _combinarArreglos                                    12     4      8     583
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (12) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _comportamientoBasico
     _PID
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _roundf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___xxtofl
         ___lwdiv (ARG)
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
       _roundf
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
     _UART_printf
       _UART_write
     _caminoCorrecto
       _combinarArreglos
       _limpiarMovimientos
     _decidirDireccion
       _UART_printf
         _UART_write
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _hayCruce
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       _mostrarDireccionElegida
         _UART_printf
           _UART_write
       _seLlegoAlDestino
         _dameLecturaAdc
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _velocidadBaja
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _finalizarRecorrido
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
       _forzarParoAuto
     _forzarEspejeo
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _forzarEspejeoDerecha
         _forzarGiroDerecha
         _forzarParoAuto
         _forzarReversa
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl
               ___lwdiv (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
       _forzarEspejeoIzquierda
         _forzarGiroIzquierda
         _forzarParoAuto
         _forzarReversa
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl
               ___lwdiv (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
     _forzarParoAuto
     _leerSensores
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _limpiarMovimientos
     _moverCarrito
       _forzarAvanceRecto
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
     _recorrerCaminoEncontrado
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _regresarAlCruce
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _regresarPuntoPartida
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _velocidadBaja
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _configPwm
   _configurarAdc
   _forzarParoAuto
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _visualizarPasosRealizados
     _UART_printf
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     3E8      21       48.9%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     17      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AE      20        0.0%
DATA                 0      0     696       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Sep 20 13:12:56 2020

                              ___fldiv@aexp 006C                                ___fldiv@bexp 006B  
                    __end_of_caminoCorrecto 54EC                                ___fldiv@sign 0064  
                              ___awdiv@sign 000B                              ?_configurarAdc 0001  
                       ___wmul@multiplicand 0008                                 __CFG_BORV$3 000000  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
           comportamientoBasico@caminoFinal 02C8                                         l202 3E24  
                                       l212 3F04                                         l204 3E32  
                                       l205 3E34                                         l215 4E3A  
                                       l224 57D2                                         l160 52A0  
                                       l233 5096                                         l241 5490  
                                       l313 48A4                                         l242 54A4  
                                       l410 57CA                                         l227 57E0  
                                       l147 4D56                                         l155 3466  
                                       l403 1FEC                                         l163 52AC  
                                       l332 54EA                                         l164 52EA  
                                       l236 57FA                                         l413 5770  
                                       l165 52B6                                         l422 57B0  
                                       l406 57F0                                         l166 52EC  
                                       l239 5482                                         l191 3E86  
                                       l183 3DC4                                         l416 574E  
                                       l425 53D0                                         l433 556E  
                                       l193 3DF4                                         l185 3DD2  
                                       l329 5388                                         l186 3DD4  
                                       l442 409A                                         l450 4AA6  
                                       l523 393A                                         l419 5790  
                                       l195 3E02                                         l612 1400  
                                       l428 5418                                         l196 3E04  
                                       l444 40C4                                         l445 40D0  
                                       l437 401A                                         l453 4AC2  
                                       l542 56B8                                         l446 4118  
                                       l454 4AE8                                         l543 56BA  
                                       l455 4AF4                                         l456 4B3A  
                                       l553 4CDC                                         l465 4AA0  
                                       l730 56E0                                         l474 4950  
                                       l539 533C                                         l387 1F96  
                                       l812 2C06                                         l708 3094  
                                       l484 4C5A                                         l733 5706  
                                       l565 12DC                                         l806 514C  
                                       l814 2C0E                                         l832 2E42  
                                       l672 16FE                                         l664 15B6  
                                       l680 3C2E                                         l681 3C1E  
                                       l850 0BCA                                         l739 4FD8  
                                       l659 16FC                                         l595 137C  
                                       l675 3C0E                                         l940 1172  
                                       l951 10B8                                         l687 3C3E  
                                       l961 572C                                         l794 46CC  
                                       l868 0402                                         l972 4E94  
                                       l797 470E                                         l957 4F06  
                                       l973 4EA4                                         l894 079E  
                                       l958 4F0E                                         l799 4748  
                              __CFG_CPB$OFF 000000                                         _PR2 000FCB  
                                       _PID 2E44                                __CFG_CPD$OFF 000000  
                              __CFG_BOR$OFF 000000                                         _abs 5570  
                                       _pad 4688                                         _map 4CDE  
                              ___awmod@sign 000B                                         wreg 000FE8  
                              ___flmul@aexp 0028                                ___flmul@bexp 002D  
                  _DISTANCIA_PRIORIDAD_BAJA 010C                    _DISTANCIA_PRIORIDAD_ALTA 0114  
                              ___flmul@sign 0027                                ___flmul@temp 0032  
                              ___flmul@prod 002E                 __size_of_limpiarMovimientos 0050  
                              __CFG_LVP$OFF 000000                                        ?_PID 0001  
                              ___fltol@exp1 007B                                __CFG_WDT$OFF 000000  
                                      l1040 4010                                        ?_abs 0018  
                                      l1220 49FA                                        l1205 47F8  
                                      l1231 4324                                        l1226 42DE  
                                      l1075 3AC2                                        l1235 561E  
                                      l1088 3DA2                                        l1192 4686  
                                      l1506 1A08                                        l1258 4220  
                                      l1515 1AD8                                        l1531 545E  
                                      l1516 1AC6                                        l1452 4DC2  
                                      l1630 35B2                                        l1543 2B64  
                                      l1711 55E6                                        l1623 3556  
                                      l1616 34BE                                        l1705 529C  
                                      l1545 29C4                                        l1650 55AE  
                                      l1554 2A0A                                        l1490 18DC  
                                      l1642 4422                                        l1491 18A2  
                                      l1619 361A                                        l1459 4DCA  
                                      l1556 2A82                                        l1548 2988  
                                      l1557 2A70                                        l1741 524A  
                                      l1726 45C2                                        l1734 552E  
                                      l1582 22A8                                        l1647 55A6  
                                      l1575 20B2                                        l1744 5800  
                                      l1592 23D8                                        l1584 2320  
                                      l1752 27C8                                        l1681 37AA  
                                      l1585 230E                                        l1489 18EE  
                                      l1498 1BBE                                        l1690 31EE  
                                      l1771 568C                                        l1579 2416  
                                      l1765 50F2                                        l1678 37A2  
                                      l1790 5038                                        l1687 32AA  
                                      l1775 44F8                                        l1697 5656  
                                      l1785 5030                                        ?_map 0020  
                                      ?_pad 0016                                        l8101 44FA  
                                      l8111 457C                                        l8103 450C  
                                      l8105 451E                                        l8121 550E  
                                      l8201 173C                                        l9001 41B6  
                                      l8107 4528                                        l8115 54EC  
                                      l8123 5658                                        l8211 176C  
                                      l8203 174C                                        l9011 41E0  
                                      l9003 41C0                                        l8109 4546  
                                      l8117 54F8                                        l8125 5664  
                                      l9101 5114                                        l8301 193E  
                                      l8221 1796                                        l8213 177E  
                                      l8205 174E                                        l9013 41F0  
                                      l8133 55B0                                        l9021 346A  
                                      l8141 4E5A                                        l8151 3F18  
                                      l8119 550A                                        l8127 5668  
                                      l9103 5120                                        l9111 2B66  
                                      l8311 196C                                        l8303 194C  
                                      l8223 17A6                                        l8231 17D0  
                                      l8215 1780                                        l8207 1756  
                                      l9015 4200                                        l9023 347A  
                                      l8143 4E6A                                        l8161 3F4E  
                                      l8153 3F28                                        l8129 5680  
                                      l8401 46AA                                        l9105 5124  
                                      l9121 2BE0                                        l9113 2B86  
                                      l8321 19D8                                        l8313 1976  
                                      l8305 1958                                        l8241 1808  
                                      l8233 17E0                                        l8225 17B6  
                                      l8217 1786                                        l8209 1766  
                                      l9017 4210                                        l9009 41D4  
                                      l9201 00C6                                        l9041 3540  
                                      l9033 34F8                                        l9025 3488  
                                      l8145 4E74                                        l8137 4E3C  
                                      l8171 3F96                                        l8163 3F5E  
                                      l8155 3F2C                                        l8147 3F06  
                                      l8411 46F0                                        l8403 46B8  
                                      l9107 5128                                        l9131 2C3C  
                                      l9123 2BFA                                        l9115 2BAE  
                                      l8323 19E8                                        l8307 195C  
                                      l8315 197C                                        l8251 181C  
                                      l8243 180C                                        l8235 17F2  
                                      l8227 17C6                                        l8219 1794  
                                      l9211 013A                                        l9203 00CC  
                                      l9051 35C0                                        l9043 354C  
                                      l9035 3500                                        l9027 34CE  
                                      l8139 4E4C                                        l8181 3FDA  
                                      l8173 3FA0                                        l8165 3F74  
                                      l8157 3F3A                                        l8149 3F0A  
                                      l8413 471C                                        l8405 46C4  
                                      l8501 394E                                        l8421 558A  
                                      l9141 2CDA                                        l9133 2C44  
                                      l9125 2C16                                        l9117 2BCE  
                                      l8341 1A6A                                        l8333 1A42  
                                      l8317 19A2                                        l8325 19F8  
                                      l8309 196A                                        l8261 1830  
                                      l8253 1820                                        l8245 1810  
                                      l8237 1800                                        l8229 17C8  
                                      l9301 04F2                                        l9213 0156  
                                      l9205 00F2                                        l9221 01A0  
                                      l9061 3608                                        l9053 35C2  
                                      l9045 3588                                        l9037 350C  
                                      l9029 34E4                                        l8175 3FBE  
                                      l8167 3F7C                                        l8183 3FE0  
                                      l8159 3F4A                                        l9071 5264  
                                      l8415 4730                                        l8407 46D8  
                                      l8511 39A4                                        l8503 396E  
                                      l9151 2D96                                        l9143 2CE0  
                                      l9135 2C4C                                        l9127 2C28  
                                      l9119 2BDE                                        l8343 1A72  
                                      l8335 1A4C                                        l8327 1A1E  
                                      l8319 19D6                                        l8351 1A96  
                                      l8271 1844                                        l8263 1834  
                                      l8255 1824                                        l8247 1814  
                                      l8239 1804                                        l8191 1700  
                                      l8431 43B8                                        l8423 4326  
                                      l9311 053C                                        l9303 050A  
                                      l9231 022A                                        l9223 01C6  
                                      l9215 016E                                        l9063 360A  
                                      l9055 35C6                                        l9047 3594  
                                      l9039 353E                                        l8185 3FF0  
                                      l8177 3FCE                                        l8169 3F88  
                                      l9073 5292                                        l8409 46EC  
                                      l8521 39F8                                        l8513 39B0  
                                      l8505 3972                                        l9161 2DE4  
                                      l9153 2DB0                                        l9137 2C52  
                                      l9145 2D44                                        l9129 2C36  
                                      l8601 284C                                        l8361 1AE8  
                                      l8353 1A9A                                        l8345 1A76  
                                      l8337 1A5A                                        l8329 1A2E  
                                      l8281 18BC                                        l8273 186E  
                                      l8265 1838                                        l8257 1828  
                                      l8249 1818                                        l8193 170C  
                                      l8441 441A                                        l8425 4346  
                                      l9401 09F0                                        l9313 0550  
                                      l9321 0646                                        l9305 051C  
                                      l9241 0260                                        l9217 0178  
                                      l9209 0128                                        l9057 35EA  
                                      l9049 35A2                                        l9081 330C  
                                      l8187 4000                                        l8179 3FD0  
                                      l9075 5296                                        l9067 524C  
                                      l8531 3A6C                                        l8523 3A0A  
                                      l8515 39CE                                        l8507 3980  
                                      l8419 5570                                        l9163 2DF6  
                                      l9147 2D5E                                        l9155 2DBE  
                                      l9139 2CD4                                        l8611 2880  
                                      l8603 284E                                        l8371 1B4E  
                                      l8363 1AF4                                        l8355 1AA8  
                                      l8347 1A86                                        l8339 1A5C  
                                      l8291 18FC                                        l8283 18C0  
                                      l8275 188A                                        l8267 183C  
                                      l8259 182C                                        l8195 171A  
                                      l8427 4384                                        l8435 43C4  
                                      l9411 0A2E                                        l9403 0A00  
                                      l9331 0712                                        l9323 0664  
                                      l9315 05B4                                        l9307 0524  
                                      l9251 032A                                        l9227 01FC  
                                      l9059 35FA                                        l9091 343A  
                                      l9083 332C                                        l9069 5250  
                                      l8525 3A38                                        l8517 39D6  
                                      l8533 3A72                                        l8509 39A0  
                                      l8541 3C40                                        l9165 2E02  
                                      l9157 2DD0                                        l9149 2D7C  
                                      l8701 2B44                                        l8621 28C6  
                                      l8605 285E                                        l8613 2888  
                                      l8381 1B96                                        l8373 1B5E  
                                      l8365 1B02                                        l8357 1ABE  
                                      l8349 1A88                                        l8293 190C  
                                      l8285 18CE                                        l8277 189A  
                                      l8269 1840                                        l8197 171C  
                                      l8437 43D6                                        l8429 43AC  
                                      l8461 30B6                                        l8445 5098  
                                      l8453 5010                                        l9421 0A64  
                                      l9413 0A3E                                        l9405 0A04  
                                      l9341 078A                                        l9333 0722  
                                      l9325 0698                                        l9317 060C  
                                      l9309 052C                                        l9261 03AC  
                                      l9253 035E                                        l9245 0296  
                                      l9229 020E                                        l9181 0042  
                                      l9173 0012                                        l9085 33B2  
                                      l9503 3762                                        l8535 3A82  
                                      l8527 3A58                                        l8519 39EA  
                                      l8551 3C84                                        l8543 3C44  
                                      l9167 2E0A                                        l9159 2DDE  
                                      l8703 2B52                                        l8631 28EE  
                                      l8623 28CA                                        l8615 2898  
                                      l8607 286E                                        l8383 1B98  
                                      l8375 1B7E                                        l8367 1B3C  
                                      l8287 18D0                                        l8279 18B0  
                                      l8199 172C                                        l8471 31A2  
                                      l8463 310E                                        l8447 50A8  
                                      l8455 5022                                        l9431 0AC0  
                                      l9423 0A70                                        l9415 0A46  
                                      l9407 0A14                                        l9351 0840  
                                      l9343 0796                                        l9335 0732  
                                      l9327 06CA                                        l9319 0640  
                                      l9263 03BE                                        l9271 040E  
                                      l9255 0366                                        l9247 02CA  
                                      l9239 0246                                        l9191 0098  
                                      l9183 0066                                        l9175 001C  
                                      l9087 33F6                                        l9079 32AC  
                                      l9505 3774                                        l9097 50F4  
                                      l8537 3AA2                                        l8529 3A5A  
                                      l8561 3CEC                                        l8553 3CA4  
                                      l8545 3C52                                        l9169 2E1A  
                                      l8705 2B58                                        l8641 293C  
                                      l8617 28AE                                        l8609 287E  
                                      l8801 22A6                                        l8721 200A  
                                      l8385 1B9E                                        l8377 1B82  
                                      l8369 1B3E                                        l8297 1920  
                                      l8289 18DA                                        l8481 328A  
                                      l8473 31DE                                        l8465 3122  
                                      l8449 4FDA                                        l9441 0B0A  
                                      l9425 0A76                                        l9433 0AC6  
                                      l9417 0A54                                        l9409 0A26  
                                      l9361 088A                                        l9353 0852  
                                      l9345 07BA                                        l9337 0766  
                                      l9329 06E0                                        l9281 0452  
                                      l9265 03D2                                        l9249 02D0  
                                      l9257 0398                                        l9193 00AA  
                                      l9185 0070                                        l9177 002C  
                                      l9521 4468                                        l9513 4424  
                                      l9601 0E70                                        l8393 4CDE  
                                      l8491 5708                                        l9507 3786  
                                      l9099 5108                                        l8571 3D62  
                                      l8563 3D1A                                        l8555 3CC2  
                                      l8547 3C72                                        l8707 2B5A  
                                      l8651 2986                                        l8643 294C  
                                      l8635 2902                                        l8619 28BE  
                                      l8627 28DE                                        l8811 2306  
                                      l8803 22B8                                        l8731 2050  
                                      l8723 201A                                        l8715 1FEE  
                                      l8387 1BAC                                        l8379 1B90  
                                      l8299 1930                                        l8483 329A  
                                      l8467 3130                                        l8475 3212  
                                      l8459 3096                                        l9451 0B3A  
                                      l9443 0B16                                        l9435 0AD8  
                                      l9427 0A9C                                        l9419 0A5C  
                                      l9371 08C0                                        l9363 089A  
                                      l9355 0860                                        l9347 081E  
                                      l9339 0776                                        l9291 04AE  
                                      l9283 0488                                        l9267 03DA  
                                      l9259 03A8                                        l9195 00B6  
                                      l9187 0078                                        l9179 003A  
                                      l9523 4480                                        l9515 444E  
                                      l9611 0F26                                        l9603 0E94  
                                      l9533 57CE                                        l8493 5724  
                                      l8397 4688                                        l8573 3D82  
                                      l8565 3D3A                                        l8557 3CCA  
                                      l8549 3C76                                        l8901 4764  
                                      l8661 29D4                                        l8653 2992  
                                      l8645 2954                                        l8637 291C  
                                      l8629 28EE                                        l8581 27E6  
                                      l8821 2374                                        l8805 22C6  
                                      l8741 207C                                        l8733 2056  
                                      l8725 202A                                        l8717 1FFA  
                                      l8389 1BAE                                        l8477 324E  
                                      l9461 0B94                                        l9445 0B1E  
                                      l9437 0AF2                                        l9429 0AB8  
                                      l9381 08F4                                        l9373 08C4  
                                      l9365 089E                                        l9349 082C  
                                      l9357 0868                                        l9293 04C0  
                                      l9285 0490                                        l9277 0422  
                                      l9269 03F4                                        l9197 00BE  
                                      l9189 008A                                        l9525 449C  
                                      l9613 0F3C                                        l9621 0FA6  
                                      l9605 0EDC                                        l9541 5750  
                                      l9701 53BA                                        l8487 5620  
                                      l9471 361C                                        l8399 4696  
                                      l8567 3D4C                                        l8559 3CDE  
                                      l8911 4798                                        l8903 4768  
                                      l8663 29EA                                        l8671 2A1A  
                                      l8655 29B0                                        l8647 2964  
                                      l8639 292C                                        l8591 281A  
                                      l8583 27E8                                        l8831 23DC  
                                      l8815 2330                                        l8823 2378  
                                      l8807 22CA                                        l8751 20D2  
                                      l8743 208C                                        l8735 205C  
                                      l8727 203A                                        l8719 2008  
                                      l8479 3262                                        l9463 0BA4  
                                      l9455 0B6E                                        l9447 0B2E  
                                      l9439 0AF8                                        l9391 0992  
                                      l9383 08F8                                        l9375 08CA  
                                      l9367 08A4                                        l9359 087C  
                                      l9295 04CE                                        l9279 0436  
                                      l9287 0494                                        l9199 00C2  
                                      l9527 44AE                                        l9519 445A  
                                      l9631 1088                                        l9623 0FD4  
                                      l9615 0F4A                                        l9551 579A  
                                      l9543 5758                                        l9535 56BC  
                                      l9711 53DA                                        l9703 53BE  
                                      l9481 368A                                        l9473 3630  
                                      l8497 393C                                        l8569 3D52  
                                      l8921 47D2                                        l8913 47A0  
                                      l8905 4776                                        l8673 2A28  
                                      l8665 29F0                                        l8657 29B2  
                                      l8649 2978                                        l8585 27F8  
                                      l8593 2822                                        l8577 27CA  
                                      l8841 2406                                        l8833 23EC  
                                      l8825 2392                                        l8817 233C  
                                      l8809 22D8                                        l8761 2112  
                                      l8745 209C                                        l8737 206A  
                                      l8729 2040                                        l9465 0BAA  
                                      l9457 0B80                                        l9449 0B34  
                                      l9369 08B0                                        l9377 08D0  
                                      l9385 08FE                                        l9393 0996  
                                      l9297 04D2                                        l9289 049C  
                                      l9529 44D6                                        l9641 10FE  
                                      l9617 0F7A                                        l9609 0F14  
                                      l9561 0C14                                        l9553 0BCC  
                                      l9537 57B2                                        l9721 5402  
                                      l9713 53E8                                        l9545 5772  
                                      l9705 53CC                                        l9801 3E12  
                                      l9491 36B2                                        l9483 368E  
                                      l9475 3634                                        l8499 3940  
                                      l8851 45C4                                        l8915 47AE  
                                      l8923 47D8                                        l8907 477E  
                                      l8683 2A92                                        l8691 2ADA  
                                      l8675 2A2C                                        l8667 29FA  
                                      l8659 29C2                                        l8595 2832  
                                      l8587 2808                                        l8579 27D8  
                                      l8931 4952                                        l8835 23FA  
                                      l8827 23A6                                        l8819 234A  
                                      l8771 215C                                        l8763 211E  
                                      l8755 20E6                                        l8747 20A2  
                                      l8739 206C                                        l9459 0B8C  
                                      l9395 09B4                                        l9387 0956  
                                      l9379 08E2                                        l9299 04E4  
                                      l9643 1112                                        l9627 1042  
                                      l9571 0CAC                                        l9563 0C38  
                                      l9555 0BF0                                        l9539 57BA  
                                      l9723 5406                                        l9715 53EC  
                                      l9707 53D2                                        l9547 577A  
                                      l9811 3EA8                                        l9803 3E42  
                                      l9731 2482                                        l9661 503A  
                                      l9493 36BA                                        l9477 3638  
                                      l8861 45F0                                        l8853 45C8  
                                      l8925 47E8                                        l8917 47C4  
                                      l8909 4790                                        l8693 2AF4  
                                      l8685 2A9E                                        l8677 2A3A  
                                      l8669 2A08                                        l8597 2838  
                                      l8589 2818                                        l8941 49F2  
                                      l8933 4980                                        l8837 23FC  
                                      l8829 23C0                                        l8781 21AE  
                                      l8773 2168                                        l8765 2136  
                                      l8757 20F2                                        l8749 20C2  
                                      l8845 541A                                        l9397 09D0  
                                      l9389 098A                                        l9629 1054  
                                      l9637 10CC                                        l9573 0CCC  
                                      l9565 0C40                                        l9581 0D34  
                                      l9557 0BFE                                        l9653 113C  
                                      l9549 5792                                        l9725 5414  
                                      l9717 53F0                                        l9709 53D6  
                                      l9813 3EE2                                        l9733 2496  
                                      l9901 3006                                        l8951 4260  
                                      l9663 503E                                        l9671 546A  
                                      l9495 36EE                                        l9487 3694  
                                      l9479 3654                                        l8871 461E  
                                      l8863 45F8                                        l8855 45D6  
                                      l8927 47F0                                        l8919 47CC  
                                      l8695 2B0A                                        l8687 2AAC  
                                      l8679 2A68                                        l8599 283E  
                                      l8943 49F8                                        l8935 4990  
                                      l8839 2402                                        l8791 222C  
                                      l8783 21BE                                        l8775 2178  
                                      l8767 2142                                        l8759 20FC  
                                      l8847 542A                                        l9399 09E2  
                                      l9655 1160                                        l9639 10F0  
                                      l9647 1120                                        l9591 0DDA  
                                      l9583 0D56                                        l9575 0CDA  
                                      l9567 0C4E                                        l9559 0C10  
                                      l9831 521C                                        l9719 53FE  
                                      l9815 3EE2                                        l9807 3E54  
                                      l9751 2724                                        l9743 254C  
                                      l9735 24D2                                        l9727 2418  
                                      l9903 301E                                        l9911 306A  
                                      l8961 42CC                                        l8953 428E  
                                      l9665 5062                                        l9673 546C  
                                      l9489 36AA                                        l8881 4658  
                                      l8873 4626                                        l8865 45FC  
                                      l8857 45DE                                        l8697 2B24  
                                      l8689 2AD6                                        l8937 49BE  
                                      l8793 2262                                        l8785 21DA  
                                      l8777 2184                                        l8769 214E  
                                      l9649 112E                                        l9593 0DFE  
                                      l9585 0D66                                        l9569 0C72  
                                      l9761 4EA6                                        l9833 5238  
                                      l9825 51FA                                        l9921 556A  
                                      l9817 3EF4                                        l9809 3E96  
                                      l9753 2758                                        l9745 261A  
                                      l9737 24F6                                        l9729 2438  
                                      l9913 3072                                        l9905 3046  
                                      l9841 4ACA                                        l8963 431C  
                                      l8955 429E                                        l8947 4222  
                                      l9931 3808                                        l9923 37AC  
                                      l9667 5066                                        l9675 547E  
                                      l9499 3724                                        l8891 467E  
                                      l8883 465A                                        l8875 4634  
                                      l8867 4604                                        l8859 45E2  
                                      l8699 2B40                                        l8939 49CE  
                                      l8795 2270                                        l8787 21E6  
                                      l8779 2194                                        l8971 55FE  
                                      l9595 0E30                                        l9587 0D98  
                                      l9579 0D22                                        l9763 4EAE  
                                      l9827 520C                                        l9691 5392  
                                      l9771 4D60                                        l9683 572E  
                                      l9755 2794                                        l9747 2686  
                                      l9739 2514                                        l9915 3082  
                                      l9907 3056                                        l9843 4AE0  
                                      l9851 4B00                                        l9861 4FB0  
                                      l8965 4322                                        l8957 42AC  
                                      l8949 4250                                        l9941 387A  
                                      l9933 383A                                        l9925 37CE  
                                      l9677 5480                                        l9669 5462  
                                      l8885 4660                                        l8877 463A  
                                      l8869 4616                                        l8797 228E  
                                      l8789 2202                                        l8973 560E  
                                      l9589 0DA8                                        l9765 4EBC  
                                      l9829 5214                                        l9693 53A0  
                                      l9917 5530                                        l9781 4D96  
                                      l9773 4D72                                        l9685 5736  
                                      l9757 27B8                                        l9749 26B8  
                                      l9909 305E                                        l9837 4AA2  
                                      l9863 4FBE                                        l9871 530A  
                                      l8959 42BE                                        l9943 387C  
                                      l9935 3840                                        l9927 3800  
                                      l9679 5492                                        l8879 4650  
                                      l8887 4666                                        l8895 474A  
                                      l8799 2298                                        l8991 4186  
                                      l8983 4146                                        l9599 0E4C  
                                      l9767 4EEA                                        l9695 53A4  
                                      l9687 538A                                        l9919 5562  
                                      l9783 4DAC                                        l9775 4D7A  
                                      l9791 3DA6                                        l9839 4AAE  
                                      STR_1 7F63                                        STR_2 7F4A  
                                      l9865 4FC2                                        l9857 4F78  
                                      l9873 530E                                        l9953 388C  
                                      l9937 3842                                        l9929 3806  
                                      l8889 4676                                        l8897 474E  
                                      l8969 55E8                                        l8993 4194  
                                      l8985 4170                                        l8977 411A  
                                      l9697 53A8                                        l9689 538E  
                                      l9785 4DB4                                        l9777 4D82  
                                      l9769 4D58                                        l9793 3DB6  
                                      l9881 2E4E                                        STR_3 7E44  
                                      STR_4 7FA5                                        l9859 4F84  
                                      l9875 532C                                        l9867 52EE  
                                      l9955 389E                                        l9939 3874  
                                      l8899 475C                                        l8987 4172  
                                      l8979 4132                                        l9699 53B6  
                                      l9787 4DB6                                        l9779 4D90  
                                      l9795 3DB8                                        l9891 2FAA  
                                      l9883 2E8E                                        STR_5 7F92  
                                      STR_6 7FB7                                        l9869 52FA  
                                      l9981 38E6                                        l9957 38B2  
                                      l8989 4182                                        l9877 56E2  
                                      l9789 4DBC                                        l9797 3DBE  
                                      l9893 2FD6                                        l9885 2F50  
                                      STR_7 7FD3                                        STR_8 7FC8  
                                      l9983 38F6                                        l8999 41AC  
                                      l9799 3DE2                                        l9895 2FEA  
                                      l9887 2F80                                        l9879 2E44  
                                      STR_9 7FDD                                        l9985 3906  
                                      l9977 38C2                                        l9897 2FF2  
                                      l9889 2F88                                        l9987 3916  
                                      l9979 38D2                                        l9899 2FFE  
                                      u8020 450C                                        u8100 4E5A  
                                      _RCIF 007CF5                                        u8021 4508  
                                      u8101 4E56                                        u8030 451E  
                                      u8110 4E94                                        u8031 451A  
                                      u8111 4E90                                        u8120 3F18  
                                      u8040 4546                                        u9000 27F8  
                                      u8200 173C                                        u8121 3F14  
                                      u8041 4542                                        u9001 27F4  
                                      u8201 1738                                        u8130 3F3A  
                                      u8050 457C                                        u9010 2808  
                                      u8210 177E                                        u8131 3F36  
                                      u8051 4578                                        u9011 2804  
                                      u8211 177A                                        u8140 3F74  
                                      u8060 552E                                        u9100 29D4  
                                      u9020 284C                                        u8300 18B0  
                                      u8220 1794                                        u8141 3F70  
                                      u8061 552A                                        u9101 29D0  
                                      u9021 2848                                        u8301 18AC  
                                      u8221 1790                                        u8150 3F96  
                                      u8070 5680                                        u9110 29EA  
                                      u9030 285E                                        u8310 18CE  
                                      u8230 17A6                                        u8151 3F92  
                                      u8071 567C                                        u9111 29E6  
                                      u9031 285A                                        u8311 18CA  
                                      u8231 17A2                                        u8160 3FBE  
                                      u9200 2B24                                        u9120 2A08  
                                      u9040 286E                                        u8400 1A1E  
                                      u8320 18EE                                        u8240 17B6  
                                      u8080 55E0                                        u8161 3FBA  
                                      u9201 2B20                                        u9121 2A04  
                                      u9041 286A                                        u8401 1A1A  
                                      u8321 18EA                                        u8241 17B2  
                                      u8081 55DA                                        u8170 3FF0  
                                      u9210 2B52                                        u9130 2A28  
                                      u9050 28AE                                        u8410 1A2E  
                                      u8330 18FC                                        u8250 17F2  
                                      u8090 55E2                                        u8171 3FEC  
                                      u9211 2B4E                                        u9131 2A24  
                                      u9051 28AA                                        u8411 1A2A  
                                      u8331 18F8                                        u8251 17EE  
                                      u9140 2A3A                                        u9060 28EE  
                                      u9300 224C                                        u9220 2008  
                                      u8500 1B02                                        u8420 1A5A  
                                      u8340 190C                                        u8260 1800  
                                      u8180 171A                                        u9141 2A36  
                                      u9061 28EA                                        u9221 2004  
                                      u8501 1AFE                                        u8421 1A56  
                                      u8341 1908                                        u8261 17FC  
                                      u8181 1716                                        u9150 2A68  
                                      u9070 2964                                        u9310 22A6  
                                      u9230 201A                                        u8510 1B3C  
                                      u8430 1A6A                                        u8350 193E  
                                      u8270 186E                                        u8190 172C  
                                      u9151 2A64                                        u9071 2960  
                                      u9311 22A2                                        u9231 2016  
                                      u8511 1B38                                        u8431 1A66  
                                      u8351 193A                                        u8271 186A  
                                      u8191 1728                                        u8600 471C  
                                      u9160 2A7E                                        u9080 2986  
                                      u9400 23FA                                        u9320 22C6  
                                      u9240 202A                                        u8520 1B4E  
                                      u8440 1A86                                        u8360 194C  
                                      u8280 1886                                        u8601 4718  
                                      u9161 2A7A                                        u9081 2982  
                                      u9401 23F6                                        u9321 22C2  
                                      u9305 2242                                        u9241 2026  
                                      u8521 1B4A                                        u8441 1A82  
                                      u8361 1948                                        u8281 1880  
                                      u8610 558A                                        u9410 45D6  
                                      u9170 2A92                                        u9090 29B0  
                                      u9330 22D8                                        u9250 206A  
                                      u8530 1B5E                                        u8450 1A96  
                                      u8370 196A                                        u8290 1888  
                                      u8611 5586                                        u9411 45D2  
                                      u9171 2A8E                                        u9091 29AC  
                                      u9331 22D4                                        u9251 2066  
                                      u8531 1B5A                                        u8451 1A92  
                                      u8371 1966                                        u9420 45F0  
                                      u9500 47AE                                        u9180 2AAC  
                                      u9340 2306                                        u9260 207C  
                                      u8540 1B7E                                        u8460 1AA8  
                                      u8380 19A2                                        u8620 4366  
                                      u8700 50F2                                        u9421 45EC  
                                      u9501 47AA                                        u9181 2AA8  
                                      u9341 2302                                        u9261 2078  
                                      u8541 1B7A                                        u8461 1AA4  
                                      u8381 199E                                        u8701 50EE  
                                      u9430 4616                                        u9510 47C4  
                                      u9190 2AF4                                        u9350 231C  
                                      u9270 208C                                        u8550 1B90  
                                      u8470 1ABE                                        u8390 19E8  
                                      u8630 4384                                        u8710 500A  
                                      u9431 4612                                        u9511 47C0  
                                      u9191 2AF0                                        u9351 2318  
                                      u9271 2088                                        u8551 1B8C  
                                      u8471 1ABA                                        u8391 19E4  
                                      u8631 4380                                        u8711 5004  
                                      u9600 431C                                        u9440 4634  
                                      u9520 47E8                                        u9360 2330  
                                      u9280 20C2                                        u8560 1BAC  
                                      u8480 1AD4                                        u8640 43AC  
                                      u8800 31DE                                        u8720 500C  
                                      u9601 4318                                        u9441 4630  
                                      u9521 47E4                                        u9361 232C  
                                      u9281 20BE                                        u8561 1BA8  
                                      u8481 1AD0                                        u8641 43A8  
                                      u8625 435C                                        u8801 31DA  
                                      u8570 4696                                        u9450 4650  
                                      u9530 4980                                        u9370 234A  
                                      u9290 20D2                                        u9610 55FE  
                                      u8490 1AE8                                        u8650 43D6  
                                      u8810 3232                                        u8730 5022  
                                      u8571 4692                                        u9451 464C  
                                      u9531 497C                                        u9371 2346  
                                      u9291 20CE                                        u9611 55FA  
                                      u8491 1AE4                                        u8651 43D2  
                                      u8731 501E                                        u8580 46B8  
                                      u8900 39F8                                        u9460 4676  
                                      u9540 49BE                                        u9380 2392  
                                      u9620 4132                                        u8820 324E  
                                      u8740 30E0                                        u9700 3488  
                                      u8581 46B4                                        u8901 39F4  
                                      u9461 4672                                        u9541 49BA  
                                      u9381 238E                                        u9621 412E  
                                      u8821 324A                                        u9701 3484  
                                      u8590 470E                                        u8910 3A38  
                                      u9470 475C                                        u9550 49F2  
                                      u9390 23C0                                        u9630 4166  
                                      u8670 4410                                        u8830 328A  
                                      u8750 310E                                        u9710 34E4  
                                      u8591 470A                                        u8911 3A34  
                                      u9471 4758                                        u9551 49EE  
                                      u9391 23BC                                        u8671 440A  
                                      u8831 3286                                        u8815 3228  
                                      u8751 310A                                        u9711 34E0  
                                      u9560 4250                                        u8840 5650  
                                      u9800 5292                                        u8920 3A82  
                                      u9480 4776                                        u9640 4194  
                                      u8680 4412                                        u8760 3130  
                                      u9720 353A                                        u9561 424C  
                                      u8841 564A                                        u9801 528E  
                                      u8921 3A7E                                        u9481 4772  
                                      u9641 4190                                        u8665 43E8  
                                      u8761 312C                                        u8745 30D6  
                                      u9721 3536                                        u9570 428E  
                                      u8850 5652                                        u8930 3C52  
                                      u9490 4790                                        u9650 41A8  
                                      u8690 50E0                                        u9730 3584  
                                      u9810 332C                                        u9571 428A  
                                      u8931 3C4E                                        u9491 478C  
                                      u9651 41A4                                        u9635 415C  
                                      u9731 3580                                        u9811 3328  
                                      u9580 42AC                                        u8860 394E  
                                      u8940 3C84                                        u9900 2C28  
                                      u9660 41D0                                        u8780 319E  
                                      u9740 35A2                                        u9581 42A8  
                                      u8861 394A                                        u8941 3C80  
                                      u9901 2C24                                        u9661 41CC  
                                      u8781 319A                                        u9741 359E  
                                      u9590 42CC                                        u8870 3980  
                                      u8950 3CC2                                        u9910 2C36  
                                      u9670 41F0                                        u8790 31C2  
                                      u9750 35B2                                        u9591 42C8  
                                      u8871 397C                                        u8951 3CBE  
                                      u9911 2C32                                        u9671 41EC  
                                      u8775 3144                                        u9751 35AE  
                                      u9840 5108                                        u8960 3CEC  
                                      u9920 2D5E                                        u9680 4200  
                                      u8776 314E                                        u9760 35C0  
                                      u9841 5104                                        u8881 39AA  
                                      u8961 3CE8                                        u9921 2D5A  
                                      u9681 41FC                                        u8777 315E  
                                      u8697 50D6                                        u9761 35BC  
                                      u9825 33C6                                        u8890 39CE  
                                      u8970 3D1A                                        u9930 2D7C  
                                      u9850 2B96                                        u9770 35FA  
                                      u9690 347A                                        u9826 33D0  
                                      u8891 39CA                                        u8971 3D16  
                                      u9931 2D78                                        u9851 2B90  
                                      u8795 31B8                                        u9771 35F6  
                                      u9691 3476                                        u9835 340A  
                                      u9827 33E0                                        u8980 3D62  
                                      u9940 2D96                                        u9860 2B98  
                                      u9780 3608                                        u9836 3414  
                                      u8981 3D5E                                        u9941 2D92  
                                      u9781 3604                                        u9837 3424  
                                      u9790 5264                                        u9950 2DB0  
                                      u9870 2BAE                                        u8990 27E6  
                                      u9791 5260                                        u9951 2DAC  
                                      u9871 2BAA                                        u8991 27E2  
                                      u9960 2DBE                                        u9880 2BDE  
                                      u9961 2DBA                                        u9881 2BDA  
                                      u9970 2DD0                                        u9890 2BFA  
                                      u9971 2DCC                                        u9891 2BF6  
                                      u9980 2DDE                                        u9981 2DDA  
                                      u9990 2DF6                                        u9991 2DF2  
      comportamientoBasico@caminoEncontrado 0138                            ??_forzarParoAuto 0006  
                                      abs@a 0018                                        _dbuf 0141  
                                      _atoi 361C                                        _ctoa 50F4  
                                      _main 4B3C                                        _dtoa 2B66  
                                      _prec 0134                                        _nout 0130  
                                      pad@i 001D                                        pad@p 001A  
                                      fsr0h 000FEA                                        fsr1h 000FE2  
                                      indf0 000FEF                                        fsr2h 000FDA  
                                      fsr0l 000FE9                                        indf1 000FE7  
                                      indf2 000FDF                                        fsr1l 000FE1  
                                      pad@w 001F                                        map@x 0020  
                                      fsr2l 000FD9                                        btemp 005A  
                             ___fpclassifyf 4326                    __end_of_decidirDireccion 1700  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 000E                               __CFG_IESO$OFF 000000  
                           ___fldiv@new_exp 0065                                _tolower$1574 0012  
                             __CFG_MCLRE$ON 000000                               ?_leerSensores 0001  
                              ___param_bank 000000                                       ??_PID 0088  
                           ?_caminoCorrecto 0012                                       ??_abs 001A  
                                     ??_map 0034                                       ??_pad 001C  
                           ??_velocidadBaja 0054                               __CFG_PLLDIV$1 000000  
                            __CFG_CCP2MX$ON 000000                                       l10001 3922  
                                     l10003 3932                                       l10021 4C5E  
                                     l10013 568E                                       l10101 11AC  
                                     l10023 4C62                                       l10015 5692  
                                     l10111 1202                                       l10103 11C4  
                                     l10009 3938                                       l10025 4C72  
                                     l10033 4CA2                                       l10017 56B4  
                                     l10121 126A                                       l10113 1212  
                                     l10105 11D0                                       l10041 3BDE  
                                     l10027 4C82                                       l10203 1380  
                                     l10123 127E                                       l10115 1232  
                                     l10131 12DC                                       l10107 11E0  
                                     l10043 3BEE                                       l10029 4C92  
                                     l10205 139A                                       l10141 133E  
                                     l10133 12F4                                       l10117 1246  
                                     l10109 11E8                                       l10045 3BFE  
                                     l10061 4016                                       l10055 54A6  
                                     l10207 13BA                                       l10223 13CE  
                                     l10143 135C                                       l10135 130E  
                                     l10039 3AC4                                       l10071 4076  
                                     l10063 4022                                       l10057 54B2  
                                     l10305 1498                                       l10225 13EC  
                                     l10209 13C6                                       l10145 1360  
                                     l10137 1316                                       l10129 12A2  
                                     l10073 4086                                       l10065 403A  
                                     l10401 48C4                                       l10059 54D6  
                                     l10251 144E                                       l10227 13F8  
                                     l10147 136C                                       l10139 1336  
                                     l10075 408A                                       l10067 4046  
                                     l10411 4900                                       l10501 4E04  
                                     l10245 1404                                       l10341 14D4  
                                     l10077 40A2                                       l10069 4060  
                                     l10413 491E                                       l10421 4940  
                                     l10405 48D6                                       l10511 4E34  
                                     l10503 4E2C                                       l10351 1546  
                                     l10335 14A8                                       l10247 1424  
                                     l10343 1510                                       l10095 1174  
                                     l10079 40BC                                       l10087 40DC  
                                     l10423 4944                                       l10415 4922  
                                     l10407 48F4                                       l10431 4A1C  
                                     l11231 1D72                                       l10513 4E36  
                                     l10505 4E2E                                       l10361 15AA  
                                     l10353 154E                                       l10345 1520  
                                     l10337 14CC                                       l10249 1442  
                                     l11241 12BE                                       l10097 117C  
                                     l10417 492A                                       l10409 48F8  
                                     l10441 4A68                                       l10433 4A3A  
                                     l11233 1F70                                       l10601 1D3E  
                                     l10521 47FE                                       l10515 4E38  
                                     l10507 4E30                                       l10371 167C  
                                     l10363 15DA                                       l10355 1576  
                                     l10347 152C                                       l11243 14F2  
                                     l10291 1456                                       l10099 1194  
                                     l11235 4B14                                       l10419 492E  
                                     l10451 4A92                                       l10443 4A70  
                                     l10435 4A3E                                       l10427 49FC  
                                     l10611 1D5A                                       l10603 1D46  
                                     l11227 4854                                       l10523 480E  
                                     l10531 483E                                       l10509 4E32  
                                     l11245 3450                                       l10381 16F8  
                                     l10373 1684                                       l10365 15DE  
                                     l10357 157A                                       l10293 1476  
                                     l10349 1536                                       l10453 57E2  
                                     l11237 40F2                                       l10461 4BE0  
                                     l10445 4A74                                       l10437 4A46  
                                     l10621 1DDC                                       l10613 1DA0  
                                     l10605 1D4A                                       l11229 52D4  
                                     l10517 57F2                                       l10541 533E  
                                     l10525 481E                                       l10533 487A  
                                     l11247 36D8                                       l10375 16B6  
                                     l10367 163A                                       l10359 1592  
                                     l10455 57E6                                       l11239 3E68  
                                     l10471 4C3A                                       l10463 4BFE  
                                     l10439 4A64                                       l10447 4A86  
                                     l10623 1DF2                                       l10615 1DB0  
                                     l10607 1D52                                       l10551 1BC0  
                                     l10543 5342                                       l10535 4898  
                                     l10527 482E                                       l10519 47FA  
                                     l11249 4CB6                                       l10377 16BE  
                                     l10369 164A                                       l10457 57EA  
                                     l10473 4C3E                                       l10465 4C1C  
                                     l10449 4A8A                                       l10625 1E06  
                                     l10617 1DC0                                       l10633 1E16  
                                     l10561 1C2C                                       l10553 1BD8  
                                     l10545 5358                                       l10379 16F0  
                                     l10467 4C24                                       l10475 4C44  
                                     l10459 4BD2                                       l10651 1E7E  
                                     l10635 1E28                                       l10627 1E0C  
                                     l10619 1DD2                                       l10563 1C3C  
                                     l10571 1C5E                                       l10555 1BF2  
                                     l10483 52A4                                       l10547 536E  
                                     l10493 4DCC                                       l10469 4C28  
                                     l10397 48A6                                       l10653 1E92  
                                     l10661 1EB2                                       l10645 1E58  
                                     l10637 1E38                                       l10629 1E10  
                                     l10573 1C6E                                       l10565 1C44  
                                     l10557 1C04                                       l10477 52A0  
                                     l10549 5384                                       l10901 4BA2  
                                     l10495 4DCC                                       l10399 48B8  
                                     l10671 1F0C                                       l10663 1EC2  
                                     l10655 1E98                                       l10647 1E6A  
                                     l10639 1E4A                                       l10591 1D16  
                                     l10575 1C84                                       l10567 1C50  
                                     l10559 1C16                                       l10487 52C0  
                                     l10903 4BB2                                       l10911 4BBA  
                                     l10497 4DCE                                       l10681 1F52  
                                     l10665 1ED2                                       l10657 1E9E  
                                     l10649 1E7A                                       l10593 1D26  
                                     l10577 1C94                                       l10569 1C54  
                                     l10585 1CAC                                       l10913 4BBE  
                                     l10905 4BB6                                       l10499 4DD0  
                                     l10691 1FCE                                       l10667 1EFA  
                                     l10675 1F2A                                       l10659 1EA2  
                                     l10595 1D2E                                       l10587 1CB0  
                                     l10579 1C9C                                       l10915 4BC6  
                                     l10851 4B3C                                       l10693 1FD2  
                                     l10677 1F3C                                       l10669 1F00  
                                     l10597 1D32                                       l10589 1D06  
                                     l10685 1F5A                                       l10861 4B4A  
                                     l10853 4B42                                       l10695 1FE8  
                                     l10679 1F4E                                       l10599 1D3A  
                                     l10687 1F9E                                       l10871 4B54  
                                     l10863 4B4C                                       l10855 4B44  
                                     l10689 1FB4                                       l10881 4B5E  
                                     l10873 4B56                                       l10865 4B4E  
                                     l10857 4B46                                       l10891 4B6C  
                                     l10883 4B60                                       l10875 4B58  
                                     l10867 4B50                                       l10859 4B48  
                                     l10893 4B72                                       l10885 4B62  
                                     l10877 4B5A                                       l10869 4B52  
                                     l10895 4B78                                       l10887 4B64  
                                     l10879 4B5C                                       l10897 4B7C  
                                     l10889 4B66                                       l10899 4B90  
                             ___fltol@sign1 007A                             __end_of___aldiv 4012  
                           __end_of___aodiv 3AC4                                       ?_atoi 000D  
                                     ?_ctoa 0021                             __end_of___fladd 1BC0  
                                     ?_main 0001                                       ?_dtoa 0021  
                           __end_of___aomod 3DA4                             __end_of___fldiv 2B66  
                           __end_of___awdiv 4688                             __end_of___flneg 5620  
                                     STR_10 7FE6                                       STR_11 7ECB  
                                     STR_20 7E88                                       STR_12 7E0C  
                                     STR_21 7FEC                                       STR_13 7DCD  
                                     STR_22 7FF4                                       STR_14 7E66  
                                     STR_31 7FFC                                       STR_15 7F7B  
                                     STR_16 7EEB                                       STR_25 7FF0  
                                     STR_17 7EAA                                       STR_26 7FF8  
                                     STR_18 7F2B                                       STR_19 7F0B  
                           __end_of___awmod 47FA                                       STR_29 7FFC  
                           __end_of___flmul 2418                             __end_of___flsub 5460  
                           __end_of___fltol 4222                                       u10000 003A  
                                     u10001 0036                                       u10010 008A  
                                     u10011 0086                                       u10100 01F8  
                                     u10020 0098                                       u10021 0094  
                                     u10110 020E                                       u10030 00AA  
                                     u10111 020A                                       u10031 00A6  
                                     u10200 0452                                       u10120 0292  
                                     u10040 00F2                                       u11000 3DE2  
                                     u10201 044E                                       u10121 028E  
                                     u10041 00EE                                       u11001 3DDE  
                                     u10210 0488                                       u10130 0326  
                                     u10050 0122                                       u11010 3DF0  
                                     u10211 0484                                       u10131 0322  
                                     u10051 011C                                       u11011 3DEC  
                                     u11100 532C                                       u10300 0712  
                                     u10220 04AE                                       u10140 0398  
                                     u10060 0124                                       u11020 3E02  
                                     u11101 5328                                       u10301 070E  
                                     u10221 04AA                                       u10141 0394  
                                     u11021 3DFE                                       u10310 0722  
                                     u10230 04C0                                       u10150 03BE  
                                     u10070 013A                                       u11030 3E12  
                                     u11110 2FAA                                       u10311 071E  
                                     u10231 04BC                                       u10151 03BA  
                                     u10071 0136                                       u11031 3E0E  
                                     u11111 2FA6                                       u11200 388C  
                                     u10400 09B4                                       u10320 078A  
                                     u10240 04CE                                       u10160 03D2  
                                     u10080 01C6                                       u11040 3E20  
                                     u11120 2FD6                                       u11201 3888  
                                     u10401 09B0                                       u10321 0786  
                                     u10241 04CA                                       u10161 03CE  
                                     u10081 01C2                                       u11041 3E1C  
                                     u11121 2FD2                                       u11210 389E  
                                     u10410 09D0                                       u10330 082C  
                                     u10250 04E4                                       u10170 03F4  
                                     u10090 01F6                                       u11050 3E32  
                                     u11130 301E                                       u11211 389A  
                                     u10411 09CC                                       u10331 0828  
                                     u10251 04E0                                       u10171 03F0  
                                     u10091 01F0                                       u11051 3E2E  
                                     u11131 301A                                       u11220 38D2  
                                     u10500 0B6A                                       u10420 09E2  
                                     u10340 0840                                       u10260 04F2  
                                     u10180 041E                                       u11300 11C4  
                                     u11060 3E42                                       u11140 3046  
                                     u11221 38CE                                       u10421 09DE  
                                     u10341 083C                                       u10261 04EE  
                                     u10181 041A                                       u11301 11C0  
                                     u11061 3E3E                                       u11141 3042  
                                     u11230 3906                                       u10510 0B80  
                                     u10430 09F0                                       u10350 0852  
                                     u10270 051C                                       u10190 0436  
                                     u11310 11E0                                       u11150 5562  
                                     u11070 3E50                                       u11231 3902  
                                     u10511 0B7C                                       u10431 09EC  
                                     u10351 084E                                       u10271 0518  
                                     u10191 0432                                       u11311 11DC  
                                     u11151 555E                                       u11071 3E4C  
                                     u12007 4AB4                                       u11240 3932  
                                     u11160 37CE                                       u10520 3654  
                                     u10440 0A26                                       u10360 0860  
                                     u10280 0664                                       u10600 4480  
                                     u11400 139A                                       u11320 1202  
                                     u11080 3E96                                       u11241 392E  
                                     u11161 37CA                                       u10521 3650  
                                     u10441 0A22                                       u10361 085C  
                                     u10281 0660                                       u10601 447C  
                                     u11401 1396                                       u11321 11FE  
                                     u11081 3E92                                       u12017 4AD4  
                                     u11090 4FD8                                       u11170 3800  
                                     u11250 56B4                                       u10530 368A  
                                     u10450 0A54                                       u10370 087C  
                                     u10290 06CA                                       u10610 449C  
                                     u11410 13BA                                       u11330 1232  
                                     u11091 4FD4                                       u11171 37FC  
                                     u11251 56B0                                       u10531 3686  
                                     u10451 0A50                                       u10371 0878  
                                     u10291 06C6                                       u10611 4498  
                                     u11411 13B6                                       u11331 122E  
                                     u12107 5784                                       u12027 4052  
                                     u11180 383A                                       u10540 36A6  
                                     u10460 0AD8                                       u10380 088A  
                                     u10620 44AE                                       u10700 0D34  
                                     u11500 1592                                       u11420 13EC  
                                     u11340 1266                                       u11260 403A  
                           ___awdiv@divisor 0008                                       u11181 3836  
                                     u10541 36A2                                       u10461 0AD4  
                                     u10381 0886                                       u10621 44AA  
                                     u10701 0D30                                       u11501 158E  
                                     u11421 13E8                                       u11341 1262  
                                     u12117 53E0                                       u12037 4068  
                                     u11261 4036                                       u11190 3874  
                                     u10550 375C                                       u10470 0AF2  
                                     u10390 08E2                                       u10630 44D6  
                                     u10710 0D66                                       u11510 15AA  
                                     u11430 1424                                       u11350 129E  
                                     u11270 4086                                       u11191 3870  
                                     u10551 3756                                       u10471 0AEE  
                                     u10391 08DE                                       u10631 44D2  
                                     u10711 0D62                                       u11511 15A6  
                                     u11431 1420                                       u11351 129A  
                                     u12127 53F6                                       u12047 40AE  
                                     u11271 4082                                       u10640 57E0  
                                     u10560 375E                                       u10480 0B0A  
                                     u10800 1054                                       u10720 0DA8  
                                     u11520 167C                                       u11440 1442  
                                     u11360 12F4                                       u11280 1194  
                                     u11600 4A64                                       _T1CON 000FCD  
                                     u10641 57DC                                       u10481 0B06  
                                     u10801 1050                                       u10721 0DA4  
                                     u11521 1678                                       u11441 143E  
                                     u11361 12F0                                       u11281 1190  
                                     u12137 540C                                       u12057 5740  
                                     u11601 4A60                                       u10570 3774  
                                     u10490 0B68                                       u10810 10F0  
                                     u10730 0DFE                                       u10650 0BF0  
                                     u11530 16B6                                       u11450 1476  
                                     u11370 130E                                       u11290 11AC  
                                     u11610 4AA0                                       u10571 3770  
                                     u10491 0B62                                       u10811 10EC  
                                     u10731 0DFA                                       u10651 0BEC  
                                     u11531 16B2                                       u11451 1472  
                                     u11371 130A                                       u11291 11A8  
                                     u12147 5762                                       u12067 3DBA  
                                     u11611 4A9C                                       u10820 505E  
                                     u10580 3786                                       u10740 0E70  
                                     u10660 0C38                                       u11540 16F0  
                                     u11460 1494                                       u11380 1336  
                                     u10900 2514                                       u11620 4BFE  
                                     u11700 1C84                                       u10581 3782  
                                     u10741 0E6C                                       u10661 0C34  
                                     u11541 16EC                                       u11461 1490  
                                     u11381 1332                                       u12157 57C0  
                                     u12077 5398                                       u10901 2510  
                                     u11621 4BFA                                       u11701 1C80  
                                     u10830 5086                                       u10590 444E  
                                     u10750 0E94                                       u10670 0C72  
                                     u11470 1520                                       u11390 135C  
                                     u10910 261A                                       u11630 4C1C  
                                     u11550 48D2                                       u11710 1D26  
                                     u10591 444A                                       u10751 0E90  
                                     u10671 0C6E                                       u11471 151C  
                                     u11391 1358                                       u12167 57A4  
                                     u12087 53AE                                       u10911 2616  
                                     u11631 4C18                                       u11551 48CE  
                                     u11711 1D22                                       u10840 5096  
                                     u10760 0F26                                       u10680 0D1C  
                                     u11480 1546                                       u10920 26B8  
                                     u11640 4C5A                                       u11560 48F4  
                                     u11800 1EC2                                       u11720 1DB0  
                                     u10841 5092                                       u12177 5464  
                                     u10761 0F22                                       u10681 0D16  
                                     u11481 1542                                       u12097 53C4  
                                     u10921 26B4                                       u11641 4C56  
                                     u11561 48F0                                       u11801 1EBE  
                                     u11721 1DAC                                       u10850 5490  
                                     u10770 0FD4                                       u10690 0D1E  
                                     u11490 1576                                       u10930 2778  
                                     u11570 491E                                       u11810 1ED2  
                                     u11730 1DC0                                       u11650 1BD8  
                                     u10827 5054                                       u10851 548C  
                                     u10771 0FD0                                       u11491 1572  
                                     u11571 491A                                       u11811 1ECE  
                                     u11731 1DBC                                       u11651 1BD4  
                                     u10780 103C                                       u10940 2794  
                                     u10860 2458                                       u11580 4A18  
                                     u11820 1F3C                                       u11740 1DD2  
                                     u11660 1C04                                       u10837 507C  
                                     u10781 1036                                       u10941 2790  
                                     u11581 4A14                                       u11821 1F38  
                                     u11741 1DCE                                       u11661 1C00  
                                     u10790 103E                                       u10950 4F06  
                                     u10870 2482                                       u11590 4A3A  
                                     u11830 1F4E                                       u11750 1E28  
                                     u11670 1C16                                       u10951 4F02  
                                     u10935 276E                                       u10871 247E  
                                     u11591 4A36                                       u11831 1F4A  
                                     u11751 1E24                                       u11671 1C12  
                                     u10960 4D72                                       u10880 24B6  
                                     u11760 1E38                                       u11680 1C2C  
                                     _LATB4 007C54                                       u10961 4D6E  
                                     u10865 244E                                       u11761 1E34  
                                     u11681 1C28                                       _LATB5 007C55  
                                     u10970 4D90                                       u10890 24D2  
                                     u11770 1E4A                                       u11690 1C6E  
                                     _LATD2 007C62                                       _LATB6 007C56  
                                     u10971 4D8C                                       u10891 24CE  
                                     u11771 1E46                                       u11691 1C6A  
                                     _LATD3 007C63                                       _LATB7 007C57  
                                     u10980 4DAC                                       u11780 1E6A  
                                     u10981 4DA8                                       u10885 24AC  
                                     u11781 1E66                                       u10990 3DD2  
                                     u11790 1E7A                                       u10991 3DCE  
                                     u11791 1E76                                       u11960 4BA2  
                                     u11961 4B9E                                       u11970 4BB2  
                                     u11971 4BAE                                       u11987 1F18  
                                     u11997 1FC0                             __end_of___lwdiv 4DCC  
                                     i2l321 5162                                       i2l326 51A4  
                                     i2l318 5154                                       i2l282 51EE  
                                     i2l284 51F6                                main@iniciado 01E8  
                           ___awdiv@counter 000A                                       _RCREG 000FAE  
                              vfpfcnvrt@fmt 00C3                  ??_recorrerCaminoEncontrado 0054  
                                     _TMR1H 000FCF                                       _TMR1L 000FCE  
                                     _SPBRG 000FAF            decidirDireccion@posicionInvCruce 01D6  
                             __CFG_USBDIV$1 000000                                       _TXREG 000FAD  
                             __CFG_PWRT$OFF 000000                               __CFG_WRT0$OFF 000000  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                       ___lmul@multiplicand 000A                               __CFG_WRT3$OFF 000000  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                          _combinarArreglos 4F78                              __CFG_EBTR3$OFF 000000  
                 hayCruce@investigandoCruce 0042                               __CFG_WRTB$OFF 000000  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                            __CFG_EBTRB$OFF 000000                          __size_of_UART_init 0070  
                                     _flags 0055                                       _boton 0008  
                                     _fputc 44FA                                       _fputs 54EC  
                           __end_of_isdigit 5658                                       _pausa 01E9  
                                     _mover 4AA2                                       _mouse 0057  
                               ?_UART_write 0001                                       atoi@n 001A  
                                     pad@fp 0016                                       atoi@s 000D  
                                     _width 0132                                       ctoa@c 0023  
                                     _putch 5800                                       _toint 7DC9  
                                     ctoa@w 0024                                       dtoa@d 0023  
                                     dtoa@i 0043                                       dtoa@n 003B  
                                     dtoa@p 0035                                       dtoa@s 0039  
                                     dtoa@w 0037                           ??_regresarAlCruce 0054  
                           __end_of_isspace 529E                             __end_of_isupper 55E8  
                                     tablat 000FF5                             __end_of_pwmDuty 3468  
                                     ttemp5 005B                                       ttemp6 005E  
                                     ttemp7 0062                                       status 000FD8  
                                     wtemp8 005B                             __end_of_sprintf 524C  
                            ?___fpclassifyf 0006                             __end_of_tolower 503A  
                           __end_of_strncmp 44FA                              __CFG_ICPRT$OFF 000000  
                            ??_leerSensores 0050                             __initialization 4F10  
                          ??_dameLecturaAdc 0008                                __end_of_atoi 37AC  
                              __end_of_ctoa 514E                                __end_of_main 4BD2  
                              __end_of_dtoa 2E44                             ??_configurarAdc 0006  
                       dameDistancia@conteo 0026                      dameDistancia@distancia 0022  
          limpiarMovimientos@numMovimientos 0008                                      ??_atoi 000F  
                                    ??_ctoa 0024                                      ??_main 0055  
                                    ??_dtoa 002B                 combinarArreglos@movimientos 0006  
       comportamientoBasico@caminosRecorrer 01C3                               __activetblptr 000002  
              caminoCorrecto@numMovimientos 0016                                      PID@dif 0096  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                                    ?_boton 0001                                      _CCP1M2 007DEA  
                                    _CCP1M3 007DEB                                      _CCP2M2 007DD2  
                                    _CCP2M3 007DD3                                      ?_fputc 0006  
                                    ?_fputs 000F                                      _ADRESH 000FC4  
                                    _ADRESL 000FC3                                      _CCPR1L 000FBE  
                                    _CCPR2L 000FBB                            ___awdiv@dividend 0006  
                                    ?_mover 0001                                      ?_putch 0001  
                                    _INT0IF 007F91                __end_of_regresarPuntoPartida 4AA2  
                                    i2l7371 5182                                      i2l7365 5150  
                                    i2l7367 5170                                      i2l7571 51BC  
                                    i2l7581 51F4                                      i2l7573 51CE  
                                    i2l7575 51D2                                      i2l7567 51A8  
                                    i2l7577 51D4                                      i2l7569 51B6  
                                    i2l7579 51F0                     _mostrarDireccionElegida 4C5C  
                                    _TMR1IF 007CF0                                      _TMR1ON 007E68  
                                    _TMR2ON 007E52                                      _TRISB0 007C98  
                                    _TRISB1 007C99                                      _TRISB2 007C9A  
                                    _TRISC1 007CA1                                      _TRISB3 007C9B  
                                    _TRISC2 007CA2                                      _TRISB4 007C9C  
                                    _TRISB5 007C9D                                      _TRISB6 007C9E  
                                    _TRISD3 007CAB                                      _TRISB7 007C9F  
                                    _TRISC6 007CA6                                      _TRISC7 007CA7  
                          __end_of___xxtofl 361C                            __end_of_hayCruce 393C  
                            __CFG_XINST$OFF 000000                    __end_of_seLlegoAlDestino 56BC  
        comportamientoBasico@numMovimientos 01C8                                vfprintf@cfmt 00E5  
                 dameDistancia@numeroSensor 0021                                      ___flge 4222  
                                    ___fleq 4952                                      ___lmul 4E3C  
                                 ??___aldiv 001A                                   ??___aodiv 0016  
                                 ??___fladd 003C                                   ??___aomod 0016  
                                    ___wmul 5708                           __end_of_UART_init 4E3C  
                                 ??___fldiv 004C                                   ??___awdiv 000A  
                                 ??___flneg 000A          comportamientoBasico@espejearCarroY 0139  
                                 ??___awmod 000A                                   ??___flmul 0023  
                                 ??___flsub 004C                                   ??___fltol 0076  
                                    _efgtoa 0012                                   ??___lwdiv 000A  
                moverCarrito@espejearCarroY 008E                                      _buffer 0191  
                       _forzarGiroIzquierda 5772                                      _floorf 3096  
                       __size_of_UART_write 0016                                ?_UART_printf 0007  
                                    clear_0 4F38                                      clear_1 4F4A  
                                    clear_2 4F56                            ___awdiv@quotient 000C  
                           ___awmod@divisor 0008                             ___awmod@counter 000A  
                                    pad@buf 0018                                      ctoa@fp 0021  
                                    _roundf 2418                                      dtoa@fp 0021  
                                    _strcpy 5098                 ??_visualizarPasosRealizados 00FD  
                                    _strlen 5658                   recorrerCaminoEncontrado@i 009E  
                         _oldSensorEnfrente 0118                                      fputc@c 0006  
                                    fputs@c 0013                                      fputs@i 0014  
                                    fputs@s 000F                                   ??_isdigit 0008  
                     _SENSOR_PRIORIDAD_BAJA 01EA                       _SENSOR_PRIORIDAD_ALTA 01EC  
                           ___fpclassifyf@e 000E     mostrarDireccionElegida@direccionElegida 000B  
                           ___fpclassifyf@u 0010                             ___fpclassifyf@x 0006  
                              __mediumconst 7DC8                                   ??_isspace 0008  
                   ?_forzarEspejeoIzquierda 0001                                      tblptrh 000FF7  
                                 ??_isupper 0008                                      tblptrl 000FF6  
                                    tblptru 000FF8                      __size_of_forzarEspejeo 0040  
                                 ??_pwmDuty 007F                                      putch@c 0001  
                          __end_of_vfprintf 4F10                            _posicionDestinoX 013E  
                          _posicionDestinoY 013D                                   ??_sprintf 0054  
                                 ??_tolower 000E             regresarPuntoPartida@movimientos 009A  
                                 ??_strncmp 000C                        ?_forzarGiroIzquierda 0001  
                         _forzarAvanceRecto 572E                      __size_of_forzarReversa 0022  
                                ___flge@ff1 0034                           _velocidadEstandar 56BC  
                                ___flge@ff2 0038                             ??___fpclassifyf 000A  
                              ___xxtofl@arg 0017                                ___xxtofl@exp 0016  
                              ___xxtofl@val 000D                                  ___fleq@ff1 0006  
                                ___fleq@ff2 000A                                  __accesstop 0060  
                   __end_of__initialization 4F6A                          ?_forzarAvanceRecto 0001  
                           __CFG_PBADEN$OFF 000000                                  ___flneg@f1 0006  
                           __CFG_FOSC$XT_XT 000000                          ?_velocidadEstandar 0001  
   visualizarPasosRealizados@numMovimientos 00FB                  __end_of_finalizarRecorrido 57F2  
                             ___rparam_used 000001               __size_of_forzarEspejeoDerecha 0048  
                                ___fltol@f1 0072                         ??_forzarAvanceRecto 0006  
                    __size_of_dameDistancia 0162                              __pcstackCOMRAM 0001  
                       ??_velocidadEstandar 0054                                __pidataBANK1 57FC  
                           _sensorIzquierda 0128         combinarArreglos@numMovimientosFinal 000C  
                             __end_of_boton 51FA                               __end_of_fputc 45C4  
                             __end_of_fputs 5530                               __end_of_mover 4B3C  
                             __end_of_putch 5802                               __end_of_toint 7DCD  
                         _forzarGiroDerecha 5792            __end_of_recorrerCaminoEncontrado 4C5C  
                        ?_forzarGiroDerecha 0001              __end_of_forzarEspejeoIzquierda 53D2  
 comportamientoBasico@numMovimientosTotales 01C6          regresarPuntoPartida@numMovimientos 009C  
 comportamientoBasico@movimientosRealizados 0200                        __end_of_leerSensores 3C40  
                        __size_of_configPwm 0050                   __end_of_forzarAvanceRecto 5750  
                                 PID@difAnt 0136                   __end_of_velocidadEstandar 56E2  
                                   ??_boton 0004                   ??_mostrarDireccionElegida 0009  
                     ??_forzarGiroIzquierda 0006                                     ??_fputc 000A  
                                   ??_fputs 0013                         ??_forzarGiroDerecha 0006  
                                   ??_mover 0008                                     ??_putch 0006  
                                __pbssBANK0 00FF                                  __pbssBANK1 0100  
                                __pbssBANK2 0200                moverCarrito@avanceRectoLargo 008A  
                             _paredEnfrente 013C               __size_of_comportamientoBasico 042E  
                 _visualizarPasosRealizados 47FA                            ??_caminoCorrecto 001B  
                         ?_decidirDireccion 01D2                       PID@velocidadIzquierda 008E  
                                _efgtoa$940 008D                                  _efgtoa$941 008F  
                                _efgtoa$950 0095                                  _efgtoa$951 0097  
                                _efgtoa$945 0091                                  _efgtoa$949 0093  
                  __end_of_combinarArreglos 4FDA                               _forzarEspejeo 5530  
                        ??_decidirDireccion 00FB                                     ?___flge 0034  
                                   ?___fleq 0006                                     ?___lmul 0006  
                                   ?___wmul 0006                   __end_of_forzarGiroDerecha 57B2  
                                   ?_efgtoa 007D                               _forzarReversa 5750  
                                   _CCP1CON 000FBD                                     _CCP2CON 000FBA  
                                   ?_floorf 0050               limpiarMovimientos@movimientos 0006  
                            ___lmul@product 000E      decidirDireccion@cambioOrientacionCarro 01DC  
                                _antiRebote 514E                        _regresarPuntoPartida 49FC  
                                   ?_roundf 004C                                     ?_strcpy 0006  
                                   ?_strlen 0006                                     _T2CKPS0 007E50  
                                   _T2CKPS1 007E51                             _regresarAlCruce 48A6  
                                   _PID$761 0090                                     _PID$763 0094  
                                   i2l11251 5196                                   ?___xxtofl 000D  
                __end_of_limpiarMovimientos 533E                               _dameDistancia 3DA4  
                        __size_of_vfpfcnvrt 05A8                                   ?_hayCruce 0040  
                              ??_UART_write 0006                               ?_moverCarrito 0088  
                           __CFG_VREGEN$OFF 000000   comportamientoBasico@contCaminosRecorridos 01CD  
                                   __Hparam 0000                              ?_forzarEspejeo 0001  
                                   __Lparam 0000                           __end_of_configPwm 52EE  
           __end_of_mostrarDireccionElegida 4CDE                                     ___aldiv 3F06  
                           __size_of___flge 0104                              ?_forzarReversa 0001  
                           __size_of___fleq 00AA                                     ___aodiv 393C  
                                   ___fladd 1700                                     ___aomod 3C40  
                                   ___fldiv 27CA                                     ___awdiv 45C4  
                                   ___flneg 55E8                             __size_of___lmul 006A  
                                   ___awmod 474A                                     ___flmul 1FEE  
                                   ___flsub 541A                                     ___fltol 411A  
                           __size_of___wmul 0026                                     ___lwdiv 4D58  
                                 ?_vfprintf 00DF                             __size_of_efgtoa 0BBA  
       recorrerCaminoEncontrado@movimientos 009A                             __CFG_STVREN$OFF 000000  
                           __size_of_floorf 0216                                     __pcinit 4F10  
                     ?_regresarPuntoPartida 009A                                     __ramtop 0800  
                        __end_of_UART_write 57E2                       __end_of_velocidadBaja 5708  
                                   __ptext0 4B3C                                     __ptext1 47FA  
                                   __ptext2 533E                                     __ptext3 57F2  
                                   __ptext4 529E                                     __ptext5 1BC0  
                                   __ptext6 49FC                                     __ptext7 48A6  
                                   __ptext8 4BD2                                     __ptext9 4AA2  
                           __size_of_roundf 03B2                                __size_of_PID 0252  
                           __size_of_strcpy 005C                             __size_of_strlen 0036  
                      __size_of_UART_printf 005E                                __size_of_abs 0040  
                              __size_of_pad 00C2                                __size_of_map 007A  
                                   _isdigit 5620                                  ??___xxtofl 0011  
                          ___awmod@dividend 0006                              ?_dameDistancia 001B  
                          ___aldiv@dividend 0012                                     _isspace 524C  
                                   _isupper 55B0                                     efgtoa@c 0083  
                                   efgtoa@d 00A1                                     efgtoa@e 00B9  
                                   efgtoa@f 007F                                     efgtoa@g 00B5  
                                   efgtoa@h 00AB                                     efgtoa@i 00B3  
                                   efgtoa@l 00AF                                     efgtoa@m 009D  
                                   efgtoa@n 00BB                                     efgtoa@p 00A5  
                                   efgtoa@t 0099                                     efgtoa@u 00BD  
                                   efgtoa@w 00A8                  __size_of_forzarAvanceRecto 0022  
                                ??_hayCruce 0043                                     _pwmDuty 32AC  
                                   atoi@neg 0013                  __size_of_velocidadEstandar 0026  
                                   _sprintf 51FA                                     _tolower 4FDA  
                                   _strncmp 4424                              __pintcode_body 51A6  
                      end_of_initialization 4F6A                              ??_moverCarrito 008C  
                                   floorf@e 0077                                     floorf@m 0073  
                                   floorf@u 0079                                     floorf@x 0050  
          decidirDireccion@direccionElegida 0054                                     fputc@fp 0008  
                             __Lmediumconst 7DC8                                     int_func 51A6  
                                   fputs@fp 0011           __size_of_recorrerCaminoEncontrado 008A  
                                 i2u1218_47 51DE                                   i2u1219_47 5176  
                    _SENSOR_PRIORIDAD_MEDIA 01EB                   ?_recorrerCaminoEncontrado 009A  
                         ?_seLlegoAlDestino 0001                           __end_of_vfpfcnvrt 1174  
                                efgtoa@mode 00AA                                  efgtoa@sign 00A3  
                                 _RCSTAbits 000FAB                            ___aldiv@quotient 001C  
          decidirDireccion@avanceRectoLargo 01E2                                     postdec1 000FE5  
                                   postdec2 000FDD                     __end_of_regresarAlCruce 4952  
                                   postinc0 000FEE                                     postinc1 000FE6  
                                   postinc2 000FDE                     __size_of_forzarParoAuto 001A  
                                   roundf@e 0064                                     roundf@u 006A  
                                   roundf@x 004C                                     roundf@y 006E  
                __size_of_forzarGiroDerecha 0020                          ??_seLlegoAlDestino 000B  
                                ??_vfprintf 0054                       __end_of_configurarAdc 57FC  
                                   strcpy@d 000E                                     strlen@a 0008  
                                   strcpy@s 000C                                     strlen@s 0006  
                               ?_antiRebote 0001                                   _PORTBbits 000F81  
                                 _UART_init 4DCC                       __size_of_leerSensores 017C  
                               ___fladd@grs 0043                                 pwmDuty@duty 0084  
    recorrerCaminoEncontrado@numMovimientos 009C                               ___xxtofl@sign 0015  
                                 _TRISDbits 000F95                                 ___fldiv@grs 0067  
                        _oldSensorIzquierda 011C                                 ___fldiv@rem 0060  
      comportamientoBasico@posicionInvCruce 01CE                                  map@out_max 0030  
                                map@out_min 002C                                 ___flmul@grs 0029  
                            _UART_init$1842 0028                                   _TXSTAbits 000FAC  
                           ??_forzarEspejeo 0055                             ??_forzarReversa 0006  
             regresarAlCruce@numMovimientos 009C                                _leerSensores 3AC4  
        __size_of_visualizarPasosRealizados 00AC                              __end_of___flge 4326  
                            __end_of___fleq 49FC                      ??_regresarPuntoPartida 0054  
                            __end_of___lmul 4EA6                                 vfpfcnvrt@ap 00C5  
                               vfpfcnvrt@ct 00DB                                 vfpfcnvrt@fp 00C1  
                               vfpfcnvrt@ll 00CB                              __end_of___wmul 572E  
                     regresarPuntoPartida@i 009E                              __end_of_efgtoa 0BCC  
                        _finalizarRecorrido 57E2                              __end_of_floorf 32AC  
                                ?_UART_init 0020                                  floorf@F524 0104  
              __end_of_forzarEspejeoDerecha 541A                             ??_dameDistancia 001F  
     comportamientoBasico@investigandoCruce 01CF                              __end_of_roundf 27CA  
                   __size_of_dameLecturaAdc 0046                              __end_of_strcpy 50F4  
                            __end_of_strlen 568E                         start_initialization 4F10  
                       PID@velocidadDerecha 0092                                 __end_of_PID 3096  
                       ?_finalizarRecorrido 0001                                 __end_of_abs 55B0  
                               __end_of_pad 474A                                 __end_of_map 4D58  
                          regresarAlCruce@i 009E                         __size_of_antiRebote 0058  
                     __end_of___fpclassifyf 4424                         pwmDuty@cicloTrabajo 007C  
                      ??_finalizarRecorrido 0055                                 vfprintf@fmt 00E1  
                                  ??___flge 003C                                    ??___fleq 000E  
                         ?_combinarArreglos 0006                                    ??___lmul 000E  
                                  ??___wmul 000A                            ?_regresarAlCruce 009A  
                          _oldSensorDerecha 0120                  comportamientoBasico@mapear 01D1  
                            _sensorEnfrente 0124                                    ??_efgtoa 0084  
                               __pdataBANK1 01E9                          ??_combinarArreglos 000E  
                                  ??_floorf 006D                            __CFG_LPT1OSC$OFF 000000  
              __end_of_comportamientoBasico 1FEE           __end_of_visualizarPasosRealizados 48A6  
                      __end_of_moverCarrito 411A                                    ??_roundf 0050  
                                  ??_strcpy 000A                                    ??_strlen 0008  
                                 ___fladd@a 0038                                   ___fladd@b 0034  
                 __size_of_decidirDireccion 058C                 __end_of_forzarGiroIzquierda 5792  
                                 ___fldiv@a 0048                                   ___fldiv@b 0044  
                               __pbssBIGRAM 02C8                                _llegoDestino 00FF  
                                 ___flmul@a 001F                                   ___flmul@b 001B  
                               __pbssCOMRAM 0055                                   ___flsub@a 0048  
                                 ___flsub@b 0044            comportamientoBasico@caminoActual 01CC  
                             __pcstackBANK0 0060                               __pcstackBANK1 01D2  
                          ___aodiv@dividend 0006                           __size_of___xxtofl 01B4  
                   hayCruce@caminosRecorrer 0040                           __size_of_hayCruce 0190  
           decidirDireccion@caminosRecorrer 01D2                                _paredDerecha 013B  
                        _limpiarMovimientos 52EE                           UART_printf@cadena 0007  
                                  PID@error 0098                                   _atoi$1444 0015  
                                 _atoi$1445 0019                                   _atoi$1446 0017  
                 _DISTANCIA_PRIORIDAD_MEDIA 0110                   caminoCorrecto@caminoFinal 0014  
                          ___lwdiv@dividend 0006                                   __pintcode 0008  
                       ?_limpiarMovimientos 0006                               __pmediumconst 7DC8  
                            _forzarParoAuto 57B2                                    ?___aldiv 0012  
                                  ?___aodiv 0006                                    ?___fladd 0034  
                                  ?___aomod 0006                                    ?___fldiv 0044  
                                  ?___awdiv 0006                            ___aodiv@quotient 0018  
                                  ?___flneg 0006                                    ?___awmod 0006  
                                  ?___flmul 001B                                    ?___flsub 0044  
                                  ?___fltol 0072                                    ?___lwdiv 0006  
                                 _configPwm 529E                              _paredIzquierda 013A  
                               ??_UART_init 0024                           __size_of_vfprintf 006A  
                                  ?_isdigit 0006                    ?_mostrarDireccionElegida 0001  
                                  ?_isspace 0006                                    ?_isupper 0006  
comportamientoBasico@cambioOrientacionCarro 01CB           caminoCorrecto@numMovimientosFinal 0018  
                                  ?_pwmDuty 007C                        ??_limpiarMovimientos 000A  
                          ___lwdiv@quotient 000B                              __size_of_boton 51F2  
                                  ?_sprintf 00E7                                    ?_tolower 000C  
                            __size_of_fputc 00CA                              __size_of_fputs 0044  
                                  _PID$1843 008A                                    ?_strncmp 0006  
                            __size_of_mover 009A       decidirDireccion@contCaminosRecorridos 01D8  
                            __size_of_putch 0002                             ___aldiv@divisor 0016  
                         combinarArreglos@i 0010                             ___aldiv@counter 001A  
                            ___wmul@product 000A           decidirDireccion@investigandoCruce 01D4  
              seLlegoAlDestino@llegoDestino 000B                        _forzarEspejeoDerecha 53D2  
                    __end_of_forzarParoAuto 57CC                                    i2u765_40 5162  
                                  i2u765_41 515E                                    i2u766_40 5170  
                                  i2u766_41 516C                                    i2u786_40 51B6  
                                  i2u786_41 51B2                                    i2u787_40 51CE  
                                  i2u787_41 51CA                            __CFG_WDTPS$32768 000000  
                  ??_forzarEspejeoIzquierda 0054                               ??_UART_printf 0009  
                              ??_antiRebote 0001                                   _vfpfcnvrt 0BCC  
                                ?_configPwm 0001                                   map@in_max 0028  
                                 map@in_min 0024                      decidirDireccion@mapear 01DE  
                   __size_of_caminoCorrecto 0046                                  _ADCON0bits 000FC2  
                         ___wmul@multiplier 0006                            configPwm@channel 0008  
                            _dameLecturaAdc 5460                              UART_write@dato 0006  
                 __size_of_seLlegoAlDestino 002E                                _isspace$1475 000C  
                                vfpfcnvrt@c 00DE                                  vfpfcnvrt@f 00D7  
                         ___lmul@multiplier 0006                                 _INTCON2bits 000FF1  
                                 copy_data0 4F24                        _comportamientoBasico 1BC0  
                     ?_forzarEspejeoDerecha 0001                      __size_of_velocidadBaja 0026  
                        __end_of_antiRebote 51A6                                  roundf@F525 0100  
                                  __Hrparam 0000                             ?_forzarParoAuto 0001  
                             UART_init@BAUD 0020                               _sensorDerecha 012C  
                                vfprintf@ap 00E3                                    __Lrparam 0000  
                                vfprintf@fp 00DF                       __size_of_moverCarrito 0108  
                            _posicionCarroX 0140                              _posicionCarroY 013F  
                          __size_of___aldiv 010C                            __size_of___aodiv 0188  
                          __size_of___fladd 04C0                            __size_of___aomod 0164  
                          __size_of___fldiv 039C                            __size_of___awdiv 00C4  
                          __size_of___flneg 0038                            __size_of___awmod 00B0  
                          __size_of___flmul 042A                            __size_of___flsub 0046  
                          __size_of___fltol 0108                                  ?_vfpfcnvrt 00C1  
                          __size_of___lwdiv 0074                      __end_of_dameLecturaAdc 54A6  
                           ___aodiv@divisor 000E                             ___aodiv@counter 0016  
                        ___fpclassifyf@F463 0108                         hayCruce@contCaminos 0043  
               combinarArreglos@caminoFinal 0008                            _decidirDireccion 1174  
                                sprintf@fmt 00E9                                    ___xxtofl 3468  
                       __end_of_UART_printf 5098                            __size_of_isdigit 0038  
                                  _dtoa$917 0033                             ___lwdiv@divisor 0008  
                                  _hayCruce 37AC                            __size_of_isspace 0052  
                           ___lwdiv@counter 000A                                    __ptext10 2E44  
                                  __ptext11 2418                                    __ptext20 5772  
                                  __ptext12 4012                                    __ptext21 53D2  
                                  __ptext13 572E                                    __ptext30 4E3C  
                                  __ptext22 56BC                                    __ptext14 3AC4  
                                  __ptext31 3468                                    __ptext23 5750  
                                  __ptext15 3DA4                                    __ptext40 3096  
                                  __ptext32 51FA                                    __ptext24 57B2  
                                  __ptext16 4D58                                    __ptext41 4326  
                                  __ptext33 4EA6                                    __ptext25 5792  
                                  __ptext17 57E2                                    __ptext50 45C4  
                                  __ptext42 411A                                    __ptext34 0BCC  
                                  __ptext26 1174                                    __ptext18 5530  
                                  __ptext51 2B66                                    __ptext43 541A  
                                  __ptext35 4424                                    __ptext27 56E2  
                                  __ptext19 538A                                    __ptext60 5800  
                                  __ptext52 5570                                    __ptext44 1700  
                                  __ptext36 0012                                    __ptext28 32AC  
                                  __ptext61 361C                                    __ptext53 3C40  
                                  __ptext45 55E8                                    __ptext37 4FDA  
                                  __ptext29 4CDE                                    __ptext70 37AC  
                                  __ptext62 524C                                    __ptext54 393C  
                                  __ptext46 1FEE                                    __ptext38 55B0  
                                  __ptext71 4222                                    __ptext63 5620  
                                  __ptext55 50F4                                    __ptext47 4952  
                                  __ptext39 5098                                    __ptext72 54A6  
                                  __ptext64 5708                                    __ptext56 4688  
                                  __ptext48 27CA                                    __ptext73 52EE  
                                  __ptext65 568E                                    __ptext57 5658  
                                  __ptext49 474A                                    __ptext74 4F78  
                                  __ptext66 5460                                    __ptext58 54EC  
                                  __ptext75 4DCC                                    __ptext67 4C5C  
                                  __ptext59 44FA                                    __ptext76 3F06  
                                  __ptext68 503A                                    __ptext69 57CC  
                                  __ptext78 514E                            __size_of_isupper 0038  
                          __size_of_pwmDuty 01BC     __end_of_inicializarComportamientoBasico 538A  
  __size_of_inicializarComportamientoBasico 004C           ??_inicializarComportamientoBasico 0054  
          ?_inicializarComportamientoBasico 0001             _inicializarComportamientoBasico 533E  
                          __size_of_sprintf 0052                            __size_of_tolower 0060  
                             antiRebote@pin 0003                    _recorrerCaminoEncontrado 4BD2  
                                strcpy@dest 0006                            __size_of_strncmp 00D6  
            combinarArreglos@numMovimientos 000A                       ?_comportamientoBasico 0001  
        comportamientoBasico@cruceDetectado 01D0                                _moverCarrito 4012  
                    __size_of_configurarAdc 000A                               __size_of_atoi 0190  
                             __size_of_ctoa 005A                               __size_of_main 0096  
                             __size_of_dtoa 02DE                       __end_of_forzarEspejeo 5570  
                                  efgtoa@fp 007D                                    efgtoa@ne 009F  
                                  efgtoa@pp 009B                                    efgtoa@ou 0089  
      comportamientoBasico@direccionElegida 00FE                       __end_of_forzarReversa 5772  
                                  int$flags 005A                     dameLecturaAdc@canalLeer 000A  
                                  _vfprintf 4EA6             __size_of_forzarEspejeoIzquierda 0048  
                               ??_configPwm 0006                             ?_dameLecturaAdc 0006  
             __size_of_regresarPuntoPartida 00A6                            ___aomod@dividend 0006  
                     __CFG_CPUDIV$OSC1_PLL2 000000                               _velocidadBaja 56E2  
      comportamientoBasico@avanceRectoLargo 01CA                decidirDireccion@caminoActual 01DA  
            decidirDireccion@cruceDetectado 01E0                                  _INTCONbits 000FF2  
                     __end_of_dameDistancia 3F06                   __size_of_combinarArreglos 0062  
                       limpiarMovimientos@i 000C                                    isdigit@c 0006  
                                  intlevel2 0000                                   sprintf@ap 00F3  
                caminoCorrecto@caminoActual 001A                      ??_forzarEspejeoDerecha 0054  
                                  isspace@c 0006                                   strcpy@src 0008  
                                  isupper@c 0006                                   strncmp@_l 0006  
                                 strncmp@_r 0008                 __size_of_finalizarRecorrido 0010  
                               efgtoa@nmode 00A7                             ___aomod@divisor 000E  
                               ??_vfpfcnvrt 00C7                             ___aomod@counter 0016  
                             _vfpfcnvrt$971 00D5                               _vfpfcnvrt$965 00D3  
                               _UART_printf 503A                               _configurarAdc 57F2  
                            _caminoCorrecto 54A6                              ?_velocidadBaja 0001  
                ?_visualizarPasosRealizados 00FB                              pwmDuty@channel 007E  
                                  sprintf@f 00F5                                    tolower@c 000C  
                                  sprintf@s 00E7                      __size_of___fpclassifyf 00FE  
                  __size_of_regresarAlCruce 00AC                            _seLlegoAlDestino 568E  
                                  strncmp@l 000D                                    strncmp@n 000A  
                                  strncmp@r 000F          comportamientoBasico@carroEspejeado 0059  
                              ___aldiv@sign 001B                  moverCarrito@carroEspejeado 0088  
                             ___fladd@signs 0040                      ??_comportamientoBasico 01E4  
                                _UART_write 57CC                      _forzarEspejeoIzquierda 538A  
              __size_of_forzarGiroIzquierda 0020                                ___aodiv@sign 0017  
                              ___fladd@aexp 0041                                ___fladd@bexp 0042  
          __size_of_mostrarDireccionElegida 0082                  regresarAlCruce@movimientos 009A  
                              ___aomod@sign 0017                   caminoCorrecto@movimientos 0012  
                               _roundf$1844 0066                                 _roundf$1845 0060  
