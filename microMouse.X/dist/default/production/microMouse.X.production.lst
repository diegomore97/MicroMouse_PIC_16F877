

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Sep 27 21:01:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    94                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    95                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    96  0000                     
    97                           ; Version 2.10
    98                           ; Generated 31/07/2019 GMT
    99                           ; 
   100                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18F4550 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     
   132                           	psect	idataBANK1
   133  005862                     __pidataBANK1:
   134                           	opt callstack 0
   135                           
   136                           ;initializer for _ida
   137  005862  01                 	db	1
   138                           
   139                           ;initializer for _pausa
   140  005863  01                 	db	1
   141                           
   142                           ;initializer for _SENSOR_PRIORIDAD_BAJA
   143  005864  03                 	db	3
   144                           
   145                           ;initializer for _SENSOR_PRIORIDAD_MEDIA
   146  005865  02                 	db	2
   147                           
   148                           ;initializer for _SENSOR_PRIORIDAD_ALTA
   149  005866  01                 	db	1
   150                           
   151                           	psect	mediumconst
   152  007D76                     __pmediumconst:
   153                           	opt callstack 0
   154  007D76  00                 	db	0
   155  007D77  0000               	dw	0
   156  007D79  4B00               	dw	19200
   157  007D7B                     __end_of_toint:
   158                           	opt callstack 0
   159  0000                     _T1CON	set	4045
   160  0000                     _TRISDbits	set	3989
   161  0000                     _INTCON2bits	set	4081
   162  0000                     _INTCONbits	set	4082
   163  0000                     _ADRESL	set	4035
   164  0000                     _ADRESH	set	4036
   165  0000                     _ADCON0bits	set	4034
   166  0000                     _ADCON2	set	4032
   167  0000                     _ADCON1	set	4033
   168  0000                     _TXREG	set	4013
   169  0000                     _RCREG	set	4014
   170  0000                     _RCSTAbits	set	4011
   171  0000                     _TXSTAbits	set	4012
   172  0000                     _SPBRG	set	4015
   173  0000                     _PORTBbits	set	3969
   174  0000                     _TMR1L	set	4046
   175  0000                     _TMR1H	set	4047
   176  0000                     _PR2	set	4043
   177  0000                     _CCP2CON	set	4026
   178  0000                     _CCPR2L	set	4027
   179  0000                     _CCP1CON	set	4029
   180  0000                     _CCPR1L	set	4030
   181  0000                     _TRISB0	set	31896
   182  0000                     _TRISB7	set	31903
   183  0000                     _TRISB6	set	31902
   184  0000                     _TRISB5	set	31901
   185  0000                     _TRISB4	set	31900
   186  0000                     _TRISB3	set	31899
   187  0000                     _TRISB2	set	31898
   188  0000                     _TRISB1	set	31897
   189  0000                     _TRISD3	set	31915
   190  0000                     _LATB7	set	31831
   191  0000                     _LATB6	set	31830
   192  0000                     _LATB5	set	31829
   193  0000                     _LATB4	set	31828
   194  0000                     _LATD2	set	31842
   195  0000                     _INT0IF	set	32657
   196  0000                     _RCIF	set	31989
   197  0000                     _TRISC7	set	31911
   198  0000                     _TRISC6	set	31910
   199  0000                     _TMR1IF	set	31984
   200  0000                     _TMR1ON	set	32360
   201  0000                     _LATD3	set	31843
   202  0000                     _TMR2ON	set	32338
   203  0000                     _CCP2M2	set	32210
   204  0000                     _CCP2M3	set	32211
   205  0000                     _TRISC1	set	31905
   206  0000                     _CCP1M2	set	32234
   207  0000                     _CCP1M3	set	32235
   208  0000                     _TRISC2	set	31906
   209  0000                     _T2CKPS1	set	32337
   210  0000                     _T2CKPS0	set	32336
   211  007D7B                     STR_12:
   212  007D7B  0A                 	db	10
   213  007D7C  0A                 	db	10
   214  007D7D  4F                 	db	79	;'O'
   215  007D7E  56                 	db	86	;'V'
   216  007D7F  45                 	db	69	;'E'
   217  007D80  52                 	db	82	;'R'
   218  007D81  46                 	db	70	;'F'
   219  007D82  4C                 	db	76	;'L'
   220  007D83  4F                 	db	79	;'O'
   221  007D84  57                 	db	87	;'W'
   222  007D85  20                 	db	32
   223  007D86  65                 	db	101	;'e'
   224  007D87  6E                 	db	110	;'n'
   225  007D88  20                 	db	32
   226  007D89  65                 	db	101	;'e'
   227  007D8A  6C                 	db	108	;'l'
   228  007D8B  20                 	db	32
   229  007D8C  6D                 	db	109	;'m'
   230  007D8D  61                 	db	97	;'a'
   231  007D8E  70                 	db	112	;'p'
   232  007D8F  65                 	db	101	;'e'
   233  007D90  6F                 	db	111	;'o'
   234  007D91  20                 	db	32
   235  007D92  64                 	db	100	;'d'
   236  007D93  65                 	db	101	;'e'
   237  007D94  20                 	db	32
   238  007D95  70                 	db	112	;'p'
   239  007D96  61                 	db	97	;'a'
   240  007D97  73                 	db	115	;'s'
   241  007D98  6F                 	db	111	;'o'
   242  007D99  73                 	db	115	;'s'
   243  007D9A  20                 	db	32
   244  007D9B  52                 	db	82	;'R'
   245  007D9C  65                 	db	101	;'e'
   246  007D9D  61                 	db	97	;'a'
   247  007D9E  6C                 	db	108	;'l'
   248  007D9F  69                 	db	105	;'i'
   249  007DA0  7A                 	db	122	;'z'
   250  007DA1  61                 	db	97	;'a'
   251  007DA2  64                 	db	100	;'d'
   252  007DA3  6F                 	db	111	;'o'
   253  007DA4  73                 	db	115	;'s'
   254  007DA5  20                 	db	32
   255  007DA6  70                 	db	112	;'p'
   256  007DA7  61                 	db	97	;'a'
   257  007DA8  72                 	db	114	;'r'
   258  007DA9  61                 	db	97	;'a'
   259  007DAA  20                 	db	32
   260  007DAB  63                 	db	99	;'c'
   261  007DAC  72                 	db	114	;'r'
   262  007DAD  75                 	db	117	;'u'
   263  007DAE  63                 	db	99	;'c'
   264  007DAF  65                 	db	101	;'e'
   265  007DB0  0A                 	db	10
   266  007DB1  0A                 	db	10
   267  007DB2  00                 	db	0
   268  007DB3                     STR_21:
   269  007DB3  0D                 	db	13
   270  007DB4  0A                 	db	10
   271  007DB5  45                 	db	69	;'E'
   272  007DB6  6C                 	db	108	;'l'
   273  007DB7  20                 	db	32
   274  007DB8  63                 	db	99	;'c'
   275  007DB9  61                 	db	97	;'a'
   276  007DBA  6D                 	db	109	;'m'
   277  007DBB  69                 	db	105	;'i'
   278  007DBC  6E                 	db	110	;'n'
   279  007DBD  6F                 	db	111	;'o'
   280  007DBE  20                 	db	32
   281  007DBF  49                 	db	73	;'I'
   282  007DC0  5A                 	db	90	;'Z'
   283  007DC1  51                 	db	81	;'Q'
   284  007DC2  55                 	db	85	;'U'
   285  007DC3  49                 	db	73	;'I'
   286  007DC4  45                 	db	69	;'E'
   287  007DC5  52                 	db	82	;'R'
   288  007DC6  44                 	db	68	;'D'
   289  007DC7  41                 	db	65	;'A'
   290  007DC8  20                 	db	32
   291  007DC9  73                 	db	115	;'s'
   292  007DCA  65                 	db	101	;'e'
   293  007DCB  20                 	db	32
   294  007DCC  61                 	db	97	;'a'
   295  007DCD  63                 	db	99	;'c'
   296  007DCE  65                 	db	101	;'e'
   297  007DCF  72                 	db	114	;'r'
   298  007DD0  63                 	db	99	;'c'
   299  007DD1  61                 	db	97	;'a'
   300  007DD2  20                 	db	32
   301  007DD3  6D                 	db	109	;'m'
   302  007DD4  61                 	db	97	;'a'
   303  007DD5  73                 	db	115	;'s'
   304  007DD6  20                 	db	32
   305  007DD7  61                 	db	97	;'a'
   306  007DD8  6C                 	db	108	;'l'
   307  007DD9  20                 	db	32
   308  007DDA  64                 	db	100	;'d'
   309  007DDB  65                 	db	101	;'e'
   310  007DDC  73                 	db	115	;'s'
   311  007DDD  74                 	db	116	;'t'
   312  007DDE  69                 	db	105	;'i'
   313  007DDF  6E                 	db	110	;'n'
   314  007DE0  6F                 	db	111	;'o'
   315  007DE1  0D                 	db	13
   316  007DE2  0A                 	db	10
   317  007DE3  00                 	db	0
   318  007DE4                     STR_20:
   319  007DE4  0D                 	db	13
   320  007DE5  0A                 	db	10
   321  007DE6  45                 	db	69	;'E'
   322  007DE7  6C                 	db	108	;'l'
   323  007DE8  20                 	db	32
   324  007DE9  63                 	db	99	;'c'
   325  007DEA  61                 	db	97	;'a'
   326  007DEB  6D                 	db	109	;'m'
   327  007DEC  69                 	db	105	;'i'
   328  007DED  6E                 	db	110	;'n'
   329  007DEE  6F                 	db	111	;'o'
   330  007DEF  20                 	db	32
   331  007DF0  45                 	db	69	;'E'
   332  007DF1  4E                 	db	78	;'N'
   333  007DF2  46                 	db	70	;'F'
   334  007DF3  52                 	db	82	;'R'
   335  007DF4  45                 	db	69	;'E'
   336  007DF5  4E                 	db	78	;'N'
   337  007DF6  54                 	db	84	;'T'
   338  007DF7  45                 	db	69	;'E'
   339  007DF8  20                 	db	32
   340  007DF9  73                 	db	115	;'s'
   341  007DFA  65                 	db	101	;'e'
   342  007DFB  20                 	db	32
   343  007DFC  61                 	db	97	;'a'
   344  007DFD  63                 	db	99	;'c'
   345  007DFE  65                 	db	101	;'e'
   346  007DFF  72                 	db	114	;'r'
   347  007E00  63                 	db	99	;'c'
   348  007E01  61                 	db	97	;'a'
   349  007E02  20                 	db	32
   350  007E03  6D                 	db	109	;'m'
   351  007E04  61                 	db	97	;'a'
   352  007E05  73                 	db	115	;'s'
   353  007E06  20                 	db	32
   354  007E07  61                 	db	97	;'a'
   355  007E08  6C                 	db	108	;'l'
   356  007E09  20                 	db	32
   357  007E0A  64                 	db	100	;'d'
   358  007E0B  65                 	db	101	;'e'
   359  007E0C  73                 	db	115	;'s'
   360  007E0D  74                 	db	116	;'t'
   361  007E0E  69                 	db	105	;'i'
   362  007E0F  6E                 	db	110	;'n'
   363  007E10  6F                 	db	111	;'o'
   364  007E11  0D                 	db	13
   365  007E12  0A                 	db	10
   366  007E13  00                 	db	0
   367  007E14                     STR_22:
   368  007E14  0D                 	db	13
   369  007E15  0A                 	db	10
   370  007E16  45                 	db	69	;'E'
   371  007E17  6C                 	db	108	;'l'
   372  007E18  20                 	db	32
   373  007E19  63                 	db	99	;'c'
   374  007E1A  61                 	db	97	;'a'
   375  007E1B  6D                 	db	109	;'m'
   376  007E1C  69                 	db	105	;'i'
   377  007E1D  6E                 	db	110	;'n'
   378  007E1E  6F                 	db	111	;'o'
   379  007E1F  20                 	db	32
   380  007E20  44                 	db	68	;'D'
   381  007E21  45                 	db	69	;'E'
   382  007E22  52                 	db	82	;'R'
   383  007E23  45                 	db	69	;'E'
   384  007E24  43                 	db	67	;'C'
   385  007E25  48                 	db	72	;'H'
   386  007E26  41                 	db	65	;'A'
   387  007E27  20                 	db	32
   388  007E28  73                 	db	115	;'s'
   389  007E29  65                 	db	101	;'e'
   390  007E2A  20                 	db	32
   391  007E2B  61                 	db	97	;'a'
   392  007E2C  63                 	db	99	;'c'
   393  007E2D  65                 	db	101	;'e'
   394  007E2E  72                 	db	114	;'r'
   395  007E2F  63                 	db	99	;'c'
   396  007E30  61                 	db	97	;'a'
   397  007E31  20                 	db	32
   398  007E32  6D                 	db	109	;'m'
   399  007E33  61                 	db	97	;'a'
   400  007E34  73                 	db	115	;'s'
   401  007E35  20                 	db	32
   402  007E36  61                 	db	97	;'a'
   403  007E37  6C                 	db	108	;'l'
   404  007E38  20                 	db	32
   405  007E39  64                 	db	100	;'d'
   406  007E3A  65                 	db	101	;'e'
   407  007E3B  73                 	db	115	;'s'
   408  007E3C  74                 	db	116	;'t'
   409  007E3D  69                 	db	105	;'i'
   410  007E3E  6E                 	db	110	;'n'
   411  007E3F  6F                 	db	111	;'o'
   412  007E40  0D                 	db	13
   413  007E41  0A                 	db	10
   414  007E42  00                 	db	0
   415  007E43  0D                 	db	13
   416  007E44  4C                 	db	76	;'L'
   417  007E45  65                 	db	101	;'e'
   418  007E46  63                 	db	99	;'c'
   419  007E47  74                 	db	116	;'t'
   420  007E48  75                 	db	117	;'u'
   421  007E49  72                 	db	114	;'r'
   422  007E4A  61                 	db	97	;'a'
   423  007E4B  20                 	db	32
   424  007E4C  64                 	db	100	;'d'
   425  007E4D  65                 	db	101	;'e'
   426  007E4E  20                 	db	32
   427  007E4F  73                 	db	115	;'s'
   428  007E50  65                 	db	101	;'e'
   429  007E51  6E                 	db	110	;'n'
   430  007E52  73                 	db	115	;'s'
   431  007E53  6F                 	db	111	;'o'
   432  007E54  72                 	db	114	;'r'
   433  007E55  20                 	db	32
   434  007E56  4F                 	db	79	;'O'
   435  007E57  70                 	db	112	;'p'
   436  007E58  74                 	db	116	;'t'
   437  007E59  69                 	db	105	;'i'
   438  007E5A  63                 	db	99	;'c'
   439  007E5B  6F                 	db	111	;'o'
   440  007E5C  20                 	db	32
   441  007E5D  3D                 	db	61	;'='
   442  007E5E  20                 	db	32
   443  007E5F  25                 	db	37
   444  007E60  64                 	db	100	;'d'
   445  007E61  0D                 	db	13
   446  007E62  0A                 	db	10
   447  007E63  0A                 	db	10
   448  007E64  00                 	db	0
   449  007E65                     STR_13:
   450  007E65  0D                 	db	13
   451  007E66  53                 	db	83	;'S'
   452  007E67  65                 	db	101	;'e'
   453  007E68  20                 	db	32
   454  007E69  72                 	db	114	;'r'
   455  007E6A  65                 	db	101	;'e'
   456  007E6B  67                 	db	103	;'g'
   457  007E6C  72                 	db	114	;'r'
   458  007E6D  65                 	db	101	;'e'
   459  007E6E  73                 	db	115	;'s'
   460  007E6F  6F                 	db	111	;'o'
   461  007E70  20                 	db	32
   462  007E71  61                 	db	97	;'a'
   463  007E72  6C                 	db	108	;'l'
   464  007E73  20                 	db	32
   465  007E74  70                 	db	112	;'p'
   466  007E75  75                 	db	117	;'u'
   467  007E76  6E                 	db	110	;'n'
   468  007E77  74                 	db	116	;'t'
   469  007E78  6F                 	db	111	;'o'
   470  007E79  20                 	db	32
   471  007E7A  64                 	db	100	;'d'
   472  007E7B  65                 	db	101	;'e'
   473  007E7C  20                 	db	32
   474  007E7D  70                 	db	112	;'p'
   475  007E7E  61                 	db	97	;'a'
   476  007E7F  72                 	db	114	;'r'
   477  007E80  74                 	db	116	;'t'
   478  007E81  69                 	db	105	;'i'
   479  007E82  64                 	db	100	;'d'
   480  007E83  61                 	db	97	;'a'
   481  007E84  0D                 	db	13
   482  007E85  0A                 	db	10
   483  007E86  00                 	db	0
   484  007E87                     STR_19:
   485  007E87  49                 	db	73	;'I'
   486  007E88  6E                 	db	110	;'n'
   487  007E89  76                 	db	118	;'v'
   488  007E8A  65                 	db	101	;'e'
   489  007E8B  73                 	db	115	;'s'
   490  007E8C  74                 	db	116	;'t'
   491  007E8D  69                 	db	105	;'i'
   492  007E8E  67                 	db	103	;'g'
   493  007E8F  61                 	db	97	;'a'
   494  007E90  6E                 	db	110	;'n'
   495  007E91  64                 	db	100	;'d'
   496  007E92  6F                 	db	111	;'o'
   497  007E93  20                 	db	32
   498  007E94  43                 	db	67	;'C'
   499  007E95  72                 	db	114	;'r'
   500  007E96  75                 	db	117	;'u'
   501  007E97  63                 	db	99	;'c'
   502  007E98  65                 	db	101	;'e'
   503  007E99  3A                 	db	58	;':'
   504  007E9A  20                 	db	32
   505  007E9B  25                 	db	37
   506  007E9C  63                 	db	99	;'c'
   507  007E9D  20                 	db	32
   508  007E9E  7C                 	db	124
   509  007E9F  20                 	db	32
   510  007EA0  25                 	db	37
   511  007EA1  63                 	db	99	;'c'
   512  007EA2  20                 	db	32
   513  007EA3  7C                 	db	124
   514  007EA4  20                 	db	32
   515  007EA5  25                 	db	37
   516  007EA6  63                 	db	99	;'c'
   517  007EA7  0A                 	db	10
   518  007EA8  00                 	db	0
   519  007EA9                     STR_16:
   520  007EA9  0D                 	db	13
   521  007EAA  44                 	db	68	;'D'
   522  007EAB  69                 	db	105	;'i'
   523  007EAC  72                 	db	114	;'r'
   524  007EAD  65                 	db	101	;'e'
   525  007EAE  63                 	db	99	;'c'
   526  007EAF  63                 	db	99	;'c'
   527  007EB0  69                 	db	105	;'i'
   528  007EB1  6F                 	db	111	;'o'
   529  007EB2  6E                 	db	110	;'n'
   530  007EB3  20                 	db	32
   531  007EB4  45                 	db	69	;'E'
   532  007EB5  6C                 	db	108	;'l'
   533  007EB6  65                 	db	101	;'e'
   534  007EB7  67                 	db	103	;'g'
   535  007EB8  69                 	db	105	;'i'
   536  007EB9  64                 	db	100	;'d'
   537  007EBA  61                 	db	97	;'a'
   538  007EBB  3A                 	db	58	;':'
   539  007EBC  20                 	db	32
   540  007EBD  49                 	db	73	;'I'
   541  007EBE  5A                 	db	90	;'Z'
   542  007EBF  51                 	db	81	;'Q'
   543  007EC0  55                 	db	85	;'U'
   544  007EC1  49                 	db	73	;'I'
   545  007EC2  45                 	db	69	;'E'
   546  007EC3  52                 	db	82	;'R'
   547  007EC4  44                 	db	68	;'D'
   548  007EC5  41                 	db	65	;'A'
   549  007EC6  0A                 	db	10
   550  007EC7  0A                 	db	10
   551  007EC8  0D                 	db	13
   552  007EC9  00                 	db	0
   553  007ECA                     STR_11:
   554  007ECA  0D                 	db	13
   555  007ECB  4D                 	db	77	;'M'
   556  007ECC  6F                 	db	111	;'o'
   557  007ECD  76                 	db	118	;'v'
   558  007ECE  69                 	db	105	;'i'
   559  007ECF  6D                 	db	109	;'m'
   560  007ED0  69                 	db	105	;'i'
   561  007ED1  65                 	db	101	;'e'
   562  007ED2  6E                 	db	110	;'n'
   563  007ED3  74                 	db	116	;'t'
   564  007ED4  6F                 	db	111	;'o'
   565  007ED5  73                 	db	115	;'s'
   566  007ED6  20                 	db	32
   567  007ED7  52                 	db	82	;'R'
   568  007ED8  65                 	db	101	;'e'
   569  007ED9  61                 	db	97	;'a'
   570  007EDA  6C                 	db	108	;'l'
   571  007EDB  69                 	db	105	;'i'
   572  007EDC  7A                 	db	122	;'z'
   573  007EDD  61                 	db	97	;'a'
   574  007EDE  64                 	db	100	;'d'
   575  007EDF  6F                 	db	111	;'o'
   576  007EE0  73                 	db	115	;'s'
   577  007EE1  20                 	db	32
   578  007EE2  3D                 	db	61	;'='
   579  007EE3  20                 	db	32
   580  007EE4  25                 	db	37
   581  007EE5  64                 	db	100	;'d'
   582  007EE6  0D                 	db	13
   583  007EE7  0A                 	db	10
   584  007EE8  0A                 	db	10
   585  007EE9  00                 	db	0
   586  007EEA                     STR_15:
   587  007EEA  0D                 	db	13
   588  007EEB  44                 	db	68	;'D'
   589  007EEC  69                 	db	105	;'i'
   590  007EED  72                 	db	114	;'r'
   591  007EEE  65                 	db	101	;'e'
   592  007EEF  63                 	db	99	;'c'
   593  007EF0  63                 	db	99	;'c'
   594  007EF1  69                 	db	105	;'i'
   595  007EF2  6F                 	db	111	;'o'
   596  007EF3  6E                 	db	110	;'n'
   597  007EF4  20                 	db	32
   598  007EF5  45                 	db	69	;'E'
   599  007EF6  6C                 	db	108	;'l'
   600  007EF7  65                 	db	101	;'e'
   601  007EF8  67                 	db	103	;'g'
   602  007EF9  69                 	db	105	;'i'
   603  007EFA  64                 	db	100	;'d'
   604  007EFB  61                 	db	97	;'a'
   605  007EFC  3A                 	db	58	;':'
   606  007EFD  20                 	db	32
   607  007EFE  45                 	db	69	;'E'
   608  007EFF  4E                 	db	78	;'N'
   609  007F00  46                 	db	70	;'F'
   610  007F01  52                 	db	82	;'R'
   611  007F02  45                 	db	69	;'E'
   612  007F03  4E                 	db	78	;'N'
   613  007F04  54                 	db	84	;'T'
   614  007F05  45                 	db	69	;'E'
   615  007F06  0A                 	db	10
   616  007F07  0A                 	db	10
   617  007F08  0D                 	db	13
   618  007F09  00                 	db	0
   619  007F0A                     STR_18:
   620  007F0A  0D                 	db	13
   621  007F0B  44                 	db	68	;'D'
   622  007F0C  69                 	db	105	;'i'
   623  007F0D  72                 	db	114	;'r'
   624  007F0E  65                 	db	101	;'e'
   625  007F0F  63                 	db	99	;'c'
   626  007F10  63                 	db	99	;'c'
   627  007F11  69                 	db	105	;'i'
   628  007F12  6F                 	db	111	;'o'
   629  007F13  6E                 	db	110	;'n'
   630  007F14  20                 	db	32
   631  007F15  45                 	db	69	;'E'
   632  007F16  6C                 	db	108	;'l'
   633  007F17  65                 	db	101	;'e'
   634  007F18  67                 	db	103	;'g'
   635  007F19  69                 	db	105	;'i'
   636  007F1A  64                 	db	100	;'d'
   637  007F1B  61                 	db	97	;'a'
   638  007F1C  3A                 	db	58	;':'
   639  007F1D  20                 	db	32
   640  007F1E  43                 	db	67	;'C'
   641  007F1F  41                 	db	65	;'A'
   642  007F20  4C                 	db	76	;'L'
   643  007F21  4C                 	db	76	;'L'
   644  007F22  45                 	db	69	;'E'
   645  007F23  4A                 	db	74	;'J'
   646  007F24  4F                 	db	79	;'O'
   647  007F25  4E                 	db	78	;'N'
   648  007F26  0A                 	db	10
   649  007F27  0A                 	db	10
   650  007F28  0D                 	db	13
   651  007F29  00                 	db	0
   652  007F2A                     STR_17:
   653  007F2A  0D                 	db	13
   654  007F2B  44                 	db	68	;'D'
   655  007F2C  69                 	db	105	;'i'
   656  007F2D  72                 	db	114	;'r'
   657  007F2E  65                 	db	101	;'e'
   658  007F2F  63                 	db	99	;'c'
   659  007F30  63                 	db	99	;'c'
   660  007F31  69                 	db	105	;'i'
   661  007F32  6F                 	db	111	;'o'
   662  007F33  6E                 	db	110	;'n'
   663  007F34  20                 	db	32
   664  007F35  45                 	db	69	;'E'
   665  007F36  6C                 	db	108	;'l'
   666  007F37  65                 	db	101	;'e'
   667  007F38  67                 	db	103	;'g'
   668  007F39  69                 	db	105	;'i'
   669  007F3A  64                 	db	100	;'d'
   670  007F3B  61                 	db	97	;'a'
   671  007F3C  3A                 	db	58	;':'
   672  007F3D  20                 	db	32
   673  007F3E  44                 	db	68	;'D'
   674  007F3F  45                 	db	69	;'E'
   675  007F40  52                 	db	82	;'R'
   676  007F41  45                 	db	69	;'E'
   677  007F42  43                 	db	67	;'C'
   678  007F43  48                 	db	72	;'H'
   679  007F44  41                 	db	65	;'A'
   680  007F45  0A                 	db	10
   681  007F46  0A                 	db	10
   682  007F47  0D                 	db	13
   683  007F48  00                 	db	0
   684  007F49  0D                 	db	13
   685  007F4A  44                 	db	68	;'D'
   686  007F4B  65                 	db	101	;'e'
   687  007F4C  73                 	db	115	;'s'
   688  007F4D  74                 	db	116	;'t'
   689  007F4E  69                 	db	105	;'i'
   690  007F4F  6E                 	db	110	;'n'
   691  007F50  6F                 	db	111	;'o'
   692  007F51  20                 	db	32
   693  007F52  6E                 	db	110	;'n'
   694  007F53  6F                 	db	111	;'o'
   695  007F54  20                 	db	32
   696  007F55  64                 	db	100	;'d'
   697  007F56  65                 	db	101	;'e'
   698  007F57  74                 	db	116	;'t'
   699  007F58  65                 	db	101	;'e'
   700  007F59  63                 	db	99	;'c'
   701  007F5A  74                 	db	116	;'t'
   702  007F5B  61                 	db	97	;'a'
   703  007F5C  64                 	db	100	;'d'
   704  007F5D  6F                 	db	111	;'o'
   705  007F5E  20                 	db	32
   706  007F5F  0D                 	db	13
   707  007F60  0A                 	db	10
   708  007F61  00                 	db	0
   709  007F62  0D                 	db	13
   710  007F63  53                 	db	83	;'S'
   711  007F64  65                 	db	101	;'e'
   712  007F65  20                 	db	32
   713  007F66  6C                 	db	108	;'l'
   714  007F67  6C                 	db	108	;'l'
   715  007F68  65                 	db	101	;'e'
   716  007F69  67                 	db	103	;'g'
   717  007F6A  6F                 	db	111	;'o'
   718  007F6B  20                 	db	32
   719  007F6C  61                 	db	97	;'a'
   720  007F6D  6C                 	db	108	;'l'
   721  007F6E  20                 	db	32
   722  007F6F  64                 	db	100	;'d'
   723  007F70  65                 	db	101	;'e'
   724  007F71  73                 	db	115	;'s'
   725  007F72  74                 	db	116	;'t'
   726  007F73  69                 	db	105	;'i'
   727  007F74  6E                 	db	110	;'n'
   728  007F75  6F                 	db	111	;'o'
   729  007F76  20                 	db	32
   730  007F77  0D                 	db	13
   731  007F78  0A                 	db	10
   732  007F79  00                 	db	0
   733  007F7A                     STR_14:
   734  007F7A  0D                 	db	13
   735  007F7B  53                 	db	83	;'S'
   736  007F7C  65                 	db	101	;'e'
   737  007F7D  20                 	db	32
   738  007F7E  6C                 	db	108	;'l'
   739  007F7F  6C                 	db	108	;'l'
   740  007F80  65                 	db	101	;'e'
   741  007F81  67                 	db	103	;'g'
   742  007F82  6F                 	db	111	;'o'
   743  007F83  20                 	db	32
   744  007F84  41                 	db	65	;'A'
   745  007F85  6C                 	db	108	;'l'
   746  007F86  20                 	db	32
   747  007F87  64                 	db	100	;'d'
   748  007F88  65                 	db	101	;'e'
   749  007F89  73                 	db	115	;'s'
   750  007F8A  74                 	db	116	;'t'
   751  007F8B  69                 	db	105	;'i'
   752  007F8C  6E                 	db	110	;'n'
   753  007F8D  6F                 	db	111	;'o'
   754  007F8E  0D                 	db	13
   755  007F8F  0A                 	db	10
   756  007F90  00                 	db	0
   757  007F91  0D                 	db	13
   758  007F92  49                 	db	73	;'I'
   759  007F93  7A                 	db	122	;'z'
   760  007F94  71                 	db	113	;'q'
   761  007F95  75                 	db	117	;'u'
   762  007F96  69                 	db	105	;'i'
   763  007F97  65                 	db	101	;'e'
   764  007F98  72                 	db	114	;'r'
   765  007F99  64                 	db	100	;'d'
   766  007F9A  61                 	db	97	;'a'
   767  007F9B  3A                 	db	58	;':'
   768  007F9C  20                 	db	32
   769  007F9D  25                 	db	37
   770  007F9E  2E                 	db	46
   771  007F9F  32                 	db	50	;'2'
   772  007FA0  66                 	db	102	;'f'
   773  007FA1  0D                 	db	13
   774  007FA2  0A                 	db	10
   775  007FA3  00                 	db	0
   776  007FA4  0D                 	db	13
   777  007FA5  45                 	db	69	;'E'
   778  007FA6  6E                 	db	110	;'n'
   779  007FA7  66                 	db	102	;'f'
   780  007FA8  72                 	db	114	;'r'
   781  007FA9  65                 	db	101	;'e'
   782  007FAA  6E                 	db	110	;'n'
   783  007FAB  74                 	db	116	;'t'
   784  007FAC  65                 	db	101	;'e'
   785  007FAD  3A                 	db	58	;':'
   786  007FAE  20                 	db	32
   787  007FAF  25                 	db	37
   788  007FB0  2E                 	db	46
   789  007FB1  32                 	db	50	;'2'
   790  007FB2  66                 	db	102	;'f'
   791  007FB3  0D                 	db	13
   792  007FB4  0A                 	db	10
   793  007FB5  00                 	db	0
   794  007FB6  0D                 	db	13
   795  007FB7  44                 	db	68	;'D'
   796  007FB8  65                 	db	101	;'e'
   797  007FB9  72                 	db	114	;'r'
   798  007FBA  65                 	db	101	;'e'
   799  007FBB  63                 	db	99	;'c'
   800  007FBC  68                 	db	104	;'h'
   801  007FBD  61                 	db	97	;'a'
   802  007FBE  3A                 	db	58	;':'
   803  007FBF  20                 	db	32
   804  007FC0  25                 	db	37
   805  007FC1  2E                 	db	46
   806  007FC2  32                 	db	50	;'2'
   807  007FC3  66                 	db	102	;'f'
   808  007FC4  0D                 	db	13
   809  007FC5  0A                 	db	10
   810  007FC6  00                 	db	0
   811  007FC7                     STR_8:
   812  007FC7  49                 	db	73	;'I'
   813  007FC8  7A                 	db	122	;'z'
   814  007FC9  71                 	db	113	;'q'
   815  007FCA  75                 	db	117	;'u'
   816  007FCB  69                 	db	105	;'i'
   817  007FCC  65                 	db	101	;'e'
   818  007FCD  72                 	db	114	;'r'
   819  007FCE  64                 	db	100	;'d'
   820  007FCF  61                 	db	97	;'a'
   821  007FD0  0A                 	db	10
   822  007FD1  00                 	db	0
   823  007FD2                     STR_7:
   824  007FD2  45                 	db	69	;'E'
   825  007FD3  6E                 	db	110	;'n'
   826  007FD4  66                 	db	102	;'f'
   827  007FD5  72                 	db	114	;'r'
   828  007FD6  65                 	db	101	;'e'
   829  007FD7  6E                 	db	110	;'n'
   830  007FD8  74                 	db	116	;'t'
   831  007FD9  65                 	db	101	;'e'
   832  007FDA  0A                 	db	10
   833  007FDB  00                 	db	0
   834  007FDC                     STR_9:
   835  007FDC  44                 	db	68	;'D'
   836  007FDD  65                 	db	101	;'e'
   837  007FDE  72                 	db	114	;'r'
   838  007FDF  65                 	db	101	;'e'
   839  007FE0  63                 	db	99	;'c'
   840  007FE1  68                 	db	104	;'h'
   841  007FE2  61                 	db	97	;'a'
   842  007FE3  0A                 	db	10
   843  007FE4  00                 	db	0
   844  007FE5                     STR_10:
   845  007FE5  41                 	db	65	;'A'
   846  007FE6  6C                 	db	108	;'l'
   847  007FE7  74                 	db	116	;'t'
   848  007FE8  6F                 	db	111	;'o'
   849  007FE9  0A                 	db	10
   850  007FEA  00                 	db	0
   851  007FEB                     STR_23:
   852  007FEB  49                 	db	73	;'I'
   853  007FEC  4E                 	db	78	;'N'
   854  007FED  46                 	db	70	;'F'
   855  007FEE  00                 	db	0
   856  007FEF                     STR_27:
   857  007FEF  4E                 	db	78	;'N'
   858  007FF0  41                 	db	65	;'A'
   859  007FF1  4E                 	db	78	;'N'
   860  007FF2  00                 	db	0
   861  007FF3                     STR_24:
   862  007FF3  69                 	db	105	;'i'
   863  007FF4  6E                 	db	110	;'n'
   864  007FF5  66                 	db	102	;'f'
   865  007FF6  00                 	db	0
   866  007FF7                     STR_28:
   867  007FF7  6E                 	db	110	;'n'
   868  007FF8  61                 	db	97	;'a'
   869  007FF9  6E                 	db	110	;'n'
   870  007FFA  00                 	db	0
   871  007FFB                     STR_31:
   872  007FFB  6C                 	db	108	;'l'
   873  007FFC  66                 	db	102	;'f'
   874  007FFD  00                 	db	0
   875  0000                     
   876                           ; #config settings
   877  007FFE  00                 	db	0	; dummy byte at the end
   878  0000                     
   879                           	psect	cinit
   880  00520E                     __pcinit:
   881                           	opt callstack 0
   882  00520E                     start_initialization:
   883                           	opt callstack 0
   884  00520E                     __initialization:
   885                           	opt callstack 0
   886                           
   887                           ; Initialize objects allocated to BANK1 (5 bytes)
   888                           ; load TBLPTR registers with __pidataBANK1
   889  00520E  0E62               	movlw	low __pidataBANK1
   890  005210  6EF6               	movwf	tblptrl,c
   891  005212  0E58               	movlw	high __pidataBANK1
   892  005214  6EF7               	movwf	tblptrh,c
   893  005216  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   894  005218  6EF8               	movwf	tblptru,c
   895  00521A  EE01  F0FA         	lfsr	0,__pdataBANK1
   896  00521E  EE10 F005          	lfsr	1,5
   897  005222                     copy_data0:
   898  005222  0009               	tblrd		*+
   899  005224  CFF5 FFEE          	movff	tablat,postinc0
   900  005228  50E5               	movf	postdec1,w,c
   901  00522A  50E1               	movf	fsr1l,w,c
   902  00522C  E1FA               	bnz	copy_data0
   903                           
   904                           ; Clear objects allocated to BANK2 (200 bytes)
   905  00522E  EE02  F000         	lfsr	0,__pbssBANK2
   906  005232  0EC8               	movlw	200
   907  005234                     clear_0:
   908  005234  6AEE               	clrf	postinc0,c
   909  005236  06E8               	decf	wreg,f,c
   910  005238  E1FD               	bnz	clear_0
   911                           
   912                           ; Clear objects allocated to BANK1 (230 bytes)
   913  00523A  EE01  F000         	lfsr	0,__pbssBANK1
   914  00523E  0EE6               	movlw	230
   915  005240                     clear_1:
   916  005240  6AEE               	clrf	postinc0,c
   917  005242  06E8               	decf	wreg,f,c
   918  005244  E1FD               	bnz	clear_1
   919                           
   920                           ; Clear objects allocated to BANK0 (1 bytes)
   921  005246  0100               	movlb	0
   922  005248  6BFF               	clrf	__pbssBANK0& (0+255),b
   923                           
   924                           ; Clear objects allocated to COMRAM (5 bytes)
   925  00524A  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   926  00524C  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   927  00524E  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   928  005250  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   929  005252  6A55               	clrf	__pbssCOMRAM& (0+255),c
   930  005254                     end_of_initialization:
   931                           	opt callstack 0
   932  005254                     __end_of__initialization:
   933                           	opt callstack 0
   934  005254  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   935  005256  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   936  005258  0E00               	movlw	low (__Lmediumconst shr (0+16))
   937  00525A  6EF8               	movwf	tblptru,c
   938  00525C  0100               	movlb	0
   939  00525E  EF2D  F026         	goto	_main	;jump to C main() function
   940                           
   941                           	psect	bssCOMRAM
   942  000055                     __pbssCOMRAM:
   943                           	opt callstack 0
   944  000055                     _flags:
   945                           	opt callstack 0
   946  000055                     	ds	2
   947  000057                     _mouse:
   948                           	opt callstack 0
   949  000057                     	ds	2
   950  000059                     _caminoEncontrado:
   951                           	opt callstack 0
   952  000059                     	ds	1
   953                           
   954                           	psect	bssBANK0
   955  0000FF                     __pbssBANK0:
   956                           	opt callstack 0
   957  0000FF                     _llegoDestino:
   958                           	opt callstack 0
   959  0000FF                     	ds	1
   960                           
   961                           	psect	bssBANK1
   962  000100                     __pbssBANK1:
   963                           	opt callstack 0
   964  000100                     roundf@F525:
   965                           	opt callstack 0
   966  000100                     	ds	4
   967  000104                     floorf@F524:
   968                           	opt callstack 0
   969  000104                     	ds	4
   970  000108                     ___fpclassifyf@F463:
   971                           	opt callstack 0
   972  000108                     	ds	4
   973  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   974                           	opt callstack 0
   975  00010C                     	ds	4
   976  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   977                           	opt callstack 0
   978  000110                     	ds	4
   979  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   980                           	opt callstack 0
   981  000114                     	ds	4
   982  000118                     _oldSensorEnfrente:
   983                           	opt callstack 0
   984  000118                     	ds	4
   985  00011C                     _oldSensorIzquierda:
   986                           	opt callstack 0
   987  00011C                     	ds	4
   988  000120                     _oldSensorDerecha:
   989                           	opt callstack 0
   990  000120                     	ds	4
   991  000124                     _sensorEnfrente:
   992                           	opt callstack 0
   993  000124                     	ds	4
   994  000128                     _sensorIzquierda:
   995                           	opt callstack 0
   996  000128                     	ds	4
   997  00012C                     _sensorDerecha:
   998                           	opt callstack 0
   999  00012C                     	ds	4
  1000  000130                     _nout:
  1001                           	opt callstack 0
  1002  000130                     	ds	2
  1003  000132                     _width:
  1004                           	opt callstack 0
  1005  000132                     	ds	2
  1006  000134                     _prec:
  1007                           	opt callstack 0
  1008  000134                     	ds	2
  1009  000136                     PID@difAnt:
  1010                           	opt callstack 0
  1011  000136                     	ds	2
  1012  000138                     comportamientoBasico@espejearCarroY:
  1013                           	opt callstack 0
  1014  000138                     	ds	1
  1015  000139                     _paredIzquierda:
  1016                           	opt callstack 0
  1017  000139                     	ds	1
  1018  00013A                     _paredDerecha:
  1019                           	opt callstack 0
  1020  00013A                     	ds	1
  1021  00013B                     _paredEnfrente:
  1022                           	opt callstack 0
  1023  00013B                     	ds	1
  1024  00013C                     _posicionDestinoY:
  1025                           	opt callstack 0
  1026  00013C                     	ds	1
  1027  00013D                     _posicionDestinoX:
  1028                           	opt callstack 0
  1029  00013D                     	ds	1
  1030  00013E                     _posicionCarroY:
  1031                           	opt callstack 0
  1032  00013E                     	ds	1
  1033  00013F                     _posicionCarroX:
  1034                           	opt callstack 0
  1035  00013F                     	ds	1
  1036  000140                     _crucesRecorridos:
  1037                           	opt callstack 0
  1038  000140                     	ds	1
  1039  000141                     _numMovimientosTotales:
  1040                           	opt callstack 0
  1041  000141                     	ds	1
  1042  000142                     _dbuf:
  1043                           	opt callstack 0
  1044  000142                     	ds	80
  1045  000192                     _buffer:
  1046                           	opt callstack 0
  1047  000192                     	ds	50
  1048  0001C4                     comportamientoBasico@caminoFinal:
  1049                           	opt callstack 0
  1050  0001C4                     	ds	20
  1051  0001D8                     comportamientoBasico@caminosRecorrer:
  1052                           	opt callstack 0
  1053  0001D8                     	ds	3
  1054  0001DB                     comportamientoBasico@numMovimientos:
  1055                           	opt callstack 0
  1056  0001DB                     	ds	2
  1057  0001DD                     comportamientoBasico@avanceRectoLargo:
  1058                           	opt callstack 0
  1059  0001DD                     	ds	1
  1060  0001DE                     comportamientoBasico@cambioOrientacionCarro:
  1061                           	opt callstack 0
  1062  0001DE                     	ds	1
  1063  0001DF                     comportamientoBasico@caminoActual:
  1064                           	opt callstack 0
  1065  0001DF                     	ds	1
  1066  0001E0                     comportamientoBasico@contCaminosRecorridos:
  1067                           	opt callstack 0
  1068  0001E0                     	ds	1
  1069  0001E1                     comportamientoBasico@posicionInvCruce:
  1070                           	opt callstack 0
  1071  0001E1                     	ds	1
  1072  0001E2                     comportamientoBasico@investigandoCruce:
  1073                           	opt callstack 0
  1074  0001E2                     	ds	1
  1075  0001E3                     comportamientoBasico@cruceDetectado:
  1076                           	opt callstack 0
  1077  0001E3                     	ds	1
  1078  0001E4                     comportamientoBasico@mapear:
  1079                           	opt callstack 0
  1080  0001E4                     	ds	1
  1081  0001E5                     comportamientoBasico@carroEspejeado:
  1082                           	opt callstack 0
  1083  0001E5                     	ds	1
  1084                           
  1085                           	psect	dataBANK1
  1086  0001FA                     __pdataBANK1:
  1087                           	opt callstack 0
  1088  0001FA                     _ida:
  1089                           	opt callstack 0
  1090  0001FA                     	ds	1
  1091  0001FB                     _pausa:
  1092                           	opt callstack 0
  1093  0001FB                     	ds	1
  1094  0001FC                     _SENSOR_PRIORIDAD_BAJA:
  1095                           	opt callstack 0
  1096  0001FC                     	ds	1
  1097  0001FD                     _SENSOR_PRIORIDAD_MEDIA:
  1098                           	opt callstack 0
  1099  0001FD                     	ds	1
  1100  0001FE                     _SENSOR_PRIORIDAD_ALTA:
  1101                           	opt callstack 0
  1102  0001FE                     	ds	1
  1103                           
  1104                           	psect	bssBANK2
  1105  000200                     __pbssBANK2:
  1106                           	opt callstack 0
  1107  000200                     comportamientoBasico@movimientosRealizados:
  1108                           	opt callstack 0
  1109  000200                     	ds	200
  1110                           
  1111                           	psect	cstackBANK2
  1112  0002C8                     __pcstackBANK2:
  1113                           	opt callstack 0
  1114  0002C8                     ??_comportamientoBasico:
  1115                           
  1116                           ; 1 bytes @ 0x0
  1117  0002C8                     	ds	4
  1118  0002CC                     main@iniciado:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 1 bytes @ 0x4
  1122  0002CC                     	ds	1
  1123                           
  1124                           	psect	cstackBANK1
  1125  0001E6                     __pcstackBANK1:
  1126                           	opt callstack 0
  1127  0001E6                     decidirDireccion@caminosRecorrer:
  1128                           	opt callstack 0
  1129  0001E6                     probarMapeoDireccionCruces@caminoFinal:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x0
  1133  0001E6                     	ds	2
  1134  0001E8                     probarMapeoDireccionCruces@caminoActual:
  1135                           	opt callstack 0
  1136  0001E8                     decidirDireccion@investigandoCruce:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x2
  1140  0001E8                     	ds	1
  1141  0001E9                     probarMapeoDireccionCruces@investigandoCruce:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x3
  1145  0001E9                     	ds	1
  1146  0001EA                     decidirDireccion@posicionInvCruce:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x4
  1150  0001EA                     	ds	1
  1151  0001EB                     probarMapeoDireccionCruces@posicionInvCruce:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x5
  1155  0001EB                     	ds	1
  1156  0001EC                     decidirDireccion@contCaminosRecorridos:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x6
  1160  0001EC                     	ds	1
  1161  0001ED                     probarMapeoDireccionCruces@mapear:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x7
  1165  0001ED                     	ds	1
  1166  0001EE                     decidirDireccion@caminoActual:
  1167                           	opt callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x8
  1170  0001EE                     	ds	1
  1171  0001EF                     probarMapeoDireccionCruces@cruceDetectado:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x9
  1175  0001EF                     	ds	1
  1176  0001F0                     decidirDireccion@cambioOrientacionCarro:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0xA
  1180  0001F0                     	ds	1
  1181  0001F1                     probarMapeoDireccionCruces@contCaminosRecorridos:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 2 bytes @ 0xB
  1185  0001F1                     	ds	1
  1186  0001F2                     decidirDireccion@mapear:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 2 bytes @ 0xC
  1190  0001F2                     	ds	1
  1191  0001F3                     probarMapeoDireccionCruces@cambioOrientacionCarro:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 2 bytes @ 0xD
  1195  0001F3                     	ds	1
  1196  0001F4                     decidirDireccion@cruceDetectado:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 2 bytes @ 0xE
  1200  0001F4                     	ds	2
  1201  0001F6                     decidirDireccion@avanceRectoLargo:
  1202                           	opt callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x10
  1205  0001F6                     	ds	2
  1206  0001F8                     decidirDireccion@caminoFinal:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x12
  1210  0001F8                     	ds	2
  1211                           
  1212                           	psect	cstackBANK0
  1213  000060                     __pcstackBANK0:
  1214                           	opt callstack 0
  1215  000060                     ___fldiv@rem:
  1216                           	opt callstack 0
  1217  000060                     _roundf$1828:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x0
  1221  000060                     	ds	4
  1222  000064                     ___fldiv@sign:
  1223                           	opt callstack 0
  1224  000064                     roundf@e:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x4
  1228  000064                     	ds	1
  1229  000065                     ___fldiv@new_exp:
  1230                           	opt callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x5
  1233  000065                     	ds	1
  1234  000066                     _roundf$1827:
  1235                           	opt callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x6
  1238  000066                     	ds	1
  1239  000067                     ___fldiv@grs:
  1240                           	opt callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x7
  1243  000067                     	ds	3
  1244  00006A                     roundf@u:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 4 bytes @ 0xA
  1248  00006A                     	ds	1
  1249  00006B                     ___fldiv@bexp:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 1 bytes @ 0xB
  1253  00006B                     	ds	1
  1254  00006C                     ___fldiv@aexp:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 1 bytes @ 0xC
  1258  00006C                     	ds	1
  1259  00006D                     ??_floorf:
  1260                           
  1261                           ; 1 bytes @ 0xD
  1262  00006D                     	ds	1
  1263  00006E                     roundf@y:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 4 bytes @ 0xE
  1267  00006E                     	ds	4
  1268  000072                     ?___fltol:
  1269                           	opt callstack 0
  1270  000072                     ___fltol@f1:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x12
  1274  000072                     	ds	1
  1275  000073                     floorf@m:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x13
  1279  000073                     	ds	3
  1280  000076                     ??___fltol:
  1281                           
  1282                           ; 1 bytes @ 0x16
  1283  000076                     	ds	1
  1284  000077                     floorf@e:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x17
  1288  000077                     	ds	2
  1289  000079                     floorf@u:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 4 bytes @ 0x19
  1293  000079                     	ds	1
  1294  00007A                     ___fltol@sign1:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 1 bytes @ 0x1A
  1298  00007A                     	ds	1
  1299  00007B                     ___fltol@exp1:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 1 bytes @ 0x1B
  1303  00007B                     	ds	1
  1304  00007C                     pwmDuty@cicloTrabajo:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x1C
  1308  00007C                     	ds	1
  1309  00007D                     ?_efgtoa:
  1310                           	opt callstack 0
  1311  00007D                     efgtoa@fp:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x1D
  1315  00007D                     	ds	1
  1316  00007E                     pwmDuty@channel:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 1 bytes @ 0x1E
  1320  00007E                     	ds	1
  1321  00007F                     ??_pwmDuty:
  1322  00007F                     efgtoa@f:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x1F
  1326  00007F                     	ds	4
  1327  000083                     efgtoa@c:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 1 bytes @ 0x23
  1331  000083                     	ds	1
  1332  000084                     ??_efgtoa:
  1333  000084                     pwmDuty@duty:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 4 bytes @ 0x24
  1337  000084                     	ds	4
  1338  000088                     ??_PID:
  1339  000088                     moverCarrito@carroEspejeado:
  1340                           	opt callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x28
  1343  000088                     	ds	1
  1344  000089                     efgtoa@ou:
  1345                           	opt callstack 0
  1346                           
  1347                           ; 4 bytes @ 0x29
  1348  000089                     	ds	1
  1349  00008A                     moverCarrito@avanceRectoLargo:
  1350                           	opt callstack 0
  1351  00008A                     _PID$1826:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 4 bytes @ 0x2A
  1355  00008A                     	ds	2
  1356  00008C                     ??_moverCarrito:
  1357                           
  1358                           ; 1 bytes @ 0x2C
  1359  00008C                     	ds	1
  1360  00008D                     _efgtoa$923:
  1361                           	opt callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x2D
  1364  00008D                     	ds	1
  1365  00008E                     moverCarrito@espejearCarroY:
  1366                           	opt callstack 0
  1367  00008E                     PID@velocidadIzquierda:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x2E
  1371  00008E                     	ds	1
  1372  00008F                     _efgtoa$924:
  1373                           	opt callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x2F
  1376  00008F                     	ds	1
  1377  000090                     _PID$737:
  1378                           	opt callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x30
  1381  000090                     	ds	1
  1382  000091                     _efgtoa$928:
  1383                           	opt callstack 0
  1384                           
  1385                           ; 2 bytes @ 0x31
  1386  000091                     	ds	1
  1387  000092                     PID@velocidadDerecha:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x32
  1391  000092                     	ds	1
  1392  000093                     _efgtoa$932:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x33
  1396  000093                     	ds	1
  1397  000094                     _PID$739:
  1398                           	opt callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x34
  1401  000094                     	ds	1
  1402  000095                     _efgtoa$933:
  1403                           	opt callstack 0
  1404                           
  1405                           ; 2 bytes @ 0x35
  1406  000095                     	ds	1
  1407  000096                     PID@dif:
  1408                           	opt callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x36
  1411  000096                     	ds	1
  1412  000097                     _efgtoa$934:
  1413                           	opt callstack 0
  1414                           
  1415                           ; 2 bytes @ 0x37
  1416  000097                     	ds	1
  1417  000098                     PID@error:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x38
  1421  000098                     	ds	1
  1422  000099                     efgtoa@t:
  1423                           	opt callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x39
  1426  000099                     	ds	1
  1427  00009A                     regresarAlCruce@movimientos:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 2 bytes @ 0x3A
  1431  00009A                     	ds	1
  1432  00009B                     efgtoa@pp:
  1433                           	opt callstack 0
  1434                           
  1435                           ; 2 bytes @ 0x3B
  1436  00009B                     	ds	1
  1437  00009C                     regresarAlCruce@numMovimientos:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x3C
  1441  00009C                     	ds	1
  1442  00009D                     efgtoa@m:
  1443                           	opt callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x3D
  1446  00009D                     	ds	1
  1447  00009E                     regresarAlCruce@i:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x3E
  1451  00009E                     	ds	1
  1452  00009F                     efgtoa@ne:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x3F
  1456  00009F                     	ds	2
  1457  0000A1                     efgtoa@d:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x41
  1461  0000A1                     	ds	2
  1462  0000A3                     efgtoa@sign:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x43
  1466  0000A3                     	ds	2
  1467  0000A5                     efgtoa@p:
  1468                           	opt callstack 0
  1469                           
  1470                           ; 2 bytes @ 0x45
  1471  0000A5                     	ds	2
  1472  0000A7                     efgtoa@nmode:
  1473                           	opt callstack 0
  1474                           
  1475                           ; 1 bytes @ 0x47
  1476  0000A7                     	ds	1
  1477  0000A8                     efgtoa@w:
  1478                           	opt callstack 0
  1479                           
  1480                           ; 2 bytes @ 0x48
  1481  0000A8                     	ds	2
  1482  0000AA                     efgtoa@mode:
  1483                           	opt callstack 0
  1484                           
  1485                           ; 1 bytes @ 0x4A
  1486  0000AA                     	ds	1
  1487  0000AB                     efgtoa@h:
  1488                           	opt callstack 0
  1489                           
  1490                           ; 4 bytes @ 0x4B
  1491  0000AB                     	ds	4
  1492  0000AF                     efgtoa@l:
  1493                           	opt callstack 0
  1494                           
  1495                           ; 4 bytes @ 0x4F
  1496  0000AF                     	ds	4
  1497  0000B3                     efgtoa@i:
  1498                           	opt callstack 0
  1499                           
  1500                           ; 2 bytes @ 0x53
  1501  0000B3                     	ds	2
  1502  0000B5                     efgtoa@g:
  1503                           	opt callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x55
  1506  0000B5                     	ds	4
  1507  0000B9                     efgtoa@e:
  1508                           	opt callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x59
  1511  0000B9                     	ds	2
  1512  0000BB                     efgtoa@n:
  1513                           	opt callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x5B
  1516  0000BB                     	ds	2
  1517  0000BD                     efgtoa@u:
  1518                           	opt callstack 0
  1519                           
  1520                           ; 4 bytes @ 0x5D
  1521  0000BD                     	ds	4
  1522  0000C1                     ?_vfpfcnvrt:
  1523                           	opt callstack 0
  1524  0000C1                     vfpfcnvrt@fp:
  1525                           	opt callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x61
  1528  0000C1                     	ds	2
  1529  0000C3                     vfpfcnvrt@fmt:
  1530                           	opt callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x63
  1533  0000C3                     	ds	2
  1534  0000C5                     vfpfcnvrt@ap:
  1535                           	opt callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x65
  1538  0000C5                     	ds	2
  1539  0000C7                     ??_vfpfcnvrt:
  1540                           
  1541                           ; 1 bytes @ 0x67
  1542  0000C7                     	ds	4
  1543  0000CB                     vfpfcnvrt@ll:
  1544                           	opt callstack 0
  1545                           
  1546                           ; 8 bytes @ 0x6B
  1547  0000CB                     	ds	8
  1548  0000D3                     _vfpfcnvrt$948:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x73
  1552  0000D3                     	ds	2
  1553  0000D5                     _vfpfcnvrt$954:
  1554                           	opt callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x75
  1557  0000D5                     	ds	2
  1558  0000D7                     vfpfcnvrt@f:
  1559                           	opt callstack 0
  1560                           
  1561                           ; 4 bytes @ 0x77
  1562  0000D7                     	ds	4
  1563  0000DB                     vfpfcnvrt@ct:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 3 bytes @ 0x7B
  1567  0000DB                     	ds	3
  1568  0000DE                     vfpfcnvrt@c:
  1569                           	opt callstack 0
  1570                           
  1571                           ; 1 bytes @ 0x7E
  1572  0000DE                     	ds	1
  1573  0000DF                     ?_vfprintf:
  1574                           	opt callstack 0
  1575  0000DF                     vfprintf@fp:
  1576                           	opt callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x7F
  1579  0000DF                     	ds	2
  1580  0000E1                     vfprintf@fmt:
  1581                           	opt callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x81
  1584  0000E1                     	ds	2
  1585  0000E3                     vfprintf@ap:
  1586                           	opt callstack 0
  1587                           
  1588                           ; 2 bytes @ 0x83
  1589  0000E3                     	ds	2
  1590  0000E5                     vfprintf@cfmt:
  1591                           	opt callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x85
  1594  0000E5                     	ds	2
  1595  0000E7                     ?_sprintf:
  1596                           	opt callstack 0
  1597  0000E7                     sprintf@s:
  1598                           	opt callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x87
  1601  0000E7                     	ds	2
  1602  0000E9                     sprintf@fmt:
  1603                           	opt callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x89
  1606  0000E9                     	ds	10
  1607  0000F3                     sprintf@ap:
  1608                           	opt callstack 0
  1609                           
  1610                           ; 2 bytes @ 0x93
  1611  0000F3                     	ds	2
  1612  0000F5                     sprintf@f:
  1613                           	opt callstack 0
  1614                           
  1615                           ; 6 bytes @ 0x95
  1616  0000F5                     	ds	6
  1617  0000FB                     ??_decidirDireccion:
  1618  0000FB                     ??_probarMapeoDireccionCruces:
  1619  0000FB                     visualizarPasosRealizados@numMovimientos:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 2 bytes @ 0x9B
  1623  0000FB                     	ds	2
  1624  0000FD                     ??_visualizarPasosRealizados:
  1625                           
  1626                           ; 1 bytes @ 0x9D
  1627  0000FD                     	ds	1
  1628  0000FE                     comportamientoBasico@direccionElegida:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 1 bytes @ 0x9E
  1632  0000FE                     	ds	1
  1633                           
  1634                           	psect	cstackCOMRAM
  1635  000001                     __pcstackCOMRAM:
  1636                           	opt callstack 0
  1637  000001                     ??_antiRebote:
  1638  000001                     
  1639                           ; 1 bytes @ 0x0
  1640  000001                     	ds	2
  1641  000003                     antiRebote@pin:
  1642                           	opt callstack 0
  1643                           
  1644                           ; 1 bytes @ 0x2
  1645  000003                     	ds	1
  1646  000004                     ??_boton:
  1647                           
  1648                           ; 1 bytes @ 0x3
  1649  000004                     	ds	2
  1650  000006                     ??_forzarParoAuto:
  1651  000006                     ??_configPwm:
  1652  000006                     ??_forzarReversa:
  1653  000006                     ??_forzarAvanceRecto:
  1654  000006                     ??_forzarGiroIzquierda:
  1655  000006                     ??_forzarGiroDerecha:
  1656  000006                     ?_strlen:
  1657                           	opt callstack 0
  1658  000006                     ?___fpclassifyf:
  1659                           	opt callstack 0
  1660  000006                     ?_isupper:
  1661                           	opt callstack 0
  1662  000006                     ?_isdigit:
  1663                           	opt callstack 0
  1664  000006                     ?_strncmp:
  1665                           	opt callstack 0
  1666  000006                     ?_isspace:
  1667                           	opt callstack 0
  1668  000006                     ?_dameLecturaAdc:
  1669                           	opt callstack 0
  1670  000006                     ?___wmul:
  1671                           	opt callstack 0
  1672  000006                     ?___awdiv:
  1673                           	opt callstack 0
  1674  000006                     ?___awmod:
  1675                           	opt callstack 0
  1676  000006                     ?___lwdiv:
  1677                           	opt callstack 0
  1678  000006                     ?___lmul:
  1679                           	opt callstack 0
  1680  000006                     ?___flneg:
  1681                           	opt callstack 0
  1682  000006                     ?___aodiv:
  1683                           	opt callstack 0
  1684  000006                     ?___aomod:
  1685                           	opt callstack 0
  1686  000006                     UART_write@dato:
  1687                           	opt callstack 0
  1688  000006                     limpiarMovimientos@movimientos:
  1689                           	opt callstack 0
  1690  000006                     ___wmul@multiplier:
  1691                           	opt callstack 0
  1692  000006                     ___awdiv@dividend:
  1693                           	opt callstack 0
  1694  000006                     ___awmod@dividend:
  1695                           	opt callstack 0
  1696  000006                     ___lwdiv@dividend:
  1697                           	opt callstack 0
  1698  000006                     isdigit@c:
  1699                           	opt callstack 0
  1700  000006                     isspace@c:
  1701                           	opt callstack 0
  1702  000006                     isupper@c:
  1703                           	opt callstack 0
  1704  000006                     fputc@c:
  1705                           	opt callstack 0
  1706  000006                     strcpy@dest:
  1707                           	opt callstack 0
  1708  000006                     strlen@s:
  1709                           	opt callstack 0
  1710  000006                     strncmp@_l:
  1711                           	opt callstack 0
  1712  000006                     ___lmul@multiplier:
  1713                           	opt callstack 0
  1714  000006                     ___fleq@ff1:
  1715                           	opt callstack 0
  1716  000006                     ___flneg@f1:
  1717                           	opt callstack 0
  1718  000006                     ___fpclassifyf@x:
  1719                           	opt callstack 0
  1720  000006                     ___aodiv@dividend:
  1721                           	opt callstack 0
  1722  000006                     ___aomod@dividend:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 8 bytes @ 0x5
  1726  000006                     	ds	1
  1727  000007                     UART_printf@cadena:
  1728                           	opt callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x6
  1731  000007                     	ds	1
  1732  000008                     ??_mover:
  1733  000008                     ??_isupper:
  1734  000008                     ??_isdigit:
  1735  000008                     ??_isspace:
  1736  000008                     ??_dameLecturaAdc:
  1737  000008                     configPwm@channel:
  1738                           	opt callstack 0
  1739  000008                     limpiarMovimientos@numMovimientos:
  1740                           	opt callstack 0
  1741  000008                     ___wmul@multiplicand:
  1742                           	opt callstack 0
  1743  000008                     ___awdiv@divisor:
  1744                           	opt callstack 0
  1745  000008                     ___awmod@divisor:
  1746                           	opt callstack 0
  1747  000008                     ___lwdiv@divisor:
  1748                           	opt callstack 0
  1749  000008                     fputc@fp:
  1750                           	opt callstack 0
  1751  000008                     strcpy@src:
  1752                           	opt callstack 0
  1753  000008                     strlen@a:
  1754                           	opt callstack 0
  1755  000008                     strncmp@_r:
  1756                           	opt callstack 0
  1757                           
  1758                           ; 2 bytes @ 0x7
  1759  000008                     	ds	1
  1760  000009                     ??_mostrarDireccionElegida:
  1761                           
  1762                           ; 1 bytes @ 0x8
  1763  000009                     	ds	1
  1764  00000A                     ??_fputc:
  1765  00000A                     ??___fpclassifyf:
  1766  00000A                     ??_strcpy:
  1767  00000A                     dameLecturaAdc@canalLeer:
  1768                           	opt callstack 0
  1769  00000A                     ___awdiv@counter:
  1770                           	opt callstack 0
  1771  00000A                     ___awmod@counter:
  1772                           	opt callstack 0
  1773  00000A                     ___lwdiv@counter:
  1774                           	opt callstack 0
  1775  00000A                     ___wmul@product:
  1776                           	opt callstack 0
  1777  00000A                     strncmp@n:
  1778                           	opt callstack 0
  1779  00000A                     ___lmul@multiplicand:
  1780                           	opt callstack 0
  1781  00000A                     ___fleq@ff2:
  1782                           	opt callstack 0
  1783                           
  1784                           ; 4 bytes @ 0x9
  1785  00000A                     	ds	1
  1786  00000B                     seLlegoAlDestino@llegoDestino:
  1787                           	opt callstack 0
  1788  00000B                     mostrarDireccionElegida@direccionElegida:
  1789                           	opt callstack 0
  1790  00000B                     ___awdiv@sign:
  1791                           	opt callstack 0
  1792  00000B                     ___awmod@sign:
  1793                           	opt callstack 0
  1794  00000B                     ___lwdiv@quotient:
  1795                           	opt callstack 0
  1796                           
  1797                           ; 2 bytes @ 0xA
  1798  00000B                     	ds	1
  1799  00000C                     ??_strncmp:
  1800  00000C                     ?_tolower:
  1801                           	opt callstack 0
  1802  00000C                     _isspace$1458:
  1803                           	opt callstack 0
  1804  00000C                     limpiarMovimientos@i:
  1805                           	opt callstack 0
  1806  00000C                     ___awdiv@quotient:
  1807                           	opt callstack 0
  1808  00000C                     strcpy@s:
  1809                           	opt callstack 0
  1810  00000C                     tolower@c:
  1811                           	opt callstack 0
  1812                           
  1813                           ; 2 bytes @ 0xB
  1814  00000C                     	ds	1
  1815  00000D                     ?_atoi:
  1816                           	opt callstack 0
  1817  00000D                     ?___xxtofl:
  1818                           	opt callstack 0
  1819  00000D                     atoi@s:
  1820                           	opt callstack 0
  1821  00000D                     strncmp@l:
  1822                           	opt callstack 0
  1823  00000D                     ___xxtofl@val:
  1824                           	opt callstack 0
  1825                           
  1826                           ; 4 bytes @ 0xC
  1827  00000D                     	ds	1
  1828  00000E                     ??_tolower:
  1829  00000E                     ??___fleq:
  1830  00000E                     ___fpclassifyf@e:
  1831                           	opt callstack 0
  1832  00000E                     strcpy@d:
  1833                           	opt callstack 0
  1834  00000E                     ___lmul@product:
  1835                           	opt callstack 0
  1836  00000E                     ___aodiv@divisor:
  1837                           	opt callstack 0
  1838  00000E                     ___aomod@divisor:
  1839                           	opt callstack 0
  1840                           
  1841                           ; 8 bytes @ 0xD
  1842  00000E                     	ds	1
  1843  00000F                     ??_atoi:
  1844  00000F                     fputs@s:
  1845                           	opt callstack 0
  1846  00000F                     strncmp@r:
  1847                           	opt callstack 0
  1848                           
  1849                           ; 2 bytes @ 0xE
  1850  00000F                     	ds	1
  1851  000010                     ___fpclassifyf@u:
  1852                           	opt callstack 0
  1853                           
  1854                           ; 4 bytes @ 0xF
  1855  000010                     	ds	1
  1856  000011                     ??___xxtofl:
  1857  000011                     fputs@fp:
  1858                           	opt callstack 0
  1859                           
  1860                           ; 2 bytes @ 0x10
  1861  000011                     	ds	1
  1862  000012                     ?___aldiv:
  1863                           	opt callstack 0
  1864  000012                     _tolower$1557:
  1865                           	opt callstack 0
  1866  000012                     ___aldiv@dividend:
  1867                           	opt callstack 0
  1868                           
  1869                           ; 4 bytes @ 0x11
  1870  000012                     	ds	1
  1871  000013                     fputs@c:
  1872                           	opt callstack 0
  1873  000013                     atoi@neg:
  1874                           	opt callstack 0
  1875                           
  1876                           ; 2 bytes @ 0x12
  1877  000013                     	ds	1
  1878  000014                     fputs@i:
  1879                           	opt callstack 0
  1880                           
  1881                           ; 2 bytes @ 0x13
  1882  000014                     	ds	1
  1883  000015                     ___xxtofl@sign:
  1884                           	opt callstack 0
  1885  000015                     _atoi$1427:
  1886                           	opt callstack 0
  1887                           
  1888                           ; 2 bytes @ 0x14
  1889  000015                     	ds	1
  1890  000016                     ?_pad:
  1891                           	opt callstack 0
  1892  000016                     ___aodiv@counter:
  1893                           	opt callstack 0
  1894  000016                     ___aomod@counter:
  1895                           	opt callstack 0
  1896  000016                     ___xxtofl@exp:
  1897                           	opt callstack 0
  1898  000016                     pad@fp:
  1899                           	opt callstack 0
  1900  000016                     ___aldiv@divisor:
  1901                           	opt callstack 0
  1902                           
  1903                           ; 4 bytes @ 0x15
  1904  000016                     	ds	1
  1905  000017                     ___aodiv@sign:
  1906                           	opt callstack 0
  1907  000017                     ___aomod@sign:
  1908                           	opt callstack 0
  1909  000017                     _atoi$1429:
  1910                           	opt callstack 0
  1911  000017                     ___xxtofl@arg:
  1912                           	opt callstack 0
  1913                           
  1914                           ; 4 bytes @ 0x16
  1915  000017                     	ds	1
  1916  000018                     ?_abs:
  1917                           	opt callstack 0
  1918  000018                     pad@buf:
  1919                           	opt callstack 0
  1920  000018                     abs@a:
  1921                           	opt callstack 0
  1922  000018                     ___aodiv@quotient:
  1923                           	opt callstack 0
  1924                           
  1925                           ; 8 bytes @ 0x17
  1926  000018                     	ds	1
  1927  000019                     _atoi$1428:
  1928                           	opt callstack 0
  1929                           
  1930                           ; 1 bytes @ 0x18
  1931  000019                     	ds	1
  1932  00001A                     ??_abs:
  1933  00001A                     ___aldiv@counter:
  1934                           	opt callstack 0
  1935  00001A                     pad@p:
  1936                           	opt callstack 0
  1937  00001A                     atoi@n:
  1938                           	opt callstack 0
  1939                           
  1940                           ; 2 bytes @ 0x19
  1941  00001A                     	ds	1
  1942  00001B                     ?___flmul:
  1943                           	opt callstack 0
  1944  00001B                     ?_dameDistancia:
  1945                           	opt callstack 0
  1946  00001B                     ___aldiv@sign:
  1947                           	opt callstack 0
  1948  00001B                     ___flmul@b:
  1949                           	opt callstack 0
  1950                           
  1951                           ; 4 bytes @ 0x1A
  1952  00001B                     	ds	1
  1953  00001C                     ??_pad:
  1954  00001C                     ___aldiv@quotient:
  1955                           	opt callstack 0
  1956                           
  1957                           ; 4 bytes @ 0x1B
  1958  00001C                     	ds	1
  1959  00001D                     pad@i:
  1960                           	opt callstack 0
  1961                           
  1962                           ; 2 bytes @ 0x1C
  1963  00001D                     	ds	2
  1964  00001F                     ??_dameDistancia:
  1965  00001F                     pad@w:
  1966                           	opt callstack 0
  1967  00001F                     ___flmul@a:
  1968                           	opt callstack 0
  1969                           
  1970                           ; 4 bytes @ 0x1E
  1971  00001F                     	ds	1
  1972  000020                     ?_map:
  1973                           	opt callstack 0
  1974  000020                     map@x:
  1975                           	opt callstack 0
  1976  000020                     UART_init@BAUD:
  1977                           	opt callstack 0
  1978                           
  1979                           ; 4 bytes @ 0x1F
  1980  000020                     	ds	1
  1981  000021                     ?_ctoa:
  1982                           	opt callstack 0
  1983  000021                     ?_dtoa:
  1984                           	opt callstack 0
  1985  000021                     dameDistancia@numeroSensor:
  1986                           	opt callstack 0
  1987  000021                     ctoa@fp:
  1988                           	opt callstack 0
  1989  000021                     dtoa@fp:
  1990                           	opt callstack 0
  1991                           
  1992                           ; 2 bytes @ 0x20
  1993  000021                     	ds	1
  1994  000022                     dameDistancia@distancia:
  1995                           	opt callstack 0
  1996                           
  1997                           ; 4 bytes @ 0x21
  1998  000022                     	ds	1
  1999  000023                     ??___flmul:
  2000  000023                     ctoa@c:
  2001                           	opt callstack 0
  2002  000023                     dtoa@d:
  2003                           	opt callstack 0
  2004                           
  2005                           ; 8 bytes @ 0x22
  2006  000023                     	ds	1
  2007  000024                     ctoa@w:
  2008                           	opt callstack 0
  2009  000024                     map@in_min:
  2010                           	opt callstack 0
  2011                           
  2012                           ; 4 bytes @ 0x23
  2013  000024                     	ds	2
  2014  000026                     dameDistancia@conteo:
  2015                           	opt callstack 0
  2016                           
  2017                           ; 2 bytes @ 0x25
  2018  000026                     	ds	1
  2019  000027                     ___flmul@sign:
  2020                           	opt callstack 0
  2021                           
  2022                           ; 1 bytes @ 0x26
  2023  000027                     	ds	1
  2024  000028                     ___flmul@aexp:
  2025                           	opt callstack 0
  2026  000028                     map@in_max:
  2027                           	opt callstack 0
  2028  000028                     _UART_init$1825:
  2029                           	opt callstack 0
  2030                           
  2031                           ; 4 bytes @ 0x27
  2032  000028                     	ds	1
  2033  000029                     ___flmul@grs:
  2034                           	opt callstack 0
  2035                           
  2036                           ; 4 bytes @ 0x28
  2037  000029                     	ds	2
  2038  00002B                     ??_dtoa:
  2039                           
  2040                           ; 1 bytes @ 0x2A
  2041  00002B                     	ds	1
  2042  00002C                     map@out_min:
  2043                           	opt callstack 0
  2044                           
  2045                           ; 4 bytes @ 0x2B
  2046  00002C                     	ds	1
  2047  00002D                     ___flmul@bexp:
  2048                           	opt callstack 0
  2049                           
  2050                           ; 1 bytes @ 0x2C
  2051  00002D                     	ds	1
  2052  00002E                     ___flmul@prod:
  2053                           	opt callstack 0
  2054                           
  2055                           ; 4 bytes @ 0x2D
  2056  00002E                     	ds	2
  2057  000030                     map@out_max:
  2058                           	opt callstack 0
  2059                           
  2060                           ; 4 bytes @ 0x2F
  2061  000030                     	ds	2
  2062  000032                     ___flmul@temp:
  2063                           	opt callstack 0
  2064                           
  2065                           ; 2 bytes @ 0x31
  2066  000032                     	ds	1
  2067  000033                     _dtoa$900:
  2068                           	opt callstack 0
  2069                           
  2070                           ; 2 bytes @ 0x32
  2071  000033                     	ds	1
  2072  000034                     ?___fladd:
  2073                           	opt callstack 0
  2074  000034                     ___flge@ff1:
  2075                           	opt callstack 0
  2076  000034                     ___fladd@b:
  2077                           	opt callstack 0
  2078                           
  2079                           ; 4 bytes @ 0x33
  2080  000034                     	ds	1
  2081  000035                     dtoa@p:
  2082                           	opt callstack 0
  2083                           
  2084                           ; 2 bytes @ 0x34
  2085  000035                     	ds	2
  2086  000037                     dtoa@w:
  2087                           	opt callstack 0
  2088                           
  2089                           ; 2 bytes @ 0x36
  2090  000037                     	ds	1
  2091  000038                     ___flge@ff2:
  2092                           	opt callstack 0
  2093  000038                     ___fladd@a:
  2094                           	opt callstack 0
  2095                           
  2096                           ; 4 bytes @ 0x37
  2097  000038                     	ds	1
  2098  000039                     dtoa@s:
  2099                           	opt callstack 0
  2100                           
  2101                           ; 2 bytes @ 0x38
  2102  000039                     	ds	2
  2103  00003B                     dtoa@n:
  2104                           	opt callstack 0
  2105                           
  2106                           ; 8 bytes @ 0x3A
  2107  00003B                     	ds	1
  2108  00003C                     ??___fladd:
  2109  00003C                     ??___flge:
  2110                           
  2111                           ; 1 bytes @ 0x3B
  2112  00003C                     	ds	4
  2113  000040                     ___fladd@signs:
  2114                           	opt callstack 0
  2115  000040                     hayCruce@caminosRecorrer:
  2116                           	opt callstack 0
  2117                           
  2118                           ; 2 bytes @ 0x3F
  2119  000040                     	ds	1
  2120  000041                     ___fladd@aexp:
  2121                           	opt callstack 0
  2122                           
  2123                           ; 1 bytes @ 0x40
  2124  000041                     	ds	1
  2125  000042                     hayCruce@investigandoCruce:
  2126                           	opt callstack 0
  2127  000042                     ___fladd@bexp:
  2128                           	opt callstack 0
  2129                           
  2130                           ; 1 bytes @ 0x41
  2131  000042                     	ds	1
  2132  000043                     hayCruce@contCaminos:
  2133                           	opt callstack 0
  2134  000043                     ___fladd@grs:
  2135                           	opt callstack 0
  2136  000043                     dtoa@i:
  2137                           	opt callstack 0
  2138                           
  2139                           ; 2 bytes @ 0x42
  2140  000043                     	ds	1
  2141  000044                     ?___fldiv:
  2142                           	opt callstack 0
  2143  000044                     ?___flsub:
  2144                           	opt callstack 0
  2145  000044                     ___flsub@b:
  2146                           	opt callstack 0
  2147  000044                     ___fldiv@b:
  2148                           	opt callstack 0
  2149                           
  2150                           ; 4 bytes @ 0x43
  2151  000044                     	ds	4
  2152  000048                     ___flsub@a:
  2153                           	opt callstack 0
  2154  000048                     ___fldiv@a:
  2155                           	opt callstack 0
  2156                           
  2157                           ; 4 bytes @ 0x47
  2158  000048                     	ds	4
  2159  00004C                     ??___fldiv:
  2160  00004C                     ?_roundf:
  2161                           	opt callstack 0
  2162  00004C                     roundf@x:
  2163                           	opt callstack 0
  2164                           
  2165                           ; 4 bytes @ 0x4B
  2166  00004C                     	ds	4
  2167  000050                     ??_roundf:
  2168  000050                     ?_floorf:
  2169                           	opt callstack 0
  2170  000050                     floorf@x:
  2171                           	opt callstack 0
  2172                           
  2173                           ; 4 bytes @ 0x4F
  2174  000050                     	ds	4
  2175  000054                     ??_forzarEspejeoIzquierda:
  2176  000054                     ??_forzarEspejeoDerecha:
  2177  000054                     decidirDireccion@direccionElegida:
  2178                           	opt callstack 0
  2179                           
  2180                           ; 1 bytes @ 0x53
  2181  000054                     	ds	1
  2182  000055                     
  2183                           ; 1 bytes @ 0x54
  2184 ;;
  2185 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2186 ;;
  2187 ;; *************** function _main *****************
  2188 ;; Defined at:
  2189 ;;		line 1362 in file "main.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  numMovimient    2    0        int 
  2194 ;;  iniciado        1    4[BANK2 ] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0
  2205 ;;      Locals:         0       0       0       3       0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2207 ;;      Totals:         0       0       0       3       0       0       0       0       0
  2208 ;;Total ram usage:        3 bytes
  2209 ;; Hardware stack levels required when called:   12
  2210 ;; This function calls:
  2211 ;;		_UART_init
  2212 ;;		_comportamientoBasico
  2213 ;;		_configPwm
  2214 ;;		_configurarAdc
  2215 ;;		_forzarParoAuto
  2216 ;;		_inicializarComportamientoBasico
  2217 ;;		_visualizarPasosRealizados
  2218 ;; This function is called by:
  2219 ;;		Startup code after reset
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text0
  2224  004C5A                     __ptext0:
  2225                           	opt callstack 0
  2226  004C5A                     _main:
  2227                           	opt callstack 19
  2228  004C5A                     
  2229                           ;main.c: 1364:     T_BOOL iniciado = 0;
  2230  004C5A  0E00               	movlw	0
  2231  004C5C  0102               	movlb	2	; () banked
  2232  004C5E  6FCC               	movwf	main@iniciado& (0+255),b
  2233  004C60                     
  2234                           ; BSR set to: 2
  2235                           ;main.c: 1368:     INTCONbits.GIE = 1;
  2236  004C60  8EF2               	bsf	242,7,c	;volatile
  2237  004C62                     
  2238                           ; BSR set to: 2
  2239                           ;main.c: 1369:     INTCONbits.INT0IE = 1;
  2240  004C62  88F2               	bsf	242,4,c	;volatile
  2241  004C64                     
  2242                           ; BSR set to: 2
  2243                           ;main.c: 1370:     INTCON2bits.INTEDG0 = 1;
  2244  004C64  8CF1               	bsf	241,6,c	;volatile
  2245  004C66                     
  2246                           ; BSR set to: 2
  2247                           ;main.c: 1372:     TRISD3 = 0;
  2248  004C66  9695               	bcf	3989,3,c	;volatile
  2249  004C68                     
  2250                           ; BSR set to: 2
  2251                           ;main.c: 1373:     TRISB1 = 1;
  2252  004C68  8293               	bsf	3987,1,c	;volatile
  2253  004C6A                     
  2254                           ; BSR set to: 2
  2255                           ;main.c: 1374:     TRISB2 = 1;
  2256  004C6A  8493               	bsf	3987,2,c	;volatile
  2257  004C6C                     
  2258                           ; BSR set to: 2
  2259                           ;main.c: 1375:     TRISB3 = 1;
  2260  004C6C  8693               	bsf	3987,3,c	;volatile
  2261  004C6E                     
  2262                           ; BSR set to: 2
  2263                           ;main.c: 1377:     TRISB4 = 0;
  2264  004C6E  9893               	bcf	3987,4,c	;volatile
  2265  004C70                     
  2266                           ; BSR set to: 2
  2267                           ;main.c: 1378:     TRISB5 = 0;
  2268  004C70  9A93               	bcf	3987,5,c	;volatile
  2269  004C72                     
  2270                           ; BSR set to: 2
  2271                           ;main.c: 1379:     TRISB6 = 0;
  2272  004C72  9C93               	bcf	3987,6,c	;volatile
  2273  004C74                     
  2274                           ; BSR set to: 2
  2275                           ;main.c: 1380:     TRISB7 = 0;
  2276  004C74  9E93               	bcf	3987,7,c	;volatile
  2277  004C76                     
  2278                           ; BSR set to: 2
  2279                           ;main.c: 1382:     TRISDbits.RD2 = 0;
  2280  004C76  9495               	bcf	149,2,c	;volatile
  2281  004C78                     
  2282                           ; BSR set to: 2
  2283                           ;main.c: 1383:     TRISB0 = 1;
  2284  004C78  8093               	bsf	3987,0,c	;volatile
  2285  004C7A                     
  2286                           ; BSR set to: 2
  2287                           ;main.c: 1385:     LATD3 = 0;
  2288  004C7A  968C               	bcf	3980,3,c	;volatile
  2289  004C7C                     
  2290                           ; BSR set to: 2
  2291                           ;main.c: 1386:     LATB4 = 0;
  2292  004C7C  988A               	bcf	3978,4,c	;volatile
  2293  004C7E                     
  2294                           ; BSR set to: 2
  2295                           ;main.c: 1387:     LATB5 = 0;
  2296  004C7E  9A8A               	bcf	3978,5,c	;volatile
  2297  004C80                     
  2298                           ; BSR set to: 2
  2299                           ;main.c: 1388:     LATB6 = 0;
  2300  004C80  9C8A               	bcf	3978,6,c	;volatile
  2301  004C82                     
  2302                           ; BSR set to: 2
  2303                           ;main.c: 1389:     LATB7 = 0;
  2304  004C82  9E8A               	bcf	3978,7,c	;volatile
  2305  004C84                     
  2306                           ; BSR set to: 2
  2307                           ;main.c: 1390:     LATD2 = 0;
  2308  004C84  948C               	bcf	3980,2,c	;volatile
  2309                           
  2310                           ;main.c: 1393:     T1CON = 0b00000000;
  2311  004C86  0E00               	movlw	0
  2312  004C88  6ECD               	movwf	205,c	;volatile
  2313  004C8A                     
  2314                           ; BSR set to: 2
  2315                           ;main.c: 1395:     configPwm(1);
  2316  004C8A  0E01               	movlw	1
  2317  004C8C  ECAD  F029         	call	_configPwm
  2318  004C90                     
  2319                           ;main.c: 1396:     configPwm(2);
  2320  004C90  0E02               	movlw	2
  2321  004C92  ECAD  F029         	call	_configPwm
  2322  004C96                     
  2323                           ;main.c: 1397:     configurarAdc();
  2324  004C96  EC2C  F02C         	call	_configurarAdc	;wreg free
  2325  004C9A                     
  2326                           ;main.c: 1399:     UART_init(9600);
  2327  004C9A  0E80               	movlw	128
  2328  004C9C  6E20               	movwf	UART_init@BAUD^0,c
  2329  004C9E  0E25               	movlw	37
  2330  004CA0  6E21               	movwf	(UART_init@BAUD+1)^0,c
  2331  004CA2  0E00               	movlw	0
  2332  004CA4  6E22               	movwf	(UART_init@BAUD+2)^0,c
  2333  004CA6  0E00               	movlw	0
  2334  004CA8  6E23               	movwf	(UART_init@BAUD+3)^0,c
  2335  004CAA  EC7F  F027         	call	_UART_init	;wreg free
  2336  004CAE                     l10927:
  2337                           
  2338                           ;main.c: 1404:         if (!pausa) {
  2339  004CAE  0101               	movlb	1	; () banked
  2340  004CB0  51FB               	movf	_pausa& (0+255),w,b
  2341  004CB2  A4D8               	btfss	status,2,c
  2342  004CB4  EF5E  F026         	goto	u12111
  2343  004CB8  EF60  F026         	goto	u12110
  2344  004CBC                     u12111:
  2345  004CBC  EF73  F026         	goto	l10943
  2346  004CC0                     u12110:
  2347  004CC0                     
  2348                           ; BSR set to: 1
  2349                           ;main.c: 1406:             if (!iniciado) {
  2350  004CC0  0102               	movlb	2	; () banked
  2351  004CC2  51CC               	movf	main@iniciado& (0+255),w,b
  2352  004CC4  A4D8               	btfss	status,2,c
  2353  004CC6  EF67  F026         	goto	u12121
  2354  004CCA  EF69  F026         	goto	u12120
  2355  004CCE                     u12121:
  2356  004CCE  EF6D  F026         	goto	l10939
  2357  004CD2                     u12120:
  2358  004CD2                     
  2359                           ; BSR set to: 2
  2360                           ;main.c: 1407:                 iniciado = 1;
  2361  004CD2  0E01               	movlw	1
  2362  004CD4  6FCC               	movwf	main@iniciado& (0+255),b
  2363  004CD6                     
  2364                           ; BSR set to: 2
  2365                           ;main.c: 1408:                 inicializarComportamientoBasico();
  2366  004CD6  ECFD  F029         	call	_inicializarComportamientoBasico	;wreg free
  2367  004CDA                     l10939:
  2368                           
  2369                           ;main.c: 1419:             comportamientoBasico();
  2370  004CDA  ECD1  F010         	call	_comportamientoBasico	;wreg free
  2371  004CDE                     
  2372                           ;main.c: 1420:             forzarParoAuto();
  2373  004CDE  EC14  F02C         	call	_forzarParoAuto	;wreg free
  2374                           
  2375                           ;main.c: 1422:         } else {
  2376  004CE2  EF57  F026         	goto	l10927
  2377  004CE6                     l10943:
  2378                           
  2379                           ; BSR set to: 1
  2380                           ;main.c: 1424:             iniciado = 0;
  2381  004CE6  0E00               	movlw	0
  2382  004CE8  0102               	movlb	2	; () banked
  2383  004CEA  6FCC               	movwf	main@iniciado& (0+255),b
  2384  004CEC  EF57  F026         	goto	l10927
  2385  004CF0  EF07  F000         	goto	start
  2386  004CF4                     __end_of_main:
  2387                           	opt callstack 0
  2388                           
  2389 ;; *************** function _visualizarPasosRealizados *****************
  2390 ;; Defined at:
  2391 ;;		line 194 in file "main.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  numMovimient    2  155[BANK0 ] unsigned int 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2405 ;;      Params:         0       2       0       0       0       0       0       0       0
  2406 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2407 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2408 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2409 ;;Total ram usage:        4 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:   10
  2412 ;; This function calls:
  2413 ;;		_UART_printf
  2414 ;;		_sprintf
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text1
  2421  004A58                     __ptext1:
  2422                           	opt callstack 0
  2423  004A58                     _visualizarPasosRealizados:
  2424                           	opt callstack 20
  2425  004A58                     
  2426                           ;main.c: 196:     switch (mouse.curr_state) {
  2427  004A58  EF4E  F025         	goto	l10565
  2428  004A5C                     l10555:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;main.c: 198:             UART_printf("Enfrente\n");
  2432  004A5C  0ED2               	movlw	low STR_7
  2433  004A5E  6E07               	movwf	UART_printf@cadena^0,c
  2434  004A60  0E7F               	movlw	high STR_7
  2435  004A62  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2436  004A64  EC51  F028         	call	_UART_printf	;wreg free
  2437                           
  2438                           ;main.c: 199:             break;
  2439  004A68  EF6C  F025         	goto	l10567
  2440  004A6C                     l10557:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;main.c: 202:             UART_printf("Izquierda\n");
  2444  004A6C  0EC7               	movlw	low STR_8
  2445  004A6E  6E07               	movwf	UART_printf@cadena^0,c
  2446  004A70  0E7F               	movlw	high STR_8
  2447  004A72  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2448  004A74  EC51  F028         	call	_UART_printf	;wreg free
  2449                           
  2450                           ;main.c: 203:             break;
  2451  004A78  EF6C  F025         	goto	l10567
  2452  004A7C                     l10559:
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;main.c: 206:             UART_printf("Derecha\n");
  2456  004A7C  0EDC               	movlw	low STR_9
  2457  004A7E  6E07               	movwf	UART_printf@cadena^0,c
  2458  004A80  0E7F               	movlw	high STR_9
  2459  004A82  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2460  004A84  EC51  F028         	call	_UART_printf	;wreg free
  2461                           
  2462                           ;main.c: 207:             break;
  2463  004A88  EF6C  F025         	goto	l10567
  2464  004A8C                     l10561:
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;main.c: 210:             UART_printf("Alto\n");
  2468  004A8C  0EE5               	movlw	low STR_10
  2469  004A8E  6E07               	movwf	UART_printf@cadena^0,c
  2470  004A90  0E7F               	movlw	high STR_10
  2471  004A92  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2472  004A94  EC51  F028         	call	_UART_printf	;wreg free
  2473                           
  2474                           ;main.c: 211:             break;
  2475  004A98  EF6C  F025         	goto	l10567
  2476  004A9C                     l10565:
  2477  004A9C  5057               	movf	_mouse^0,w,c
  2478  004A9E  0100               	movlb	0	; () banked
  2479  004AA0  6FFD               	movwf	??_visualizarPasosRealizados& (0+255),b
  2480  004AA2  6BFE               	clrf	(??_visualizarPasosRealizados+1)& (0+255),b
  2481                           
  2482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2483                           ; Switch size 1, requested type "simple"
  2484                           ; Number of cases is 1, Range of values is 0 to 0
  2485                           ; switch strategies available:
  2486                           ; Name         Instructions Cycles
  2487                           ; simple_byte            4     3 (average)
  2488                           ;	Chosen strategy is simple_byte
  2489  004AA4  51FE               	movf	(??_visualizarPasosRealizados+1)& (0+255),w,b
  2490  004AA6  0A00               	xorlw	0	; case 0
  2491  004AA8  B4D8               	btfsc	status,2,c
  2492  004AAA  EF59  F025         	goto	l11275
  2493  004AAE  EF6C  F025         	goto	l10567
  2494  004AB2                     l11275:
  2495                           
  2496                           ; BSR set to: 0
  2497                           ; Switch size 1, requested type "simple"
  2498                           ; Number of cases is 4, Range of values is 1 to 4
  2499                           ; switch strategies available:
  2500                           ; Name         Instructions Cycles
  2501                           ; simple_byte           13     7 (average)
  2502                           ;	Chosen strategy is simple_byte
  2503  004AB2  51FD               	movf	??_visualizarPasosRealizados& (0+255),w,b
  2504  004AB4  0A01               	xorlw	1	; case 1
  2505  004AB6  B4D8               	btfsc	status,2,c
  2506  004AB8  EF2E  F025         	goto	l10555
  2507  004ABC  0A03               	xorlw	3	; case 2
  2508  004ABE  B4D8               	btfsc	status,2,c
  2509  004AC0  EF36  F025         	goto	l10557
  2510  004AC4  0A01               	xorlw	1	; case 3
  2511  004AC6  B4D8               	btfsc	status,2,c
  2512  004AC8  EF3E  F025         	goto	l10559
  2513  004ACC  0A07               	xorlw	7	; case 4
  2514  004ACE  B4D8               	btfsc	status,2,c
  2515  004AD0  EF46  F025         	goto	l10561
  2516  004AD4  EF6C  F025         	goto	l10567
  2517  004AD8                     l10567:
  2518                           
  2519                           ;main.c: 214:     sprintf(buffer, "\rMovimientos Realizados = %d\r\n\n", numMovimientos)
      +                          ;
  2520  004AD8  0E92               	movlw	low _buffer
  2521  004ADA  0100               	movlb	0	; () banked
  2522  004ADC  6FE7               	movwf	sprintf@s& (0+255),b
  2523  004ADE  0E01               	movlw	high _buffer
  2524  004AE0  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  2525  004AE2  0ECA               	movlw	low STR_11
  2526  004AE4  6FE9               	movwf	sprintf@fmt& (0+255),b
  2527  004AE6  0E7E               	movlw	high STR_11
  2528  004AE8  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  2529  004AEA  C0FB  F0EB         	movff	visualizarPasosRealizados@numMovimientos,?_sprintf+4
  2530  004AEE  C0FC  F0EC         	movff	visualizarPasosRealizados@numMovimientos+1,?_sprintf+5
  2531  004AF2  EC5B  F029         	call	_sprintf	;wreg free
  2532  004AF6                     
  2533                           ;main.c: 215:     UART_printf(buffer);
  2534  004AF6  0E92               	movlw	low _buffer
  2535  004AF8  6E07               	movwf	UART_printf@cadena^0,c
  2536  004AFA  0E01               	movlw	high _buffer
  2537  004AFC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2538  004AFE  EC51  F028         	call	_UART_printf	;wreg free
  2539  004B02  0012               	return		;funcret
  2540  004B04                     __end_of_visualizarPasosRealizados:
  2541                           	opt callstack 0
  2542                           
  2543 ;; *************** function _inicializarComportamientoBasico *****************
  2544 ;; Defined at:
  2545 ;;		line 233 in file "main.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2559 ;;      Params:         0       0       0       0       0       0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2562 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2563 ;;Total ram usage:        0 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    6
  2566 ;; This function calls:
  2567 ;;		_dameDistancia
  2568 ;;		_velocidadEstandar
  2569 ;; This function is called by:
  2570 ;;		_main
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text2
  2575  0053FA                     __ptext2:
  2576                           	opt callstack 0
  2577  0053FA                     _inicializarComportamientoBasico:
  2578                           	opt callstack 24
  2579  0053FA                     
  2580                           ;main.c: 235:     mouse.curr_state = ENFRENTE;
  2581  0053FA  0E01               	movlw	1
  2582  0053FC  6E57               	movwf	_mouse^0,c
  2583  0053FE                     
  2584                           ;main.c: 237:     oldSensorDerecha = dameDistancia(DERECHA);
  2585  0053FE  0E03               	movlw	3
  2586  005400  EC84  F01F         	call	_dameDistancia
  2587  005404  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
  2588  005408  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  2589  00540C  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  2590  005410  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  2591  005414                     
  2592                           ;main.c: 238:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  2593  005414  0E02               	movlw	2
  2594  005416  EC84  F01F         	call	_dameDistancia
  2595  00541A  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  2596  00541E  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  2597  005422  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  2598  005426  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  2599  00542A                     
  2600                           ;main.c: 239:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  2601  00542A  0E01               	movlw	1
  2602  00542C  EC84  F01F         	call	_dameDistancia
  2603  005430  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  2604  005434  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  2605  005438  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  2606  00543C  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  2607  005440                     
  2608                           ;main.c: 241:     velocidadEstandar();
  2609  005440  EC99  F02B         	call	_velocidadEstandar	;wreg free
  2610  005444  0012               	return		;funcret
  2611  005446                     __end_of_inicializarComportamientoBasico:
  2612                           	opt callstack 0
  2613                           
  2614 ;; *************** function _configurarAdc *****************
  2615 ;; Defined at:
  2616 ;;		line 7 in file "./adc.h"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2630 ;;      Params:         0       0       0       0       0       0       0       0       0
  2631 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2633 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2634 ;;Total ram usage:        0 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    2
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text3
  2645  005858                     __ptext3:
  2646                           	opt callstack 0
  2647  005858                     _configurarAdc:
  2648                           	opt callstack 28
  2649  005858                     
  2650                           ;./adc.h: 8:     ADCON1 = 0b00001110;
  2651  005858  0E0E               	movlw	14
  2652  00585A  6EC1               	movwf	193,c	;volatile
  2653                           
  2654                           ;./adc.h: 9:     ADCON2 = 0b10100101;
  2655  00585C  0EA5               	movlw	165
  2656  00585E  6EC0               	movwf	192,c	;volatile
  2657  005860  0012               	return		;funcret
  2658  005862                     __end_of_configurarAdc:
  2659                           	opt callstack 0
  2660                           
  2661 ;; *************** function _configPwm *****************
  2662 ;; Defined at:
  2663 ;;		line 47 in file "./pwm.h"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  channel         1    wreg     unsigned char 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  channel         1    7[COMRAM] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2677 ;;      Params:         0       0       0       0       0       0       0       0       0
  2678 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2679 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2680 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2681 ;;Total ram usage:        3 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    2
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_main
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text4
  2692  00535A                     __ptext4:
  2693                           	opt callstack 0
  2694  00535A                     _configPwm:
  2695                           	opt callstack 28
  2696                           
  2697                           ;incstack = 0
  2698                           ;configPwm@channel stored from wreg
  2699  00535A  6E08               	movwf	configPwm@channel^0,c
  2700  00535C                     
  2701                           ;./pwm.h: 56:         T2CKPS0 = 1;
  2702  00535C  80CA               	bsf	4042,0,c	;volatile
  2703                           
  2704                           ;./pwm.h: 57:         T2CKPS1 = 1;
  2705  00535E  82CA               	bsf	4042,1,c	;volatile
  2706  005360                     
  2707                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
  2708  005360  0E7C               	movlw	124
  2709  005362  6ECB               	movwf	203,c	;volatile
  2710                           
  2711                           ;./pwm.h: 63:     switch (channel) {
  2712  005364  EFBE  F029         	goto	l10521
  2713  005368                     l157:
  2714                           
  2715                           ;./pwm.h: 66:             TRISC2 = 0;
  2716  005368  9494               	bcf	3988,2,c	;volatile
  2717                           
  2718                           ;./pwm.h: 67:             CCP1M3 = 1;
  2719  00536A  86BD               	bsf	4029,3,c	;volatile
  2720                           
  2721                           ;./pwm.h: 68:             CCP1M2 = 1;
  2722  00536C  84BD               	bsf	4029,2,c	;volatile
  2723                           
  2724                           ;./pwm.h: 71:             break;
  2725  00536E  EFD3  F029         	goto	l158
  2726  005372                     l159:
  2727                           
  2728                           ;./pwm.h: 74:             TRISC1 = 0;
  2729  005372  9294               	bcf	3988,1,c	;volatile
  2730                           
  2731                           ;./pwm.h: 75:             CCP2M3 = 1;
  2732  005374  86BA               	bsf	4026,3,c	;volatile
  2733                           
  2734                           ;./pwm.h: 76:             CCP2M2 = 1;
  2735  005376  84BA               	bsf	4026,2,c	;volatile
  2736                           
  2737                           ;./pwm.h: 77:             break;
  2738  005378  EFD3  F029         	goto	l158
  2739  00537C                     l10521:
  2740  00537C  5008               	movf	configPwm@channel^0,w,c
  2741  00537E  6E06               	movwf	??_configPwm^0,c
  2742  005380  6A07               	clrf	(??_configPwm+1)^0,c
  2743                           
  2744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2745                           ; Switch size 1, requested type "simple"
  2746                           ; Number of cases is 1, Range of values is 0 to 0
  2747                           ; switch strategies available:
  2748                           ; Name         Instructions Cycles
  2749                           ; simple_byte            4     3 (average)
  2750                           ;	Chosen strategy is simple_byte
  2751  005382  5007               	movf	(??_configPwm+1)^0,w,c
  2752  005384  0A00               	xorlw	0	; case 0
  2753  005386  B4D8               	btfsc	status,2,c
  2754  005388  EFC8  F029         	goto	l11277
  2755  00538C  EFD3  F029         	goto	l158
  2756  005390                     l11277:
  2757                           
  2758                           ; Switch size 1, requested type "simple"
  2759                           ; Number of cases is 2, Range of values is 1 to 2
  2760                           ; switch strategies available:
  2761                           ; Name         Instructions Cycles
  2762                           ; simple_byte            7     4 (average)
  2763                           ;	Chosen strategy is simple_byte
  2764  005390  5006               	movf	??_configPwm^0,w,c
  2765  005392  0A01               	xorlw	1	; case 1
  2766  005394  B4D8               	btfsc	status,2,c
  2767  005396  EFB4  F029         	goto	l157
  2768  00539A  0A03               	xorlw	3	; case 2
  2769  00539C  B4D8               	btfsc	status,2,c
  2770  00539E  EFB9  F029         	goto	l159
  2771  0053A2  EFD3  F029         	goto	l158
  2772  0053A6                     l158:
  2773                           
  2774                           ;./pwm.h: 81:     TMR2ON = 1;
  2775  0053A6  84CA               	bsf	4042,2,c	;volatile
  2776  0053A8  0012               	return		;funcret
  2777  0053AA                     __end_of_configPwm:
  2778                           	opt callstack 0
  2779                           
  2780 ;; *************** function _comportamientoBasico *****************
  2781 ;; Defined at:
  2782 ;;		line 245 in file "main.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  direccionEle    1  158[BANK0 ] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0
  2797 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       2       0       0       0       0       0
  2799 ;;      Totals:         0       1       0       2       0       0       0       0       0
  2800 ;;Total ram usage:        3 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:   11
  2803 ;; This function calls:
  2804 ;;		_PID
  2805 ;;		_UART_printf
  2806 ;;		_decidirDireccion
  2807 ;;		_forzarParoAuto
  2808 ;;		_leerSensores
  2809 ;;		_limpiarMovimientos
  2810 ;;		_moverCarrito
  2811 ;;		_probarMapeoDireccionCruces
  2812 ;;		_regresarAlCruce
  2813 ;;		_velocidadBaja
  2814 ;;		_velocidadEstandar
  2815 ;; This function is called by:
  2816 ;;		_main
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text5
  2821  0021A2                     __ptext5:
  2822                           	opt callstack 0
  2823  0021A2                     _comportamientoBasico:
  2824                           	opt callstack 19
  2825  0021A2                     
  2826                           ;main.c: 247:     static T_UBYTE espejearCarroY = 0;;main.c: 248:     static T_UBYTE car
      +                          roEspejeado = 0;;main.c: 249:     static T_UBYTE movimientosRealizados[200];;main.c: 250
      +                          :     static T_UBYTE caminoFinal[20];;main.c: 251:     static T_UINT numMovimientos = 0;
      +                          ;main.c: 252:     static T_UBYTE mapear = 0;;main.c: 253:     static T_UBYTE cruceDetect
      +                          ado = 0;;main.c: 254:     static T_UBYTE caminosRecorrer[3];;main.c: 255:     static T_U
      +                          BYTE investigandoCruce = 0;;main.c: 256:     static T_UBYTE posicionInvCruce = 0;
  2827  0021A2  0E00               	movlw	0
  2828  0021A4  0100               	movlb	0	; () banked
  2829  0021A6  6FFE               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  2830  0021A8                     
  2831                           ; BSR set to: 0
  2832                           ;main.c: 264:     moverCarrito(espejearCarroY, &carroEspejeado, &avanceRectoLargo);
  2833  0021A8  0EE5               	movlw	low comportamientoBasico@carroEspejeado
  2834  0021AA  6F88               	movwf	moverCarrito@carroEspejeado& (0+255),b
  2835  0021AC  0E01               	movlw	high comportamientoBasico@carroEspejeado
  2836  0021AE  6F89               	movwf	(moverCarrito@carroEspejeado+1)& (0+255),b
  2837  0021B0  0EDD               	movlw	low comportamientoBasico@avanceRectoLargo
  2838  0021B2  6F8A               	movwf	moverCarrito@avanceRectoLargo& (0+255),b
  2839  0021B4  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  2840  0021B6  6F8B               	movwf	(moverCarrito@avanceRectoLargo+1)& (0+255),b
  2841  0021B8  0101               	movlb	1	; () banked
  2842  0021BA  5138               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  2843  0021BC  ECBB  F020         	call	_moverCarrito
  2844  0021C0                     
  2845                           ;main.c: 266:     if (!llegoDestino) {
  2846  0021C0  0100               	movlb	0	; () banked
  2847  0021C2  51FF               	movf	_llegoDestino& (0+255),w,b
  2848  0021C4  A4D8               	btfss	status,2,c
  2849  0021C6  EFE7  F010         	goto	u11801
  2850  0021CA  EFE9  F010         	goto	u11800
  2851  0021CE                     u11801:
  2852  0021CE  EF9D  F012         	goto	l10717
  2853  0021D2                     u11800:
  2854  0021D2                     
  2855                           ; BSR set to: 0
  2856                           ;main.c: 268:         if (!caminoEncontrado) {
  2857  0021D2  5059               	movf	_caminoEncontrado^0,w,c
  2858  0021D4  A4D8               	btfss	status,2,c
  2859  0021D6  EFEF  F010         	goto	u11811
  2860  0021DA  EFF1  F010         	goto	u11810
  2861  0021DE                     u11811:
  2862  0021DE  EF1C  F011         	goto	l10607
  2863  0021E2                     u11810:
  2864  0021E2                     
  2865                           ; BSR set to: 0
  2866                           ;main.c: 272:             if (mapear)
  2867  0021E2  0101               	movlb	1	; () banked
  2868  0021E4  51E4               	movf	comportamientoBasico@mapear& (0+255),w,b
  2869  0021E6  B4D8               	btfsc	status,2,c
  2870  0021E8  EFF8  F010         	goto	u11821
  2871  0021EC  EFFA  F010         	goto	u11820
  2872  0021F0                     u11821:
  2873  0021F0  EF1C  F011         	goto	l10607
  2874  0021F4                     u11820:
  2875  0021F4                     
  2876                           ; BSR set to: 1
  2877                           ;main.c: 273:             {;main.c: 274:                 if (numMovimientos < 200)
  2878  0021F4  51DC               	movf	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2879  0021F6  E107               	bnz	u11831
  2880  0021F8  0EC8               	movlw	200
  2881  0021FA  5DDB               	subwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2882  0021FC  B0D8               	btfsc	status,0,c
  2883  0021FE  EF03  F011         	goto	u11831
  2884  002202  EF05  F011         	goto	u11830
  2885  002206                     u11831:
  2886  002206  EF11  F011         	goto	l10601
  2887  00220A                     u11830:
  2888  00220A                     
  2889                           ; BSR set to: 1
  2890                           ;main.c: 275:                     movimientosRealizados[numMovimientos++] = mouse.curr_s
      +                          tate;
  2891  00220A  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  2892  00220C  25DB               	addwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2893  00220E  6ED9               	movwf	fsr2l,c
  2894  002210  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  2895  002212  21DC               	addwfc	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2896  002214  6EDA               	movwf	fsr2h,c
  2897  002216  C057  FFDF         	movff	_mouse,indf2
  2898  00221A                     
  2899                           ; BSR set to: 1
  2900  00221A  4BDB               	infsnz	comportamientoBasico@numMovimientos& (0+255),f,b
  2901  00221C  2BDC               	incf	(comportamientoBasico@numMovimientos+1)& (0+255),f,b
  2902  00221E  EF1C  F011         	goto	l10607
  2903  002222                     l10601:
  2904                           
  2905                           ; BSR set to: 1
  2906                           ;main.c: 277:                     UART_printf("\n\nOVERFLOW en el mapeo de pasos Realiza
      +                          dos para cruce\n\n");
  2907  002222  0E7B               	movlw	low STR_12
  2908  002224  6E07               	movwf	UART_printf@cadena^0,c
  2909  002226  0E7D               	movlw	high STR_12
  2910  002228  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2911  00222A  EC51  F028         	call	_UART_printf	;wreg free
  2912  00222E                     
  2913                           ;main.c: 278:                     forzarParoAuto();
  2914  00222E  EC14  F02C         	call	_forzarParoAuto	;wreg free
  2915  002232                     
  2916                           ;main.c: 279:                     pausa = 1;
  2917  002232  0E01               	movlw	1
  2918  002234  0101               	movlb	1	; () banked
  2919  002236  6FFB               	movwf	_pausa& (0+255),b
  2920  002238                     l10607:
  2921                           
  2922                           ;main.c: 307:         leerSensores();
  2923  002238  EC14  F01E         	call	_leerSensores	;wreg free
  2924  00223C                     
  2925                           ;main.c: 309:         direccionElegida = decidirDireccion(caminosRecorrer, &investigando
      +                          Cruce,
  2926  00223C  0ED8               	movlw	low comportamientoBasico@caminosRecorrer
  2927  00223E  0101               	movlb	1	; () banked
  2928  002240  6FE6               	movwf	decidirDireccion@caminosRecorrer& (0+255),b
  2929  002242  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  2930  002244  6FE7               	movwf	(decidirDireccion@caminosRecorrer+1)& (0+255),b
  2931  002246  0EE2               	movlw	low comportamientoBasico@investigandoCruce
  2932  002248  6FE8               	movwf	decidirDireccion@investigandoCruce& (0+255),b
  2933  00224A  0E01               	movlw	high comportamientoBasico@investigandoCruce
  2934  00224C  6FE9               	movwf	(decidirDireccion@investigandoCruce+1)& (0+255),b
  2935  00224E  0EE1               	movlw	low comportamientoBasico@posicionInvCruce
  2936  002250  6FEA               	movwf	decidirDireccion@posicionInvCruce& (0+255),b
  2937  002252  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  2938  002254  6FEB               	movwf	(decidirDireccion@posicionInvCruce+1)& (0+255),b
  2939  002256  0EE0               	movlw	low comportamientoBasico@contCaminosRecorridos
  2940  002258  6FEC               	movwf	decidirDireccion@contCaminosRecorridos& (0+255),b
  2941  00225A  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  2942  00225C  6FED               	movwf	(decidirDireccion@contCaminosRecorridos+1)& (0+255),b
  2943  00225E  0EDF               	movlw	low comportamientoBasico@caminoActual
  2944  002260  6FEE               	movwf	decidirDireccion@caminoActual& (0+255),b
  2945  002262  0E01               	movlw	high comportamientoBasico@caminoActual
  2946  002264  6FEF               	movwf	(decidirDireccion@caminoActual+1)& (0+255),b
  2947  002266  0EDE               	movlw	low comportamientoBasico@cambioOrientacionCarro
  2948  002268  6FF0               	movwf	decidirDireccion@cambioOrientacionCarro& (0+255),b
  2949  00226A  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  2950  00226C  6FF1               	movwf	(decidirDireccion@cambioOrientacionCarro+1)& (0+255),b
  2951  00226E  0EE4               	movlw	low comportamientoBasico@mapear
  2952  002270  6FF2               	movwf	decidirDireccion@mapear& (0+255),b
  2953  002272  0E01               	movlw	high comportamientoBasico@mapear
  2954  002274  6FF3               	movwf	(decidirDireccion@mapear+1)& (0+255),b
  2955  002276  0EE3               	movlw	low comportamientoBasico@cruceDetectado
  2956  002278  6FF4               	movwf	decidirDireccion@cruceDetectado& (0+255),b
  2957  00227A  0E01               	movlw	high comportamientoBasico@cruceDetectado
  2958  00227C  6FF5               	movwf	(decidirDireccion@cruceDetectado+1)& (0+255),b
  2959  00227E  0EDD               	movlw	low comportamientoBasico@avanceRectoLargo
  2960  002280  6FF6               	movwf	decidirDireccion@avanceRectoLargo& (0+255),b
  2961  002282  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  2962  002284  6FF7               	movwf	(decidirDireccion@avanceRectoLargo+1)& (0+255),b
  2963  002286  0EC4               	movlw	low comportamientoBasico@caminoFinal
  2964  002288  6FF8               	movwf	decidirDireccion@caminoFinal& (0+255),b
  2965  00228A  0E01               	movlw	high comportamientoBasico@caminoFinal
  2966  00228C  6FF9               	movwf	(decidirDireccion@caminoFinal+1)& (0+255),b
  2967  00228E  ECE6  F005         	call	_decidirDireccion	;wreg free
  2968  002292  0100               	movlb	0	; () banked
  2969  002294  6FFE               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  2970  002296  EF9D  F012         	goto	l10717
  2971  00229A                     l10611:
  2972                           
  2973                           ; BSR set to: 2
  2974                           ;main.c: 323:                     mapear = 0;
  2975  00229A  0E00               	movlw	0
  2976  00229C  0101               	movlb	1	; () banked
  2977  00229E  6FE4               	movwf	comportamientoBasico@mapear& (0+255),b
  2978                           
  2979                           ;main.c: 324:                     espejearCarroY = 1;
  2980  0022A0  0E01               	movlw	1
  2981  0022A2  6F38               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  2982                           
  2983                           ;main.c: 325:                     mouse.Next_state = IZQUIERDA;
  2984  0022A4  0E02               	movlw	2
  2985  0022A6  6E58               	movwf	(_mouse+1)^0,c
  2986                           
  2987                           ;main.c: 326:                     break;
  2988  0022A8  EFBB  F012         	goto	l378
  2989  0022AC                     l10613:
  2990                           
  2991                           ; BSR set to: 2
  2992                           ;main.c: 330:                     if (!paredEnfrente && !investigandoCruce)
  2993  0022AC  0101               	movlb	1	; () banked
  2994  0022AE  513B               	movf	_paredEnfrente& (0+255),w,b
  2995  0022B0  A4D8               	btfss	status,2,c
  2996  0022B2  EF5D  F011         	goto	u11841
  2997  0022B6  EF5F  F011         	goto	u11840
  2998  0022BA                     u11841:
  2999  0022BA  EF6B  F011         	goto	l10619
  3000  0022BE                     u11840:
  3001  0022BE                     
  3002                           ; BSR set to: 1
  3003  0022BE  51E2               	movf	comportamientoBasico@investigandoCruce& (0+255),w,b
  3004  0022C0  A4D8               	btfss	status,2,c
  3005  0022C2  EF65  F011         	goto	u11851
  3006  0022C6  EF67  F011         	goto	u11850
  3007  0022CA                     u11851:
  3008  0022CA  EF6B  F011         	goto	l10619
  3009  0022CE                     u11850:
  3010  0022CE                     
  3011                           ; BSR set to: 1
  3012                           ;main.c: 331:                         velocidadBaja();
  3013  0022CE  ECAC  F02B         	call	_velocidadBaja	;wreg free
  3014  0022D2  EF6D  F011         	goto	l10621
  3015  0022D6                     l10619:
  3016                           
  3017                           ; BSR set to: 1
  3018                           ;main.c: 333:                         PID();
  3019  0022D6  ECD4  F017         	call	_PID	;wreg free
  3020  0022DA                     l10621:
  3021                           
  3022                           ;main.c: 335:                     mouse.Next_state = ENFRENTE;
  3023  0022DA  0E01               	movlw	1
  3024  0022DC  6E58               	movwf	(_mouse+1)^0,c
  3025                           
  3026                           ;main.c: 336:                     break;
  3027  0022DE  EFBB  F012         	goto	l378
  3028  0022E2                     l10623:
  3029                           
  3030                           ; BSR set to: 2
  3031                           ;main.c: 339:                     velocidadEstandar();
  3032  0022E2  EC99  F02B         	call	_velocidadEstandar	;wreg free
  3033  0022E6                     l10625:
  3034                           
  3035                           ;main.c: 340:                     mouse.Next_state = IZQUIERDA;
  3036  0022E6  0E02               	movlw	2
  3037  0022E8  6E58               	movwf	(_mouse+1)^0,c
  3038                           
  3039                           ;main.c: 341:                     break;
  3040  0022EA  EFBB  F012         	goto	l378
  3041  0022EE                     l10627:
  3042                           
  3043                           ; BSR set to: 2
  3044                           ;main.c: 344:                     velocidadEstandar();
  3045  0022EE  EC99  F02B         	call	_velocidadEstandar	;wreg free
  3046  0022F2                     
  3047                           ;main.c: 345:                     mouse.Next_state = DERECHA;
  3048  0022F2  0E03               	movlw	3
  3049  0022F4  6E58               	movwf	(_mouse+1)^0,c
  3050                           
  3051                           ;main.c: 346:                     break;
  3052  0022F6  EFBB  F012         	goto	l378
  3053  0022FA                     l10631:
  3054                           
  3055                           ;main.c: 350:                     mouse.Next_state = ALTO;
  3056  0022FA  0E04               	movlw	4
  3057  0022FC  6E58               	movwf	(_mouse+1)^0,c
  3058                           
  3059                           ;main.c: 351:                     break;
  3060  0022FE  EFBB  F012         	goto	l378
  3061  002302                     l10635:
  3062                           
  3063                           ; BSR set to: 2
  3064  002302  0100               	movlb	0	; () banked
  3065  002304  51FE               	movf	comportamientoBasico@direccionElegida& (0+255),w,b
  3066  002306  0102               	movlb	2	; () banked
  3067  002308  6FC8               	movwf	??_comportamientoBasico& (0+255),b
  3068  00230A  6BC9               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3069                           
  3070                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3071                           ; Switch size 1, requested type "simple"
  3072                           ; Number of cases is 1, Range of values is 0 to 0
  3073                           ; switch strategies available:
  3074                           ; Name         Instructions Cycles
  3075                           ; simple_byte            4     3 (average)
  3076                           ;	Chosen strategy is simple_byte
  3077  00230C  51C9               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3078  00230E  0A00               	xorlw	0	; case 0
  3079  002310  B4D8               	btfsc	status,2,c
  3080  002312  EF8D  F011         	goto	l11279
  3081  002316  EFBB  F012         	goto	l378
  3082  00231A                     l11279:
  3083                           
  3084                           ; BSR set to: 2
  3085                           ; Switch size 1, requested type "simple"
  3086                           ; Number of cases is 5, Range of values is 0 to 4
  3087                           ; switch strategies available:
  3088                           ; Name         Instructions Cycles
  3089                           ; simple_byte           16     9 (average)
  3090                           ;	Chosen strategy is simple_byte
  3091  00231A  51C8               	movf	??_comportamientoBasico& (0+255),w,b
  3092  00231C  0A00               	xorlw	0	; case 0
  3093  00231E  B4D8               	btfsc	status,2,c
  3094  002320  EF4D  F011         	goto	l10611
  3095  002324  0A01               	xorlw	1	; case 1
  3096  002326  B4D8               	btfsc	status,2,c
  3097  002328  EF56  F011         	goto	l10613
  3098  00232C  0A03               	xorlw	3	; case 2
  3099  00232E  B4D8               	btfsc	status,2,c
  3100  002330  EF71  F011         	goto	l10623
  3101  002334  0A01               	xorlw	1	; case 3
  3102  002336  B4D8               	btfsc	status,2,c
  3103  002338  EF77  F011         	goto	l10627
  3104  00233C  0A07               	xorlw	7	; case 4
  3105  00233E  B4D8               	btfsc	status,2,c
  3106  002340  EF7D  F011         	goto	l10631
  3107  002344  EFBB  F012         	goto	l378
  3108  002348                     l10637:
  3109                           
  3110                           ; BSR set to: 2
  3111                           ;main.c: 359:             if (carroEspejeado && espejearCarroY && !llegoDestino) {
  3112  002348  0101               	movlb	1	; () banked
  3113  00234A  51E5               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3114  00234C  B4D8               	btfsc	status,2,c
  3115  00234E  EFAB  F011         	goto	u11861
  3116  002352  EFAD  F011         	goto	u11860
  3117  002356                     u11861:
  3118  002356  EFE0  F011         	goto	l10657
  3119  00235A                     u11860:
  3120  00235A                     
  3121                           ; BSR set to: 1
  3122  00235A  5138               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3123  00235C  B4D8               	btfsc	status,2,c
  3124  00235E  EFB3  F011         	goto	u11871
  3125  002362  EFB5  F011         	goto	u11870
  3126  002366                     u11871:
  3127  002366  EFE0  F011         	goto	l10657
  3128  00236A                     u11870:
  3129  00236A                     
  3130                           ; BSR set to: 1
  3131  00236A  0100               	movlb	0	; () banked
  3132  00236C  51FF               	movf	_llegoDestino& (0+255),w,b
  3133  00236E  A4D8               	btfss	status,2,c
  3134  002370  EFBC  F011         	goto	u11881
  3135  002374  EFBE  F011         	goto	u11880
  3136  002378                     u11881:
  3137  002378  EFE0  F011         	goto	l10657
  3138  00237C                     u11880:
  3139  00237C                     
  3140                           ; BSR set to: 0
  3141                           ;main.c: 361:                 espejearCarroY = 0;
  3142  00237C  0E00               	movlw	0
  3143  00237E  0101               	movlb	1	; () banked
  3144  002380  6F38               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3145                           
  3146                           ;main.c: 362:                 carroEspejeado = 0;
  3147  002382  0E00               	movlw	0
  3148  002384  6FE5               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  3149  002386                     
  3150                           ; BSR set to: 1
  3151                           ;main.c: 364:                 regresarAlCruce(movimientosRealizados, numMovimientos);
  3152  002386  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3153  002388  0100               	movlb	0	; () banked
  3154  00238A  6F9A               	movwf	regresarAlCruce@movimientos& (0+255),b
  3155  00238C  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3156  00238E  6F9B               	movwf	(regresarAlCruce@movimientos+1)& (0+255),b
  3157  002390  C1DB  F09C         	movff	comportamientoBasico@numMovimientos,regresarAlCruce@numMovimientos
  3158  002394  C1DC  F09D         	movff	comportamientoBasico@numMovimientos+1,regresarAlCruce@numMovimientos+1
  3159  002398  EC82  F025         	call	_regresarAlCruce	;wreg free
  3160  00239C                     
  3161                           ;main.c: 365:                 limpiarMovimientos(movimientosRealizados, &numMovimientos)
      +                          ;
  3162  00239C  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3163  00239E  6E06               	movwf	limpiarMovimientos@movimientos^0,c
  3164  0023A0  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3165  0023A2  6E07               	movwf	(limpiarMovimientos@movimientos+1)^0,c
  3166  0023A4  0EDB               	movlw	low comportamientoBasico@numMovimientos
  3167  0023A6  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
  3168  0023A8  0E01               	movlw	high comportamientoBasico@numMovimientos
  3169  0023AA  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
  3170  0023AC  ECD5  F029         	call	_limpiarMovimientos	;wreg free
  3171  0023B0                     
  3172                           ;main.c: 367:                 cruceDetectado = 0;
  3173  0023B0  0E00               	movlw	0
  3174  0023B2  0101               	movlb	1	; () banked
  3175  0023B4  6FE3               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  3176  0023B6                     
  3177                           ; BSR set to: 1
  3178                           ;main.c: 368:                 posicionInvCruce = 1;
  3179  0023B6  0E01               	movlw	1
  3180  0023B8  6FE1               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  3181  0023BA                     
  3182                           ; BSR set to: 1
  3183                           ;main.c: 369:                 contCaminosRecorridos++;
  3184  0023BA  2BE0               	incf	comportamientoBasico@contCaminosRecorridos& (0+255),f,b
  3185  0023BC  EF7D  F011         	goto	l10631
  3186  0023C0                     l10657:
  3187  0023C0  0101               	movlb	1	; () banked
  3188  0023C2  5138               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3189  0023C4  B4D8               	btfsc	status,2,c
  3190  0023C6  EFE7  F011         	goto	u11891
  3191  0023CA  EFE9  F011         	goto	u11890
  3192  0023CE                     u11891:
  3193  0023CE  EF6D  F011         	goto	l10621
  3194  0023D2                     u11890:
  3195  0023D2                     
  3196                           ; BSR set to: 1
  3197  0023D2  51E5               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3198  0023D4  B4D8               	btfsc	status,2,c
  3199  0023D6  EFEF  F011         	goto	u11901
  3200  0023DA  EFF1  F011         	goto	u11900
  3201  0023DE                     u11901:
  3202  0023DE  EF6D  F011         	goto	l10621
  3203  0023E2                     u11900:
  3204  0023E2                     
  3205                           ; BSR set to: 1
  3206  0023E2  0100               	movlb	0	; () banked
  3207  0023E4  51FF               	movf	_llegoDestino& (0+255),w,b
  3208  0023E6  B4D8               	btfsc	status,2,c
  3209  0023E8  EFF8  F011         	goto	u11911
  3210  0023EC  EFFA  F011         	goto	u11910
  3211  0023F0                     u11911:
  3212  0023F0  EF6D  F011         	goto	l10621
  3213  0023F4                     u11910:
  3214  0023F4                     
  3215                           ; BSR set to: 0
  3216                           ;main.c: 372:                 espejearCarroY = 0;
  3217  0023F4  0E00               	movlw	0
  3218  0023F6  0101               	movlb	1	; () banked
  3219  0023F8  6F38               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3220                           
  3221                           ;main.c: 373:                 mouse.Next_state = ALTO;
  3222  0023FA  0E04               	movlw	4
  3223  0023FC  6E58               	movwf	(_mouse+1)^0,c
  3224                           
  3225                           ;main.c: 375:             } else {
  3226  0023FE  EFBB  F012         	goto	l378
  3227  002402                     l10669:
  3228                           
  3229                           ; BSR set to: 2
  3230                           ;main.c: 387:             if (llegoDestino && carroEspejeado) {
  3231  002402  0100               	movlb	0	; () banked
  3232  002404  51FF               	movf	_llegoDestino& (0+255),w,b
  3233  002406  B4D8               	btfsc	status,2,c
  3234  002408  EF08  F012         	goto	u11921
  3235  00240C  EF0A  F012         	goto	u11920
  3236  002410                     u11921:
  3237  002410  EF3A  F012         	goto	l10693
  3238  002414                     u11920:
  3239  002414                     
  3240                           ; BSR set to: 0
  3241  002414  0101               	movlb	1	; () banked
  3242  002416  51E5               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3243  002418  B4D8               	btfsc	status,2,c
  3244  00241A  EF11  F012         	goto	u11931
  3245  00241E  EF13  F012         	goto	u11930
  3246  002422                     u11931:
  3247  002422  EF3A  F012         	goto	l10693
  3248  002426                     u11930:
  3249  002426                     
  3250                           ; BSR set to: 1
  3251                           ;main.c: 389:                 carroEspejeado = 0;
  3252  002426  0E00               	movlw	0
  3253  002428  6FE5               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  3254                           
  3255                           ;main.c: 390:                 llegoDestino = 0;
  3256  00242A  0E00               	movlw	0
  3257  00242C  0100               	movlb	0	; () banked
  3258  00242E  6FFF               	movwf	_llegoDestino& (0+255),b
  3259                           
  3260                           ;main.c: 391:                 caminoEncontrado = 1;
  3261  002430  0E01               	movlw	1
  3262  002432  6E59               	movwf	_caminoEncontrado^0,c
  3263  002434                     
  3264                           ; BSR set to: 0
  3265                           ;main.c: 393:                 forzarParoAuto();
  3266  002434  EC14  F02C         	call	_forzarParoAuto	;wreg free
  3267  002438                     
  3268                           ;main.c: 394:                 pausa = 1;
  3269  002438  0E01               	movlw	1
  3270  00243A  0101               	movlb	1	; () banked
  3271  00243C  6FFB               	movwf	_pausa& (0+255),b
  3272  00243E                     
  3273                           ; BSR set to: 1
  3274                           ;main.c: 396:                 if (ida) {
  3275  00243E  51FA               	movf	_ida& (0+255),w,b
  3276  002440  B4D8               	btfsc	status,2,c
  3277  002442  EF25  F012         	goto	u11941
  3278  002446  EF27  F012         	goto	u11940
  3279  00244A                     u11941:
  3280  00244A  EF2D  F012         	goto	l10685
  3281  00244E                     u11940:
  3282  00244E                     
  3283                           ; BSR set to: 1
  3284                           ;main.c: 397:                     crucesRecorridos = numMovimientosTotales;
  3285  00244E  C141  F140         	movff	_numMovimientosTotales,_crucesRecorridos
  3286  002452                     
  3287                           ; BSR set to: 1
  3288                           ;main.c: 398:                     ida = 0;
  3289  002452  0E00               	movlw	0
  3290  002454  6FFA               	movwf	_ida& (0+255),b
  3291                           
  3292                           ;main.c: 399:                 } else {
  3293  002456  EF6D  F011         	goto	l10621
  3294  00245A                     l10685:
  3295                           
  3296                           ; BSR set to: 1
  3297                           ;main.c: 400:                     crucesRecorridos = 1;
  3298  00245A  0E01               	movlw	1
  3299  00245C  6F40               	movwf	_crucesRecorridos& (0+255),b
  3300  00245E                     
  3301                           ; BSR set to: 1
  3302                           ;main.c: 401:                     UART_printf("\rSe regreso al punto de partida\r\n");
  3303  00245E  0E65               	movlw	low STR_13
  3304  002460  6E07               	movwf	UART_printf@cadena^0,c
  3305  002462  0E7E               	movlw	high STR_13
  3306  002464  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3307  002466  EC51  F028         	call	_UART_printf	;wreg free
  3308  00246A                     
  3309                           ;main.c: 402:                     ida = 1;
  3310  00246A  0E01               	movlw	1
  3311  00246C  0101               	movlb	1	; () banked
  3312  00246E  6FFA               	movwf	_ida& (0+255),b
  3313  002470  EF6D  F011         	goto	l10621
  3314  002474                     l10693:
  3315  002474  0100               	movlb	0	; () banked
  3316  002476  51FF               	movf	_llegoDestino& (0+255),w,b
  3317  002478  B4D8               	btfsc	status,2,c
  3318  00247A  EF41  F012         	goto	u11951
  3319  00247E  EF43  F012         	goto	u11950
  3320  002482                     u11951:
  3321  002482  EF84  F012         	goto	l10707
  3322  002486                     u11950:
  3323  002486                     
  3324                           ; BSR set to: 0
  3325  002486  0101               	movlb	1	; () banked
  3326  002488  51E5               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3327  00248A  A4D8               	btfss	status,2,c
  3328  00248C  EF4A  F012         	goto	u11961
  3329  002490  EF4C  F012         	goto	u11960
  3330  002494                     u11961:
  3331  002494  EF84  F012         	goto	l10707
  3332  002498                     u11960:
  3333  002498                     
  3334                           ; BSR set to: 1
  3335                           ;main.c: 409:                 probarMapeoDireccionCruces(caminoFinal, caminoActual, &inv
      +                          estigandoCruce,
  3336  002498  0EC4               	movlw	low comportamientoBasico@caminoFinal
  3337  00249A  6FE6               	movwf	probarMapeoDireccionCruces@caminoFinal& (0+255),b
  3338  00249C  0E01               	movlw	high comportamientoBasico@caminoFinal
  3339  00249E  6FE7               	movwf	(probarMapeoDireccionCruces@caminoFinal+1)& (0+255),b
  3340  0024A0  C1DF  F1E8         	movff	comportamientoBasico@caminoActual,probarMapeoDireccionCruces@caminoActual
  3341  0024A4  0EE2               	movlw	low comportamientoBasico@investigandoCruce
  3342  0024A6  6FE9               	movwf	probarMapeoDireccionCruces@investigandoCruce& (0+255),b
  3343  0024A8  0E01               	movlw	high comportamientoBasico@investigandoCruce
  3344  0024AA  6FEA               	movwf	(probarMapeoDireccionCruces@investigandoCruce+1)& (0+255),b
  3345  0024AC  0EE1               	movlw	low comportamientoBasico@posicionInvCruce
  3346  0024AE  6FEB               	movwf	probarMapeoDireccionCruces@posicionInvCruce& (0+255),b
  3347  0024B0  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  3348  0024B2  6FEC               	movwf	(probarMapeoDireccionCruces@posicionInvCruce+1)& (0+255),b
  3349  0024B4  0EE4               	movlw	low comportamientoBasico@mapear
  3350  0024B6  6FED               	movwf	probarMapeoDireccionCruces@mapear& (0+255),b
  3351  0024B8  0E01               	movlw	high comportamientoBasico@mapear
  3352  0024BA  6FEE               	movwf	(probarMapeoDireccionCruces@mapear+1)& (0+255),b
  3353  0024BC  0EE3               	movlw	low comportamientoBasico@cruceDetectado
  3354  0024BE  6FEF               	movwf	probarMapeoDireccionCruces@cruceDetectado& (0+255),b
  3355  0024C0  0E01               	movlw	high comportamientoBasico@cruceDetectado
  3356  0024C2  6FF0               	movwf	(probarMapeoDireccionCruces@cruceDetectado+1)& (0+255),b
  3357  0024C4  0EE0               	movlw	low comportamientoBasico@contCaminosRecorridos
  3358  0024C6  6FF1               	movwf	probarMapeoDireccionCruces@contCaminosRecorridos& (0+255),b
  3359  0024C8  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  3360  0024CA  6FF2               	movwf	(probarMapeoDireccionCruces@contCaminosRecorridos+1)& (0+255),b
  3361  0024CC  0EDE               	movlw	low comportamientoBasico@cambioOrientacionCarro
  3362  0024CE  6FF3               	movwf	probarMapeoDireccionCruces@cambioOrientacionCarro& (0+255),b
  3363  0024D0  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  3364  0024D2  6FF4               	movwf	(probarMapeoDireccionCruces@cambioOrientacionCarro+1)& (0+255),b
  3365  0024D4  ECC4  F022         	call	_probarMapeoDireccionCruces	;wreg free
  3366  0024D8                     
  3367                           ;main.c: 413:                 espejearCarroY = 1;
  3368  0024D8  0E01               	movlw	1
  3369  0024DA  0101               	movlb	1	; () banked
  3370  0024DC  6F38               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3371  0024DE                     
  3372                           ; BSR set to: 1
  3373                           ;main.c: 414:                 UART_printf("\rSe llego Al destino\r\n");
  3374  0024DE  0E7A               	movlw	low STR_14
  3375  0024E0  6E07               	movwf	UART_printf@cadena^0,c
  3376  0024E2  0E7F               	movlw	high STR_14
  3377  0024E4  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3378  0024E6  EC51  F028         	call	_UART_printf	;wreg free
  3379  0024EA                     
  3380                           ;main.c: 415:                 _delay((unsigned long)((3000)*(4000000/4000.0)));
  3381  0024EA  0E10               	movlw	16
  3382  0024EC  0102               	movlb	2	; () banked
  3383  0024EE  6FC9               	movwf	(??_comportamientoBasico+1)& (0+255),b
  3384  0024F0  0E39               	movlw	57
  3385  0024F2  6FC8               	movwf	??_comportamientoBasico& (0+255),b
  3386  0024F4  0E0D               	movlw	13
  3387  0024F6                     u12137:
  3388  0024F6  2EE8               	decfsz	wreg,f,c
  3389  0024F8  D7FE               	bra	u12137
  3390  0024FA  2FC8               	decfsz	??_comportamientoBasico& (0+255),f,b
  3391  0024FC  D7FC               	bra	u12137
  3392  0024FE  2FC9               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  3393  002500  D7FA               	bra	u12137
  3394  002502  D000               	nop2	
  3395  002504  EF73  F011         	goto	l10625
  3396  002508                     l10707:
  3397                           
  3398                           ;main.c: 419:                 if (direccionElegida == IZQUIERDA || direccionElegida == D
      +                          ERECHA)
  3399  002508  0E02               	movlw	2
  3400  00250A  0100               	movlb	0	; () banked
  3401  00250C  19FE               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3402  00250E  B4D8               	btfsc	status,2,c
  3403  002510  EF8C  F012         	goto	u11971
  3404  002514  EF8E  F012         	goto	u11970
  3405  002518                     u11971:
  3406  002518  EF97  F012         	goto	l10711
  3407  00251C                     u11970:
  3408  00251C                     
  3409                           ; BSR set to: 0
  3410  00251C  0E03               	movlw	3
  3411  00251E  19FE               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3412  002520  A4D8               	btfss	status,2,c
  3413  002522  EF95  F012         	goto	u11981
  3414  002526  EF97  F012         	goto	u11980
  3415  00252A                     u11981:
  3416  00252A  EF99  F012         	goto	l10713
  3417  00252E                     u11980:
  3418  00252E                     l10711:
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;main.c: 420:                     velocidadEstandar();
  3422  00252E  EC99  F02B         	call	_velocidadEstandar	;wreg free
  3423  002532                     l10713:
  3424                           
  3425                           ;main.c: 422:                 mouse.Next_state = direccionElegida;
  3426  002532  C0FE  F058         	movff	comportamientoBasico@direccionElegida,_mouse+1
  3427  002536  EFBB  F012         	goto	l378
  3428  00253A                     l10717:
  3429                           
  3430                           ; BSR set to: 0
  3431  00253A  5057               	movf	_mouse^0,w,c
  3432  00253C  0102               	movlb	2	; () banked
  3433  00253E  6FC8               	movwf	??_comportamientoBasico& (0+255),b
  3434  002540  6BC9               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3435                           
  3436                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3437                           ; Switch size 1, requested type "simple"
  3438                           ; Number of cases is 1, Range of values is 0 to 0
  3439                           ; switch strategies available:
  3440                           ; Name         Instructions Cycles
  3441                           ; simple_byte            4     3 (average)
  3442                           ;	Chosen strategy is simple_byte
  3443  002542  51C9               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3444  002544  0A00               	xorlw	0	; case 0
  3445  002546  B4D8               	btfsc	status,2,c
  3446  002548  EFA8  F012         	goto	l11281
  3447  00254C  EFBB  F012         	goto	l378
  3448  002550                     l11281:
  3449                           
  3450                           ; BSR set to: 2
  3451                           ; Switch size 1, requested type "simple"
  3452                           ; Number of cases is 4, Range of values is 1 to 4
  3453                           ; switch strategies available:
  3454                           ; Name         Instructions Cycles
  3455                           ; simple_byte           13     7 (average)
  3456                           ;	Chosen strategy is simple_byte
  3457  002550  51C8               	movf	??_comportamientoBasico& (0+255),w,b
  3458  002552  0A01               	xorlw	1	; case 1
  3459  002554  B4D8               	btfsc	status,2,c
  3460  002556  EF81  F011         	goto	l10635
  3461  00255A  0A03               	xorlw	3	; case 2
  3462  00255C  B4D8               	btfsc	status,2,c
  3463  00255E  EFA4  F011         	goto	l10637
  3464  002562  0A01               	xorlw	1	; case 3
  3465  002564  B4D8               	btfsc	status,2,c
  3466  002566  EF6D  F011         	goto	l10621
  3467  00256A  0A07               	xorlw	7	; case 4
  3468  00256C  B4D8               	btfsc	status,2,c
  3469  00256E  EF01  F012         	goto	l10669
  3470  002572  EFBB  F012         	goto	l378
  3471  002576                     l378:
  3472                           
  3473                           ;main.c: 428:     mouse.curr_state = mouse.Next_state;
  3474  002576  C058  F057         	movff	_mouse+1,_mouse
  3475  00257A  0012               	return		;funcret
  3476  00257C                     __end_of_comportamientoBasico:
  3477                           	opt callstack 0
  3478                           
  3479 ;; *************** function _regresarAlCruce *****************
  3480 ;; Defined at:
  3481 ;;		line 642 in file "main.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  3484 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  3485 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  i               2   62[BANK0 ] int 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3497 ;;      Params:         0       4       0       0       0       0       0       0       0
  3498 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3499 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3500 ;;      Totals:         1       6       0       0       0       0       0       0       0
  3501 ;;Total ram usage:        7 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    6
  3504 ;; This function calls:
  3505 ;;		_PID
  3506 ;;		_mover
  3507 ;;		_velocidadEstandar
  3508 ;; This function is called by:
  3509 ;;		_comportamientoBasico
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text6
  3514  004B04                     __ptext6:
  3515                           	opt callstack 0
  3516  004B04                     _regresarAlCruce:
  3517                           	opt callstack 23
  3518  004B04                     
  3519                           ;main.c: 644:     movimientos[1] = ENFRENTE;
  3520  004B04  0100               	movlb	0	; () banked
  3521  004B06  EE20 F001          	lfsr	2,1
  3522  004B0A  519A               	movf	regresarAlCruce@movimientos& (0+255),w,b
  3523  004B0C  26D9               	addwf	fsr2l,f,c
  3524  004B0E  519B               	movf	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3525  004B10  22DA               	addwfc	fsr2h,f,c
  3526  004B12  0E01               	movlw	1
  3527  004B14  6EDF               	movwf	indf2,c
  3528  004B16                     
  3529                           ; BSR set to: 0
  3530                           ;main.c: 646:     for (T_INT i = numMovimientos - 1; i >= 0; i--) {
  3531  004B16  0EFF               	movlw	255
  3532  004B18  259C               	addwf	regresarAlCruce@numMovimientos& (0+255),w,b
  3533  004B1A  6F9E               	movwf	regresarAlCruce@i& (0+255),b
  3534  004B1C  0EFF               	movlw	255
  3535  004B1E  219D               	addwfc	(regresarAlCruce@numMovimientos+1)& (0+255),w,b
  3536  004B20  6F9F               	movwf	(regresarAlCruce@i+1)& (0+255),b
  3537  004B22                     l10451:
  3538                           
  3539                           ; BSR set to: 0
  3540  004B22  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  3541  004B24  EF98  F025         	goto	u11750
  3542  004B28  EF96  F025         	goto	u11751
  3543  004B2C                     u11751:
  3544  004B2C  EF9A  F025         	goto	l10455
  3545  004B30                     u11750:
  3546  004B30  EFD7  F025         	goto	l457
  3547  004B34                     l10455:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;main.c: 650:         if (movimientos[i] == IZQUIERDA) {
  3551  004B34  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3552  004B36  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3553  004B38  6ED9               	movwf	fsr2l,c
  3554  004B3A  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3555  004B3C  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3556  004B3E  6EDA               	movwf	fsr2h,c
  3557  004B40  0E02               	movlw	2
  3558  004B42  18DE               	xorwf	postinc2,w,c
  3559  004B44  A4D8               	btfss	status,2,c
  3560  004B46  EFA7  F025         	goto	u11761
  3561  004B4A  EFA9  F025         	goto	u11760
  3562  004B4E                     u11761:
  3563  004B4E  EFAF  F025         	goto	l10461
  3564  004B52                     u11760:
  3565  004B52                     
  3566                           ; BSR set to: 0
  3567                           ;main.c: 651:             velocidadEstandar();
  3568  004B52  EC99  F02B         	call	_velocidadEstandar	;wreg free
  3569  004B56                     
  3570                           ;main.c: 652:             mouse.curr_state = DERECHA;
  3571  004B56  0E03               	movlw	3
  3572  004B58  6E57               	movwf	_mouse^0,c
  3573                           
  3574                           ;main.c: 653:         } else if (movimientos[i] == DERECHA) {
  3575  004B5A  EFCF  F025         	goto	l10471
  3576  004B5E                     l10461:
  3577                           
  3578                           ; BSR set to: 0
  3579  004B5E  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3580  004B60  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3581  004B62  6ED9               	movwf	fsr2l,c
  3582  004B64  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3583  004B66  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3584  004B68  6EDA               	movwf	fsr2h,c
  3585  004B6A  0E03               	movlw	3
  3586  004B6C  18DE               	xorwf	postinc2,w,c
  3587  004B6E  A4D8               	btfss	status,2,c
  3588  004B70  EFBC  F025         	goto	u11771
  3589  004B74  EFBE  F025         	goto	u11770
  3590  004B78                     u11771:
  3591  004B78  EFC4  F025         	goto	l10467
  3592  004B7C                     u11770:
  3593  004B7C                     
  3594                           ; BSR set to: 0
  3595                           ;main.c: 654:             velocidadEstandar();
  3596  004B7C  EC99  F02B         	call	_velocidadEstandar	;wreg free
  3597  004B80                     
  3598                           ;main.c: 655:             mouse.curr_state = IZQUIERDA;
  3599  004B80  0E02               	movlw	2
  3600  004B82  6E57               	movwf	_mouse^0,c
  3601                           
  3602                           ;main.c: 656:         } else {
  3603  004B84  EFCF  F025         	goto	l10471
  3604  004B88                     l10467:
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;main.c: 658:             PID();
  3608  004B88  ECD4  F017         	call	_PID	;wreg free
  3609  004B8C                     
  3610                           ;main.c: 659:             mouse.curr_state = movimientos[i];
  3611  004B8C  0100               	movlb	0	; () banked
  3612  004B8E  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3613  004B90  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3614  004B92  6ED9               	movwf	fsr2l,c
  3615  004B94  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3616  004B96  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3617  004B98  6EDA               	movwf	fsr2h,c
  3618  004B9A  50DF               	movf	indf2,w,c
  3619  004B9C  6E57               	movwf	_mouse^0,c
  3620  004B9E                     l10471:
  3621                           
  3622                           ;main.c: 662:         mover();
  3623  004B9E  EC7A  F026         	call	_mover	;wreg free
  3624  004BA2                     
  3625                           ;main.c: 663:     }
  3626  004BA2  0100               	movlb	0	; () banked
  3627  004BA4  079E               	decf	regresarAlCruce@i& (0+255),f,b
  3628  004BA6  A0D8               	btfss	status,0,c
  3629  004BA8  079F               	decf	(regresarAlCruce@i+1)& (0+255),f,b
  3630  004BAA  EF91  F025         	goto	l10451
  3631  004BAE                     l457:
  3632                           
  3633                           ; BSR set to: 0
  3634  004BAE  0012               	return		;funcret
  3635  004BB0                     __end_of_regresarAlCruce:
  3636                           	opt callstack 0
  3637                           
  3638 ;; *************** function _mover *****************
  3639 ;; Defined at:
  3640 ;;		line 587 in file "main.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3654 ;;      Params:         0       0       0       0       0       0       0       0       0
  3655 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3656 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3657 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3658 ;;Total ram usage:        2 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    3
  3661 ;; This function calls:
  3662 ;;		_forzarAvanceRecto
  3663 ;; This function is called by:
  3664 ;;		_regresarAlCruce
  3665 ;;		_probarGirosAuto
  3666 ;;		_probarPID
  3667 ;;		_probarCruceT
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text7
  3672  004CF4                     __ptext7:
  3673                           	opt callstack 0
  3674  004CF4                     _mover:
  3675                           	opt callstack 25
  3676  004CF4                     
  3677                           ;main.c: 589:     switch (mouse.curr_state) {
  3678  004CF4  EFA9  F026         	goto	l9879
  3679  004CF8                     l442:
  3680                           
  3681                           ;main.c: 593:             LATB4 = 1;
  3682  004CF8  888A               	bsf	3978,4,c	;volatile
  3683                           
  3684                           ;main.c: 594:             LATB5 = 0;
  3685  004CFA  9A8A               	bcf	3978,5,c	;volatile
  3686                           
  3687                           ;main.c: 595:             LATB6 = 1;
  3688  004CFC  8C8A               	bsf	3978,6,c	;volatile
  3689                           
  3690                           ;main.c: 598:             if (!0)
  3691  004CFE  9E8A               	bcf	3978,7,c	;volatile
  3692  004D00                     
  3693                           ;main.c: 599:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  3694  004D00  0E48               	movlw	72
  3695  004D02  6E08               	movwf	??_mover^0,c
  3696  004D04  0E6C               	movlw	108
  3697  004D06                     u12147:
  3698  004D06  2EE8               	decfsz	wreg,f,c
  3699  004D08  D7FE               	bra	u12147
  3700  004D0A  2E08               	decfsz	??_mover^0,f,c
  3701  004D0C  D7FC               	bra	u12147
  3702  004D0E  D000               	nop2	
  3703  004D10  EFC6  F026         	goto	l448
  3704  004D14                     l445:
  3705                           
  3706                           ;main.c: 605:             LATB4 = 0;
  3707  004D14  988A               	bcf	3978,4,c	;volatile
  3708                           
  3709                           ;main.c: 606:             LATB5 = 0;
  3710  004D16  9A8A               	bcf	3978,5,c	;volatile
  3711                           
  3712                           ;main.c: 607:             LATB6 = 1;
  3713  004D18  8C8A               	bsf	3978,6,c	;volatile
  3714                           
  3715                           ;main.c: 608:             LATB7 = 0;
  3716  004D1A  9E8A               	bcf	3978,7,c	;volatile
  3717  004D1C                     l9869:
  3718                           
  3719                           ;main.c: 610:             _delay((unsigned long)((410)*(4000000/4000.0)));
  3720  004D1C  0E03               	movlw	3
  3721  004D1E  6E09               	movwf	(??_mover+1)^0,c
  3722  004D20  0E15               	movlw	21
  3723  004D22  6E08               	movwf	??_mover^0,c
  3724  004D24  0E74               	movlw	116
  3725  004D26                     u12157:
  3726  004D26  2EE8               	decfsz	wreg,f,c
  3727  004D28  D7FE               	bra	u12157
  3728  004D2A  2E08               	decfsz	??_mover^0,f,c
  3729  004D2C  D7FC               	bra	u12157
  3730  004D2E  2E09               	decfsz	(??_mover+1)^0,f,c
  3731  004D30  D7FA               	bra	u12157
  3732  004D32                     
  3733                           ;main.c: 612:             forzarAvanceRecto();
  3734  004D32  ECE3  F02B         	call	_forzarAvanceRecto	;wreg free
  3735                           
  3736                           ;main.c: 614:             break;
  3737  004D36  EFC6  F026         	goto	l448
  3738  004D3A                     l446:
  3739                           
  3740                           ;main.c: 618:             LATB4 = 1;
  3741  004D3A  888A               	bsf	3978,4,c	;volatile
  3742                           
  3743                           ;main.c: 619:             LATB5 = 0;
  3744  004D3C  9A8A               	bcf	3978,5,c	;volatile
  3745                           
  3746                           ;main.c: 620:             LATB6 = 0;
  3747  004D3E  9C8A               	bcf	3978,6,c	;volatile
  3748                           
  3749                           ;main.c: 621:             LATB7 = 0;
  3750  004D40  9E8A               	bcf	3978,7,c	;volatile
  3751  004D42  EF8E  F026         	goto	l9869
  3752  004D46                     l447:
  3753                           
  3754                           ;main.c: 631:             LATB4 = 0;
  3755  004D46  988A               	bcf	3978,4,c	;volatile
  3756                           
  3757                           ;main.c: 632:             LATB5 = 0;
  3758  004D48  9A8A               	bcf	3978,5,c	;volatile
  3759                           
  3760                           ;main.c: 633:             LATB6 = 0;
  3761  004D4A  9C8A               	bcf	3978,6,c	;volatile
  3762                           
  3763                           ;main.c: 634:             LATB7 = 0;
  3764  004D4C  9E8A               	bcf	3978,7,c	;volatile
  3765                           
  3766                           ;main.c: 636:             break;
  3767  004D4E  EFC6  F026         	goto	l448
  3768  004D52                     l9879:
  3769  004D52  5057               	movf	_mouse^0,w,c
  3770  004D54  6E08               	movwf	??_mover^0,c
  3771  004D56  6A09               	clrf	(??_mover+1)^0,c
  3772                           
  3773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3774                           ; Switch size 1, requested type "simple"
  3775                           ; Number of cases is 1, Range of values is 0 to 0
  3776                           ; switch strategies available:
  3777                           ; Name         Instructions Cycles
  3778                           ; simple_byte            4     3 (average)
  3779                           ;	Chosen strategy is simple_byte
  3780  004D58  5009               	movf	(??_mover+1)^0,w,c
  3781  004D5A  0A00               	xorlw	0	; case 0
  3782  004D5C  B4D8               	btfsc	status,2,c
  3783  004D5E  EFB3  F026         	goto	l11283
  3784  004D62  EFC6  F026         	goto	l448
  3785  004D66                     l11283:
  3786                           
  3787                           ; Switch size 1, requested type "simple"
  3788                           ; Number of cases is 4, Range of values is 1 to 4
  3789                           ; switch strategies available:
  3790                           ; Name         Instructions Cycles
  3791                           ; simple_byte           13     7 (average)
  3792                           ;	Chosen strategy is simple_byte
  3793  004D66  5008               	movf	??_mover^0,w,c
  3794  004D68  0A01               	xorlw	1	; case 1
  3795  004D6A  B4D8               	btfsc	status,2,c
  3796  004D6C  EF7C  F026         	goto	l442
  3797  004D70  0A03               	xorlw	3	; case 2
  3798  004D72  B4D8               	btfsc	status,2,c
  3799  004D74  EF8A  F026         	goto	l445
  3800  004D78  0A01               	xorlw	1	; case 3
  3801  004D7A  B4D8               	btfsc	status,2,c
  3802  004D7C  EF9D  F026         	goto	l446
  3803  004D80  0A07               	xorlw	7	; case 4
  3804  004D82  B4D8               	btfsc	status,2,c
  3805  004D84  EFA3  F026         	goto	l447
  3806  004D88  EFC6  F026         	goto	l448
  3807  004D8C                     l448:
  3808  004D8C  0012               	return		;funcret
  3809  004D8E                     __end_of_mover:
  3810                           	opt callstack 0
  3811                           
  3812 ;; *************** function _PID *****************
  3813 ;; Defined at:
  3814 ;;		line 1233 in file "main.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;		None
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  error           2   56[BANK0 ] int 
  3819 ;;  dif             2   54[BANK0 ] int 
  3820 ;;  velocidadDer    2   50[BANK0 ] int 
  3821 ;;  velocidadIzq    2   46[BANK0 ] int 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3831 ;;      Params:         0       0       0       0       0       0       0       0       0
  3832 ;;      Locals:         0      16       0       0       0       0       0       0       0
  3833 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3834 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3835 ;;Total ram usage:       18 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    5
  3838 ;; This function calls:
  3839 ;;		___fladd
  3840 ;;		___flmul
  3841 ;;		___flsub
  3842 ;;		___fltol
  3843 ;;		___xxtofl
  3844 ;;		_pwmDuty
  3845 ;;		_roundf
  3846 ;; This function is called by:
  3847 ;;		_comportamientoBasico
  3848 ;;		_regresarAlCruce
  3849 ;;		_probarPID
  3850 ;;		_probarCruceT
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text8
  3855  002FA8                     __ptext8:
  3856                           	opt callstack 0
  3857  002FA8                     _PID:
  3858                           	opt callstack 23
  3859  002FA8                     
  3860                           ;main.c: 1236:     T_INT error = 0;
  3861  002FA8  0E00               	movlw	0
  3862  002FAA  0100               	movlb	0	; () banked
  3863  002FAC  6F99               	movwf	(PID@error+1)& (0+255),b
  3864  002FAE  0E00               	movlw	0
  3865  002FB0  6F98               	movwf	PID@error& (0+255),b
  3866  002FB2                     
  3867                           ; BSR set to: 0
  3868                           ;main.c: 1237:     static T_INT difAnt = 0;;main.c: 1240:     dif = sensorIzquierda - se
      +                          nsorDerecha;
  3869  002FB2  C12C  F048         	movff	_sensorDerecha,___flsub@a
  3870  002FB6  C12D  F049         	movff	_sensorDerecha+1,___flsub@a+1
  3871  002FBA  C12E  F04A         	movff	_sensorDerecha+2,___flsub@a+2
  3872  002FBE  C12F  F04B         	movff	_sensorDerecha+3,___flsub@a+3
  3873  002FC2  C128  F044         	movff	_sensorIzquierda,___flsub@b
  3874  002FC6  C129  F045         	movff	_sensorIzquierda+1,___flsub@b+1
  3875  002FCA  C12A  F046         	movff	_sensorIzquierda+2,___flsub@b+2
  3876  002FCE  C12B  F047         	movff	_sensorIzquierda+3,___flsub@b+3
  3877  002FD2  EC6B  F02A         	call	___flsub	;wreg free
  3878  002FD6  C044  F072         	movff	?___flsub,___fltol@f1
  3879  002FDA  C045  F073         	movff	?___flsub+1,___fltol@f1+1
  3880  002FDE  C046  F074         	movff	?___flsub+2,___fltol@f1+2
  3881  002FE2  C047  F075         	movff	?___flsub+3,___fltol@f1+3
  3882  002FE6  EC3F  F021         	call	___fltol	;wreg free
  3883  002FEA  C072  F096         	movff	?___fltol,PID@dif
  3884  002FEE  C073  F097         	movff	?___fltol+1,PID@dif+1
  3885  002FF2                     
  3886                           ;main.c: 1242:     error = roundf(1.5 * (dif) + 0.1 * (difAnt - dif));
  3887  002FF2  0ECD               	movlw	205
  3888  002FF4  6E1F               	movwf	___flmul@a^0,c
  3889  002FF6  0ECC               	movlw	204
  3890  002FF8  6E20               	movwf	(___flmul@a+1)^0,c
  3891  002FFA  0ECC               	movlw	204
  3892  002FFC  6E21               	movwf	(___flmul@a+2)^0,c
  3893  002FFE  0E3D               	movlw	61
  3894  003000  6E22               	movwf	(___flmul@a+3)^0,c
  3895  003002  0100               	movlb	0	; () banked
  3896  003004  5196               	movf	PID@dif& (0+255),w,b
  3897  003006  0101               	movlb	1	; () banked
  3898  003008  5D36               	subwf	PID@difAnt& (0+255),w,b
  3899  00300A  0100               	movlb	0	; () banked
  3900  00300C  6F88               	movwf	??_PID& (0+255),b
  3901  00300E  5197               	movf	(PID@dif+1)& (0+255),w,b
  3902  003010  0101               	movlb	1	; () banked
  3903  003012  5937               	subwfb	(PID@difAnt+1)& (0+255),w,b
  3904  003014  0100               	movlb	0	; () banked
  3905  003016  6F89               	movwf	(??_PID+1)& (0+255),b
  3906  003018  C088  F00D         	movff	??_PID,___xxtofl@val
  3907  00301C  C089  F00E         	movff	??_PID+1,___xxtofl@val+1
  3908  003020  0E00               	movlw	0
  3909  003022  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  3910  003024  0EFF               	movlw	-1
  3911  003026  6E0F               	movwf	(___xxtofl@val+2)^0,c
  3912  003028  6E10               	movwf	(___xxtofl@val+3)^0,c
  3913  00302A  0E01               	movlw	1
  3914  00302C  ECE6  F01A         	call	___xxtofl
  3915  003030  C00D  F01B         	movff	?___xxtofl,___flmul@b
  3916  003034  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  3917  003038  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  3918  00303C  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  3919  003040  ECBC  F00E         	call	___flmul	;wreg free
  3920  003044  C01B  F038         	movff	?___flmul,___fladd@a
  3921  003048  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  3922  00304C  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  3923  003050  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  3924  003054  0E00               	movlw	0
  3925  003056  6E1F               	movwf	___flmul@a^0,c
  3926  003058  0E00               	movlw	0
  3927  00305A  6E20               	movwf	(___flmul@a+1)^0,c
  3928  00305C  0EC0               	movlw	192
  3929  00305E  6E21               	movwf	(___flmul@a+2)^0,c
  3930  003060  0E3F               	movlw	63
  3931  003062  6E22               	movwf	(___flmul@a+3)^0,c
  3932  003064  C096  F00D         	movff	PID@dif,___xxtofl@val
  3933  003068  C097  F00E         	movff	PID@dif+1,___xxtofl@val+1
  3934  00306C  0E00               	movlw	0
  3935  00306E  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  3936  003070  0EFF               	movlw	-1
  3937  003072  6E0F               	movwf	(___xxtofl@val+2)^0,c
  3938  003074  6E10               	movwf	(___xxtofl@val+3)^0,c
  3939  003076  0E01               	movlw	1
  3940  003078  ECE6  F01A         	call	___xxtofl
  3941  00307C  C00D  F01B         	movff	?___xxtofl,___flmul@b
  3942  003080  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  3943  003084  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  3944  003088  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  3945  00308C  ECBC  F00E         	call	___flmul	;wreg free
  3946  003090  C01B  F034         	movff	?___flmul,___fladd@b
  3947  003094  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  3948  003098  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  3949  00309C  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  3950  0030A0  EC5C  F00C         	call	___fladd	;wreg free
  3951  0030A4  C034  F08A         	movff	?___fladd,_PID$1826
  3952  0030A8  C035  F08B         	movff	?___fladd+1,_PID$1826+1
  3953  0030AC  C036  F08C         	movff	?___fladd+2,_PID$1826+2
  3954  0030B0  C037  F08D         	movff	?___fladd+3,_PID$1826+3
  3955  0030B4                     
  3956                           ;main.c: 1242:     error = roundf(1.5 * (dif) + 0.1 * (difAnt - dif));
  3957  0030B4  C08A  F04C         	movff	_PID$1826,roundf@x
  3958  0030B8  C08B  F04D         	movff	_PID$1826+1,roundf@x+1
  3959  0030BC  C08C  F04E         	movff	_PID$1826+2,roundf@x+2
  3960  0030C0  C08D  F04F         	movff	_PID$1826+3,roundf@x+3
  3961  0030C4  ECBE  F012         	call	_roundf	;wreg free
  3962  0030C8  C04C  F072         	movff	?_roundf,___fltol@f1
  3963  0030CC  C04D  F073         	movff	?_roundf+1,___fltol@f1+1
  3964  0030D0  C04E  F074         	movff	?_roundf+2,___fltol@f1+2
  3965  0030D4  C04F  F075         	movff	?_roundf+3,___fltol@f1+3
  3966  0030D8  EC3F  F021         	call	___fltol	;wreg free
  3967  0030DC  C072  F098         	movff	?___fltol,PID@error
  3968  0030E0  C073  F099         	movff	?___fltol+1,PID@error+1
  3969  0030E4                     
  3970                           ;main.c: 1244:     difAnt = dif;
  3971  0030E4  C096  F136         	movff	PID@dif,PID@difAnt
  3972  0030E8  C097  F137         	movff	PID@dif+1,PID@difAnt+1
  3973  0030EC                     
  3974                           ;main.c: 1246:     T_INT velocidadIzquierda = ((100 - error)<(0)?(0):((100 - error)>(100
      +                          )?(100):(100 - error)));
  3975  0030EC  0E64               	movlw	100
  3976  0030EE  0100               	movlb	0	; () banked
  3977  0030F0  6F88               	movwf	??_PID& (0+255),b
  3978  0030F2  0E00               	movlw	0
  3979  0030F4  6F89               	movwf	(??_PID+1)& (0+255),b
  3980  0030F6  5198               	movf	PID@error& (0+255),w,b
  3981  0030F8  5D88               	subwf	??_PID& (0+255),w,b
  3982  0030FA  5199               	movf	(PID@error+1)& (0+255),w,b
  3983  0030FC  5989               	subwfb	(??_PID+1)& (0+255),w,b
  3984  0030FE  0B80               	andlw	128
  3985  003100  A4D8               	btfss	status,2,c
  3986  003102  EF85  F018         	goto	u11191
  3987  003106  EF87  F018         	goto	u11190
  3988  00310A                     u11191:
  3989  00310A  EFB1  F018         	goto	l9907
  3990  00310E                     u11190:
  3991  00310E                     
  3992                           ; BSR set to: 0
  3993  00310E  0E64               	movlw	100
  3994  003110  6F88               	movwf	??_PID& (0+255),b
  3995  003112  0E00               	movlw	0
  3996  003114  6F89               	movwf	(??_PID+1)& (0+255),b
  3997  003116  5198               	movf	PID@error& (0+255),w,b
  3998  003118  5F88               	subwf	??_PID& (0+255),f,b
  3999  00311A  5199               	movf	(PID@error+1)& (0+255),w,b
  4000  00311C  5B89               	subwfb	(??_PID+1)& (0+255),f,b
  4001  00311E  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  4002  003120  EF9D  F018         	goto	u11200
  4003  003124  5189               	movf	(??_PID+1)& (0+255),w,b
  4004  003126  E107               	bnz	u11201
  4005  003128  0E65               	movlw	101
  4006  00312A  5D88               	subwf	??_PID& (0+255),w,b
  4007  00312C  B0D8               	btfsc	status,0,c
  4008  00312E  EF9B  F018         	goto	u11201
  4009  003132  EF9D  F018         	goto	u11200
  4010  003136                     u11201:
  4011  003136  EFA7  F018         	goto	l9903
  4012  00313A                     u11200:
  4013  00313A                     
  4014                           ; BSR set to: 0
  4015  00313A  5198               	movf	PID@error& (0+255),w,b
  4016  00313C  0864               	sublw	100
  4017  00313E  6F90               	movwf	_PID$737& (0+255),b
  4018  003140  5199               	movf	(PID@error+1)& (0+255),w,b
  4019  003142  A0D8               	btfss	status,0,c
  4020  003144  2AE8               	incf	wreg,f,c
  4021  003146  0800               	sublw	0
  4022  003148  6F91               	movwf	(_PID$737+1)& (0+255),b
  4023  00314A  EFAB  F018         	goto	l9905
  4024  00314E                     l9903:
  4025                           
  4026                           ; BSR set to: 0
  4027  00314E  0E00               	movlw	0
  4028  003150  6F91               	movwf	(_PID$737+1)& (0+255),b
  4029  003152  0E64               	movlw	100
  4030  003154  6F90               	movwf	_PID$737& (0+255),b
  4031  003156                     l9905:
  4032                           
  4033                           ; BSR set to: 0
  4034  003156  C090  F08E         	movff	_PID$737,PID@velocidadIzquierda
  4035  00315A  C091  F08F         	movff	_PID$737+1,PID@velocidadIzquierda+1
  4036  00315E  EFB5  F018         	goto	l9909
  4037  003162                     l9907:
  4038                           
  4039                           ; BSR set to: 0
  4040  003162  0E00               	movlw	0
  4041  003164  6F8F               	movwf	(PID@velocidadIzquierda+1)& (0+255),b
  4042  003166  0E00               	movlw	0
  4043  003168  6F8E               	movwf	PID@velocidadIzquierda& (0+255),b
  4044  00316A                     l9909:
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;main.c: 1247:     T_INT velocidadDerecha = ((100 + error)<(0)?(0):((100 + error)>(100)?
      +                          (100):(100 + error)));
  4048  00316A  0E64               	movlw	100
  4049  00316C  2598               	addwf	PID@error& (0+255),w,b
  4050  00316E  0E00               	movlw	0
  4051  003170  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4052  003172  0B80               	andlw	128
  4053  003174  A4D8               	btfss	status,2,c
  4054  003176  EFBF  F018         	goto	u11211
  4055  00317A  EFC1  F018         	goto	u11210
  4056  00317E                     u11211:
  4057  00317E  EFE7  F018         	goto	l9919
  4058  003182                     u11210:
  4059  003182                     
  4060                           ; BSR set to: 0
  4061  003182  0E64               	movlw	100
  4062  003184  2598               	addwf	PID@error& (0+255),w,b
  4063  003186  6F88               	movwf	??_PID& (0+255),b
  4064  003188  0E00               	movlw	0
  4065  00318A  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4066  00318C  6F89               	movwf	(??_PID+1)& (0+255),b
  4067  00318E  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  4068  003190  EFD5  F018         	goto	u11220
  4069  003194  5189               	movf	(??_PID+1)& (0+255),w,b
  4070  003196  E107               	bnz	u11221
  4071  003198  0E65               	movlw	101
  4072  00319A  5D88               	subwf	??_PID& (0+255),w,b
  4073  00319C  B0D8               	btfsc	status,0,c
  4074  00319E  EFD3  F018         	goto	u11221
  4075  0031A2  EFD5  F018         	goto	u11220
  4076  0031A6                     u11221:
  4077  0031A6  EFDD  F018         	goto	l9915
  4078  0031AA                     u11220:
  4079  0031AA                     
  4080                           ; BSR set to: 0
  4081  0031AA  0E64               	movlw	100
  4082  0031AC  2598               	addwf	PID@error& (0+255),w,b
  4083  0031AE  6F94               	movwf	_PID$739& (0+255),b
  4084  0031B0  0E00               	movlw	0
  4085  0031B2  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4086  0031B4  6F95               	movwf	(_PID$739+1)& (0+255),b
  4087  0031B6  EFE1  F018         	goto	l9917
  4088  0031BA                     l9915:
  4089                           
  4090                           ; BSR set to: 0
  4091  0031BA  0E00               	movlw	0
  4092  0031BC  6F95               	movwf	(_PID$739+1)& (0+255),b
  4093  0031BE  0E64               	movlw	100
  4094  0031C0  6F94               	movwf	_PID$739& (0+255),b
  4095  0031C2                     l9917:
  4096                           
  4097                           ; BSR set to: 0
  4098  0031C2  C094  F092         	movff	_PID$739,PID@velocidadDerecha
  4099  0031C6  C095  F093         	movff	_PID$739+1,PID@velocidadDerecha+1
  4100  0031CA  EFEB  F018         	goto	l9921
  4101  0031CE                     l9919:
  4102                           
  4103                           ; BSR set to: 0
  4104  0031CE  0E00               	movlw	0
  4105  0031D0  6F93               	movwf	(PID@velocidadDerecha+1)& (0+255),b
  4106  0031D2  0E00               	movlw	0
  4107  0031D4  6F92               	movwf	PID@velocidadDerecha& (0+255),b
  4108  0031D6                     l9921:
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;main.c: 1249:     pwmDuty(velocidadIzquierda, 1);
  4112  0031D6  C08E  F07C         	movff	PID@velocidadIzquierda,pwmDuty@cicloTrabajo
  4113  0031DA  C08F  F07D         	movff	PID@velocidadIzquierda+1,pwmDuty@cicloTrabajo+1
  4114  0031DE  0E01               	movlw	1
  4115  0031E0  6F7E               	movwf	pwmDuty@channel& (0+255),b
  4116  0031E2  EC08  F01A         	call	_pwmDuty	;wreg free
  4117  0031E6                     
  4118                           ;main.c: 1250:     pwmDuty(velocidadDerecha, 2);
  4119  0031E6  C092  F07C         	movff	PID@velocidadDerecha,pwmDuty@cicloTrabajo
  4120  0031EA  C093  F07D         	movff	PID@velocidadDerecha+1,pwmDuty@cicloTrabajo+1
  4121  0031EE  0E02               	movlw	2
  4122  0031F0  0100               	movlb	0	; () banked
  4123  0031F2  6F7E               	movwf	pwmDuty@channel& (0+255),b
  4124  0031F4  EC08  F01A         	call	_pwmDuty	;wreg free
  4125  0031F8  0012               	return		;funcret
  4126  0031FA                     __end_of_PID:
  4127                           	opt callstack 0
  4128                           
  4129 ;; *************** function _roundf *****************
  4130 ;; Defined at:
  4131 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  x               4   75[COMRAM] float 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  y               4   14[BANK0 ] float 
  4136 ;;  u               4   10[BANK0 ] struct .
  4137 ;;  e               2    4[BANK0 ] int 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  4   75[COMRAM] float 
  4140 ;; Registers used:
  4141 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4147 ;;      Params:         4       0       0       0       0       0       0       0       0
  4148 ;;      Locals:         0      18       0       0       0       0       0       0       0
  4149 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4150 ;;      Totals:         8      18       0       0       0       0       0       0       0
  4151 ;;Total ram usage:       26 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    4
  4154 ;; This function calls:
  4155 ;;		___fladd
  4156 ;;		___flge
  4157 ;;		___flmul
  4158 ;;		___flneg
  4159 ;;		___flsub
  4160 ;; This function is called by:
  4161 ;;		_PID
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text9
  4166  00257C                     __ptext9:
  4167                           	opt callstack 0
  4168  00257C                     _roundf:
  4169                           	opt callstack 23
  4170  00257C  C100  F06A         	movff	roundf@F525,roundf@u
  4171  002580  C101  F06B         	movff	roundf@F525+1,roundf@u+1
  4172  002584  C102  F06C         	movff	roundf@F525+2,roundf@u+2
  4173  002588  C103  F06D         	movff	roundf@F525+3,roundf@u+3
  4174  00258C  C04C  F06A         	movff	roundf@x,roundf@u
  4175  002590  C04D  F06B         	movff	roundf@x+1,roundf@u+1
  4176  002594  C04E  F06C         	movff	roundf@x+2,roundf@u+2
  4177  002598  C04F  F06D         	movff	roundf@x+3,roundf@u+3
  4178  00259C  C06A  F050         	movff	roundf@u,??_roundf
  4179  0025A0  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4180  0025A4  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4181  0025A8  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4182  0025AC  0E18               	movlw	24
  4183  0025AE  EFDE  F012         	goto	u10960
  4184  0025B2                     u10965:
  4185  0025B2  90D8               	bcf	status,0,c
  4186  0025B4  3253               	rrcf	(??_roundf+3)^0,f,c
  4187  0025B6  3252               	rrcf	(??_roundf+2)^0,f,c
  4188  0025B8  3251               	rrcf	(??_roundf+1)^0,f,c
  4189  0025BA  3250               	rrcf	??_roundf^0,f,c
  4190  0025BC                     u10960:
  4191  0025BC  2EE8               	decfsz	wreg,f,c
  4192  0025BE  EFD9  F012         	goto	u10965
  4193  0025C2  5050               	movf	??_roundf^0,w,c
  4194  0025C4  0100               	movlb	0	; () banked
  4195  0025C6  6F64               	movwf	roundf@e& (0+255),b
  4196  0025C8  6B65               	clrf	(roundf@e+1)& (0+255),b
  4197  0025CA  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4198  0025CC  EFF1  F012         	goto	u10971
  4199  0025D0  5165               	movf	(roundf@e+1)& (0+255),w,b
  4200  0025D2  E109               	bnz	u10970
  4201  0025D4  0E96               	movlw	150
  4202  0025D6  5D64               	subwf	roundf@e& (0+255),w,b
  4203  0025D8  A0D8               	btfss	status,0,c
  4204  0025DA  EFF1  F012         	goto	u10971
  4205  0025DE  EFF3  F012         	goto	u10970
  4206  0025E2                     u10971:
  4207  0025E2  EFFD  F012         	goto	l9761
  4208  0025E6                     u10970:
  4209  0025E6                     
  4210                           ; BSR set to: 0
  4211  0025E6  C04C  F04C         	movff	roundf@x,?_roundf
  4212  0025EA  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  4213  0025EE  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  4214  0025F2  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  4215  0025F6  EF96  F014         	goto	l1740
  4216  0025FA                     l9761:
  4217                           
  4218                           ; BSR set to: 0
  4219  0025FA  C06A  F050         	movff	roundf@u,??_roundf
  4220  0025FE  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4221  002602  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4222  002606  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4223  00260A  0E20               	movlw	32
  4224  00260C  EF0D  F013         	goto	u10980
  4225  002610                     u10985:
  4226  002610  90D8               	bcf	status,0,c
  4227  002612  3253               	rrcf	(??_roundf+3)^0,f,c
  4228  002614  3252               	rrcf	(??_roundf+2)^0,f,c
  4229  002616  3251               	rrcf	(??_roundf+1)^0,f,c
  4230  002618  3250               	rrcf	??_roundf^0,f,c
  4231  00261A                     u10980:
  4232  00261A  2EE8               	decfsz	wreg,f,c
  4233  00261C  EF08  F013         	goto	u10985
  4234  002620  5050               	movf	??_roundf^0,w,c
  4235  002622  1051               	iorwf	(??_roundf+1)^0,w,c
  4236  002624  1052               	iorwf	(??_roundf+2)^0,w,c
  4237  002626  1053               	iorwf	(??_roundf+3)^0,w,c
  4238  002628  B4D8               	btfsc	status,2,c
  4239  00262A  EF19  F013         	goto	u10991
  4240  00262E  EF1B  F013         	goto	u10990
  4241  002632                     u10991:
  4242  002632  EF2D  F013         	goto	l9765
  4243  002636                     u10990:
  4244  002636                     
  4245                           ; BSR set to: 0
  4246  002636  C04C  F006         	movff	roundf@x,___flneg@f1
  4247  00263A  C04D  F007         	movff	roundf@x+1,___flneg@f1+1
  4248  00263E  C04E  F008         	movff	roundf@x+2,___flneg@f1+2
  4249  002642  C04F  F009         	movff	roundf@x+3,___flneg@f1+3
  4250  002646  EC2F  F02B         	call	___flneg	;wreg free
  4251  00264A  C006  F04C         	movff	?___flneg,roundf@x
  4252  00264E  C007  F04D         	movff	?___flneg+1,roundf@x+1
  4253  002652  C008  F04E         	movff	?___flneg+2,roundf@x+2
  4254  002656  C009  F04F         	movff	?___flneg+3,roundf@x+3
  4255  00265A                     l9765:
  4256  00265A  0100               	movlb	0	; () banked
  4257  00265C  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4258  00265E  EF3C  F013         	goto	u11000
  4259  002662  5165               	movf	(roundf@e+1)& (0+255),w,b
  4260  002664  E107               	bnz	u11001
  4261  002666  0E7E               	movlw	126
  4262  002668  5D64               	subwf	roundf@e& (0+255),w,b
  4263  00266A  B0D8               	btfsc	status,0,c
  4264  00266C  EF3A  F013         	goto	u11001
  4265  002670  EF3C  F013         	goto	u11000
  4266  002674                     u11001:
  4267  002674  EF58  F013         	goto	l9771
  4268  002678                     u11000:
  4269  002678                     
  4270                           ; BSR set to: 0
  4271  002678  C06A  F01B         	movff	roundf@u,___flmul@b
  4272  00267C  C06B  F01C         	movff	roundf@u+1,___flmul@b+1
  4273  002680  C06C  F01D         	movff	roundf@u+2,___flmul@b+2
  4274  002684  C06D  F01E         	movff	roundf@u+3,___flmul@b+3
  4275  002688  0E00               	movlw	0
  4276  00268A  6E1F               	movwf	___flmul@a^0,c
  4277  00268C  0E00               	movlw	0
  4278  00268E  6E20               	movwf	(___flmul@a+1)^0,c
  4279  002690  0E00               	movlw	0
  4280  002692  6E21               	movwf	(___flmul@a+2)^0,c
  4281  002694  0E00               	movlw	0
  4282  002696  6E22               	movwf	(___flmul@a+3)^0,c
  4283  002698  ECBC  F00E         	call	___flmul	;wreg free
  4284  00269C  C01B  F04C         	movff	?___flmul,?_roundf
  4285  0026A0  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  4286  0026A4  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  4287  0026A8  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  4288  0026AC  EF96  F014         	goto	l1740
  4289  0026B0                     l9771:
  4290                           
  4291                           ; BSR set to: 0
  4292  0026B0  0E00               	movlw	0
  4293  0026B2  6E38               	movwf	___fladd@a^0,c
  4294  0026B4  0E00               	movlw	0
  4295  0026B6  6E39               	movwf	(___fladd@a+1)^0,c
  4296  0026B8  0E00               	movlw	0
  4297  0026BA  6E3A               	movwf	(___fladd@a+2)^0,c
  4298  0026BC  0E4B               	movlw	75
  4299  0026BE  6E3B               	movwf	(___fladd@a+3)^0,c
  4300  0026C0  C04C  F034         	movff	roundf@x,___fladd@b
  4301  0026C4  C04D  F035         	movff	roundf@x+1,___fladd@b+1
  4302  0026C8  C04E  F036         	movff	roundf@x+2,___fladd@b+2
  4303  0026CC  C04F  F037         	movff	roundf@x+3,___fladd@b+3
  4304  0026D0  EC5C  F00C         	call	___fladd	;wreg free
  4305  0026D4  C034  F066         	movff	?___fladd,_roundf$1827
  4306  0026D8  C035  F067         	movff	?___fladd+1,_roundf$1827+1
  4307  0026DC  C036  F068         	movff	?___fladd+2,_roundf$1827+2
  4308  0026E0  C037  F069         	movff	?___fladd+3,_roundf$1827+3
  4309  0026E4  0E00               	movlw	0
  4310  0026E6  6E38               	movwf	___fladd@a^0,c
  4311  0026E8  0E00               	movlw	0
  4312  0026EA  6E39               	movwf	(___fladd@a+1)^0,c
  4313  0026EC  0E00               	movlw	0
  4314  0026EE  6E3A               	movwf	(___fladd@a+2)^0,c
  4315  0026F0  0ECB               	movlw	203
  4316  0026F2  6E3B               	movwf	(___fladd@a+3)^0,c
  4317  0026F4  C066  F034         	movff	_roundf$1827,___fladd@b
  4318  0026F8  C067  F035         	movff	_roundf$1827+1,___fladd@b+1
  4319  0026FC  C068  F036         	movff	_roundf$1827+2,___fladd@b+2
  4320  002700  C069  F037         	movff	_roundf$1827+3,___fladd@b+3
  4321  002704  EC5C  F00C         	call	___fladd	;wreg free
  4322  002708  C034  F060         	movff	?___fladd,_roundf$1828
  4323  00270C  C035  F061         	movff	?___fladd+1,_roundf$1828+1
  4324  002710  C036  F062         	movff	?___fladd+2,_roundf$1828+2
  4325  002714  C037  F063         	movff	?___fladd+3,_roundf$1828+3
  4326  002718  C060  F044         	movff	_roundf$1828,___flsub@b
  4327  00271C  C061  F045         	movff	_roundf$1828+1,___flsub@b+1
  4328  002720  C062  F046         	movff	_roundf$1828+2,___flsub@b+2
  4329  002724  C063  F047         	movff	_roundf$1828+3,___flsub@b+3
  4330  002728  C04C  F048         	movff	roundf@x,___flsub@a
  4331  00272C  C04D  F049         	movff	roundf@x+1,___flsub@a+1
  4332  002730  C04E  F04A         	movff	roundf@x+2,___flsub@a+2
  4333  002734  C04F  F04B         	movff	roundf@x+3,___flsub@a+3
  4334  002738  EC6B  F02A         	call	___flsub	;wreg free
  4335  00273C  C044  F06E         	movff	?___flsub,roundf@y
  4336  002740  C045  F06F         	movff	?___flsub+1,roundf@y+1
  4337  002744  C046  F070         	movff	?___flsub+2,roundf@y+2
  4338  002748  C047  F071         	movff	?___flsub+3,roundf@y+3
  4339  00274C  0E00               	movlw	0
  4340  00274E  6E34               	movwf	___flge@ff1^0,c
  4341  002750  0E00               	movlw	0
  4342  002752  6E35               	movwf	(___flge@ff1+1)^0,c
  4343  002754  0E00               	movlw	0
  4344  002756  6E36               	movwf	(___flge@ff1+2)^0,c
  4345  002758  0E3F               	movlw	63
  4346  00275A  6E37               	movwf	(___flge@ff1+3)^0,c
  4347  00275C  C06E  F038         	movff	roundf@y,___flge@ff2
  4348  002760  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  4349  002764  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  4350  002768  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  4351  00276C  ECC3  F021         	call	___flge	;wreg free
  4352  002770  B0D8               	btfsc	status,0,c
  4353  002772  EFBD  F013         	goto	u11011
  4354  002776  EFBF  F013         	goto	u11010
  4355  00277A                     u11011:
  4356  00277A  EFF5  F013         	goto	l9775
  4357  00277E                     u11010:
  4358  00277E  C04C  F038         	movff	roundf@x,___fladd@a
  4359  002782  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4360  002786  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4361  00278A  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4362  00278E  C06E  F034         	movff	roundf@y,___fladd@b
  4363  002792  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4364  002796  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4365  00279A  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4366  00279E  EC5C  F00C         	call	___fladd	;wreg free
  4367  0027A2  C034  F066         	movff	?___fladd,_roundf$1827
  4368  0027A6  C035  F067         	movff	?___fladd+1,_roundf$1827+1
  4369  0027AA  C036  F068         	movff	?___fladd+2,_roundf$1827+2
  4370  0027AE  C037  F069         	movff	?___fladd+3,_roundf$1827+3
  4371  0027B2  C066  F034         	movff	_roundf$1827,___fladd@b
  4372  0027B6  C067  F035         	movff	_roundf$1827+1,___fladd@b+1
  4373  0027BA  C068  F036         	movff	_roundf$1827+2,___fladd@b+2
  4374  0027BE  C069  F037         	movff	_roundf$1827+3,___fladd@b+3
  4375  0027C2  0E00               	movlw	0
  4376  0027C4  6E38               	movwf	___fladd@a^0,c
  4377  0027C6  0E00               	movlw	0
  4378  0027C8  6E39               	movwf	(___fladd@a+1)^0,c
  4379  0027CA  0E80               	movlw	128
  4380  0027CC  6E3A               	movwf	(___fladd@a+2)^0,c
  4381  0027CE  0EBF               	movlw	191
  4382  0027D0  6E3B               	movwf	(___fladd@a+3)^0,c
  4383  0027D2  EC5C  F00C         	call	___fladd	;wreg free
  4384  0027D6  C034  F06E         	movff	?___fladd,roundf@y
  4385  0027DA  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4386  0027DE  C036  F070         	movff	?___fladd+2,roundf@y+2
  4387  0027E2  C037  F071         	movff	?___fladd+3,roundf@y+3
  4388  0027E6  EF5E  F014         	goto	l9781
  4389  0027EA                     l9775:
  4390  0027EA  0E00               	movlw	0
  4391  0027EC  6E34               	movwf	___flge@ff1^0,c
  4392  0027EE  0E00               	movlw	0
  4393  0027F0  6E35               	movwf	(___flge@ff1+1)^0,c
  4394  0027F2  0E00               	movlw	0
  4395  0027F4  6E36               	movwf	(___flge@ff1+2)^0,c
  4396  0027F6  0EBF               	movlw	191
  4397  0027F8  6E37               	movwf	(___flge@ff1+3)^0,c
  4398  0027FA  C06E  F038         	movff	roundf@y,___flge@ff2
  4399  0027FE  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  4400  002802  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  4401  002806  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  4402  00280A  ECC3  F021         	call	___flge	;wreg free
  4403  00280E  A0D8               	btfss	status,0,c
  4404  002810  EF0C  F014         	goto	u11021
  4405  002814  EF0E  F014         	goto	u11020
  4406  002818                     u11021:
  4407  002818  EF44  F014         	goto	l9779
  4408  00281C                     u11020:
  4409  00281C  C04C  F038         	movff	roundf@x,___fladd@a
  4410  002820  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4411  002824  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4412  002828  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4413  00282C  C06E  F034         	movff	roundf@y,___fladd@b
  4414  002830  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4415  002834  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4416  002838  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4417  00283C  EC5C  F00C         	call	___fladd	;wreg free
  4418  002840  C034  F066         	movff	?___fladd,_roundf$1827
  4419  002844  C035  F067         	movff	?___fladd+1,_roundf$1827+1
  4420  002848  C036  F068         	movff	?___fladd+2,_roundf$1827+2
  4421  00284C  C037  F069         	movff	?___fladd+3,_roundf$1827+3
  4422  002850  C066  F034         	movff	_roundf$1827,___fladd@b
  4423  002854  C067  F035         	movff	_roundf$1827+1,___fladd@b+1
  4424  002858  C068  F036         	movff	_roundf$1827+2,___fladd@b+2
  4425  00285C  C069  F037         	movff	_roundf$1827+3,___fladd@b+3
  4426  002860  0E00               	movlw	0
  4427  002862  6E38               	movwf	___fladd@a^0,c
  4428  002864  0E00               	movlw	0
  4429  002866  6E39               	movwf	(___fladd@a+1)^0,c
  4430  002868  0E80               	movlw	128
  4431  00286A  6E3A               	movwf	(___fladd@a+2)^0,c
  4432  00286C  0E3F               	movlw	63
  4433  00286E  6E3B               	movwf	(___fladd@a+3)^0,c
  4434  002870  EC5C  F00C         	call	___fladd	;wreg free
  4435  002874  C034  F06E         	movff	?___fladd,roundf@y
  4436  002878  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4437  00287C  C036  F070         	movff	?___fladd+2,roundf@y+2
  4438  002880  C037  F071         	movff	?___fladd+3,roundf@y+3
  4439  002884  EF5E  F014         	goto	l9781
  4440  002888                     l9779:
  4441  002888  C06E  F034         	movff	roundf@y,___fladd@b
  4442  00288C  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4443  002890  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4444  002894  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4445  002898  C04C  F038         	movff	roundf@x,___fladd@a
  4446  00289C  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4447  0028A0  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4448  0028A4  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4449  0028A8  EC5C  F00C         	call	___fladd	;wreg free
  4450  0028AC  C034  F06E         	movff	?___fladd,roundf@y
  4451  0028B0  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4452  0028B4  C036  F070         	movff	?___fladd+2,roundf@y+2
  4453  0028B8  C037  F071         	movff	?___fladd+3,roundf@y+3
  4454  0028BC                     l9781:
  4455  0028BC  C06A  F050         	movff	roundf@u,??_roundf
  4456  0028C0  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4457  0028C4  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4458  0028C8  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4459  0028CC  0E20               	movlw	32
  4460  0028CE  EF6E  F014         	goto	u11030
  4461  0028D2                     u11035:
  4462  0028D2  90D8               	bcf	status,0,c
  4463  0028D4  3253               	rrcf	(??_roundf+3)^0,f,c
  4464  0028D6  3252               	rrcf	(??_roundf+2)^0,f,c
  4465  0028D8  3251               	rrcf	(??_roundf+1)^0,f,c
  4466  0028DA  3250               	rrcf	??_roundf^0,f,c
  4467  0028DC                     u11030:
  4468  0028DC  2EE8               	decfsz	wreg,f,c
  4469  0028DE  EF69  F014         	goto	u11035
  4470  0028E2  5050               	movf	??_roundf^0,w,c
  4471  0028E4  1051               	iorwf	(??_roundf+1)^0,w,c
  4472  0028E6  1052               	iorwf	(??_roundf+2)^0,w,c
  4473  0028E8  1053               	iorwf	(??_roundf+3)^0,w,c
  4474  0028EA  B4D8               	btfsc	status,2,c
  4475  0028EC  EF7A  F014         	goto	u11041
  4476  0028F0  EF7C  F014         	goto	u11040
  4477  0028F4                     u11041:
  4478  0028F4  EF8E  F014         	goto	l9785
  4479  0028F8                     u11040:
  4480  0028F8  C06E  F006         	movff	roundf@y,___flneg@f1
  4481  0028FC  C06F  F007         	movff	roundf@y+1,___flneg@f1+1
  4482  002900  C070  F008         	movff	roundf@y+2,___flneg@f1+2
  4483  002904  C071  F009         	movff	roundf@y+3,___flneg@f1+3
  4484  002908  EC2F  F02B         	call	___flneg	;wreg free
  4485  00290C  C006  F06E         	movff	?___flneg,roundf@y
  4486  002910  C007  F06F         	movff	?___flneg+1,roundf@y+1
  4487  002914  C008  F070         	movff	?___flneg+2,roundf@y+2
  4488  002918  C009  F071         	movff	?___flneg+3,roundf@y+3
  4489  00291C                     l9785:
  4490  00291C  C06E  F04C         	movff	roundf@y,?_roundf
  4491  002920  C06F  F04D         	movff	roundf@y+1,?_roundf+1
  4492  002924  C070  F04E         	movff	roundf@y+2,?_roundf+2
  4493  002928  C071  F04F         	movff	roundf@y+3,?_roundf+3
  4494  00292C                     l1740:
  4495  00292C  0012               	return		;funcret
  4496  00292E                     __end_of_roundf:
  4497                           	opt callstack 0
  4498                           
  4499 ;; *************** function _probarMapeoDireccionCruces *****************
  4500 ;; Defined at:
  4501 ;;		line 1327 in file "main.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  caminoFinal     2    0[BANK1 ] PTR unsigned char 
  4504 ;;		 -> comportamientoBasico@caminoFinal(20), 
  4505 ;;  caminoActual    1    2[BANK1 ] unsigned char 
  4506 ;;  investigando    2    3[BANK1 ] PTR unsigned char 
  4507 ;;		 -> comportamientoBasico@investigandoCruce(1), 
  4508 ;;  posicionInvC    2    5[BANK1 ] PTR unsigned char 
  4509 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
  4510 ;;  mapear          2    7[BANK1 ] PTR unsigned char 
  4511 ;;		 -> comportamientoBasico@mapear(1), 
  4512 ;;  cruceDetecta    2    9[BANK1 ] PTR unsigned char 
  4513 ;;		 -> comportamientoBasico@cruceDetectado(1), 
  4514 ;;  contCaminosR    2   11[BANK1 ] PTR unsigned char 
  4515 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
  4516 ;;  cambioOrient    2   13[BANK1 ] PTR unsigned char 
  4517 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;		None
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      void 
  4522 ;; Registers used:
  4523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4529 ;;      Params:         0       0      15       0       0       0       0       0       0
  4530 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4531 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4532 ;;      Totals:         0       2      15       0       0       0       0       0       0
  4533 ;;Total ram usage:       17 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:   10
  4536 ;; This function calls:
  4537 ;;		_UART_printf
  4538 ;;		_sprintf
  4539 ;; This function is called by:
  4540 ;;		_comportamientoBasico
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text10
  4545  004588                     __ptext10:
  4546                           	opt callstack 0
  4547  004588                     _probarMapeoDireccionCruces:
  4548                           	opt callstack 19
  4549  004588                     
  4550                           ;main.c: 1327: void probarMapeoDireccionCruces(T_UBYTE* caminoFinal, T_UBYTE caminoActua
      +                          l, T_UBYTE* investigandoCruce,;main.c: 1328:         T_UBYTE* posicionInvCruce, T_UBYTE*
      +                           mapear, T_UBYTE* cruceDetectado, T_UBYTE* contCaminosRecorridos,;main.c: 1329:         
      +                          T_UBYTE* cambioOrientacionCarro) {;main.c: 1331:     *investigandoCruce = 0;
  4551  004588  C1E9  FFD9         	movff	probarMapeoDireccionCruces@investigandoCruce,fsr2l
  4552  00458C  C1EA  FFDA         	movff	probarMapeoDireccionCruces@investigandoCruce+1,fsr2h
  4553  004590  0E00               	movlw	0
  4554  004592  6EDF               	movwf	indf2,c
  4555                           
  4556                           ;main.c: 1332:     *posicionInvCruce = 0;
  4557  004594  C1EB  FFD9         	movff	probarMapeoDireccionCruces@posicionInvCruce,fsr2l
  4558  004598  C1EC  FFDA         	movff	probarMapeoDireccionCruces@posicionInvCruce+1,fsr2h
  4559  00459C  0E00               	movlw	0
  4560  00459E  6EDF               	movwf	indf2,c
  4561                           
  4562                           ;main.c: 1333:     *mapear = 0;
  4563  0045A0  C1ED  FFD9         	movff	probarMapeoDireccionCruces@mapear,fsr2l
  4564  0045A4  C1EE  FFDA         	movff	probarMapeoDireccionCruces@mapear+1,fsr2h
  4565  0045A8  0E00               	movlw	0
  4566  0045AA  6EDF               	movwf	indf2,c
  4567                           
  4568                           ;main.c: 1334:     *cruceDetectado = 0;
  4569  0045AC  C1EF  FFD9         	movff	probarMapeoDireccionCruces@cruceDetectado,fsr2l
  4570  0045B0  C1F0  FFDA         	movff	probarMapeoDireccionCruces@cruceDetectado+1,fsr2h
  4571  0045B4  0E00               	movlw	0
  4572  0045B6  6EDF               	movwf	indf2,c
  4573                           
  4574                           ;main.c: 1336:     *contCaminosRecorridos = 0;
  4575  0045B8  C1F1  FFD9         	movff	probarMapeoDireccionCruces@contCaminosRecorridos,fsr2l
  4576  0045BC  C1F2  FFDA         	movff	probarMapeoDireccionCruces@contCaminosRecorridos+1,fsr2h
  4577  0045C0  0E00               	movlw	0
  4578  0045C2  6EDF               	movwf	indf2,c
  4579                           
  4580                           ;main.c: 1337:     *cambioOrientacionCarro = 0;
  4581  0045C4  C1F3  FFD9         	movff	probarMapeoDireccionCruces@cambioOrientacionCarro,fsr2l
  4582  0045C8  C1F4  FFDA         	movff	probarMapeoDireccionCruces@cambioOrientacionCarro+1,fsr2h
  4583  0045CC  0E00               	movlw	0
  4584  0045CE  6EDF               	movwf	indf2,c
  4585  0045D0                     
  4586                           ;main.c: 1339:     if (!caminoEncontrado) {
  4587  0045D0  5059               	movf	_caminoEncontrado^0,w,c
  4588  0045D2  A4D8               	btfss	status,2,c
  4589  0045D4  EFEE  F022         	goto	u11791
  4590  0045D8  EFF0  F022         	goto	u11790
  4591  0045DC                     u11791:
  4592  0045DC  EF40  F023         	goto	l727
  4593  0045E0                     u11790:
  4594  0045E0                     
  4595                           ;main.c: 1341:         caminoFinal[numMovimientosTotales++] = caminoActual;
  4596  0045E0  0101               	movlb	1	; () banked
  4597  0045E2  5141               	movf	_numMovimientosTotales& (0+255),w,b
  4598  0045E4  25E6               	addwf	probarMapeoDireccionCruces@caminoFinal& (0+255),w,b
  4599  0045E6  6ED9               	movwf	fsr2l,c
  4600  0045E8  0E00               	movlw	0
  4601  0045EA  21E7               	addwfc	(probarMapeoDireccionCruces@caminoFinal+1)& (0+255),w,b
  4602  0045EC  6EDA               	movwf	fsr2h,c
  4603  0045EE  C1E8  FFDF         	movff	probarMapeoDireccionCruces@caminoActual,indf2
  4604  0045F2                     
  4605                           ; BSR set to: 1
  4606  0045F2  2B41               	incf	_numMovimientosTotales& (0+255),f,b
  4607                           
  4608                           ;main.c: 1343:         switch (caminoActual) {
  4609  0045F4  EF20  F023         	goto	l10503
  4610  0045F8                     l10495:
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;main.c: 1345:                 sprintf(buffer, "\r\nEl camino ENFRENTE se acerca mas al 
      +                          destino\r\n");
  4614  0045F8  0E92               	movlw	low _buffer
  4615  0045FA  6FE7               	movwf	sprintf@s& (0+255),b
  4616  0045FC  0E01               	movlw	high _buffer
  4617  0045FE  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  4618  004600  0EE4               	movlw	low STR_20
  4619  004602  6FE9               	movwf	sprintf@fmt& (0+255),b
  4620  004604  0E7D               	movlw	high STR_20
  4621  004606  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  4622  004608  EC5B  F029         	call	_sprintf	;wreg free
  4623                           
  4624                           ;main.c: 1346:                 break;
  4625  00460C  EF3A  F023         	goto	l10505
  4626  004610                     l10497:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;main.c: 1349:                 sprintf(buffer, "\r\nEl camino IZQUIERDA se acerca mas al
      +                           destino\r\n");
  4630  004610  0E92               	movlw	low _buffer
  4631  004612  6FE7               	movwf	sprintf@s& (0+255),b
  4632  004614  0E01               	movlw	high _buffer
  4633  004616  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  4634  004618  0EB3               	movlw	low STR_21
  4635  00461A  6FE9               	movwf	sprintf@fmt& (0+255),b
  4636  00461C  0E7D               	movlw	high STR_21
  4637  00461E  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  4638  004620  EC5B  F029         	call	_sprintf	;wreg free
  4639                           
  4640                           ;main.c: 1350:                 break;
  4641  004624  EF3A  F023         	goto	l10505
  4642  004628                     l10499:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;main.c: 1353:                 sprintf(buffer, "\r\nEl camino DERECHA se acerca mas al d
      +                          estino\r\n");
  4646  004628  0E92               	movlw	low _buffer
  4647  00462A  6FE7               	movwf	sprintf@s& (0+255),b
  4648  00462C  0E01               	movlw	high _buffer
  4649  00462E  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  4650  004630  0E14               	movlw	low STR_22
  4651  004632  6FE9               	movwf	sprintf@fmt& (0+255),b
  4652  004634  0E7E               	movlw	high STR_22
  4653  004636  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  4654  004638  EC5B  F029         	call	_sprintf	;wreg free
  4655                           
  4656                           ;main.c: 1354:                 break;
  4657  00463C  EF3A  F023         	goto	l10505
  4658  004640                     l10503:
  4659                           
  4660                           ; BSR set to: 1
  4661  004640  51E8               	movf	probarMapeoDireccionCruces@caminoActual& (0+255),w,b
  4662  004642  0100               	movlb	0	; () banked
  4663  004644  6FFB               	movwf	??_probarMapeoDireccionCruces& (0+255),b
  4664  004646  6BFC               	clrf	(??_probarMapeoDireccionCruces+1)& (0+255),b
  4665                           
  4666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4667                           ; Switch size 1, requested type "simple"
  4668                           ; Number of cases is 1, Range of values is 0 to 0
  4669                           ; switch strategies available:
  4670                           ; Name         Instructions Cycles
  4671                           ; simple_byte            4     3 (average)
  4672                           ;	Chosen strategy is simple_byte
  4673  004648  51FC               	movf	(??_probarMapeoDireccionCruces+1)& (0+255),w,b
  4674  00464A  0A00               	xorlw	0	; case 0
  4675  00464C  B4D8               	btfsc	status,2,c
  4676  00464E  EF2B  F023         	goto	l11285
  4677  004652  EF3A  F023         	goto	l10505
  4678  004656                     l11285:
  4679                           
  4680                           ; BSR set to: 0
  4681                           ; Switch size 1, requested type "simple"
  4682                           ; Number of cases is 3, Range of values is 1 to 3
  4683                           ; switch strategies available:
  4684                           ; Name         Instructions Cycles
  4685                           ; simple_byte           10     6 (average)
  4686                           ;	Chosen strategy is simple_byte
  4687  004656  51FB               	movf	??_probarMapeoDireccionCruces& (0+255),w,b
  4688  004658  0A01               	xorlw	1	; case 1
  4689  00465A  B4D8               	btfsc	status,2,c
  4690  00465C  EFFC  F022         	goto	l10495
  4691  004660  0A03               	xorlw	3	; case 2
  4692  004662  B4D8               	btfsc	status,2,c
  4693  004664  EF08  F023         	goto	l10497
  4694  004668  0A01               	xorlw	1	; case 3
  4695  00466A  B4D8               	btfsc	status,2,c
  4696  00466C  EF14  F023         	goto	l10499
  4697  004670  EF3A  F023         	goto	l10505
  4698  004674                     l10505:
  4699                           
  4700                           ;main.c: 1357:         UART_printf(buffer);
  4701  004674  0E92               	movlw	low _buffer
  4702  004676  6E07               	movwf	UART_printf@cadena^0,c
  4703  004678  0E01               	movlw	high _buffer
  4704  00467A  6E08               	movwf	(UART_printf@cadena+1)^0,c
  4705  00467C  EC51  F028         	call	_UART_printf	;wreg free
  4706  004680                     l727:
  4707  004680  0012               	return		;funcret
  4708  004682                     __end_of_probarMapeoDireccionCruces:
  4709                           	opt callstack 0
  4710                           
  4711 ;; *************** function _moverCarrito *****************
  4712 ;; Defined at:
  4713 ;;		line 524 in file "main.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  espejearCarr    1    wreg     unsigned char 
  4716 ;;  carroEspejea    2   40[BANK0 ] PTR unsigned char 
  4717 ;;		 -> comportamientoBasico@carroEspejeado(1), 
  4718 ;;  avanceRectoL    2   42[BANK0 ] PTR unsigned char 
  4719 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;  espejearCarr    1   46[BANK0 ] unsigned char 
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      void 
  4724 ;; Registers used:
  4725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4731 ;;      Params:         0       4       0       0       0       0       0       0       0
  4732 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4733 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4734 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4735 ;;Total ram usage:        7 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    8
  4738 ;; This function calls:
  4739 ;;		_forzarAvanceRecto
  4740 ;;		_forzarEspejeo
  4741 ;; This function is called by:
  4742 ;;		_comportamientoBasico
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745                           
  4746                           	psect	text11
  4747  004176                     __ptext11:
  4748                           	opt callstack 0
  4749  004176                     _moverCarrito:
  4750                           	opt callstack 21
  4751                           
  4752                           ;incstack = 0
  4753                           ;moverCarrito@espejearCarroY stored from wreg
  4754  004176  0100               	movlb	0	; () banked
  4755  004178  6F8E               	movwf	moverCarrito@espejearCarroY& (0+255),b
  4756  00417A                     
  4757                           ;main.c: 526:     switch (mouse.curr_state) {
  4758  00417A  EF20  F021         	goto	l10089
  4759  00417E                     l429:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;main.c: 530:             LATB4 = 1;
  4763  00417E  888A               	bsf	3978,4,c	;volatile
  4764                           
  4765                           ;main.c: 531:             LATB5 = 0;
  4766  004180  9A8A               	bcf	3978,5,c	;volatile
  4767                           
  4768                           ;main.c: 532:             LATB6 = 1;
  4769  004182  8C8A               	bsf	3978,6,c	;volatile
  4770                           
  4771                           ;main.c: 533:             LATB7 = 0;
  4772  004184  9E8A               	bcf	3978,7,c	;volatile
  4773  004186                     
  4774                           ; BSR set to: 0
  4775                           ;main.c: 535:             if (*avanceRectoLargo) {
  4776  004186  C08A  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4777  00418A  C08B  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4778  00418E  50DF               	movf	indf2,w,c
  4779  004190  B4D8               	btfsc	status,2,c
  4780  004192  EFCD  F020         	goto	u11341
  4781  004196  EFCF  F020         	goto	u11340
  4782  00419A                     u11341:
  4783  00419A  EFE2  F020         	goto	l10071
  4784  00419E                     u11340:
  4785  00419E                     
  4786                           ; BSR set to: 0
  4787                           ;main.c: 536:                 *avanceRectoLargo = 0;
  4788  00419E  C08A  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4789  0041A2  C08B  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4790  0041A6  0E00               	movlw	0
  4791  0041A8  6EDF               	movwf	indf2,c
  4792  0041AA                     
  4793                           ; BSR set to: 0
  4794                           ;main.c: 537:                 _delay((unsigned long)((410 * 2)*(4000000/4000.0)));
  4795  0041AA  0E05               	movlw	5
  4796  0041AC  0100               	movlb	0	; () banked
  4797  0041AE  6F8D               	movwf	(??_moverCarrito+1)& (0+255),b
  4798  0041B0  0E29               	movlw	41
  4799  0041B2  6F8C               	movwf	??_moverCarrito& (0+255),b
  4800  0041B4  0EEA               	movlw	234
  4801  0041B6                     u12167:
  4802  0041B6  2EE8               	decfsz	wreg,f,c
  4803  0041B8  D7FE               	bra	u12167
  4804  0041BA  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4805  0041BC  D7FC               	bra	u12167
  4806  0041BE  2F8D               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4807  0041C0  D7FA               	bra	u12167
  4808  0041C2  F000               	nop	
  4809  0041C4                     l10071:
  4810                           
  4811                           ;main.c: 541:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  4812  0041C4  0E48               	movlw	72
  4813  0041C6  0100               	movlb	0	; () banked
  4814  0041C8  6F8C               	movwf	??_moverCarrito& (0+255),b
  4815  0041CA  0E6C               	movlw	108
  4816  0041CC                     u12177:
  4817  0041CC  2EE8               	decfsz	wreg,f,c
  4818  0041CE  D7FE               	bra	u12177
  4819  0041D0  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4820  0041D2  D7FC               	bra	u12177
  4821  0041D4  F000               	nop	
  4822  0041D6  EF3E  F021         	goto	l438
  4823  0041DA                     l10073:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;main.c: 547:             if (espejearCarroY) {
  4827  0041DA  518E               	movf	moverCarrito@espejearCarroY& (0+255),w,b
  4828  0041DC  B4D8               	btfsc	status,2,c
  4829  0041DE  EFF3  F020         	goto	u11351
  4830  0041E2  EFF5  F020         	goto	u11350
  4831  0041E6                     u11351:
  4832  0041E6  EFFF  F020         	goto	l434
  4833  0041EA                     u11350:
  4834  0041EA                     
  4835                           ; BSR set to: 0
  4836                           ;main.c: 548:                 forzarEspejeo();
  4837  0041EA  ECD3  F02A         	call	_forzarEspejeo	;wreg free
  4838  0041EE                     
  4839                           ;main.c: 549:                 *carroEspejeado = 1;
  4840  0041EE  C088  FFD9         	movff	moverCarrito@carroEspejeado,fsr2l
  4841  0041F2  C089  FFDA         	movff	moverCarrito@carroEspejeado+1,fsr2h
  4842  0041F6  0E01               	movlw	1
  4843  0041F8  6EDF               	movwf	indf2,c
  4844                           
  4845                           ;main.c: 550:             } else {
  4846  0041FA  EF3E  F021         	goto	l438
  4847  0041FE                     l434:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;main.c: 551:                 LATB4 = 0;
  4851  0041FE  988A               	bcf	3978,4,c	;volatile
  4852                           
  4853                           ;main.c: 552:                 LATB5 = 0;
  4854  004200  9A8A               	bcf	3978,5,c	;volatile
  4855                           
  4856                           ;main.c: 553:                 LATB6 = 1;
  4857  004202  8C8A               	bsf	3978,6,c	;volatile
  4858                           
  4859                           ;main.c: 554:                 LATB7 = 0;
  4860  004204  9E8A               	bcf	3978,7,c	;volatile
  4861  004206                     l10079:
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;main.c: 555:                 _delay((unsigned long)((410)*(4000000/4000.0)));
  4865  004206  0E03               	movlw	3
  4866  004208  0100               	movlb	0	; () banked
  4867  00420A  6F8D               	movwf	(??_moverCarrito+1)& (0+255),b
  4868  00420C  0E15               	movlw	21
  4869  00420E  6F8C               	movwf	??_moverCarrito& (0+255),b
  4870  004210  0E73               	movlw	115
  4871  004212                     u12187:
  4872  004212  2EE8               	decfsz	wreg,f,c
  4873  004214  D7FE               	bra	u12187
  4874  004216  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4875  004218  D7FC               	bra	u12187
  4876  00421A  2F8D               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4877  00421C  D7FA               	bra	u12187
  4878  00421E  D000               	nop2	
  4879  004220                     
  4880                           ;main.c: 556:                 forzarAvanceRecto();
  4881  004220  ECE3  F02B         	call	_forzarAvanceRecto	;wreg free
  4882  004224  EF3E  F021         	goto	l438
  4883  004228                     l436:
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;main.c: 564:             LATB4 = 1;
  4887  004228  888A               	bsf	3978,4,c	;volatile
  4888                           
  4889                           ;main.c: 565:             LATB5 = 0;
  4890  00422A  9A8A               	bcf	3978,5,c	;volatile
  4891                           
  4892                           ;main.c: 566:             LATB6 = 0;
  4893  00422C  9C8A               	bcf	3978,6,c	;volatile
  4894                           
  4895                           ;main.c: 567:             LATB7 = 0;
  4896  00422E  9E8A               	bcf	3978,7,c	;volatile
  4897  004230  EF03  F021         	goto	l10079
  4898  004234                     l437:
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;main.c: 576:             LATB4 = 0;
  4902  004234  988A               	bcf	3978,4,c	;volatile
  4903                           
  4904                           ;main.c: 577:             LATB5 = 0;
  4905  004236  9A8A               	bcf	3978,5,c	;volatile
  4906                           
  4907                           ;main.c: 578:             LATB6 = 0;
  4908  004238  9C8A               	bcf	3978,6,c	;volatile
  4909                           
  4910                           ;main.c: 579:             LATB7 = 0;
  4911  00423A  9E8A               	bcf	3978,7,c	;volatile
  4912                           
  4913                           ;main.c: 581:             break;
  4914  00423C  EF3E  F021         	goto	l438
  4915  004240                     l10089:
  4916  004240  5057               	movf	_mouse^0,w,c
  4917  004242  0100               	movlb	0	; () banked
  4918  004244  6F8C               	movwf	??_moverCarrito& (0+255),b
  4919  004246  6B8D               	clrf	(??_moverCarrito+1)& (0+255),b
  4920                           
  4921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4922                           ; Switch size 1, requested type "simple"
  4923                           ; Number of cases is 1, Range of values is 0 to 0
  4924                           ; switch strategies available:
  4925                           ; Name         Instructions Cycles
  4926                           ; simple_byte            4     3 (average)
  4927                           ;	Chosen strategy is simple_byte
  4928  004248  518D               	movf	(??_moverCarrito+1)& (0+255),w,b
  4929  00424A  0A00               	xorlw	0	; case 0
  4930  00424C  B4D8               	btfsc	status,2,c
  4931  00424E  EF2B  F021         	goto	l11287
  4932  004252  EF3E  F021         	goto	l438
  4933  004256                     l11287:
  4934                           
  4935                           ; BSR set to: 0
  4936                           ; Switch size 1, requested type "simple"
  4937                           ; Number of cases is 4, Range of values is 1 to 4
  4938                           ; switch strategies available:
  4939                           ; Name         Instructions Cycles
  4940                           ; simple_byte           13     7 (average)
  4941                           ;	Chosen strategy is simple_byte
  4942  004256  518C               	movf	??_moverCarrito& (0+255),w,b
  4943  004258  0A01               	xorlw	1	; case 1
  4944  00425A  B4D8               	btfsc	status,2,c
  4945  00425C  EFBF  F020         	goto	l429
  4946  004260  0A03               	xorlw	3	; case 2
  4947  004262  B4D8               	btfsc	status,2,c
  4948  004264  EFED  F020         	goto	l10073
  4949  004268  0A01               	xorlw	1	; case 3
  4950  00426A  B4D8               	btfsc	status,2,c
  4951  00426C  EF14  F021         	goto	l436
  4952  004270  0A07               	xorlw	7	; case 4
  4953  004272  B4D8               	btfsc	status,2,c
  4954  004274  EF1A  F021         	goto	l437
  4955  004278  EF3E  F021         	goto	l438
  4956  00427C                     l438:
  4957  00427C  0012               	return		;funcret
  4958  00427E                     __end_of_moverCarrito:
  4959                           	opt callstack 0
  4960                           
  4961 ;; *************** function _forzarEspejeo *****************
  4962 ;; Defined at:
  4963 ;;		line 516 in file "main.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;		None
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4977 ;;      Params:         0       0       0       0       0       0       0       0       0
  4978 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4980 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4981 ;;Total ram usage:        0 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    7
  4984 ;; This function calls:
  4985 ;;		___flge
  4986 ;;		_forzarEspejeoDerecha
  4987 ;;		_forzarEspejeoIzquierda
  4988 ;; This function is called by:
  4989 ;;		_moverCarrito
  4990 ;;		_finalizarRecorrido
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text12
  4995  0055A6                     __ptext12:
  4996                           	opt callstack 0
  4997  0055A6                     _forzarEspejeo:
  4998                           	opt callstack 21
  4999  0055A6                     
  5000                           ;main.c: 518:     if (sensorIzquierda > sensorDerecha)
  5001  0055A6  C12C  F034         	movff	_sensorDerecha,___flge@ff1
  5002  0055AA  C12D  F035         	movff	_sensorDerecha+1,___flge@ff1+1
  5003  0055AE  C12E  F036         	movff	_sensorDerecha+2,___flge@ff1+2
  5004  0055B2  C12F  F037         	movff	_sensorDerecha+3,___flge@ff1+3
  5005  0055B6  C128  F038         	movff	_sensorIzquierda,___flge@ff2
  5006  0055BA  C129  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
  5007  0055BE  C12A  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
  5008  0055C2  C12B  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
  5009  0055C6  ECC3  F021         	call	___flge	;wreg free
  5010  0055CA  B0D8               	btfsc	status,0,c
  5011  0055CC  EFEA  F02A         	goto	u11231
  5012  0055D0  EFEC  F02A         	goto	u11230
  5013  0055D4                     u11231:
  5014  0055D4  EFF0  F02A         	goto	l9929
  5015  0055D8                     u11230:
  5016  0055D8                     
  5017                           ;main.c: 519:         forzarEspejeoIzquierda();
  5018  0055D8  EC23  F02A         	call	_forzarEspejeoIzquierda	;wreg free
  5019  0055DC  EFF2  F02A         	goto	l425
  5020  0055E0                     l9929:
  5021                           
  5022                           ;main.c: 521:         forzarEspejeoDerecha();
  5023  0055E0  EC47  F02A         	call	_forzarEspejeoDerecha	;wreg free
  5024  0055E4                     l425:
  5025  0055E4  0012               	return		;funcret
  5026  0055E6                     __end_of_forzarEspejeo:
  5027                           	opt callstack 0
  5028                           
  5029 ;; *************** function _forzarEspejeoIzquierda *****************
  5030 ;; Defined at:
  5031 ;;		line 488 in file "main.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5045 ;;      Params:         0       0       0       0       0       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5047 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5048 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5049 ;;Total ram usage:        1 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    6
  5052 ;; This function calls:
  5053 ;;		_forzarGiroIzquierda
  5054 ;;		_forzarParoAuto
  5055 ;;		_forzarReversa
  5056 ;;		_velocidadEstandar
  5057 ;; This function is called by:
  5058 ;;		_forzarEspejeo
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text13
  5063  005446                     __ptext13:
  5064                           	opt callstack 0
  5065  005446                     _forzarEspejeoIzquierda:
  5066                           	opt callstack 21
  5067  005446                     
  5068                           ;main.c: 490:     forzarParoAuto();
  5069  005446  EC14  F02C         	call	_forzarParoAuto	;wreg free
  5070  00544A                     
  5071                           ;main.c: 491:     velocidadEstandar();
  5072  00544A  EC99  F02B         	call	_velocidadEstandar	;wreg free
  5073  00544E                     
  5074                           ;main.c: 492:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5075  00544E  0E82               	movlw	130
  5076  005450  6E54               	movwf	??_forzarEspejeoIzquierda^0,c
  5077  005452  0EDE               	movlw	222
  5078  005454                     u12197:
  5079  005454  2EE8               	decfsz	wreg,f,c
  5080  005456  D7FE               	bra	u12197
  5081  005458  2E54               	decfsz	??_forzarEspejeoIzquierda^0,f,c
  5082  00545A  D7FC               	bra	u12197
  5083  00545C                     
  5084                           ;main.c: 493:     forzarGiroIzquierda();
  5085  00545C  ECF4  F02B         	call	_forzarGiroIzquierda	;wreg free
  5086  005460                     
  5087                           ;main.c: 494:     forzarParoAuto();
  5088  005460  EC14  F02C         	call	_forzarParoAuto	;wreg free
  5089  005464                     
  5090                           ;main.c: 495:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5091  005464  0E82               	movlw	130
  5092  005466  6E54               	movwf	??_forzarEspejeoIzquierda^0,c
  5093  005468  0EDE               	movlw	222
  5094  00546A                     u12207:
  5095  00546A  2EE8               	decfsz	wreg,f,c
  5096  00546C  D7FE               	bra	u12207
  5097  00546E  2E54               	decfsz	??_forzarEspejeoIzquierda^0,f,c
  5098  005470  D7FC               	bra	u12207
  5099  005472                     
  5100                           ;main.c: 496:     forzarReversa();
  5101  005472  ECD2  F02B         	call	_forzarReversa	;wreg free
  5102  005476                     
  5103                           ;main.c: 497:     forzarParoAuto();
  5104  005476  EC14  F02C         	call	_forzarParoAuto	;wreg free
  5105  00547A                     
  5106                           ;main.c: 498:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5107  00547A  0E82               	movlw	130
  5108  00547C  6E54               	movwf	??_forzarEspejeoIzquierda^0,c
  5109  00547E  0EDE               	movlw	222
  5110  005480                     u12217:
  5111  005480  2EE8               	decfsz	wreg,f,c
  5112  005482  D7FE               	bra	u12217
  5113  005484  2E54               	decfsz	??_forzarEspejeoIzquierda^0,f,c
  5114  005486  D7FC               	bra	u12217
  5115  005488                     
  5116                           ;main.c: 499:     forzarGiroIzquierda();
  5117  005488  ECF4  F02B         	call	_forzarGiroIzquierda	;wreg free
  5118  00548C  0012               	return		;funcret
  5119  00548E                     __end_of_forzarEspejeoIzquierda:
  5120                           	opt callstack 0
  5121                           
  5122 ;; *************** function _forzarGiroIzquierda *****************
  5123 ;; Defined at:
  5124 ;;		line 470 in file "main.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5138 ;;      Params:         0       0       0       0       0       0       0       0       0
  5139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5140 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5141 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5142 ;;Total ram usage:        2 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    2
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_forzarEspejeoIzquierda
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text14
  5153  0057E8                     __ptext14:
  5154                           	opt callstack 0
  5155  0057E8                     _forzarGiroIzquierda:
  5156                           	opt callstack 24
  5157  0057E8                     
  5158                           ;main.c: 471:     LATB4 = 0;
  5159  0057E8  988A               	bcf	3978,4,c	;volatile
  5160                           
  5161                           ;main.c: 472:     LATB5 = 0;
  5162  0057EA  9A8A               	bcf	3978,5,c	;volatile
  5163                           
  5164                           ;main.c: 473:     LATB6 = 1;
  5165  0057EC  8C8A               	bsf	3978,6,c	;volatile
  5166                           
  5167                           ;main.c: 474:     LATB7 = 0;
  5168  0057EE  9E8A               	bcf	3978,7,c	;volatile
  5169  0057F0                     
  5170                           ;main.c: 475:     _delay((unsigned long)((410)*(4000000/4000.0)));
  5171  0057F0  0E03               	movlw	3
  5172  0057F2  6E07               	movwf	(??_forzarGiroIzquierda+1)^0,c
  5173  0057F4  0E15               	movlw	21
  5174  0057F6  6E06               	movwf	??_forzarGiroIzquierda^0,c
  5175  0057F8  0E74               	movlw	116
  5176  0057FA                     u12227:
  5177  0057FA  2EE8               	decfsz	wreg,f,c
  5178  0057FC  D7FE               	bra	u12227
  5179  0057FE  2E06               	decfsz	??_forzarGiroIzquierda^0,f,c
  5180  005800  D7FC               	bra	u12227
  5181  005802  2E07               	decfsz	(??_forzarGiroIzquierda+1)^0,f,c
  5182  005804  D7FA               	bra	u12227
  5183  005806  0012               	return		;funcret
  5184  005808                     __end_of_forzarGiroIzquierda:
  5185                           	opt callstack 0
  5186                           
  5187 ;; *************** function _forzarEspejeoDerecha *****************
  5188 ;; Defined at:
  5189 ;;		line 502 in file "main.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0
  5204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5205 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5206 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5207 ;;Total ram usage:        1 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:    6
  5210 ;; This function calls:
  5211 ;;		_forzarGiroDerecha
  5212 ;;		_forzarParoAuto
  5213 ;;		_forzarReversa
  5214 ;;		_velocidadEstandar
  5215 ;; This function is called by:
  5216 ;;		_forzarEspejeo
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text15
  5221  00548E                     __ptext15:
  5222                           	opt callstack 0
  5223  00548E                     _forzarEspejeoDerecha:
  5224                           	opt callstack 21
  5225  00548E                     
  5226                           ;main.c: 504:     forzarParoAuto();
  5227  00548E  EC14  F02C         	call	_forzarParoAuto	;wreg free
  5228  005492                     
  5229                           ;main.c: 505:     velocidadEstandar();
  5230  005492  EC99  F02B         	call	_velocidadEstandar	;wreg free
  5231  005496                     
  5232                           ;main.c: 506:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5233  005496  0E82               	movlw	130
  5234  005498  6E54               	movwf	??_forzarEspejeoDerecha^0,c
  5235  00549A  0EDE               	movlw	222
  5236  00549C                     u12237:
  5237  00549C  2EE8               	decfsz	wreg,f,c
  5238  00549E  D7FE               	bra	u12237
  5239  0054A0  2E54               	decfsz	??_forzarEspejeoDerecha^0,f,c
  5240  0054A2  D7FC               	bra	u12237
  5241  0054A4                     
  5242                           ;main.c: 507:     forzarGiroDerecha();
  5243  0054A4  EC04  F02C         	call	_forzarGiroDerecha	;wreg free
  5244  0054A8                     
  5245                           ;main.c: 508:     forzarParoAuto();
  5246  0054A8  EC14  F02C         	call	_forzarParoAuto	;wreg free
  5247  0054AC                     
  5248                           ;main.c: 509:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5249  0054AC  0E82               	movlw	130
  5250  0054AE  6E54               	movwf	??_forzarEspejeoDerecha^0,c
  5251  0054B0  0EDE               	movlw	222
  5252  0054B2                     u12247:
  5253  0054B2  2EE8               	decfsz	wreg,f,c
  5254  0054B4  D7FE               	bra	u12247
  5255  0054B6  2E54               	decfsz	??_forzarEspejeoDerecha^0,f,c
  5256  0054B8  D7FC               	bra	u12247
  5257  0054BA                     
  5258                           ;main.c: 510:     forzarReversa();
  5259  0054BA  ECD2  F02B         	call	_forzarReversa	;wreg free
  5260  0054BE                     
  5261                           ;main.c: 511:     forzarParoAuto();
  5262  0054BE  EC14  F02C         	call	_forzarParoAuto	;wreg free
  5263  0054C2                     
  5264                           ;main.c: 512:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5265  0054C2  0E82               	movlw	130
  5266  0054C4  6E54               	movwf	??_forzarEspejeoDerecha^0,c
  5267  0054C6  0EDE               	movlw	222
  5268  0054C8                     u12257:
  5269  0054C8  2EE8               	decfsz	wreg,f,c
  5270  0054CA  D7FE               	bra	u12257
  5271  0054CC  2E54               	decfsz	??_forzarEspejeoDerecha^0,f,c
  5272  0054CE  D7FC               	bra	u12257
  5273  0054D0                     
  5274                           ;main.c: 513:     forzarGiroDerecha();
  5275  0054D0  EC04  F02C         	call	_forzarGiroDerecha	;wreg free
  5276  0054D4  0012               	return		;funcret
  5277  0054D6                     __end_of_forzarEspejeoDerecha:
  5278                           	opt callstack 0
  5279                           
  5280 ;; *************** function _velocidadEstandar *****************
  5281 ;; Defined at:
  5282 ;;		line 1313 in file "main.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5296 ;;      Params:         0       0       0       0       0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5299 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5300 ;;Total ram usage:        0 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:    5
  5303 ;; This function calls:
  5304 ;;		_pwmDuty
  5305 ;; This function is called by:
  5306 ;;		_inicializarComportamientoBasico
  5307 ;;		_comportamientoBasico
  5308 ;;		_forzarEspejeoIzquierda
  5309 ;;		_forzarEspejeoDerecha
  5310 ;;		_regresarAlCruce
  5311 ;;		_probarCruceT
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text16
  5316  005732                     __ptext16:
  5317                           	opt callstack 0
  5318  005732                     _velocidadEstandar:
  5319                           	opt callstack 24
  5320  005732                     
  5321                           ;main.c: 1315:     pwmDuty(100, 1);
  5322  005732  0E00               	movlw	0
  5323  005734  0100               	movlb	0	; () banked
  5324  005736  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  5325  005738  0E64               	movlw	100
  5326  00573A  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  5327  00573C  0E01               	movlw	1
  5328  00573E  6F7E               	movwf	pwmDuty@channel& (0+255),b
  5329  005740  EC08  F01A         	call	_pwmDuty	;wreg free
  5330                           
  5331                           ;main.c: 1316:     pwmDuty(100, 2);
  5332  005744  0E00               	movlw	0
  5333  005746  0100               	movlb	0	; () banked
  5334  005748  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  5335  00574A  0E64               	movlw	100
  5336  00574C  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  5337  00574E  0E02               	movlw	2
  5338  005750  6F7E               	movwf	pwmDuty@channel& (0+255),b
  5339  005752  EC08  F01A         	call	_pwmDuty	;wreg free
  5340  005756  0012               	return		;funcret
  5341  005758                     __end_of_velocidadEstandar:
  5342                           	opt callstack 0
  5343                           
  5344 ;; *************** function _forzarReversa *****************
  5345 ;; Defined at:
  5346 ;;		line 450 in file "main.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5360 ;;      Params:         0       0       0       0       0       0       0       0       0
  5361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5362 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5363 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5364 ;;Total ram usage:        2 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    2
  5367 ;; This function calls:
  5368 ;;		Nothing
  5369 ;; This function is called by:
  5370 ;;		_forzarEspejeoIzquierda
  5371 ;;		_forzarEspejeoDerecha
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text17
  5376  0057A4                     __ptext17:
  5377                           	opt callstack 0
  5378  0057A4                     _forzarReversa:
  5379                           	opt callstack 24
  5380  0057A4                     
  5381                           ;main.c: 451:     LATB4 = 0;
  5382  0057A4  988A               	bcf	3978,4,c	;volatile
  5383                           
  5384                           ;main.c: 452:     LATB5 = 1;
  5385  0057A6  8A8A               	bsf	3978,5,c	;volatile
  5386                           
  5387                           ;main.c: 453:     LATB6 = 0;
  5388  0057A8  9C8A               	bcf	3978,6,c	;volatile
  5389                           
  5390                           ;main.c: 454:     LATB7 = 1;
  5391  0057AA  8E8A               	bsf	3978,7,c	;volatile
  5392  0057AC                     
  5393                           ;main.c: 456:     _delay((unsigned long)((400)*(4000000/4000.0)));
  5394  0057AC  0E03               	movlw	3
  5395  0057AE  6E07               	movwf	(??_forzarReversa+1)^0,c
  5396  0057B0  0E08               	movlw	8
  5397  0057B2  6E06               	movwf	??_forzarReversa^0,c
  5398  0057B4  0E77               	movlw	119
  5399  0057B6                     u12267:
  5400  0057B6  2EE8               	decfsz	wreg,f,c
  5401  0057B8  D7FE               	bra	u12267
  5402  0057BA  2E06               	decfsz	??_forzarReversa^0,f,c
  5403  0057BC  D7FC               	bra	u12267
  5404  0057BE  2E07               	decfsz	(??_forzarReversa+1)^0,f,c
  5405  0057C0  D7FA               	bra	u12267
  5406  0057C2  F000               	nop	
  5407  0057C4  0012               	return		;funcret
  5408  0057C6                     __end_of_forzarReversa:
  5409                           	opt callstack 0
  5410                           
  5411 ;; *************** function _forzarParoAuto *****************
  5412 ;; Defined at:
  5413 ;;		line 439 in file "main.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5427 ;;      Params:         0       0       0       0       0       0       0       0       0
  5428 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5429 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5430 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5431 ;;Total ram usage:        1 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    2
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_comportamientoBasico
  5438 ;;		_forzarEspejeoIzquierda
  5439 ;;		_forzarEspejeoDerecha
  5440 ;;		_main
  5441 ;;		_finalizarRecorrido
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text18
  5446  005828                     __ptext18:
  5447                           	opt callstack 0
  5448  005828                     _forzarParoAuto:
  5449                           	opt callstack 28
  5450  005828                     
  5451                           ;main.c: 441:     LATB4 = 0;
  5452  005828  988A               	bcf	3978,4,c	;volatile
  5453                           
  5454                           ;main.c: 442:     LATB5 = 0;
  5455  00582A  9A8A               	bcf	3978,5,c	;volatile
  5456                           
  5457                           ;main.c: 443:     LATB6 = 0;
  5458  00582C  9C8A               	bcf	3978,6,c	;volatile
  5459                           
  5460                           ;main.c: 446:     if (!0)
  5461  00582E  9E8A               	bcf	3978,7,c	;volatile
  5462  005830                     
  5463                           ;main.c: 447:         _delay((unsigned long)((30)*(4000000/4000.0)));
  5464  005830  0E27               	movlw	39
  5465  005832  6E06               	movwf	??_forzarParoAuto^0,c
  5466  005834  0EF5               	movlw	245
  5467  005836                     u12277:
  5468  005836  2EE8               	decfsz	wreg,f,c
  5469  005838  D7FE               	bra	u12277
  5470  00583A  2E06               	decfsz	??_forzarParoAuto^0,f,c
  5471  00583C  D7FC               	bra	u12277
  5472  00583E  F000               	nop	
  5473  005840  0012               	return		;funcret
  5474  005842                     __end_of_forzarParoAuto:
  5475                           	opt callstack 0
  5476                           
  5477 ;; *************** function _forzarGiroDerecha *****************
  5478 ;; Defined at:
  5479 ;;		line 479 in file "main.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;		None
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;		None
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  1    wreg      void 
  5486 ;; Registers used:
  5487 ;;		wreg
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5493 ;;      Params:         0       0       0       0       0       0       0       0       0
  5494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5495 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5496 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5497 ;;Total ram usage:        2 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    2
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		_forzarEspejeoDerecha
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text19
  5508  005808                     __ptext19:
  5509                           	opt callstack 0
  5510  005808                     _forzarGiroDerecha:
  5511                           	opt callstack 24
  5512  005808                     
  5513                           ;main.c: 480:     LATB4 = 1;
  5514  005808  888A               	bsf	3978,4,c	;volatile
  5515                           
  5516                           ;main.c: 481:     LATB5 = 0;
  5517  00580A  9A8A               	bcf	3978,5,c	;volatile
  5518                           
  5519                           ;main.c: 482:     LATB6 = 0;
  5520  00580C  9C8A               	bcf	3978,6,c	;volatile
  5521                           
  5522                           ;main.c: 483:     LATB7 = 0;
  5523  00580E  9E8A               	bcf	3978,7,c	;volatile
  5524  005810                     
  5525                           ;main.c: 484:     _delay((unsigned long)((410)*(4000000/4000.0)));
  5526  005810  0E03               	movlw	3
  5527  005812  6E07               	movwf	(??_forzarGiroDerecha+1)^0,c
  5528  005814  0E15               	movlw	21
  5529  005816  6E06               	movwf	??_forzarGiroDerecha^0,c
  5530  005818  0E74               	movlw	116
  5531  00581A                     u12287:
  5532  00581A  2EE8               	decfsz	wreg,f,c
  5533  00581C  D7FE               	bra	u12287
  5534  00581E  2E06               	decfsz	??_forzarGiroDerecha^0,f,c
  5535  005820  D7FC               	bra	u12287
  5536  005822  2E07               	decfsz	(??_forzarGiroDerecha+1)^0,f,c
  5537  005824  D7FA               	bra	u12287
  5538  005826  0012               	return		;funcret
  5539  005828                     __end_of_forzarGiroDerecha:
  5540                           	opt callstack 0
  5541                           
  5542 ;; *************** function _forzarAvanceRecto *****************
  5543 ;; Defined at:
  5544 ;;		line 460 in file "main.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;		None
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5558 ;;      Params:         0       0       0       0       0       0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5560 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5561 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5562 ;;Total ram usage:        2 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    2
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_moverCarrito
  5569 ;;		_mover
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text20
  5574  0057C6                     __ptext20:
  5575                           	opt callstack 0
  5576  0057C6                     _forzarAvanceRecto:
  5577                           	opt callstack 25
  5578  0057C6                     
  5579                           ;main.c: 461:     LATB4 = 1;
  5580  0057C6  888A               	bsf	3978,4,c	;volatile
  5581                           
  5582                           ;main.c: 462:     LATB5 = 0;
  5583  0057C8  9A8A               	bcf	3978,5,c	;volatile
  5584                           
  5585                           ;main.c: 463:     LATB6 = 1;
  5586  0057CA  8C8A               	bsf	3978,6,c	;volatile
  5587                           
  5588                           ;main.c: 464:     LATB7 = 0;
  5589  0057CC  9E8A               	bcf	3978,7,c	;volatile
  5590  0057CE                     
  5591                           ;main.c: 466:     _delay((unsigned long)((550)*(4000000/4000.0)));
  5592  0057CE  0E03               	movlw	3
  5593  0057D0  6E07               	movwf	(??_forzarAvanceRecto+1)^0,c
  5594  0057D2  0ECB               	movlw	203
  5595  0057D4  6E06               	movwf	??_forzarAvanceRecto^0,c
  5596  0057D6  0E45               	movlw	69
  5597  0057D8                     u12297:
  5598  0057D8  2EE8               	decfsz	wreg,f,c
  5599  0057DA  D7FE               	bra	u12297
  5600  0057DC  2E06               	decfsz	??_forzarAvanceRecto^0,f,c
  5601  0057DE  D7FC               	bra	u12297
  5602  0057E0  2E07               	decfsz	(??_forzarAvanceRecto+1)^0,f,c
  5603  0057E2  D7FA               	bra	u12297
  5604  0057E4  F000               	nop	
  5605  0057E6  0012               	return		;funcret
  5606  0057E8                     __end_of_forzarAvanceRecto:
  5607                           	opt callstack 0
  5608                           
  5609 ;; *************** function _limpiarMovimientos *****************
  5610 ;; Defined at:
  5611 ;;		line 794 in file "main.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
  5614 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  5615 ;;  numMovimient    2    7[COMRAM] PTR unsigned int 
  5616 ;;		 -> comportamientoBasico@numMovimientos(2), 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  i               2   11[COMRAM] int 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      void 
  5621 ;; Registers used:
  5622 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5628 ;;      Params:         4       0       0       0       0       0       0       0       0
  5629 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5630 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5631 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5632 ;;Total ram usage:        8 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    2
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_comportamientoBasico
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text21
  5643  0053AA                     __ptext21:
  5644                           	opt callstack 0
  5645  0053AA                     _limpiarMovimientos:
  5646                           	opt callstack 27
  5647  0053AA                     
  5648                           ;main.c: 796:     for (T_INT i = 0; i < *numMovimientos; i++)
  5649  0053AA  0E00               	movlw	0
  5650  0053AC  6E0D               	movwf	(limpiarMovimientos@i+1)^0,c
  5651  0053AE  0E00               	movlw	0
  5652  0053B0  6E0C               	movwf	limpiarMovimientos@i^0,c
  5653  0053B2  EFE5  F029         	goto	l10483
  5654  0053B6                     l10479:
  5655                           
  5656                           ;main.c: 797:         movimientos[i] = 0;
  5657  0053B6  500C               	movf	limpiarMovimientos@i^0,w,c
  5658  0053B8  2406               	addwf	limpiarMovimientos@movimientos^0,w,c
  5659  0053BA  6ED9               	movwf	fsr2l,c
  5660  0053BC  500D               	movf	(limpiarMovimientos@i+1)^0,w,c
  5661  0053BE  2007               	addwfc	(limpiarMovimientos@movimientos+1)^0,w,c
  5662  0053C0  6EDA               	movwf	fsr2h,c
  5663  0053C2  0E00               	movlw	0
  5664  0053C4  6EDF               	movwf	indf2,c
  5665  0053C6  4A0C               	infsnz	limpiarMovimientos@i^0,f,c
  5666  0053C8  2A0D               	incf	(limpiarMovimientos@i+1)^0,f,c
  5667  0053CA                     l10483:
  5668  0053CA  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
  5669  0053CE  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
  5670  0053D2  50DE               	movf	postinc2,w,c
  5671  0053D4  5C0C               	subwf	limpiarMovimientos@i^0,w,c
  5672  0053D6  50DE               	movf	postinc2,w,c
  5673  0053D8  580D               	subwfb	(limpiarMovimientos@i+1)^0,w,c
  5674  0053DA  A0D8               	btfss	status,0,c
  5675  0053DC  EFF2  F029         	goto	u11781
  5676  0053E0  EFF4  F029         	goto	u11780
  5677  0053E4                     u11781:
  5678  0053E4  EFDB  F029         	goto	l10479
  5679  0053E8                     u11780:
  5680  0053E8                     
  5681                           ;main.c: 799:     *numMovimientos = 0;
  5682  0053E8  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
  5683  0053EC  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
  5684  0053F0  0E00               	movlw	0
  5685  0053F2  6EDE               	movwf	postinc2,c
  5686  0053F4  0E00               	movlw	0
  5687  0053F6  6EDD               	movwf	postdec2,c
  5688  0053F8  0012               	return		;funcret
  5689  0053FA                     __end_of_limpiarMovimientos:
  5690                           	opt callstack 0
  5691                           
  5692 ;; *************** function _leerSensores *****************
  5693 ;; Defined at:
  5694 ;;		line 1200 in file "main.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;		None
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;		None
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      void 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5708 ;;      Params:         0       0       0       0       0       0       0       0       0
  5709 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5711 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5712 ;;Total ram usage:        0 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    4
  5715 ;; This function calls:
  5716 ;;		___fladd
  5717 ;;		___fldiv
  5718 ;;		_dameDistancia
  5719 ;; This function is called by:
  5720 ;;		_comportamientoBasico
  5721 ;;		_probarSensores
  5722 ;;		_probarPID
  5723 ;;		_probarCruceT
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text22
  5728  003C28                     __ptext22:
  5729                           	opt callstack 0
  5730  003C28                     _leerSensores:
  5731                           	opt callstack 25
  5732  003C28                     
  5733                           ;main.c: 1202:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  5734  003C28  C120  F038         	movff	_oldSensorDerecha,___fladd@a
  5735  003C2C  C121  F039         	movff	_oldSensorDerecha+1,___fladd@a+1
  5736  003C30  C122  F03A         	movff	_oldSensorDerecha+2,___fladd@a+2
  5737  003C34  C123  F03B         	movff	_oldSensorDerecha+3,___fladd@a+3
  5738  003C38  0E03               	movlw	3
  5739  003C3A  EC84  F01F         	call	_dameDistancia
  5740  003C3E  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5741  003C42  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5742  003C46  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5743  003C4A  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5744  003C4E  EC5C  F00C         	call	___fladd	;wreg free
  5745  003C52  C034  F044         	movff	?___fladd,___fldiv@b
  5746  003C56  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5747  003C5A  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5748  003C5E  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5749  003C62  0E00               	movlw	0
  5750  003C64  6E48               	movwf	___fldiv@a^0,c
  5751  003C66  0E00               	movlw	0
  5752  003C68  6E49               	movwf	(___fldiv@a+1)^0,c
  5753  003C6A  0E00               	movlw	0
  5754  003C6C  6E4A               	movwf	(___fldiv@a+2)^0,c
  5755  003C6E  0E40               	movlw	64
  5756  003C70  6E4B               	movwf	(___fldiv@a+3)^0,c
  5757  003C72  EC97  F014         	call	___fldiv	;wreg free
  5758  003C76  C044  F12C         	movff	?___fldiv,_sensorDerecha
  5759  003C7A  C045  F12D         	movff	?___fldiv+1,_sensorDerecha+1
  5760  003C7E  C046  F12E         	movff	?___fldiv+2,_sensorDerecha+2
  5761  003C82  C047  F12F         	movff	?___fldiv+3,_sensorDerecha+3
  5762                           
  5763                           ;main.c: 1203:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
  5764  003C86  C11C  F038         	movff	_oldSensorIzquierda,___fladd@a
  5765  003C8A  C11D  F039         	movff	_oldSensorIzquierda+1,___fladd@a+1
  5766  003C8E  C11E  F03A         	movff	_oldSensorIzquierda+2,___fladd@a+2
  5767  003C92  C11F  F03B         	movff	_oldSensorIzquierda+3,___fladd@a+3
  5768  003C96  0E02               	movlw	2
  5769  003C98  EC84  F01F         	call	_dameDistancia
  5770  003C9C  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5771  003CA0  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5772  003CA4  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5773  003CA8  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5774  003CAC  EC5C  F00C         	call	___fladd	;wreg free
  5775  003CB0  C034  F044         	movff	?___fladd,___fldiv@b
  5776  003CB4  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5777  003CB8  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5778  003CBC  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5779  003CC0  0E00               	movlw	0
  5780  003CC2  6E48               	movwf	___fldiv@a^0,c
  5781  003CC4  0E00               	movlw	0
  5782  003CC6  6E49               	movwf	(___fldiv@a+1)^0,c
  5783  003CC8  0E00               	movlw	0
  5784  003CCA  6E4A               	movwf	(___fldiv@a+2)^0,c
  5785  003CCC  0E40               	movlw	64
  5786  003CCE  6E4B               	movwf	(___fldiv@a+3)^0,c
  5787  003CD0  EC97  F014         	call	___fldiv	;wreg free
  5788  003CD4  C044  F128         	movff	?___fldiv,_sensorIzquierda
  5789  003CD8  C045  F129         	movff	?___fldiv+1,_sensorIzquierda+1
  5790  003CDC  C046  F12A         	movff	?___fldiv+2,_sensorIzquierda+2
  5791  003CE0  C047  F12B         	movff	?___fldiv+3,_sensorIzquierda+3
  5792                           
  5793                           ;main.c: 1204:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  5794  003CE4  C118  F038         	movff	_oldSensorEnfrente,___fladd@a
  5795  003CE8  C119  F039         	movff	_oldSensorEnfrente+1,___fladd@a+1
  5796  003CEC  C11A  F03A         	movff	_oldSensorEnfrente+2,___fladd@a+2
  5797  003CF0  C11B  F03B         	movff	_oldSensorEnfrente+3,___fladd@a+3
  5798  003CF4  0E01               	movlw	1
  5799  003CF6  EC84  F01F         	call	_dameDistancia
  5800  003CFA  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5801  003CFE  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5802  003D02  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5803  003D06  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5804  003D0A  EC5C  F00C         	call	___fladd	;wreg free
  5805  003D0E  C034  F044         	movff	?___fladd,___fldiv@b
  5806  003D12  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5807  003D16  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5808  003D1A  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5809  003D1E  0E00               	movlw	0
  5810  003D20  6E48               	movwf	___fldiv@a^0,c
  5811  003D22  0E00               	movlw	0
  5812  003D24  6E49               	movwf	(___fldiv@a+1)^0,c
  5813  003D26  0E00               	movlw	0
  5814  003D28  6E4A               	movwf	(___fldiv@a+2)^0,c
  5815  003D2A  0E40               	movlw	64
  5816  003D2C  6E4B               	movwf	(___fldiv@a+3)^0,c
  5817  003D2E  EC97  F014         	call	___fldiv	;wreg free
  5818  003D32  C044  F124         	movff	?___fldiv,_sensorEnfrente
  5819  003D36  C045  F125         	movff	?___fldiv+1,_sensorEnfrente+1
  5820  003D3A  C046  F126         	movff	?___fldiv+2,_sensorEnfrente+2
  5821  003D3E  C047  F127         	movff	?___fldiv+3,_sensorEnfrente+3
  5822  003D42                     
  5823                           ;main.c: 1206:     oldSensorDerecha = sensorDerecha;
  5824  003D42  C12C  F120         	movff	_sensorDerecha,_oldSensorDerecha
  5825  003D46  C12D  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
  5826  003D4A  C12E  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
  5827  003D4E  C12F  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
  5828  003D52                     
  5829                           ;main.c: 1207:     oldSensorIzquierda = sensorIzquierda;
  5830  003D52  C128  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
  5831  003D56  C129  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
  5832  003D5A  C12A  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
  5833  003D5E  C12B  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
  5834  003D62                     
  5835                           ;main.c: 1208:     oldSensorEnfrente = sensorEnfrente;
  5836  003D62  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
  5837  003D66  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
  5838  003D6A  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
  5839  003D6E  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
  5840  003D72                     
  5841                           ;main.c: 1213:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
  5842  003D72  C12C  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
  5843  003D76  C12D  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
  5844  003D7A  C12E  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
  5845  003D7E  C12F  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
  5846  003D82                     
  5847                           ;main.c: 1222:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
  5848  003D82  C128  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
  5849  003D86  C129  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
  5850  003D8A  C12A  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
  5851  003D8E  C12B  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
  5852  003D92                     
  5853                           ;main.c: 1225:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
  5854  003D92  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
  5855  003D96  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
  5856  003D9A  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
  5857  003D9E  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
  5858  003DA2  0012               	return		;funcret
  5859  003DA4                     __end_of_leerSensores:
  5860                           	opt callstack 0
  5861                           
  5862 ;; *************** function _dameDistancia *****************
  5863 ;; Defined at:
  5864 ;;		line 26 in file "./ultrasonico.h"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  numeroSensor    1    wreg     unsigned char 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  numeroSensor    1   32[COMRAM] unsigned char 
  5869 ;;  distancia       4   33[COMRAM] float 
  5870 ;;  conteo          2   37[COMRAM] unsigned int 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  4   26[COMRAM] float 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2, status,0, cstack
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5880 ;;      Params:         4       0       0       0       0       0       0       0       0
  5881 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5882 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5883 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5884 ;;Total ram usage:       13 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    3
  5887 ;; This function calls:
  5888 ;;		___lwdiv
  5889 ;;		___xxtofl
  5890 ;; This function is called by:
  5891 ;;		_inicializarComportamientoBasico
  5892 ;;		_leerSensores
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	text23
  5897  003F08                     __ptext23:
  5898                           	opt callstack 0
  5899  003F08                     _dameDistancia:
  5900                           	opt callstack 26
  5901                           
  5902                           ;incstack = 0
  5903                           ;dameDistancia@numeroSensor stored from wreg
  5904  003F08  6E21               	movwf	dameDistancia@numeroSensor^0,c
  5905  003F0A                     
  5906                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
  5907  003F0A  0E00               	movlw	0
  5908  003F0C  6ECF               	movwf	207,c	;volatile
  5909                           
  5910                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
  5911  003F0E  0E00               	movlw	0
  5912  003F10  6ECE               	movwf	206,c	;volatile
  5913                           
  5914                           ;./ultrasonico.h: 33:     conteo = 0;
  5915  003F12  0E00               	movlw	0
  5916  003F14  6E27               	movwf	(dameDistancia@conteo+1)^0,c
  5917  003F16  0E00               	movlw	0
  5918  003F18  6E26               	movwf	dameDistancia@conteo^0,c
  5919  003F1A                     
  5920                           ;./ultrasonico.h: 34:     LATD3 = 1;
  5921  003F1A  868C               	bsf	3980,3,c	;volatile
  5922  003F1C                     
  5923                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
  5924  003F1C  0E04               	movlw	4
  5925  003F1E                     u12307:
  5926  003F1E  2EE8               	decfsz	wreg,f,c
  5927  003F20  D7FE               	bra	u12307
  5928  003F22                     
  5929                           ;./ultrasonico.h: 36:     LATD3 = 0;
  5930  003F22  968C               	bcf	3980,3,c	;volatile
  5931                           
  5932                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
  5933  003F24  EFDC  F01F         	goto	l9835
  5934  003F28                     l177:
  5935  003F28  A281               	btfss	129,1,c	;volatile
  5936  003F2A  EF99  F01F         	goto	u11091
  5937  003F2E  EF9B  F01F         	goto	u11090
  5938  003F32                     u11091:
  5939  003F32  EF94  F01F         	goto	l177
  5940  003F36                     u11090:
  5941  003F36                     
  5942                           ;./ultrasonico.h: 43:             TMR1ON = 1;
  5943  003F36  80CD               	bsf	4045,0,c	;volatile
  5944  003F38                     l180:
  5945  003F38  A281               	btfss	129,1,c	;volatile
  5946  003F3A  EFA1  F01F         	goto	u11101
  5947  003F3E  EFA3  F01F         	goto	u11100
  5948  003F42                     u11101:
  5949  003F42  EFF5  F01F         	goto	l185
  5950  003F46                     u11100:
  5951  003F46  A09E               	btfss	3998,0,c	;volatile
  5952  003F48  EFA8  F01F         	goto	u11111
  5953  003F4C  EFAA  F01F         	goto	u11110
  5954  003F50                     u11111:
  5955  003F50  EF9C  F01F         	goto	l180
  5956  003F54                     u11110:
  5957  003F54  EFF5  F01F         	goto	l185
  5958  003F58                     l187:
  5959  003F58  A481               	btfss	129,2,c	;volatile
  5960  003F5A  EFB1  F01F         	goto	u11121
  5961  003F5E  EFB3  F01F         	goto	u11120
  5962  003F62                     u11121:
  5963  003F62  EFAC  F01F         	goto	l187
  5964  003F66                     u11120:
  5965  003F66                     
  5966                           ;./ultrasonico.h: 51:             TMR1ON = 1;
  5967  003F66  80CD               	bsf	4045,0,c	;volatile
  5968  003F68                     l190:
  5969  003F68  A481               	btfss	129,2,c	;volatile
  5970  003F6A  EFB9  F01F         	goto	u11131
  5971  003F6E  EFBB  F01F         	goto	u11130
  5972  003F72                     u11131:
  5973  003F72  EFF5  F01F         	goto	l185
  5974  003F76                     u11130:
  5975  003F76  A09E               	btfss	3998,0,c	;volatile
  5976  003F78  EFC0  F01F         	goto	u11141
  5977  003F7C  EFC2  F01F         	goto	u11140
  5978  003F80                     u11141:
  5979  003F80  EFB4  F01F         	goto	l190
  5980  003F84                     u11140:
  5981  003F84  EFF5  F01F         	goto	l185
  5982  003F88                     l196:
  5983  003F88  A681               	btfss	129,3,c	;volatile
  5984  003F8A  EFC9  F01F         	goto	u11151
  5985  003F8E  EFCB  F01F         	goto	u11150
  5986  003F92                     u11151:
  5987  003F92  EFC4  F01F         	goto	l196
  5988  003F96                     u11150:
  5989  003F96                     
  5990                           ;./ultrasonico.h: 59:             TMR1ON = 1;
  5991  003F96  80CD               	bsf	4045,0,c	;volatile
  5992  003F98                     l199:
  5993  003F98  A681               	btfss	129,3,c	;volatile
  5994  003F9A  EFD1  F01F         	goto	u11161
  5995  003F9E  EFD3  F01F         	goto	u11160
  5996  003FA2                     u11161:
  5997  003FA2  EFF5  F01F         	goto	l185
  5998  003FA6                     u11160:
  5999  003FA6  A09E               	btfss	3998,0,c	;volatile
  6000  003FA8  EFD8  F01F         	goto	u11171
  6001  003FAC  EFDA  F01F         	goto	u11170
  6002  003FB0                     u11171:
  6003  003FB0  EFCC  F01F         	goto	l199
  6004  003FB4                     u11170:
  6005  003FB4  EFF5  F01F         	goto	l185
  6006  003FB8                     l9835:
  6007  003FB8  5021               	movf	dameDistancia@numeroSensor^0,w,c
  6008  003FBA  6E1F               	movwf	??_dameDistancia^0,c
  6009  003FBC  6A20               	clrf	(??_dameDistancia+1)^0,c
  6010                           
  6011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6012                           ; Switch size 1, requested type "simple"
  6013                           ; Number of cases is 1, Range of values is 0 to 0
  6014                           ; switch strategies available:
  6015                           ; Name         Instructions Cycles
  6016                           ; simple_byte            4     3 (average)
  6017                           ;	Chosen strategy is simple_byte
  6018  003FBE  5020               	movf	(??_dameDistancia+1)^0,w,c
  6019  003FC0  0A00               	xorlw	0	; case 0
  6020  003FC2  B4D8               	btfsc	status,2,c
  6021  003FC4  EFE6  F01F         	goto	l11289
  6022  003FC8  EFF5  F01F         	goto	l185
  6023  003FCC                     l11289:
  6024                           
  6025                           ; Switch size 1, requested type "simple"
  6026                           ; Number of cases is 3, Range of values is 1 to 3
  6027                           ; switch strategies available:
  6028                           ; Name         Instructions Cycles
  6029                           ; simple_byte           10     6 (average)
  6030                           ;	Chosen strategy is simple_byte
  6031  003FCC  501F               	movf	??_dameDistancia^0,w,c
  6032  003FCE  0A01               	xorlw	1	; case 1
  6033  003FD0  B4D8               	btfsc	status,2,c
  6034  003FD2  EF94  F01F         	goto	l177
  6035  003FD6  0A03               	xorlw	3	; case 2
  6036  003FD8  B4D8               	btfsc	status,2,c
  6037  003FDA  EFAC  F01F         	goto	l187
  6038  003FDE  0A01               	xorlw	1	; case 3
  6039  003FE0  B4D8               	btfsc	status,2,c
  6040  003FE2  EFC4  F01F         	goto	l196
  6041  003FE6  EFF5  F01F         	goto	l185
  6042  003FEA                     l185:
  6043                           
  6044                           ;./ultrasonico.h: 66:     TMR1ON = 0;
  6045  003FEA  90CD               	bcf	4045,0,c	;volatile
  6046                           
  6047                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
  6048  003FEC  B09E               	btfsc	3998,0,c	;volatile
  6049  003FEE  EFFB  F01F         	goto	u11181
  6050  003FF2  EFFD  F01F         	goto	u11180
  6051  003FF6                     u11181:
  6052  003FF6  EF23  F020         	goto	l9841
  6053  003FFA                     u11180:
  6054  003FFA                     
  6055                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
  6056  003FFA  50CF               	movf	207,w,c	;volatile
  6057  003FFC  6E20               	movwf	(??_dameDistancia+1)^0,c
  6058  003FFE  6A1F               	clrf	??_dameDistancia^0,c
  6059  004000  501F               	movf	??_dameDistancia^0,w,c
  6060  004002  1226               	iorwf	dameDistancia@conteo^0,f,c
  6061  004004  5020               	movf	(??_dameDistancia+1)^0,w,c
  6062  004006  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
  6063                           
  6064                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
  6065  004008  50CE               	movf	206,w,c	;volatile
  6066  00400A  1226               	iorwf	dameDistancia@conteo^0,f,c
  6067  00400C                     
  6068                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
  6069  00400C  0E00               	movlw	0
  6070  00400E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  6071  004010  0E3A               	movlw	58
  6072  004012  6E08               	movwf	___lwdiv@divisor^0,c
  6073  004014  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
  6074  004018  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
  6075  00401C  EC45  F027         	call	___lwdiv	;wreg free
  6076  004020  C006  F00D         	movff	?___lwdiv,___xxtofl@val
  6077  004024  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
  6078  004028  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6079  00402A  6A10               	clrf	(___xxtofl@val+3)^0,c
  6080  00402C  0E00               	movlw	0
  6081  00402E  ECE6  F01A         	call	___xxtofl
  6082  004032  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
  6083  004036  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
  6084  00403A  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
  6085  00403E  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
  6086                           
  6087                           ;./ultrasonico.h: 73:     } else {
  6088  004042  EF2C  F020         	goto	l9845
  6089  004046                     l9841:
  6090  004046                     
  6091                           ;./ultrasonico.h: 75:         TMR1IF = 0;
  6092  004046  909E               	bcf	3998,0,c	;volatile
  6093                           
  6094                           ;./ultrasonico.h: 76:         distancia = 0;
  6095  004048  0E00               	movlw	0
  6096  00404A  6E22               	movwf	dameDistancia@distancia^0,c
  6097  00404C  0E00               	movlw	0
  6098  00404E  6E23               	movwf	(dameDistancia@distancia+1)^0,c
  6099  004050  0E00               	movlw	0
  6100  004052  6E24               	movwf	(dameDistancia@distancia+2)^0,c
  6101  004054  0E00               	movlw	0
  6102  004056  6E25               	movwf	(dameDistancia@distancia+3)^0,c
  6103  004058                     l9845:
  6104                           
  6105                           ;./ultrasonico.h: 80:     return distancia;
  6106  004058  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
  6107  00405C  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
  6108  004060  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
  6109  004064  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
  6110  004068  0012               	return		;funcret
  6111  00406A                     __end_of_dameDistancia:
  6112                           	opt callstack 0
  6113                           
  6114 ;; *************** function ___lwdiv *****************
  6115 ;; Defined at:
  6116 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  dividend        2    5[COMRAM] unsigned int 
  6119 ;;  divisor         2    7[COMRAM] unsigned int 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  quotient        2   10[COMRAM] unsigned int 
  6122 ;;  counter         1    9[COMRAM] unsigned char 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  2    5[COMRAM] unsigned int 
  6125 ;; Registers used:
  6126 ;;		wreg, status,2, status,0
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6132 ;;      Params:         4       0       0       0       0       0       0       0       0
  6133 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6135 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6136 ;;Total ram usage:        7 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    2
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		_dameDistancia
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           	psect	text24
  6147  004E8A                     __ptext24:
  6148                           	opt callstack 0
  6149  004E8A                     ___lwdiv:
  6150                           	opt callstack 26
  6151  004E8A  0E00               	movlw	0
  6152  004E8C  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  6153  004E8E  0E00               	movlw	0
  6154  004E90  6E0B               	movwf	___lwdiv@quotient^0,c
  6155  004E92  5008               	movf	___lwdiv@divisor^0,w,c
  6156  004E94  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6157  004E96  B4D8               	btfsc	status,2,c
  6158  004E98  EF50  F027         	goto	u11061
  6159  004E9C  EF52  F027         	goto	u11060
  6160  004EA0                     u11061:
  6161  004EA0  EF7A  F027         	goto	l1440
  6162  004EA4                     u11060:
  6163  004EA4  0E01               	movlw	1
  6164  004EA6  6E0A               	movwf	___lwdiv@counter^0,c
  6165  004EA8  EF5A  F027         	goto	l9805
  6166  004EAC                     l9803:
  6167  004EAC  90D8               	bcf	status,0,c
  6168  004EAE  3608               	rlcf	___lwdiv@divisor^0,f,c
  6169  004EB0  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6170  004EB2  2A0A               	incf	___lwdiv@counter^0,f,c
  6171  004EB4                     l9805:
  6172  004EB4  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  6173  004EB6  EF5F  F027         	goto	u11071
  6174  004EBA  EF61  F027         	goto	u11070
  6175  004EBE                     u11071:
  6176  004EBE  EF56  F027         	goto	l9803
  6177  004EC2                     u11070:
  6178  004EC2                     l9807:
  6179  004EC2  90D8               	bcf	status,0,c
  6180  004EC4  360B               	rlcf	___lwdiv@quotient^0,f,c
  6181  004EC6  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6182  004EC8  5008               	movf	___lwdiv@divisor^0,w,c
  6183  004ECA  5C06               	subwf	___lwdiv@dividend^0,w,c
  6184  004ECC  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6185  004ECE  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6186  004ED0  A0D8               	btfss	status,0,c
  6187  004ED2  EF6D  F027         	goto	u11081
  6188  004ED6  EF6F  F027         	goto	u11080
  6189  004EDA                     u11081:
  6190  004EDA  EF74  F027         	goto	l9815
  6191  004EDE                     u11080:
  6192  004EDE  5008               	movf	___lwdiv@divisor^0,w,c
  6193  004EE0  5E06               	subwf	___lwdiv@dividend^0,f,c
  6194  004EE2  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6195  004EE4  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6196  004EE6  800B               	bsf	___lwdiv@quotient^0,0,c
  6197  004EE8                     l9815:
  6198  004EE8  90D8               	bcf	status,0,c
  6199  004EEA  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6200  004EEC  3208               	rrcf	___lwdiv@divisor^0,f,c
  6201  004EEE  2E0A               	decfsz	___lwdiv@counter^0,f,c
  6202  004EF0  EF61  F027         	goto	l9807
  6203  004EF4                     l1440:
  6204  004EF4  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  6205  004EF8  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6206  004EFC  0012               	return		;funcret
  6207  004EFE                     __end_of___lwdiv:
  6208                           	opt callstack 0
  6209                           
  6210 ;; *************** function _decidirDireccion *****************
  6211 ;; Defined at:
  6212 ;;		line 839 in file "main.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  caminosRecor    2    0[BANK1 ] PTR unsigned char 
  6215 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
  6216 ;;  investigando    2    2[BANK1 ] PTR unsigned char 
  6217 ;;		 -> comportamientoBasico@investigandoCruce(1), 
  6218 ;;  posicionInvC    2    4[BANK1 ] PTR unsigned char 
  6219 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
  6220 ;;  contCaminosR    2    6[BANK1 ] PTR unsigned char 
  6221 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
  6222 ;;  caminoActual    2    8[BANK1 ] PTR unsigned char 
  6223 ;;		 -> comportamientoBasico@caminoActual(1), 
  6224 ;;  cambioOrient    2   10[BANK1 ] PTR unsigned char 
  6225 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
  6226 ;;  mapear          2   12[BANK1 ] PTR unsigned char 
  6227 ;;		 -> comportamientoBasico@mapear(1), 
  6228 ;;  cruceDetecta    2   14[BANK1 ] PTR unsigned char 
  6229 ;;		 -> comportamientoBasico@cruceDetectado(1), 
  6230 ;;  avanceRectoL    2   16[BANK1 ] PTR unsigned char 
  6231 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  6232 ;;  caminoFinal     2   18[BANK1 ] PTR unsigned char 
  6233 ;;		 -> comportamientoBasico@caminoFinal(20), 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  direccionEle    1   83[COMRAM] unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      unsigned char 
  6238 ;; Registers used:
  6239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6245 ;;      Params:         0       0      20       0       0       0       0       0       0
  6246 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6247 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6248 ;;      Totals:         1       3      20       0       0       0       0       0       0
  6249 ;;Total ram usage:       24 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:   10
  6252 ;; This function calls:
  6253 ;;		_UART_printf
  6254 ;;		___flge
  6255 ;;		_hayCruce
  6256 ;;		_mostrarDireccionElegida
  6257 ;;		_seLlegoAlDestino
  6258 ;;		_sprintf
  6259 ;;		_velocidadBaja
  6260 ;; This function is called by:
  6261 ;;		_comportamientoBasico
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text25
  6266  000BCC                     __ptext25:
  6267                           	opt callstack 0
  6268  000BCC                     _decidirDireccion:
  6269                           	opt callstack 19
  6270  000BCC                     
  6271                           ;main.c: 839: T_UBYTE decidirDireccion(T_UBYTE* caminosRecorrer, T_UBYTE* investigandoCr
      +                          uce, T_UBYTE* posicionInvCruce,;main.c: 840:         T_UBYTE* contCaminosRecorridos, T_U
      +                          BYTE* caminoActual, T_BOOL* cambioOrientacionCarro,;main.c: 841:         T_UBYTE* mapear
      +                          , T_UBYTE* cruceDetectado, T_BOOL* avanceRectoLargo, T_UBYTE* caminoFinal) {;main.c: 843
      +                          :     T_UBYTE direccionElegida;;main.c: 844:     llegoDestino = seLlegoAlDestino();
  6272  000BCC  EC82  F02B         	call	_seLlegoAlDestino	;wreg free
  6273  000BD0  0100               	movlb	0	; () banked
  6274  000BD2  6FFF               	movwf	_llegoDestino& (0+255),b
  6275  000BD4                     
  6276                           ; BSR set to: 0
  6277                           ;main.c: 847:     if (*posicionInvCruce && *investigandoCruce && !caminoEncontrado) {
  6278  000BD4  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6279  000BD8  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6280  000BDC  50DF               	movf	indf2,w,c
  6281  000BDE  B4D8               	btfsc	status,2,c
  6282  000BE0  EFF4  F005         	goto	u11361
  6283  000BE4  EFF6  F005         	goto	u11360
  6284  000BE8                     u11361:
  6285  000BE8  EFD1  F007         	goto	l10355
  6286  000BEC                     u11360:
  6287  000BEC                     
  6288                           ; BSR set to: 0
  6289  000BEC  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6290  000BF0  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6291  000BF4  50DF               	movf	indf2,w,c
  6292  000BF6  B4D8               	btfsc	status,2,c
  6293  000BF8  EF00  F006         	goto	u11371
  6294  000BFC  EF02  F006         	goto	u11370
  6295  000C00                     u11371:
  6296  000C00  EFD1  F007         	goto	l10355
  6297  000C04                     u11370:
  6298  000C04                     
  6299                           ; BSR set to: 0
  6300  000C04  5059               	movf	_caminoEncontrado^0,w,c
  6301  000C06  A4D8               	btfss	status,2,c
  6302  000C08  EF08  F006         	goto	u11381
  6303  000C0C  EF0A  F006         	goto	u11380
  6304  000C10                     u11381:
  6305  000C10  EFD1  F007         	goto	l10355
  6306  000C14                     u11380:
  6307  000C14                     
  6308                           ; BSR set to: 0
  6309                           ;main.c: 849:         if (*posicionInvCruce)
  6310  000C14  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6311  000C18  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6312  000C1C  50DF               	movf	indf2,w,c
  6313  000C1E  B4D8               	btfsc	status,2,c
  6314  000C20  EF14  F006         	goto	u11391
  6315  000C24  EF16  F006         	goto	u11390
  6316  000C28                     u11391:
  6317  000C28  EF1C  F006         	goto	l10109
  6318  000C2C                     u11390:
  6319  000C2C                     
  6320                           ; BSR set to: 0
  6321                           ;main.c: 850:             *posicionInvCruce = 0;
  6322  000C2C  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6323  000C30  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6324  000C34  0E00               	movlw	0
  6325  000C36  6EDF               	movwf	indf2,c
  6326  000C38                     l10109:
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;main.c: 852:         if (llegoDestino) {
  6330  000C38  51FF               	movf	_llegoDestino& (0+255),w,b
  6331  000C3A  B4D8               	btfsc	status,2,c
  6332  000C3C  EF22  F006         	goto	u11401
  6333  000C40  EF24  F006         	goto	u11400
  6334  000C44                     u11401:
  6335  000C44  EF85  F006         	goto	l10133
  6336  000C48                     u11400:
  6337  000C48                     
  6338                           ; BSR set to: 0
  6339                           ;main.c: 853:             direccionElegida = ALTO;
  6340  000C48  0E04               	movlw	4
  6341  000C4A  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6342                           
  6343                           ;main.c: 855:         } else {
  6344  000C4C  EFA2  F006         	goto	l10135
  6345  000C50                     l10113:
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;main.c: 859:                     if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1'
      +                          )
  6349  000C50  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6350  000C54  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6351  000C58  0E31               	movlw	49
  6352  000C5A  18DE               	xorwf	postinc2,w,c
  6353  000C5C  A4D8               	btfss	status,2,c
  6354  000C5E  EF33  F006         	goto	u11411
  6355  000C62  EF35  F006         	goto	u11410
  6356  000C66                     u11411:
  6357  000C66  EF3D  F006         	goto	l10117
  6358  000C6A                     u11410:
  6359  000C6A                     
  6360                           ; BSR set to: 0
  6361                           ;main.c: 860:                         caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] = 'X';
  6362  000C6A  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6363  000C6E  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6364  000C72  0E58               	movlw	88
  6365  000C74  6EDF               	movwf	indf2,c
  6366  000C76  EFA2  F006         	goto	l10135
  6367  000C7A                     l10117:
  6368                           
  6369                           ; BSR set to: 0
  6370  000C7A  0101               	movlb	1	; () banked
  6371  000C7C  EE20 F001          	lfsr	2,1
  6372  000C80  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6373  000C82  26D9               	addwf	fsr2l,f,c
  6374  000C84  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6375  000C86  22DA               	addwfc	fsr2h,f,c
  6376  000C88  0E31               	movlw	49
  6377  000C8A  18DE               	xorwf	postinc2,w,c
  6378  000C8C  A4D8               	btfss	status,2,c
  6379  000C8E  EF4B  F006         	goto	u11421
  6380  000C92  EF4D  F006         	goto	u11420
  6381  000C96                     u11421:
  6382  000C96  EFA2  F006         	goto	l538
  6383  000C9A                     u11420:
  6384  000C9A                     l10119:
  6385                           
  6386                           ; BSR set to: 1
  6387  000C9A  EE20 F001          	lfsr	2,1
  6388  000C9E  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6389  000CA0  26D9               	addwf	fsr2l,f,c
  6390  000CA2  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6391  000CA4  22DA               	addwfc	fsr2h,f,c
  6392  000CA6  0E58               	movlw	88
  6393  000CA8  6EDF               	movwf	indf2,c
  6394  000CAA  EFA2  F006         	goto	l10135
  6395  000CAE                     l10121:
  6396                           
  6397                           ; BSR set to: 0
  6398  000CAE  0101               	movlb	1	; () banked
  6399  000CB0  EE20 F001          	lfsr	2,1
  6400  000CB4  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6401  000CB6  26D9               	addwf	fsr2l,f,c
  6402  000CB8  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6403  000CBA  22DA               	addwfc	fsr2h,f,c
  6404  000CBC  0E31               	movlw	49
  6405  000CBE  18DE               	xorwf	postinc2,w,c
  6406  000CC0  A4D8               	btfss	status,2,c
  6407  000CC2  EF65  F006         	goto	u11431
  6408  000CC6  EF67  F006         	goto	u11430
  6409  000CCA                     u11431:
  6410  000CCA  EF69  F006         	goto	l10125
  6411  000CCE                     u11430:
  6412  000CCE  EF4D  F006         	goto	l10119
  6413  000CD2                     l10125:
  6414                           
  6415                           ; BSR set to: 1
  6416  000CD2  EE20 F002          	lfsr	2,2
  6417  000CD6  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6418  000CD8  26D9               	addwf	fsr2l,f,c
  6419  000CDA  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6420  000CDC  22DA               	addwfc	fsr2h,f,c
  6421  000CDE  0E58               	movlw	88
  6422  000CE0  6EDF               	movwf	indf2,c
  6423  000CE2  EFA2  F006         	goto	l10135
  6424  000CE6                     l10127:
  6425                           
  6426                           ; BSR set to: 0
  6427  000CE6  0101               	movlb	1	; () banked
  6428  000CE8  EE20 F002          	lfsr	2,2
  6429  000CEC  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6430  000CEE  26D9               	addwf	fsr2l,f,c
  6431  000CF0  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6432  000CF2  22DA               	addwfc	fsr2h,f,c
  6433  000CF4  0E31               	movlw	49
  6434  000CF6  18DE               	xorwf	postinc2,w,c
  6435  000CF8  A4D8               	btfss	status,2,c
  6436  000CFA  EF81  F006         	goto	u11441
  6437  000CFE  EF83  F006         	goto	u11440
  6438  000D02                     u11441:
  6439  000D02  EFA2  F006         	goto	l10135
  6440  000D06                     u11440:
  6441  000D06  EF69  F006         	goto	l10125
  6442  000D0A                     l10133:
  6443                           
  6444                           ; BSR set to: 0
  6445  000D0A  C1EC  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6446  000D0E  C1ED  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6447  000D12  50DF               	movf	indf2,w,c
  6448  000D14  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6449  000D16  6BFC               	clrf	(??_decidirDireccion+1)& (0+255),b
  6450                           
  6451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6452                           ; Switch size 1, requested type "simple"
  6453                           ; Number of cases is 1, Range of values is 0 to 0
  6454                           ; switch strategies available:
  6455                           ; Name         Instructions Cycles
  6456                           ; simple_byte            4     3 (average)
  6457                           ;	Chosen strategy is simple_byte
  6458  000D18  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6459  000D1A  0A00               	xorlw	0	; case 0
  6460  000D1C  B4D8               	btfsc	status,2,c
  6461  000D1E  EF93  F006         	goto	l11291
  6462  000D22  EFA2  F006         	goto	l10135
  6463  000D26                     l11291:
  6464                           
  6465                           ; BSR set to: 0
  6466                           ; Switch size 1, requested type "simple"
  6467                           ; Number of cases is 3, Range of values is 1 to 3
  6468                           ; switch strategies available:
  6469                           ; Name         Instructions Cycles
  6470                           ; simple_byte           10     6 (average)
  6471                           ;	Chosen strategy is simple_byte
  6472  000D26  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6473  000D28  0A01               	xorlw	1	; case 1
  6474  000D2A  B4D8               	btfsc	status,2,c
  6475  000D2C  EF28  F006         	goto	l10113
  6476  000D30  0A03               	xorlw	3	; case 2
  6477  000D32  B4D8               	btfsc	status,2,c
  6478  000D34  EF57  F006         	goto	l10121
  6479  000D38  0A01               	xorlw	1	; case 3
  6480  000D3A  B4D8               	btfsc	status,2,c
  6481  000D3C  EF73  F006         	goto	l10127
  6482  000D40  EFA2  F006         	goto	l10135
  6483  000D44                     l538:
  6484  000D44                     l10135:
  6485                           
  6486                           ;main.c: 888:         if (!(*cambioOrientacionCarro)) {
  6487  000D44  C1F0  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6488  000D48  C1F1  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6489  000D4C  50DF               	movf	indf2,w,c
  6490  000D4E  A4D8               	btfss	status,2,c
  6491  000D50  EFAC  F006         	goto	u11451
  6492  000D54  EFAE  F006         	goto	u11450
  6493  000D58                     u11451:
  6494  000D58  EF9E  F007         	goto	l10345
  6495  000D5C                     u11450:
  6496  000D5C                     
  6497                           ;main.c: 890:             if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1')
  6498  000D5C  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6499  000D60  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6500  000D64  0E31               	movlw	49
  6501  000D66  18DE               	xorwf	postinc2,w,c
  6502  000D68  A4D8               	btfss	status,2,c
  6503  000D6A  EFB9  F006         	goto	u11461
  6504  000D6E  EFBB  F006         	goto	u11460
  6505  000D72                     u11461:
  6506  000D72  EFBF  F006         	goto	l10141
  6507  000D76                     u11460:
  6508  000D76  0E01               	movlw	1
  6509  000D78  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6510  000D7A  EFE4  F006         	goto	l10149
  6511  000D7E                     l10141:
  6512  000D7E  0101               	movlb	1	; () banked
  6513  000D80  EE20 F001          	lfsr	2,1
  6514  000D84  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6515  000D86  26D9               	addwf	fsr2l,f,c
  6516  000D88  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6517  000D8A  22DA               	addwfc	fsr2h,f,c
  6518  000D8C  0E31               	movlw	49
  6519  000D8E  18DE               	xorwf	postinc2,w,c
  6520  000D90  A4D8               	btfss	status,2,c
  6521  000D92  EFCD  F006         	goto	u11471
  6522  000D96  EFCF  F006         	goto	u11470
  6523  000D9A                     u11471:
  6524  000D9A  EFD3  F006         	goto	l10145
  6525  000D9E                     u11470:
  6526  000D9E                     
  6527                           ; BSR set to: 1
  6528  000D9E  0E02               	movlw	2
  6529  000DA0  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6530  000DA2  EFE4  F006         	goto	l10149
  6531  000DA6                     l10145:
  6532                           
  6533                           ; BSR set to: 1
  6534  000DA6  EE20 F002          	lfsr	2,2
  6535  000DAA  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6536  000DAC  26D9               	addwf	fsr2l,f,c
  6537  000DAE  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6538  000DB0  22DA               	addwfc	fsr2h,f,c
  6539  000DB2  0E31               	movlw	49
  6540  000DB4  18DE               	xorwf	postinc2,w,c
  6541  000DB6  A4D8               	btfss	status,2,c
  6542  000DB8  EFE0  F006         	goto	u11481
  6543  000DBC  EFE2  F006         	goto	u11480
  6544  000DC0                     u11481:
  6545  000DC0  EFE4  F006         	goto	l10149
  6546  000DC4                     u11480:
  6547  000DC4                     
  6548                           ; BSR set to: 1
  6549  000DC4  0E03               	movlw	3
  6550  000DC6  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6551  000DC8                     l10149:
  6552                           
  6553                           ;main.c: 898:             *caminoActual = direccionElegida;
  6554  000DC8  C1EE  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6555  000DCC  C1EF  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6556  000DD0  C054  FFDF         	movff	decidirDireccion@direccionElegida,indf2
  6557  000DD4                     
  6558                           ;main.c: 899:             *cambioOrientacionCarro = 1;
  6559  000DD4  C1F0  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6560  000DD8  C1F1  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6561  000DDC  0E01               	movlw	1
  6562  000DDE  6EDF               	movwf	indf2,c
  6563                           
  6564                           ;main.c: 901:         } else {
  6565  000DE0  EFBC  F007         	goto	l10347
  6566  000DE4                     l568:
  6567                           
  6568                           ; BSR set to: 1
  6569  000DE4  EF36  F007         	goto	l10249
  6570  000DE8                     l10207:
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;main.c: 955:                         if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] ==
      +                           'X') {
  6574  000DE8  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6575  000DEC  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6576  000DF0  0E58               	movlw	88
  6577  000DF2  18DE               	xorwf	postinc2,w,c
  6578  000DF4  A4D8               	btfss	status,2,c
  6579  000DF6  EFFF  F006         	goto	u11491
  6580  000DFA  EF01  F007         	goto	u11490
  6581  000DFE                     u11491:
  6582  000DFE  EF36  F007         	goto	l10249
  6583  000E02                     u11490:
  6584  000E02                     
  6585                           ; BSR set to: 0
  6586  000E02  0101               	movlb	1	; () banked
  6587  000E04  EE20 F001          	lfsr	2,1
  6588  000E08  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6589  000E0A  26D9               	addwf	fsr2l,f,c
  6590  000E0C  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6591  000E0E  22DA               	addwfc	fsr2h,f,c
  6592  000E10  0E31               	movlw	49
  6593  000E12  18DE               	xorwf	postinc2,w,c
  6594  000E14  A4D8               	btfss	status,2,c
  6595  000E16  EF0F  F007         	goto	u11501
  6596  000E1A  EF11  F007         	goto	u11500
  6597  000E1E                     u11501:
  6598  000E1E  EF1B  F007         	goto	l10227
  6599  000E22                     u11500:
  6600  000E22                     
  6601                           ; BSR set to: 1
  6602                           ;main.c: 958:                                     caminosRecorrer[SENSOR_PRIORIDAD_MEDIA
      +                           - 1] == '1') {;main.c: 959:                                 *caminoActual = IZQUIERDA;
  6603  000E22  C1EE  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6604  000E26  C1EF  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6605  000E2A  0E02               	movlw	2
  6606  000E2C  6EDF               	movwf	indf2,c
  6607  000E2E                     
  6608                           ; BSR set to: 1
  6609                           ;main.c: 960:                                 direccionElegida = DERECHA;
  6610  000E2E  0E03               	movlw	3
  6611  000E30  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6612                           
  6613                           ;main.c: 961:                             } else if (SENSOR_PRIORIDAD_MEDIA == DERECHA &
      +                          &
  6614  000E32  EF36  F007         	goto	l10249
  6615  000E36                     l10227:
  6616                           
  6617                           ; BSR set to: 1
  6618  000E36  EE20 F002          	lfsr	2,2
  6619  000E3A  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6620  000E3C  26D9               	addwf	fsr2l,f,c
  6621  000E3E  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6622  000E40  22DA               	addwfc	fsr2h,f,c
  6623  000E42  0E31               	movlw	49
  6624  000E44  18DE               	xorwf	postinc2,w,c
  6625  000E46  A4D8               	btfss	status,2,c
  6626  000E48  EF28  F007         	goto	u11511
  6627  000E4C  EF2A  F007         	goto	u11510
  6628  000E50                     u11511:
  6629  000E50  EFF2  F006         	goto	l568
  6630  000E54                     u11510:
  6631  000E54                     
  6632                           ; BSR set to: 1
  6633                           ;main.c: 970:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA 
      +                          - 1] == '1') {;main.c: 971:                                 *caminoActual = DERECHA;
  6634  000E54  C1EE  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6635  000E58  C1EF  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6636  000E5C  0E03               	movlw	3
  6637  000E5E  6EDF               	movwf	indf2,c
  6638  000E60                     
  6639                           ; BSR set to: 1
  6640                           ;main.c: 972:                                 direccionElegida = IZQUIERDA;
  6641  000E60  0E02               	movlw	2
  6642  000E62  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6643  000E64  EF36  F007         	goto	l10249
  6644  000E68                     l585:
  6645                           
  6646                           ; BSR set to: 1
  6647  000E68  EFBC  F007         	goto	l10347
  6648  000E6C                     l10249:
  6649  000E6C  0101               	movlb	1	; () banked
  6650  000E6E  EE20 F001          	lfsr	2,1
  6651  000E72  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6652  000E74  26D9               	addwf	fsr2l,f,c
  6653  000E76  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6654  000E78  22DA               	addwfc	fsr2h,f,c
  6655  000E7A  0E58               	movlw	88
  6656  000E7C  18DE               	xorwf	postinc2,w,c
  6657  000E7E  A4D8               	btfss	status,2,c
  6658  000E80  EF44  F007         	goto	u11521
  6659  000E84  EF46  F007         	goto	u11520
  6660  000E88                     u11521:
  6661  000E88  EFBC  F007         	goto	l10347
  6662  000E8C                     u11520:
  6663  000E8C                     
  6664                           ; BSR set to: 1
  6665  000E8C  EE20 F002          	lfsr	2,2
  6666  000E90  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6667  000E92  26D9               	addwf	fsr2l,f,c
  6668  000E94  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6669  000E96  22DA               	addwfc	fsr2h,f,c
  6670  000E98  0E31               	movlw	49
  6671  000E9A  18DE               	xorwf	postinc2,w,c
  6672  000E9C  A4D8               	btfss	status,2,c
  6673  000E9E  EF53  F007         	goto	u11531
  6674  000EA2  EF55  F007         	goto	u11530
  6675  000EA6                     u11531:
  6676  000EA6  EF34  F007         	goto	l585
  6677  000EAA                     u11530:
  6678  000EAA                     l10253:
  6679                           
  6680                           ; BSR set to: 1
  6681                           ;main.c: 1000:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1001:                                 *caminoActual = DERECHA;
  6682  000EAA  C1EE  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6683  000EAE  C1EF  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6684  000EB2  0E03               	movlw	3
  6685  000EB4  6EDF               	movwf	indf2,c
  6686  000EB6                     
  6687                           ; BSR set to: 1
  6688                           ;main.c: 1002:                                 direccionElegida = ENFRENTE;
  6689  000EB6  0E01               	movlw	1
  6690  000EB8  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6691                           
  6692                           ;main.c: 1003:                             } else if (SENSOR_PRIORIDAD_BAJA == ENFRENTE 
      +                          &&
  6693  000EBA  EFBC  F007         	goto	l10347
  6694  000EBE                     l10295:
  6695                           
  6696                           ; BSR set to: 0
  6697  000EBE  0101               	movlb	1	; () banked
  6698  000EC0  EE20 F001          	lfsr	2,1
  6699  000EC4  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6700  000EC6  26D9               	addwf	fsr2l,f,c
  6701  000EC8  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6702  000ECA  22DA               	addwfc	fsr2h,f,c
  6703  000ECC  0E58               	movlw	88
  6704  000ECE  18DE               	xorwf	postinc2,w,c
  6705  000ED0  A4D8               	btfss	status,2,c
  6706  000ED2  EF6D  F007         	goto	u11541
  6707  000ED6  EF6F  F007         	goto	u11540
  6708  000EDA                     u11541:
  6709  000EDA  EFBC  F007         	goto	l10347
  6710  000EDE                     u11540:
  6711  000EDE                     
  6712                           ; BSR set to: 1
  6713  000EDE  EE20 F002          	lfsr	2,2
  6714  000EE2  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6715  000EE4  26D9               	addwf	fsr2l,f,c
  6716  000EE6  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6717  000EE8  22DA               	addwfc	fsr2h,f,c
  6718  000EEA  0E31               	movlw	49
  6719  000EEC  18DE               	xorwf	postinc2,w,c
  6720  000EEE  A4D8               	btfss	status,2,c
  6721  000EF0  EF7C  F007         	goto	u11551
  6722  000EF4  EF7E  F007         	goto	u11550
  6723  000EF8                     u11551:
  6724  000EF8  EF80  F007         	goto	l10309
  6725  000EFC                     u11550:
  6726  000EFC  EF55  F007         	goto	l10253
  6727  000F00                     l10309:
  6728                           
  6729                           ; BSR set to: 1
  6730                           ;main.c: 1063:                                 *contCaminosRecorridos = 3;
  6731  000F00  C1EC  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6732  000F04  C1ED  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6733  000F08  0E03               	movlw	3
  6734  000F0A  6EDF               	movwf	indf2,c
  6735  000F0C  EFBC  F007         	goto	l10347
  6736  000F10                     l10339:
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;main.c: 1102:                     *cambioOrientacionCarro = 0;
  6740  000F10  C1F0  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6741  000F14  C1F1  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6742  000F18  0E00               	movlw	0
  6743  000F1A  6EDF               	movwf	indf2,c
  6744                           
  6745                           ;main.c: 1103:                     *contCaminosRecorridos = 0;
  6746  000F1C  C1EC  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6747  000F20  C1ED  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6748  000F24  0E00               	movlw	0
  6749  000F26  6EDF               	movwf	indf2,c
  6750                           
  6751                           ;main.c: 1104:                     *investigandoCruce = 0;
  6752  000F28  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6753  000F2C  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6754  000F30  0E00               	movlw	0
  6755  000F32  6EDF               	movwf	indf2,c
  6756  000F34                     
  6757                           ; BSR set to: 0
  6758                           ;main.c: 1105:                     direccionElegida = ALTO;
  6759  000F34  0E04               	movlw	4
  6760  000F36  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6761                           
  6762                           ;main.c: 1107:                     break;
  6763  000F38  EFBC  F007         	goto	l10347
  6764  000F3C                     l10345:
  6765  000F3C  C1EC  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6766  000F40  C1ED  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6767  000F44  50DF               	movf	indf2,w,c
  6768  000F46  0100               	movlb	0	; () banked
  6769  000F48  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6770  000F4A  6BFC               	clrf	(??_decidirDireccion+1)& (0+255),b
  6771                           
  6772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6773                           ; Switch size 1, requested type "simple"
  6774                           ; Number of cases is 1, Range of values is 0 to 0
  6775                           ; switch strategies available:
  6776                           ; Name         Instructions Cycles
  6777                           ; simple_byte            4     3 (average)
  6778                           ;	Chosen strategy is simple_byte
  6779  000F4C  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6780  000F4E  0A00               	xorlw	0	; case 0
  6781  000F50  B4D8               	btfsc	status,2,c
  6782  000F52  EFAD  F007         	goto	l11293
  6783  000F56  EFBC  F007         	goto	l10347
  6784  000F5A                     l11293:
  6785                           
  6786                           ; BSR set to: 0
  6787                           ; Switch size 1, requested type "simple"
  6788                           ; Number of cases is 3, Range of values is 1 to 3
  6789                           ; switch strategies available:
  6790                           ; Name         Instructions Cycles
  6791                           ; simple_byte           10     6 (average)
  6792                           ;	Chosen strategy is simple_byte
  6793  000F5A  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6794  000F5C  0A01               	xorlw	1	; case 1
  6795  000F5E  B4D8               	btfsc	status,2,c
  6796  000F60  EFF4  F006         	goto	l10207
  6797  000F64  0A03               	xorlw	3	; case 2
  6798  000F66  B4D8               	btfsc	status,2,c
  6799  000F68  EF5F  F007         	goto	l10295
  6800  000F6C  0A01               	xorlw	1	; case 3
  6801  000F6E  B4D8               	btfsc	status,2,c
  6802  000F70  EF88  F007         	goto	l10339
  6803  000F74  EFBC  F007         	goto	l10347
  6804  000F78                     l10347:
  6805                           
  6806                           ;main.c: 1111:         if (direccionElegida == ENFRENTE) {
  6807  000F78  0454               	decf	decidirDireccion@direccionElegida^0,w,c
  6808  000F7A  A4D8               	btfss	status,2,c
  6809  000F7C  EFC2  F007         	goto	u11561
  6810  000F80  EFC4  F007         	goto	u11560
  6811  000F84                     u11561:
  6812  000F84  EFCC  F007         	goto	l10353
  6813  000F88                     u11560:
  6814  000F88                     
  6815                           ;main.c: 1112:             *avanceRectoLargo = 1;
  6816  000F88  C1F6  FFD9         	movff	decidirDireccion@avanceRectoLargo,fsr2l
  6817  000F8C  C1F7  FFDA         	movff	decidirDireccion@avanceRectoLargo+1,fsr2h
  6818  000F90  0E01               	movlw	1
  6819  000F92  6EDF               	movwf	indf2,c
  6820  000F94                     
  6821                           ;main.c: 1113:             velocidadBaja();
  6822  000F94  ECAC  F02B         	call	_velocidadBaja	;wreg free
  6823  000F98                     l10353:
  6824                           
  6825                           ;main.c: 1116:         mostrarDireccionElegida(direccionElegida);
  6826  000F98  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  6827  000F9A  ECC7  F026         	call	_mostrarDireccionElegida
  6828                           
  6829                           ;main.c: 1118:     } else if (*posicionInvCruce && *investigandoCruce && caminoEncontrad
      +                          o) {
  6830  000F9E  EF86  F009         	goto	l632
  6831  000FA2                     l10355:
  6832                           
  6833                           ; BSR set to: 0
  6834  000FA2  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6835  000FA6  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6836  000FAA  50DF               	movf	indf2,w,c
  6837  000FAC  B4D8               	btfsc	status,2,c
  6838  000FAE  EFDB  F007         	goto	u11571
  6839  000FB2  EFDD  F007         	goto	u11570
  6840  000FB6                     u11571:
  6841  000FB6  EF83  F008         	goto	l10391
  6842  000FBA                     u11570:
  6843  000FBA                     
  6844                           ; BSR set to: 0
  6845  000FBA  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6846  000FBE  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6847  000FC2  50DF               	movf	indf2,w,c
  6848  000FC4  B4D8               	btfsc	status,2,c
  6849  000FC6  EFE7  F007         	goto	u11581
  6850  000FCA  EFE9  F007         	goto	u11580
  6851  000FCE                     u11581:
  6852  000FCE  EF83  F008         	goto	l10391
  6853  000FD2                     u11580:
  6854  000FD2                     
  6855                           ; BSR set to: 0
  6856  000FD2  5059               	movf	_caminoEncontrado^0,w,c
  6857  000FD4  B4D8               	btfsc	status,2,c
  6858  000FD6  EFEF  F007         	goto	u11591
  6859  000FDA  EFF1  F007         	goto	u11590
  6860  000FDE                     u11591:
  6861  000FDE  EF83  F008         	goto	l10391
  6862  000FE2                     u11590:
  6863  000FE2                     
  6864                           ; BSR set to: 0
  6865                           ;main.c: 1120:         if (*posicionInvCruce)
  6866  000FE2  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6867  000FE6  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6868  000FEA  50DF               	movf	indf2,w,c
  6869  000FEC  B4D8               	btfsc	status,2,c
  6870  000FEE  EFFB  F007         	goto	u11601
  6871  000FF2  EFFD  F007         	goto	u11600
  6872  000FF6                     u11601:
  6873  000FF6  EF03  F008         	goto	l10365
  6874  000FFA                     u11600:
  6875  000FFA                     
  6876                           ; BSR set to: 0
  6877                           ;main.c: 1121:             *posicionInvCruce = 0;
  6878  000FFA  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6879  000FFE  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6880  001002  0E00               	movlw	0
  6881  001004  6EDF               	movwf	indf2,c
  6882  001006                     l10365:
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;main.c: 1123:         if (ida) {
  6886  001006  0101               	movlb	1	; () banked
  6887  001008  51FA               	movf	_ida& (0+255),w,b
  6888  00100A  B4D8               	btfsc	status,2,c
  6889  00100C  EF0A  F008         	goto	u11611
  6890  001010  EF0C  F008         	goto	u11610
  6891  001014                     u11611:
  6892  001014  EF21  F008         	goto	l10371
  6893  001018                     u11610:
  6894  001018                     
  6895                           ; BSR set to: 1
  6896                           ;main.c: 1124:             direccionElegida = caminoFinal[crucesRecorridos - 1];
  6897  001018  5140               	movf	_crucesRecorridos& (0+255),w,b
  6898  00101A  25F8               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  6899  00101C  0100               	movlb	0	; () banked
  6900  00101E  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6901  001020  0E00               	movlw	0
  6902  001022  0101               	movlb	1	; () banked
  6903  001024  21F9               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  6904  001026  0100               	movlb	0	; () banked
  6905  001028  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  6906  00102A  0EFF               	movlw	255
  6907  00102C  25FB               	addwf	??_decidirDireccion& (0+255),w,b
  6908  00102E  6ED9               	movwf	fsr2l,c
  6909  001030  0EFF               	movlw	255
  6910  001032  21FC               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  6911  001034  6EDA               	movwf	fsr2h,c
  6912  001036  50DF               	movf	indf2,w,c
  6913  001038  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6914  00103A                     
  6915                           ; BSR set to: 0
  6916                           ;main.c: 1125:             crucesRecorridos++;
  6917  00103A  0101               	movlb	1	; () banked
  6918  00103C  2B40               	incf	_crucesRecorridos& (0+255),f,b
  6919                           
  6920                           ;main.c: 1126:         } else {
  6921  00103E  EF7E  F008         	goto	l10389
  6922  001042                     l10371:
  6923                           
  6924                           ; BSR set to: 1
  6925                           ;main.c: 1128:             if (caminoFinal[crucesRecorridos - 1] == IZQUIERDA)
  6926  001042  5140               	movf	_crucesRecorridos& (0+255),w,b
  6927  001044  25F8               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  6928  001046  0100               	movlb	0	; () banked
  6929  001048  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6930  00104A  0E00               	movlw	0
  6931  00104C  0101               	movlb	1	; () banked
  6932  00104E  21F9               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  6933  001050  0100               	movlb	0	; () banked
  6934  001052  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  6935  001054  0EFF               	movlw	255
  6936  001056  25FB               	addwf	??_decidirDireccion& (0+255),w,b
  6937  001058  6ED9               	movwf	fsr2l,c
  6938  00105A  0EFF               	movlw	255
  6939  00105C  21FC               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  6940  00105E  6EDA               	movwf	fsr2h,c
  6941  001060  0E02               	movlw	2
  6942  001062  18DE               	xorwf	postinc2,w,c
  6943  001064  A4D8               	btfss	status,2,c
  6944  001066  EF37  F008         	goto	u11621
  6945  00106A  EF39  F008         	goto	u11620
  6946  00106E                     u11621:
  6947  00106E  EF3D  F008         	goto	l10375
  6948  001072                     u11620:
  6949  001072                     
  6950                           ; BSR set to: 0
  6951                           ;main.c: 1129:                 direccionElegida = DERECHA;
  6952  001072  0E03               	movlw	3
  6953  001074  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6954  001076  EF6C  F008         	goto	l10381
  6955  00107A                     l10375:
  6956                           
  6957                           ; BSR set to: 0
  6958  00107A  0101               	movlb	1	; () banked
  6959  00107C  5140               	movf	_crucesRecorridos& (0+255),w,b
  6960  00107E  25F8               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  6961  001080  0100               	movlb	0	; () banked
  6962  001082  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6963  001084  0E00               	movlw	0
  6964  001086  0101               	movlb	1	; () banked
  6965  001088  21F9               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  6966  00108A  0100               	movlb	0	; () banked
  6967  00108C  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  6968  00108E  0EFF               	movlw	255
  6969  001090  25FB               	addwf	??_decidirDireccion& (0+255),w,b
  6970  001092  6ED9               	movwf	fsr2l,c
  6971  001094  0EFF               	movlw	255
  6972  001096  21FC               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  6973  001098  6EDA               	movwf	fsr2h,c
  6974  00109A  0E03               	movlw	3
  6975  00109C  18DE               	xorwf	postinc2,w,c
  6976  00109E  A4D8               	btfss	status,2,c
  6977  0010A0  EF54  F008         	goto	u11631
  6978  0010A4  EF56  F008         	goto	u11630
  6979  0010A8                     u11631:
  6980  0010A8  EF5A  F008         	goto	l10379
  6981  0010AC                     u11630:
  6982  0010AC                     
  6983                           ; BSR set to: 0
  6984                           ;main.c: 1131:                 direccionElegida = IZQUIERDA;
  6985  0010AC  0E02               	movlw	2
  6986  0010AE  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6987  0010B0  EF6C  F008         	goto	l10381
  6988  0010B4                     l10379:
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;main.c: 1133:                 direccionElegida = caminoFinal[crucesRecorridos - 1];
  6992  0010B4  0101               	movlb	1	; () banked
  6993  0010B6  5140               	movf	_crucesRecorridos& (0+255),w,b
  6994  0010B8  25F8               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  6995  0010BA  0100               	movlb	0	; () banked
  6996  0010BC  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6997  0010BE  0E00               	movlw	0
  6998  0010C0  0101               	movlb	1	; () banked
  6999  0010C2  21F9               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  7000  0010C4  0100               	movlb	0	; () banked
  7001  0010C6  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  7002  0010C8  0EFF               	movlw	255
  7003  0010CA  25FB               	addwf	??_decidirDireccion& (0+255),w,b
  7004  0010CC  6ED9               	movwf	fsr2l,c
  7005  0010CE  0EFF               	movlw	255
  7006  0010D0  21FC               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  7007  0010D2  6EDA               	movwf	fsr2h,c
  7008  0010D4  50DF               	movf	indf2,w,c
  7009  0010D6  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7010  0010D8                     l10381:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;main.c: 1135:             crucesRecorridos--;
  7014  0010D8  0101               	movlb	1	; () banked
  7015  0010DA  0740               	decf	_crucesRecorridos& (0+255),f,b
  7016  0010DC                     
  7017                           ; BSR set to: 1
  7018                           ;main.c: 1137:             if (direccionElegida == ENFRENTE) {
  7019  0010DC  0454               	decf	decidirDireccion@direccionElegida^0,w,c
  7020  0010DE  A4D8               	btfss	status,2,c
  7021  0010E0  EF74  F008         	goto	u11641
  7022  0010E4  EF76  F008         	goto	u11640
  7023  0010E8                     u11641:
  7024  0010E8  EF7E  F008         	goto	l10389
  7025  0010EC                     u11640:
  7026  0010EC                     
  7027                           ; BSR set to: 1
  7028                           ;main.c: 1138:                 *avanceRectoLargo = 1;
  7029  0010EC  C1F6  FFD9         	movff	decidirDireccion@avanceRectoLargo,fsr2l
  7030  0010F0  C1F7  FFDA         	movff	decidirDireccion@avanceRectoLargo+1,fsr2h
  7031  0010F4  0E01               	movlw	1
  7032  0010F6  6EDF               	movwf	indf2,c
  7033  0010F8                     
  7034                           ; BSR set to: 1
  7035                           ;main.c: 1139:                 velocidadBaja();
  7036  0010F8  ECAC  F02B         	call	_velocidadBaja	;wreg free
  7037  0010FC                     l10389:
  7038                           
  7039                           ;main.c: 1143:         mostrarDireccionElegida(direccionElegida);
  7040  0010FC  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  7041  0010FE  ECC7  F026         	call	_mostrarDireccionElegida
  7042                           
  7043                           ;main.c: 1146:     } else {
  7044  001102  EF86  F009         	goto	l632
  7045  001106                     l10391:
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;main.c: 1148:         if (llegoDestino) {
  7049  001106  51FF               	movf	_llegoDestino& (0+255),w,b
  7050  001108  B4D8               	btfsc	status,2,c
  7051  00110A  EF89  F008         	goto	u11651
  7052  00110E  EF8B  F008         	goto	u11650
  7053  001112                     u11651:
  7054  001112  EF8F  F008         	goto	l10395
  7055  001116                     u11650:
  7056  001116                     
  7057                           ; BSR set to: 0
  7058                           ;main.c: 1149:             direccionElegida = ALTO;
  7059  001116  0E04               	movlw	4
  7060  001118  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7061                           
  7062                           ;main.c: 1151:         } else {
  7063  00111A  EF86  F009         	goto	l632
  7064  00111E                     l10395:
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;main.c: 1153:             if (hayCruce(caminosRecorrer, *investigandoCruce)) {
  7068  00111E  C1E6  F040         	movff	decidirDireccion@caminosRecorrer,hayCruce@caminosRecorrer
  7069  001122  C1E7  F041         	movff	decidirDireccion@caminosRecorrer+1,hayCruce@caminosRecorrer+1
  7070  001126  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  7071  00112A  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  7072  00112E  50DF               	movf	indf2,w,c
  7073  001130  6E42               	movwf	hayCruce@investigandoCruce^0,c
  7074  001132  EC88  F01C         	call	_hayCruce	;wreg free
  7075  001136  0900               	iorlw	0
  7076  001138  B4D8               	btfsc	status,2,c
  7077  00113A  EFA1  F008         	goto	u11661
  7078  00113E  EFA3  F008         	goto	u11660
  7079  001142                     u11661:
  7080  001142  EF0D  F009         	goto	l10411
  7081  001146                     u11660:
  7082  001146                     
  7083                           ;main.c: 1155:                 velocidadBaja();
  7084  001146  ECAC  F02B         	call	_velocidadBaja	;wreg free
  7085  00114A                     
  7086                           ;main.c: 1157:                 if (!(*cruceDetectado)) {
  7087  00114A  C1F4  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  7088  00114E  C1F5  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  7089  001152  50DF               	movf	indf2,w,c
  7090  001154  A4D8               	btfss	status,2,c
  7091  001156  EFAF  F008         	goto	u11671
  7092  00115A  EFB1  F008         	goto	u11670
  7093  00115E                     u11671:
  7094  00115E  EF86  F009         	goto	l632
  7095  001162                     u11670:
  7096  001162                     
  7097                           ;main.c: 1159:                     if (!(*investigandoCruce))
  7098  001162  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  7099  001166  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  7100  00116A  50DF               	movf	indf2,w,c
  7101  00116C  A4D8               	btfss	status,2,c
  7102  00116E  EFBB  F008         	goto	u11681
  7103  001172  EFBD  F008         	goto	u11680
  7104  001176                     u11681:
  7105  001176  EFC3  F008         	goto	l647
  7106  00117A                     u11680:
  7107  00117A                     
  7108                           ;main.c: 1160:                         *posicionInvCruce = 1;
  7109  00117A  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  7110  00117E  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  7111  001182  0E01               	movlw	1
  7112  001184  6EDF               	movwf	indf2,c
  7113  001186                     l647:
  7114                           
  7115                           ;main.c: 1163:                     *mapear = 1;
  7116  001186  C1F2  FFD9         	movff	decidirDireccion@mapear,fsr2l
  7117  00118A  C1F3  FFDA         	movff	decidirDireccion@mapear+1,fsr2h
  7118  00118E  0E01               	movlw	1
  7119  001190  6EDF               	movwf	indf2,c
  7120                           
  7121                           ;main.c: 1164:                     *cruceDetectado = 1;
  7122  001192  C1F4  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  7123  001196  C1F5  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  7124  00119A  0E01               	movlw	1
  7125  00119C  6EDF               	movwf	indf2,c
  7126                           
  7127                           ;main.c: 1165:                     *investigandoCruce = 1;
  7128  00119E  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  7129  0011A2  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  7130  0011A6  0E01               	movlw	1
  7131  0011A8  6EDF               	movwf	indf2,c
  7132  0011AA                     
  7133                           ;main.c: 1166:                     direccionElegida = ALTO;
  7134  0011AA  0E04               	movlw	4
  7135  0011AC  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7136  0011AE                     
  7137                           ;main.c: 1168:                     sprintf(buffer, "Investigando Cruce: %c | %c | %c\n",
  7138  0011AE  0E92               	movlw	low _buffer
  7139  0011B0  0100               	movlb	0	; () banked
  7140  0011B2  6FE7               	movwf	sprintf@s& (0+255),b
  7141  0011B4  0E01               	movlw	high _buffer
  7142  0011B6  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  7143  0011B8  0E87               	movlw	low STR_19
  7144  0011BA  6FE9               	movwf	sprintf@fmt& (0+255),b
  7145  0011BC  0E7E               	movlw	high STR_19
  7146  0011BE  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  7147  0011C0  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  7148  0011C4  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  7149  0011C8  50DF               	movf	indf2,w,c
  7150  0011CA  6FFB               	movwf	??_decidirDireccion& (0+255),b
  7151  0011CC  51FB               	movf	??_decidirDireccion& (0+255),w,b
  7152  0011CE  6FEB               	movwf	(?_sprintf+4)& (0+255),b
  7153  0011D0  6BEC               	clrf	(?_sprintf+5)& (0+255),b
  7154  0011D2  0101               	movlb	1	; () banked
  7155  0011D4  EE20 F001          	lfsr	2,1
  7156  0011D8  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  7157  0011DA  26D9               	addwf	fsr2l,f,c
  7158  0011DC  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  7159  0011DE  22DA               	addwfc	fsr2h,f,c
  7160  0011E0  50DF               	movf	indf2,w,c
  7161  0011E2  0100               	movlb	0	; () banked
  7162  0011E4  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  7163  0011E6  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  7164  0011E8  6FED               	movwf	(?_sprintf+6)& (0+255),b
  7165  0011EA  6BEE               	clrf	(?_sprintf+7)& (0+255),b
  7166  0011EC  0101               	movlb	1	; () banked
  7167  0011EE  EE20 F002          	lfsr	2,2
  7168  0011F2  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  7169  0011F4  26D9               	addwf	fsr2l,f,c
  7170  0011F6  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  7171  0011F8  22DA               	addwfc	fsr2h,f,c
  7172  0011FA  50DF               	movf	indf2,w,c
  7173  0011FC  0100               	movlb	0	; () banked
  7174  0011FE  6FFD               	movwf	(??_decidirDireccion+2)& (0+255),b
  7175  001200  51FD               	movf	(??_decidirDireccion+2)& (0+255),w,b
  7176  001202  6FEF               	movwf	(?_sprintf+8)& (0+255),b
  7177  001204  6BF0               	clrf	(?_sprintf+9)& (0+255),b
  7178  001206  EC5B  F029         	call	_sprintf	;wreg free
  7179  00120A                     
  7180                           ;main.c: 1170:                     UART_printf(buffer);
  7181  00120A  0E92               	movlw	low _buffer
  7182  00120C  6E07               	movwf	UART_printf@cadena^0,c
  7183  00120E  0E01               	movlw	high _buffer
  7184  001210  6E08               	movwf	(UART_printf@cadena+1)^0,c
  7185  001212  EC51  F028         	call	_UART_printf	;wreg free
  7186  001216  EF86  F009         	goto	l632
  7187  00121A                     l10411:
  7188                           
  7189                           ;main.c: 1176:                 if (DISTANCIA_PRIORIDAD_ALTA > 14)
  7190  00121A  0E00               	movlw	0
  7191  00121C  6E34               	movwf	___flge@ff1^0,c
  7192  00121E  0E00               	movlw	0
  7193  001220  6E35               	movwf	(___flge@ff1+1)^0,c
  7194  001222  0E60               	movlw	96
  7195  001224  6E36               	movwf	(___flge@ff1+2)^0,c
  7196  001226  0E41               	movlw	65
  7197  001228  6E37               	movwf	(___flge@ff1+3)^0,c
  7198  00122A  C114  F038         	movff	_DISTANCIA_PRIORIDAD_ALTA,___flge@ff2
  7199  00122E  C115  F039         	movff	_DISTANCIA_PRIORIDAD_ALTA+1,___flge@ff2+1
  7200  001232  C116  F03A         	movff	_DISTANCIA_PRIORIDAD_ALTA+2,___flge@ff2+2
  7201  001236  C117  F03B         	movff	_DISTANCIA_PRIORIDAD_ALTA+3,___flge@ff2+3
  7202  00123A  ECC3  F021         	call	___flge	;wreg free
  7203  00123E  B0D8               	btfsc	status,0,c
  7204  001240  EF24  F009         	goto	u11691
  7205  001244  EF26  F009         	goto	u11690
  7206  001248                     u11691:
  7207  001248  EF2A  F009         	goto	l10415
  7208  00124C                     u11690:
  7209  00124C  0E01               	movlw	1
  7210  00124E  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7211  001250  EF86  F009         	goto	l632
  7212  001254                     l10415:
  7213  001254  0E00               	movlw	0
  7214  001256  6E34               	movwf	___flge@ff1^0,c
  7215  001258  0E00               	movlw	0
  7216  00125A  6E35               	movwf	(___flge@ff1+1)^0,c
  7217  00125C  0EF0               	movlw	240
  7218  00125E  6E36               	movwf	(___flge@ff1+2)^0,c
  7219  001260  0E41               	movlw	65
  7220  001262  6E37               	movwf	(___flge@ff1+3)^0,c
  7221  001264  C110  F038         	movff	_DISTANCIA_PRIORIDAD_MEDIA,___flge@ff2
  7222  001268  C111  F039         	movff	_DISTANCIA_PRIORIDAD_MEDIA+1,___flge@ff2+1
  7223  00126C  C112  F03A         	movff	_DISTANCIA_PRIORIDAD_MEDIA+2,___flge@ff2+2
  7224  001270  C113  F03B         	movff	_DISTANCIA_PRIORIDAD_MEDIA+3,___flge@ff2+3
  7225  001274  ECC3  F021         	call	___flge	;wreg free
  7226  001278  B0D8               	btfsc	status,0,c
  7227  00127A  EF41  F009         	goto	u11701
  7228  00127E  EF43  F009         	goto	u11700
  7229  001282                     u11701:
  7230  001282  EF47  F009         	goto	l10419
  7231  001286                     u11700:
  7232  001286  0E02               	movlw	2
  7233  001288  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7234  00128A  EF86  F009         	goto	l632
  7235  00128E                     l10419:
  7236  00128E  0E00               	movlw	0
  7237  001290  6E34               	movwf	___flge@ff1^0,c
  7238  001292  0E00               	movlw	0
  7239  001294  6E35               	movwf	(___flge@ff1+1)^0,c
  7240  001296  0EF0               	movlw	240
  7241  001298  6E36               	movwf	(___flge@ff1+2)^0,c
  7242  00129A  0E41               	movlw	65
  7243  00129C  6E37               	movwf	(___flge@ff1+3)^0,c
  7244  00129E  C10C  F038         	movff	_DISTANCIA_PRIORIDAD_BAJA,___flge@ff2
  7245  0012A2  C10D  F039         	movff	_DISTANCIA_PRIORIDAD_BAJA+1,___flge@ff2+1
  7246  0012A6  C10E  F03A         	movff	_DISTANCIA_PRIORIDAD_BAJA+2,___flge@ff2+2
  7247  0012AA  C10F  F03B         	movff	_DISTANCIA_PRIORIDAD_BAJA+3,___flge@ff2+3
  7248  0012AE  ECC3  F021         	call	___flge	;wreg free
  7249  0012B2  B0D8               	btfsc	status,0,c
  7250  0012B4  EF5E  F009         	goto	u11711
  7251  0012B8  EF60  F009         	goto	u11710
  7252  0012BC                     u11711:
  7253  0012BC  EF64  F009         	goto	l10423
  7254  0012C0                     u11710:
  7255  0012C0  0E03               	movlw	3
  7256  0012C2  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7257  0012C4  EF86  F009         	goto	l632
  7258  0012C8                     l10423:
  7259                           
  7260                           ;main.c: 1183:                     if (!crucesRecorridos && caminoEncontrado && !ida) {
  7261  0012C8  0101               	movlb	1	; () banked
  7262  0012CA  5140               	movf	_crucesRecorridos& (0+255),w,b
  7263  0012CC  A4D8               	btfss	status,2,c
  7264  0012CE  EF6B  F009         	goto	u11721
  7265  0012D2  EF6D  F009         	goto	u11720
  7266  0012D6                     u11721:
  7267  0012D6  EF84  F009         	goto	l10431
  7268  0012DA                     u11720:
  7269  0012DA                     
  7270                           ; BSR set to: 1
  7271  0012DA  5059               	movf	_caminoEncontrado^0,w,c
  7272  0012DC  B4D8               	btfsc	status,2,c
  7273  0012DE  EF73  F009         	goto	u11731
  7274  0012E2  EF75  F009         	goto	u11730
  7275  0012E6                     u11731:
  7276  0012E6  EF84  F009         	goto	l10431
  7277  0012EA                     u11730:
  7278  0012EA                     
  7279                           ; BSR set to: 1
  7280  0012EA  51FA               	movf	_ida& (0+255),w,b
  7281  0012EC  A4D8               	btfss	status,2,c
  7282  0012EE  EF7B  F009         	goto	u11741
  7283  0012F2  EF7D  F009         	goto	u11740
  7284  0012F6                     u11741:
  7285  0012F6  EF84  F009         	goto	l10431
  7286  0012FA                     u11740:
  7287  0012FA                     
  7288                           ; BSR set to: 1
  7289                           ;main.c: 1184:                         llegoDestino = 1;
  7290  0012FA  0E01               	movlw	1
  7291  0012FC  0100               	movlb	0	; () banked
  7292  0012FE  6FFF               	movwf	_llegoDestino& (0+255),b
  7293                           
  7294                           ;main.c: 1185:                         direccionElegida = ALTO;
  7295  001300  0E04               	movlw	4
  7296  001302  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7297                           
  7298                           ;main.c: 1186:                     } else
  7299  001304  EF86  F009         	goto	l632
  7300  001308                     l10431:
  7301                           
  7302                           ; BSR set to: 1
  7303                           ;main.c: 1187:                         direccionElegida = 0;
  7304  001308  0E00               	movlw	0
  7305  00130A  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7306  00130C                     l632:
  7307                           
  7308                           ;main.c: 1197:     return direccionElegida;
  7309  00130C  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  7310  00130E  0012               	return		;funcret
  7311  001310                     __end_of_decidirDireccion:
  7312                           	opt callstack 0
  7313                           
  7314 ;; *************** function _velocidadBaja *****************
  7315 ;; Defined at:
  7316 ;;		line 1320 in file "main.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;		None
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;		None
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  1    wreg      void 
  7323 ;; Registers used:
  7324 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7330 ;;      Params:         0       0       0       0       0       0       0       0       0
  7331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7333 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7334 ;;Total ram usage:        0 bytes
  7335 ;; Hardware stack levels used:    1
  7336 ;; Hardware stack levels required when called:    5
  7337 ;; This function calls:
  7338 ;;		_pwmDuty
  7339 ;; This function is called by:
  7340 ;;		_comportamientoBasico
  7341 ;;		_decidirDireccion
  7342 ;;		_probarCruceT
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text26
  7347  005758                     __ptext26:
  7348                           	opt callstack 0
  7349  005758                     _velocidadBaja:
  7350                           	opt callstack 24
  7351  005758                     
  7352                           ;main.c: 1322:     pwmDuty(70, 1);
  7353  005758  0E00               	movlw	0
  7354  00575A  0100               	movlb	0	; () banked
  7355  00575C  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7356  00575E  0E46               	movlw	70
  7357  005760  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7358  005762  0E01               	movlw	1
  7359  005764  6F7E               	movwf	pwmDuty@channel& (0+255),b
  7360  005766  EC08  F01A         	call	_pwmDuty	;wreg free
  7361                           
  7362                           ;main.c: 1323:     pwmDuty(70, 2);
  7363  00576A  0E00               	movlw	0
  7364  00576C  0100               	movlb	0	; () banked
  7365  00576E  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7366  005770  0E46               	movlw	70
  7367  005772  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7368  005774  0E02               	movlw	2
  7369  005776  6F7E               	movwf	pwmDuty@channel& (0+255),b
  7370  005778  EC08  F01A         	call	_pwmDuty	;wreg free
  7371  00577C  0012               	return		;funcret
  7372  00577E                     __end_of_velocidadBaja:
  7373                           	opt callstack 0
  7374                           
  7375 ;; *************** function _pwmDuty *****************
  7376 ;; Defined at:
  7377 ;;		line 20 in file "./pwm.h"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  cicloTrabajo    2   28[BANK0 ] unsigned int 
  7380 ;;  channel         1   30[BANK0 ] unsigned char 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  duty            4   36[BANK0 ] long 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      void 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7392 ;;      Params:         0       3       0       0       0       0       0       0       0
  7393 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7394 ;;      Temps:          0       5       0       0       0       0       0       0       0
  7395 ;;      Totals:         0      12       0       0       0       0       0       0       0
  7396 ;;Total ram usage:       12 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:    4
  7399 ;; This function calls:
  7400 ;;		___fldiv
  7401 ;;		___flmul
  7402 ;;		___fltol
  7403 ;;		___xxtofl
  7404 ;;		_map
  7405 ;; This function is called by:
  7406 ;;		_PID
  7407 ;;		_velocidadEstandar
  7408 ;;		_velocidadBaja
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text27
  7413  003410                     __ptext27:
  7414                           	opt callstack 0
  7415  003410                     _pwmDuty:
  7416                           	opt callstack 24
  7417  003410                     
  7418                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
  7419  003410  C07C  F020         	movff	pwmDuty@cicloTrabajo,map@x
  7420  003414  C07D  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
  7421  003418  6A22               	clrf	(map@x+2)^0,c
  7422  00341A  6A23               	clrf	(map@x+3)^0,c
  7423  00341C  0E00               	movlw	0
  7424  00341E  6E24               	movwf	map@in_min^0,c
  7425  003420  0E00               	movlw	0
  7426  003422  6E25               	movwf	(map@in_min+1)^0,c
  7427  003424  0E00               	movlw	0
  7428  003426  6E26               	movwf	(map@in_min+2)^0,c
  7429  003428  0E00               	movlw	0
  7430  00342A  6E27               	movwf	(map@in_min+3)^0,c
  7431  00342C  0E64               	movlw	100
  7432  00342E  6E28               	movwf	map@in_max^0,c
  7433  003430  0E00               	movlw	0
  7434  003432  6E29               	movwf	(map@in_max+1)^0,c
  7435  003434  0E00               	movlw	0
  7436  003436  6E2A               	movwf	(map@in_max+2)^0,c
  7437  003438  0E00               	movlw	0
  7438  00343A  6E2B               	movwf	(map@in_max+3)^0,c
  7439  00343C  0E00               	movlw	0
  7440  00343E  6E2C               	movwf	map@out_min^0,c
  7441  003440  0E00               	movlw	0
  7442  003442  6E2D               	movwf	(map@out_min+1)^0,c
  7443  003444  0E00               	movlw	0
  7444  003446  6E2E               	movwf	(map@out_min+2)^0,c
  7445  003448  0E00               	movlw	0
  7446  00344A  6E2F               	movwf	(map@out_min+3)^0,c
  7447  00344C  0EFF               	movlw	255
  7448  00344E  6E30               	movwf	map@out_max^0,c
  7449  003450  0E03               	movlw	3
  7450  003452  6E31               	movwf	(map@out_max+1)^0,c
  7451  003454  0E00               	movlw	0
  7452  003456  6E32               	movwf	(map@out_max+2)^0,c
  7453  003458  0E00               	movlw	0
  7454  00345A  6E33               	movwf	(map@out_max+3)^0,c
  7455  00345C  EC08  F027         	call	_map	;wreg free
  7456  003460  C020  F084         	movff	?_map,pwmDuty@duty
  7457  003464  C021  F085         	movff	?_map+1,pwmDuty@duty+1
  7458  003468  C022  F086         	movff	?_map+2,pwmDuty@duty+2
  7459  00346C  C023  F087         	movff	?_map+3,pwmDuty@duty+3
  7460  003470                     
  7461                           ;./pwm.h: 24:     if (duty < 1024) {
  7462  003470  0100               	movlb	0	; () banked
  7463  003472  BF87               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
  7464  003474  EF48  F01A         	goto	u9910
  7465  003478  5187               	movf	(pwmDuty@duty+3)& (0+255),w,b
  7466  00347A  1186               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
  7467  00347C  E107               	bnz	u9911
  7468  00347E  0E04               	movlw	4
  7469  003480  5D85               	subwf	(pwmDuty@duty+1)& (0+255),w,b
  7470  003482  B0D8               	btfsc	status,0,c
  7471  003484  EF46  F01A         	goto	u9911
  7472  003488  EF48  F01A         	goto	u9910
  7473  00348C                     u9911:
  7474  00348C  EFE5  F01A         	goto	l149
  7475  003490                     u9910:
  7476  003490                     
  7477                           ; BSR set to: 0
  7478                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
  7479  003490  0E00               	movlw	0
  7480  003492  6E1F               	movwf	___flmul@a^0,c
  7481  003494  0E00               	movlw	0
  7482  003496  6E20               	movwf	(___flmul@a+1)^0,c
  7483  003498  0EFA               	movlw	250
  7484  00349A  6E21               	movwf	(___flmul@a+2)^0,c
  7485  00349C  0E43               	movlw	67
  7486  00349E  6E22               	movwf	(___flmul@a+3)^0,c
  7487  0034A0  0E00               	movlw	0
  7488  0034A2  6E48               	movwf	___fldiv@a^0,c
  7489  0034A4  0EC0               	movlw	192
  7490  0034A6  6E49               	movwf	(___fldiv@a+1)^0,c
  7491  0034A8  0E7F               	movlw	127
  7492  0034AA  6E4A               	movwf	(___fldiv@a+2)^0,c
  7493  0034AC  0E44               	movlw	68
  7494  0034AE  6E4B               	movwf	(___fldiv@a+3)^0,c
  7495  0034B0  C084  F00D         	movff	pwmDuty@duty,___xxtofl@val
  7496  0034B4  C085  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
  7497  0034B8  C086  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
  7498  0034BC  C087  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
  7499  0034C0  0E01               	movlw	1
  7500  0034C2  ECE6  F01A         	call	___xxtofl
  7501  0034C6  C00D  F044         	movff	?___xxtofl,___fldiv@b
  7502  0034CA  C00E  F045         	movff	?___xxtofl+1,___fldiv@b+1
  7503  0034CE  C00F  F046         	movff	?___xxtofl+2,___fldiv@b+2
  7504  0034D2  C010  F047         	movff	?___xxtofl+3,___fldiv@b+3
  7505  0034D6  EC97  F014         	call	___fldiv	;wreg free
  7506  0034DA  C044  F01B         	movff	?___fldiv,___flmul@b
  7507  0034DE  C045  F01C         	movff	?___fldiv+1,___flmul@b+1
  7508  0034E2  C046  F01D         	movff	?___fldiv+2,___flmul@b+2
  7509  0034E6  C047  F01E         	movff	?___fldiv+3,___flmul@b+3
  7510  0034EA  ECBC  F00E         	call	___flmul	;wreg free
  7511  0034EE  C01B  F072         	movff	?___flmul,___fltol@f1
  7512  0034F2  C01C  F073         	movff	?___flmul+1,___fltol@f1+1
  7513  0034F6  C01D  F074         	movff	?___flmul+2,___fltol@f1+2
  7514  0034FA  C01E  F075         	movff	?___flmul+3,___fltol@f1+3
  7515  0034FE  EC3F  F021         	call	___fltol	;wreg free
  7516  003502  C072  F084         	movff	?___fltol,pwmDuty@duty
  7517  003506  C073  F085         	movff	?___fltol+1,pwmDuty@duty+1
  7518  00350A  C074  F086         	movff	?___fltol+2,pwmDuty@duty+2
  7519  00350E  C075  F087         	movff	?___fltol+3,pwmDuty@duty+3
  7520                           
  7521                           ;./pwm.h: 28:         switch (channel) {
  7522  003512  EFCF  F01A         	goto	l9119
  7523  003516                     l9113:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
  7527  003516  0E02               	movlw	2
  7528  003518  6F7F               	movwf	??_pwmDuty& (0+255),b
  7529  00351A  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
  7530  00351E  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7531  003522  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7532  003526  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7533  00352A                     u9925:
  7534  00352A  677F               	tstfsz	??_pwmDuty& (0+255),b
  7535  00352C  EF9A  F01A         	goto	u9926
  7536  003530  EFA2  F01A         	goto	u9927
  7537  003534                     u9926:
  7538  003534  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7539  003536  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7540  003538  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7541  00353A  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7542  00353C  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7543  00353E  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
  7544  003540  EF95  F01A         	goto	u9925
  7545  003544                     u9927:
  7546  003544  0100               	movlb	0	; () banked
  7547  003546  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7548  003548  6EBE               	movwf	190,c	;volatile
  7549                           
  7550                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
  7551  00354A  0ECF               	movlw	207
  7552  00354C  16BD               	andwf	189,f,c	;volatile
  7553                           
  7554                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
  7555  00354E  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7556  003550  0BF0               	andlw	240
  7557  003552  0B30               	andlw	48
  7558  003554  12BD               	iorwf	189,f,c	;volatile
  7559                           
  7560                           ;./pwm.h: 34:                 break;
  7561  003556  EFE5  F01A         	goto	l149
  7562  00355A                     l9115:
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
  7566  00355A  0E02               	movlw	2
  7567  00355C  6F7F               	movwf	??_pwmDuty& (0+255),b
  7568  00355E  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
  7569  003562  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7570  003566  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7571  00356A  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7572  00356E                     u9935:
  7573  00356E  677F               	tstfsz	??_pwmDuty& (0+255),b
  7574  003570  EFBC  F01A         	goto	u9936
  7575  003574  EFC4  F01A         	goto	u9937
  7576  003578                     u9936:
  7577  003578  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7578  00357A  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7579  00357C  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7580  00357E  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7581  003580  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7582  003582  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
  7583  003584  EFB7  F01A         	goto	u9935
  7584  003588                     u9937:
  7585  003588  0100               	movlb	0	; () banked
  7586  00358A  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7587  00358C  6EBB               	movwf	187,c	;volatile
  7588                           
  7589                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
  7590  00358E  0ECF               	movlw	207
  7591  003590  16BA               	andwf	186,f,c	;volatile
  7592                           
  7593                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
  7594  003592  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7595  003594  0BF0               	andlw	240
  7596  003596  0B30               	andlw	48
  7597  003598  12BA               	iorwf	186,f,c	;volatile
  7598                           
  7599                           ;./pwm.h: 40:                 break;
  7600  00359A  EFE5  F01A         	goto	l149
  7601  00359E                     l9119:
  7602  00359E  0100               	movlb	0	; () banked
  7603  0035A0  517E               	movf	pwmDuty@channel& (0+255),w,b
  7604  0035A2  6F7F               	movwf	??_pwmDuty& (0+255),b
  7605  0035A4  6B80               	clrf	(??_pwmDuty+1)& (0+255),b
  7606                           
  7607                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7608                           ; Switch size 1, requested type "simple"
  7609                           ; Number of cases is 1, Range of values is 0 to 0
  7610                           ; switch strategies available:
  7611                           ; Name         Instructions Cycles
  7612                           ; simple_byte            4     3 (average)
  7613                           ;	Chosen strategy is simple_byte
  7614  0035A6  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7615  0035A8  0A00               	xorlw	0	; case 0
  7616  0035AA  B4D8               	btfsc	status,2,c
  7617  0035AC  EFDA  F01A         	goto	l11295
  7618  0035B0  EFE5  F01A         	goto	l149
  7619  0035B4                     l11295:
  7620                           
  7621                           ; BSR set to: 0
  7622                           ; Switch size 1, requested type "simple"
  7623                           ; Number of cases is 2, Range of values is 1 to 2
  7624                           ; switch strategies available:
  7625                           ; Name         Instructions Cycles
  7626                           ; simple_byte            7     4 (average)
  7627                           ;	Chosen strategy is simple_byte
  7628  0035B4  517F               	movf	??_pwmDuty& (0+255),w,b
  7629  0035B6  0A01               	xorlw	1	; case 1
  7630  0035B8  B4D8               	btfsc	status,2,c
  7631  0035BA  EF8B  F01A         	goto	l9113
  7632  0035BE  0A03               	xorlw	3	; case 2
  7633  0035C0  B4D8               	btfsc	status,2,c
  7634  0035C2  EFAD  F01A         	goto	l9115
  7635  0035C6  EFE5  F01A         	goto	l149
  7636  0035CA                     l149:
  7637                           
  7638                           ; BSR set to: 0
  7639  0035CA  0012               	return		;funcret
  7640  0035CC                     __end_of_pwmDuty:
  7641                           	opt callstack 0
  7642                           
  7643 ;; *************** function _map *****************
  7644 ;; Defined at:
  7645 ;;		line 16 in file "./pwm.h"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;  x               4   31[COMRAM] long 
  7648 ;;  in_min          4   35[COMRAM] long 
  7649 ;;  in_max          4   39[COMRAM] long 
  7650 ;;  out_min         4   43[COMRAM] long 
  7651 ;;  out_max         4   47[COMRAM] long 
  7652 ;; Auto vars:     Size  Location     Type
  7653 ;;		None
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  4   31[COMRAM] long 
  7656 ;; Registers used:
  7657 ;;		wreg, status,2, status,0, cstack
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7663 ;;      Params:        20       0       0       0       0       0       0       0       0
  7664 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7665 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7666 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7667 ;;Total ram usage:       20 bytes
  7668 ;; Hardware stack levels used:    1
  7669 ;; Hardware stack levels required when called:    3
  7670 ;; This function calls:
  7671 ;;		___aldiv
  7672 ;;		___lmul
  7673 ;; This function is called by:
  7674 ;;		_pwmDuty
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text28
  7679  004E10                     __ptext28:
  7680                           	opt callstack 0
  7681  004E10                     _map:
  7682                           	opt callstack 24
  7683  004E10                     
  7684                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  7685  004E10  5024               	movf	map@in_min^0,w,c
  7686  004E12  5C20               	subwf	map@x^0,w,c
  7687  004E14  6E06               	movwf	___lmul@multiplier^0,c
  7688  004E16  5025               	movf	(map@in_min+1)^0,w,c
  7689  004E18  5821               	subwfb	(map@x+1)^0,w,c
  7690  004E1A  6E07               	movwf	(___lmul@multiplier+1)^0,c
  7691  004E1C  5026               	movf	(map@in_min+2)^0,w,c
  7692  004E1E  5822               	subwfb	(map@x+2)^0,w,c
  7693  004E20  6E08               	movwf	(___lmul@multiplier+2)^0,c
  7694  004E22  5027               	movf	(map@in_min+3)^0,w,c
  7695  004E24  5823               	subwfb	(map@x+3)^0,w,c
  7696  004E26  6E09               	movwf	(___lmul@multiplier+3)^0,c
  7697  004E28  502C               	movf	map@out_min^0,w,c
  7698  004E2A  5C30               	subwf	map@out_max^0,w,c
  7699  004E2C  6E0A               	movwf	___lmul@multiplicand^0,c
  7700  004E2E  502D               	movf	(map@out_min+1)^0,w,c
  7701  004E30  5831               	subwfb	(map@out_max+1)^0,w,c
  7702  004E32  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  7703  004E34  502E               	movf	(map@out_min+2)^0,w,c
  7704  004E36  5832               	subwfb	(map@out_max+2)^0,w,c
  7705  004E38  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  7706  004E3A  502F               	movf	(map@out_min+3)^0,w,c
  7707  004E3C  5833               	subwfb	(map@out_max+3)^0,w,c
  7708  004E3E  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  7709  004E40  ECB7  F027         	call	___lmul	;wreg free
  7710  004E44  C006  F012         	movff	?___lmul,___aldiv@dividend
  7711  004E48  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
  7712  004E4C  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
  7713  004E50  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
  7714  004E54  5024               	movf	map@in_min^0,w,c
  7715  004E56  5C28               	subwf	map@in_max^0,w,c
  7716  004E58  6E16               	movwf	___aldiv@divisor^0,c
  7717  004E5A  5025               	movf	(map@in_min+1)^0,w,c
  7718  004E5C  5829               	subwfb	(map@in_max+1)^0,w,c
  7719  004E5E  6E17               	movwf	(___aldiv@divisor+1)^0,c
  7720  004E60  5026               	movf	(map@in_min+2)^0,w,c
  7721  004E62  582A               	subwfb	(map@in_max+2)^0,w,c
  7722  004E64  6E18               	movwf	(___aldiv@divisor+2)^0,c
  7723  004E66  5027               	movf	(map@in_min+3)^0,w,c
  7724  004E68  582B               	subwfb	(map@in_max+3)^0,w,c
  7725  004E6A  6E19               	movwf	(___aldiv@divisor+3)^0,c
  7726  004E6C  EC35  F020         	call	___aldiv	;wreg free
  7727  004E70  502C               	movf	map@out_min^0,w,c
  7728  004E72  2412               	addwf	?___aldiv^0,w,c
  7729  004E74  6E20               	movwf	?_map^0,c
  7730  004E76  502D               	movf	(map@out_min+1)^0,w,c
  7731  004E78  2013               	addwfc	(?___aldiv+1)^0,w,c
  7732  004E7A  6E21               	movwf	(?_map+1)^0,c
  7733  004E7C  502E               	movf	(map@out_min+2)^0,w,c
  7734  004E7E  2014               	addwfc	(?___aldiv+2)^0,w,c
  7735  004E80  6E22               	movwf	(?_map+2)^0,c
  7736  004E82  502F               	movf	(map@out_min+3)^0,w,c
  7737  004E84  2015               	addwfc	(?___aldiv+3)^0,w,c
  7738  004E86  6E23               	movwf	(?_map+3)^0,c
  7739  004E88  0012               	return		;funcret
  7740  004E8A                     __end_of_map:
  7741                           	opt callstack 0
  7742                           
  7743 ;; *************** function ___lmul *****************
  7744 ;; Defined at:
  7745 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;  multiplier      4    5[COMRAM] unsigned long 
  7748 ;;  multiplicand    4    9[COMRAM] unsigned long 
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;  product         4   13[COMRAM] unsigned long 
  7751 ;; Return value:  Size  Location     Type
  7752 ;;                  4    5[COMRAM] unsigned long 
  7753 ;; Registers used:
  7754 ;;		wreg, status,2, status,0
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7760 ;;      Params:         8       0       0       0       0       0       0       0       0
  7761 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7763 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7764 ;;Total ram usage:       12 bytes
  7765 ;; Hardware stack levels used:    1
  7766 ;; Hardware stack levels required when called:    2
  7767 ;; This function calls:
  7768 ;;		Nothing
  7769 ;; This function is called by:
  7770 ;;		_map
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           	psect	text29
  7775  004F6E                     __ptext29:
  7776                           	opt callstack 0
  7777  004F6E                     ___lmul:
  7778                           	opt callstack 24
  7779  004F6E  0E00               	movlw	0
  7780  004F70  6E0E               	movwf	___lmul@product^0,c
  7781  004F72  0E00               	movlw	0
  7782  004F74  6E0F               	movwf	(___lmul@product+1)^0,c
  7783  004F76  0E00               	movlw	0
  7784  004F78  6E10               	movwf	(___lmul@product+2)^0,c
  7785  004F7A  0E00               	movlw	0
  7786  004F7C  6E11               	movwf	(___lmul@product+3)^0,c
  7787  004F7E                     l8167:
  7788  004F7E  A006               	btfss	___lmul@multiplier^0,0,c
  7789  004F80  EFC4  F027         	goto	u8201
  7790  004F84  EFC6  F027         	goto	u8200
  7791  004F88                     u8201:
  7792  004F88  EFCE  F027         	goto	l8171
  7793  004F8C                     u8200:
  7794  004F8C  500A               	movf	___lmul@multiplicand^0,w,c
  7795  004F8E  260E               	addwf	___lmul@product^0,f,c
  7796  004F90  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  7797  004F92  220F               	addwfc	(___lmul@product+1)^0,f,c
  7798  004F94  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  7799  004F96  2210               	addwfc	(___lmul@product+2)^0,f,c
  7800  004F98  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  7801  004F9A  2211               	addwfc	(___lmul@product+3)^0,f,c
  7802  004F9C                     l8171:
  7803  004F9C  90D8               	bcf	status,0,c
  7804  004F9E  360A               	rlcf	___lmul@multiplicand^0,f,c
  7805  004FA0  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7806  004FA2  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7807  004FA4  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7808  004FA6  90D8               	bcf	status,0,c
  7809  004FA8  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  7810  004FAA  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  7811  004FAC  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  7812  004FAE  3206               	rrcf	___lmul@multiplier^0,f,c
  7813  004FB0  5006               	movf	___lmul@multiplier^0,w,c
  7814  004FB2  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  7815  004FB4  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  7816  004FB6  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  7817  004FB8  A4D8               	btfss	status,2,c
  7818  004FBA  EFE1  F027         	goto	u8211
  7819  004FBE  EFE3  F027         	goto	u8210
  7820  004FC2                     u8211:
  7821  004FC2  EFBF  F027         	goto	l8167
  7822  004FC6                     u8210:
  7823  004FC6  C00E  F006         	movff	___lmul@product,?___lmul
  7824  004FCA  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  7825  004FCE  C010  F008         	movff	___lmul@product+2,?___lmul+2
  7826  004FD2  C011  F009         	movff	___lmul@product+3,?___lmul+3
  7827  004FD6  0012               	return		;funcret
  7828  004FD8                     __end_of___lmul:
  7829                           	opt callstack 0
  7830                           
  7831 ;; *************** function ___xxtofl *****************
  7832 ;; Defined at:
  7833 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;  sign            1    wreg     unsigned char 
  7836 ;;  val             4   12[COMRAM] long 
  7837 ;; Auto vars:     Size  Location     Type
  7838 ;;  sign            1   20[COMRAM] unsigned char 
  7839 ;;  arg             4   22[COMRAM] unsigned long 
  7840 ;;  exp             1   21[COMRAM] unsigned char 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  4   12[COMRAM] unsigned char 
  7843 ;; Registers used:
  7844 ;;		wreg, status,2, status,0
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7850 ;;      Params:         4       0       0       0       0       0       0       0       0
  7851 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7852 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7853 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7854 ;;Total ram usage:       14 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    2
  7857 ;; This function calls:
  7858 ;;		Nothing
  7859 ;; This function is called by:
  7860 ;;		_pwmDuty
  7861 ;;		_dameDistancia
  7862 ;;		_PID
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text30
  7867  0035CC                     __ptext30:
  7868                           	opt callstack 0
  7869  0035CC                     ___xxtofl:
  7870                           	opt callstack 25
  7871                           
  7872                           ;incstack = 0
  7873                           ;___xxtofl@sign stored from wreg
  7874  0035CC  6E15               	movwf	___xxtofl@sign^0,c
  7875  0035CE  5015               	movf	___xxtofl@sign^0,w,c
  7876  0035D0  B4D8               	btfsc	status,2,c
  7877  0035D2  EFED  F01A         	goto	u9791
  7878  0035D6  EFEF  F01A         	goto	u9790
  7879  0035DA                     u9791:
  7880  0035DA  EF11  F01B         	goto	l1604
  7881  0035DE                     u9790:
  7882  0035DE  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7883  0035E0  EFF6  F01A         	goto	u9800
  7884  0035E4  EFF4  F01A         	goto	u9801
  7885  0035E8                     u9801:
  7886  0035E8  EF11  F01B         	goto	l1604
  7887  0035EC                     u9800:
  7888  0035EC  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  7889  0035F0  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  7890  0035F4  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  7891  0035F8  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  7892  0035FC  1E11               	comf	??___xxtofl^0,f,c
  7893  0035FE  1E12               	comf	(??___xxtofl+1)^0,f,c
  7894  003600  1E13               	comf	(??___xxtofl+2)^0,f,c
  7895  003602  1E14               	comf	(??___xxtofl+3)^0,f,c
  7896  003604  2A11               	incf	??___xxtofl^0,f,c
  7897  003606  0E00               	movlw	0
  7898  003608  2212               	addwfc	(??___xxtofl+1)^0,f,c
  7899  00360A  2213               	addwfc	(??___xxtofl+2)^0,f,c
  7900  00360C  2214               	addwfc	(??___xxtofl+3)^0,f,c
  7901  00360E  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  7902  003612  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  7903  003616  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  7904  00361A  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  7905  00361E  EF19  F01B         	goto	l9055
  7906  003622                     l1604:
  7907  003622  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  7908  003626  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7909  00362A  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7910  00362E  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7911  003632                     l9055:
  7912  003632  500D               	movf	___xxtofl@val^0,w,c
  7913  003634  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  7914  003636  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  7915  003638  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  7916  00363A  A4D8               	btfss	status,2,c
  7917  00363C  EF22  F01B         	goto	u9811
  7918  003640  EF24  F01B         	goto	u9810
  7919  003644                     u9811:
  7920  003644  EF2E  F01B         	goto	l9061
  7921  003648                     u9810:
  7922  003648  0E00               	movlw	0
  7923  00364A  6E0D               	movwf	?___xxtofl^0,c
  7924  00364C  0E00               	movlw	0
  7925  00364E  6E0E               	movwf	(?___xxtofl+1)^0,c
  7926  003650  0E00               	movlw	0
  7927  003652  6E0F               	movwf	(?___xxtofl+2)^0,c
  7928  003654  0E00               	movlw	0
  7929  003656  6E10               	movwf	(?___xxtofl+3)^0,c
  7930  003658  EFBF  F01B         	goto	l1607
  7931  00365C                     l9061:
  7932  00365C  0E96               	movlw	150
  7933  00365E  6E16               	movwf	___xxtofl@exp^0,c
  7934  003660  EF38  F01B         	goto	l9065
  7935  003664                     l9063:
  7936  003664  2A16               	incf	___xxtofl@exp^0,f,c
  7937  003666  90D8               	bcf	status,0,c
  7938  003668  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7939  00366A  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7940  00366C  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7941  00366E  3217               	rrcf	___xxtofl@arg^0,f,c
  7942  003670                     l9065:
  7943  003670  0E00               	movlw	0
  7944  003672  1417               	andwf	___xxtofl@arg^0,w,c
  7945  003674  6E11               	movwf	??___xxtofl^0,c
  7946  003676  0E00               	movlw	0
  7947  003678  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7948  00367A  6E12               	movwf	(??___xxtofl+1)^0,c
  7949  00367C  0E00               	movlw	0
  7950  00367E  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7951  003680  6E13               	movwf	(??___xxtofl+2)^0,c
  7952  003682  0EFE               	movlw	254
  7953  003684  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7954  003686  6E14               	movwf	(??___xxtofl+3)^0,c
  7955  003688  5011               	movf	??___xxtofl^0,w,c
  7956  00368A  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7957  00368C  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7958  00368E  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7959  003690  A4D8               	btfss	status,2,c
  7960  003692  EF4D  F01B         	goto	u9821
  7961  003696  EF4F  F01B         	goto	u9820
  7962  00369A                     u9821:
  7963  00369A  EF32  F01B         	goto	l9063
  7964  00369E                     u9820:
  7965  00369E  EF5D  F01B         	goto	l1611
  7966  0036A2                     l9067:
  7967  0036A2  2A16               	incf	___xxtofl@exp^0,f,c
  7968  0036A4  0E01               	movlw	1
  7969  0036A6  2617               	addwf	___xxtofl@arg^0,f,c
  7970  0036A8  0E00               	movlw	0
  7971  0036AA  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  7972  0036AC  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  7973  0036AE  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  7974  0036B0  90D8               	bcf	status,0,c
  7975  0036B2  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7976  0036B4  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7977  0036B6  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7978  0036B8  3217               	rrcf	___xxtofl@arg^0,f,c
  7979  0036BA                     l1611:
  7980  0036BA  0E00               	movlw	0
  7981  0036BC  1417               	andwf	___xxtofl@arg^0,w,c
  7982  0036BE  6E11               	movwf	??___xxtofl^0,c
  7983  0036C0  0E00               	movlw	0
  7984  0036C2  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7985  0036C4  6E12               	movwf	(??___xxtofl+1)^0,c
  7986  0036C6  0E00               	movlw	0
  7987  0036C8  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7988  0036CA  6E13               	movwf	(??___xxtofl+2)^0,c
  7989  0036CC  0EFF               	movlw	255
  7990  0036CE  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7991  0036D0  6E14               	movwf	(??___xxtofl+3)^0,c
  7992  0036D2  5011               	movf	??___xxtofl^0,w,c
  7993  0036D4  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7994  0036D6  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7995  0036D8  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7996  0036DA  A4D8               	btfss	status,2,c
  7997  0036DC  EF72  F01B         	goto	u9831
  7998  0036E0  EF74  F01B         	goto	u9830
  7999  0036E4                     u9831:
  8000  0036E4  EF51  F01B         	goto	l9067
  8001  0036E8                     u9830:
  8002  0036E8  EF7C  F01B         	goto	l9075
  8003  0036EC                     l9073:
  8004  0036EC  0616               	decf	___xxtofl@exp^0,f,c
  8005  0036EE  90D8               	bcf	status,0,c
  8006  0036F0  3617               	rlcf	___xxtofl@arg^0,f,c
  8007  0036F2  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  8008  0036F4  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  8009  0036F6  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  8010  0036F8                     l9075:
  8011  0036F8  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  8012  0036FA  EF81  F01B         	goto	u9841
  8013  0036FE  EF83  F01B         	goto	u9840
  8014  003702                     u9841:
  8015  003702  EF8B  F01B         	goto	l1618
  8016  003706                     u9840:
  8017  003706  0E02               	movlw	2
  8018  003708  6016               	cpfslt	___xxtofl@exp^0,c
  8019  00370A  EF89  F01B         	goto	u9851
  8020  00370E  EF8B  F01B         	goto	u9850
  8021  003712                     u9851:
  8022  003712  EF76  F01B         	goto	l9073
  8023  003716                     u9850:
  8024  003716                     l1618:
  8025  003716  B016               	btfsc	___xxtofl@exp^0,0,c
  8026  003718  EF90  F01B         	goto	u9861
  8027  00371C  EF92  F01B         	goto	u9860
  8028  003720                     u9861:
  8029  003720  EF93  F01B         	goto	l9081
  8030  003724                     u9860:
  8031  003724  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  8032  003726                     l9081:
  8033  003726  90D8               	bcf	status,0,c
  8034  003728  3216               	rrcf	___xxtofl@exp^0,f,c
  8035  00372A  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  8036  00372E  6A12               	clrf	(??___xxtofl+1)^0,c
  8037  003730  6A13               	clrf	(??___xxtofl+2)^0,c
  8038  003732  6A14               	clrf	(??___xxtofl+3)^0,c
  8039  003734  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  8040  003738  6A13               	clrf	(??___xxtofl+2)^0,c
  8041  00373A  6A12               	clrf	(??___xxtofl+1)^0,c
  8042  00373C  6A11               	clrf	??___xxtofl^0,c
  8043  00373E  5011               	movf	??___xxtofl^0,w,c
  8044  003740  1217               	iorwf	___xxtofl@arg^0,f,c
  8045  003742  5012               	movf	(??___xxtofl+1)^0,w,c
  8046  003744  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  8047  003746  5013               	movf	(??___xxtofl+2)^0,w,c
  8048  003748  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  8049  00374A  5014               	movf	(??___xxtofl+3)^0,w,c
  8050  00374C  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  8051  00374E  5015               	movf	___xxtofl@sign^0,w,c
  8052  003750  B4D8               	btfsc	status,2,c
  8053  003752  EFAD  F01B         	goto	u9871
  8054  003756  EFAF  F01B         	goto	u9870
  8055  00375A                     u9871:
  8056  00375A  EFB7  F01B         	goto	l9091
  8057  00375E                     u9870:
  8058  00375E  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  8059  003760  EFB6  F01B         	goto	u9880
  8060  003764  EFB4  F01B         	goto	u9881
  8061  003768                     u9881:
  8062  003768  EFB7  F01B         	goto	l9091
  8063  00376C                     u9880:
  8064  00376C  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  8065  00376E                     l9091:
  8066  00376E  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  8067  003772  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  8068  003776  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  8069  00377A  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  8070  00377E                     l1607:
  8071  00377E  0012               	return		;funcret
  8072  003780                     __end_of___xxtofl:
  8073                           	opt callstack 0
  8074                           
  8075 ;; *************** function _sprintf *****************
  8076 ;; Defined at:
  8077 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  s               2  135[BANK0 ] PTR unsigned char 
  8080 ;;		 -> buffer(50), 
  8081 ;;  fmt             2  137[BANK0 ] PTR const unsigned char 
  8082 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
  8083 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  8084 ;;		 -> STR_3(34), 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;  f               6  149[BANK0 ] struct _IO_FILE
  8087 ;;  ap              2  147[BANK0 ] PTR void [1]
  8088 ;;		 -> ?_sprintf(2), 
  8089 ;;  ret             2    0        int 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  2  135[BANK0 ] int 
  8092 ;; Registers used:
  8093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8099 ;;      Params:         0      10       0       0       0       0       0       0       0
  8100 ;;      Locals:         0      10       0       0       0       0       0       0       0
  8101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8102 ;;      Totals:         0      20       0       0       0       0       0       0       0
  8103 ;;Total ram usage:       20 bytes
  8104 ;; Hardware stack levels used:    1
  8105 ;; Hardware stack levels required when called:    9
  8106 ;; This function calls:
  8107 ;;		_vfprintf
  8108 ;; This function is called by:
  8109 ;;		_visualizarPasosRealizados
  8110 ;;		_decidirDireccion
  8111 ;;		_probarMapeoDireccionCruces
  8112 ;;		_probarSensores
  8113 ;;		_probarUltrasonico
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text31
  8118  0052B6                     __ptext31:
  8119                           	opt callstack 0
  8120  0052B6                     _sprintf:
  8121                           	opt callstack 20
  8122  0052B6  0EEB               	movlw	low (?_sprintf+4)
  8123  0052B8  0100               	movlb	0	; () banked
  8124  0052BA  6FF3               	movwf	sprintf@ap& (0+255),b
  8125  0052BC  0E00               	movlw	high (?_sprintf+4)
  8126  0052BE  6FF4               	movwf	(sprintf@ap+1)& (0+255),b
  8127  0052C0  C0E7  F0F5         	movff	sprintf@s,sprintf@f
  8128  0052C4  C0E8  F0F6         	movff	sprintf@s+1,sprintf@f+1
  8129  0052C8                     
  8130                           ; BSR set to: 0
  8131  0052C8  0E00               	movlw	0
  8132  0052CA  6FF8               	movwf	(sprintf@f+3)& (0+255),b
  8133  0052CC  0E00               	movlw	0
  8134  0052CE  6FF7               	movwf	(sprintf@f+2)& (0+255),b
  8135  0052D0                     
  8136                           ; BSR set to: 0
  8137  0052D0  0E00               	movlw	0
  8138  0052D2  6FFA               	movwf	(sprintf@f+5)& (0+255),b
  8139  0052D4  0E00               	movlw	0
  8140  0052D6  6FF9               	movwf	(sprintf@f+4)& (0+255),b
  8141  0052D8                     
  8142                           ; BSR set to: 0
  8143  0052D8  0EF5               	movlw	low sprintf@f
  8144  0052DA  6FDF               	movwf	vfprintf@fp& (0+255),b
  8145  0052DC  0E00               	movlw	high sprintf@f
  8146  0052DE  6FE0               	movwf	(vfprintf@fp+1)& (0+255),b
  8147  0052E0  C0E9  F0E1         	movff	sprintf@fmt,vfprintf@fmt
  8148  0052E4  C0EA  F0E2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8149  0052E8  0EF3               	movlw	low sprintf@ap
  8150  0052EA  6FE3               	movwf	vfprintf@ap& (0+255),b
  8151  0052EC  0E00               	movlw	high sprintf@ap
  8152  0052EE  6FE4               	movwf	(vfprintf@ap+1)& (0+255),b
  8153  0052F0  ECEC  F027         	call	_vfprintf	;wreg free
  8154  0052F4  0100               	movlb	0	; () banked
  8155  0052F6  51F7               	movf	(sprintf@f+2)& (0+255),w,b
  8156  0052F8  25E7               	addwf	sprintf@s& (0+255),w,b
  8157  0052FA  6ED9               	movwf	fsr2l,c
  8158  0052FC  51F8               	movf	(sprintf@f+3)& (0+255),w,b
  8159  0052FE  21E8               	addwfc	(sprintf@s+1)& (0+255),w,b
  8160  005300  6EDA               	movwf	fsr2h,c
  8161  005302  0E00               	movlw	0
  8162  005304  6EDF               	movwf	indf2,c
  8163  005306                     
  8164                           ; BSR set to: 0
  8165  005306  0012               	return		;funcret
  8166  005308                     __end_of_sprintf:
  8167                           	opt callstack 0
  8168                           
  8169 ;; *************** function _vfprintf *****************
  8170 ;; Defined at:
  8171 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;  fp              2  127[BANK0 ] PTR struct _IO_FILE
  8174 ;;		 -> sprintf@f(6), 
  8175 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  8176 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
  8177 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  8178 ;;		 -> STR_3(34), 
  8179 ;;  ap              2  131[BANK0 ] PTR PTR void 
  8180 ;;		 -> sprintf@ap(2), 
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;  cfmt            2  133[BANK0 ] PTR unsigned char 
  8183 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
  8184 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  8185 ;;		 -> STR_3(34), 
  8186 ;; Return value:  Size  Location     Type
  8187 ;;                  2  127[BANK0 ] int 
  8188 ;; Registers used:
  8189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8195 ;;      Params:         0       6       0       0       0       0       0       0       0
  8196 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8198 ;;      Totals:         0       8       0       0       0       0       0       0       0
  8199 ;;Total ram usage:        8 bytes
  8200 ;; Hardware stack levels used:    1
  8201 ;; Hardware stack levels required when called:    8
  8202 ;; This function calls:
  8203 ;;		_vfpfcnvrt
  8204 ;; This function is called by:
  8205 ;;		_sprintf
  8206 ;; This function uses a non-reentrant model
  8207 ;;
  8208                           
  8209                           	psect	text32
  8210  004FD8                     __ptext32:
  8211                           	opt callstack 0
  8212  004FD8                     _vfprintf:
  8213                           	opt callstack 20
  8214  004FD8                     
  8215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8216  004FD8  C0E1  F0E5         	movff	vfprintf@fmt,vfprintf@cfmt
  8217  004FDC  C0E2  F0E6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8218  004FE0                     
  8219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8220  004FE0  0E00               	movlw	0
  8221  004FE2  0101               	movlb	1	; () banked
  8222  004FE4  6F31               	movwf	(_nout+1)& (0+255),b
  8223  004FE6  0E00               	movlw	0
  8224  004FE8  6F30               	movwf	_nout& (0+255),b
  8225                           
  8226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8227  004FEA  EF0E  F028         	goto	l9795
  8228  004FEE                     l9793:
  8229                           
  8230                           ; BSR set to: 1
  8231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8232  004FEE  C0DF  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  8233  004FF2  C0E0  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8234  004FF6  0EE5               	movlw	low vfprintf@cfmt
  8235  004FF8  0100               	movlb	0	; () banked
  8236  004FFA  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  8237  004FFC  0E00               	movlw	high vfprintf@cfmt
  8238  004FFE  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8239  005000  C0E3  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  8240  005004  C0E4  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8241  005008  EC88  F009         	call	_vfpfcnvrt	;wreg free
  8242  00500C  0100               	movlb	0	; () banked
  8243  00500E  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  8244  005010  0101               	movlb	1	; () banked
  8245  005012  2730               	addwf	_nout& (0+255),f,b
  8246  005014  0100               	movlb	0	; () banked
  8247  005016  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8248  005018  0101               	movlb	1	; () banked
  8249  00501A  2331               	addwfc	(_nout+1)& (0+255),f,b
  8250  00501C                     l9795:
  8251                           
  8252                           ; BSR set to: 1
  8253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8254  00501C  C0E5  FFF6         	movff	vfprintf@cfmt,tblptrl
  8255  005020  C0E6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8256  005024                     	if	0	;tblptru may be non-zero
  8257  005024                     	endif
  8258  005024                     	if	0	;tblptru may be non-zero
  8259  005024                     	endif
  8260  005024  0008               	tblrd		*
  8261  005026  50F5               	movf	tablat,w,c
  8262  005028  0900               	iorlw	0
  8263  00502A  A4D8               	btfss	status,2,c
  8264  00502C  EF1A  F028         	goto	u11051
  8265  005030  EF1C  F028         	goto	u11050
  8266  005034                     u11051:
  8267  005034  EFF7  F027         	goto	l9793
  8268  005038                     u11050:
  8269  005038                     
  8270                           ; BSR set to: 1
  8271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8272  005038  C130  F0DF         	movff	_nout,?_vfprintf
  8273  00503C  C131  F0E0         	movff	_nout+1,?_vfprintf+1
  8274  005040                     
  8275                           ; BSR set to: 1
  8276  005040  0012               	return		;funcret
  8277  005042                     __end_of_vfprintf:
  8278                           	opt callstack 0
  8279                           
  8280 ;; *************** function _vfpfcnvrt *****************
  8281 ;; Defined at:
  8282 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  8285 ;;		 -> sprintf@f(6), 
  8286 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  8287 ;;		 -> vfprintf@cfmt(2), 
  8288 ;;  ap              2  101[BANK0 ] PTR PTR void 
  8289 ;;		 -> sprintf@ap(2), 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;  ll              8  107[BANK0 ] long long 
  8292 ;;  llu             8    0        unsigned long long 
  8293 ;;  f               4  119[BANK0 ] unsigned long long 
  8294 ;;  ct              3  123[BANK0 ] unsigned char [3]
  8295 ;;  vp              3    0        PTR void 
  8296 ;;  cp              3    0        PTR unsigned char 
  8297 ;;  i               2    0        int 
  8298 ;;  done            2    0        int 
  8299 ;;  c               1  126[BANK0 ] unsigned char 
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  2   97[BANK0 ] int 
  8302 ;; Registers used:
  8303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8309 ;;      Params:         0       6       0       0       0       0       0       0       0
  8310 ;;      Locals:         0      20       0       0       0       0       0       0       0
  8311 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8312 ;;      Totals:         0      30       0       0       0       0       0       0       0
  8313 ;;Total ram usage:       30 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; Hardware stack levels required when called:    7
  8316 ;; This function calls:
  8317 ;;		_atoi
  8318 ;;		_ctoa
  8319 ;;		_dtoa
  8320 ;;		_efgtoa
  8321 ;;		_fputc
  8322 ;;		_isdigit
  8323 ;;		_isupper
  8324 ;;		_strncmp
  8325 ;;		_tolower
  8326 ;; This function is called by:
  8327 ;;		_vfprintf
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text33
  8332  001310                     __ptext33:
  8333                           	opt callstack 0
  8334  001310                     _vfpfcnvrt:
  8335                           	opt callstack 20
  8336  001310                     
  8337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8338  001310  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8339  001314  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8340  001318  CFDE FFF6          	movff	postinc2,tblptrl
  8341  00131C  CFDD FFF7          	movff	postdec2,tblptrh
  8342  001320                     	if	0	;tblptru may be non-zero
  8343  001320                     	endif
  8344  001320                     	if	0	;tblptru may be non-zero
  8345  001320                     	endif
  8346  001320  0008               	tblrd		*
  8347  001322  50F5               	movf	tablat,w,c
  8348  001324  0A25               	xorlw	37
  8349  001326  A4D8               	btfss	status,2,c
  8350  001328  EF98  F009         	goto	u10751
  8351  00132C  EF9A  F009         	goto	u10750
  8352  001330                     u10751:
  8353  001330  EF40  F00C         	goto	l9681
  8354  001334                     u10750:
  8355  001334                     
  8356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8357  001334  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8358  001338  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8359  00133C  2ADE               	incf	postinc2,f,c
  8360  00133E  0E00               	movlw	0
  8361  001340  22DD               	addwfc	postdec2,f,c
  8362  001342                     
  8363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8364  001342  0E00               	movlw	0
  8365  001344  0101               	movlb	1	; () banked
  8366  001346  6F33               	movwf	(_width+1)& (0+255),b
  8367  001348  0E00               	movlw	0
  8368  00134A  6F32               	movwf	_width& (0+255),b
  8369  00134C  C132  F055         	movff	_width,_flags
  8370  001350  C133  F056         	movff	_width+1,_flags+1
  8371  001354                     
  8372                           ; BSR set to: 1
  8373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8374  001354  6934               	setf	_prec& (0+255),b
  8375  001356  6935               	setf	(_prec+1)& (0+255),b
  8376  001358                     
  8377                           ; BSR set to: 1
  8378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  8379  001358  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8380  00135C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8381  001360  CFDE FFF6          	movff	postinc2,tblptrl
  8382  001364  CFDD FFF7          	movff	postdec2,tblptrh
  8383  001368                     	if	0	;tblptru may be non-zero
  8384  001368                     	endif
  8385  001368                     	if	0	;tblptru may be non-zero
  8386  001368                     	endif
  8387  001368  0008               	tblrd		*
  8388  00136A  50F5               	movf	tablat,w,c
  8389  00136C  0A2E               	xorlw	46
  8390  00136E  A4D8               	btfss	status,2,c
  8391  001370  EFBC  F009         	goto	u10761
  8392  001374  EFBE  F009         	goto	u10760
  8393  001378                     u10761:
  8394  001378  EF3C  F00A         	goto	l9609
  8395  00137C                     u10760:
  8396  00137C                     
  8397                           ; BSR set to: 1
  8398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  8399  00137C  0E00               	movlw	0
  8400  00137E  6F35               	movwf	(_prec+1)& (0+255),b
  8401  001380  0E00               	movlw	0
  8402  001382  6F34               	movwf	_prec& (0+255),b
  8403  001384                     
  8404                           ; BSR set to: 1
  8405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  8406  001384  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8407  001388  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8408  00138C  2ADE               	incf	postinc2,f,c
  8409  00138E  0E00               	movlw	0
  8410  001390  22DD               	addwfc	postdec2,f,c
  8411  001392                     
  8412                           ; BSR set to: 1
  8413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  8414  001392  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8415  001396  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8416  00139A  CFDE FFF6          	movff	postinc2,tblptrl
  8417  00139E  CFDD FFF7          	movff	postdec2,tblptrh
  8418  0013A2                     	if	0	;tblptru may be non-zero
  8419  0013A2                     	endif
  8420  0013A2                     	if	0	;tblptru may be non-zero
  8421  0013A2                     	endif
  8422  0013A2  0008               	tblrd		*
  8423  0013A4  50F5               	movf	tablat,w,c
  8424  0013A6  0A2A               	xorlw	42
  8425  0013A8  A4D8               	btfss	status,2,c
  8426  0013AA  EFD9  F009         	goto	u10771
  8427  0013AE  EFDB  F009         	goto	u10770
  8428  0013B2                     u10771:
  8429  0013B2  EFF8  F009         	goto	l9599
  8430  0013B6                     u10770:
  8431  0013B6                     
  8432                           ; BSR set to: 1
  8433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  8434  0013B6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8435  0013BA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8436  0013BE  2ADE               	incf	postinc2,f,c
  8437  0013C0  0E00               	movlw	0
  8438  0013C2  22DD               	addwfc	postdec2,f,c
  8439                           
  8440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  8441  0013C4  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8442  0013C8  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8443  0013CC  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8444  0013D0  0E02               	movlw	2
  8445  0013D2  26DE               	addwf	postinc2,f,c
  8446  0013D4  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8447  0013D8  0E00               	movlw	0
  8448  0013DA  22DD               	addwfc	postdec2,f,c
  8449  0013DC  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8450  0013E0  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8451  0013E4  CFDE F134          	movff	postinc2,_prec
  8452  0013E8  CFDD F135          	movff	postdec2,_prec+1
  8453                           
  8454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  8455  0013EC  EF3C  F00A         	goto	l9609
  8456  0013F0                     l9599:
  8457                           
  8458                           ; BSR set to: 1
  8459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  8460  0013F0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8461  0013F4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8462  0013F8  CFDE F00D          	movff	postinc2,atoi@s
  8463  0013FC  CFDD F00E          	movff	postdec2,atoi@s+1
  8464  001400  ECC0  F01B         	call	_atoi	;wreg free
  8465  001404  C00D  F134         	movff	?_atoi,_prec
  8466  001408  C00E  F135         	movff	?_atoi+1,_prec+1
  8467                           
  8468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8469  00140C  EF0F  F00A         	goto	l9603
  8470  001410                     l9601:
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  8474  001410  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8475  001414  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8476  001418  2ADE               	incf	postinc2,f,c
  8477  00141A  0E00               	movlw	0
  8478  00141C  22DD               	addwfc	postdec2,f,c
  8479  00141E                     l9603:
  8480  00141E  0ED0               	movlw	208
  8481  001420  0100               	movlb	0	; () banked
  8482  001422  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  8483  001424  0EFF               	movlw	255
  8484  001426  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8485  001428  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8486  00142C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8487  001430  CFDE FFF6          	movff	postinc2,tblptrl
  8488  001434  CFDD FFF7          	movff	postdec2,tblptrh
  8489  001438                     	if	0	;tblptru may be non-zero
  8490  001438                     	endif
  8491  001438                     	if	0	;tblptru may be non-zero
  8492  001438                     	endif
  8493  001438  0008               	tblrd		*
  8494  00143A  50F5               	movf	tablat,w,c
  8495  00143C  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8496  00143E  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8497  001440  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  8498  001442  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8499  001444  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8500  001446  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8501  001448  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8502  00144A  E10A               	bnz	u10780
  8503  00144C  0E0A               	movlw	10
  8504  00144E  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8505  001450  A0D8               	btfss	status,0,c
  8506  001452  EF2D  F00A         	goto	u10781
  8507  001456  EF30  F00A         	goto	u10780
  8508  00145A                     u10781:
  8509  00145A  0E01               	movlw	1
  8510  00145C  EF31  F00A         	goto	u10790
  8511  001460                     u10780:
  8512  001460  0E00               	movlw	0
  8513  001462                     u10790:
  8514  001462  6FD3               	movwf	_vfpfcnvrt$948& (0+255),b
  8515  001464  6BD4               	clrf	(_vfpfcnvrt$948+1)& (0+255),b
  8516  001466                     
  8517                           ; BSR set to: 0
  8518  001466  51D3               	movf	_vfpfcnvrt$948& (0+255),w,b
  8519  001468  11D4               	iorwf	(_vfpfcnvrt$948+1)& (0+255),w,b
  8520  00146A  A4D8               	btfss	status,2,c
  8521  00146C  EF3A  F00A         	goto	u10801
  8522  001470  EF3C  F00A         	goto	u10800
  8523  001474                     u10801:
  8524  001474  EF08  F00A         	goto	l9601
  8525  001478                     u10800:
  8526  001478                     l9609:
  8527                           
  8528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  8529  001478  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8530  00147C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8531  001480  CFDE FFF6          	movff	postinc2,tblptrl
  8532  001484  CFDD FFF7          	movff	postdec2,tblptrh
  8533  001488                     	if	0	;tblptru may be non-zero
  8534  001488                     	endif
  8535  001488                     	if	0	;tblptru may be non-zero
  8536  001488                     	endif
  8537  001488  0008               	tblrd		*
  8538  00148A  50F5               	movf	tablat,w,c
  8539  00148C  6E0C               	movwf	tolower@c^0,c
  8540  00148E  6A0D               	clrf	(tolower@c+1)^0,c
  8541  001490  EC21  F028         	call	_tolower	;wreg free
  8542  001494  500C               	movf	?_tolower^0,w,c
  8543  001496  0100               	movlb	0	; () banked
  8544  001498  6FDB               	movwf	vfpfcnvrt@ct& (0+255),b
  8545  00149A                     
  8546                           ; BSR set to: 0
  8547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  8548  00149A  51DB               	movf	vfpfcnvrt@ct& (0+255),w,b
  8549  00149C  B4D8               	btfsc	status,2,c
  8550  00149E  EF53  F00A         	goto	u10811
  8551  0014A2  EF55  F00A         	goto	u10810
  8552  0014A6                     u10811:
  8553  0014A6  EF8F  F00A         	goto	l9619
  8554  0014AA                     u10810:
  8555  0014AA                     
  8556                           ; BSR set to: 0
  8557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  8558  0014AA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8559  0014AE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8560  0014B2  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8561  0014B6  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8562  0014BA  0E01               	movlw	1
  8563  0014BC  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8564  0014BE  0E00               	movlw	0
  8565  0014C0  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8566  0014C2  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8567  0014C6  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8568  0014CA                     	if	0	;tblptru may be non-zero
  8569  0014CA                     	endif
  8570  0014CA                     	if	0	;tblptru may be non-zero
  8571  0014CA                     	endif
  8572  0014CA  0008               	tblrd		*
  8573  0014CC  50F5               	movf	tablat,w,c
  8574  0014CE  6E0C               	movwf	tolower@c^0,c
  8575  0014D0  6A0D               	clrf	(tolower@c+1)^0,c
  8576  0014D2  EC21  F028         	call	_tolower	;wreg free
  8577  0014D6  500C               	movf	?_tolower^0,w,c
  8578  0014D8  0100               	movlb	0	; () banked
  8579  0014DA  6FDC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  8580  0014DC                     
  8581                           ; BSR set to: 0
  8582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  8583  0014DC  51DC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  8584  0014DE  B4D8               	btfsc	status,2,c
  8585  0014E0  EF74  F00A         	goto	u10821
  8586  0014E4  EF76  F00A         	goto	u10820
  8587  0014E8                     u10821:
  8588  0014E8  EF8F  F00A         	goto	l9619
  8589  0014EC                     u10820:
  8590  0014EC                     
  8591                           ; BSR set to: 0
  8592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  8593  0014EC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8594  0014F0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8595  0014F4  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8596  0014F8  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8597  0014FC  0E02               	movlw	2
  8598  0014FE  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8599  001500  0E00               	movlw	0
  8600  001502  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8601  001504  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8602  001508  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8603  00150C                     	if	0	;tblptru may be non-zero
  8604  00150C                     	endif
  8605  00150C                     	if	0	;tblptru may be non-zero
  8606  00150C                     	endif
  8607  00150C  0008               	tblrd		*
  8608  00150E  50F5               	movf	tablat,w,c
  8609  001510  6E0C               	movwf	tolower@c^0,c
  8610  001512  6A0D               	clrf	(tolower@c+1)^0,c
  8611  001514  EC21  F028         	call	_tolower	;wreg free
  8612  001518  500C               	movf	?_tolower^0,w,c
  8613  00151A  0100               	movlb	0	; () banked
  8614  00151C  6FDD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  8615  00151E                     l9619:
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8619  00151E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8620  001522  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8621  001526  CFDE FFF6          	movff	postinc2,tblptrl
  8622  00152A  CFDD FFF7          	movff	postdec2,tblptrh
  8623  00152E                     	if	0	;tblptru may be non-zero
  8624  00152E                     	endif
  8625  00152E                     	if	0	;tblptru may be non-zero
  8626  00152E                     	endif
  8627  00152E  0008               	tblrd		*
  8628  001530  50F5               	movf	tablat,w,c
  8629  001532  0A63               	xorlw	99
  8630  001534  A4D8               	btfss	status,2,c
  8631  001536  EF9F  F00A         	goto	u10831
  8632  00153A  EFA1  F00A         	goto	u10830
  8633  00153E                     u10831:
  8634  00153E  EFC8  F00A         	goto	l9627
  8635  001542                     u10830:
  8636  001542                     
  8637                           ; BSR set to: 0
  8638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  8639  001542  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8640  001546  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8641  00154A  2ADE               	incf	postinc2,f,c
  8642  00154C  0E00               	movlw	0
  8643  00154E  22DD               	addwfc	postdec2,f,c
  8644                           
  8645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8646  001550  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8647  001554  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8648  001558  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8649  00155C  0E02               	movlw	2
  8650  00155E  26DE               	addwf	postinc2,f,c
  8651  001560  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8652  001564  0E00               	movlw	0
  8653  001566  22DD               	addwfc	postdec2,f,c
  8654  001568  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8655  00156C  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8656  001570  50DF               	movf	indf2,w,c
  8657  001572  6FDE               	movwf	vfpfcnvrt@c& (0+255),b
  8658  001574                     
  8659                           ; BSR set to: 0
  8660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  8661  001574  C0C1  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  8662  001578  C0C2  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8663  00157C  C0DE  F023         	movff	vfpfcnvrt@c,ctoa@c
  8664  001580  ECAE  F028         	call	_ctoa	;wreg free
  8665  001584  C021  F0C1         	movff	?_ctoa,?_vfpfcnvrt
  8666  001588  C022  F0C2         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8667  00158C  EF5B  F00C         	goto	l928
  8668  001590                     l9627:
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8672  001590  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8673  001594  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8674  001598  CFDE FFF6          	movff	postinc2,tblptrl
  8675  00159C  CFDD FFF7          	movff	postdec2,tblptrh
  8676  0015A0                     	if	0	;tblptru may be non-zero
  8677  0015A0                     	endif
  8678  0015A0                     	if	0	;tblptru may be non-zero
  8679  0015A0                     	endif
  8680  0015A0  0008               	tblrd		*
  8681  0015A2  50F5               	movf	tablat,w,c
  8682  0015A4  0A64               	xorlw	100
  8683  0015A6  B4D8               	btfsc	status,2,c
  8684  0015A8  EFD8  F00A         	goto	u10841
  8685  0015AC  EFDA  F00A         	goto	u10840
  8686  0015B0                     u10841:
  8687  0015B0  EFEC  F00A         	goto	l9631
  8688  0015B4                     u10840:
  8689  0015B4                     
  8690                           ; BSR set to: 0
  8691  0015B4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8692  0015B8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8693  0015BC  CFDE FFF6          	movff	postinc2,tblptrl
  8694  0015C0  CFDD FFF7          	movff	postdec2,tblptrh
  8695  0015C4                     	if	0	;tblptru may be non-zero
  8696  0015C4                     	endif
  8697  0015C4                     	if	0	;tblptru may be non-zero
  8698  0015C4                     	endif
  8699  0015C4  0008               	tblrd		*
  8700  0015C6  50F5               	movf	tablat,w,c
  8701  0015C8  0A69               	xorlw	105
  8702  0015CA  A4D8               	btfss	status,2,c
  8703  0015CC  EFEA  F00A         	goto	u10851
  8704  0015D0  EFEC  F00A         	goto	u10850
  8705  0015D4                     u10851:
  8706  0015D4  EF2C  F00B         	goto	l9637
  8707  0015D8                     u10850:
  8708  0015D8                     l9631:
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8712  0015D8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8713  0015DC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8714  0015E0  2ADE               	incf	postinc2,f,c
  8715  0015E2  0E00               	movlw	0
  8716  0015E4  22DD               	addwfc	postdec2,f,c
  8717                           
  8718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8719  0015E6  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8720  0015EA  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8721  0015EE  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8722  0015F2  0E02               	movlw	2
  8723  0015F4  26DE               	addwf	postinc2,f,c
  8724  0015F6  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8725  0015FA  0E00               	movlw	0
  8726  0015FC  22DD               	addwfc	postdec2,f,c
  8727  0015FE  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8728  001602  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8729  001606  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  8730  00160A  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  8731  00160E  0E00               	movlw	0
  8732  001610  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8733  001612  0EFF               	movlw	-1
  8734  001614  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8735  001616  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8736  001618  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8737  00161A  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8738  00161C  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8739  00161E  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8740  001620                     
  8741                           ; BSR set to: 0
  8742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8743  001620  C0C1  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  8744  001624  C0C2  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8745  001628  C0CB  F023         	movff	vfpfcnvrt@ll,dtoa@d
  8746  00162C  C0CC  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8747  001630  C0CD  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8748  001634  C0CE  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8749  001638  C0CF  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8750  00163C  C0D0  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8751  001640  C0D1  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8752  001644  C0D2  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8753  001648  EC65  F016         	call	_dtoa	;wreg free
  8754  00164C  C021  F0C1         	movff	?_dtoa,?_vfpfcnvrt
  8755  001650  C022  F0C2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8756  001654  EF5B  F00C         	goto	l928
  8757  001658                     l9637:
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  8761  001658  0E66               	movlw	102
  8762  00165A  19DB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  8763  00165C  A4D8               	btfss	status,2,c
  8764  00165E  EF33  F00B         	goto	u10861
  8765  001662  EF35  F00B         	goto	u10860
  8766  001666                     u10861:
  8767  001666  EF75  F00B         	goto	l9649
  8768  00166A                     u10860:
  8769  00166A                     
  8770                           ; BSR set to: 0
  8771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  8772  00166A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8773  00166E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8774  001672  CFDE FFF6          	movff	postinc2,tblptrl
  8775  001676  CFDD FFF7          	movff	postdec2,tblptrh
  8776  00167A                     	if	0	;tblptru may be non-zero
  8777  00167A                     	endif
  8778  00167A                     	if	0	;tblptru may be non-zero
  8779  00167A                     	endif
  8780  00167A  0008               	tblrd		*
  8781  00167C  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  8782  001680                     
  8783                           ; BSR set to: 0
  8784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  8785  001680  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8786  001684  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8787  001688  2ADE               	incf	postinc2,f,c
  8788  00168A  0E00               	movlw	0
  8789  00168C  22DD               	addwfc	postdec2,f,c
  8790  00168E                     
  8791                           ; BSR set to: 0
  8792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8793  00168E  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8794  001692  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8795  001696  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8796  00169A  0E04               	movlw	4
  8797  00169C  26DE               	addwf	postinc2,f,c
  8798  00169E  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8799  0016A2  0E00               	movlw	0
  8800  0016A4  22DD               	addwfc	postdec2,f,c
  8801  0016A6  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8802  0016AA  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8803  0016AE  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8804  0016B2  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8805  0016B6  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8806  0016BA  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8807  0016BE                     l9645:
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  8811  0016BE  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  8812  0016C2  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8813  0016C6  C0D7  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  8814  0016CA  C0D8  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  8815  0016CE  C0D9  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  8816  0016D2  C0DA  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  8817  0016D6  C0DE  F083         	movff	vfpfcnvrt@c,efgtoa@c
  8818  0016DA  EC09  F000         	call	_efgtoa	;wreg free
  8819  0016DE  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  8820  0016E2  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  8821  0016E6  EF5B  F00C         	goto	l928
  8822  0016EA                     l9649:
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8826  0016EA  0EDB               	movlw	low vfpfcnvrt@ct
  8827  0016EC  6E06               	movwf	strncmp@_l^0,c
  8828  0016EE  0E00               	movlw	high vfpfcnvrt@ct
  8829  0016F0  6E07               	movwf	(strncmp@_l+1)^0,c
  8830  0016F2  0EFB               	movlw	low STR_31
  8831  0016F4  6E08               	movwf	strncmp@_r^0,c
  8832  0016F6  0E7F               	movlw	high STR_31
  8833  0016F8  6E09               	movwf	(strncmp@_r+1)^0,c
  8834  0016FA  0E00               	movlw	0
  8835  0016FC  6E0B               	movwf	(strncmp@n+1)^0,c
  8836  0016FE  0E02               	movlw	2
  8837  001700  6E0A               	movwf	strncmp@n^0,c
  8838  001702  EC41  F023         	call	_strncmp	;wreg free
  8839  001706  5006               	movf	?_strncmp^0,w,c
  8840  001708  1007               	iorwf	(?_strncmp+1)^0,w,c
  8841  00170A  A4D8               	btfss	status,2,c
  8842  00170C  EF8A  F00B         	goto	u10871
  8843  001710  EF8C  F00B         	goto	u10870
  8844  001714                     u10871:
  8845  001714  EF08  F00C         	goto	l9665
  8846  001718                     u10870:
  8847  001718                     
  8848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8849  001718  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8850  00171C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8851  001720  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8852  001724  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8853  001728  0E01               	movlw	1
  8854  00172A  0100               	movlb	0	; () banked
  8855  00172C  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8856  00172E  0E00               	movlw	0
  8857  001730  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8858  001732  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8859  001736  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8860  00173A                     	if	0	;tblptru may be non-zero
  8861  00173A                     	endif
  8862  00173A                     	if	0	;tblptru may be non-zero
  8863  00173A                     	endif
  8864  00173A  0008               	tblrd		*
  8865  00173C  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  8866  001740  0EBF               	movlw	191
  8867  001742  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  8868  001744  0EFF               	movlw	255
  8869  001746  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8870  001748  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8871  00174C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8872  001750  CFDE FFF6          	movff	postinc2,tblptrl
  8873  001754  CFDD FFF7          	movff	postdec2,tblptrh
  8874  001758                     	if	0	;tblptru may be non-zero
  8875  001758                     	endif
  8876  001758                     	if	0	;tblptru may be non-zero
  8877  001758                     	endif
  8878  001758  0008               	tblrd		*
  8879  00175A  50F5               	movf	tablat,w,c
  8880  00175C  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8881  00175E  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8882  001760  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  8883  001762  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8884  001764  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8885  001766  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8886  001768  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8887  00176A  E10A               	bnz	u10880
  8888  00176C  0E1A               	movlw	26
  8889  00176E  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8890  001770  A0D8               	btfss	status,0,c
  8891  001772  EFBD  F00B         	goto	u10881
  8892  001776  EFC0  F00B         	goto	u10880
  8893  00177A                     u10881:
  8894  00177A  0E01               	movlw	1
  8895  00177C  EFC1  F00B         	goto	u10890
  8896  001780                     u10880:
  8897  001780  0E00               	movlw	0
  8898  001782                     u10890:
  8899  001782  6FD5               	movwf	_vfpfcnvrt$954& (0+255),b
  8900  001784  6BD6               	clrf	(_vfpfcnvrt$954+1)& (0+255),b
  8901  001786                     
  8902                           ; BSR set to: 0
  8903  001786  51D5               	movf	_vfpfcnvrt$954& (0+255),w,b
  8904  001788  11D6               	iorwf	(_vfpfcnvrt$954+1)& (0+255),w,b
  8905  00178A  B4D8               	btfsc	status,2,c
  8906  00178C  EFCA  F00B         	goto	u10901
  8907  001790  EFCC  F00B         	goto	u10900
  8908  001794                     u10901:
  8909  001794  EFE6  F00B         	goto	l9659
  8910  001798                     u10900:
  8911  001798                     
  8912                           ; BSR set to: 0
  8913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8914  001798  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8915  00179C  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8916  0017A0  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8917  0017A4  0E04               	movlw	4
  8918  0017A6  26DE               	addwf	postinc2,f,c
  8919  0017A8  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8920  0017AC  0E00               	movlw	0
  8921  0017AE  22DD               	addwfc	postdec2,f,c
  8922  0017B0  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8923  0017B4  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8924  0017B8  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8925  0017BC  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8926  0017C0  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8927  0017C4  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8928                           
  8929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  8930  0017C8  EFFE  F00B         	goto	l939
  8931  0017CC                     l9659:
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8935  0017CC  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8936  0017D0  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8937  0017D4  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8938  0017D8  0E04               	movlw	4
  8939  0017DA  26DE               	addwf	postinc2,f,c
  8940  0017DC  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8941  0017E0  0E00               	movlw	0
  8942  0017E2  22DD               	addwfc	postdec2,f,c
  8943  0017E4  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8944  0017E8  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8945  0017EC  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8946  0017F0  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8947  0017F4  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8948  0017F8  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8949  0017FC                     l939:
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  8953  0017FC  0E02               	movlw	2
  8954  0017FE  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8955  001802  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8956  001806  26DE               	addwf	postinc2,f,c
  8957  001808  0E00               	movlw	0
  8958  00180A  22DD               	addwfc	postdec2,f,c
  8959  00180C  EF5F  F00B         	goto	l9645
  8960  001810                     l9665:
  8961                           
  8962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8963  001810  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8964  001814  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8965  001818  CFDE FFF6          	movff	postinc2,tblptrl
  8966  00181C  CFDD FFF7          	movff	postdec2,tblptrh
  8967  001820                     	if	0	;tblptru may be non-zero
  8968  001820                     	endif
  8969  001820                     	if	0	;tblptru may be non-zero
  8970  001820                     	endif
  8971  001820  0008               	tblrd		*
  8972  001822  50F5               	movf	tablat,w,c
  8973  001824  0A25               	xorlw	37
  8974  001826  A4D8               	btfss	status,2,c
  8975  001828  EF18  F00C         	goto	u10911
  8976  00182C  EF1A  F00C         	goto	u10910
  8977  001830                     u10911:
  8978  001830  EF32  F00C         	goto	l9675
  8979  001834                     u10910:
  8980  001834                     
  8981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8982  001834  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8983  001838  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8984  00183C  2ADE               	incf	postinc2,f,c
  8985  00183E  0E00               	movlw	0
  8986  001840  22DD               	addwfc	postdec2,f,c
  8987  001842                     
  8988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8989  001842  0E00               	movlw	0
  8990  001844  6E07               	movwf	(fputc@c+1)^0,c
  8991  001846  0E25               	movlw	37
  8992  001848  6E06               	movwf	fputc@c^0,c
  8993  00184A  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  8994  00184E  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8995  001852  ECAC  F023         	call	_fputc	;wreg free
  8996  001856                     l9671:
  8997                           
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8999  001856  0E00               	movlw	0
  9000  001858  0100               	movlb	0	; () banked
  9001  00185A  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9002  00185C  0E01               	movlw	1
  9003  00185E  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  9004  001860  EF5B  F00C         	goto	l928
  9005  001864                     l9675:
  9006                           
  9007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9008  001864  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9009  001868  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9010  00186C  2ADE               	incf	postinc2,f,c
  9011  00186E  0E00               	movlw	0
  9012  001870  22DD               	addwfc	postdec2,f,c
  9013  001872                     
  9014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9015  001872  0E00               	movlw	0
  9016  001874  0100               	movlb	0	; () banked
  9017  001876  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9018  001878  0E00               	movlw	0
  9019  00187A  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  9020  00187C  EF5B  F00C         	goto	l928
  9021  001880                     l9681:
  9022                           
  9023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9024  001880  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9025  001884  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9026  001888  CFDE FFF6          	movff	postinc2,tblptrl
  9027  00188C  CFDD FFF7          	movff	postdec2,tblptrh
  9028  001890                     	if	0	;tblptru may be non-zero
  9029  001890                     	endif
  9030  001890                     	if	0	;tblptru may be non-zero
  9031  001890                     	endif
  9032  001890  0008               	tblrd		*
  9033  001892  50F5               	movf	tablat,w,c
  9034  001894  6E06               	movwf	fputc@c^0,c
  9035  001896  6A07               	clrf	(fputc@c+1)^0,c
  9036  001898  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  9037  00189C  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9038  0018A0  ECAC  F023         	call	_fputc	;wreg free
  9039  0018A4                     
  9040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9041  0018A4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9042  0018A8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9043  0018AC  2ADE               	incf	postinc2,f,c
  9044  0018AE  0E00               	movlw	0
  9045  0018B0  22DD               	addwfc	postdec2,f,c
  9046  0018B2  EF2B  F00C         	goto	l9671
  9047  0018B6                     l928:
  9048  0018B6  0012               	return		;funcret
  9049  0018B8                     __end_of_vfpfcnvrt:
  9050                           	opt callstack 0
  9051                           
  9052 ;; *************** function _strncmp *****************
  9053 ;; Defined at:
  9054 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  9057 ;;		 -> vfpfcnvrt@ct(3), 
  9058 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  9059 ;;		 -> STR_33(3), 
  9060 ;;  n               2    9[COMRAM] unsigned int 
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;  r               2   14[COMRAM] PTR const unsigned char 
  9063 ;;		 -> STR_33(3), 
  9064 ;;  l               2   12[COMRAM] PTR const unsigned char 
  9065 ;;		 -> vfpfcnvrt@ct(3), 
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  2    5[COMRAM] int 
  9068 ;; Registers used:
  9069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9075 ;;      Params:         6       0       0       0       0       0       0       0       0
  9076 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9077 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9078 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9079 ;;Total ram usage:       11 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:    2
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_vfpfcnvrt
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text34
  9090  004682                     __ptext34:
  9091                           	opt callstack 0
  9092  004682                     _strncmp:
  9093                           	opt callstack 24
  9094  004682  C006  F00D         	movff	strncmp@_l,strncmp@l
  9095  004686  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  9096  00468A  C008  F00F         	movff	strncmp@_r,strncmp@r
  9097  00468E  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  9098  004692  060A               	decf	strncmp@n^0,f,c
  9099  004694  A0D8               	btfss	status,0,c
  9100  004696  060B               	decf	(strncmp@n+1)^0,f,c
  9101  004698  280A               	incf	strncmp@n^0,w,c
  9102  00469A  E106               	bnz	u10691
  9103  00469C  280B               	incf	(strncmp@n+1)^0,w,c
  9104  00469E  A4D8               	btfss	status,2,c
  9105  0046A0  EF54  F023         	goto	u10691
  9106  0046A4  EF56  F023         	goto	u10690
  9107  0046A8                     u10691:
  9108  0046A8  EF63  F023         	goto	l9549
  9109  0046AC                     u10690:
  9110  0046AC  0E00               	movlw	0
  9111  0046AE  6E07               	movwf	(?_strncmp+1)^0,c
  9112  0046B0  0E00               	movlw	0
  9113  0046B2  6E06               	movwf	?_strncmp^0,c
  9114  0046B4  EFAB  F023         	goto	l1763
  9115  0046B8                     l9547:
  9116  0046B8  4A0D               	infsnz	strncmp@l^0,f,c
  9117  0046BA  2A0E               	incf	(strncmp@l+1)^0,f,c
  9118  0046BC  4A0F               	infsnz	strncmp@r^0,f,c
  9119  0046BE  2A10               	incf	(strncmp@r+1)^0,f,c
  9120  0046C0  060A               	decf	strncmp@n^0,f,c
  9121  0046C2  A0D8               	btfss	status,0,c
  9122  0046C4  060B               	decf	(strncmp@n+1)^0,f,c
  9123  0046C6                     l9549:
  9124  0046C6  C00D  FFD9         	movff	strncmp@l,fsr2l
  9125  0046CA  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  9126  0046CE  50DF               	movf	indf2,w,c
  9127  0046D0  B4D8               	btfsc	status,2,c
  9128  0046D2  EF6D  F023         	goto	u10701
  9129  0046D6  EF6F  F023         	goto	u10700
  9130  0046DA                     u10701:
  9131  0046DA  EF9A  F023         	goto	l9557
  9132  0046DE                     u10700:
  9133  0046DE  C00F  FFF6         	movff	strncmp@r,tblptrl
  9134  0046E2  C010  FFF7         	movff	strncmp@r+1,tblptrh
  9135  0046E6                     	if	0	;tblptru may be non-zero
  9136  0046E6                     	endif
  9137  0046E6                     	if	0	;tblptru may be non-zero
  9138  0046E6                     	endif
  9139  0046E6  0008               	tblrd		*
  9140  0046E8  50F5               	movf	tablat,w,c
  9141  0046EA  0900               	iorlw	0
  9142  0046EC  B4D8               	btfsc	status,2,c
  9143  0046EE  EF7B  F023         	goto	u10711
  9144  0046F2  EF7D  F023         	goto	u10710
  9145  0046F6                     u10711:
  9146  0046F6  EF9A  F023         	goto	l9557
  9147  0046FA                     u10710:
  9148  0046FA  500A               	movf	strncmp@n^0,w,c
  9149  0046FC  100B               	iorwf	(strncmp@n+1)^0,w,c
  9150  0046FE  B4D8               	btfsc	status,2,c
  9151  004700  EF84  F023         	goto	u10721
  9152  004704  EF86  F023         	goto	u10720
  9153  004708                     u10721:
  9154  004708  EF9A  F023         	goto	l9557
  9155  00470C                     u10720:
  9156  00470C  C00D  FFD9         	movff	strncmp@l,fsr2l
  9157  004710  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  9158  004714  50DF               	movf	indf2,w,c
  9159  004716  6E0C               	movwf	??_strncmp^0,c
  9160  004718  C00F  FFF6         	movff	strncmp@r,tblptrl
  9161  00471C  C010  FFF7         	movff	strncmp@r+1,tblptrh
  9162  004720                     	if	0	;tblptru may be non-zero
  9163  004720                     	endif
  9164  004720                     	if	0	;tblptru may be non-zero
  9165  004720                     	endif
  9166  004720  0008               	tblrd		*
  9167  004722  50F5               	movf	tablat,w,c
  9168  004724  180C               	xorwf	??_strncmp^0,w,c
  9169  004726  B4D8               	btfsc	status,2,c
  9170  004728  EF98  F023         	goto	u10731
  9171  00472C  EF9A  F023         	goto	u10730
  9172  004730                     u10731:
  9173  004730  EF5C  F023         	goto	l9547
  9174  004734                     u10730:
  9175  004734                     l9557:
  9176  004734  C00D  FFD9         	movff	strncmp@l,fsr2l
  9177  004738  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  9178  00473C  50DF               	movf	indf2,w,c
  9179  00473E  6E0C               	movwf	??_strncmp^0,c
  9180  004740  C00F  FFF6         	movff	strncmp@r,tblptrl
  9181  004744  C010  FFF7         	movff	strncmp@r+1,tblptrh
  9182  004748                     	if	0	;tblptru may be non-zero
  9183  004748                     	endif
  9184  004748                     	if	0	;tblptru may be non-zero
  9185  004748                     	endif
  9186  004748  0008               	tblrd		*
  9187  00474A  50F5               	movf	tablat,w,c
  9188  00474C  5C0C               	subwf	??_strncmp^0,w,c
  9189  00474E  6E06               	movwf	?_strncmp^0,c
  9190  004750  6A07               	clrf	(?_strncmp+1)^0,c
  9191  004752  A0D8               	btfss	status,0,c
  9192  004754  0607               	decf	(?_strncmp+1)^0,f,c
  9193  004756                     l1763:
  9194  004756  0012               	return		;funcret
  9195  004758                     __end_of_strncmp:
  9196                           	opt callstack 0
  9197                           
  9198 ;; *************** function _efgtoa *****************
  9199 ;; Defined at:
  9200 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  9203 ;;		 -> sprintf@f(6), 
  9204 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  9205 ;;  c               1   35[BANK0 ] unsigned char 
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;  u               4   93[BANK0 ] unsigned char 
  9208 ;;  g               4   85[BANK0 ] unsigned char 
  9209 ;;  l               4   79[BANK0 ] unsigned char 
  9210 ;;  h               4   75[BANK0 ] unsigned char 
  9211 ;;  ou              4   41[BANK0 ] unsigned char 
  9212 ;;  n               2   91[BANK0 ] int 
  9213 ;;  e               2   89[BANK0 ] int 
  9214 ;;  i               2   83[BANK0 ] int 
  9215 ;;  w               2   72[BANK0 ] int 
  9216 ;;  p               2   69[BANK0 ] int 
  9217 ;;  sign            2   67[BANK0 ] int 
  9218 ;;  d               2   65[BANK0 ] int 
  9219 ;;  ne              2   63[BANK0 ] int 
  9220 ;;  m               2   61[BANK0 ] int 
  9221 ;;  pp              2   59[BANK0 ] int 
  9222 ;;  t               2   57[BANK0 ] int 
  9223 ;;  mode            1   74[BANK0 ] unsigned char 
  9224 ;;  nmode           1   71[BANK0 ] unsigned char 
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  2   29[BANK0 ] int 
  9227 ;; Registers used:
  9228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9234 ;;      Params:         0       7       0       0       0       0       0       0       0
  9235 ;;      Locals:         0      56       0       0       0       0       0       0       0
  9236 ;;      Temps:          0       5       0       0       0       0       0       0       0
  9237 ;;      Totals:         0      68       0       0       0       0       0       0       0
  9238 ;;Total ram usage:       68 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; Hardware stack levels required when called:    6
  9241 ;; This function calls:
  9242 ;;		___awdiv
  9243 ;;		___awmod
  9244 ;;		___fladd
  9245 ;;		___fldiv
  9246 ;;		___fleq
  9247 ;;		___flge
  9248 ;;		___flmul
  9249 ;;		___flneg
  9250 ;;		___flsub
  9251 ;;		___fltol
  9252 ;;		___fpclassifyf
  9253 ;;		_floorf
  9254 ;;		_isupper
  9255 ;;		_pad
  9256 ;;		_strcpy
  9257 ;;		_tolower
  9258 ;; This function is called by:
  9259 ;;		_vfpfcnvrt
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           	psect	text35
  9264  000012                     __ptext35:
  9265                           	opt callstack 0
  9266  000012                     _efgtoa:
  9267                           	opt callstack 20
  9268  000012                     
  9269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  9270  000012  0E00               	movlw	0
  9271  000014  0100               	movlb	0	; () banked
  9272  000016  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  9273  000018  0E00               	movlw	0
  9274  00001A  6FA3               	movwf	efgtoa@sign& (0+255),b
  9275  00001C                     
  9276                           ; BSR set to: 0
  9277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  9278  00001C  C07F  F0B5         	movff	efgtoa@f,efgtoa@g
  9279  000020  C080  F0B6         	movff	efgtoa@f+1,efgtoa@g+1
  9280  000024  C081  F0B7         	movff	efgtoa@f+2,efgtoa@g+2
  9281  000028  C082  F0B8         	movff	efgtoa@f+3,efgtoa@g+3
  9282  00002C                     
  9283                           ; BSR set to: 0
  9284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  9285  00002C  BFB8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9286  00002E  EF1D  F000         	goto	u10100
  9287  000032  EF1B  F000         	goto	u10101
  9288  000036                     u10101:
  9289  000036  EF33  F000         	goto	l9211
  9290  00003A                     u10100:
  9291  00003A                     
  9292                           ; BSR set to: 0
  9293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  9294  00003A  0E00               	movlw	0
  9295  00003C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  9296  00003E  0E01               	movlw	1
  9297  000040  6FA3               	movwf	efgtoa@sign& (0+255),b
  9298  000042                     
  9299                           ; BSR set to: 0
  9300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  9301  000042  C0B5  F006         	movff	efgtoa@g,___flneg@f1
  9302  000046  C0B6  F007         	movff	efgtoa@g+1,___flneg@f1+1
  9303  00004A  C0B7  F008         	movff	efgtoa@g+2,___flneg@f1+2
  9304  00004E  C0B8  F009         	movff	efgtoa@g+3,___flneg@f1+3
  9305  000052  EC2F  F02B         	call	___flneg	;wreg free
  9306  000056  C006  F0B5         	movff	?___flneg,efgtoa@g
  9307  00005A  C007  F0B6         	movff	?___flneg+1,efgtoa@g+1
  9308  00005E  C008  F0B7         	movff	?___flneg+2,efgtoa@g+2
  9309  000062  C009  F0B8         	movff	?___flneg+3,efgtoa@g+3
  9310  000066                     l9211:
  9311                           
  9312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  9313  000066  0E00               	movlw	0
  9314  000068  0100               	movlb	0	; () banked
  9315  00006A  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  9316  00006C  0E00               	movlw	0
  9317  00006E  6FBB               	movwf	efgtoa@n& (0+255),b
  9318  000070                     
  9319                           ; BSR set to: 0
  9320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  9321  000070  C132  F0A8         	movff	_width,efgtoa@w
  9322  000074  C133  F0A9         	movff	_width+1,efgtoa@w+1
  9323  000078                     
  9324                           ; BSR set to: 0
  9325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9326  000078  51A3               	movf	efgtoa@sign& (0+255),w,b
  9327  00007A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9328  00007C  A4D8               	btfss	status,2,c
  9329  00007E  EF43  F000         	goto	u10111
  9330  000082  EF45  F000         	goto	u10110
  9331  000086                     u10111:
  9332  000086  EF4C  F000         	goto	l9219
  9333  00008A                     u10110:
  9334  00008A                     
  9335                           ; BSR set to: 0
  9336  00008A  A455               	btfss	_flags^0,2,c
  9337  00008C  EF4A  F000         	goto	u10121
  9338  000090  EF4C  F000         	goto	u10120
  9339  000094                     u10121:
  9340  000094  EF66  F000         	goto	l9231
  9341  000098                     u10120:
  9342  000098                     l9219:
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9346  000098  51A3               	movf	efgtoa@sign& (0+255),w,b
  9347  00009A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9348  00009C  A4D8               	btfss	status,2,c
  9349  00009E  EF53  F000         	goto	u10131
  9350  0000A2  EF55  F000         	goto	u10130
  9351  0000A6                     u10131:
  9352  0000A6  EF5B  F000         	goto	l9223
  9353  0000AA                     u10130:
  9354  0000AA                     
  9355                           ; BSR set to: 0
  9356  0000AA  0E00               	movlw	0
  9357  0000AC  6F8E               	movwf	(_efgtoa$923+1)& (0+255),b
  9358  0000AE  0E2B               	movlw	43
  9359  0000B0  6F8D               	movwf	_efgtoa$923& (0+255),b
  9360  0000B2  EF5F  F000         	goto	l9225
  9361  0000B6                     l9223:
  9362                           
  9363                           ; BSR set to: 0
  9364  0000B6  0E00               	movlw	0
  9365  0000B8  6F8E               	movwf	(_efgtoa$923+1)& (0+255),b
  9366  0000BA  0E2D               	movlw	45
  9367  0000BC  6F8D               	movwf	_efgtoa$923& (0+255),b
  9368  0000BE                     l9225:
  9369                           
  9370                           ; BSR set to: 0
  9371  0000BE  C08D  F142         	movff	_efgtoa$923,_dbuf
  9372  0000C2                     
  9373                           ; BSR set to: 0
  9374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9375  0000C2  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  9376  0000C4  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  9377  0000C6                     
  9378                           ; BSR set to: 0
  9379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9380  0000C6  07A8               	decf	efgtoa@w& (0+255),f,b
  9381  0000C8  A0D8               	btfss	status,0,c
  9382  0000CA  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  9383  0000CC                     l9231:
  9384                           
  9385                           ; BSR set to: 0
  9386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9387  0000CC  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  9388  0000D0  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9389  0000D4  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9390  0000D8  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9391  0000DC  EC45  F022         	call	___fpclassifyf	;wreg free
  9392  0000E0  0406               	decf	?___fpclassifyf^0,w,c
  9393  0000E2  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9394  0000E4  A4D8               	btfss	status,2,c
  9395  0000E6  EF77  F000         	goto	u10141
  9396  0000EA  EF79  F000         	goto	u10140
  9397  0000EE                     u10141:
  9398  0000EE  EFD0  F000         	goto	l9249
  9399  0000F2                     u10140:
  9400  0000F2  0EBF               	movlw	191
  9401  0000F4  0100               	movlb	0	; () banked
  9402  0000F6  6F84               	movwf	??_efgtoa& (0+255),b
  9403  0000F8  0EFF               	movlw	255
  9404  0000FA  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9405  0000FC  5183               	movf	efgtoa@c& (0+255),w,b
  9406  0000FE  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  9407  000100  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  9408  000102  5184               	movf	??_efgtoa& (0+255),w,b
  9409  000104  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9410  000106  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9411  000108  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9412  00010A  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9413  00010C  E10A               	bnz	u10150
  9414  00010E  0E1A               	movlw	26
  9415  000110  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9416  000112  A0D8               	btfss	status,0,c
  9417  000114  EF8E  F000         	goto	u10151
  9418  000118  EF91  F000         	goto	u10150
  9419  00011C                     u10151:
  9420  00011C  0E01               	movlw	1
  9421  00011E  EF92  F000         	goto	u10160
  9422  000122                     u10150:
  9423  000122  0E00               	movlw	0
  9424  000124                     u10160:
  9425  000124  6F8F               	movwf	_efgtoa$924& (0+255),b
  9426  000126  6B90               	clrf	(_efgtoa$924+1)& (0+255),b
  9427  000128                     
  9428                           ; BSR set to: 0
  9429  000128  518F               	movf	_efgtoa$924& (0+255),w,b
  9430  00012A  1190               	iorwf	(_efgtoa$924+1)& (0+255),w,b
  9431  00012C  B4D8               	btfsc	status,2,c
  9432  00012E  EF9B  F000         	goto	u10171
  9433  000132  EF9D  F000         	goto	u10170
  9434  000136                     u10171:
  9435  000136  EFAB  F000         	goto	l9241
  9436  00013A                     u10170:
  9437  00013A                     
  9438                           ; BSR set to: 0
  9439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  9440  00013A  0E42               	movlw	low _dbuf
  9441  00013C  25BB               	addwf	efgtoa@n& (0+255),w,b
  9442  00013E  6E06               	movwf	strcpy@dest^0,c
  9443  000140  0E01               	movlw	high _dbuf
  9444  000142  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9445  000144  6E07               	movwf	(strcpy@dest+1)^0,c
  9446  000146  0EEB               	movlw	low STR_23
  9447  000148  6E08               	movwf	strcpy@src^0,c
  9448  00014A  0E7F               	movlw	high STR_23
  9449  00014C  6E09               	movwf	(strcpy@src+1)^0,c
  9450  00014E  EC80  F028         	call	_strcpy	;wreg free
  9451                           
  9452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9453  000152  EFB7  F000         	goto	l9243
  9454  000156                     l9241:
  9455                           
  9456                           ; BSR set to: 0
  9457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9458  000156  0E42               	movlw	low _dbuf
  9459  000158  25BB               	addwf	efgtoa@n& (0+255),w,b
  9460  00015A  6E06               	movwf	strcpy@dest^0,c
  9461  00015C  0E01               	movlw	high _dbuf
  9462  00015E  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9463  000160  6E07               	movwf	(strcpy@dest+1)^0,c
  9464  000162  0EF3               	movlw	low STR_24
  9465  000164  6E08               	movwf	strcpy@src^0,c
  9466  000166  0E7F               	movlw	high STR_24
  9467  000168  6E09               	movwf	(strcpy@src+1)^0,c
  9468  00016A  EC80  F028         	call	_strcpy	;wreg free
  9469  00016E                     l9243:
  9470                           
  9471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9472  00016E  0100               	movlb	0	; () banked
  9473  000170  0EFD               	movlw	253
  9474  000172  27A8               	addwf	efgtoa@w& (0+255),f,b
  9475  000174  0EFF               	movlw	255
  9476  000176  23A9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9477  000178                     l9245:
  9478                           
  9479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9480  000178  C07D  F016         	movff	efgtoa@fp,pad@fp
  9481  00017C  C07E  F017         	movff	efgtoa@fp+1,pad@fp+1
  9482  000180  0E42               	movlw	low _dbuf
  9483  000182  6E18               	movwf	pad@buf^0,c
  9484  000184  0E01               	movlw	high _dbuf
  9485  000186  6E19               	movwf	(pad@buf+1)^0,c
  9486  000188  C0A8  F01A         	movff	efgtoa@w,pad@p
  9487  00018C  C0A9  F01B         	movff	efgtoa@w+1,pad@p+1
  9488  000190  EC73  F024         	call	_pad	;wreg free
  9489  000194  C016  F07D         	movff	?_pad,?_efgtoa
  9490  000198  C017  F07E         	movff	?_pad+1,?_efgtoa+1
  9491  00019C  EFE5  F005         	goto	l838
  9492  0001A0                     l9249:
  9493                           
  9494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9495  0001A0  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  9496  0001A4  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9497  0001A8  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9498  0001AC  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9499  0001B0  EC45  F022         	call	___fpclassifyf	;wreg free
  9500  0001B4  5006               	movf	?___fpclassifyf^0,w,c
  9501  0001B6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9502  0001B8  A4D8               	btfss	status,2,c
  9503  0001BA  EFE1  F000         	goto	u10181
  9504  0001BE  EFE3  F000         	goto	u10180
  9505  0001C2                     u10181:
  9506  0001C2  EF23  F001         	goto	l9267
  9507  0001C6                     u10180:
  9508  0001C6  0EBF               	movlw	191
  9509  0001C8  0100               	movlb	0	; () banked
  9510  0001CA  6F84               	movwf	??_efgtoa& (0+255),b
  9511  0001CC  0EFF               	movlw	255
  9512  0001CE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9513  0001D0  5183               	movf	efgtoa@c& (0+255),w,b
  9514  0001D2  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  9515  0001D4  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  9516  0001D6  5184               	movf	??_efgtoa& (0+255),w,b
  9517  0001D8  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9518  0001DA  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9519  0001DC  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9520  0001DE  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9521  0001E0  E10A               	bnz	u10190
  9522  0001E2  0E1A               	movlw	26
  9523  0001E4  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9524  0001E6  A0D8               	btfss	status,0,c
  9525  0001E8  EFF8  F000         	goto	u10191
  9526  0001EC  EFFB  F000         	goto	u10190
  9527  0001F0                     u10191:
  9528  0001F0  0E01               	movlw	1
  9529  0001F2  EFFC  F000         	goto	u10200
  9530  0001F6                     u10190:
  9531  0001F6  0E00               	movlw	0
  9532  0001F8                     u10200:
  9533  0001F8  6F91               	movwf	_efgtoa$928& (0+255),b
  9534  0001FA  6B92               	clrf	(_efgtoa$928+1)& (0+255),b
  9535  0001FC                     
  9536                           ; BSR set to: 0
  9537  0001FC  5191               	movf	_efgtoa$928& (0+255),w,b
  9538  0001FE  1192               	iorwf	(_efgtoa$928+1)& (0+255),w,b
  9539  000200  B4D8               	btfsc	status,2,c
  9540  000202  EF05  F001         	goto	u10211
  9541  000206  EF07  F001         	goto	u10210
  9542  00020A                     u10211:
  9543  00020A  EF15  F001         	goto	l9259
  9544  00020E                     u10210:
  9545  00020E                     
  9546                           ; BSR set to: 0
  9547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9548  00020E  0E42               	movlw	low _dbuf
  9549  000210  25BB               	addwf	efgtoa@n& (0+255),w,b
  9550  000212  6E06               	movwf	strcpy@dest^0,c
  9551  000214  0E01               	movlw	high _dbuf
  9552  000216  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9553  000218  6E07               	movwf	(strcpy@dest+1)^0,c
  9554  00021A  0EEF               	movlw	low STR_27
  9555  00021C  6E08               	movwf	strcpy@src^0,c
  9556  00021E  0E7F               	movlw	high STR_27
  9557  000220  6E09               	movwf	(strcpy@src+1)^0,c
  9558  000222  EC80  F028         	call	_strcpy	;wreg free
  9559                           
  9560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9561  000226  EFB7  F000         	goto	l9243
  9562  00022A                     l9259:
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9566  00022A  0E42               	movlw	low _dbuf
  9567  00022C  25BB               	addwf	efgtoa@n& (0+255),w,b
  9568  00022E  6E06               	movwf	strcpy@dest^0,c
  9569  000230  0E01               	movlw	high _dbuf
  9570  000232  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9571  000234  6E07               	movwf	(strcpy@dest+1)^0,c
  9572  000236  0EF7               	movlw	low STR_28
  9573  000238  6E08               	movwf	strcpy@src^0,c
  9574  00023A  0E7F               	movlw	high STR_28
  9575  00023C  6E09               	movwf	(strcpy@src+1)^0,c
  9576  00023E  EC80  F028         	call	_strcpy	;wreg free
  9577  000242  EFB7  F000         	goto	l9243
  9578  000246                     l9267:
  9579                           
  9580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9581  000246  0E00               	movlw	0
  9582  000248  0100               	movlb	0	; () banked
  9583  00024A  6FBD               	movwf	efgtoa@u& (0+255),b
  9584  00024C  0E00               	movlw	0
  9585  00024E  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  9586  000250  0E80               	movlw	128
  9587  000252  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  9588  000254  0E3F               	movlw	63
  9589  000256  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  9590                           
  9591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9592  000258  0E00               	movlw	0
  9593  00025A  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  9594  00025C  0E00               	movlw	0
  9595  00025E  6FB9               	movwf	efgtoa@e& (0+255),b
  9596  000260                     
  9597                           ; BSR set to: 0
  9598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9599  000260  C0B5  F006         	movff	efgtoa@g,___fleq@ff1
  9600  000264  C0B6  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  9601  000268  C0B7  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  9602  00026C  C0B8  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  9603  000270  0E00               	movlw	0
  9604  000272  6E0A               	movwf	___fleq@ff2^0,c
  9605  000274  0E00               	movlw	0
  9606  000276  6E0B               	movwf	(___fleq@ff2+1)^0,c
  9607  000278  0E00               	movlw	0
  9608  00027A  6E0C               	movwf	(___fleq@ff2+2)^0,c
  9609  00027C  0E00               	movlw	0
  9610  00027E  6E0D               	movwf	(___fleq@ff2+3)^0,c
  9611  000280  ECD8  F025         	call	___fleq	;wreg free
  9612  000284  B0D8               	btfsc	status,0,c
  9613  000286  EF47  F001         	goto	u10221
  9614  00028A  EF49  F001         	goto	u10220
  9615  00028E                     u10221:
  9616  00028E  EFCC  F001         	goto	l9285
  9617  000292                     u10220:
  9618  000292  EF68  F001         	goto	l9277
  9619  000296                     l9273:
  9620                           
  9621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9622  000296  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9623  00029A  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9624  00029E  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9625  0002A2  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9626  0002A6  0E00               	movlw	0
  9627  0002A8  6E1F               	movwf	___flmul@a^0,c
  9628  0002AA  0E00               	movlw	0
  9629  0002AC  6E20               	movwf	(___flmul@a+1)^0,c
  9630  0002AE  0E20               	movlw	32
  9631  0002B0  6E21               	movwf	(___flmul@a+2)^0,c
  9632  0002B2  0E41               	movlw	65
  9633  0002B4  6E22               	movwf	(___flmul@a+3)^0,c
  9634  0002B6  ECBC  F00E         	call	___flmul	;wreg free
  9635  0002BA  C01B  F0BD         	movff	?___flmul,efgtoa@u
  9636  0002BE  C01C  F0BE         	movff	?___flmul+1,efgtoa@u+1
  9637  0002C2  C01D  F0BF         	movff	?___flmul+2,efgtoa@u+2
  9638  0002C6  C01E  F0C0         	movff	?___flmul+3,efgtoa@u+3
  9639  0002CA                     
  9640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9641  0002CA  0100               	movlb	0	; () banked
  9642  0002CC  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  9643  0002CE  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  9644  0002D0                     l9277:
  9645                           
  9646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9647  0002D0  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  9648  0002D4  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  9649  0002D8  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  9650  0002DC  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  9651  0002E0  0E00               	movlw	0
  9652  0002E2  6E1F               	movwf	___flmul@a^0,c
  9653  0002E4  0E00               	movlw	0
  9654  0002E6  6E20               	movwf	(___flmul@a+1)^0,c
  9655  0002E8  0E20               	movlw	32
  9656  0002EA  6E21               	movwf	(___flmul@a+2)^0,c
  9657  0002EC  0E41               	movlw	65
  9658  0002EE  6E22               	movwf	(___flmul@a+3)^0,c
  9659  0002F0  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9660  0002F4  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9661  0002F8  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9662  0002FC  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9663  000300  ECBC  F00E         	call	___flmul	;wreg free
  9664  000304  C01B  F038         	movff	?___flmul,___flge@ff2
  9665  000308  C01C  F039         	movff	?___flmul+1,___flge@ff2+1
  9666  00030C  C01D  F03A         	movff	?___flmul+2,___flge@ff2+2
  9667  000310  C01E  F03B         	movff	?___flmul+3,___flge@ff2+3
  9668  000314  ECC3  F021         	call	___flge	;wreg free
  9669  000318  B0D8               	btfsc	status,0,c
  9670  00031A  EF91  F001         	goto	u10231
  9671  00031E  EF93  F001         	goto	u10230
  9672  000322                     u10231:
  9673  000322  EF4B  F001         	goto	l9273
  9674  000326                     u10230:
  9675  000326  EFB3  F001         	goto	l9283
  9676  00032A                     l9279:
  9677                           
  9678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9679  00032A  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  9680  00032E  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  9681  000332  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  9682  000336  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  9683  00033A  0E00               	movlw	0
  9684  00033C  6E48               	movwf	___fldiv@a^0,c
  9685  00033E  0E00               	movlw	0
  9686  000340  6E49               	movwf	(___fldiv@a+1)^0,c
  9687  000342  0E20               	movlw	32
  9688  000344  6E4A               	movwf	(___fldiv@a+2)^0,c
  9689  000346  0E41               	movlw	65
  9690  000348  6E4B               	movwf	(___fldiv@a+3)^0,c
  9691  00034A  EC97  F014         	call	___fldiv	;wreg free
  9692  00034E  C044  F0BD         	movff	?___fldiv,efgtoa@u
  9693  000352  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  9694  000356  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  9695  00035A  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  9696  00035E                     
  9697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9698  00035E  0100               	movlb	0	; () banked
  9699  000360  07B9               	decf	efgtoa@e& (0+255),f,b
  9700  000362  A0D8               	btfss	status,0,c
  9701  000364  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  9702  000366                     l9283:
  9703                           
  9704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9705  000366  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  9706  00036A  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  9707  00036E  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  9708  000372  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  9709  000376  C0BD  F038         	movff	efgtoa@u,___flge@ff2
  9710  00037A  C0BE  F039         	movff	efgtoa@u+1,___flge@ff2+1
  9711  00037E  C0BF  F03A         	movff	efgtoa@u+2,___flge@ff2+2
  9712  000382  C0C0  F03B         	movff	efgtoa@u+3,___flge@ff2+3
  9713  000386  ECC3  F021         	call	___flge	;wreg free
  9714  00038A  A0D8               	btfss	status,0,c
  9715  00038C  EFCA  F001         	goto	u10241
  9716  000390  EFCC  F001         	goto	u10240
  9717  000394                     u10241:
  9718  000394  EF95  F001         	goto	l9279
  9719  000398                     u10240:
  9720  000398                     l9285:
  9721                           
  9722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9723  000398  C083  F00C         	movff	efgtoa@c,tolower@c
  9724  00039C  6A0D               	clrf	(tolower@c+1)^0,c
  9725  00039E  EC21  F028         	call	_tolower	;wreg free
  9726  0003A2  500C               	movf	?_tolower^0,w,c
  9727  0003A4  0100               	movlb	0	; () banked
  9728  0003A6  6FAA               	movwf	efgtoa@mode& (0+255),b
  9729  0003A8                     
  9730                           ; BSR set to: 0
  9731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9732  0003A8  C0AA  F0A7         	movff	efgtoa@mode,efgtoa@nmode
  9733  0003AC                     
  9734                           ; BSR set to: 0
  9735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9736  0003AC  0E67               	movlw	103
  9737  0003AE  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9738  0003B0  A4D8               	btfss	status,2,c
  9739  0003B2  EFDD  F001         	goto	u10251
  9740  0003B6  EFDF  F001         	goto	u10250
  9741  0003BA                     u10251:
  9742  0003BA  EF07  F002         	goto	l9299
  9743  0003BE                     u10250:
  9744  0003BE                     
  9745                           ; BSR set to: 0
  9746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9747  0003BE  0101               	movlb	1	; () banked
  9748  0003C0  5134               	movf	_prec& (0+255),w,b
  9749  0003C2  1135               	iorwf	(_prec+1)& (0+255),w,b
  9750  0003C4  A4D8               	btfss	status,2,c
  9751  0003C6  EFE7  F001         	goto	u10261
  9752  0003CA  EFE9  F001         	goto	u10260
  9753  0003CE                     u10261:
  9754  0003CE  EFED  F001         	goto	l9295
  9755  0003D2                     u10260:
  9756  0003D2                     
  9757                           ; BSR set to: 1
  9758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9759  0003D2  0E00               	movlw	0
  9760  0003D4  6F35               	movwf	(_prec+1)& (0+255),b
  9761  0003D6  0E01               	movlw	1
  9762  0003D8  6F34               	movwf	_prec& (0+255),b
  9763  0003DA                     l9295:
  9764                           
  9765                           ; BSR set to: 1
  9766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9767  0003DA  BF35               	btfsc	(_prec+1)& (0+255),7,b
  9768  0003DC  EFFA  F001         	goto	u10270
  9769  0003E0  5135               	movf	(_prec+1)& (0+255),w,b
  9770  0003E2  E106               	bnz	u10271
  9771  0003E4  0534               	decf	_prec& (0+255),w,b
  9772  0003E6  B0D8               	btfsc	status,0,c
  9773  0003E8  EFF8  F001         	goto	u10271
  9774  0003EC  EFFA  F001         	goto	u10270
  9775  0003F0                     u10271:
  9776  0003F0  EF01  F002         	goto	l856
  9777  0003F4                     u10270:
  9778  0003F4                     l9297:
  9779                           
  9780                           ; BSR set to: 1
  9781  0003F4  0E00               	movlw	0
  9782  0003F6  0100               	movlb	0	; () banked
  9783  0003F8  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  9784  0003FA  0E06               	movlw	6
  9785  0003FC  6FA5               	movwf	efgtoa@p& (0+255),b
  9786  0003FE  EF11  F002         	goto	l9305
  9787  000402                     l856:
  9788                           
  9789                           ; BSR set to: 1
  9790  000402  C134  F0A5         	movff	_prec,efgtoa@p
  9791  000406  C135  F0A6         	movff	_prec+1,efgtoa@p+1
  9792  00040A  EF11  F002         	goto	l9305
  9793  00040E                     l9299:
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9797  00040E  0101               	movlb	1	; () banked
  9798  000410  BF35               	btfsc	(_prec+1)& (0+255),7,b
  9799  000412  EF0D  F002         	goto	u10281
  9800  000416  EF0F  F002         	goto	u10280
  9801  00041A                     u10281:
  9802  00041A  EFFA  F001         	goto	l9297
  9803  00041E                     u10280:
  9804  00041E  EF01  F002         	goto	l856
  9805  000422                     l9305:
  9806                           
  9807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9808  000422  0E67               	movlw	103
  9809  000424  0100               	movlb	0	; () banked
  9810  000426  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9811  000428  A4D8               	btfss	status,2,c
  9812  00042A  EF19  F002         	goto	u10291
  9813  00042E  EF1B  F002         	goto	u10290
  9814  000432                     u10291:
  9815  000432  EF4A  F002         	goto	l9315
  9816  000436                     u10290:
  9817  000436                     
  9818                           ; BSR set to: 0
  9819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9820  000436  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  9821  000438  EF29  F002         	goto	u10300
  9822  00043C  0EFC               	movlw	252
  9823  00043E  5DB9               	subwf	efgtoa@e& (0+255),w,b
  9824  000440  0EFF               	movlw	255
  9825  000442  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9826  000444  A0D8               	btfss	status,0,c
  9827  000446  EF27  F002         	goto	u10301
  9828  00044A  EF29  F002         	goto	u10300
  9829  00044E                     u10301:
  9830  00044E  EF48  F002         	goto	l9313
  9831  000452                     u10300:
  9832  000452                     
  9833                           ; BSR set to: 0
  9834  000452  0EFF               	movlw	255
  9835  000454  6F84               	movwf	??_efgtoa& (0+255),b
  9836  000456  0EFF               	movlw	255
  9837  000458  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9838  00045A  C0A5  F086         	movff	efgtoa@p,??_efgtoa+2
  9839  00045E  C0A6  F087         	movff	efgtoa@p+1,??_efgtoa+3
  9840  000462  5184               	movf	??_efgtoa& (0+255),w,b
  9841  000464  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9842  000466  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9843  000468  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9844  00046A  51B9               	movf	efgtoa@e& (0+255),w,b
  9845  00046C  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9846  00046E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9847  000470  0A80               	xorlw	128
  9848  000472  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  9849  000474  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  9850  000476  0A80               	xorlw	128
  9851  000478  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  9852  00047A  A0D8               	btfss	status,0,c
  9853  00047C  EF42  F002         	goto	u10311
  9854  000480  EF44  F002         	goto	u10310
  9855  000484                     u10311:
  9856  000484  EF48  F002         	goto	l9313
  9857  000488                     u10310:
  9858  000488                     
  9859                           ; BSR set to: 0
  9860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9861  000488  0E66               	movlw	102
  9862  00048A  6FA7               	movwf	efgtoa@nmode& (0+255),b
  9863                           
  9864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9865  00048C  EF4A  F002         	goto	l9315
  9866  000490                     l9313:
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9870  000490  0E65               	movlw	101
  9871  000492  6FA7               	movwf	efgtoa@nmode& (0+255),b
  9872  000494                     l9315:
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9876  000494  C0A5  F09D         	movff	efgtoa@p,efgtoa@m
  9877  000498  C0A6  F09E         	movff	efgtoa@p+1,efgtoa@m+1
  9878  00049C                     
  9879                           ; BSR set to: 0
  9880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9881  00049C  0E67               	movlw	103
  9882  00049E  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9883  0004A0  A4D8               	btfss	status,2,c
  9884  0004A2  EF55  F002         	goto	u10321
  9885  0004A6  EF57  F002         	goto	u10320
  9886  0004AA                     u10321:
  9887  0004AA  EF67  F002         	goto	l9323
  9888  0004AE                     u10320:
  9889  0004AE                     
  9890                           ; BSR set to: 0
  9891  0004AE  0E66               	movlw	102
  9892  0004B0  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9893  0004B2  A4D8               	btfss	status,2,c
  9894  0004B4  EF5E  F002         	goto	u10331
  9895  0004B8  EF60  F002         	goto	u10330
  9896  0004BC                     u10331:
  9897  0004BC  EF69  F002         	goto	l9325
  9898  0004C0                     u10330:
  9899  0004C0                     
  9900                           ; BSR set to: 0
  9901  0004C0  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9902  0004C2  EF67  F002         	goto	u10340
  9903  0004C6  EF65  F002         	goto	u10341
  9904  0004CA                     u10341:
  9905  0004CA  EF69  F002         	goto	l9325
  9906  0004CE                     u10340:
  9907  0004CE                     l9323:
  9908                           
  9909                           ; BSR set to: 0
  9910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9911  0004CE  4B9D               	infsnz	efgtoa@m& (0+255),f,b
  9912  0004D0  2B9E               	incf	(efgtoa@m+1)& (0+255),f,b
  9913  0004D2                     l9325:
  9914                           
  9915                           ; BSR set to: 0
  9916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9917  0004D2  0E66               	movlw	102
  9918  0004D4  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9919  0004D6  A4D8               	btfss	status,2,c
  9920  0004D8  EF70  F002         	goto	u10351
  9921  0004DC  EF72  F002         	goto	u10350
  9922  0004E0                     u10351:
  9923  0004E0  EF92  F002         	goto	l9335
  9924  0004E4                     u10350:
  9925  0004E4                     
  9926                           ; BSR set to: 0
  9927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9928  0004E4  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9929  0004E6  EF79  F002         	goto	u10360
  9930  0004EA  EF77  F002         	goto	u10361
  9931  0004EE                     u10361:
  9932  0004EE  EF85  F002         	goto	l9331
  9933  0004F2                     u10360:
  9934  0004F2                     
  9935                           ; BSR set to: 0
  9936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9937  0004F2  0E00               	movlw	0
  9938  0004F4  6FBD               	movwf	efgtoa@u& (0+255),b
  9939  0004F6  0E00               	movlw	0
  9940  0004F8  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  9941  0004FA  0E80               	movlw	128
  9942  0004FC  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  9943  0004FE  0E3F               	movlw	63
  9944  000500  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  9945                           
  9946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9947  000502  0E00               	movlw	0
  9948  000504  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  9949  000506  0E00               	movlw	0
  9950  000508  6FB9               	movwf	efgtoa@e& (0+255),b
  9951  00050A                     l9331:
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9955  00050A  0E67               	movlw	103
  9956  00050C  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9957  00050E  B4D8               	btfsc	status,2,c
  9958  000510  EF8C  F002         	goto	u10371
  9959  000514  EF8E  F002         	goto	u10370
  9960  000518                     u10371:
  9961  000518  EF92  F002         	goto	l9335
  9962  00051C                     u10370:
  9963  00051C                     
  9964                           ; BSR set to: 0
  9965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9966  00051C  51B9               	movf	efgtoa@e& (0+255),w,b
  9967  00051E  279D               	addwf	efgtoa@m& (0+255),f,b
  9968  000520  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  9969  000522  239E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9970  000524                     l9335:
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9974  000524  0E00               	movlw	0
  9975  000526  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  9976  000528  0E00               	movlw	0
  9977  00052A  6FB3               	movwf	efgtoa@i& (0+255),b
  9978  00052C                     
  9979                           ; BSR set to: 0
  9980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9981  00052C  C0B5  F0AB         	movff	efgtoa@g,efgtoa@h
  9982  000530  C0B6  F0AC         	movff	efgtoa@g+1,efgtoa@h+1
  9983  000534  C0B7  F0AD         	movff	efgtoa@g+2,efgtoa@h+2
  9984  000538  C0B8  F0AE         	movff	efgtoa@g+3,efgtoa@h+3
  9985  00053C                     
  9986                           ; BSR set to: 0
  9987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9988  00053C  C0BD  F089         	movff	efgtoa@u,efgtoa@ou
  9989  000540  C0BE  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
  9990  000544  C0BF  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
  9991  000548  C0C0  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
  9992                           
  9993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9994  00054C  EF23  F003         	goto	l9349
  9995  000550                     l9341:
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9999  000550  C0AB  F044         	movff	efgtoa@h,___fldiv@b
 10000  000554  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
 10001  000558  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
 10002  00055C  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
 10003  000560  C0BD  F048         	movff	efgtoa@u,___fldiv@a
 10004  000564  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
 10005  000568  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
 10006  00056C  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
 10007  000570  EC97  F014         	call	___fldiv	;wreg free
 10008  000574  C044  F050         	movff	?___fldiv,floorf@x
 10009  000578  C045  F051         	movff	?___fldiv+1,floorf@x+1
 10010  00057C  C046  F052         	movff	?___fldiv+2,floorf@x+2
 10011  000580  C047  F053         	movff	?___fldiv+3,floorf@x+3
 10012  000584  ECFD  F018         	call	_floorf	;wreg free
 10013  000588  C050  F0AF         	movff	?_floorf,efgtoa@l
 10014  00058C  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
 10015  000590  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
 10016  000594  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
 10017                           
 10018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 10019  000598  C0AF  F072         	movff	efgtoa@l,___fltol@f1
 10020  00059C  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
 10021  0005A0  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
 10022  0005A4  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
 10023  0005A8  EC3F  F021         	call	___fltol	;wreg free
 10024  0005AC  C072  F0A1         	movff	?___fltol,efgtoa@d
 10025  0005B0  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
 10026  0005B4                     
 10027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 10028  0005B4  C0AB  F044         	movff	efgtoa@h,___flsub@b
 10029  0005B8  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
 10030  0005BC  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
 10031  0005C0  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
 10032  0005C4  C0BD  F01F         	movff	efgtoa@u,___flmul@a
 10033  0005C8  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
 10034  0005CC  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
 10035  0005D0  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
 10036  0005D4  C0AF  F01B         	movff	efgtoa@l,___flmul@b
 10037  0005D8  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
 10038  0005DC  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
 10039  0005E0  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
 10040  0005E4  ECBC  F00E         	call	___flmul	;wreg free
 10041  0005E8  C01B  F048         	movff	?___flmul,___flsub@a
 10042  0005EC  C01C  F049         	movff	?___flmul+1,___flsub@a+1
 10043  0005F0  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
 10044  0005F4  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
 10045  0005F8  EC6B  F02A         	call	___flsub	;wreg free
 10046  0005FC  C044  F0AB         	movff	?___flsub,efgtoa@h
 10047  000600  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
 10048  000604  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
 10049  000608  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
 10050  00060C                     
 10051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 10052  00060C  C0BD  F044         	movff	efgtoa@u,___fldiv@b
 10053  000610  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
 10054  000614  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
 10055  000618  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
 10056  00061C  0E00               	movlw	0
 10057  00061E  6E48               	movwf	___fldiv@a^0,c
 10058  000620  0E00               	movlw	0
 10059  000622  6E49               	movwf	(___fldiv@a+1)^0,c
 10060  000624  0E20               	movlw	32
 10061  000626  6E4A               	movwf	(___fldiv@a+2)^0,c
 10062  000628  0E41               	movlw	65
 10063  00062A  6E4B               	movwf	(___fldiv@a+3)^0,c
 10064  00062C  EC97  F014         	call	___fldiv	;wreg free
 10065  000630  C044  F0BD         	movff	?___fldiv,efgtoa@u
 10066  000634  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
 10067  000638  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
 10068  00063C  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
 10069  000640                     
 10070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 10071  000640  0100               	movlb	0	; () banked
 10072  000642  4BB3               	infsnz	efgtoa@i& (0+255),f,b
 10073  000644  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
 10074  000646                     l9349:
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10078  000646  519D               	movf	efgtoa@m& (0+255),w,b
 10079  000648  5DB3               	subwf	efgtoa@i& (0+255),w,b
 10080  00064A  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
 10081  00064C  0A80               	xorlw	128
 10082  00064E  6F84               	movwf	??_efgtoa& (0+255),b
 10083  000650  519E               	movf	(efgtoa@m+1)& (0+255),w,b
 10084  000652  0A80               	xorlw	128
 10085  000654  5984               	subwfb	??_efgtoa& (0+255),w,b
 10086  000656  A0D8               	btfss	status,0,c
 10087  000658  EF30  F003         	goto	u10381
 10088  00065C  EF32  F003         	goto	u10380
 10089  000660                     u10381:
 10090  000660  EFA8  F002         	goto	l9341
 10091  000664                     u10380:
 10092  000664                     
 10093                           ; BSR set to: 0
 10094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 10095  000664  C0BD  F01B         	movff	efgtoa@u,___flmul@b
 10096  000668  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
 10097  00066C  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
 10098  000670  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
 10099  000674  0E00               	movlw	0
 10100  000676  6E1F               	movwf	___flmul@a^0,c
 10101  000678  0E00               	movlw	0
 10102  00067A  6E20               	movwf	(___flmul@a+1)^0,c
 10103  00067C  0EA0               	movlw	160
 10104  00067E  6E21               	movwf	(___flmul@a+2)^0,c
 10105  000680  0E40               	movlw	64
 10106  000682  6E22               	movwf	(___flmul@a+3)^0,c
 10107  000684  ECBC  F00E         	call	___flmul	;wreg free
 10108  000688  C01B  F0AF         	movff	?___flmul,efgtoa@l
 10109  00068C  C01C  F0B0         	movff	?___flmul+1,efgtoa@l+1
 10110  000690  C01D  F0B1         	movff	?___flmul+2,efgtoa@l+2
 10111  000694  C01E  F0B2         	movff	?___flmul+3,efgtoa@l+3
 10112  000698                     
 10113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 10114  000698  C0AB  F034         	movff	efgtoa@h,___flge@ff1
 10115  00069C  C0AC  F035         	movff	efgtoa@h+1,___flge@ff1+1
 10116  0006A0  C0AD  F036         	movff	efgtoa@h+2,___flge@ff1+2
 10117  0006A4  C0AE  F037         	movff	efgtoa@h+3,___flge@ff1+3
 10118  0006A8  C0AF  F038         	movff	efgtoa@l,___flge@ff2
 10119  0006AC  C0B0  F039         	movff	efgtoa@l+1,___flge@ff2+1
 10120  0006B0  C0B1  F03A         	movff	efgtoa@l+2,___flge@ff2+2
 10121  0006B4  C0B2  F03B         	movff	efgtoa@l+3,___flge@ff2+3
 10122  0006B8  ECC3  F021         	call	___flge	;wreg free
 10123  0006BC  B0D8               	btfsc	status,0,c
 10124  0006BE  EF63  F003         	goto	u10391
 10125  0006C2  EF65  F003         	goto	u10390
 10126  0006C6                     u10391:
 10127  0006C6  EF70  F003         	goto	l9357
 10128  0006CA                     u10390:
 10129  0006CA                     
 10130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 10131  0006CA  0E00               	movlw	0
 10132  0006CC  0100               	movlb	0	; () banked
 10133  0006CE  6FAF               	movwf	efgtoa@l& (0+255),b
 10134  0006D0  0E00               	movlw	0
 10135  0006D2  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
 10136  0006D4  0E00               	movlw	0
 10137  0006D6  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
 10138  0006D8  0E00               	movlw	0
 10139  0006DA  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
 10140                           
 10141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
 10142  0006DC  EF99  F003         	goto	l9363
 10143  0006E0                     l9357:
 10144                           
 10145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 10146  0006E0  C0AB  F006         	movff	efgtoa@h,___fleq@ff1
 10147  0006E4  C0AC  F007         	movff	efgtoa@h+1,___fleq@ff1+1
 10148  0006E8  C0AD  F008         	movff	efgtoa@h+2,___fleq@ff1+2
 10149  0006EC  C0AE  F009         	movff	efgtoa@h+3,___fleq@ff1+3
 10150  0006F0  C0AF  F00A         	movff	efgtoa@l,___fleq@ff2
 10151  0006F4  C0B0  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
 10152  0006F8  C0B1  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
 10153  0006FC  C0B2  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
 10154  000700  ECD8  F025         	call	___fleq	;wreg free
 10155  000704  A0D8               	btfss	status,0,c
 10156  000706  EF87  F003         	goto	u10401
 10157  00070A  EF89  F003         	goto	u10400
 10158  00070E                     u10401:
 10159  00070E  EF99  F003         	goto	l9363
 10160  000712                     u10400:
 10161  000712  0100               	movlb	0	; () banked
 10162  000714  B1A1               	btfsc	efgtoa@d& (0+255),0,b
 10163  000716  EF8F  F003         	goto	u10411
 10164  00071A  EF91  F003         	goto	u10410
 10165  00071E                     u10411:
 10166  00071E  EF99  F003         	goto	l9363
 10167  000722                     u10410:
 10168  000722                     
 10169                           ; BSR set to: 0
 10170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 10171  000722  0E00               	movlw	0
 10172  000724  6FAF               	movwf	efgtoa@l& (0+255),b
 10173  000726  0E00               	movlw	0
 10174  000728  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
 10175  00072A  0E00               	movlw	0
 10176  00072C  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
 10177  00072E  0E00               	movlw	0
 10178  000730  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
 10179  000732                     l9363:
 10180                           
 10181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 10182  000732  C0B5  F034         	movff	efgtoa@g,___fladd@b
 10183  000736  C0B6  F035         	movff	efgtoa@g+1,___fladd@b+1
 10184  00073A  C0B7  F036         	movff	efgtoa@g+2,___fladd@b+2
 10185  00073E  C0B8  F037         	movff	efgtoa@g+3,___fladd@b+3
 10186  000742  C0AF  F038         	movff	efgtoa@l,___fladd@a
 10187  000746  C0B0  F039         	movff	efgtoa@l+1,___fladd@a+1
 10188  00074A  C0B1  F03A         	movff	efgtoa@l+2,___fladd@a+2
 10189  00074E  C0B2  F03B         	movff	efgtoa@l+3,___fladd@a+3
 10190  000752  EC5C  F00C         	call	___fladd	;wreg free
 10191  000756  C034  F0AB         	movff	?___fladd,efgtoa@h
 10192  00075A  C035  F0AC         	movff	?___fladd+1,efgtoa@h+1
 10193  00075E  C036  F0AD         	movff	?___fladd+2,efgtoa@h+2
 10194  000762  C037  F0AE         	movff	?___fladd+3,efgtoa@h+3
 10195  000766                     
 10196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 10197  000766  C089  F0BD         	movff	efgtoa@ou,efgtoa@u
 10198  00076A  C08A  F0BE         	movff	efgtoa@ou+1,efgtoa@u+1
 10199  00076E  C08B  F0BF         	movff	efgtoa@ou+2,efgtoa@u+2
 10200  000772  C08C  F0C0         	movff	efgtoa@ou+3,efgtoa@u+3
 10201  000776                     
 10202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 10203  000776  0E65               	movlw	101
 10204  000778  0100               	movlb	0	; () banked
 10205  00077A  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
 10206  00077C  B4D8               	btfsc	status,2,c
 10207  00077E  EFC3  F003         	goto	u10421
 10208  000782  EFC5  F003         	goto	u10420
 10209  000786                     u10421:
 10210  000786  EFCB  F003         	goto	l9371
 10211  00078A                     u10420:
 10212  00078A                     
 10213                           ; BSR set to: 0
 10214  00078A  C0B9  F09F         	movff	efgtoa@e,efgtoa@ne
 10215  00078E  C0BA  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
 10216  000792  EFCF  F003         	goto	l882
 10217  000796                     l9371:
 10218                           
 10219                           ; BSR set to: 0
 10220  000796  0E00               	movlw	0
 10221  000798  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
 10222  00079A  0E00               	movlw	0
 10223  00079C  6F9F               	movwf	efgtoa@ne& (0+255),b
 10224  00079E                     l882:
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 10228  00079E  0E00               	movlw	0
 10229  0007A0  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
 10230  0007A2  0E00               	movlw	0
 10231  0007A4  6F9B               	movwf	efgtoa@pp& (0+255),b
 10232                           
 10233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 10234  0007A6  0E00               	movlw	0
 10235  0007A8  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
 10236  0007AA  0E00               	movlw	0
 10237  0007AC  6F99               	movwf	efgtoa@t& (0+255),b
 10238                           
 10239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 10240  0007AE  0E00               	movlw	0
 10241  0007B0  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
 10242  0007B2  0E00               	movlw	0
 10243  0007B4  6FB3               	movwf	efgtoa@i& (0+255),b
 10244                           
 10245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10246  0007B6  EFCB  F004         	goto	l9421
 10247  0007BA                     l9373:
 10248                           
 10249                           ; BSR set to: 0
 10250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 10251  0007BA  C0AB  F044         	movff	efgtoa@h,___fldiv@b
 10252  0007BE  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
 10253  0007C2  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
 10254  0007C6  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
 10255  0007CA  C0BD  F048         	movff	efgtoa@u,___fldiv@a
 10256  0007CE  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
 10257  0007D2  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
 10258  0007D6  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
 10259  0007DA  EC97  F014         	call	___fldiv	;wreg free
 10260  0007DE  C044  F050         	movff	?___fldiv,floorf@x
 10261  0007E2  C045  F051         	movff	?___fldiv+1,floorf@x+1
 10262  0007E6  C046  F052         	movff	?___fldiv+2,floorf@x+2
 10263  0007EA  C047  F053         	movff	?___fldiv+3,floorf@x+3
 10264  0007EE  ECFD  F018         	call	_floorf	;wreg free
 10265  0007F2  C050  F0AF         	movff	?_floorf,efgtoa@l
 10266  0007F6  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
 10267  0007FA  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
 10268  0007FE  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
 10269                           
 10270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 10271  000802  C0AF  F072         	movff	efgtoa@l,___fltol@f1
 10272  000806  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
 10273  00080A  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
 10274  00080E  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
 10275  000812  EC3F  F021         	call	___fltol	;wreg free
 10276  000816  C072  F0A1         	movff	?___fltol,efgtoa@d
 10277  00081A  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
 10278  00081E                     
 10279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10280  00081E  B855               	btfsc	_flags^0,4,c
 10281  000820  EF14  F004         	goto	u10431
 10282  000824  EF16  F004         	goto	u10430
 10283  000828                     u10431:
 10284  000828  EF34  F004         	goto	l9385
 10285  00082C                     u10430:
 10286  00082C  0100               	movlb	0	; () banked
 10287  00082E  51A1               	movf	efgtoa@d& (0+255),w,b
 10288  000830  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
 10289  000832  A4D8               	btfss	status,2,c
 10290  000834  EF1E  F004         	goto	u10441
 10291  000838  EF20  F004         	goto	u10440
 10292  00083C                     u10441:
 10293  00083C  EF34  F004         	goto	l9385
 10294  000840                     u10440:
 10295  000840                     
 10296                           ; BSR set to: 0
 10297  000840  0E67               	movlw	103
 10298  000842  19AA               	xorwf	efgtoa@mode& (0+255),w,b
 10299  000844  A4D8               	btfss	status,2,c
 10300  000846  EF27  F004         	goto	u10451
 10301  00084A  EF29  F004         	goto	u10450
 10302  00084E                     u10451:
 10303  00084E  EF34  F004         	goto	l9385
 10304  000852                     u10450:
 10305  000852                     
 10306                           ; BSR set to: 0
 10307  000852  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10308  000854  EF30  F004         	goto	u10460
 10309  000858  EF2E  F004         	goto	u10461
 10310  00085C                     u10461:
 10311  00085C  EF34  F004         	goto	l9385
 10312  000860                     u10460:
 10313  000860                     
 10314                           ; BSR set to: 0
 10315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 10316  000860  4B99               	infsnz	efgtoa@t& (0+255),f,b
 10317  000862  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
 10318                           
 10319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 10320  000864  EF7F  F004         	goto	l9413
 10321  000868                     l9385:
 10322                           
 10323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 10324  000868  0100               	movlb	0	; () banked
 10325  00086A  519B               	movf	efgtoa@pp& (0+255),w,b
 10326  00086C  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10327  00086E  A4D8               	btfss	status,2,c
 10328  000870  EF3C  F004         	goto	u10471
 10329  000874  EF3E  F004         	goto	u10470
 10330  000878                     u10471:
 10331  000878  EF68  F004         	goto	l9405
 10332  00087C                     u10470:
 10333  00087C                     
 10334                           ; BSR set to: 0
 10335  00087C  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10336  00087E  EF45  F004         	goto	u10480
 10337  000882  EF43  F004         	goto	u10481
 10338  000886                     u10481:
 10339  000886  EF68  F004         	goto	l9405
 10340  00088A                     u10480:
 10341  00088A                     
 10342                           ; BSR set to: 0
 10343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 10344  00088A  0E42               	movlw	low _dbuf
 10345  00088C  25BB               	addwf	efgtoa@n& (0+255),w,b
 10346  00088E  6ED9               	movwf	fsr2l,c
 10347  000890  0E01               	movlw	high _dbuf
 10348  000892  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10349  000894  6EDA               	movwf	fsr2h,c
 10350  000896  0E2E               	movlw	46
 10351  000898  6EDF               	movwf	indf2,c
 10352  00089A                     
 10353                           ; BSR set to: 0
 10354  00089A  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10355  00089C  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10356  00089E                     
 10357                           ; BSR set to: 0
 10358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 10359  00089E  07A8               	decf	efgtoa@w& (0+255),f,b
 10360  0008A0  A0D8               	btfss	status,0,c
 10361  0008A2  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10362  0008A4                     
 10363                           ; BSR set to: 0
 10364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 10365  0008A4  0E00               	movlw	0
 10366  0008A6  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
 10367  0008A8  0E01               	movlw	1
 10368  0008AA  6F9B               	movwf	efgtoa@pp& (0+255),b
 10369  0008AC  EF68  F004         	goto	l9405
 10370  0008B0                     l9397:
 10371                           
 10372                           ; BSR set to: 0
 10373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 10374  0008B0  0E42               	movlw	low _dbuf
 10375  0008B2  25BB               	addwf	efgtoa@n& (0+255),w,b
 10376  0008B4  6ED9               	movwf	fsr2l,c
 10377  0008B6  0E01               	movlw	high _dbuf
 10378  0008B8  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10379  0008BA  6EDA               	movwf	fsr2h,c
 10380  0008BC  0E30               	movlw	48
 10381  0008BE  6EDF               	movwf	indf2,c
 10382  0008C0                     
 10383                           ; BSR set to: 0
 10384  0008C0  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10385  0008C2  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10386  0008C4                     
 10387                           ; BSR set to: 0
 10388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 10389  0008C4  07A8               	decf	efgtoa@w& (0+255),f,b
 10390  0008C6  A0D8               	btfss	status,0,c
 10391  0008C8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10392  0008CA                     
 10393                           ; BSR set to: 0
 10394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 10395  0008CA  0799               	decf	efgtoa@t& (0+255),f,b
 10396  0008CC  A0D8               	btfss	status,0,c
 10397  0008CE  079A               	decf	(efgtoa@t+1)& (0+255),f,b
 10398  0008D0                     l9405:
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 10402  0008D0  5199               	movf	efgtoa@t& (0+255),w,b
 10403  0008D2  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10404  0008D4  A4D8               	btfss	status,2,c
 10405  0008D6  EF6F  F004         	goto	u10491
 10406  0008DA  EF71  F004         	goto	u10490
 10407  0008DE                     u10491:
 10408  0008DE  EF58  F004         	goto	l9397
 10409  0008E2                     u10490:
 10410  0008E2                     
 10411                           ; BSR set to: 0
 10412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 10413  0008E2  0E42               	movlw	low _dbuf
 10414  0008E4  25BB               	addwf	efgtoa@n& (0+255),w,b
 10415  0008E6  6ED9               	movwf	fsr2l,c
 10416  0008E8  0E01               	movlw	high _dbuf
 10417  0008EA  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10418  0008EC  6EDA               	movwf	fsr2h,c
 10419  0008EE  51A1               	movf	efgtoa@d& (0+255),w,b
 10420  0008F0  0F30               	addlw	48
 10421  0008F2  6EDF               	movwf	indf2,c
 10422  0008F4                     
 10423                           ; BSR set to: 0
 10424  0008F4  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10425  0008F6  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10426  0008F8                     
 10427                           ; BSR set to: 0
 10428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 10429  0008F8  07A8               	decf	efgtoa@w& (0+255),f,b
 10430  0008FA  A0D8               	btfss	status,0,c
 10431  0008FC  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10432  0008FE                     l9413:
 10433                           
 10434                           ; BSR set to: 0
 10435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 10436  0008FE  C0AB  F044         	movff	efgtoa@h,___flsub@b
 10437  000902  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
 10438  000906  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
 10439  00090A  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
 10440  00090E  C0BD  F01F         	movff	efgtoa@u,___flmul@a
 10441  000912  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
 10442  000916  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
 10443  00091A  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
 10444  00091E  C0AF  F01B         	movff	efgtoa@l,___flmul@b
 10445  000922  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
 10446  000926  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
 10447  00092A  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
 10448  00092E  ECBC  F00E         	call	___flmul	;wreg free
 10449  000932  C01B  F048         	movff	?___flmul,___flsub@a
 10450  000936  C01C  F049         	movff	?___flmul+1,___flsub@a+1
 10451  00093A  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
 10452  00093E  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
 10453  000942  EC6B  F02A         	call	___flsub	;wreg free
 10454  000946  C044  F0AB         	movff	?___flsub,efgtoa@h
 10455  00094A  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
 10456  00094E  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
 10457  000952  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
 10458  000956                     
 10459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 10460  000956  C0BD  F044         	movff	efgtoa@u,___fldiv@b
 10461  00095A  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
 10462  00095E  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
 10463  000962  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
 10464  000966  0E00               	movlw	0
 10465  000968  6E48               	movwf	___fldiv@a^0,c
 10466  00096A  0E00               	movlw	0
 10467  00096C  6E49               	movwf	(___fldiv@a+1)^0,c
 10468  00096E  0E20               	movlw	32
 10469  000970  6E4A               	movwf	(___fldiv@a+2)^0,c
 10470  000972  0E41               	movlw	65
 10471  000974  6E4B               	movwf	(___fldiv@a+3)^0,c
 10472  000976  EC97  F014         	call	___fldiv	;wreg free
 10473  00097A  C044  F0BD         	movff	?___fldiv,efgtoa@u
 10474  00097E  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
 10475  000982  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
 10476  000986  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
 10477  00098A                     
 10478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 10479  00098A  0100               	movlb	0	; () banked
 10480  00098C  079F               	decf	efgtoa@ne& (0+255),f,b
 10481  00098E  A0D8               	btfss	status,0,c
 10482  000990  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
 10483  000992                     
 10484                           ; BSR set to: 0
 10485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 10486  000992  4BB3               	infsnz	efgtoa@i& (0+255),f,b
 10487  000994  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
 10488  000996                     l9421:
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10492  000996  519D               	movf	efgtoa@m& (0+255),w,b
 10493  000998  5DB3               	subwf	efgtoa@i& (0+255),w,b
 10494  00099A  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
 10495  00099C  0A80               	xorlw	128
 10496  00099E  6F84               	movwf	??_efgtoa& (0+255),b
 10497  0009A0  519E               	movf	(efgtoa@m+1)& (0+255),w,b
 10498  0009A2  0A80               	xorlw	128
 10499  0009A4  5984               	subwfb	??_efgtoa& (0+255),w,b
 10500  0009A6  B0D8               	btfsc	status,0,c
 10501  0009A8  EFD8  F004         	goto	u10501
 10502  0009AC  EFDA  F004         	goto	u10500
 10503  0009B0                     u10501:
 10504  0009B0  EFE8  F004         	goto	l9425
 10505  0009B4                     u10500:
 10506  0009B4                     
 10507                           ; BSR set to: 0
 10508  0009B4  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10509  0009B6  EFE6  F004         	goto	u10511
 10510  0009BA  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
 10511  0009BC  E109               	bnz	u10510
 10512  0009BE  0E4B               	movlw	75
 10513  0009C0  5DBB               	subwf	efgtoa@n& (0+255),w,b
 10514  0009C2  A0D8               	btfss	status,0,c
 10515  0009C4  EFE6  F004         	goto	u10511
 10516  0009C8  EFE8  F004         	goto	u10510
 10517  0009CC                     u10511:
 10518  0009CC  EFDD  F003         	goto	l9373
 10519  0009D0                     u10510:
 10520  0009D0                     l9425:
 10521                           
 10522                           ; BSR set to: 0
 10523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 10524  0009D0  519B               	movf	efgtoa@pp& (0+255),w,b
 10525  0009D2  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10526  0009D4  A4D8               	btfss	status,2,c
 10527  0009D6  EFEF  F004         	goto	u10521
 10528  0009DA  EFF1  F004         	goto	u10520
 10529  0009DE                     u10521:
 10530  0009DE  EF02  F005         	goto	l9433
 10531  0009E2                     u10520:
 10532  0009E2                     
 10533                           ; BSR set to: 0
 10534  0009E2  A855               	btfss	_flags^0,4,c
 10535  0009E4  EFF6  F004         	goto	u10531
 10536  0009E8  EFF8  F004         	goto	u10530
 10537  0009EC                     u10531:
 10538  0009EC  EF02  F005         	goto	l9433
 10539  0009F0                     u10530:
 10540  0009F0                     
 10541                           ; BSR set to: 0
 10542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 10543  0009F0  0E42               	movlw	low _dbuf
 10544  0009F2  25BB               	addwf	efgtoa@n& (0+255),w,b
 10545  0009F4  6ED9               	movwf	fsr2l,c
 10546  0009F6  0E01               	movlw	high _dbuf
 10547  0009F8  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10548  0009FA  6EDA               	movwf	fsr2h,c
 10549  0009FC  0E2E               	movlw	46
 10550  0009FE  6EDF               	movwf	indf2,c
 10551  000A00                     
 10552                           ; BSR set to: 0
 10553  000A00  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10554  000A02  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10555  000A04                     l9433:
 10556                           
 10557                           ; BSR set to: 0
 10558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 10559  000A04  0E42               	movlw	low _dbuf
 10560  000A06  25BB               	addwf	efgtoa@n& (0+255),w,b
 10561  000A08  6ED9               	movwf	fsr2l,c
 10562  000A0A  0E01               	movlw	high _dbuf
 10563  000A0C  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10564  000A0E  6EDA               	movwf	fsr2h,c
 10565  000A10  0E00               	movlw	0
 10566  000A12  6EDF               	movwf	indf2,c
 10567  000A14                     
 10568                           ; BSR set to: 0
 10569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 10570  000A14  0E65               	movlw	101
 10571  000A16  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
 10572  000A18  A4D8               	btfss	status,2,c
 10573  000A1A  EF11  F005         	goto	u10541
 10574  000A1E  EF13  F005         	goto	u10540
 10575  000A22                     u10541:
 10576  000A22  EFBC  F000         	goto	l9245
 10577  000A26                     u10540:
 10578  000A26                     
 10579                           ; BSR set to: 0
 10580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10581  000A26  0E00               	movlw	0
 10582  000A28  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
 10583  000A2A  0E4F               	movlw	79
 10584  000A2C  6FB3               	movwf	efgtoa@i& (0+255),b
 10585  000A2E                     
 10586                           ; BSR set to: 0
 10587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10588  000A2E  0E42               	movlw	low _dbuf
 10589  000A30  25B3               	addwf	efgtoa@i& (0+255),w,b
 10590  000A32  6ED9               	movwf	fsr2l,c
 10591  000A34  0E01               	movlw	high _dbuf
 10592  000A36  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10593  000A38  6EDA               	movwf	fsr2h,c
 10594  000A3A  0E00               	movlw	0
 10595  000A3C  6EDF               	movwf	indf2,c
 10596  000A3E                     
 10597                           ; BSR set to: 0
 10598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10599  000A3E  0E00               	movlw	0
 10600  000A40  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
 10601  000A42  0E00               	movlw	0
 10602  000A44  6FA3               	movwf	efgtoa@sign& (0+255),b
 10603  000A46                     
 10604                           ; BSR set to: 0
 10605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10606  000A46  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10607  000A48  EF2A  F005         	goto	u10550
 10608  000A4C  EF28  F005         	goto	u10551
 10609  000A50                     u10551:
 10610  000A50  EF32  F005         	goto	l9449
 10611  000A54                     u10550:
 10612  000A54                     
 10613                           ; BSR set to: 0
 10614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10615  000A54  0E00               	movlw	0
 10616  000A56  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
 10617  000A58  0E01               	movlw	1
 10618  000A5A  6FA3               	movwf	efgtoa@sign& (0+255),b
 10619  000A5C                     
 10620                           ; BSR set to: 0
 10621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10622  000A5C  6DB9               	negf	efgtoa@e& (0+255),b
 10623  000A5E  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
 10624  000A60  B0D8               	btfsc	status,0,c
 10625  000A62  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
 10626  000A64                     l9449:
 10627                           
 10628                           ; BSR set to: 0
 10629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10630  000A64  0E00               	movlw	0
 10631  000A66  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
 10632  000A68  0E02               	movlw	2
 10633  000A6A  6FA5               	movwf	efgtoa@p& (0+255),b
 10634                           
 10635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10636  000A6C  EF63  F005         	goto	l9461
 10637  000A70                     l9451:
 10638                           
 10639                           ; BSR set to: 0
 10640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10641  000A70  07B3               	decf	efgtoa@i& (0+255),f,b
 10642  000A72  A0D8               	btfss	status,0,c
 10643  000A74  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10644  000A76                     
 10645                           ; BSR set to: 0
 10646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10647  000A76  0E42               	movlw	low _dbuf
 10648  000A78  25B3               	addwf	efgtoa@i& (0+255),w,b
 10649  000A7A  6ED9               	movwf	fsr2l,c
 10650  000A7C  0E01               	movlw	high _dbuf
 10651  000A7E  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10652  000A80  6EDA               	movwf	fsr2h,c
 10653  000A82  C0B9  F006         	movff	efgtoa@e,___awmod@dividend
 10654  000A86  C0BA  F007         	movff	efgtoa@e+1,___awmod@dividend+1
 10655  000A8A  0E00               	movlw	0
 10656  000A8C  6E09               	movwf	(___awmod@divisor+1)^0,c
 10657  000A8E  0E0A               	movlw	10
 10658  000A90  6E08               	movwf	___awmod@divisor^0,c
 10659  000A92  ECD4  F024         	call	___awmod	;wreg free
 10660  000A96  5006               	movf	?___awmod^0,w,c
 10661  000A98  0F30               	addlw	48
 10662  000A9A  6EDF               	movwf	indf2,c
 10663  000A9C                     
 10664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10665  000A9C  C0B9  F006         	movff	efgtoa@e,___awdiv@dividend
 10666  000AA0  C0BA  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
 10667  000AA4  0E00               	movlw	0
 10668  000AA6  6E09               	movwf	(___awdiv@divisor+1)^0,c
 10669  000AA8  0E0A               	movlw	10
 10670  000AAA  6E08               	movwf	___awdiv@divisor^0,c
 10671  000AAC  EC11  F024         	call	___awdiv	;wreg free
 10672  000AB0  C006  F0B9         	movff	?___awdiv,efgtoa@e
 10673  000AB4  C007  F0BA         	movff	?___awdiv+1,efgtoa@e+1
 10674  000AB8                     
 10675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10676  000AB8  0100               	movlb	0	; () banked
 10677  000ABA  07A5               	decf	efgtoa@p& (0+255),f,b
 10678  000ABC  A0D8               	btfss	status,0,c
 10679  000ABE  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
 10680  000AC0                     
 10681                           ; BSR set to: 0
 10682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10683  000AC0  07A8               	decf	efgtoa@w& (0+255),f,b
 10684  000AC2  A0D8               	btfss	status,0,c
 10685  000AC4  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10686  000AC6                     l9461:
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10690  000AC6  51B9               	movf	efgtoa@e& (0+255),w,b
 10691  000AC8  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10692  000ACA  A4D8               	btfss	status,2,c
 10693  000ACC  EF6A  F005         	goto	u10561
 10694  000AD0  EF6C  F005         	goto	u10560
 10695  000AD4                     u10561:
 10696  000AD4  EF38  F005         	goto	l9451
 10697  000AD8                     u10560:
 10698  000AD8                     
 10699                           ; BSR set to: 0
 10700  000AD8  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10701  000ADA  EF79  F005         	goto	u10570
 10702  000ADE  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
 10703  000AE0  E106               	bnz	u10571
 10704  000AE2  05A5               	decf	efgtoa@p& (0+255),w,b
 10705  000AE4  B0D8               	btfsc	status,0,c
 10706  000AE6  EF77  F005         	goto	u10571
 10707  000AEA  EF79  F005         	goto	u10570
 10708  000AEE                     u10571:
 10709  000AEE  EF38  F005         	goto	l9451
 10710  000AF2                     u10570:
 10711  000AF2                     
 10712                           ; BSR set to: 0
 10713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10714  000AF2  07B3               	decf	efgtoa@i& (0+255),f,b
 10715  000AF4  A0D8               	btfss	status,0,c
 10716  000AF6  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10717  000AF8                     
 10718                           ; BSR set to: 0
 10719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10720  000AF8  51A3               	movf	efgtoa@sign& (0+255),w,b
 10721  000AFA  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10722  000AFC  A4D8               	btfss	status,2,c
 10723  000AFE  EF83  F005         	goto	u10581
 10724  000B02  EF85  F005         	goto	u10580
 10725  000B06                     u10581:
 10726  000B06  EF8B  F005         	goto	l9471
 10727  000B0A                     u10580:
 10728  000B0A                     
 10729                           ; BSR set to: 0
 10730  000B0A  0E00               	movlw	0
 10731  000B0C  6F94               	movwf	(_efgtoa$932+1)& (0+255),b
 10732  000B0E  0E2B               	movlw	43
 10733  000B10  6F93               	movwf	_efgtoa$932& (0+255),b
 10734  000B12  EF8F  F005         	goto	l9473
 10735  000B16                     l9471:
 10736                           
 10737                           ; BSR set to: 0
 10738  000B16  0E00               	movlw	0
 10739  000B18  6F94               	movwf	(_efgtoa$932+1)& (0+255),b
 10740  000B1A  0E2D               	movlw	45
 10741  000B1C  6F93               	movwf	_efgtoa$932& (0+255),b
 10742  000B1E                     l9473:
 10743                           
 10744                           ; BSR set to: 0
 10745  000B1E  0E42               	movlw	low _dbuf
 10746  000B20  25B3               	addwf	efgtoa@i& (0+255),w,b
 10747  000B22  6ED9               	movwf	fsr2l,c
 10748  000B24  0E01               	movlw	high _dbuf
 10749  000B26  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10750  000B28  6EDA               	movwf	fsr2h,c
 10751  000B2A  C093  FFDF         	movff	_efgtoa$932,indf2
 10752  000B2E                     
 10753                           ; BSR set to: 0
 10754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10755  000B2E  07A8               	decf	efgtoa@w& (0+255),f,b
 10756  000B30  A0D8               	btfss	status,0,c
 10757  000B32  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10758  000B34                     
 10759                           ; BSR set to: 0
 10760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10761  000B34  07B3               	decf	efgtoa@i& (0+255),f,b
 10762  000B36  A0D8               	btfss	status,0,c
 10763  000B38  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10764  000B3A                     
 10765                           ; BSR set to: 0
 10766  000B3A  0EBF               	movlw	191
 10767  000B3C  6F84               	movwf	??_efgtoa& (0+255),b
 10768  000B3E  0EFF               	movlw	255
 10769  000B40  6F85               	movwf	(??_efgtoa+1)& (0+255),b
 10770  000B42  5183               	movf	efgtoa@c& (0+255),w,b
 10771  000B44  6F86               	movwf	(??_efgtoa+2)& (0+255),b
 10772  000B46  6B87               	clrf	(??_efgtoa+3)& (0+255),b
 10773  000B48  5184               	movf	??_efgtoa& (0+255),w,b
 10774  000B4A  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
 10775  000B4C  5185               	movf	(??_efgtoa+1)& (0+255),w,b
 10776  000B4E  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10777  000B50  5187               	movf	(??_efgtoa+3)& (0+255),w,b
 10778  000B52  E10A               	bnz	u10590
 10779  000B54  0E1A               	movlw	26
 10780  000B56  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
 10781  000B58  A0D8               	btfss	status,0,c
 10782  000B5A  EFB1  F005         	goto	u10591
 10783  000B5E  EFB4  F005         	goto	u10590
 10784  000B62                     u10591:
 10785  000B62  0E01               	movlw	1
 10786  000B64  EFB5  F005         	goto	u10600
 10787  000B68                     u10590:
 10788  000B68  0E00               	movlw	0
 10789  000B6A                     u10600:
 10790  000B6A  6F97               	movwf	_efgtoa$934& (0+255),b
 10791  000B6C  6B98               	clrf	(_efgtoa$934+1)& (0+255),b
 10792  000B6E                     
 10793                           ; BSR set to: 0
 10794  000B6E  5197               	movf	_efgtoa$934& (0+255),w,b
 10795  000B70  1198               	iorwf	(_efgtoa$934+1)& (0+255),w,b
 10796  000B72  A4D8               	btfss	status,2,c
 10797  000B74  EFBE  F005         	goto	u10611
 10798  000B78  EFC0  F005         	goto	u10610
 10799  000B7C                     u10611:
 10800  000B7C  EFC6  F005         	goto	l9487
 10801  000B80                     u10610:
 10802  000B80                     
 10803                           ; BSR set to: 0
 10804  000B80  0E00               	movlw	0
 10805  000B82  6F96               	movwf	(_efgtoa$933+1)& (0+255),b
 10806  000B84  0E65               	movlw	101
 10807  000B86  6F95               	movwf	_efgtoa$933& (0+255),b
 10808  000B88  EFCA  F005         	goto	l9489
 10809  000B8C                     l9487:
 10810                           
 10811                           ; BSR set to: 0
 10812  000B8C  0E00               	movlw	0
 10813  000B8E  6F96               	movwf	(_efgtoa$933+1)& (0+255),b
 10814  000B90  0E45               	movlw	69
 10815  000B92  6F95               	movwf	_efgtoa$933& (0+255),b
 10816  000B94                     l9489:
 10817                           
 10818                           ; BSR set to: 0
 10819  000B94  0E42               	movlw	low _dbuf
 10820  000B96  25B3               	addwf	efgtoa@i& (0+255),w,b
 10821  000B98  6ED9               	movwf	fsr2l,c
 10822  000B9A  0E01               	movlw	high _dbuf
 10823  000B9C  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10824  000B9E  6EDA               	movwf	fsr2h,c
 10825  000BA0  C095  FFDF         	movff	_efgtoa$933,indf2
 10826  000BA4                     
 10827                           ; BSR set to: 0
 10828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10829  000BA4  07A8               	decf	efgtoa@w& (0+255),f,b
 10830  000BA6  A0D8               	btfss	status,0,c
 10831  000BA8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10832  000BAA                     
 10833                           ; BSR set to: 0
 10834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10835  000BAA  0E42               	movlw	low _dbuf
 10836  000BAC  25BB               	addwf	efgtoa@n& (0+255),w,b
 10837  000BAE  6E06               	movwf	strcpy@dest^0,c
 10838  000BB0  0E01               	movlw	high _dbuf
 10839  000BB2  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10840  000BB4  6E07               	movwf	(strcpy@dest+1)^0,c
 10841  000BB6  0E42               	movlw	low _dbuf
 10842  000BB8  25B3               	addwf	efgtoa@i& (0+255),w,b
 10843  000BBA  6E08               	movwf	strcpy@src^0,c
 10844  000BBC  0E01               	movlw	high _dbuf
 10845  000BBE  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10846  000BC0  6E09               	movwf	(strcpy@src+1)^0,c
 10847  000BC2  EC80  F028         	call	_strcpy	;wreg free
 10848  000BC6  EFBC  F000         	goto	l9245
 10849  000BCA                     l838:
 10850  000BCA  0012               	return		;funcret
 10851  000BCC                     __end_of_efgtoa:
 10852                           	opt callstack 0
 10853                           
 10854 ;; *************** function _tolower *****************
 10855 ;; Defined at:
 10856 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;  c               2   11[COMRAM] int 
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;		None
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  2   11[COMRAM] int 
 10863 ;; Registers used:
 10864 ;;		wreg, status,2, status,0
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10870 ;;      Params:         2       0       0       0       0       0       0       0       0
 10871 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10872 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10873 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10874 ;;Total ram usage:        8 bytes
 10875 ;; Hardware stack levels used:    1
 10876 ;; Hardware stack levels required when called:    3
 10877 ;; This function calls:
 10878 ;;		_isupper
 10879 ;; This function is called by:
 10880 ;;		_efgtoa
 10881 ;;		_vfpfcnvrt
 10882 ;; This function uses a non-reentrant model
 10883 ;;
 10884                           
 10885                           	psect	text36
 10886  005042                     __ptext36:
 10887                           	opt callstack 0
 10888  005042                     _tolower:
 10889                           	opt callstack 23
 10890  005042  0EBF               	movlw	191
 10891  005044  6E0E               	movwf	??_tolower^0,c
 10892  005046  0EFF               	movlw	255
 10893  005048  6E0F               	movwf	(??_tolower+1)^0,c
 10894  00504A  C00C  F010         	movff	tolower@c,??_tolower+2
 10895  00504E  C00D  F011         	movff	tolower@c+1,??_tolower+3
 10896  005052  500E               	movf	??_tolower^0,w,c
 10897  005054  2610               	addwf	(??_tolower+2)^0,f,c
 10898  005056  500F               	movf	(??_tolower+1)^0,w,c
 10899  005058  2211               	addwfc	(??_tolower+3)^0,f,c
 10900  00505A  5011               	movf	(??_tolower+3)^0,w,c
 10901  00505C  E10A               	bnz	u8810
 10902  00505E  0E1A               	movlw	26
 10903  005060  5C10               	subwf	(??_tolower+2)^0,w,c
 10904  005062  A0D8               	btfss	status,0,c
 10905  005064  EF36  F028         	goto	u8811
 10906  005068  EF39  F028         	goto	u8810
 10907  00506C                     u8811:
 10908  00506C  0E01               	movlw	1
 10909  00506E  EF3A  F028         	goto	u8820
 10910  005072                     u8810:
 10911  005072  0E00               	movlw	0
 10912  005074                     u8820:
 10913  005074  6E12               	movwf	_tolower$1557^0,c
 10914  005076  6A13               	clrf	(_tolower$1557+1)^0,c
 10915  005078  5012               	movf	_tolower$1557^0,w,c
 10916  00507A  1013               	iorwf	(_tolower$1557+1)^0,w,c
 10917  00507C  B4D8               	btfsc	status,2,c
 10918  00507E  EF43  F028         	goto	u8831
 10919  005082  EF45  F028         	goto	u8830
 10920  005086                     u8831:
 10921  005086  EF4C  F028         	goto	l1773
 10922  00508A                     u8830:
 10923  00508A  0E20               	movlw	32
 10924  00508C  100C               	iorwf	tolower@c^0,w,c
 10925  00508E  6E0C               	movwf	?_tolower^0,c
 10926  005090  500D               	movf	(tolower@c+1)^0,w,c
 10927  005092  6E0D               	movwf	(?_tolower+1)^0,c
 10928  005094  EF50  F028         	goto	l1778
 10929  005098                     l1773:
 10930  005098  C00C  F00C         	movff	tolower@c,?_tolower
 10931  00509C  C00D  F00D         	movff	tolower@c+1,?_tolower+1
 10932  0050A0                     l1778:
 10933  0050A0  0012               	return		;funcret
 10934  0050A2                     __end_of_tolower:
 10935                           	opt callstack 0
 10936                           
 10937 ;; *************** function _isupper *****************
 10938 ;; Defined at:
 10939 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;  c               2    5[COMRAM] int 
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;		None
 10944 ;; Return value:  Size  Location     Type
 10945 ;;                  2    5[COMRAM] int 
 10946 ;; Registers used:
 10947 ;;		wreg, status,2, status,0
 10948 ;; Tracked objects:
 10949 ;;		On entry : 0/0
 10950 ;;		On exit  : 0/0
 10951 ;;		Unchanged: 0/0
 10952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10953 ;;      Params:         2       0       0       0       0       0       0       0       0
 10954 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10955 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10956 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10957 ;;Total ram usage:        6 bytes
 10958 ;; Hardware stack levels used:    1
 10959 ;; Hardware stack levels required when called:    2
 10960 ;; This function calls:
 10961 ;;		Nothing
 10962 ;; This function is called by:
 10963 ;;		_efgtoa
 10964 ;;		_vfpfcnvrt
 10965 ;;		_tolower
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           	psect	text37
 10970  005626                     __ptext37:
 10971                           	opt callstack 0
 10972  005626                     _isupper:
 10973                           	opt callstack 23
 10974  005626  0EBF               	movlw	191
 10975  005628  6E08               	movwf	??_isupper^0,c
 10976  00562A  0EFF               	movlw	255
 10977  00562C  6E09               	movwf	(??_isupper+1)^0,c
 10978  00562E  C006  F00A         	movff	isupper@c,??_isupper+2
 10979  005632  C007  F00B         	movff	isupper@c+1,??_isupper+3
 10980  005636  5008               	movf	??_isupper^0,w,c
 10981  005638  260A               	addwf	(??_isupper+2)^0,f,c
 10982  00563A  5009               	movf	(??_isupper+1)^0,w,c
 10983  00563C  220B               	addwfc	(??_isupper+3)^0,f,c
 10984  00563E  500B               	movf	(??_isupper+3)^0,w,c
 10985  005640  E10A               	bnz	u8180
 10986  005642  0E1A               	movlw	26
 10987  005644  5C0A               	subwf	(??_isupper+2)^0,w,c
 10988  005646  A0D8               	btfss	status,0,c
 10989  005648  EF28  F02B         	goto	u8181
 10990  00564C  EF2B  F02B         	goto	u8180
 10991  005650                     u8181:
 10992  005650  0E01               	movlw	1
 10993  005652  EF2C  F02B         	goto	u8190
 10994  005656                     u8180:
 10995  005656  0E00               	movlw	0
 10996  005658                     u8190:
 10997  005658  6E06               	movwf	?_isupper^0,c
 10998  00565A  6A07               	clrf	(?_isupper+1)^0,c
 10999  00565C  0012               	return		;funcret
 11000  00565E                     __end_of_isupper:
 11001                           	opt callstack 0
 11002                           
 11003 ;; *************** function _strcpy *****************
 11004 ;; Defined at:
 11005 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;  dest            2    5[COMRAM] PTR unsigned char 
 11008 ;;		 -> dbuf(80), 
 11009 ;;  src             2    7[COMRAM] PTR const unsigned char 
 11010 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
 11011 ;;		 -> dbuf(80), 
 11012 ;; Auto vars:     Size  Location     Type
 11013 ;;  d               2   13[COMRAM] PTR unsigned char 
 11014 ;;		 -> dbuf(80), 
 11015 ;;  s               2   11[COMRAM] PTR const unsigned char 
 11016 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
 11017 ;;		 -> dbuf(80), 
 11018 ;; Return value:  Size  Location     Type
 11019 ;;                  2    5[COMRAM] PTR unsigned char 
 11020 ;; Registers used:
 11021 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/0
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11027 ;;      Params:         4       0       0       0       0       0       0       0       0
 11028 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11029 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11030 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11031 ;;Total ram usage:       10 bytes
 11032 ;; Hardware stack levels used:    1
 11033 ;; Hardware stack levels required when called:    2
 11034 ;; This function calls:
 11035 ;;		Nothing
 11036 ;; This function is called by:
 11037 ;;		_efgtoa
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text38
 11042  005100                     __ptext38:
 11043                           	opt callstack 0
 11044  005100                     _strcpy:
 11045                           	opt callstack 23
 11046  005100  C008  F00C         	movff	strcpy@src,strcpy@s
 11047  005104  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
 11048  005108  C006  F00E         	movff	strcpy@dest,strcpy@d
 11049  00510C  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
 11050  005110                     l8475:
 11051  005110  500C               	movf	strcpy@s^0,w,c
 11052  005112  6E0A               	movwf	??_strcpy^0,c
 11053  005114  500D               	movf	(strcpy@s+1)^0,w,c
 11054  005116  6E0B               	movwf	(??_strcpy+1)^0,c
 11055  005118  4A0C               	infsnz	strcpy@s^0,f,c
 11056  00511A  2A0D               	incf	(strcpy@s+1)^0,f,c
 11057  00511C  C00A  FFF6         	movff	??_strcpy,tblptrl
 11058  005120  C00B  FFF7         	movff	??_strcpy+1,tblptrh
 11059  005124  6AF8               	clrf	tblptru,c
 11060  005126  C00E  FFD9         	movff	strcpy@d,fsr2l
 11061  00512A  C00F  FFDA         	movff	strcpy@d+1,fsr2h
 11062  00512E  4A0E               	infsnz	strcpy@d^0,f,c
 11063  005130  2A0F               	incf	(strcpy@d+1)^0,f,c
 11064  005132  0E07               	movlw	(high __ramtop+-1)
 11065  005134  64F7               	cpfsgt	tblptrh,c
 11066  005136  D003               	bra	u8797
 11067  005138  0008               	tblrd		*
 11068  00513A  50F5               	movf	tablat,w,c
 11069  00513C  D005               	bra	u8790
 11070  00513E                     u8797:
 11071  00513E  CFF6 FFE9          	movff	tblptrl,fsr0l
 11072  005142  CFF7 FFEA          	movff	tblptrh,fsr0h
 11073  005146  50EF               	movf	indf0,w,c
 11074  005148                     u8790:
 11075  005148  6EDF               	movwf	indf2,c
 11076  00514A  50DF               	movf	indf2,w,c
 11077  00514C  A4D8               	btfss	status,2,c
 11078  00514E  EFAB  F028         	goto	u8801
 11079  005152  EFAD  F028         	goto	u8800
 11080  005156                     u8801:
 11081  005156  EF88  F028         	goto	l8475
 11082  00515A                     u8800:
 11083  00515A  0012               	return		;funcret
 11084  00515C                     __end_of_strcpy:
 11085                           	opt callstack 0
 11086                           
 11087 ;; *************** function _floorf *****************
 11088 ;; Defined at:
 11089 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;  x               4   79[COMRAM] float 
 11092 ;; Auto vars:     Size  Location     Type
 11093 ;;  u               4   25[BANK0 ] struct .
 11094 ;;  m               4   19[BANK0 ] unsigned long 
 11095 ;;  e               2   23[BANK0 ] int 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  4   79[COMRAM] float 
 11098 ;; Registers used:
 11099 ;;		wreg, status,2, status,0
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11105 ;;      Params:         4       0       0       0       0       0       0       0       0
 11106 ;;      Locals:         0      10       0       0       0       0       0       0       0
 11107 ;;      Temps:          0       6       0       0       0       0       0       0       0
 11108 ;;      Totals:         4      16       0       0       0       0       0       0       0
 11109 ;;Total ram usage:       20 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; Hardware stack levels required when called:    2
 11112 ;; This function calls:
 11113 ;;		Nothing
 11114 ;; This function is called by:
 11115 ;;		_efgtoa
 11116 ;; This function uses a non-reentrant model
 11117 ;;
 11118                           
 11119                           	psect	text39
 11120  0031FA                     __ptext39:
 11121                           	opt callstack 0
 11122  0031FA                     _floorf:
 11123                           	opt callstack 23
 11124  0031FA  C104  F079         	movff	floorf@F524,floorf@u
 11125  0031FE  C105  F07A         	movff	floorf@F524+1,floorf@u+1
 11126  003202  C106  F07B         	movff	floorf@F524+2,floorf@u+2
 11127  003206  C107  F07C         	movff	floorf@F524+3,floorf@u+3
 11128  00320A  C050  F079         	movff	floorf@x,floorf@u
 11129  00320E  C051  F07A         	movff	floorf@x+1,floorf@u+1
 11130  003212  C052  F07B         	movff	floorf@x+2,floorf@u+2
 11131  003216  C053  F07C         	movff	floorf@x+3,floorf@u+3
 11132  00321A  0E81               	movlw	129
 11133  00321C  0100               	movlb	0	; () banked
 11134  00321E  6F6D               	movwf	??_floorf& (0+255),b
 11135  003220  0EFF               	movlw	255
 11136  003222  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11137  003224  C079  F06F         	movff	floorf@u,??_floorf+2
 11138  003228  C07A  F070         	movff	floorf@u+1,??_floorf+3
 11139  00322C  C07B  F071         	movff	floorf@u+2,??_floorf+4
 11140  003230  C07C  F072         	movff	floorf@u+3,??_floorf+5
 11141  003234  0E18               	movlw	24
 11142  003236  EF22  F019         	goto	u8840
 11143  00323A                     u8845:
 11144  00323A  90D8               	bcf	status,0,c
 11145  00323C  3372               	rrcf	(??_floorf+5)& (0+255),f,b
 11146  00323E  3371               	rrcf	(??_floorf+4)& (0+255),f,b
 11147  003240  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11148  003242  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11149  003244                     u8840:
 11150  003244  2EE8               	decfsz	wreg,f,c
 11151  003246  EF1D  F019         	goto	u8845
 11152  00324A  516F               	movf	(??_floorf+2)& (0+255),w,b
 11153  00324C  256D               	addwf	??_floorf& (0+255),w,b
 11154  00324E  6F77               	movwf	floorf@e& (0+255),b
 11155  003250  0E00               	movlw	0
 11156  003252  216E               	addwfc	(??_floorf+1)& (0+255),w,b
 11157  003254  6F78               	movwf	(floorf@e+1)& (0+255),b
 11158  003256  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
 11159  003258  EF37  F019         	goto	u8851
 11160  00325C  5178               	movf	(floorf@e+1)& (0+255),w,b
 11161  00325E  E109               	bnz	u8850
 11162  003260  0E17               	movlw	23
 11163  003262  5D77               	subwf	floorf@e& (0+255),w,b
 11164  003264  A0D8               	btfss	status,0,c
 11165  003266  EF37  F019         	goto	u8851
 11166  00326A  EF39  F019         	goto	u8850
 11167  00326E                     u8851:
 11168  00326E  EF43  F019         	goto	l8493
 11169  003272                     u8850:
 11170  003272                     l8491:
 11171                           
 11172                           ; BSR set to: 0
 11173  003272  C050  F050         	movff	floorf@x,?_floorf
 11174  003276  C051  F051         	movff	floorf@x+1,?_floorf+1
 11175  00327A  C052  F052         	movff	floorf@x+2,?_floorf+2
 11176  00327E  C053  F053         	movff	floorf@x+3,?_floorf+3
 11177  003282  EF07  F01A         	goto	l1675
 11178  003286                     l8493:
 11179                           
 11180                           ; BSR set to: 0
 11181  003286  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
 11182  003288  EF48  F019         	goto	u8861
 11183  00328C  EF4A  F019         	goto	u8860
 11184  003290                     u8861:
 11185  003290  EFBB  F019         	goto	l8503
 11186  003294                     u8860:
 11187  003294                     
 11188                           ; BSR set to: 0
 11189  003294  C077  F06D         	movff	floorf@e,??_floorf
 11190  003298  0EFF               	movlw	255
 11191  00329A  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11192  00329C  0EFF               	movlw	255
 11193  00329E  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11194  0032A0  0E7F               	movlw	127
 11195  0032A2  6F70               	movwf	(??_floorf+3)& (0+255),b
 11196  0032A4  0E00               	movlw	0
 11197  0032A6  6F71               	movwf	(??_floorf+4)& (0+255),b
 11198  0032A8                     u8875:
 11199  0032A8  676D               	tstfsz	??_floorf& (0+255),b
 11200  0032AA  EF59  F019         	goto	u8876
 11201  0032AE  EF61  F019         	goto	u8877
 11202  0032B2                     u8876:
 11203  0032B2  3571               	rlcf	(??_floorf+4)& (0+255),w,b
 11204  0032B4  3371               	rrcf	(??_floorf+4)& (0+255),f,b
 11205  0032B6  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11206  0032B8  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11207  0032BA  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 11208  0032BC  2F6D               	decfsz	??_floorf& (0+255),f,b
 11209  0032BE  EF54  F019         	goto	u8875
 11210  0032C2                     u8877:
 11211  0032C2  C06E  F073         	movff	??_floorf+1,floorf@m
 11212  0032C6  C06F  F074         	movff	??_floorf+2,floorf@m+1
 11213  0032CA  C070  F075         	movff	??_floorf+3,floorf@m+2
 11214  0032CE  C071  F076         	movff	??_floorf+4,floorf@m+3
 11215  0032D2  0100               	movlb	0	; () banked
 11216  0032D4  5173               	movf	floorf@m& (0+255),w,b
 11217  0032D6  1579               	andwf	floorf@u& (0+255),w,b
 11218  0032D8  6F6D               	movwf	??_floorf& (0+255),b
 11219  0032DA  5174               	movf	(floorf@m+1)& (0+255),w,b
 11220  0032DC  157A               	andwf	(floorf@u+1)& (0+255),w,b
 11221  0032DE  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11222  0032E0  5175               	movf	(floorf@m+2)& (0+255),w,b
 11223  0032E2  157B               	andwf	(floorf@u+2)& (0+255),w,b
 11224  0032E4  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11225  0032E6  5176               	movf	(floorf@m+3)& (0+255),w,b
 11226  0032E8  157C               	andwf	(floorf@u+3)& (0+255),w,b
 11227  0032EA  6F70               	movwf	(??_floorf+3)& (0+255),b
 11228  0032EC  516D               	movf	??_floorf& (0+255),w,b
 11229  0032EE  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11230  0032F0  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11231  0032F2  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11232  0032F4  A4D8               	btfss	status,2,c
 11233  0032F6  EF7F  F019         	goto	u8881
 11234  0032FA  EF81  F019         	goto	u8880
 11235  0032FE                     u8881:
 11236  0032FE  EF83  F019         	goto	l8499
 11237  003302                     u8880:
 11238  003302  EF39  F019         	goto	l8491
 11239  003306                     l8499:
 11240                           
 11241                           ; BSR set to: 0
 11242  003306  C079  F06D         	movff	floorf@u,??_floorf
 11243  00330A  C07A  F06E         	movff	floorf@u+1,??_floorf+1
 11244  00330E  C07B  F06F         	movff	floorf@u+2,??_floorf+2
 11245  003312  C07C  F070         	movff	floorf@u+3,??_floorf+3
 11246  003316  0E20               	movlw	32
 11247  003318  EF93  F019         	goto	u8890
 11248  00331C                     u8895:
 11249  00331C  90D8               	bcf	status,0,c
 11250  00331E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11251  003320  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11252  003322  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 11253  003324  336D               	rrcf	??_floorf& (0+255),f,b
 11254  003326                     u8890:
 11255  003326  2EE8               	decfsz	wreg,f,c
 11256  003328  EF8E  F019         	goto	u8895
 11257  00332C  516D               	movf	??_floorf& (0+255),w,b
 11258  00332E  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11259  003330  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11260  003332  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11261  003334  B4D8               	btfsc	status,2,c
 11262  003336  EF9F  F019         	goto	u8901
 11263  00333A  EFA1  F019         	goto	u8900
 11264  00333E                     u8901:
 11265  00333E  EFA9  F019         	goto	l1678
 11266  003342                     u8900:
 11267  003342                     
 11268                           ; BSR set to: 0
 11269  003342  5173               	movf	floorf@m& (0+255),w,b
 11270  003344  2779               	addwf	floorf@u& (0+255),f,b
 11271  003346  5174               	movf	(floorf@m+1)& (0+255),w,b
 11272  003348  237A               	addwfc	(floorf@u+1)& (0+255),f,b
 11273  00334A  5175               	movf	(floorf@m+2)& (0+255),w,b
 11274  00334C  237B               	addwfc	(floorf@u+2)& (0+255),f,b
 11275  00334E  5176               	movf	(floorf@m+3)& (0+255),w,b
 11276  003350  237C               	addwfc	(floorf@u+3)& (0+255),f,b
 11277  003352                     l1678:
 11278                           
 11279                           ; BSR set to: 0
 11280  003352  1D73               	comf	floorf@m& (0+255),w,b
 11281  003354  6F6D               	movwf	??_floorf& (0+255),b
 11282  003356  1D74               	comf	(floorf@m+1)& (0+255),w,b
 11283  003358  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11284  00335A  1D75               	comf	(floorf@m+2)& (0+255),w,b
 11285  00335C  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11286  00335E  1D76               	comf	(floorf@m+3)& (0+255),w,b
 11287  003360  6F70               	movwf	(??_floorf+3)& (0+255),b
 11288  003362  516D               	movf	??_floorf& (0+255),w,b
 11289  003364  1779               	andwf	floorf@u& (0+255),f,b
 11290  003366  516E               	movf	(??_floorf+1)& (0+255),w,b
 11291  003368  177A               	andwf	(floorf@u+1)& (0+255),f,b
 11292  00336A  516F               	movf	(??_floorf+2)& (0+255),w,b
 11293  00336C  177B               	andwf	(floorf@u+2)& (0+255),f,b
 11294  00336E  5170               	movf	(??_floorf+3)& (0+255),w,b
 11295  003370  177C               	andwf	(floorf@u+3)& (0+255),f,b
 11296  003372  EFFF  F019         	goto	l8511
 11297  003376                     l8503:
 11298                           
 11299                           ; BSR set to: 0
 11300  003376  C079  F06D         	movff	floorf@u,??_floorf
 11301  00337A  C07A  F06E         	movff	floorf@u+1,??_floorf+1
 11302  00337E  C07B  F06F         	movff	floorf@u+2,??_floorf+2
 11303  003382  C07C  F070         	movff	floorf@u+3,??_floorf+3
 11304  003386  0E20               	movlw	32
 11305  003388  EFCB  F019         	goto	u8910
 11306  00338C                     u8915:
 11307  00338C  90D8               	bcf	status,0,c
 11308  00338E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11309  003390  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11310  003392  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 11311  003394  336D               	rrcf	??_floorf& (0+255),f,b
 11312  003396                     u8910:
 11313  003396  2EE8               	decfsz	wreg,f,c
 11314  003398  EFC6  F019         	goto	u8915
 11315  00339C  516D               	movf	??_floorf& (0+255),w,b
 11316  00339E  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11317  0033A0  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11318  0033A2  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11319  0033A4  A4D8               	btfss	status,2,c
 11320  0033A6  EFD7  F019         	goto	u8921
 11321  0033AA  EFD9  F019         	goto	u8920
 11322  0033AE                     u8921:
 11323  0033AE  EFE3  F019         	goto	l8507
 11324  0033B2                     u8920:
 11325  0033B2                     
 11326                           ; BSR set to: 0
 11327  0033B2  0E00               	movlw	0
 11328  0033B4  6F79               	movwf	floorf@u& (0+255),b
 11329  0033B6  0E00               	movlw	0
 11330  0033B8  6F7A               	movwf	(floorf@u+1)& (0+255),b
 11331  0033BA  0E00               	movlw	0
 11332  0033BC  6F7B               	movwf	(floorf@u+2)& (0+255),b
 11333  0033BE  0E00               	movlw	0
 11334  0033C0  6F7C               	movwf	(floorf@u+3)& (0+255),b
 11335  0033C2  EFFF  F019         	goto	l8511
 11336  0033C6                     l8507:
 11337                           
 11338                           ; BSR set to: 0
 11339  0033C6  90D8               	bcf	status,0,c
 11340  0033C8  3579               	rlcf	floorf@u& (0+255),w,b
 11341  0033CA  6F6D               	movwf	??_floorf& (0+255),b
 11342  0033CC  357A               	rlcf	(floorf@u+1)& (0+255),w,b
 11343  0033CE  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11344  0033D0  357B               	rlcf	(floorf@u+2)& (0+255),w,b
 11345  0033D2  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11346  0033D4  357C               	rlcf	(floorf@u+3)& (0+255),w,b
 11347  0033D6  6F70               	movwf	(??_floorf+3)& (0+255),b
 11348  0033D8  516D               	movf	??_floorf& (0+255),w,b
 11349  0033DA  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11350  0033DC  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11351  0033DE  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11352  0033E0  B4D8               	btfsc	status,2,c
 11353  0033E2  EFF5  F019         	goto	u8931
 11354  0033E6  EFF7  F019         	goto	u8930
 11355  0033EA                     u8931:
 11356  0033EA  EFFF  F019         	goto	l8511
 11357  0033EE                     u8930:
 11358  0033EE                     
 11359                           ; BSR set to: 0
 11360  0033EE  0E00               	movlw	0
 11361  0033F0  6F79               	movwf	floorf@u& (0+255),b
 11362  0033F2  0E00               	movlw	0
 11363  0033F4  6F7A               	movwf	(floorf@u+1)& (0+255),b
 11364  0033F6  0E80               	movlw	128
 11365  0033F8  6F7B               	movwf	(floorf@u+2)& (0+255),b
 11366  0033FA  0EBF               	movlw	191
 11367  0033FC  6F7C               	movwf	(floorf@u+3)& (0+255),b
 11368  0033FE                     l8511:
 11369                           
 11370                           ; BSR set to: 0
 11371  0033FE  C079  F050         	movff	floorf@u,?_floorf
 11372  003402  C07A  F051         	movff	floorf@u+1,?_floorf+1
 11373  003406  C07B  F052         	movff	floorf@u+2,?_floorf+2
 11374  00340A  C07C  F053         	movff	floorf@u+3,?_floorf+3
 11375  00340E                     l1675:
 11376                           
 11377                           ; BSR set to: 0
 11378  00340E  0012               	return		;funcret
 11379  003410                     __end_of_floorf:
 11380                           	opt callstack 0
 11381                           
 11382 ;; *************** function ___fpclassifyf *****************
 11383 ;; Defined at:
 11384 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;  x               4    5[COMRAM] float 
 11387 ;; Auto vars:     Size  Location     Type
 11388 ;;  u               4   15[COMRAM] struct .
 11389 ;;  e               2   13[COMRAM] int 
 11390 ;; Return value:  Size  Location     Type
 11391 ;;                  2    5[COMRAM] int 
 11392 ;; Registers used:
 11393 ;;		wreg, status,2, status,0
 11394 ;; Tracked objects:
 11395 ;;		On entry : 0/0
 11396 ;;		On exit  : 0/0
 11397 ;;		Unchanged: 0/0
 11398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11399 ;;      Params:         4       0       0       0       0       0       0       0       0
 11400 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11401 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11402 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11403 ;;Total ram usage:       14 bytes
 11404 ;; Hardware stack levels used:    1
 11405 ;; Hardware stack levels required when called:    2
 11406 ;; This function calls:
 11407 ;;		Nothing
 11408 ;; This function is called by:
 11409 ;;		_efgtoa
 11410 ;; This function uses a non-reentrant model
 11411 ;;
 11412                           
 11413                           	psect	text40
 11414  00448A                     __ptext40:
 11415                           	opt callstack 0
 11416  00448A                     ___fpclassifyf:
 11417                           	opt callstack 23
 11418  00448A  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
 11419  00448E  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 11420  004492  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 11421  004496  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 11422  00449A  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11423  00449E  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11424  0044A2  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11425  0044A6  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11426  0044AA  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11427  0044AE  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11428  0044B2  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11429  0044B6  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11430  0044BA  0E18               	movlw	24
 11431  0044BC  EF65  F022         	goto	u8720
 11432  0044C0                     u8725:
 11433  0044C0  90D8               	bcf	status,0,c
 11434  0044C2  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11435  0044C4  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11436  0044C6  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11437  0044C8  320A               	rrcf	??___fpclassifyf^0,f,c
 11438  0044CA                     u8720:
 11439  0044CA  2EE8               	decfsz	wreg,f,c
 11440  0044CC  EF60  F022         	goto	u8725
 11441  0044D0  500A               	movf	??___fpclassifyf^0,w,c
 11442  0044D2  6E0E               	movwf	___fpclassifyf@e^0,c
 11443  0044D4  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11444  0044D6  500E               	movf	___fpclassifyf@e^0,w,c
 11445  0044D8  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11446  0044DA  A4D8               	btfss	status,2,c
 11447  0044DC  EF72  F022         	goto	u8731
 11448  0044E0  EF74  F022         	goto	u8730
 11449  0044E4                     u8731:
 11450  0044E4  EF94  F022         	goto	l8463
 11451  0044E8                     u8730:
 11452  0044E8  90D8               	bcf	status,0,c
 11453  0044EA  3410               	rlcf	___fpclassifyf@u^0,w,c
 11454  0044EC  6E0A               	movwf	??___fpclassifyf^0,c
 11455  0044EE  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11456  0044F0  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11457  0044F2  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11458  0044F4  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11459  0044F6  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11460  0044F8  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11461  0044FA  500A               	movf	??___fpclassifyf^0,w,c
 11462  0044FC  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11463  0044FE  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11464  004500  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11465  004502  A4D8               	btfss	status,2,c
 11466  004504  EF86  F022         	goto	u8741
 11467  004508  EF88  F022         	goto	u8740
 11468  00450C                     u8741:
 11469  00450C  EF8E  F022         	goto	l8459
 11470  004510                     u8740:
 11471  004510  0E00               	movlw	0
 11472  004512  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11473  004514  0E02               	movlw	2
 11474  004516  6E06               	movwf	?___fpclassifyf^0,c
 11475  004518  EFC3  F022         	goto	l1630
 11476  00451C                     l8459:
 11477  00451C  0E00               	movlw	0
 11478  00451E  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11479  004520  0E03               	movlw	3
 11480  004522  6E06               	movwf	?___fpclassifyf^0,c
 11481  004524  EFC3  F022         	goto	l1630
 11482  004528                     l8463:
 11483  004528  280E               	incf	___fpclassifyf@e^0,w,c
 11484  00452A  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11485  00452C  A4D8               	btfss	status,2,c
 11486  00452E  EF9B  F022         	goto	u8751
 11487  004532  EF9D  F022         	goto	u8750
 11488  004536                     u8751:
 11489  004536  EFBF  F022         	goto	l8469
 11490  00453A                     u8750:
 11491  00453A  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11492  00453E  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11493  004542  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11494  004546  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11495  00454A  0E09               	movlw	9
 11496  00454C                     u8765:
 11497  00454C  90D8               	bcf	status,0,c
 11498  00454E  360A               	rlcf	??___fpclassifyf^0,f,c
 11499  004550  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11500  004552  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11501  004554  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11502  004556  2EE8               	decfsz	wreg,f,c
 11503  004558  EFA6  F022         	goto	u8765
 11504  00455C  500A               	movf	??___fpclassifyf^0,w,c
 11505  00455E  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11506  004560  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11507  004562  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11508  004564  B4D8               	btfsc	status,2,c
 11509  004566  EFB7  F022         	goto	u8771
 11510  00456A  EFBA  F022         	goto	u8770
 11511  00456E                     u8771:
 11512  00456E  0E01               	movlw	1
 11513  004570  EFBB  F022         	goto	u8780
 11514  004574                     u8770:
 11515  004574  0E00               	movlw	0
 11516  004576                     u8780:
 11517  004576  6E06               	movwf	?___fpclassifyf^0,c
 11518  004578  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11519  00457A  EFC3  F022         	goto	l1630
 11520  00457E                     l8469:
 11521  00457E  0E00               	movlw	0
 11522  004580  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11523  004582  0E04               	movlw	4
 11524  004584  6E06               	movwf	?___fpclassifyf^0,c
 11525  004586                     l1630:
 11526  004586  0012               	return		;funcret
 11527  004588                     __end_of___fpclassifyf:
 11528                           	opt callstack 0
 11529                           
 11530 ;; *************** function ___fltol *****************
 11531 ;; Defined at:
 11532 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;  f1              4   18[BANK0 ] int 
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;  exp1            1   27[BANK0 ] unsigned char 
 11537 ;;  sign1           1   26[BANK0 ] unsigned char 
 11538 ;; Return value:  Size  Location     Type
 11539 ;;                  4   18[BANK0 ] long 
 11540 ;; Registers used:
 11541 ;;		wreg, status,2, status,0
 11542 ;; Tracked objects:
 11543 ;;		On entry : 0/0
 11544 ;;		On exit  : 0/0
 11545 ;;		Unchanged: 0/0
 11546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11547 ;;      Params:         0       4       0       0       0       0       0       0       0
 11548 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11549 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11550 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11551 ;;Total ram usage:       10 bytes
 11552 ;; Hardware stack levels used:    1
 11553 ;; Hardware stack levels required when called:    2
 11554 ;; This function calls:
 11555 ;;		Nothing
 11556 ;; This function is called by:
 11557 ;;		_pwmDuty
 11558 ;;		_PID
 11559 ;;		_efgtoa
 11560 ;; This function uses a non-reentrant model
 11561 ;;
 11562                           
 11563                           	psect	text41
 11564  00427E                     __ptext41:
 11565                           	opt callstack 0
 11566  00427E                     ___fltol:
 11567                           	opt callstack 23
 11568  00427E  0100               	movlb	0	; () banked
 11569  004280  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11570  004282  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11571  004284  6F7B               	movwf	___fltol@exp1& (0+255),b
 11572  004286  517B               	movf	___fltol@exp1& (0+255),w,b
 11573  004288  A4D8               	btfss	status,2,c
 11574  00428A  EF49  F021         	goto	u9721
 11575  00428E  EF4B  F021         	goto	u9720
 11576  004292                     u9721:
 11577  004292  EF55  F021         	goto	l9011
 11578  004296                     u9720:
 11579  004296                     l9007:
 11580                           
 11581                           ; BSR set to: 0
 11582  004296  0E00               	movlw	0
 11583  004298  6F72               	movwf	?___fltol& (0+255),b
 11584  00429A  0E00               	movlw	0
 11585  00429C  6F73               	movwf	(?___fltol+1)& (0+255),b
 11586  00429E  0E00               	movlw	0
 11587  0042A0  6F74               	movwf	(?___fltol+2)& (0+255),b
 11588  0042A2  0E00               	movlw	0
 11589  0042A4  6F75               	movwf	(?___fltol+3)& (0+255),b
 11590  0042A6  EFC2  F021         	goto	l1246
 11591  0042AA                     l9011:
 11592                           
 11593                           ; BSR set to: 0
 11594  0042AA  C072  F076         	movff	___fltol@f1,??___fltol
 11595  0042AE  C073  F077         	movff	___fltol@f1+1,??___fltol+1
 11596  0042B2  C074  F078         	movff	___fltol@f1+2,??___fltol+2
 11597  0042B6  C075  F079         	movff	___fltol@f1+3,??___fltol+3
 11598  0042BA  0E20               	movlw	32
 11599  0042BC  EF65  F021         	goto	u9730
 11600  0042C0                     u9735:
 11601  0042C0  90D8               	bcf	status,0,c
 11602  0042C2  3379               	rrcf	(??___fltol+3)& (0+255),f,b
 11603  0042C4  3378               	rrcf	(??___fltol+2)& (0+255),f,b
 11604  0042C6  3377               	rrcf	(??___fltol+1)& (0+255),f,b
 11605  0042C8  3376               	rrcf	??___fltol& (0+255),f,b
 11606  0042CA                     u9730:
 11607  0042CA  2EE8               	decfsz	wreg,f,c
 11608  0042CC  EF60  F021         	goto	u9735
 11609  0042D0  5176               	movf	??___fltol& (0+255),w,b
 11610  0042D2  6F7A               	movwf	___fltol@sign1& (0+255),b
 11611  0042D4                     
 11612                           ; BSR set to: 0
 11613  0042D4  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
 11614  0042D6                     
 11615                           ; BSR set to: 0
 11616  0042D6  0EFF               	movlw	255
 11617  0042D8  1772               	andwf	___fltol@f1& (0+255),f,b
 11618  0042DA  0EFF               	movlw	255
 11619  0042DC  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
 11620  0042DE  0EFF               	movlw	255
 11621  0042E0  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
 11622  0042E2  0E00               	movlw	0
 11623  0042E4  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
 11624  0042E6                     
 11625                           ; BSR set to: 0
 11626  0042E6  0E96               	movlw	150
 11627  0042E8  5F7B               	subwf	___fltol@exp1& (0+255),f,b
 11628  0042EA                     
 11629                           ; BSR set to: 0
 11630  0042EA  BF7B               	btfsc	___fltol@exp1& (0+255),7,b
 11631  0042EC  EF7C  F021         	goto	u9740
 11632  0042F0  EF7A  F021         	goto	u9741
 11633  0042F4                     u9741:
 11634  0042F4  EF92  F021         	goto	l9031
 11635  0042F8                     u9740:
 11636  0042F8                     
 11637                           ; BSR set to: 0
 11638  0042F8  517B               	movf	___fltol@exp1& (0+255),w,b
 11639  0042FA  0A80               	xorlw	128
 11640  0042FC  0F97               	addlw	151
 11641  0042FE  B0D8               	btfsc	status,0,c
 11642  004300  EF84  F021         	goto	u9751
 11643  004304  EF86  F021         	goto	u9750
 11644  004308                     u9751:
 11645  004308  EF88  F021         	goto	l9027
 11646  00430C                     u9750:
 11647  00430C  EF4B  F021         	goto	l9007
 11648  004310                     l9027:
 11649                           
 11650                           ; BSR set to: 0
 11651  004310  90D8               	bcf	status,0,c
 11652  004312  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11653  004314  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11654  004316  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11655  004318  3372               	rrcf	___fltol@f1& (0+255),f,b
 11656  00431A                     
 11657                           ; BSR set to: 0
 11658  00431A  3F7B               	incfsz	___fltol@exp1& (0+255),f,b
 11659  00431C  EF88  F021         	goto	l9027
 11660  004320  EFAA  F021         	goto	l9041
 11661  004324                     l9031:
 11662                           
 11663                           ; BSR set to: 0
 11664  004324  0E1F               	movlw	31
 11665  004326  657B               	cpfsgt	___fltol@exp1& (0+255),b
 11666  004328  EF98  F021         	goto	u9761
 11667  00432C  EF9A  F021         	goto	u9760
 11668  004330                     u9761:
 11669  004330  EFA2  F021         	goto	l9039
 11670  004334                     u9760:
 11671  004334  EF4B  F021         	goto	l9007
 11672  004338                     l9037:
 11673                           
 11674                           ; BSR set to: 0
 11675  004338  90D8               	bcf	status,0,c
 11676  00433A  3772               	rlcf	___fltol@f1& (0+255),f,b
 11677  00433C  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11678  00433E  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11679  004340  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11680  004342  077B               	decf	___fltol@exp1& (0+255),f,b
 11681  004344                     l9039:
 11682                           
 11683                           ; BSR set to: 0
 11684  004344  517B               	movf	___fltol@exp1& (0+255),w,b
 11685  004346  A4D8               	btfss	status,2,c
 11686  004348  EFA8  F021         	goto	u9771
 11687  00434C  EFAA  F021         	goto	u9770
 11688  004350                     u9771:
 11689  004350  EF9C  F021         	goto	l9037
 11690  004354                     u9770:
 11691  004354                     l9041:
 11692                           
 11693                           ; BSR set to: 0
 11694  004354  517A               	movf	___fltol@sign1& (0+255),w,b
 11695  004356  B4D8               	btfsc	status,2,c
 11696  004358  EFB0  F021         	goto	u9781
 11697  00435C  EFB2  F021         	goto	u9780
 11698  004360                     u9781:
 11699  004360  EFBA  F021         	goto	l9045
 11700  004364                     u9780:
 11701  004364                     
 11702                           ; BSR set to: 0
 11703  004364  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
 11704  004366  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
 11705  004368  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
 11706  00436A  6D72               	negf	___fltol@f1& (0+255),b
 11707  00436C  0E00               	movlw	0
 11708  00436E  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11709  004370  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11710  004372  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11711  004374                     l9045:
 11712                           
 11713                           ; BSR set to: 0
 11714  004374  C072  F072         	movff	___fltol@f1,?___fltol
 11715  004378  C073  F073         	movff	___fltol@f1+1,?___fltol+1
 11716  00437C  C074  F074         	movff	___fltol@f1+2,?___fltol+2
 11717  004380  C075  F075         	movff	___fltol@f1+3,?___fltol+3
 11718  004384                     l1246:
 11719                           
 11720                           ; BSR set to: 0
 11721  004384  0012               	return		;funcret
 11722  004386                     __end_of___fltol:
 11723                           	opt callstack 0
 11724                           
 11725 ;; *************** function ___flsub *****************
 11726 ;; Defined at:
 11727 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11728 ;; Parameters:    Size  Location     Type
 11729 ;;  b               4   67[COMRAM] long 
 11730 ;;  a               4   71[COMRAM] long 
 11731 ;; Auto vars:     Size  Location     Type
 11732 ;;		None
 11733 ;; Return value:  Size  Location     Type
 11734 ;;                  4   67[COMRAM] long 
 11735 ;; Registers used:
 11736 ;;		wreg, status,2, status,0, cstack
 11737 ;; Tracked objects:
 11738 ;;		On entry : 0/0
 11739 ;;		On exit  : 0/0
 11740 ;;		Unchanged: 0/0
 11741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11742 ;;      Params:         8       0       0       0       0       0       0       0       0
 11743 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11744 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11745 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11746 ;;Total ram usage:        8 bytes
 11747 ;; Hardware stack levels used:    1
 11748 ;; Hardware stack levels required when called:    3
 11749 ;; This function calls:
 11750 ;;		___fladd
 11751 ;; This function is called by:
 11752 ;;		_PID
 11753 ;;		_efgtoa
 11754 ;;		_roundf
 11755 ;; This function uses a non-reentrant model
 11756 ;;
 11757                           
 11758                           	psect	text42
 11759  0054D6                     __ptext42:
 11760                           	opt callstack 0
 11761  0054D6                     ___flsub:
 11762                           	opt callstack 22
 11763  0054D6  0E00               	movlw	0
 11764  0054D8  1A48               	xorwf	___flsub@a^0,f,c
 11765  0054DA  0E00               	movlw	0
 11766  0054DC  1A49               	xorwf	(___flsub@a+1)^0,f,c
 11767  0054DE  0E00               	movlw	0
 11768  0054E0  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 11769  0054E2  0E80               	movlw	128
 11770  0054E4  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 11771  0054E6  C044  F034         	movff	___flsub@b,___fladd@b
 11772  0054EA  C045  F035         	movff	___flsub@b+1,___fladd@b+1
 11773  0054EE  C046  F036         	movff	___flsub@b+2,___fladd@b+2
 11774  0054F2  C047  F037         	movff	___flsub@b+3,___fladd@b+3
 11775  0054F6  C048  F038         	movff	___flsub@a,___fladd@a
 11776  0054FA  C049  F039         	movff	___flsub@a+1,___fladd@a+1
 11777  0054FE  C04A  F03A         	movff	___flsub@a+2,___fladd@a+2
 11778  005502  C04B  F03B         	movff	___flsub@a+3,___fladd@a+3
 11779  005506  EC5C  F00C         	call	___fladd	;wreg free
 11780  00550A  C034  F044         	movff	?___fladd,?___flsub
 11781  00550E  C035  F045         	movff	?___fladd+1,?___flsub+1
 11782  005512  C036  F046         	movff	?___fladd+2,?___flsub+2
 11783  005516  C037  F047         	movff	?___fladd+3,?___flsub+3
 11784  00551A  0012               	return		;funcret
 11785  00551C                     __end_of___flsub:
 11786                           	opt callstack 0
 11787                           
 11788 ;; *************** function ___fladd *****************
 11789 ;; Defined at:
 11790 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;  b               4   51[COMRAM] long 
 11793 ;;  a               4   55[COMRAM] long 
 11794 ;; Auto vars:     Size  Location     Type
 11795 ;;  grs             1   66[COMRAM] unsigned char 
 11796 ;;  bexp            1   65[COMRAM] unsigned char 
 11797 ;;  aexp            1   64[COMRAM] unsigned char 
 11798 ;;  signs           1   63[COMRAM] unsigned char 
 11799 ;; Return value:  Size  Location     Type
 11800 ;;                  4   51[COMRAM] unsigned char 
 11801 ;; Registers used:
 11802 ;;		wreg, status,2, status,0
 11803 ;; Tracked objects:
 11804 ;;		On entry : 0/0
 11805 ;;		On exit  : 0/0
 11806 ;;		Unchanged: 0/0
 11807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11808 ;;      Params:         8       0       0       0       0       0       0       0       0
 11809 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11810 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11811 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11812 ;;Total ram usage:       16 bytes
 11813 ;; Hardware stack levels used:    1
 11814 ;; Hardware stack levels required when called:    2
 11815 ;; This function calls:
 11816 ;;		Nothing
 11817 ;; This function is called by:
 11818 ;;		_leerSensores
 11819 ;;		_PID
 11820 ;;		_efgtoa
 11821 ;;		___flsub
 11822 ;;		_roundf
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           	psect	text43
 11827  0018B8                     __ptext43:
 11828                           	opt callstack 0
 11829  0018B8                     ___fladd:
 11830                           	opt callstack 22
 11831  0018B8  5037               	movf	(___fladd@b+3)^0,w,c
 11832  0018BA  0B80               	andlw	128
 11833  0018BC  6E40               	movwf	___fladd@signs^0,c
 11834  0018BE  5037               	movf	(___fladd@b+3)^0,w,c
 11835  0018C0  2437               	addwf	(___fladd@b+3)^0,w,c
 11836  0018C2  6E42               	movwf	___fladd@bexp^0,c
 11837  0018C4  AE36               	btfss	(___fladd@b+2)^0,7,c
 11838  0018C6  EF67  F00C         	goto	u8281
 11839  0018CA  EF69  F00C         	goto	u8280
 11840  0018CE                     u8281:
 11841  0018CE  EF6A  F00C         	goto	l8225
 11842  0018D2                     u8280:
 11843  0018D2  8042               	bsf	___fladd@bexp^0,0,c
 11844  0018D4                     l8225:
 11845  0018D4  5042               	movf	___fladd@bexp^0,w,c
 11846  0018D6  B4D8               	btfsc	status,2,c
 11847  0018D8  EF70  F00C         	goto	u8291
 11848  0018DC  EF72  F00C         	goto	u8290
 11849  0018E0                     u8291:
 11850  0018E0  EF87  F00C         	goto	l8235
 11851  0018E4                     u8290:
 11852  0018E4  2842               	incf	___fladd@bexp^0,w,c
 11853  0018E6  A4D8               	btfss	status,2,c
 11854  0018E8  EF78  F00C         	goto	u8301
 11855  0018EC  EF7A  F00C         	goto	u8300
 11856  0018F0                     u8301:
 11857  0018F0  EF82  F00C         	goto	l8231
 11858  0018F4                     u8300:
 11859  0018F4  0E00               	movlw	0
 11860  0018F6  6E34               	movwf	___fladd@b^0,c
 11861  0018F8  0E00               	movlw	0
 11862  0018FA  6E35               	movwf	(___fladd@b+1)^0,c
 11863  0018FC  0E00               	movlw	0
 11864  0018FE  6E36               	movwf	(___fladd@b+2)^0,c
 11865  001900  0E00               	movlw	0
 11866  001902  6E37               	movwf	(___fladd@b+3)^0,c
 11867  001904                     l8231:
 11868  001904  8E36               	bsf	(___fladd@b+2)^0,7,c
 11869  001906  0E00               	movlw	0
 11870  001908  6E37               	movwf	(___fladd@b+3)^0,c
 11871  00190A  EF8F  F00C         	goto	l8237
 11872  00190E                     l8235:
 11873  00190E  0E00               	movlw	0
 11874  001910  6E34               	movwf	___fladd@b^0,c
 11875  001912  0E00               	movlw	0
 11876  001914  6E35               	movwf	(___fladd@b+1)^0,c
 11877  001916  0E00               	movlw	0
 11878  001918  6E36               	movwf	(___fladd@b+2)^0,c
 11879  00191A  0E00               	movlw	0
 11880  00191C  6E37               	movwf	(___fladd@b+3)^0,c
 11881  00191E                     l8237:
 11882  00191E  503B               	movf	(___fladd@a+3)^0,w,c
 11883  001920  0B80               	andlw	128
 11884  001922  6E41               	movwf	___fladd@aexp^0,c
 11885  001924  5040               	movf	___fladd@signs^0,w,c
 11886  001926  1841               	xorwf	___fladd@aexp^0,w,c
 11887  001928  B4D8               	btfsc	status,2,c
 11888  00192A  EF99  F00C         	goto	u8311
 11889  00192E  EF9B  F00C         	goto	u8310
 11890  001932                     u8311:
 11891  001932  EF9C  F00C         	goto	l8243
 11892  001936                     u8310:
 11893  001936  8C40               	bsf	___fladd@signs^0,6,c
 11894  001938                     l8243:
 11895  001938  503B               	movf	(___fladd@a+3)^0,w,c
 11896  00193A  243B               	addwf	(___fladd@a+3)^0,w,c
 11897  00193C  6E41               	movwf	___fladd@aexp^0,c
 11898  00193E  AE3A               	btfss	(___fladd@a+2)^0,7,c
 11899  001940  EFA4  F00C         	goto	u8321
 11900  001944  EFA6  F00C         	goto	u8320
 11901  001948                     u8321:
 11902  001948  EFA7  F00C         	goto	l8249
 11903  00194C                     u8320:
 11904  00194C  8041               	bsf	___fladd@aexp^0,0,c
 11905  00194E                     l8249:
 11906  00194E  5041               	movf	___fladd@aexp^0,w,c
 11907  001950  B4D8               	btfsc	status,2,c
 11908  001952  EFAD  F00C         	goto	u8331
 11909  001956  EFAF  F00C         	goto	u8330
 11910  00195A                     u8331:
 11911  00195A  EFC4  F00C         	goto	l8259
 11912  00195E                     u8330:
 11913  00195E  2841               	incf	___fladd@aexp^0,w,c
 11914  001960  A4D8               	btfss	status,2,c
 11915  001962  EFB5  F00C         	goto	u8341
 11916  001966  EFB7  F00C         	goto	u8340
 11917  00196A                     u8341:
 11918  00196A  EFBF  F00C         	goto	l8255
 11919  00196E                     u8340:
 11920  00196E  0E00               	movlw	0
 11921  001970  6E38               	movwf	___fladd@a^0,c
 11922  001972  0E00               	movlw	0
 11923  001974  6E39               	movwf	(___fladd@a+1)^0,c
 11924  001976  0E00               	movlw	0
 11925  001978  6E3A               	movwf	(___fladd@a+2)^0,c
 11926  00197A  0E00               	movlw	0
 11927  00197C  6E3B               	movwf	(___fladd@a+3)^0,c
 11928  00197E                     l8255:
 11929  00197E  8E3A               	bsf	(___fladd@a+2)^0,7,c
 11930  001980  0E00               	movlw	0
 11931  001982  6E3B               	movwf	(___fladd@a+3)^0,c
 11932  001984  EFCC  F00C         	goto	l8261
 11933  001988                     l8259:
 11934  001988  0E00               	movlw	0
 11935  00198A  6E38               	movwf	___fladd@a^0,c
 11936  00198C  0E00               	movlw	0
 11937  00198E  6E39               	movwf	(___fladd@a+1)^0,c
 11938  001990  0E00               	movlw	0
 11939  001992  6E3A               	movwf	(___fladd@a+2)^0,c
 11940  001994  0E00               	movlw	0
 11941  001996  6E3B               	movwf	(___fladd@a+3)^0,c
 11942  001998                     l8261:
 11943  001998  5042               	movf	___fladd@bexp^0,w,c
 11944  00199A  5C41               	subwf	___fladd@aexp^0,w,c
 11945  00199C  B0D8               	btfsc	status,0,c
 11946  00199E  EFD3  F00C         	goto	u8351
 11947  0019A2  EFD5  F00C         	goto	u8350
 11948  0019A6                     u8351:
 11949  0019A6  EFFC  F00C         	goto	l8297
 11950  0019AA                     u8350:
 11951  0019AA  AC40               	btfss	___fladd@signs^0,6,c
 11952  0019AC  EFDA  F00C         	goto	u8361
 11953  0019B0  EFDC  F00C         	goto	u8360
 11954  0019B4                     u8361:
 11955  0019B4  EFDE  F00C         	goto	l8267
 11956  0019B8                     u8360:
 11957  0019B8  0E80               	movlw	128
 11958  0019BA  1A40               	xorwf	___fladd@signs^0,f,c
 11959  0019BC                     l8267:
 11960  0019BC  C042  F043         	movff	___fladd@bexp,___fladd@grs
 11961  0019C0  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11962  0019C4  C043  F041         	movff	___fladd@grs,___fladd@aexp
 11963  0019C8  C034  F043         	movff	___fladd@b,___fladd@grs
 11964  0019CC  C038  F034         	movff	___fladd@a,___fladd@b
 11965  0019D0  C043  F038         	movff	___fladd@grs,___fladd@a
 11966  0019D4  C035  F043         	movff	___fladd@b+1,___fladd@grs
 11967  0019D8  C039  F035         	movff	___fladd@a+1,___fladd@b+1
 11968  0019DC  C043  F039         	movff	___fladd@grs,___fladd@a+1
 11969  0019E0  C036  F043         	movff	___fladd@b+2,___fladd@grs
 11970  0019E4  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
 11971  0019E8  C043  F03A         	movff	___fladd@grs,___fladd@a+2
 11972  0019EC  C037  F043         	movff	___fladd@b+3,___fladd@grs
 11973  0019F0  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
 11974  0019F4  C043  F03B         	movff	___fladd@grs,___fladd@a+3
 11975  0019F8                     l8297:
 11976  0019F8  0E00               	movlw	0
 11977  0019FA  6E43               	movwf	___fladd@grs^0,c
 11978  0019FC  5042               	movf	___fladd@bexp^0,w,c
 11979  0019FE  C041  F03C         	movff	___fladd@aexp,??___fladd
 11980  001A02  6A3D               	clrf	(??___fladd+1)^0,c
 11981  001A04  5E3C               	subwf	??___fladd^0,f,c
 11982  001A06  0E00               	movlw	0
 11983  001A08  5A3D               	subwfb	(??___fladd+1)^0,f,c
 11984  001A0A  BE3D               	btfsc	(??___fladd+1)^0,7,c
 11985  001A0C  EF11  F00D         	goto	u8371
 11986  001A10  503D               	movf	(??___fladd+1)^0,w,c
 11987  001A12  E109               	bnz	u8370
 11988  001A14  0E1A               	movlw	26
 11989  001A16  5C3C               	subwf	??___fladd^0,w,c
 11990  001A18  A0D8               	btfss	status,0,c
 11991  001A1A  EF11  F00D         	goto	u8371
 11992  001A1E  EF13  F00D         	goto	u8370
 11993  001A22                     u8371:
 11994  001A22  EF4A  F00D         	goto	l1478
 11995  001A26                     u8370:
 11996  001A26  5034               	movf	___fladd@b^0,w,c
 11997  001A28  1035               	iorwf	(___fladd@b+1)^0,w,c
 11998  001A2A  1036               	iorwf	(___fladd@b+2)^0,w,c
 11999  001A2C  1037               	iorwf	(___fladd@b+3)^0,w,c
 12000  001A2E  A4D8               	btfss	status,2,c
 12001  001A30  EF1C  F00D         	goto	u8381
 12002  001A34  EF1F  F00D         	goto	u8380
 12003  001A38                     u8381:
 12004  001A38  0E01               	movlw	1
 12005  001A3A  EF20  F00D         	goto	u8390
 12006  001A3E                     u8380:
 12007  001A3E  0E00               	movlw	0
 12008  001A40                     u8390:
 12009  001A40  6E43               	movwf	___fladd@grs^0,c
 12010  001A42  0E00               	movlw	0
 12011  001A44  6E34               	movwf	___fladd@b^0,c
 12012  001A46  0E00               	movlw	0
 12013  001A48  6E35               	movwf	(___fladd@b+1)^0,c
 12014  001A4A  0E00               	movlw	0
 12015  001A4C  6E36               	movwf	(___fladd@b+2)^0,c
 12016  001A4E  0E00               	movlw	0
 12017  001A50  6E37               	movwf	(___fladd@b+3)^0,c
 12018  001A52  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 12019  001A56  EF53  F00D         	goto	l1477
 12020  001A5A                     l1479:
 12021  001A5A  A043               	btfss	___fladd@grs^0,0,c
 12022  001A5C  EF32  F00D         	goto	u8401
 12023  001A60  EF34  F00D         	goto	u8400
 12024  001A64                     u8401:
 12025  001A64  EF3A  F00D         	goto	l8309
 12026  001A68                     u8400:
 12027  001A68  90D8               	bcf	status,0,c
 12028  001A6A  3043               	rrcf	___fladd@grs^0,w,c
 12029  001A6C  0901               	iorlw	1
 12030  001A6E  6E43               	movwf	___fladd@grs^0,c
 12031  001A70  EF3C  F00D         	goto	l8311
 12032  001A74                     l8309:
 12033  001A74  90D8               	bcf	status,0,c
 12034  001A76  3243               	rrcf	___fladd@grs^0,f,c
 12035  001A78                     l8311:
 12036  001A78  A034               	btfss	___fladd@b^0,0,c
 12037  001A7A  EF41  F00D         	goto	u8411
 12038  001A7E  EF43  F00D         	goto	u8410
 12039  001A82                     u8411:
 12040  001A82  EF44  F00D         	goto	l8315
 12041  001A86                     u8410:
 12042  001A86  8E43               	bsf	___fladd@grs^0,7,c
 12043  001A88                     l8315:
 12044  001A88  3437               	rlcf	(___fladd@b+3)^0,w,c
 12045  001A8A  3237               	rrcf	(___fladd@b+3)^0,f,c
 12046  001A8C  3236               	rrcf	(___fladd@b+2)^0,f,c
 12047  001A8E  3235               	rrcf	(___fladd@b+1)^0,f,c
 12048  001A90  3234               	rrcf	___fladd@b^0,f,c
 12049  001A92  2A42               	incf	___fladd@bexp^0,f,c
 12050  001A94                     l1478:
 12051  001A94  5041               	movf	___fladd@aexp^0,w,c
 12052  001A96  5C42               	subwf	___fladd@bexp^0,w,c
 12053  001A98  A0D8               	btfss	status,0,c
 12054  001A9A  EF51  F00D         	goto	u8421
 12055  001A9E  EF53  F00D         	goto	u8420
 12056  001AA2                     u8421:
 12057  001AA2  EF2D  F00D         	goto	l1479
 12058  001AA6                     u8420:
 12059  001AA6                     l1477:
 12060  001AA6  BC40               	btfsc	___fladd@signs^0,6,c
 12061  001AA8  EF58  F00D         	goto	u8431
 12062  001AAC  EF5A  F00D         	goto	u8430
 12063  001AB0                     u8431:
 12064  001AB0  EF9A  F00D         	goto	l8343
 12065  001AB4                     u8430:
 12066  001AB4  5042               	movf	___fladd@bexp^0,w,c
 12067  001AB6  A4D8               	btfss	status,2,c
 12068  001AB8  EF60  F00D         	goto	u8441
 12069  001ABC  EF62  F00D         	goto	u8440
 12070  001AC0                     u8441:
 12071  001AC0  EF6C  F00D         	goto	l8325
 12072  001AC4                     u8440:
 12073  001AC4  0E00               	movlw	0
 12074  001AC6  6E34               	movwf	?___fladd^0,c
 12075  001AC8  0E00               	movlw	0
 12076  001ACA  6E35               	movwf	(?___fladd+1)^0,c
 12077  001ACC  0E00               	movlw	0
 12078  001ACE  6E36               	movwf	(?___fladd+2)^0,c
 12079  001AD0  0E00               	movlw	0
 12080  001AD2  6E37               	movwf	(?___fladd+3)^0,c
 12081  001AD4  EFBB  F00E         	goto	l1486
 12082  001AD8                     l8325:
 12083  001AD8  5038               	movf	___fladd@a^0,w,c
 12084  001ADA  2634               	addwf	___fladd@b^0,f,c
 12085  001ADC  5039               	movf	(___fladd@a+1)^0,w,c
 12086  001ADE  2235               	addwfc	(___fladd@b+1)^0,f,c
 12087  001AE0  503A               	movf	(___fladd@a+2)^0,w,c
 12088  001AE2  2236               	addwfc	(___fladd@b+2)^0,f,c
 12089  001AE4  503B               	movf	(___fladd@a+3)^0,w,c
 12090  001AE6  2237               	addwfc	(___fladd@b+3)^0,f,c
 12091  001AE8  A037               	btfss	(___fladd@b+3)^0,0,c
 12092  001AEA  EF79  F00D         	goto	u8451
 12093  001AEE  EF7B  F00D         	goto	u8450
 12094  001AF2                     u8451:
 12095  001AF2  EF27  F00E         	goto	l8379
 12096  001AF6                     u8450:
 12097  001AF6  A043               	btfss	___fladd@grs^0,0,c
 12098  001AF8  EF80  F00D         	goto	u8461
 12099  001AFC  EF82  F00D         	goto	u8460
 12100  001B00                     u8461:
 12101  001B00  EF88  F00D         	goto	l8333
 12102  001B04                     u8460:
 12103  001B04  90D8               	bcf	status,0,c
 12104  001B06  3043               	rrcf	___fladd@grs^0,w,c
 12105  001B08  0901               	iorlw	1
 12106  001B0A  6E43               	movwf	___fladd@grs^0,c
 12107  001B0C  EF8A  F00D         	goto	l8335
 12108  001B10                     l8333:
 12109  001B10  90D8               	bcf	status,0,c
 12110  001B12  3243               	rrcf	___fladd@grs^0,f,c
 12111  001B14                     l8335:
 12112  001B14  A034               	btfss	___fladd@b^0,0,c
 12113  001B16  EF8F  F00D         	goto	u8471
 12114  001B1A  EF91  F00D         	goto	u8470
 12115  001B1E                     u8471:
 12116  001B1E  EF92  F00D         	goto	l8339
 12117  001B22                     u8470:
 12118  001B22  8E43               	bsf	___fladd@grs^0,7,c
 12119  001B24                     l8339:
 12120  001B24  3437               	rlcf	(___fladd@b+3)^0,w,c
 12121  001B26  3237               	rrcf	(___fladd@b+3)^0,f,c
 12122  001B28  3236               	rrcf	(___fladd@b+2)^0,f,c
 12123  001B2A  3235               	rrcf	(___fladd@b+1)^0,f,c
 12124  001B2C  3234               	rrcf	___fladd@b^0,f,c
 12125  001B2E  2A42               	incf	___fladd@bexp^0,f,c
 12126  001B30  EF27  F00E         	goto	l8379
 12127  001B34                     l8343:
 12128  001B34  5038               	movf	___fladd@a^0,w,c
 12129  001B36  5C34               	subwf	___fladd@b^0,w,c
 12130  001B38  5039               	movf	(___fladd@a+1)^0,w,c
 12131  001B3A  5835               	subwfb	(___fladd@b+1)^0,w,c
 12132  001B3C  503A               	movf	(___fladd@a+2)^0,w,c
 12133  001B3E  5836               	subwfb	(___fladd@b+2)^0,w,c
 12134  001B40  5037               	movf	(___fladd@b+3)^0,w,c
 12135  001B42  0A80               	xorlw	128
 12136  001B44  6E3C               	movwf	??___fladd^0,c
 12137  001B46  503B               	movf	(___fladd@a+3)^0,w,c
 12138  001B48  0A80               	xorlw	128
 12139  001B4A  583C               	subwfb	??___fladd^0,w,c
 12140  001B4C  B0D8               	btfsc	status,0,c
 12141  001B4E  EFAB  F00D         	goto	u8481
 12142  001B52  EFAD  F00D         	goto	u8480
 12143  001B56                     u8481:
 12144  001B56  EFD8  F00D         	goto	l8353
 12145  001B5A                     u8480:
 12146  001B5A  5034               	movf	___fladd@b^0,w,c
 12147  001B5C  5C38               	subwf	___fladd@a^0,w,c
 12148  001B5E  6E3C               	movwf	??___fladd^0,c
 12149  001B60  5035               	movf	(___fladd@b+1)^0,w,c
 12150  001B62  5839               	subwfb	(___fladd@a+1)^0,w,c
 12151  001B64  6E3D               	movwf	(??___fladd+1)^0,c
 12152  001B66  5036               	movf	(___fladd@b+2)^0,w,c
 12153  001B68  583A               	subwfb	(___fladd@a+2)^0,w,c
 12154  001B6A  6E3E               	movwf	(??___fladd+2)^0,c
 12155  001B6C  5037               	movf	(___fladd@b+3)^0,w,c
 12156  001B6E  583B               	subwfb	(___fladd@a+3)^0,w,c
 12157  001B70  6E3F               	movwf	(??___fladd+3)^0,c
 12158  001B72  0EFF               	movlw	255
 12159  001B74  243C               	addwf	??___fladd^0,w,c
 12160  001B76  6E34               	movwf	___fladd@b^0,c
 12161  001B78  0EFF               	movlw	255
 12162  001B7A  203D               	addwfc	(??___fladd+1)^0,w,c
 12163  001B7C  6E35               	movwf	(___fladd@b+1)^0,c
 12164  001B7E  0EFF               	movlw	255
 12165  001B80  203E               	addwfc	(??___fladd+2)^0,w,c
 12166  001B82  6E36               	movwf	(___fladd@b+2)^0,c
 12167  001B84  0EFF               	movlw	255
 12168  001B86  203F               	addwfc	(??___fladd+3)^0,w,c
 12169  001B88  6E37               	movwf	(___fladd@b+3)^0,c
 12170  001B8A  0E80               	movlw	128
 12171  001B8C  1A40               	xorwf	___fladd@signs^0,f,c
 12172  001B8E  6C43               	negf	___fladd@grs^0,c
 12173  001B90  5043               	movf	___fladd@grs^0,w,c
 12174  001B92  A4D8               	btfss	status,2,c
 12175  001B94  EFCE  F00D         	goto	u8491
 12176  001B98  EFD0  F00D         	goto	u8490
 12177  001B9C                     u8491:
 12178  001B9C  EFE0  F00D         	goto	l1494
 12179  001BA0                     u8490:
 12180  001BA0  0E01               	movlw	1
 12181  001BA2  2634               	addwf	___fladd@b^0,f,c
 12182  001BA4  0E00               	movlw	0
 12183  001BA6  2235               	addwfc	(___fladd@b+1)^0,f,c
 12184  001BA8  2236               	addwfc	(___fladd@b+2)^0,f,c
 12185  001BAA  2237               	addwfc	(___fladd@b+3)^0,f,c
 12186  001BAC  EFE0  F00D         	goto	l1494
 12187  001BB0                     l8353:
 12188  001BB0  5038               	movf	___fladd@a^0,w,c
 12189  001BB2  5E34               	subwf	___fladd@b^0,f,c
 12190  001BB4  5039               	movf	(___fladd@a+1)^0,w,c
 12191  001BB6  5A35               	subwfb	(___fladd@b+1)^0,f,c
 12192  001BB8  503A               	movf	(___fladd@a+2)^0,w,c
 12193  001BBA  5A36               	subwfb	(___fladd@b+2)^0,f,c
 12194  001BBC  503B               	movf	(___fladd@a+3)^0,w,c
 12195  001BBE  5A37               	subwfb	(___fladd@b+3)^0,f,c
 12196  001BC0                     l1494:
 12197  001BC0  5034               	movf	___fladd@b^0,w,c
 12198  001BC2  1035               	iorwf	(___fladd@b+1)^0,w,c
 12199  001BC4  1036               	iorwf	(___fladd@b+2)^0,w,c
 12200  001BC6  1037               	iorwf	(___fladd@b+3)^0,w,c
 12201  001BC8  A4D8               	btfss	status,2,c
 12202  001BCA  EFE9  F00D         	goto	u8501
 12203  001BCE  EFEB  F00D         	goto	u8500
 12204  001BD2                     u8501:
 12205  001BD2  EF20  F00E         	goto	l8377
 12206  001BD6                     u8500:
 12207  001BD6  5043               	movf	___fladd@grs^0,w,c
 12208  001BD8  A4D8               	btfss	status,2,c
 12209  001BDA  EFF1  F00D         	goto	u8511
 12210  001BDE  EFF3  F00D         	goto	u8510
 12211  001BE2                     u8511:
 12212  001BE2  EF20  F00E         	goto	l8377
 12213  001BE6                     u8510:
 12214  001BE6  0E00               	movlw	0
 12215  001BE8  6E34               	movwf	?___fladd^0,c
 12216  001BEA  0E00               	movlw	0
 12217  001BEC  6E35               	movwf	(?___fladd+1)^0,c
 12218  001BEE  0E00               	movlw	0
 12219  001BF0  6E36               	movwf	(?___fladd+2)^0,c
 12220  001BF2  0E00               	movlw	0
 12221  001BF4  6E37               	movwf	(?___fladd+3)^0,c
 12222  001BF6  EFBB  F00E         	goto	l1486
 12223  001BFA                     l8361:
 12224  001BFA  90D8               	bcf	status,0,c
 12225  001BFC  3634               	rlcf	___fladd@b^0,f,c
 12226  001BFE  3635               	rlcf	(___fladd@b+1)^0,f,c
 12227  001C00  3636               	rlcf	(___fladd@b+2)^0,f,c
 12228  001C02  3637               	rlcf	(___fladd@b+3)^0,f,c
 12229  001C04  AE43               	btfss	___fladd@grs^0,7,c
 12230  001C06  EF07  F00E         	goto	u8521
 12231  001C0A  EF09  F00E         	goto	u8520
 12232  001C0E                     u8521:
 12233  001C0E  EF0A  F00E         	goto	l8367
 12234  001C12                     u8520:
 12235  001C12  8034               	bsf	___fladd@b^0,0,c
 12236  001C14                     l8367:
 12237  001C14  A043               	btfss	___fladd@grs^0,0,c
 12238  001C16  EF0F  F00E         	goto	u8531
 12239  001C1A  EF11  F00E         	goto	u8530
 12240  001C1E                     u8531:
 12241  001C1E  EF15  F00E         	goto	l8371
 12242  001C22                     u8530:
 12243  001C22  80D8               	bsf	status,0,c
 12244  001C24  3643               	rlcf	___fladd@grs^0,f,c
 12245  001C26  EF17  F00E         	goto	l8373
 12246  001C2A                     l8371:
 12247  001C2A  90D8               	bcf	status,0,c
 12248  001C2C  3643               	rlcf	___fladd@grs^0,f,c
 12249  001C2E                     l8373:
 12250  001C2E  5042               	movf	___fladd@bexp^0,w,c
 12251  001C30  B4D8               	btfsc	status,2,c
 12252  001C32  EF1D  F00E         	goto	u8541
 12253  001C36  EF1F  F00E         	goto	u8540
 12254  001C3A                     u8541:
 12255  001C3A  EF20  F00E         	goto	l8377
 12256  001C3E                     u8540:
 12257  001C3E  0642               	decf	___fladd@bexp^0,f,c
 12258  001C40                     l8377:
 12259  001C40  AE36               	btfss	(___fladd@b+2)^0,7,c
 12260  001C42  EF25  F00E         	goto	u8551
 12261  001C46  EF27  F00E         	goto	u8550
 12262  001C4A                     u8551:
 12263  001C4A  EFFD  F00D         	goto	l8361
 12264  001C4E                     u8550:
 12265  001C4E                     l8379:
 12266  001C4E  0E00               	movlw	0
 12267  001C50  6E41               	movwf	___fladd@aexp^0,c
 12268  001C52  AE43               	btfss	___fladd@grs^0,7,c
 12269  001C54  EF2E  F00E         	goto	u8561
 12270  001C58  EF30  F00E         	goto	u8560
 12271  001C5C                     u8561:
 12272  001C5C  EF48  F00E         	goto	l1503
 12273  001C60                     u8560:
 12274  001C60  C043  F03C         	movff	___fladd@grs,??___fladd
 12275  001C64  0E7F               	movlw	127
 12276  001C66  163C               	andwf	??___fladd^0,f,c
 12277  001C68  B4D8               	btfsc	status,2,c
 12278  001C6A  EF39  F00E         	goto	u8571
 12279  001C6E  EF3B  F00E         	goto	u8570
 12280  001C72                     u8571:
 12281  001C72  EF3F  F00E         	goto	l1504
 12282  001C76                     u8570:
 12283  001C76                     l8385:
 12284  001C76  0E01               	movlw	1
 12285  001C78  6E41               	movwf	___fladd@aexp^0,c
 12286  001C7A  EF48  F00E         	goto	l1503
 12287  001C7E                     l1504:
 12288  001C7E  A034               	btfss	___fladd@b^0,0,c
 12289  001C80  EF44  F00E         	goto	u8581
 12290  001C84  EF46  F00E         	goto	u8580
 12291  001C88                     u8581:
 12292  001C88  EF48  F00E         	goto	l1503
 12293  001C8C                     u8580:
 12294  001C8C  EF3B  F00E         	goto	l8385
 12295  001C90                     l1503:
 12296  001C90  5041               	movf	___fladd@aexp^0,w,c
 12297  001C92  B4D8               	btfsc	status,2,c
 12298  001C94  EF4E  F00E         	goto	u8591
 12299  001C98  EF50  F00E         	goto	u8590
 12300  001C9C                     u8591:
 12301  001C9C  EF7B  F00E         	goto	l8397
 12302  001CA0                     u8590:
 12303  001CA0  0E01               	movlw	1
 12304  001CA2  2634               	addwf	___fladd@b^0,f,c
 12305  001CA4  0E00               	movlw	0
 12306  001CA6  2235               	addwfc	(___fladd@b+1)^0,f,c
 12307  001CA8  2236               	addwfc	(___fladd@b+2)^0,f,c
 12308  001CAA  2237               	addwfc	(___fladd@b+3)^0,f,c
 12309  001CAC  A037               	btfss	(___fladd@b+3)^0,0,c
 12310  001CAE  EF5B  F00E         	goto	u8601
 12311  001CB2  EF5D  F00E         	goto	u8600
 12312  001CB6                     u8601:
 12313  001CB6  EF7B  F00E         	goto	l8397
 12314  001CBA                     u8600:
 12315  001CBA  C034  F03C         	movff	___fladd@b,??___fladd
 12316  001CBE  C035  F03D         	movff	___fladd@b+1,??___fladd+1
 12317  001CC2  C036  F03E         	movff	___fladd@b+2,??___fladd+2
 12318  001CC6  C037  F03F         	movff	___fladd@b+3,??___fladd+3
 12319  001CCA  343F               	rlcf	(??___fladd+3)^0,w,c
 12320  001CCC  323F               	rrcf	(??___fladd+3)^0,f,c
 12321  001CCE  323E               	rrcf	(??___fladd+2)^0,f,c
 12322  001CD0  323D               	rrcf	(??___fladd+1)^0,f,c
 12323  001CD2  323C               	rrcf	??___fladd^0,f,c
 12324  001CD4  C03C  F034         	movff	??___fladd,___fladd@b
 12325  001CD8  C03D  F035         	movff	??___fladd+1,___fladd@b+1
 12326  001CDC  C03E  F036         	movff	??___fladd+2,___fladd@b+2
 12327  001CE0  C03F  F037         	movff	??___fladd+3,___fladd@b+3
 12328  001CE4  2842               	incf	___fladd@bexp^0,w,c
 12329  001CE6  B4D8               	btfsc	status,2,c
 12330  001CE8  EF78  F00E         	goto	u8611
 12331  001CEC  EF7A  F00E         	goto	u8610
 12332  001CF0                     u8611:
 12333  001CF0  EF7B  F00E         	goto	l8397
 12334  001CF4                     u8610:
 12335  001CF4  2A42               	incf	___fladd@bexp^0,f,c
 12336  001CF6                     l8397:
 12337  001CF6  2842               	incf	___fladd@bexp^0,w,c
 12338  001CF8  B4D8               	btfsc	status,2,c
 12339  001CFA  EF81  F00E         	goto	u8621
 12340  001CFE  EF83  F00E         	goto	u8620
 12341  001D02                     u8621:
 12342  001D02  EF8B  F00E         	goto	l8401
 12343  001D06                     u8620:
 12344  001D06  5042               	movf	___fladd@bexp^0,w,c
 12345  001D08  A4D8               	btfss	status,2,c
 12346  001D0A  EF89  F00E         	goto	u8631
 12347  001D0E  EF8B  F00E         	goto	u8630
 12348  001D12                     u8631:
 12349  001D12  EF9D  F00E         	goto	l8405
 12350  001D16                     u8630:
 12351  001D16                     l8401:
 12352  001D16  0E00               	movlw	0
 12353  001D18  6E34               	movwf	___fladd@b^0,c
 12354  001D1A  0E00               	movlw	0
 12355  001D1C  6E35               	movwf	(___fladd@b+1)^0,c
 12356  001D1E  0E00               	movlw	0
 12357  001D20  6E36               	movwf	(___fladd@b+2)^0,c
 12358  001D22  0E00               	movlw	0
 12359  001D24  6E37               	movwf	(___fladd@b+3)^0,c
 12360  001D26  5042               	movf	___fladd@bexp^0,w,c
 12361  001D28  A4D8               	btfss	status,2,c
 12362  001D2A  EF99  F00E         	goto	u8641
 12363  001D2E  EF9B  F00E         	goto	u8640
 12364  001D32                     u8641:
 12365  001D32  EF9D  F00E         	goto	l8405
 12366  001D36                     u8640:
 12367  001D36  0E00               	movlw	0
 12368  001D38  6E40               	movwf	___fladd@signs^0,c
 12369  001D3A                     l8405:
 12370  001D3A  A042               	btfss	___fladd@bexp^0,0,c
 12371  001D3C  EFA2  F00E         	goto	u8651
 12372  001D40  EFA4  F00E         	goto	u8650
 12373  001D44                     u8651:
 12374  001D44  EFA7  F00E         	goto	l8409
 12375  001D48                     u8650:
 12376  001D48  8E36               	bsf	(___fladd@b+2)^0,7,c
 12377  001D4A  EFA8  F00E         	goto	l8411
 12378  001D4E                     l8409:
 12379  001D4E  9E36               	bcf	(___fladd@b+2)^0,7,c
 12380  001D50                     l8411:
 12381  001D50  90D8               	bcf	status,0,c
 12382  001D52  3042               	rrcf	___fladd@bexp^0,w,c
 12383  001D54  6E37               	movwf	(___fladd@b+3)^0,c
 12384  001D56  AE40               	btfss	___fladd@signs^0,7,c
 12385  001D58  EFB0  F00E         	goto	u8661
 12386  001D5C  EFB2  F00E         	goto	u8660
 12387  001D60                     u8661:
 12388  001D60  EFB3  F00E         	goto	l8417
 12389  001D64                     u8660:
 12390  001D64  8E37               	bsf	(___fladd@b+3)^0,7,c
 12391  001D66                     l8417:
 12392  001D66  C034  F034         	movff	___fladd@b,?___fladd
 12393  001D6A  C035  F035         	movff	___fladd@b+1,?___fladd+1
 12394  001D6E  C036  F036         	movff	___fladd@b+2,?___fladd+2
 12395  001D72  C037  F037         	movff	___fladd@b+3,?___fladd+3
 12396  001D76                     l1486:
 12397  001D76  0012               	return		;funcret
 12398  001D78                     __end_of___fladd:
 12399                           	opt callstack 0
 12400                           
 12401 ;; *************** function ___flneg *****************
 12402 ;; Defined at:
 12403 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;  f1              4    5[COMRAM] unsigned char 
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;		None
 12408 ;; Return value:  Size  Location     Type
 12409 ;;                  4    5[COMRAM] unsigned char 
 12410 ;; Registers used:
 12411 ;;		wreg, status,2, status,0
 12412 ;; Tracked objects:
 12413 ;;		On entry : 0/0
 12414 ;;		On exit  : 0/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12417 ;;      Params:         4       0       0       0       0       0       0       0       0
 12418 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12419 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12420 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12421 ;;Total ram usage:        4 bytes
 12422 ;; Hardware stack levels used:    1
 12423 ;; Hardware stack levels required when called:    2
 12424 ;; This function calls:
 12425 ;;		Nothing
 12426 ;; This function is called by:
 12427 ;;		_efgtoa
 12428 ;;		_roundf
 12429 ;; This function uses a non-reentrant model
 12430 ;;
 12431                           
 12432                           	psect	text44
 12433  00565E                     __ptext44:
 12434                           	opt callstack 0
 12435  00565E                     ___flneg:
 12436                           	opt callstack 23
 12437  00565E  5006               	movf	___flneg@f1^0,w,c
 12438  005660  1007               	iorwf	(___flneg@f1+1)^0,w,c
 12439  005662  1008               	iorwf	(___flneg@f1+2)^0,w,c
 12440  005664  1009               	iorwf	(___flneg@f1+3)^0,w,c
 12441  005666  B4D8               	btfsc	status,2,c
 12442  005668  EF38  F02B         	goto	u9711
 12443  00566C  EF3A  F02B         	goto	u9710
 12444  005670                     u9711:
 12445  005670  EF42  F02B         	goto	l9001
 12446  005674                     u9710:
 12447  005674  0E00               	movlw	0
 12448  005676  1A06               	xorwf	___flneg@f1^0,f,c
 12449  005678  0E00               	movlw	0
 12450  00567A  1A07               	xorwf	(___flneg@f1+1)^0,f,c
 12451  00567C  0E00               	movlw	0
 12452  00567E  1A08               	xorwf	(___flneg@f1+2)^0,f,c
 12453  005680  0E80               	movlw	128
 12454  005682  1A09               	xorwf	(___flneg@f1+3)^0,f,c
 12455  005684                     l9001:
 12456  005684  C006  F006         	movff	___flneg@f1,?___flneg
 12457  005688  C007  F007         	movff	___flneg@f1+1,?___flneg+1
 12458  00568C  C008  F008         	movff	___flneg@f1+2,?___flneg+2
 12459  005690  C009  F009         	movff	___flneg@f1+3,?___flneg+3
 12460  005694  0012               	return		;funcret
 12461  005696                     __end_of___flneg:
 12462                           	opt callstack 0
 12463                           
 12464 ;; *************** function ___flmul *****************
 12465 ;; Defined at:
 12466 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 12467 ;; Parameters:    Size  Location     Type
 12468 ;;  b               4   26[COMRAM] unsigned char 
 12469 ;;  a               4   30[COMRAM] unsigned char 
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;  prod            4   45[COMRAM] struct .
 12472 ;;  grs             4   40[COMRAM] unsigned long 
 12473 ;;  temp            2   49[COMRAM] struct .
 12474 ;;  bexp            1   44[COMRAM] unsigned char 
 12475 ;;  aexp            1   39[COMRAM] unsigned char 
 12476 ;;  sign            1   38[COMRAM] unsigned char 
 12477 ;; Return value:  Size  Location     Type
 12478 ;;                  4   26[COMRAM] unsigned char 
 12479 ;; Registers used:
 12480 ;;		wreg, status,2, status,0, prodl, prodh
 12481 ;; Tracked objects:
 12482 ;;		On entry : 0/0
 12483 ;;		On exit  : 0/0
 12484 ;;		Unchanged: 0/0
 12485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12486 ;;      Params:         8       0       0       0       0       0       0       0       0
 12487 ;;      Locals:        13       0       0       0       0       0       0       0       0
 12488 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12489 ;;      Totals:        25       0       0       0       0       0       0       0       0
 12490 ;;Total ram usage:       25 bytes
 12491 ;; Hardware stack levels used:    1
 12492 ;; Hardware stack levels required when called:    2
 12493 ;; This function calls:
 12494 ;;		Nothing
 12495 ;; This function is called by:
 12496 ;;		_pwmDuty
 12497 ;;		_PID
 12498 ;;		_efgtoa
 12499 ;;		_roundf
 12500 ;; This function uses a non-reentrant model
 12501 ;;
 12502                           
 12503                           	psect	text45
 12504  001D78                     __ptext45:
 12505                           	opt callstack 0
 12506  001D78                     ___flmul:
 12507                           	opt callstack 23
 12508  001D78  501E               	movf	(___flmul@b+3)^0,w,c
 12509  001D7A  0B80               	andlw	128
 12510  001D7C  6E27               	movwf	___flmul@sign^0,c
 12511  001D7E  501E               	movf	(___flmul@b+3)^0,w,c
 12512  001D80  241E               	addwf	(___flmul@b+3)^0,w,c
 12513  001D82  6E2D               	movwf	___flmul@bexp^0,c
 12514  001D84  AE1D               	btfss	(___flmul@b+2)^0,7,c
 12515  001D86  EFC7  F00E         	goto	u9321
 12516  001D8A  EFC9  F00E         	goto	u9320
 12517  001D8E                     u9321:
 12518  001D8E  EFCA  F00E         	goto	l8749
 12519  001D92                     u9320:
 12520  001D92  802D               	bsf	___flmul@bexp^0,0,c
 12521  001D94                     l8749:
 12522  001D94  502D               	movf	___flmul@bexp^0,w,c
 12523  001D96  B4D8               	btfsc	status,2,c
 12524  001D98  EFD0  F00E         	goto	u9331
 12525  001D9C  EFD2  F00E         	goto	u9330
 12526  001DA0                     u9331:
 12527  001DA0  EFE5  F00E         	goto	l8757
 12528  001DA4                     u9330:
 12529  001DA4  282D               	incf	___flmul@bexp^0,w,c
 12530  001DA6  A4D8               	btfss	status,2,c
 12531  001DA8  EFD8  F00E         	goto	u9341
 12532  001DAC  EFDA  F00E         	goto	u9340
 12533  001DB0                     u9341:
 12534  001DB0  EFE2  F00E         	goto	l8755
 12535  001DB4                     u9340:
 12536  001DB4  0E00               	movlw	0
 12537  001DB6  6E1B               	movwf	___flmul@b^0,c
 12538  001DB8  0E00               	movlw	0
 12539  001DBA  6E1C               	movwf	(___flmul@b+1)^0,c
 12540  001DBC  0E00               	movlw	0
 12541  001DBE  6E1D               	movwf	(___flmul@b+2)^0,c
 12542  001DC0  0E00               	movlw	0
 12543  001DC2  6E1E               	movwf	(___flmul@b+3)^0,c
 12544  001DC4                     l8755:
 12545  001DC4  8E1D               	bsf	(___flmul@b+2)^0,7,c
 12546  001DC6  EFED  F00E         	goto	l8759
 12547  001DCA                     l8757:
 12548  001DCA  0E00               	movlw	0
 12549  001DCC  6E1B               	movwf	___flmul@b^0,c
 12550  001DCE  0E00               	movlw	0
 12551  001DD0  6E1C               	movwf	(___flmul@b+1)^0,c
 12552  001DD2  0E00               	movlw	0
 12553  001DD4  6E1D               	movwf	(___flmul@b+2)^0,c
 12554  001DD6  0E00               	movlw	0
 12555  001DD8  6E1E               	movwf	(___flmul@b+3)^0,c
 12556  001DDA                     l8759:
 12557  001DDA  5022               	movf	(___flmul@a+3)^0,w,c
 12558  001DDC  0B80               	andlw	128
 12559  001DDE  1A27               	xorwf	___flmul@sign^0,f,c
 12560  001DE0  5022               	movf	(___flmul@a+3)^0,w,c
 12561  001DE2  2422               	addwf	(___flmul@a+3)^0,w,c
 12562  001DE4  6E28               	movwf	___flmul@aexp^0,c
 12563  001DE6  AE21               	btfss	(___flmul@a+2)^0,7,c
 12564  001DE8  EFF8  F00E         	goto	u9351
 12565  001DEC  EFFA  F00E         	goto	u9350
 12566  001DF0                     u9351:
 12567  001DF0  EFFB  F00E         	goto	l8767
 12568  001DF4                     u9350:
 12569  001DF4  8028               	bsf	___flmul@aexp^0,0,c
 12570  001DF6                     l8767:
 12571  001DF6  5028               	movf	___flmul@aexp^0,w,c
 12572  001DF8  B4D8               	btfsc	status,2,c
 12573  001DFA  EF01  F00F         	goto	u9361
 12574  001DFE  EF03  F00F         	goto	u9360
 12575  001E02                     u9361:
 12576  001E02  EF16  F00F         	goto	l8775
 12577  001E06                     u9360:
 12578  001E06  2828               	incf	___flmul@aexp^0,w,c
 12579  001E08  A4D8               	btfss	status,2,c
 12580  001E0A  EF09  F00F         	goto	u9371
 12581  001E0E  EF0B  F00F         	goto	u9370
 12582  001E12                     u9371:
 12583  001E12  EF13  F00F         	goto	l8773
 12584  001E16                     u9370:
 12585  001E16  0E00               	movlw	0
 12586  001E18  6E1F               	movwf	___flmul@a^0,c
 12587  001E1A  0E00               	movlw	0
 12588  001E1C  6E20               	movwf	(___flmul@a+1)^0,c
 12589  001E1E  0E00               	movlw	0
 12590  001E20  6E21               	movwf	(___flmul@a+2)^0,c
 12591  001E22  0E00               	movlw	0
 12592  001E24  6E22               	movwf	(___flmul@a+3)^0,c
 12593  001E26                     l8773:
 12594  001E26  8E21               	bsf	(___flmul@a+2)^0,7,c
 12595  001E28  EF1E  F00F         	goto	l1563
 12596  001E2C                     l8775:
 12597  001E2C  0E00               	movlw	0
 12598  001E2E  6E1F               	movwf	___flmul@a^0,c
 12599  001E30  0E00               	movlw	0
 12600  001E32  6E20               	movwf	(___flmul@a+1)^0,c
 12601  001E34  0E00               	movlw	0
 12602  001E36  6E21               	movwf	(___flmul@a+2)^0,c
 12603  001E38  0E00               	movlw	0
 12604  001E3A  6E22               	movwf	(___flmul@a+3)^0,c
 12605  001E3C                     l1563:
 12606  001E3C  5028               	movf	___flmul@aexp^0,w,c
 12607  001E3E  B4D8               	btfsc	status,2,c
 12608  001E40  EF24  F00F         	goto	u9381
 12609  001E44  EF26  F00F         	goto	u9380
 12610  001E48                     u9381:
 12611  001E48  EF2E  F00F         	goto	l8779
 12612  001E4C                     u9380:
 12613  001E4C  502D               	movf	___flmul@bexp^0,w,c
 12614  001E4E  A4D8               	btfss	status,2,c
 12615  001E50  EF2C  F00F         	goto	u9391
 12616  001E54  EF2E  F00F         	goto	u9390
 12617  001E58                     u9391:
 12618  001E58  EF38  F00F         	goto	l8783
 12619  001E5C                     u9390:
 12620  001E5C                     l8779:
 12621  001E5C  0E00               	movlw	0
 12622  001E5E  6E1B               	movwf	?___flmul^0,c
 12623  001E60  0E00               	movlw	0
 12624  001E62  6E1C               	movwf	(?___flmul+1)^0,c
 12625  001E64  0E00               	movlw	0
 12626  001E66  6E1D               	movwf	(?___flmul+2)^0,c
 12627  001E68  0E00               	movlw	0
 12628  001E6A  6E1E               	movwf	(?___flmul+3)^0,c
 12629  001E6C  EFD0  F010         	goto	l1567
 12630  001E70                     l8783:
 12631  001E70  5021               	movf	(___flmul@a+2)^0,w,c
 12632  001E72  021B               	mulwf	___flmul@b^0,c
 12633  001E74  CFF3 F032          	movff	prodl,___flmul@temp
 12634  001E78  CFF4 F033          	movff	prodh,___flmul@temp+1
 12635  001E7C  5032               	movf	___flmul@temp^0,w,c
 12636  001E7E  6E29               	movwf	___flmul@grs^0,c
 12637  001E80  6A2A               	clrf	(___flmul@grs+1)^0,c
 12638  001E82  6A2B               	clrf	(___flmul@grs+2)^0,c
 12639  001E84  6A2C               	clrf	(___flmul@grs+3)^0,c
 12640  001E86  5033               	movf	(___flmul@temp+1)^0,w,c
 12641  001E88  6E2E               	movwf	___flmul@prod^0,c
 12642  001E8A  6A2F               	clrf	(___flmul@prod+1)^0,c
 12643  001E8C  6A30               	clrf	(___flmul@prod+2)^0,c
 12644  001E8E  6A31               	clrf	(___flmul@prod+3)^0,c
 12645  001E90  5020               	movf	(___flmul@a+1)^0,w,c
 12646  001E92  021C               	mulwf	(___flmul@b+1)^0,c
 12647  001E94  CFF3 F032          	movff	prodl,___flmul@temp
 12648  001E98  CFF4 F033          	movff	prodh,___flmul@temp+1
 12649  001E9C  5032               	movf	___flmul@temp^0,w,c
 12650  001E9E  2629               	addwf	___flmul@grs^0,f,c
 12651  001EA0  0E00               	movlw	0
 12652  001EA2  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12653  001EA4  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12654  001EA6  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12655  001EA8  5033               	movf	(___flmul@temp+1)^0,w,c
 12656  001EAA  262E               	addwf	___flmul@prod^0,f,c
 12657  001EAC  0E00               	movlw	0
 12658  001EAE  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12659  001EB0  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12660  001EB2  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12661  001EB4  501F               	movf	___flmul@a^0,w,c
 12662  001EB6  021D               	mulwf	(___flmul@b+2)^0,c
 12663  001EB8  CFF3 F032          	movff	prodl,___flmul@temp
 12664  001EBC  CFF4 F033          	movff	prodh,___flmul@temp+1
 12665  001EC0  5032               	movf	___flmul@temp^0,w,c
 12666  001EC2  2629               	addwf	___flmul@grs^0,f,c
 12667  001EC4  0E00               	movlw	0
 12668  001EC6  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12669  001EC8  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12670  001ECA  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12671  001ECC  5033               	movf	(___flmul@temp+1)^0,w,c
 12672  001ECE  262E               	addwf	___flmul@prod^0,f,c
 12673  001ED0  0E00               	movlw	0
 12674  001ED2  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12675  001ED4  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12676  001ED6  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12677  001ED8  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12678  001EDC  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12679  001EE0  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12680  001EE4  6A29               	clrf	___flmul@grs^0,c
 12681  001EE6  501F               	movf	___flmul@a^0,w,c
 12682  001EE8  021C               	mulwf	(___flmul@b+1)^0,c
 12683  001EEA  CFF3 F032          	movff	prodl,___flmul@temp
 12684  001EEE  CFF4 F033          	movff	prodh,___flmul@temp+1
 12685  001EF2  5032               	movf	___flmul@temp^0,w,c
 12686  001EF4  2629               	addwf	___flmul@grs^0,f,c
 12687  001EF6  5033               	movf	(___flmul@temp+1)^0,w,c
 12688  001EF8  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12689  001EFA  0E00               	movlw	0
 12690  001EFC  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12691  001EFE  0E00               	movlw	0
 12692  001F00  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12693  001F02  5020               	movf	(___flmul@a+1)^0,w,c
 12694  001F04  021B               	mulwf	___flmul@b^0,c
 12695  001F06  CFF3 F032          	movff	prodl,___flmul@temp
 12696  001F0A  CFF4 F033          	movff	prodh,___flmul@temp+1
 12697  001F0E  5032               	movf	___flmul@temp^0,w,c
 12698  001F10  2629               	addwf	___flmul@grs^0,f,c
 12699  001F12  5033               	movf	(___flmul@temp+1)^0,w,c
 12700  001F14  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12701  001F16  0E00               	movlw	0
 12702  001F18  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12703  001F1A  0E00               	movlw	0
 12704  001F1C  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12705  001F1E  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12706  001F22  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12707  001F26  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12708  001F2A  6A29               	clrf	___flmul@grs^0,c
 12709  001F2C  501F               	movf	___flmul@a^0,w,c
 12710  001F2E  021B               	mulwf	___flmul@b^0,c
 12711  001F30  CFF3 F032          	movff	prodl,___flmul@temp
 12712  001F34  CFF4 F033          	movff	prodh,___flmul@temp+1
 12713  001F38  5032               	movf	___flmul@temp^0,w,c
 12714  001F3A  2629               	addwf	___flmul@grs^0,f,c
 12715  001F3C  5033               	movf	(___flmul@temp+1)^0,w,c
 12716  001F3E  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12717  001F40  0E00               	movlw	0
 12718  001F42  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12719  001F44  0E00               	movlw	0
 12720  001F46  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12721  001F48  5021               	movf	(___flmul@a+2)^0,w,c
 12722  001F4A  021C               	mulwf	(___flmul@b+1)^0,c
 12723  001F4C  CFF3 F032          	movff	prodl,___flmul@temp
 12724  001F50  CFF4 F033          	movff	prodh,___flmul@temp+1
 12725  001F54  5032               	movf	___flmul@temp^0,w,c
 12726  001F56  262E               	addwf	___flmul@prod^0,f,c
 12727  001F58  5033               	movf	(___flmul@temp+1)^0,w,c
 12728  001F5A  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12729  001F5C  0E00               	movlw	0
 12730  001F5E  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12731  001F60  0E00               	movlw	0
 12732  001F62  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12733  001F64  5020               	movf	(___flmul@a+1)^0,w,c
 12734  001F66  021D               	mulwf	(___flmul@b+2)^0,c
 12735  001F68  CFF3 F032          	movff	prodl,___flmul@temp
 12736  001F6C  CFF4 F033          	movff	prodh,___flmul@temp+1
 12737  001F70  5032               	movf	___flmul@temp^0,w,c
 12738  001F72  262E               	addwf	___flmul@prod^0,f,c
 12739  001F74  5033               	movf	(___flmul@temp+1)^0,w,c
 12740  001F76  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12741  001F78  0E00               	movlw	0
 12742  001F7A  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12743  001F7C  0E00               	movlw	0
 12744  001F7E  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12745  001F80  5021               	movf	(___flmul@a+2)^0,w,c
 12746  001F82  021D               	mulwf	(___flmul@b+2)^0,c
 12747  001F84  CFF3 F032          	movff	prodl,___flmul@temp
 12748  001F88  CFF4 F033          	movff	prodh,___flmul@temp+1
 12749  001F8C  5032               	movf	___flmul@temp^0,w,c
 12750  001F8E  6E23               	movwf	??___flmul^0,c
 12751  001F90  5033               	movf	(___flmul@temp+1)^0,w,c
 12752  001F92  6E24               	movwf	(??___flmul+1)^0,c
 12753  001F94  6A25               	clrf	(??___flmul+2)^0,c
 12754  001F96  6A26               	clrf	(??___flmul+3)^0,c
 12755  001F98  C025  F026         	movff	??___flmul+2,??___flmul+3
 12756  001F9C  C024  F025         	movff	??___flmul+1,??___flmul+2
 12757  001FA0  C023  F024         	movff	??___flmul,??___flmul+1
 12758  001FA4  6A23               	clrf	??___flmul^0,c
 12759  001FA6  5023               	movf	??___flmul^0,w,c
 12760  001FA8  262E               	addwf	___flmul@prod^0,f,c
 12761  001FAA  5024               	movf	(??___flmul+1)^0,w,c
 12762  001FAC  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12763  001FAE  5025               	movf	(??___flmul+2)^0,w,c
 12764  001FB0  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12765  001FB2  5026               	movf	(??___flmul+3)^0,w,c
 12766  001FB4  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12767  001FB6  C029  F023         	movff	___flmul@grs,??___flmul
 12768  001FBA  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
 12769  001FBE  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
 12770  001FC2  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
 12771  001FC6  0E19               	movlw	25
 12772  001FC8  EFEB  F00F         	goto	u9400
 12773  001FCC                     u9405:
 12774  001FCC  90D8               	bcf	status,0,c
 12775  001FCE  3226               	rrcf	(??___flmul+3)^0,f,c
 12776  001FD0  3225               	rrcf	(??___flmul+2)^0,f,c
 12777  001FD2  3224               	rrcf	(??___flmul+1)^0,f,c
 12778  001FD4  3223               	rrcf	??___flmul^0,f,c
 12779  001FD6                     u9400:
 12780  001FD6  2EE8               	decfsz	wreg,f,c
 12781  001FD8  EFE6  F00F         	goto	u9405
 12782  001FDC  5023               	movf	??___flmul^0,w,c
 12783  001FDE  262E               	addwf	___flmul@prod^0,f,c
 12784  001FE0  5024               	movf	(??___flmul+1)^0,w,c
 12785  001FE2  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12786  001FE4  5025               	movf	(??___flmul+2)^0,w,c
 12787  001FE6  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12788  001FE8  5026               	movf	(??___flmul+3)^0,w,c
 12789  001FEA  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12790  001FEC  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12791  001FF0  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12792  001FF4  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12793  001FF8  6A29               	clrf	___flmul@grs^0,c
 12794  001FFA  5028               	movf	___flmul@aexp^0,w,c
 12795  001FFC  C02D  F023         	movff	___flmul@bexp,??___flmul
 12796  002000  6A24               	clrf	(??___flmul+1)^0,c
 12797  002002  2623               	addwf	??___flmul^0,f,c
 12798  002004  0E00               	movlw	0
 12799  002006  2224               	addwfc	(??___flmul+1)^0,f,c
 12800  002008  0E82               	movlw	130
 12801  00200A  2423               	addwf	??___flmul^0,w,c
 12802  00200C  6E32               	movwf	___flmul@temp^0,c
 12803  00200E  0EFF               	movlw	255
 12804  002010  2024               	addwfc	(??___flmul+1)^0,w,c
 12805  002012  6E33               	movwf	(___flmul@temp+1)^0,c
 12806  002014  EF21  F010         	goto	l8831
 12807  002018                     l8825:
 12808  002018  90D8               	bcf	status,0,c
 12809  00201A  362E               	rlcf	___flmul@prod^0,f,c
 12810  00201C  362F               	rlcf	(___flmul@prod+1)^0,f,c
 12811  00201E  3630               	rlcf	(___flmul@prod+2)^0,f,c
 12812  002020  3631               	rlcf	(___flmul@prod+3)^0,f,c
 12813  002022  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 12814  002024  EF16  F010         	goto	u9411
 12815  002028  EF18  F010         	goto	u9410
 12816  00202C                     u9411:
 12817  00202C  EF19  F010         	goto	l1570
 12818  002030                     u9410:
 12819  002030  802E               	bsf	___flmul@prod^0,0,c
 12820  002032                     l1570:
 12821  002032  90D8               	bcf	status,0,c
 12822  002034  3629               	rlcf	___flmul@grs^0,f,c
 12823  002036  362A               	rlcf	(___flmul@grs+1)^0,f,c
 12824  002038  362B               	rlcf	(___flmul@grs+2)^0,f,c
 12825  00203A  362C               	rlcf	(___flmul@grs+3)^0,f,c
 12826  00203C  0632               	decf	___flmul@temp^0,f,c
 12827  00203E  A0D8               	btfss	status,0,c
 12828  002040  0633               	decf	(___flmul@temp+1)^0,f,c
 12829  002042                     l8831:
 12830  002042  AE30               	btfss	(___flmul@prod+2)^0,7,c
 12831  002044  EF26  F010         	goto	u9421
 12832  002048  EF28  F010         	goto	u9420
 12833  00204C                     u9421:
 12834  00204C  EF0C  F010         	goto	l8825
 12835  002050                     u9420:
 12836  002050  0E00               	movlw	0
 12837  002052  6E28               	movwf	___flmul@aexp^0,c
 12838  002054  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 12839  002056  EF2F  F010         	goto	u9431
 12840  00205A  EF31  F010         	goto	u9430
 12841  00205E                     u9431:
 12842  00205E  EF55  F010         	goto	l1572
 12843  002062                     u9430:
 12844  002062  0EFF               	movlw	255
 12845  002064  1429               	andwf	___flmul@grs^0,w,c
 12846  002066  6E23               	movwf	??___flmul^0,c
 12847  002068  0EFF               	movlw	255
 12848  00206A  142A               	andwf	(___flmul@grs+1)^0,w,c
 12849  00206C  6E24               	movwf	(??___flmul+1)^0,c
 12850  00206E  0EFF               	movlw	255
 12851  002070  142B               	andwf	(___flmul@grs+2)^0,w,c
 12852  002072  6E25               	movwf	(??___flmul+2)^0,c
 12853  002074  0E7F               	movlw	127
 12854  002076  142C               	andwf	(___flmul@grs+3)^0,w,c
 12855  002078  6E26               	movwf	(??___flmul+3)^0,c
 12856  00207A  5023               	movf	??___flmul^0,w,c
 12857  00207C  1024               	iorwf	(??___flmul+1)^0,w,c
 12858  00207E  1025               	iorwf	(??___flmul+2)^0,w,c
 12859  002080  1026               	iorwf	(??___flmul+3)^0,w,c
 12860  002082  B4D8               	btfsc	status,2,c
 12861  002084  EF46  F010         	goto	u9441
 12862  002088  EF48  F010         	goto	u9440
 12863  00208C                     u9441:
 12864  00208C  EF4C  F010         	goto	l1573
 12865  002090                     u9440:
 12866  002090                     l8839:
 12867  002090  0E01               	movlw	1
 12868  002092  6E28               	movwf	___flmul@aexp^0,c
 12869  002094  EF55  F010         	goto	l1572
 12870  002098                     l1573:
 12871  002098  A02E               	btfss	___flmul@prod^0,0,c
 12872  00209A  EF51  F010         	goto	u9451
 12873  00209E  EF53  F010         	goto	u9450
 12874  0020A2                     u9451:
 12875  0020A2  EF55  F010         	goto	l1572
 12876  0020A6                     u9450:
 12877  0020A6  EF48  F010         	goto	l8839
 12878  0020AA                     l1572:
 12879  0020AA  5028               	movf	___flmul@aexp^0,w,c
 12880  0020AC  B4D8               	btfsc	status,2,c
 12881  0020AE  EF5B  F010         	goto	u9461
 12882  0020B2  EF5D  F010         	goto	u9460
 12883  0020B6                     u9461:
 12884  0020B6  EF81  F010         	goto	l8851
 12885  0020BA                     u9460:
 12886  0020BA  0E01               	movlw	1
 12887  0020BC  262E               	addwf	___flmul@prod^0,f,c
 12888  0020BE  0E00               	movlw	0
 12889  0020C0  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12890  0020C2  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12891  0020C4  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12892  0020C6  A031               	btfss	(___flmul@prod+3)^0,0,c
 12893  0020C8  EF68  F010         	goto	u9471
 12894  0020CC  EF6A  F010         	goto	u9470
 12895  0020D0                     u9471:
 12896  0020D0  EF81  F010         	goto	l8851
 12897  0020D4                     u9470:
 12898  0020D4  C02E  F023         	movff	___flmul@prod,??___flmul
 12899  0020D8  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
 12900  0020DC  C030  F025         	movff	___flmul@prod+2,??___flmul+2
 12901  0020E0  C031  F026         	movff	___flmul@prod+3,??___flmul+3
 12902  0020E4  3426               	rlcf	(??___flmul+3)^0,w,c
 12903  0020E6  3226               	rrcf	(??___flmul+3)^0,f,c
 12904  0020E8  3225               	rrcf	(??___flmul+2)^0,f,c
 12905  0020EA  3224               	rrcf	(??___flmul+1)^0,f,c
 12906  0020EC  3223               	rrcf	??___flmul^0,f,c
 12907  0020EE  C023  F02E         	movff	??___flmul,___flmul@prod
 12908  0020F2  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
 12909  0020F6  C025  F030         	movff	??___flmul+2,___flmul@prod+2
 12910  0020FA  C026  F031         	movff	??___flmul+3,___flmul@prod+3
 12911  0020FE  4A32               	infsnz	___flmul@temp^0,f,c
 12912  002100  2A33               	incf	(___flmul@temp+1)^0,f,c
 12913  002102                     l8851:
 12914  002102  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 12915  002104  EF8C  F010         	goto	u9481
 12916  002108  5033               	movf	(___flmul@temp+1)^0,w,c
 12917  00210A  E108               	bnz	u9480
 12918  00210C  2832               	incf	___flmul@temp^0,w,c
 12919  00210E  A0D8               	btfss	status,0,c
 12920  002110  EF8C  F010         	goto	u9481
 12921  002114  EF8E  F010         	goto	u9480
 12922  002118                     u9481:
 12923  002118  EF98  F010         	goto	l8855
 12924  00211C                     u9480:
 12925  00211C  0E00               	movlw	0
 12926  00211E  6E2E               	movwf	___flmul@prod^0,c
 12927  002120  0E00               	movlw	0
 12928  002122  6E2F               	movwf	(___flmul@prod+1)^0,c
 12929  002124  0E80               	movlw	128
 12930  002126  6E30               	movwf	(___flmul@prod+2)^0,c
 12931  002128  0E7F               	movlw	127
 12932  00212A  6E31               	movwf	(___flmul@prod+3)^0,c
 12933  00212C  EFC6  F010         	goto	l8867
 12934  002130                     l8855:
 12935  002130  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 12936  002132  EFA5  F010         	goto	u9490
 12937  002136  5033               	movf	(___flmul@temp+1)^0,w,c
 12938  002138  E106               	bnz	u9491
 12939  00213A  0432               	decf	___flmul@temp^0,w,c
 12940  00213C  B0D8               	btfsc	status,0,c
 12941  00213E  EFA3  F010         	goto	u9491
 12942  002142  EFA5  F010         	goto	u9490
 12943  002146                     u9491:
 12944  002146  EFB1  F010         	goto	l1580
 12945  00214A                     u9490:
 12946  00214A  0E00               	movlw	0
 12947  00214C  6E2E               	movwf	___flmul@prod^0,c
 12948  00214E  0E00               	movlw	0
 12949  002150  6E2F               	movwf	(___flmul@prod+1)^0,c
 12950  002152  0E00               	movlw	0
 12951  002154  6E30               	movwf	(___flmul@prod+2)^0,c
 12952  002156  0E00               	movlw	0
 12953  002158  6E31               	movwf	(___flmul@prod+3)^0,c
 12954  00215A  0E00               	movlw	0
 12955  00215C  6E27               	movwf	___flmul@sign^0,c
 12956  00215E  EFC6  F010         	goto	l8867
 12957  002162                     l1580:
 12958  002162  C032  F02D         	movff	___flmul@temp,___flmul@bexp
 12959  002166  0EFF               	movlw	255
 12960  002168  162E               	andwf	___flmul@prod^0,f,c
 12961  00216A  0EFF               	movlw	255
 12962  00216C  162F               	andwf	(___flmul@prod+1)^0,f,c
 12963  00216E  0E7F               	movlw	127
 12964  002170  1630               	andwf	(___flmul@prod+2)^0,f,c
 12965  002172  0E00               	movlw	0
 12966  002174  1631               	andwf	(___flmul@prod+3)^0,f,c
 12967  002176  A02D               	btfss	___flmul@bexp^0,0,c
 12968  002178  EFC0  F010         	goto	u9501
 12969  00217C  EFC2  F010         	goto	u9500
 12970  002180                     u9501:
 12971  002180  EFC3  F010         	goto	l8865
 12972  002184                     u9500:
 12973  002184  8E30               	bsf	(___flmul@prod+2)^0,7,c
 12974  002186                     l8865:
 12975  002186  90D8               	bcf	status,0,c
 12976  002188  302D               	rrcf	___flmul@bexp^0,w,c
 12977  00218A  6E31               	movwf	(___flmul@prod+3)^0,c
 12978  00218C                     l8867:
 12979  00218C  5027               	movf	___flmul@sign^0,w,c
 12980  00218E  1231               	iorwf	(___flmul@prod+3)^0,f,c
 12981  002190  C02E  F01B         	movff	___flmul@prod,?___flmul
 12982  002194  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
 12983  002198  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
 12984  00219C  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
 12985  0021A0                     l1567:
 12986  0021A0  0012               	return		;funcret
 12987  0021A2                     __end_of___flmul:
 12988                           	opt callstack 0
 12989                           
 12990 ;; *************** function ___fleq *****************
 12991 ;; Defined at:
 12992 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12993 ;; Parameters:    Size  Location     Type
 12994 ;;  ff1             4    5[COMRAM] unsigned char 
 12995 ;;  ff2             4    9[COMRAM] unsigned char 
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;		None
 12998 ;; Return value:  Size  Location     Type
 12999 ;;		None               void
 13000 ;; Registers used:
 13001 ;;		wreg, status,2, status,0
 13002 ;; Tracked objects:
 13003 ;;		On entry : 0/0
 13004 ;;		On exit  : 0/0
 13005 ;;		Unchanged: 0/0
 13006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13007 ;;      Params:         8       0       0       0       0       0       0       0       0
 13008 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13009 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13010 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13011 ;;Total ram usage:       12 bytes
 13012 ;; Hardware stack levels used:    1
 13013 ;; Hardware stack levels required when called:    2
 13014 ;; This function calls:
 13015 ;;		Nothing
 13016 ;; This function is called by:
 13017 ;;		_efgtoa
 13018 ;; This function uses a non-reentrant model
 13019 ;;
 13020                           
 13021                           	psect	text46
 13022  004BB0                     __ptext46:
 13023                           	opt callstack 0
 13024  004BB0                     ___fleq:
 13025                           	opt callstack 23
 13026  004BB0  0E00               	movlw	0
 13027  004BB2  1406               	andwf	___fleq@ff1^0,w,c
 13028  004BB4  6E0E               	movwf	??___fleq^0,c
 13029  004BB6  0E00               	movlw	0
 13030  004BB8  1407               	andwf	(___fleq@ff1+1)^0,w,c
 13031  004BBA  6E0F               	movwf	(??___fleq+1)^0,c
 13032  004BBC  0E80               	movlw	128
 13033  004BBE  1408               	andwf	(___fleq@ff1+2)^0,w,c
 13034  004BC0  6E10               	movwf	(??___fleq+2)^0,c
 13035  004BC2  0E7F               	movlw	127
 13036  004BC4  1409               	andwf	(___fleq@ff1+3)^0,w,c
 13037  004BC6  6E11               	movwf	(??___fleq+3)^0,c
 13038  004BC8  500E               	movf	??___fleq^0,w,c
 13039  004BCA  100F               	iorwf	(??___fleq+1)^0,w,c
 13040  004BCC  1010               	iorwf	(??___fleq+2)^0,w,c
 13041  004BCE  1011               	iorwf	(??___fleq+3)^0,w,c
 13042  004BD0  A4D8               	btfss	status,2,c
 13043  004BD2  EFED  F025         	goto	u9631
 13044  004BD6  EFEF  F025         	goto	u9630
 13045  004BDA                     u9631:
 13046  004BDA  EFF7  F025         	goto	l8963
 13047  004BDE                     u9630:
 13048  004BDE  0E00               	movlw	0
 13049  004BE0  6E06               	movwf	___fleq@ff1^0,c
 13050  004BE2  0E00               	movlw	0
 13051  004BE4  6E07               	movwf	(___fleq@ff1+1)^0,c
 13052  004BE6  0E00               	movlw	0
 13053  004BE8  6E08               	movwf	(___fleq@ff1+2)^0,c
 13054  004BEA  0E00               	movlw	0
 13055  004BEC  6E09               	movwf	(___fleq@ff1+3)^0,c
 13056  004BEE                     l8963:
 13057  004BEE  0E00               	movlw	0
 13058  004BF0  140A               	andwf	___fleq@ff2^0,w,c
 13059  004BF2  6E0E               	movwf	??___fleq^0,c
 13060  004BF4  0E00               	movlw	0
 13061  004BF6  140B               	andwf	(___fleq@ff2+1)^0,w,c
 13062  004BF8  6E0F               	movwf	(??___fleq+1)^0,c
 13063  004BFA  0E80               	movlw	128
 13064  004BFC  140C               	andwf	(___fleq@ff2+2)^0,w,c
 13065  004BFE  6E10               	movwf	(??___fleq+2)^0,c
 13066  004C00  0E7F               	movlw	127
 13067  004C02  140D               	andwf	(___fleq@ff2+3)^0,w,c
 13068  004C04  6E11               	movwf	(??___fleq+3)^0,c
 13069  004C06  500E               	movf	??___fleq^0,w,c
 13070  004C08  100F               	iorwf	(??___fleq+1)^0,w,c
 13071  004C0A  1010               	iorwf	(??___fleq+2)^0,w,c
 13072  004C0C  1011               	iorwf	(??___fleq+3)^0,w,c
 13073  004C0E  A4D8               	btfss	status,2,c
 13074  004C10  EF0C  F026         	goto	u9641
 13075  004C14  EF0E  F026         	goto	u9640
 13076  004C18                     u9641:
 13077  004C18  EF16  F026         	goto	l8967
 13078  004C1C                     u9640:
 13079  004C1C  0E00               	movlw	0
 13080  004C1E  6E0A               	movwf	___fleq@ff2^0,c
 13081  004C20  0E00               	movlw	0
 13082  004C22  6E0B               	movwf	(___fleq@ff2+1)^0,c
 13083  004C24  0E00               	movlw	0
 13084  004C26  6E0C               	movwf	(___fleq@ff2+2)^0,c
 13085  004C28  0E00               	movlw	0
 13086  004C2A  6E0D               	movwf	(___fleq@ff2+3)^0,c
 13087  004C2C                     l8967:
 13088  004C2C  500A               	movf	___fleq@ff2^0,w,c
 13089  004C2E  1806               	xorwf	___fleq@ff1^0,w,c
 13090  004C30  E10F               	bnz	u9650
 13091  004C32  500B               	movf	(___fleq@ff2+1)^0,w,c
 13092  004C34  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 13093  004C36  E10C               	bnz	u9650
 13094  004C38  500C               	movf	(___fleq@ff2+2)^0,w,c
 13095  004C3A  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 13096  004C3C  E109               	bnz	u9650
 13097  004C3E  500D               	movf	(___fleq@ff2+3)^0,w,c
 13098  004C40  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 13099  004C42  B4D8               	btfsc	status,2,c
 13100  004C44  EF26  F026         	goto	u9651
 13101  004C48  EF28  F026         	goto	u9650
 13102  004C4C                     u9651:
 13103  004C4C  EF2B  F026         	goto	l8971
 13104  004C50                     u9650:
 13105  004C50  90D8               	bcf	status,0,c
 13106  004C52  EF2C  F026         	goto	l1208
 13107  004C56                     l8971:
 13108  004C56  80D8               	bsf	status,0,c
 13109  004C58                     l1208:
 13110  004C58  0012               	return		;funcret
 13111  004C5A                     __end_of___fleq:
 13112                           	opt callstack 0
 13113                           
 13114 ;; *************** function ___fldiv *****************
 13115 ;; Defined at:
 13116 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 13117 ;; Parameters:    Size  Location     Type
 13118 ;;  b               4   67[COMRAM] unsigned char 
 13119 ;;  a               4   71[COMRAM] unsigned char 
 13120 ;; Auto vars:     Size  Location     Type
 13121 ;;  grs             4    7[BANK0 ] unsigned long 
 13122 ;;  rem             4    0[BANK0 ] unsigned long 
 13123 ;;  new_exp         2    5[BANK0 ] short 
 13124 ;;  aexp            1   12[BANK0 ] unsigned char 
 13125 ;;  bexp            1   11[BANK0 ] unsigned char 
 13126 ;;  sign            1    4[BANK0 ] unsigned char 
 13127 ;; Return value:  Size  Location     Type
 13128 ;;                  4   67[COMRAM] unsigned char 
 13129 ;; Registers used:
 13130 ;;		wreg, status,2, status,0
 13131 ;; Tracked objects:
 13132 ;;		On entry : 0/0
 13133 ;;		On exit  : 0/0
 13134 ;;		Unchanged: 0/0
 13135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13136 ;;      Params:         8       0       0       0       0       0       0       0       0
 13137 ;;      Locals:         0      13       0       0       0       0       0       0       0
 13138 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13139 ;;      Totals:        12      13       0       0       0       0       0       0       0
 13140 ;;Total ram usage:       25 bytes
 13141 ;; Hardware stack levels used:    1
 13142 ;; Hardware stack levels required when called:    2
 13143 ;; This function calls:
 13144 ;;		Nothing
 13145 ;; This function is called by:
 13146 ;;		_pwmDuty
 13147 ;;		_leerSensores
 13148 ;;		_efgtoa
 13149 ;; This function uses a non-reentrant model
 13150 ;;
 13151                           
 13152                           	psect	text47
 13153  00292E                     __ptext47:
 13154                           	opt callstack 0
 13155  00292E                     ___fldiv:
 13156                           	opt callstack 23
 13157  00292E  5047               	movf	(___fldiv@b+3)^0,w,c
 13158  002930  0B80               	andlw	128
 13159  002932  0100               	movlb	0	; () banked
 13160  002934  6F64               	movwf	___fldiv@sign& (0+255),b
 13161  002936  5047               	movf	(___fldiv@b+3)^0,w,c
 13162  002938  2447               	addwf	(___fldiv@b+3)^0,w,c
 13163  00293A  6F6B               	movwf	___fldiv@bexp& (0+255),b
 13164  00293C                     
 13165                           ; BSR set to: 0
 13166  00293C  AE46               	btfss	(___fldiv@b+2)^0,7,c
 13167  00293E  EFA3  F014         	goto	u9091
 13168  002942  EFA5  F014         	goto	u9090
 13169  002946                     u9091:
 13170  002946  EFA6  F014         	goto	l8611
 13171  00294A                     u9090:
 13172  00294A                     
 13173                           ; BSR set to: 0
 13174  00294A  816B               	bsf	___fldiv@bexp& (0+255),0,b
 13175  00294C                     l8611:
 13176                           
 13177                           ; BSR set to: 0
 13178  00294C  516B               	movf	___fldiv@bexp& (0+255),w,b
 13179  00294E  B4D8               	btfsc	status,2,c
 13180  002950  EFAC  F014         	goto	u9101
 13181  002954  EFAE  F014         	goto	u9100
 13182  002958                     u9101:
 13183  002958  EFC3  F014         	goto	l8621
 13184  00295C                     u9100:
 13185  00295C                     
 13186                           ; BSR set to: 0
 13187  00295C  296B               	incf	___fldiv@bexp& (0+255),w,b
 13188  00295E  A4D8               	btfss	status,2,c
 13189  002960  EFB4  F014         	goto	u9111
 13190  002964  EFB6  F014         	goto	u9110
 13191  002968                     u9111:
 13192  002968  EFBE  F014         	goto	l8617
 13193  00296C                     u9110:
 13194  00296C                     
 13195                           ; BSR set to: 0
 13196  00296C  0E00               	movlw	0
 13197  00296E  6E44               	movwf	___fldiv@b^0,c
 13198  002970  0E00               	movlw	0
 13199  002972  6E45               	movwf	(___fldiv@b+1)^0,c
 13200  002974  0E00               	movlw	0
 13201  002976  6E46               	movwf	(___fldiv@b+2)^0,c
 13202  002978  0E00               	movlw	0
 13203  00297A  6E47               	movwf	(___fldiv@b+3)^0,c
 13204  00297C                     l8617:
 13205                           
 13206                           ; BSR set to: 0
 13207  00297C  8E46               	bsf	(___fldiv@b+2)^0,7,c
 13208  00297E                     
 13209                           ; BSR set to: 0
 13210  00297E  0E00               	movlw	0
 13211  002980  6E47               	movwf	(___fldiv@b+3)^0,c
 13212  002982  EFCB  F014         	goto	l8623
 13213  002986                     l8621:
 13214                           
 13215                           ; BSR set to: 0
 13216  002986  0E00               	movlw	0
 13217  002988  6E44               	movwf	___fldiv@b^0,c
 13218  00298A  0E00               	movlw	0
 13219  00298C  6E45               	movwf	(___fldiv@b+1)^0,c
 13220  00298E  0E00               	movlw	0
 13221  002990  6E46               	movwf	(___fldiv@b+2)^0,c
 13222  002992  0E00               	movlw	0
 13223  002994  6E47               	movwf	(___fldiv@b+3)^0,c
 13224  002996                     l8623:
 13225                           
 13226                           ; BSR set to: 0
 13227  002996  504B               	movf	(___fldiv@a+3)^0,w,c
 13228  002998  0B80               	andlw	128
 13229  00299A  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 13230  00299C                     
 13231                           ; BSR set to: 0
 13232  00299C  504B               	movf	(___fldiv@a+3)^0,w,c
 13233  00299E  244B               	addwf	(___fldiv@a+3)^0,w,c
 13234  0029A0  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13235  0029A2                     
 13236                           ; BSR set to: 0
 13237  0029A2  AE4A               	btfss	(___fldiv@a+2)^0,7,c
 13238  0029A4  EFD6  F014         	goto	u9121
 13239  0029A8  EFD8  F014         	goto	u9120
 13240  0029AC                     u9121:
 13241  0029AC  EFD9  F014         	goto	l8631
 13242  0029B0                     u9120:
 13243  0029B0                     
 13244                           ; BSR set to: 0
 13245  0029B0  816C               	bsf	___fldiv@aexp& (0+255),0,b
 13246  0029B2                     l8631:
 13247                           
 13248                           ; BSR set to: 0
 13249  0029B2  516C               	movf	___fldiv@aexp& (0+255),w,b
 13250  0029B4  B4D8               	btfsc	status,2,c
 13251  0029B6  EFDF  F014         	goto	u9131
 13252  0029BA  EFE1  F014         	goto	u9130
 13253  0029BE                     u9131:
 13254  0029BE  EFF6  F014         	goto	l8641
 13255  0029C2                     u9130:
 13256  0029C2                     
 13257                           ; BSR set to: 0
 13258  0029C2  296C               	incf	___fldiv@aexp& (0+255),w,b
 13259  0029C4  A4D8               	btfss	status,2,c
 13260  0029C6  EFE7  F014         	goto	u9141
 13261  0029CA  EFE9  F014         	goto	u9140
 13262  0029CE                     u9141:
 13263  0029CE  EFF1  F014         	goto	l8637
 13264  0029D2                     u9140:
 13265  0029D2                     
 13266                           ; BSR set to: 0
 13267  0029D2  0E00               	movlw	0
 13268  0029D4  6E48               	movwf	___fldiv@a^0,c
 13269  0029D6  0E00               	movlw	0
 13270  0029D8  6E49               	movwf	(___fldiv@a+1)^0,c
 13271  0029DA  0E00               	movlw	0
 13272  0029DC  6E4A               	movwf	(___fldiv@a+2)^0,c
 13273  0029DE  0E00               	movlw	0
 13274  0029E0  6E4B               	movwf	(___fldiv@a+3)^0,c
 13275  0029E2                     l8637:
 13276                           
 13277                           ; BSR set to: 0
 13278  0029E2  8E4A               	bsf	(___fldiv@a+2)^0,7,c
 13279  0029E4                     
 13280                           ; BSR set to: 0
 13281  0029E4  0E00               	movlw	0
 13282  0029E6  6E4B               	movwf	(___fldiv@a+3)^0,c
 13283  0029E8  EFFE  F014         	goto	l8643
 13284  0029EC                     l8641:
 13285                           
 13286                           ; BSR set to: 0
 13287  0029EC  0E00               	movlw	0
 13288  0029EE  6E48               	movwf	___fldiv@a^0,c
 13289  0029F0  0E00               	movlw	0
 13290  0029F2  6E49               	movwf	(___fldiv@a+1)^0,c
 13291  0029F4  0E00               	movlw	0
 13292  0029F6  6E4A               	movwf	(___fldiv@a+2)^0,c
 13293  0029F8  0E00               	movlw	0
 13294  0029FA  6E4B               	movwf	(___fldiv@a+3)^0,c
 13295  0029FC                     l8643:
 13296                           
 13297                           ; BSR set to: 0
 13298  0029FC  5048               	movf	___fldiv@a^0,w,c
 13299  0029FE  1049               	iorwf	(___fldiv@a+1)^0,w,c
 13300  002A00  104A               	iorwf	(___fldiv@a+2)^0,w,c
 13301  002A02  104B               	iorwf	(___fldiv@a+3)^0,w,c
 13302  002A04  A4D8               	btfss	status,2,c
 13303  002A06  EF07  F015         	goto	u9151
 13304  002A0A  EF09  F015         	goto	u9150
 13305  002A0E                     u9151:
 13306  002A0E  EF21  F015         	goto	l8655
 13307  002A12                     u9150:
 13308  002A12                     
 13309                           ; BSR set to: 0
 13310  002A12  0E00               	movlw	0
 13311  002A14  6E44               	movwf	___fldiv@b^0,c
 13312  002A16  0E00               	movlw	0
 13313  002A18  6E45               	movwf	(___fldiv@b+1)^0,c
 13314  002A1A  0E00               	movlw	0
 13315  002A1C  6E46               	movwf	(___fldiv@b+2)^0,c
 13316  002A1E  0E00               	movlw	0
 13317  002A20  6E47               	movwf	(___fldiv@b+3)^0,c
 13318  002A22                     
 13319                           ; BSR set to: 0
 13320  002A22  0E80               	movlw	128
 13321  002A24  1246               	iorwf	(___fldiv@b+2)^0,f,c
 13322  002A26  0E7F               	movlw	127
 13323  002A28  1247               	iorwf	(___fldiv@b+3)^0,f,c
 13324  002A2A                     l8649:
 13325                           
 13326                           ; BSR set to: 0
 13327  002A2A  5164               	movf	___fldiv@sign& (0+255),w,b
 13328  002A2C  1247               	iorwf	(___fldiv@b+3)^0,f,c
 13329  002A2E                     
 13330                           ; BSR set to: 0
 13331  002A2E  C044  F044         	movff	___fldiv@b,?___fldiv
 13332  002A32  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
 13333  002A36  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
 13334  002A3A  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
 13335  002A3E  EF64  F016         	goto	l1531
 13336  002A42                     l8655:
 13337                           
 13338                           ; BSR set to: 0
 13339  002A42  516B               	movf	___fldiv@bexp& (0+255),w,b
 13340  002A44  A4D8               	btfss	status,2,c
 13341  002A46  EF27  F015         	goto	u9161
 13342  002A4A  EF29  F015         	goto	u9160
 13343  002A4E                     u9161:
 13344  002A4E  EF33  F015         	goto	l8663
 13345  002A52                     u9160:
 13346  002A52                     
 13347                           ; BSR set to: 0
 13348  002A52  0E00               	movlw	0
 13349  002A54  6E44               	movwf	?___fldiv^0,c
 13350  002A56  0E00               	movlw	0
 13351  002A58  6E45               	movwf	(?___fldiv+1)^0,c
 13352  002A5A  0E00               	movlw	0
 13353  002A5C  6E46               	movwf	(?___fldiv+2)^0,c
 13354  002A5E  0E00               	movlw	0
 13355  002A60  6E47               	movwf	(?___fldiv+3)^0,c
 13356  002A62  EF64  F016         	goto	l1531
 13357  002A66                     l8663:
 13358                           
 13359                           ; BSR set to: 0
 13360  002A66  516C               	movf	___fldiv@aexp& (0+255),w,b
 13361  002A68  C06B  F04C         	movff	___fldiv@bexp,??___fldiv
 13362  002A6C  6A4D               	clrf	(??___fldiv+1)^0,c
 13363  002A6E  5E4C               	subwf	??___fldiv^0,f,c
 13364  002A70  0E00               	movlw	0
 13365  002A72  5A4D               	subwfb	(??___fldiv+1)^0,f,c
 13366  002A74  0E7F               	movlw	127
 13367  002A76  244C               	addwf	??___fldiv^0,w,c
 13368  002A78  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13369  002A7A  0E00               	movlw	0
 13370  002A7C  204D               	addwfc	(??___fldiv+1)^0,w,c
 13371  002A7E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13372  002A80                     
 13373                           ; BSR set to: 0
 13374  002A80  C044  F060         	movff	___fldiv@b,___fldiv@rem
 13375  002A84  C045  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 13376  002A88  C046  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 13377  002A8C  C047  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 13378  002A90                     
 13379                           ; BSR set to: 0
 13380  002A90  0E00               	movlw	0
 13381  002A92  6E44               	movwf	___fldiv@b^0,c
 13382  002A94  0E00               	movlw	0
 13383  002A96  6E45               	movwf	(___fldiv@b+1)^0,c
 13384  002A98  0E00               	movlw	0
 13385  002A9A  6E46               	movwf	(___fldiv@b+2)^0,c
 13386  002A9C  0E00               	movlw	0
 13387  002A9E  6E47               	movwf	(___fldiv@b+3)^0,c
 13388  002AA0                     
 13389                           ; BSR set to: 0
 13390  002AA0  0E00               	movlw	0
 13391  002AA2  6F67               	movwf	___fldiv@grs& (0+255),b
 13392  002AA4  0E00               	movlw	0
 13393  002AA6  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 13394  002AA8  0E00               	movlw	0
 13395  002AAA  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 13396  002AAC  0E00               	movlw	0
 13397  002AAE  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 13398  002AB0                     
 13399                           ; BSR set to: 0
 13400  002AB0  0E00               	movlw	0
 13401  002AB2  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13402  002AB4  EF94  F015         	goto	l1533
 13403  002AB8                     l8673:
 13404                           
 13405                           ; BSR set to: 0
 13406  002AB8  516C               	movf	___fldiv@aexp& (0+255),w,b
 13407  002ABA  B4D8               	btfsc	status,2,c
 13408  002ABC  EF62  F015         	goto	u9171
 13409  002AC0  EF64  F015         	goto	u9170
 13410  002AC4                     u9171:
 13411  002AC4  EF7B  F015         	goto	l8681
 13412  002AC8                     u9170:
 13413  002AC8                     
 13414                           ; BSR set to: 0
 13415  002AC8  90D8               	bcf	status,0,c
 13416  002ACA  3760               	rlcf	___fldiv@rem& (0+255),f,b
 13417  002ACC  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13418  002ACE  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13419  002AD0  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13420  002AD2  90D8               	bcf	status,0,c
 13421  002AD4  3644               	rlcf	___fldiv@b^0,f,c
 13422  002AD6  3645               	rlcf	(___fldiv@b+1)^0,f,c
 13423  002AD8  3646               	rlcf	(___fldiv@b+2)^0,f,c
 13424  002ADA  3647               	rlcf	(___fldiv@b+3)^0,f,c
 13425  002ADC                     
 13426                           ; BSR set to: 0
 13427  002ADC  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13428  002ADE  EF73  F015         	goto	u9181
 13429  002AE2  EF75  F015         	goto	u9180
 13430  002AE6                     u9181:
 13431  002AE6  EF76  F015         	goto	l1536
 13432  002AEA                     u9180:
 13433  002AEA                     
 13434                           ; BSR set to: 0
 13435  002AEA  8044               	bsf	___fldiv@b^0,0,c
 13436  002AEC                     l1536:
 13437                           
 13438                           ; BSR set to: 0
 13439  002AEC  90D8               	bcf	status,0,c
 13440  002AEE  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13441  002AF0  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13442  002AF2  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13443  002AF4  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13444  002AF6                     l8681:
 13445                           
 13446                           ; BSR set to: 0
 13447  002AF6  5048               	movf	___fldiv@a^0,w,c
 13448  002AF8  5D60               	subwf	___fldiv@rem& (0+255),w,b
 13449  002AFA  5049               	movf	(___fldiv@a+1)^0,w,c
 13450  002AFC  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13451  002AFE  504A               	movf	(___fldiv@a+2)^0,w,c
 13452  002B00  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13453  002B02  504B               	movf	(___fldiv@a+3)^0,w,c
 13454  002B04  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13455  002B06  A0D8               	btfss	status,0,c
 13456  002B08  EF88  F015         	goto	u9191
 13457  002B0C  EF8A  F015         	goto	u9190
 13458  002B10                     u9191:
 13459  002B10  EF93  F015         	goto	l8687
 13460  002B14                     u9190:
 13461  002B14                     
 13462                           ; BSR set to: 0
 13463  002B14  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13464  002B16                     
 13465                           ; BSR set to: 0
 13466  002B16  5048               	movf	___fldiv@a^0,w,c
 13467  002B18  5F60               	subwf	___fldiv@rem& (0+255),f,b
 13468  002B1A  5049               	movf	(___fldiv@a+1)^0,w,c
 13469  002B1C  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13470  002B1E  504A               	movf	(___fldiv@a+2)^0,w,c
 13471  002B20  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13472  002B22  504B               	movf	(___fldiv@a+3)^0,w,c
 13473  002B24  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13474  002B26                     l8687:
 13475                           
 13476                           ; BSR set to: 0
 13477  002B26  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 13478  002B28                     l1533:
 13479                           
 13480                           ; BSR set to: 0
 13481  002B28  0E19               	movlw	25
 13482  002B2A  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 13483  002B2C  EF9A  F015         	goto	u9201
 13484  002B30  EF9C  F015         	goto	u9200
 13485  002B34                     u9201:
 13486  002B34  EF5C  F015         	goto	l8673
 13487  002B38                     u9200:
 13488  002B38                     
 13489                           ; BSR set to: 0
 13490  002B38  5160               	movf	___fldiv@rem& (0+255),w,b
 13491  002B3A  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13492  002B3C  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13493  002B3E  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13494  002B40  B4D8               	btfsc	status,2,c
 13495  002B42  EFA5  F015         	goto	u9211
 13496  002B46  EFA7  F015         	goto	u9210
 13497  002B4A                     u9211:
 13498  002B4A  EFBF  F015         	goto	l8699
 13499  002B4E                     u9210:
 13500  002B4E                     
 13501                           ; BSR set to: 0
 13502  002B4E  8167               	bsf	___fldiv@grs& (0+255),0,b
 13503  002B50  EFBF  F015         	goto	l8699
 13504  002B54                     l8693:
 13505                           
 13506                           ; BSR set to: 0
 13507  002B54  90D8               	bcf	status,0,c
 13508  002B56  3644               	rlcf	___fldiv@b^0,f,c
 13509  002B58  3645               	rlcf	(___fldiv@b+1)^0,f,c
 13510  002B5A  3646               	rlcf	(___fldiv@b+2)^0,f,c
 13511  002B5C  3647               	rlcf	(___fldiv@b+3)^0,f,c
 13512  002B5E                     
 13513                           ; BSR set to: 0
 13514  002B5E  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13515  002B60  EFB4  F015         	goto	u9221
 13516  002B64  EFB6  F015         	goto	u9220
 13517  002B68                     u9221:
 13518  002B68  EFB7  F015         	goto	l1542
 13519  002B6C                     u9220:
 13520  002B6C                     
 13521                           ; BSR set to: 0
 13522  002B6C  8044               	bsf	___fldiv@b^0,0,c
 13523  002B6E                     l1542:
 13524                           
 13525                           ; BSR set to: 0
 13526  002B6E  90D8               	bcf	status,0,c
 13527  002B70  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13528  002B72  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13529  002B74  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13530  002B76  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13531  002B78  0765               	decf	___fldiv@new_exp& (0+255),f,b
 13532  002B7A  A0D8               	btfss	status,0,c
 13533  002B7C  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13534  002B7E                     l8699:
 13535                           
 13536                           ; BSR set to: 0
 13537  002B7E  AE46               	btfss	(___fldiv@b+2)^0,7,c
 13538  002B80  EFC4  F015         	goto	u9231
 13539  002B84  EFC6  F015         	goto	u9230
 13540  002B88                     u9231:
 13541  002B88  EFAA  F015         	goto	l8693
 13542  002B8C                     u9230:
 13543  002B8C                     
 13544                           ; BSR set to: 0
 13545  002B8C  0E00               	movlw	0
 13546  002B8E  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13547  002B90                     
 13548                           ; BSR set to: 0
 13549  002B90  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13550  002B92  EFCD  F015         	goto	u9241
 13551  002B96  EFCF  F015         	goto	u9240
 13552  002B9A                     u9241:
 13553  002B9A  EFF3  F015         	goto	l1544
 13554  002B9E                     u9240:
 13555  002B9E                     
 13556                           ; BSR set to: 0
 13557  002B9E  0EFF               	movlw	255
 13558  002BA0  1567               	andwf	___fldiv@grs& (0+255),w,b
 13559  002BA2  6E4C               	movwf	??___fldiv^0,c
 13560  002BA4  0EFF               	movlw	255
 13561  002BA6  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13562  002BA8  6E4D               	movwf	(??___fldiv+1)^0,c
 13563  002BAA  0EFF               	movlw	255
 13564  002BAC  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13565  002BAE  6E4E               	movwf	(??___fldiv+2)^0,c
 13566  002BB0  0E7F               	movlw	127
 13567  002BB2  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13568  002BB4  6E4F               	movwf	(??___fldiv+3)^0,c
 13569  002BB6  504C               	movf	??___fldiv^0,w,c
 13570  002BB8  104D               	iorwf	(??___fldiv+1)^0,w,c
 13571  002BBA  104E               	iorwf	(??___fldiv+2)^0,w,c
 13572  002BBC  104F               	iorwf	(??___fldiv+3)^0,w,c
 13573  002BBE  B4D8               	btfsc	status,2,c
 13574  002BC0  EFE4  F015         	goto	u9251
 13575  002BC4  EFE6  F015         	goto	u9250
 13576  002BC8                     u9251:
 13577  002BC8  EFEA  F015         	goto	l1545
 13578  002BCC                     u9250:
 13579  002BCC                     l8707:
 13580                           
 13581                           ; BSR set to: 0
 13582  002BCC  0E01               	movlw	1
 13583  002BCE  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13584  002BD0  EFF3  F015         	goto	l1544
 13585  002BD4                     l1545:
 13586                           
 13587                           ; BSR set to: 0
 13588  002BD4  A044               	btfss	___fldiv@b^0,0,c
 13589  002BD6  EFEF  F015         	goto	u9261
 13590  002BDA  EFF1  F015         	goto	u9260
 13591  002BDE                     u9261:
 13592  002BDE  EFF3  F015         	goto	l1544
 13593  002BE2                     u9260:
 13594  002BE2  EFE6  F015         	goto	l8707
 13595  002BE6                     l1544:
 13596                           
 13597                           ; BSR set to: 0
 13598  002BE6  516C               	movf	___fldiv@aexp& (0+255),w,b
 13599  002BE8  B4D8               	btfsc	status,2,c
 13600  002BEA  EFF9  F015         	goto	u9271
 13601  002BEE  EFFB  F015         	goto	u9270
 13602  002BF2                     u9271:
 13603  002BF2  EF1F  F016         	goto	l8719
 13604  002BF6                     u9270:
 13605  002BF6                     
 13606                           ; BSR set to: 0
 13607  002BF6  0E01               	movlw	1
 13608  002BF8  2644               	addwf	___fldiv@b^0,f,c
 13609  002BFA  0E00               	movlw	0
 13610  002BFC  2245               	addwfc	(___fldiv@b+1)^0,f,c
 13611  002BFE  2246               	addwfc	(___fldiv@b+2)^0,f,c
 13612  002C00  2247               	addwfc	(___fldiv@b+3)^0,f,c
 13613  002C02                     
 13614                           ; BSR set to: 0
 13615  002C02  A047               	btfss	(___fldiv@b+3)^0,0,c
 13616  002C04  EF06  F016         	goto	u9281
 13617  002C08  EF08  F016         	goto	u9280
 13618  002C0C                     u9281:
 13619  002C0C  EF1F  F016         	goto	l8719
 13620  002C10                     u9280:
 13621  002C10                     
 13622                           ; BSR set to: 0
 13623  002C10  C044  F04C         	movff	___fldiv@b,??___fldiv
 13624  002C14  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
 13625  002C18  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
 13626  002C1C  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
 13627  002C20  344F               	rlcf	(??___fldiv+3)^0,w,c
 13628  002C22  324F               	rrcf	(??___fldiv+3)^0,f,c
 13629  002C24  324E               	rrcf	(??___fldiv+2)^0,f,c
 13630  002C26  324D               	rrcf	(??___fldiv+1)^0,f,c
 13631  002C28  324C               	rrcf	??___fldiv^0,f,c
 13632  002C2A  C04C  F044         	movff	??___fldiv,___fldiv@b
 13633  002C2E  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
 13634  002C32  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
 13635  002C36  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
 13636  002C3A                     
 13637                           ; BSR set to: 0
 13638  002C3A  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 13639  002C3C  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13640  002C3E                     l8719:
 13641                           
 13642                           ; BSR set to: 0
 13643  002C3E  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13644  002C40  EF2A  F016         	goto	u9291
 13645  002C44  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13646  002C46  E108               	bnz	u9290
 13647  002C48  2965               	incf	___fldiv@new_exp& (0+255),w,b
 13648  002C4A  A0D8               	btfss	status,0,c
 13649  002C4C  EF2A  F016         	goto	u9291
 13650  002C50  EF2C  F016         	goto	u9290
 13651  002C54                     u9291:
 13652  002C54  EF37  F016         	goto	l8723
 13653  002C58                     u9290:
 13654  002C58                     
 13655                           ; BSR set to: 0
 13656  002C58  0E00               	movlw	0
 13657  002C5A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13658  002C5C  6965               	setf	___fldiv@new_exp& (0+255),b
 13659  002C5E  0E00               	movlw	0
 13660  002C60  6E44               	movwf	___fldiv@b^0,c
 13661  002C62  0E00               	movlw	0
 13662  002C64  6E45               	movwf	(___fldiv@b+1)^0,c
 13663  002C66  0E00               	movlw	0
 13664  002C68  6E46               	movwf	(___fldiv@b+2)^0,c
 13665  002C6A  0E00               	movlw	0
 13666  002C6C  6E47               	movwf	(___fldiv@b+3)^0,c
 13667  002C6E                     l8723:
 13668                           
 13669                           ; BSR set to: 0
 13670  002C6E  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13671  002C70  EF44  F016         	goto	u9300
 13672  002C74  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13673  002C76  E106               	bnz	u9301
 13674  002C78  0565               	decf	___fldiv@new_exp& (0+255),w,b
 13675  002C7A  B0D8               	btfsc	status,0,c
 13676  002C7C  EF42  F016         	goto	u9301
 13677  002C80  EF44  F016         	goto	u9300
 13678  002C84                     u9301:
 13679  002C84  EF52  F016         	goto	l8727
 13680  002C88                     u9300:
 13681  002C88                     
 13682                           ; BSR set to: 0
 13683  002C88  0E00               	movlw	0
 13684  002C8A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13685  002C8C  0E00               	movlw	0
 13686  002C8E  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13687  002C90  0E00               	movlw	0
 13688  002C92  6E44               	movwf	___fldiv@b^0,c
 13689  002C94  0E00               	movlw	0
 13690  002C96  6E45               	movwf	(___fldiv@b+1)^0,c
 13691  002C98  0E00               	movlw	0
 13692  002C9A  6E46               	movwf	(___fldiv@b+2)^0,c
 13693  002C9C  0E00               	movlw	0
 13694  002C9E  6E47               	movwf	(___fldiv@b+3)^0,c
 13695  002CA0  0E00               	movlw	0
 13696  002CA2  6F64               	movwf	___fldiv@sign& (0+255),b
 13697  002CA4                     l8727:
 13698                           
 13699                           ; BSR set to: 0
 13700  002CA4  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 13701  002CA8                     
 13702                           ; BSR set to: 0
 13703  002CA8  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 13704  002CAA  EF59  F016         	goto	u9311
 13705  002CAE  EF5B  F016         	goto	u9310
 13706  002CB2                     u9311:
 13707  002CB2  EF5E  F016         	goto	l8733
 13708  002CB6                     u9310:
 13709  002CB6                     
 13710                           ; BSR set to: 0
 13711  002CB6  8E46               	bsf	(___fldiv@b+2)^0,7,c
 13712  002CB8  EF5F  F016         	goto	l8735
 13713  002CBC                     l8733:
 13714                           
 13715                           ; BSR set to: 0
 13716  002CBC  9E46               	bcf	(___fldiv@b+2)^0,7,c
 13717  002CBE                     l8735:
 13718                           
 13719                           ; BSR set to: 0
 13720  002CBE  90D8               	bcf	status,0,c
 13721  002CC0  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 13722  002CC2  6E47               	movwf	(___fldiv@b+3)^0,c
 13723  002CC4  EF15  F015         	goto	l8649
 13724  002CC8                     l1531:
 13725                           
 13726                           ; BSR set to: 0
 13727  002CC8  0012               	return		;funcret
 13728  002CCA                     __end_of___fldiv:
 13729                           	opt callstack 0
 13730                           
 13731 ;; *************** function ___awmod *****************
 13732 ;; Defined at:
 13733 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;  dividend        2    5[COMRAM] int 
 13736 ;;  divisor         2    7[COMRAM] int 
 13737 ;; Auto vars:     Size  Location     Type
 13738 ;;  sign            1   10[COMRAM] unsigned char 
 13739 ;;  counter         1    9[COMRAM] unsigned char 
 13740 ;; Return value:  Size  Location     Type
 13741 ;;                  2    5[COMRAM] int 
 13742 ;; Registers used:
 13743 ;;		wreg, status,2, status,0
 13744 ;; Tracked objects:
 13745 ;;		On entry : 0/0
 13746 ;;		On exit  : 0/0
 13747 ;;		Unchanged: 0/0
 13748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13749 ;;      Params:         4       0       0       0       0       0       0       0       0
 13750 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13751 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13752 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13753 ;;Total ram usage:        6 bytes
 13754 ;; Hardware stack levels used:    1
 13755 ;; Hardware stack levels required when called:    2
 13756 ;; This function calls:
 13757 ;;		Nothing
 13758 ;; This function is called by:
 13759 ;;		_efgtoa
 13760 ;; This function uses a non-reentrant model
 13761 ;;
 13762                           
 13763                           	psect	text48
 13764  0049A8                     __ptext48:
 13765                           	opt callstack 0
 13766  0049A8                     ___awmod:
 13767                           	opt callstack 23
 13768  0049A8  0E00               	movlw	0
 13769  0049AA  6E0B               	movwf	___awmod@sign^0,c
 13770  0049AC  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 13771  0049AE  EFDD  F024         	goto	u9570
 13772  0049B2  EFDB  F024         	goto	u9571
 13773  0049B6                     u9571:
 13774  0049B6  EFE3  F024         	goto	l8931
 13775  0049BA                     u9570:
 13776  0049BA  6C06               	negf	___awmod@dividend^0,c
 13777  0049BC  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13778  0049BE  B0D8               	btfsc	status,0,c
 13779  0049C0  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13780  0049C2  0E01               	movlw	1
 13781  0049C4  6E0B               	movwf	___awmod@sign^0,c
 13782  0049C6                     l8931:
 13783  0049C6  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 13784  0049C8  EFEA  F024         	goto	u9580
 13785  0049CC  EFE8  F024         	goto	u9581
 13786  0049D0                     u9581:
 13787  0049D0  EFEE  F024         	goto	l8935
 13788  0049D4                     u9580:
 13789  0049D4  6C08               	negf	___awmod@divisor^0,c
 13790  0049D6  1E09               	comf	(___awmod@divisor+1)^0,f,c
 13791  0049D8  B0D8               	btfsc	status,0,c
 13792  0049DA  2A09               	incf	(___awmod@divisor+1)^0,f,c
 13793  0049DC                     l8935:
 13794  0049DC  5008               	movf	___awmod@divisor^0,w,c
 13795  0049DE  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 13796  0049E0  B4D8               	btfsc	status,2,c
 13797  0049E2  EFF5  F024         	goto	u9591
 13798  0049E6  EFF7  F024         	goto	u9590
 13799  0049EA                     u9591:
 13800  0049EA  EF1B  F025         	goto	l8951
 13801  0049EE                     u9590:
 13802  0049EE  0E01               	movlw	1
 13803  0049F0  6E0A               	movwf	___awmod@counter^0,c
 13804  0049F2  EFFF  F024         	goto	l8941
 13805  0049F6                     l8939:
 13806  0049F6  90D8               	bcf	status,0,c
 13807  0049F8  3608               	rlcf	___awmod@divisor^0,f,c
 13808  0049FA  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 13809  0049FC  2A0A               	incf	___awmod@counter^0,f,c
 13810  0049FE                     l8941:
 13811  0049FE  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 13812  004A00  EF04  F025         	goto	u9601
 13813  004A04  EF06  F025         	goto	u9600
 13814  004A08                     u9601:
 13815  004A08  EFFB  F024         	goto	l8939
 13816  004A0C                     u9600:
 13817  004A0C                     l8943:
 13818  004A0C  5008               	movf	___awmod@divisor^0,w,c
 13819  004A0E  5C06               	subwf	___awmod@dividend^0,w,c
 13820  004A10  5009               	movf	(___awmod@divisor+1)^0,w,c
 13821  004A12  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 13822  004A14  A0D8               	btfss	status,0,c
 13823  004A16  EF0F  F025         	goto	u9611
 13824  004A1A  EF11  F025         	goto	u9610
 13825  004A1E                     u9611:
 13826  004A1E  EF15  F025         	goto	l8947
 13827  004A22                     u9610:
 13828  004A22  5008               	movf	___awmod@divisor^0,w,c
 13829  004A24  5E06               	subwf	___awmod@dividend^0,f,c
 13830  004A26  5009               	movf	(___awmod@divisor+1)^0,w,c
 13831  004A28  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 13832  004A2A                     l8947:
 13833  004A2A  90D8               	bcf	status,0,c
 13834  004A2C  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 13835  004A2E  3208               	rrcf	___awmod@divisor^0,f,c
 13836  004A30  2E0A               	decfsz	___awmod@counter^0,f,c
 13837  004A32  EF06  F025         	goto	l8943
 13838  004A36                     l8951:
 13839  004A36  500B               	movf	___awmod@sign^0,w,c
 13840  004A38  B4D8               	btfsc	status,2,c
 13841  004A3A  EF21  F025         	goto	u9621
 13842  004A3E  EF23  F025         	goto	u9620
 13843  004A42                     u9621:
 13844  004A42  EF27  F025         	goto	l8955
 13845  004A46                     u9620:
 13846  004A46  6C06               	negf	___awmod@dividend^0,c
 13847  004A48  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13848  004A4A  B0D8               	btfsc	status,0,c
 13849  004A4C  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13850  004A4E                     l8955:
 13851  004A4E  C006  F006         	movff	___awmod@dividend,?___awmod
 13852  004A52  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 13853  004A56  0012               	return		;funcret
 13854  004A58                     __end_of___awmod:
 13855                           	opt callstack 0
 13856                           
 13857 ;; *************** function ___awdiv *****************
 13858 ;; Defined at:
 13859 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;  dividend        2    5[COMRAM] int 
 13862 ;;  divisor         2    7[COMRAM] int 
 13863 ;; Auto vars:     Size  Location     Type
 13864 ;;  quotient        2   11[COMRAM] int 
 13865 ;;  sign            1   10[COMRAM] unsigned char 
 13866 ;;  counter         1    9[COMRAM] unsigned char 
 13867 ;; Return value:  Size  Location     Type
 13868 ;;                  2    5[COMRAM] int 
 13869 ;; Registers used:
 13870 ;;		wreg, status,2, status,0
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13876 ;;      Params:         4       0       0       0       0       0       0       0       0
 13877 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13878 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13879 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13880 ;;Total ram usage:        8 bytes
 13881 ;; Hardware stack levels used:    1
 13882 ;; Hardware stack levels required when called:    2
 13883 ;; This function calls:
 13884 ;;		Nothing
 13885 ;; This function is called by:
 13886 ;;		_efgtoa
 13887 ;; This function uses a non-reentrant model
 13888 ;;
 13889                           
 13890                           	psect	text49
 13891  004822                     __ptext49:
 13892                           	opt callstack 0
 13893  004822                     ___awdiv:
 13894                           	opt callstack 23
 13895  004822  0E00               	movlw	0
 13896  004824  6E0B               	movwf	___awdiv@sign^0,c
 13897  004826  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 13898  004828  EF1A  F024         	goto	u9510
 13899  00482C  EF18  F024         	goto	u9511
 13900  004830                     u9511:
 13901  004830  EF20  F024         	goto	l8887
 13902  004834                     u9510:
 13903  004834  6C08               	negf	___awdiv@divisor^0,c
 13904  004836  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 13905  004838  B0D8               	btfsc	status,0,c
 13906  00483A  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 13907  00483C  0E01               	movlw	1
 13908  00483E  6E0B               	movwf	___awdiv@sign^0,c
 13909  004840                     l8887:
 13910  004840  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 13911  004842  EF27  F024         	goto	u9520
 13912  004846  EF25  F024         	goto	u9521
 13913  00484A                     u9521:
 13914  00484A  EF2D  F024         	goto	l8893
 13915  00484E                     u9520:
 13916  00484E  6C06               	negf	___awdiv@dividend^0,c
 13917  004850  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 13918  004852  B0D8               	btfsc	status,0,c
 13919  004854  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 13920  004856  0E01               	movlw	1
 13921  004858  1A0B               	xorwf	___awdiv@sign^0,f,c
 13922  00485A                     l8893:
 13923  00485A  0E00               	movlw	0
 13924  00485C  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 13925  00485E  0E00               	movlw	0
 13926  004860  6E0C               	movwf	___awdiv@quotient^0,c
 13927  004862  5008               	movf	___awdiv@divisor^0,w,c
 13928  004864  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 13929  004866  B4D8               	btfsc	status,2,c
 13930  004868  EF38  F024         	goto	u9531
 13931  00486C  EF3A  F024         	goto	u9530
 13932  004870                     u9531:
 13933  004870  EF62  F024         	goto	l8915
 13934  004874                     u9530:
 13935  004874  0E01               	movlw	1
 13936  004876  6E0A               	movwf	___awdiv@counter^0,c
 13937  004878  EF42  F024         	goto	l8901
 13938  00487C                     l8899:
 13939  00487C  90D8               	bcf	status,0,c
 13940  00487E  3608               	rlcf	___awdiv@divisor^0,f,c
 13941  004880  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 13942  004882  2A0A               	incf	___awdiv@counter^0,f,c
 13943  004884                     l8901:
 13944  004884  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 13945  004886  EF47  F024         	goto	u9541
 13946  00488A  EF49  F024         	goto	u9540
 13947  00488E                     u9541:
 13948  00488E  EF3E  F024         	goto	l8899
 13949  004892                     u9540:
 13950  004892                     l8903:
 13951  004892  90D8               	bcf	status,0,c
 13952  004894  360C               	rlcf	___awdiv@quotient^0,f,c
 13953  004896  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 13954  004898  5008               	movf	___awdiv@divisor^0,w,c
 13955  00489A  5C06               	subwf	___awdiv@dividend^0,w,c
 13956  00489C  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13957  00489E  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 13958  0048A0  A0D8               	btfss	status,0,c
 13959  0048A2  EF55  F024         	goto	u9551
 13960  0048A6  EF57  F024         	goto	u9550
 13961  0048AA                     u9551:
 13962  0048AA  EF5C  F024         	goto	l8911
 13963  0048AE                     u9550:
 13964  0048AE  5008               	movf	___awdiv@divisor^0,w,c
 13965  0048B0  5E06               	subwf	___awdiv@dividend^0,f,c
 13966  0048B2  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13967  0048B4  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 13968  0048B6  800C               	bsf	___awdiv@quotient^0,0,c
 13969  0048B8                     l8911:
 13970  0048B8  90D8               	bcf	status,0,c
 13971  0048BA  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 13972  0048BC  3208               	rrcf	___awdiv@divisor^0,f,c
 13973  0048BE  2E0A               	decfsz	___awdiv@counter^0,f,c
 13974  0048C0  EF49  F024         	goto	l8903
 13975  0048C4                     l8915:
 13976  0048C4  500B               	movf	___awdiv@sign^0,w,c
 13977  0048C6  B4D8               	btfsc	status,2,c
 13978  0048C8  EF68  F024         	goto	u9561
 13979  0048CC  EF6A  F024         	goto	u9560
 13980  0048D0                     u9561:
 13981  0048D0  EF6E  F024         	goto	l8919
 13982  0048D4                     u9560:
 13983  0048D4  6C0C               	negf	___awdiv@quotient^0,c
 13984  0048D6  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 13985  0048D8  B0D8               	btfsc	status,0,c
 13986  0048DA  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 13987  0048DC                     l8919:
 13988  0048DC  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 13989  0048E0  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 13990  0048E4  0012               	return		;funcret
 13991  0048E6                     __end_of___awdiv:
 13992                           	opt callstack 0
 13993                           
 13994 ;; *************** function _dtoa *****************
 13995 ;; Defined at:
 13996 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13997 ;; Parameters:    Size  Location     Type
 13998 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 13999 ;;		 -> sprintf@f(6), 
 14000 ;;  d               8   34[COMRAM] long long 
 14001 ;; Auto vars:     Size  Location     Type
 14002 ;;  n               8   58[COMRAM] long long 
 14003 ;;  i               2   66[COMRAM] int 
 14004 ;;  s               2   56[COMRAM] int 
 14005 ;;  w               2   54[COMRAM] int 
 14006 ;;  p               2   52[COMRAM] int 
 14007 ;; Return value:  Size  Location     Type
 14008 ;;                  2   32[COMRAM] int 
 14009 ;; Registers used:
 14010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14011 ;; Tracked objects:
 14012 ;;		On entry : 0/0
 14013 ;;		On exit  : 0/0
 14014 ;;		Unchanged: 0/0
 14015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14016 ;;      Params:        10       0       0       0       0       0       0       0       0
 14017 ;;      Locals:        18       0       0       0       0       0       0       0       0
 14018 ;;      Temps:          8       0       0       0       0       0       0       0       0
 14019 ;;      Totals:        36       0       0       0       0       0       0       0       0
 14020 ;;Total ram usage:       36 bytes
 14021 ;; Hardware stack levels used:    1
 14022 ;; Hardware stack levels required when called:    6
 14023 ;; This function calls:
 14024 ;;		___aodiv
 14025 ;;		___aomod
 14026 ;;		_abs
 14027 ;;		_pad
 14028 ;; This function is called by:
 14029 ;;		_vfpfcnvrt
 14030 ;; This function uses a non-reentrant model
 14031 ;;
 14032                           
 14033                           	psect	text50
 14034  002CCA                     __ptext50:
 14035                           	opt callstack 0
 14036  002CCA                     _dtoa:
 14037                           	opt callstack 20
 14038  002CCA                     
 14039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 14040  002CCA  C023  F03B         	movff	dtoa@d,dtoa@n
 14041  002CCE  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
 14042  002CD2  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
 14043  002CD6  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
 14044  002CDA  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
 14045  002CDE  C028  F040         	movff	dtoa@d+5,dtoa@n+5
 14046  002CE2  C029  F041         	movff	dtoa@d+6,dtoa@n+6
 14047  002CE6  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
 14048  002CEA                     
 14049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 14050  002CEA  BE42               	btfsc	(dtoa@n+7)^0,7,c
 14051  002CEC  EF7A  F016         	goto	u9951
 14052  002CF0  EF7D  F016         	goto	u9950
 14053  002CF4                     u9951:
 14054  002CF4  0E01               	movlw	1
 14055  002CF6  EF7E  F016         	goto	u9960
 14056  002CFA                     u9950:
 14057  002CFA  0E00               	movlw	0
 14058  002CFC                     u9960:
 14059  002CFC  6E39               	movwf	dtoa@s^0,c
 14060  002CFE  6A3A               	clrf	(dtoa@s+1)^0,c
 14061                           
 14062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 14063  002D00  5039               	movf	dtoa@s^0,w,c
 14064  002D02  103A               	iorwf	(dtoa@s+1)^0,w,c
 14065  002D04  B4D8               	btfsc	status,2,c
 14066  002D06  EF87  F016         	goto	u9971
 14067  002D0A  EF89  F016         	goto	u9970
 14068  002D0E                     u9971:
 14069  002D0E  EF99  F016         	goto	l9145
 14070  002D12                     u9970:
 14071  002D12                     
 14072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 14073  002D12  1E42               	comf	(dtoa@n+7)^0,f,c
 14074  002D14  1E41               	comf	(dtoa@n+6)^0,f,c
 14075  002D16  1E40               	comf	(dtoa@n+5)^0,f,c
 14076  002D18  1E3F               	comf	(dtoa@n+4)^0,f,c
 14077  002D1A  1E3E               	comf	(dtoa@n+3)^0,f,c
 14078  002D1C  1E3D               	comf	(dtoa@n+2)^0,f,c
 14079  002D1E  1E3C               	comf	(dtoa@n+1)^0,f,c
 14080  002D20  6C3B               	negf	dtoa@n^0,c
 14081  002D22  0E00               	movlw	0
 14082  002D24  223C               	addwfc	(dtoa@n+1)^0,f,c
 14083  002D26  223D               	addwfc	(dtoa@n+2)^0,f,c
 14084  002D28  223E               	addwfc	(dtoa@n+3)^0,f,c
 14085  002D2A  223F               	addwfc	(dtoa@n+4)^0,f,c
 14086  002D2C  2240               	addwfc	(dtoa@n+5)^0,f,c
 14087  002D2E  2241               	addwfc	(dtoa@n+6)^0,f,c
 14088  002D30  2242               	addwfc	(dtoa@n+7)^0,f,c
 14089  002D32                     l9145:
 14090                           
 14091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 14092  002D32  0101               	movlb	1	; () banked
 14093  002D34  BF35               	btfsc	(_prec+1)& (0+255),7,b
 14094  002D36  EF9F  F016         	goto	u9981
 14095  002D3A  EFA1  F016         	goto	u9980
 14096  002D3E                     u9981:
 14097  002D3E  EFA2  F016         	goto	l9149
 14098  002D42                     u9980:
 14099  002D42                     
 14100                           ; BSR set to: 1
 14101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 14102  002D42  9255               	bcf	_flags^0,1,c
 14103  002D44                     l9149:
 14104                           
 14105                           ; BSR set to: 1
 14106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 14107  002D44  BF35               	btfsc	(_prec+1)& (0+255),7,b
 14108  002D46  EFAF  F016         	goto	u9990
 14109  002D4A  5135               	movf	(_prec+1)& (0+255),w,b
 14110  002D4C  E106               	bnz	u9991
 14111  002D4E  0534               	decf	_prec& (0+255),w,b
 14112  002D50  B0D8               	btfsc	status,0,c
 14113  002D52  EFAD  F016         	goto	u9991
 14114  002D56  EFAF  F016         	goto	u9990
 14115  002D5A                     u9991:
 14116  002D5A  EFB5  F016         	goto	l800
 14117  002D5E                     u9990:
 14118  002D5E                     
 14119                           ; BSR set to: 1
 14120  002D5E  0E00               	movlw	0
 14121  002D60  6E36               	movwf	(dtoa@p+1)^0,c
 14122  002D62  0E01               	movlw	1
 14123  002D64  6E35               	movwf	dtoa@p^0,c
 14124  002D66  EFB9  F016         	goto	l802
 14125  002D6A                     l800:
 14126                           
 14127                           ; BSR set to: 1
 14128  002D6A  C134  F035         	movff	_prec,dtoa@p
 14129  002D6E  C135  F036         	movff	_prec+1,dtoa@p+1
 14130  002D72                     l802:
 14131                           
 14132                           ; BSR set to: 1
 14133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 14134  002D72  C132  F037         	movff	_width,dtoa@w
 14135  002D76  C133  F038         	movff	_width+1,dtoa@w+1
 14136  002D7A                     
 14137                           ; BSR set to: 1
 14138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 14139  002D7A  5039               	movf	dtoa@s^0,w,c
 14140  002D7C  103A               	iorwf	(dtoa@s+1)^0,w,c
 14141  002D7E  A4D8               	btfss	status,2,c
 14142  002D80  EFC4  F016         	goto	u10001
 14143  002D84  EFC6  F016         	goto	u10000
 14144  002D88                     u10001:
 14145  002D88  EFCD  F016         	goto	l9157
 14146  002D8C                     u10000:
 14147  002D8C                     
 14148                           ; BSR set to: 1
 14149  002D8C  A455               	btfss	_flags^0,2,c
 14150  002D8E  EFCB  F016         	goto	u10011
 14151  002D92  EFCD  F016         	goto	u10010
 14152  002D96                     u10011:
 14153  002D96  EFD0  F016         	goto	l9159
 14154  002D9A                     u10010:
 14155  002D9A                     l9157:
 14156                           
 14157                           ; BSR set to: 1
 14158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 14159  002D9A  0637               	decf	dtoa@w^0,f,c
 14160  002D9C  A0D8               	btfss	status,0,c
 14161  002D9E  0638               	decf	(dtoa@w+1)^0,f,c
 14162  002DA0                     l9159:
 14163                           
 14164                           ; BSR set to: 1
 14165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 14166  002DA0  0E00               	movlw	0
 14167  002DA2  6E44               	movwf	(dtoa@i+1)^0,c
 14168  002DA4  0E4F               	movlw	79
 14169  002DA6  6E43               	movwf	dtoa@i^0,c
 14170  002DA8                     
 14171                           ; BSR set to: 1
 14172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 14173  002DA8  0E00               	movlw	0
 14174  002DAA  6F91               	movwf	(_dbuf+79)& (0+255),b
 14175                           
 14176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14177  002DAC  EF54  F017         	goto	l9173
 14178  002DB0                     l9163:
 14179                           
 14180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 14181  002DB0  0643               	decf	dtoa@i^0,f,c
 14182  002DB2  A0D8               	btfss	status,0,c
 14183  002DB4  0644               	decf	(dtoa@i+1)^0,f,c
 14184  002DB6                     
 14185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 14186  002DB6  0E42               	movlw	low _dbuf
 14187  002DB8  2443               	addwf	dtoa@i^0,w,c
 14188  002DBA  6ED9               	movwf	fsr2l,c
 14189  002DBC  0E01               	movlw	high _dbuf
 14190  002DBE  2044               	addwfc	(dtoa@i+1)^0,w,c
 14191  002DC0  6EDA               	movwf	fsr2h,c
 14192  002DC2  C03B  F006         	movff	dtoa@n,___aomod@dividend
 14193  002DC6  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
 14194  002DCA  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
 14195  002DCE  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
 14196  002DD2  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 14197  002DD6  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 14198  002DDA  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 14199  002DDE  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 14200  002DE2  0E0A               	movlw	10
 14201  002DE4  6E0E               	movwf	___aomod@divisor^0,c
 14202  002DE6  0E00               	movlw	0
 14203  002DE8  6E0F               	movwf	(___aomod@divisor+1)^0,c
 14204  002DEA  0E00               	movlw	0
 14205  002DEC  6E10               	movwf	(___aomod@divisor+2)^0,c
 14206  002DEE  0E00               	movlw	0
 14207  002DF0  6E11               	movwf	(___aomod@divisor+3)^0,c
 14208  002DF2  0E00               	movlw	0
 14209  002DF4  6E12               	movwf	(___aomod@divisor+4)^0,c
 14210  002DF6  0E00               	movlw	0
 14211  002DF8  6E13               	movwf	(___aomod@divisor+5)^0,c
 14212  002DFA  0E00               	movlw	0
 14213  002DFC  6E14               	movwf	(___aomod@divisor+6)^0,c
 14214  002DFE  0E00               	movlw	0
 14215  002E00  6E15               	movwf	(___aomod@divisor+7)^0,c
 14216  002E02  ECD2  F01E         	call	___aomod	;wreg free
 14217  002E06  C006  F02B         	movff	?___aomod,??_dtoa
 14218  002E0A  C007  F02C         	movff	?___aomod+1,??_dtoa+1
 14219  002E0E  C008  F02D         	movff	?___aomod+2,??_dtoa+2
 14220  002E12  C009  F02E         	movff	?___aomod+3,??_dtoa+3
 14221  002E16  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
 14222  002E1A  C00B  F030         	movff	?___aomod+5,??_dtoa+5
 14223  002E1E  C00C  F031         	movff	?___aomod+6,??_dtoa+6
 14224  002E22  C00D  F032         	movff	?___aomod+7,??_dtoa+7
 14225  002E26  C02B  F018         	movff	??_dtoa,abs@a
 14226  002E2A  C02D  F019         	movff	??_dtoa+2,abs@a+1
 14227  002E2E  ECF3  F02A         	call	_abs	;wreg free
 14228  002E32  5018               	movf	?_abs^0,w,c
 14229  002E34  0F30               	addlw	48
 14230  002E36  6EDF               	movwf	indf2,c
 14231  002E38                     
 14232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 14233  002E38  0635               	decf	dtoa@p^0,f,c
 14234  002E3A  A0D8               	btfss	status,0,c
 14235  002E3C  0636               	decf	(dtoa@p+1)^0,f,c
 14236  002E3E                     
 14237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 14238  002E3E  0637               	decf	dtoa@w^0,f,c
 14239  002E40  A0D8               	btfss	status,0,c
 14240  002E42  0638               	decf	(dtoa@w+1)^0,f,c
 14241  002E44                     
 14242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 14243  002E44  C03B  F006         	movff	dtoa@n,___aodiv@dividend
 14244  002E48  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 14245  002E4C  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 14246  002E50  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 14247  002E54  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 14248  002E58  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 14249  002E5C  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 14250  002E60  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 14251  002E64  0E0A               	movlw	10
 14252  002E66  6E0E               	movwf	___aodiv@divisor^0,c
 14253  002E68  0E00               	movlw	0
 14254  002E6A  6E0F               	movwf	(___aodiv@divisor+1)^0,c
 14255  002E6C  0E00               	movlw	0
 14256  002E6E  6E10               	movwf	(___aodiv@divisor+2)^0,c
 14257  002E70  0E00               	movlw	0
 14258  002E72  6E11               	movwf	(___aodiv@divisor+3)^0,c
 14259  002E74  0E00               	movlw	0
 14260  002E76  6E12               	movwf	(___aodiv@divisor+4)^0,c
 14261  002E78  0E00               	movlw	0
 14262  002E7A  6E13               	movwf	(___aodiv@divisor+5)^0,c
 14263  002E7C  0E00               	movlw	0
 14264  002E7E  6E14               	movwf	(___aodiv@divisor+6)^0,c
 14265  002E80  0E00               	movlw	0
 14266  002E82  6E15               	movwf	(___aodiv@divisor+7)^0,c
 14267  002E84  EC50  F01D         	call	___aodiv	;wreg free
 14268  002E88  C006  F03B         	movff	?___aodiv,dtoa@n
 14269  002E8C  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
 14270  002E90  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
 14271  002E94  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
 14272  002E98  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
 14273  002E9C  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
 14274  002EA0  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
 14275  002EA4  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
 14276  002EA8                     l9173:
 14277                           
 14278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14279  002EA8  BE44               	btfsc	(dtoa@i+1)^0,7,c
 14280  002EAA  EF5F  F017         	goto	u10021
 14281  002EAE  5044               	movf	(dtoa@i+1)^0,w,c
 14282  002EB0  E108               	bnz	u10020
 14283  002EB2  0443               	decf	dtoa@i^0,w,c
 14284  002EB4  A0D8               	btfss	status,0,c
 14285  002EB6  EF5F  F017         	goto	u10021
 14286  002EBA  EF61  F017         	goto	u10020
 14287  002EBE                     u10021:
 14288  002EBE  EF91  F017         	goto	l9183
 14289  002EC2                     u10020:
 14290  002EC2  503B               	movf	dtoa@n^0,w,c
 14291  002EC4  103C               	iorwf	(dtoa@n+1)^0,w,c
 14292  002EC6  103D               	iorwf	(dtoa@n+2)^0,w,c
 14293  002EC8  103E               	iorwf	(dtoa@n+3)^0,w,c
 14294  002ECA  103F               	iorwf	(dtoa@n+4)^0,w,c
 14295  002ECC  1040               	iorwf	(dtoa@n+5)^0,w,c
 14296  002ECE  1041               	iorwf	(dtoa@n+6)^0,w,c
 14297  002ED0  1042               	iorwf	(dtoa@n+7)^0,w,c
 14298  002ED2  A4D8               	btfss	status,2,c
 14299  002ED4  EF6E  F017         	goto	u10031
 14300  002ED8  EF70  F017         	goto	u10030
 14301  002EDC                     u10031:
 14302  002EDC  EFD8  F016         	goto	l9163
 14303  002EE0                     u10030:
 14304  002EE0  BE36               	btfsc	(dtoa@p+1)^0,7,c
 14305  002EE2  EF7D  F017         	goto	u10040
 14306  002EE6  5036               	movf	(dtoa@p+1)^0,w,c
 14307  002EE8  E106               	bnz	u10041
 14308  002EEA  0435               	decf	dtoa@p^0,w,c
 14309  002EEC  B0D8               	btfsc	status,0,c
 14310  002EEE  EF7B  F017         	goto	u10041
 14311  002EF2  EF7D  F017         	goto	u10040
 14312  002EF6                     u10041:
 14313  002EF6  EFD8  F016         	goto	l9163
 14314  002EFA                     u10040:
 14315  002EFA  BE38               	btfsc	(dtoa@w+1)^0,7,c
 14316  002EFC  EF88  F017         	goto	u10051
 14317  002F00  5038               	movf	(dtoa@w+1)^0,w,c
 14318  002F02  E108               	bnz	u10050
 14319  002F04  0437               	decf	dtoa@w^0,w,c
 14320  002F06  A0D8               	btfss	status,0,c
 14321  002F08  EF88  F017         	goto	u10051
 14322  002F0C  EF8A  F017         	goto	u10050
 14323  002F10                     u10051:
 14324  002F10  EF91  F017         	goto	l9183
 14325  002F14                     u10050:
 14326  002F14  B255               	btfsc	_flags^0,1,c
 14327  002F16  EF8F  F017         	goto	u10061
 14328  002F1A  EF91  F017         	goto	u10060
 14329  002F1E                     u10061:
 14330  002F1E  EFD8  F016         	goto	l9163
 14331  002F22                     u10060:
 14332  002F22                     l9183:
 14333                           
 14334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 14335  002F22  5039               	movf	dtoa@s^0,w,c
 14336  002F24  103A               	iorwf	(dtoa@s+1)^0,w,c
 14337  002F26  A4D8               	btfss	status,2,c
 14338  002F28  EF98  F017         	goto	u10071
 14339  002F2C  EF9A  F017         	goto	u10070
 14340  002F30                     u10071:
 14341  002F30  EFA1  F017         	goto	l9187
 14342  002F34                     u10070:
 14343  002F34  A455               	btfss	_flags^0,2,c
 14344  002F36  EF9F  F017         	goto	u10081
 14345  002F3A  EFA1  F017         	goto	u10080
 14346  002F3E                     u10081:
 14347  002F3E  EFBF  F017         	goto	l9197
 14348  002F42                     u10080:
 14349  002F42                     l9187:
 14350                           
 14351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 14352  002F42  0643               	decf	dtoa@i^0,f,c
 14353  002F44  A0D8               	btfss	status,0,c
 14354  002F46  0644               	decf	(dtoa@i+1)^0,f,c
 14355  002F48                     
 14356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 14357  002F48  5039               	movf	dtoa@s^0,w,c
 14358  002F4A  103A               	iorwf	(dtoa@s+1)^0,w,c
 14359  002F4C  A4D8               	btfss	status,2,c
 14360  002F4E  EFAB  F017         	goto	u10091
 14361  002F52  EFAD  F017         	goto	u10090
 14362  002F56                     u10091:
 14363  002F56  EFB3  F017         	goto	l9193
 14364  002F5A                     u10090:
 14365  002F5A  0E00               	movlw	0
 14366  002F5C  6E34               	movwf	(_dtoa$900+1)^0,c
 14367  002F5E  0E2B               	movlw	43
 14368  002F60  6E33               	movwf	_dtoa$900^0,c
 14369  002F62  EFB7  F017         	goto	l9195
 14370  002F66                     l9193:
 14371  002F66  0E00               	movlw	0
 14372  002F68  6E34               	movwf	(_dtoa$900+1)^0,c
 14373  002F6A  0E2D               	movlw	45
 14374  002F6C  6E33               	movwf	_dtoa$900^0,c
 14375  002F6E                     l9195:
 14376  002F6E  0E42               	movlw	low _dbuf
 14377  002F70  2443               	addwf	dtoa@i^0,w,c
 14378  002F72  6ED9               	movwf	fsr2l,c
 14379  002F74  0E01               	movlw	high _dbuf
 14380  002F76  2044               	addwfc	(dtoa@i+1)^0,w,c
 14381  002F78  6EDA               	movwf	fsr2h,c
 14382  002F7A  C033  FFDF         	movff	_dtoa$900,indf2
 14383  002F7E                     l9197:
 14384                           
 14385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 14386  002F7E  C021  F016         	movff	dtoa@fp,pad@fp
 14387  002F82  C022  F017         	movff	dtoa@fp+1,pad@fp+1
 14388  002F86  0E42               	movlw	low _dbuf
 14389  002F88  2443               	addwf	dtoa@i^0,w,c
 14390  002F8A  6E18               	movwf	pad@buf^0,c
 14391  002F8C  0E01               	movlw	high _dbuf
 14392  002F8E  2044               	addwfc	(dtoa@i+1)^0,w,c
 14393  002F90  6E19               	movwf	(pad@buf+1)^0,c
 14394  002F92  C037  F01A         	movff	dtoa@w,pad@p
 14395  002F96  C038  F01B         	movff	dtoa@w+1,pad@p+1
 14396  002F9A  EC73  F024         	call	_pad	;wreg free
 14397  002F9E  C016  F021         	movff	?_pad,?_dtoa
 14398  002FA2  C017  F022         	movff	?_pad+1,?_dtoa+1
 14399  002FA6  0012               	return		;funcret
 14400  002FA8                     __end_of_dtoa:
 14401                           	opt callstack 0
 14402                           
 14403 ;; *************** function _abs *****************
 14404 ;; Defined at:
 14405 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 14406 ;; Parameters:    Size  Location     Type
 14407 ;;  a               2   23[COMRAM] int 
 14408 ;; Auto vars:     Size  Location     Type
 14409 ;;		None
 14410 ;; Return value:  Size  Location     Type
 14411 ;;                  2   23[COMRAM] int 
 14412 ;; Registers used:
 14413 ;;		wreg, status,2, status,0
 14414 ;; Tracked objects:
 14415 ;;		On entry : 0/0
 14416 ;;		On exit  : 0/0
 14417 ;;		Unchanged: 0/0
 14418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14419 ;;      Params:         2       0       0       0       0       0       0       0       0
 14420 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14421 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14422 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14423 ;;Total ram usage:        4 bytes
 14424 ;; Hardware stack levels used:    1
 14425 ;; Hardware stack levels required when called:    2
 14426 ;; This function calls:
 14427 ;;		Nothing
 14428 ;; This function is called by:
 14429 ;;		_dtoa
 14430 ;; This function uses a non-reentrant model
 14431 ;;
 14432                           
 14433                           	psect	text51
 14434  0055E6                     __ptext51:
 14435                           	opt callstack 0
 14436  0055E6                     _abs:
 14437                           	opt callstack 23
 14438  0055E6  BE19               	btfsc	(abs@a+1)^0,7,c
 14439  0055E8  EF00  F02B         	goto	u8710
 14440  0055EC  5019               	movf	(abs@a+1)^0,w,c
 14441  0055EE  E106               	bnz	u8711
 14442  0055F0  0418               	decf	abs@a^0,w,c
 14443  0055F2  B0D8               	btfsc	status,0,c
 14444  0055F4  EFFE  F02A         	goto	u8711
 14445  0055F8  EF00  F02B         	goto	u8710
 14446  0055FC                     u8711:
 14447  0055FC  EF0E  F02B         	goto	l1635
 14448  005600                     u8710:
 14449  005600  C018  F01A         	movff	abs@a,??_abs
 14450  005604  C019  F01B         	movff	abs@a+1,??_abs+1
 14451  005608  1E1A               	comf	??_abs^0,f,c
 14452  00560A  1E1B               	comf	(??_abs+1)^0,f,c
 14453  00560C  4A1A               	infsnz	??_abs^0,f,c
 14454  00560E  2A1B               	incf	(??_abs+1)^0,f,c
 14455  005610  C01A  F018         	movff	??_abs,?_abs
 14456  005614  C01B  F019         	movff	??_abs+1,?_abs+1
 14457  005618  EF12  F02B         	goto	l1638
 14458  00561C                     l1635:
 14459  00561C  C018  F018         	movff	abs@a,?_abs
 14460  005620  C019  F019         	movff	abs@a+1,?_abs+1
 14461  005624                     l1638:
 14462  005624  0012               	return		;funcret
 14463  005626                     __end_of_abs:
 14464                           	opt callstack 0
 14465                           
 14466 ;; *************** function ___aomod *****************
 14467 ;; Defined at:
 14468 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 14469 ;; Parameters:    Size  Location     Type
 14470 ;;  dividend        8    5[COMRAM] long long 
 14471 ;;  divisor         8   13[COMRAM] long long 
 14472 ;; Auto vars:     Size  Location     Type
 14473 ;;  sign            1   22[COMRAM] unsigned char 
 14474 ;;  counter         1   21[COMRAM] unsigned char 
 14475 ;; Return value:  Size  Location     Type
 14476 ;;                  8    5[COMRAM] long long 
 14477 ;; Registers used:
 14478 ;;		wreg, status,2, status,0
 14479 ;; Tracked objects:
 14480 ;;		On entry : 0/0
 14481 ;;		On exit  : 0/0
 14482 ;;		Unchanged: 0/0
 14483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14484 ;;      Params:        16       0       0       0       0       0       0       0       0
 14485 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14486 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14487 ;;      Totals:        18       0       0       0       0       0       0       0       0
 14488 ;;Total ram usage:       18 bytes
 14489 ;; Hardware stack levels used:    1
 14490 ;; Hardware stack levels required when called:    2
 14491 ;; This function calls:
 14492 ;;		Nothing
 14493 ;; This function is called by:
 14494 ;;		_dtoa
 14495 ;; This function uses a non-reentrant model
 14496 ;;
 14497                           
 14498                           	psect	text52
 14499  003DA4                     __ptext52:
 14500                           	opt callstack 0
 14501  003DA4                     ___aomod:
 14502                           	opt callstack 23
 14503  003DA4  0E00               	movlw	0
 14504  003DA6  6E17               	movwf	___aomod@sign^0,c
 14505  003DA8  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
 14506  003DAA  EFDB  F01E         	goto	u9030
 14507  003DAE  EFD9  F01E         	goto	u9031
 14508  003DB2                     u9031:
 14509  003DB2  EFED  F01E         	goto	l8577
 14510  003DB6                     u9030:
 14511  003DB6  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 14512  003DB8  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 14513  003DBA  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 14514  003DBC  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 14515  003DBE  1E09               	comf	(___aomod@dividend+3)^0,f,c
 14516  003DC0  1E08               	comf	(___aomod@dividend+2)^0,f,c
 14517  003DC2  1E07               	comf	(___aomod@dividend+1)^0,f,c
 14518  003DC4  6C06               	negf	___aomod@dividend^0,c
 14519  003DC6  0E00               	movlw	0
 14520  003DC8  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 14521  003DCA  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 14522  003DCC  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 14523  003DCE  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 14524  003DD0  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 14525  003DD2  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 14526  003DD4  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 14527  003DD6  0E01               	movlw	1
 14528  003DD8  6E17               	movwf	___aomod@sign^0,c
 14529  003DDA                     l8577:
 14530  003DDA  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
 14531  003DDC  EFF4  F01E         	goto	u9040
 14532  003DE0  EFF2  F01E         	goto	u9041
 14533  003DE4                     u9041:
 14534  003DE4  EF04  F01F         	goto	l8581
 14535  003DE8                     u9040:
 14536  003DE8  1E15               	comf	(___aomod@divisor+7)^0,f,c
 14537  003DEA  1E14               	comf	(___aomod@divisor+6)^0,f,c
 14538  003DEC  1E13               	comf	(___aomod@divisor+5)^0,f,c
 14539  003DEE  1E12               	comf	(___aomod@divisor+4)^0,f,c
 14540  003DF0  1E11               	comf	(___aomod@divisor+3)^0,f,c
 14541  003DF2  1E10               	comf	(___aomod@divisor+2)^0,f,c
 14542  003DF4  1E0F               	comf	(___aomod@divisor+1)^0,f,c
 14543  003DF6  6C0E               	negf	___aomod@divisor^0,c
 14544  003DF8  0E00               	movlw	0
 14545  003DFA  220F               	addwfc	(___aomod@divisor+1)^0,f,c
 14546  003DFC  2210               	addwfc	(___aomod@divisor+2)^0,f,c
 14547  003DFE  2211               	addwfc	(___aomod@divisor+3)^0,f,c
 14548  003E00  2212               	addwfc	(___aomod@divisor+4)^0,f,c
 14549  003E02  2213               	addwfc	(___aomod@divisor+5)^0,f,c
 14550  003E04  2214               	addwfc	(___aomod@divisor+6)^0,f,c
 14551  003E06  2215               	addwfc	(___aomod@divisor+7)^0,f,c
 14552  003E08                     l8581:
 14553  003E08  500E               	movf	___aomod@divisor^0,w,c
 14554  003E0A  100F               	iorwf	(___aomod@divisor+1)^0,w,c
 14555  003E0C  1010               	iorwf	(___aomod@divisor+2)^0,w,c
 14556  003E0E  1011               	iorwf	(___aomod@divisor+3)^0,w,c
 14557  003E10  1012               	iorwf	(___aomod@divisor+4)^0,w,c
 14558  003E12  1013               	iorwf	(___aomod@divisor+5)^0,w,c
 14559  003E14  1014               	iorwf	(___aomod@divisor+6)^0,w,c
 14560  003E16  1015               	iorwf	(___aomod@divisor+7)^0,w,c
 14561  003E18  B4D8               	btfsc	status,2,c
 14562  003E1A  EF11  F01F         	goto	u9051
 14563  003E1E  EF13  F01F         	goto	u9050
 14564  003E22                     u9051:
 14565  003E22  EF5B  F01F         	goto	l8597
 14566  003E26                     u9050:
 14567  003E26  0E01               	movlw	1
 14568  003E28  6E16               	movwf	___aomod@counter^0,c
 14569  003E2A  EF21  F01F         	goto	l8587
 14570  003E2E                     l8585:
 14571  003E2E  90D8               	bcf	status,0,c
 14572  003E30  360E               	rlcf	___aomod@divisor^0,f,c
 14573  003E32  360F               	rlcf	(___aomod@divisor+1)^0,f,c
 14574  003E34  3610               	rlcf	(___aomod@divisor+2)^0,f,c
 14575  003E36  3611               	rlcf	(___aomod@divisor+3)^0,f,c
 14576  003E38  3612               	rlcf	(___aomod@divisor+4)^0,f,c
 14577  003E3A  3613               	rlcf	(___aomod@divisor+5)^0,f,c
 14578  003E3C  3614               	rlcf	(___aomod@divisor+6)^0,f,c
 14579  003E3E  3615               	rlcf	(___aomod@divisor+7)^0,f,c
 14580  003E40  2A16               	incf	___aomod@counter^0,f,c
 14581  003E42                     l8587:
 14582  003E42  AE15               	btfss	(___aomod@divisor+7)^0,7,c
 14583  003E44  EF26  F01F         	goto	u9061
 14584  003E48  EF28  F01F         	goto	u9060
 14585  003E4C                     u9061:
 14586  003E4C  EF17  F01F         	goto	l8585
 14587  003E50                     u9060:
 14588  003E50                     l8589:
 14589  003E50  500E               	movf	___aomod@divisor^0,w,c
 14590  003E52  5C06               	subwf	___aomod@dividend^0,w,c
 14591  003E54  500F               	movf	(___aomod@divisor+1)^0,w,c
 14592  003E56  5807               	subwfb	(___aomod@dividend+1)^0,w,c
 14593  003E58  5010               	movf	(___aomod@divisor+2)^0,w,c
 14594  003E5A  5808               	subwfb	(___aomod@dividend+2)^0,w,c
 14595  003E5C  5011               	movf	(___aomod@divisor+3)^0,w,c
 14596  003E5E  5809               	subwfb	(___aomod@dividend+3)^0,w,c
 14597  003E60  5012               	movf	(___aomod@divisor+4)^0,w,c
 14598  003E62  580A               	subwfb	(___aomod@dividend+4)^0,w,c
 14599  003E64  5013               	movf	(___aomod@divisor+5)^0,w,c
 14600  003E66  580B               	subwfb	(___aomod@dividend+5)^0,w,c
 14601  003E68  5014               	movf	(___aomod@divisor+6)^0,w,c
 14602  003E6A  580C               	subwfb	(___aomod@dividend+6)^0,w,c
 14603  003E6C  5015               	movf	(___aomod@divisor+7)^0,w,c
 14604  003E6E  580D               	subwfb	(___aomod@dividend+7)^0,w,c
 14605  003E70  A0D8               	btfss	status,0,c
 14606  003E72  EF3D  F01F         	goto	u9071
 14607  003E76  EF3F  F01F         	goto	u9070
 14608  003E7A                     u9071:
 14609  003E7A  EF4F  F01F         	goto	l8593
 14610  003E7E                     u9070:
 14611  003E7E  500E               	movf	___aomod@divisor^0,w,c
 14612  003E80  5E06               	subwf	___aomod@dividend^0,f,c
 14613  003E82  500F               	movf	(___aomod@divisor+1)^0,w,c
 14614  003E84  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
 14615  003E86  5010               	movf	(___aomod@divisor+2)^0,w,c
 14616  003E88  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
 14617  003E8A  5011               	movf	(___aomod@divisor+3)^0,w,c
 14618  003E8C  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
 14619  003E8E  5012               	movf	(___aomod@divisor+4)^0,w,c
 14620  003E90  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
 14621  003E92  5013               	movf	(___aomod@divisor+5)^0,w,c
 14622  003E94  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
 14623  003E96  5014               	movf	(___aomod@divisor+6)^0,w,c
 14624  003E98  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
 14625  003E9A  5015               	movf	(___aomod@divisor+7)^0,w,c
 14626  003E9C  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
 14627  003E9E                     l8593:
 14628  003E9E  90D8               	bcf	status,0,c
 14629  003EA0  3215               	rrcf	(___aomod@divisor+7)^0,f,c
 14630  003EA2  3214               	rrcf	(___aomod@divisor+6)^0,f,c
 14631  003EA4  3213               	rrcf	(___aomod@divisor+5)^0,f,c
 14632  003EA6  3212               	rrcf	(___aomod@divisor+4)^0,f,c
 14633  003EA8  3211               	rrcf	(___aomod@divisor+3)^0,f,c
 14634  003EAA  3210               	rrcf	(___aomod@divisor+2)^0,f,c
 14635  003EAC  320F               	rrcf	(___aomod@divisor+1)^0,f,c
 14636  003EAE  320E               	rrcf	___aomod@divisor^0,f,c
 14637  003EB0  2E16               	decfsz	___aomod@counter^0,f,c
 14638  003EB2  EF28  F01F         	goto	l8589
 14639  003EB6                     l8597:
 14640  003EB6  5017               	movf	___aomod@sign^0,w,c
 14641  003EB8  B4D8               	btfsc	status,2,c
 14642  003EBA  EF61  F01F         	goto	u9081
 14643  003EBE  EF63  F01F         	goto	u9080
 14644  003EC2                     u9081:
 14645  003EC2  EF73  F01F         	goto	l8601
 14646  003EC6                     u9080:
 14647  003EC6  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 14648  003EC8  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 14649  003ECA  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 14650  003ECC  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 14651  003ECE  1E09               	comf	(___aomod@dividend+3)^0,f,c
 14652  003ED0  1E08               	comf	(___aomod@dividend+2)^0,f,c
 14653  003ED2  1E07               	comf	(___aomod@dividend+1)^0,f,c
 14654  003ED4  6C06               	negf	___aomod@dividend^0,c
 14655  003ED6  0E00               	movlw	0
 14656  003ED8  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 14657  003EDA  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 14658  003EDC  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 14659  003EDE  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 14660  003EE0  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 14661  003EE2  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 14662  003EE4  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 14663  003EE6                     l8601:
 14664  003EE6  C006  F006         	movff	___aomod@dividend,?___aomod
 14665  003EEA  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 14666  003EEE  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 14667  003EF2  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 14668  003EF6  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 14669  003EFA  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 14670  003EFE  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 14671  003F02  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 14672  003F06  0012               	return		;funcret
 14673  003F08                     __end_of___aomod:
 14674                           	opt callstack 0
 14675                           
 14676 ;; *************** function ___aodiv *****************
 14677 ;; Defined at:
 14678 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14679 ;; Parameters:    Size  Location     Type
 14680 ;;  dividend        8    5[COMRAM] long long 
 14681 ;;  divisor         8   13[COMRAM] long long 
 14682 ;; Auto vars:     Size  Location     Type
 14683 ;;  quotient        8   23[COMRAM] long long 
 14684 ;;  sign            1   22[COMRAM] unsigned char 
 14685 ;;  counter         1   21[COMRAM] unsigned char 
 14686 ;; Return value:  Size  Location     Type
 14687 ;;                  8    5[COMRAM] long long 
 14688 ;; Registers used:
 14689 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14690 ;; Tracked objects:
 14691 ;;		On entry : 0/0
 14692 ;;		On exit  : 0/0
 14693 ;;		Unchanged: 0/0
 14694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14695 ;;      Params:        16       0       0       0       0       0       0       0       0
 14696 ;;      Locals:        10       0       0       0       0       0       0       0       0
 14697 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14698 ;;      Totals:        26       0       0       0       0       0       0       0       0
 14699 ;;Total ram usage:       26 bytes
 14700 ;; Hardware stack levels used:    1
 14701 ;; Hardware stack levels required when called:    2
 14702 ;; This function calls:
 14703 ;;		Nothing
 14704 ;; This function is called by:
 14705 ;;		_dtoa
 14706 ;; This function uses a non-reentrant model
 14707 ;;
 14708                           
 14709                           	psect	text53
 14710  003AA0                     __ptext53:
 14711                           	opt callstack 0
 14712  003AA0                     ___aodiv:
 14713                           	opt callstack 23
 14714  003AA0  0E00               	movlw	0
 14715  003AA2  6E17               	movwf	___aodiv@sign^0,c
 14716  003AA4  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
 14717  003AA6  EF59  F01D         	goto	u8960
 14718  003AAA  EF57  F01D         	goto	u8961
 14719  003AAE                     u8961:
 14720  003AAE  EF6B  F01D         	goto	l8533
 14721  003AB2                     u8960:
 14722  003AB2  1E15               	comf	(___aodiv@divisor+7)^0,f,c
 14723  003AB4  1E14               	comf	(___aodiv@divisor+6)^0,f,c
 14724  003AB6  1E13               	comf	(___aodiv@divisor+5)^0,f,c
 14725  003AB8  1E12               	comf	(___aodiv@divisor+4)^0,f,c
 14726  003ABA  1E11               	comf	(___aodiv@divisor+3)^0,f,c
 14727  003ABC  1E10               	comf	(___aodiv@divisor+2)^0,f,c
 14728  003ABE  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
 14729  003AC0  6C0E               	negf	___aodiv@divisor^0,c
 14730  003AC2  0E00               	movlw	0
 14731  003AC4  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
 14732  003AC6  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
 14733  003AC8  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
 14734  003ACA  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
 14735  003ACC  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
 14736  003ACE  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
 14737  003AD0  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
 14738  003AD2  0E01               	movlw	1
 14739  003AD4  6E17               	movwf	___aodiv@sign^0,c
 14740  003AD6                     l8533:
 14741  003AD6  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
 14742  003AD8  EF72  F01D         	goto	u8970
 14743  003ADC  EF70  F01D         	goto	u8971
 14744  003AE0                     u8971:
 14745  003AE0  EF84  F01D         	goto	l8539
 14746  003AE4                     u8970:
 14747  003AE4  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
 14748  003AE6  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
 14749  003AE8  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
 14750  003AEA  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
 14751  003AEC  1E09               	comf	(___aodiv@dividend+3)^0,f,c
 14752  003AEE  1E08               	comf	(___aodiv@dividend+2)^0,f,c
 14753  003AF0  1E07               	comf	(___aodiv@dividend+1)^0,f,c
 14754  003AF2  6C06               	negf	___aodiv@dividend^0,c
 14755  003AF4  0E00               	movlw	0
 14756  003AF6  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
 14757  003AF8  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
 14758  003AFA  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
 14759  003AFC  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
 14760  003AFE  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
 14761  003B00  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
 14762  003B02  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
 14763  003B04  0E01               	movlw	1
 14764  003B06  1A17               	xorwf	___aodiv@sign^0,f,c
 14765  003B08                     l8539:
 14766  003B08  EE20  F018         	lfsr	2,___aodiv@quotient
 14767  003B0C  0E07               	movlw	7
 14768  003B0E                     u8981:
 14769  003B0E  6ADE               	clrf	postinc2,c
 14770  003B10  06E8               	decf	wreg,f,c
 14771  003B12  E2FD               	bc	u8981
 14772  003B14  500E               	movf	___aodiv@divisor^0,w,c
 14773  003B16  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
 14774  003B18  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
 14775  003B1A  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
 14776  003B1C  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
 14777  003B1E  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
 14778  003B20  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
 14779  003B22  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
 14780  003B24  B4D8               	btfsc	status,2,c
 14781  003B26  EF97  F01D         	goto	u8991
 14782  003B2A  EF99  F01D         	goto	u8990
 14783  003B2E                     u8991:
 14784  003B2E  EFEB  F01D         	goto	l8561
 14785  003B32                     u8990:
 14786  003B32  0E01               	movlw	1
 14787  003B34  6E16               	movwf	___aodiv@counter^0,c
 14788  003B36  EFA7  F01D         	goto	l8547
 14789  003B3A                     l8545:
 14790  003B3A  90D8               	bcf	status,0,c
 14791  003B3C  360E               	rlcf	___aodiv@divisor^0,f,c
 14792  003B3E  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
 14793  003B40  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
 14794  003B42  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
 14795  003B44  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
 14796  003B46  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
 14797  003B48  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
 14798  003B4A  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
 14799  003B4C  2A16               	incf	___aodiv@counter^0,f,c
 14800  003B4E                     l8547:
 14801  003B4E  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
 14802  003B50  EFAC  F01D         	goto	u9001
 14803  003B54  EFAE  F01D         	goto	u9000
 14804  003B58                     u9001:
 14805  003B58  EF9D  F01D         	goto	l8545
 14806  003B5C                     u9000:
 14807  003B5C                     l8549:
 14808  003B5C  90D8               	bcf	status,0,c
 14809  003B5E  3618               	rlcf	___aodiv@quotient^0,f,c
 14810  003B60  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
 14811  003B62  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
 14812  003B64  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
 14813  003B66  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
 14814  003B68  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
 14815  003B6A  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
 14816  003B6C  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
 14817  003B6E  500E               	movf	___aodiv@divisor^0,w,c
 14818  003B70  5C06               	subwf	___aodiv@dividend^0,w,c
 14819  003B72  500F               	movf	(___aodiv@divisor+1)^0,w,c
 14820  003B74  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
 14821  003B76  5010               	movf	(___aodiv@divisor+2)^0,w,c
 14822  003B78  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
 14823  003B7A  5011               	movf	(___aodiv@divisor+3)^0,w,c
 14824  003B7C  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
 14825  003B7E  5012               	movf	(___aodiv@divisor+4)^0,w,c
 14826  003B80  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
 14827  003B82  5013               	movf	(___aodiv@divisor+5)^0,w,c
 14828  003B84  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
 14829  003B86  5014               	movf	(___aodiv@divisor+6)^0,w,c
 14830  003B88  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
 14831  003B8A  5015               	movf	(___aodiv@divisor+7)^0,w,c
 14832  003B8C  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
 14833  003B8E  A0D8               	btfss	status,0,c
 14834  003B90  EFCC  F01D         	goto	u9011
 14835  003B94  EFCE  F01D         	goto	u9010
 14836  003B98                     u9011:
 14837  003B98  EFDF  F01D         	goto	l8557
 14838  003B9C                     u9010:
 14839  003B9C  500E               	movf	___aodiv@divisor^0,w,c
 14840  003B9E  5E06               	subwf	___aodiv@dividend^0,f,c
 14841  003BA0  500F               	movf	(___aodiv@divisor+1)^0,w,c
 14842  003BA2  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
 14843  003BA4  5010               	movf	(___aodiv@divisor+2)^0,w,c
 14844  003BA6  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
 14845  003BA8  5011               	movf	(___aodiv@divisor+3)^0,w,c
 14846  003BAA  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
 14847  003BAC  5012               	movf	(___aodiv@divisor+4)^0,w,c
 14848  003BAE  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
 14849  003BB0  5013               	movf	(___aodiv@divisor+5)^0,w,c
 14850  003BB2  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
 14851  003BB4  5014               	movf	(___aodiv@divisor+6)^0,w,c
 14852  003BB6  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
 14853  003BB8  5015               	movf	(___aodiv@divisor+7)^0,w,c
 14854  003BBA  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
 14855  003BBC  8018               	bsf	___aodiv@quotient^0,0,c
 14856  003BBE                     l8557:
 14857  003BBE  90D8               	bcf	status,0,c
 14858  003BC0  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
 14859  003BC2  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
 14860  003BC4  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
 14861  003BC6  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
 14862  003BC8  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
 14863  003BCA  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
 14864  003BCC  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
 14865  003BCE  320E               	rrcf	___aodiv@divisor^0,f,c
 14866  003BD0  2E16               	decfsz	___aodiv@counter^0,f,c
 14867  003BD2  EFAE  F01D         	goto	l8549
 14868  003BD6                     l8561:
 14869  003BD6  5017               	movf	___aodiv@sign^0,w,c
 14870  003BD8  B4D8               	btfsc	status,2,c
 14871  003BDA  EFF1  F01D         	goto	u9021
 14872  003BDE  EFF3  F01D         	goto	u9020
 14873  003BE2                     u9021:
 14874  003BE2  EF03  F01E         	goto	l8565
 14875  003BE6                     u9020:
 14876  003BE6  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
 14877  003BE8  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
 14878  003BEA  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
 14879  003BEC  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
 14880  003BEE  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
 14881  003BF0  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
 14882  003BF2  1E19               	comf	(___aodiv@quotient+1)^0,f,c
 14883  003BF4  6C18               	negf	___aodiv@quotient^0,c
 14884  003BF6  0E00               	movlw	0
 14885  003BF8  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
 14886  003BFA  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
 14887  003BFC  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
 14888  003BFE  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
 14889  003C00  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
 14890  003C02  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
 14891  003C04  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
 14892  003C06                     l8565:
 14893  003C06  C018  F006         	movff	___aodiv@quotient,?___aodiv
 14894  003C0A  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 14895  003C0E  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 14896  003C12  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 14897  003C16  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 14898  003C1A  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 14899  003C1E  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 14900  003C22  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 14901  003C26  0012               	return		;funcret
 14902  003C28                     __end_of___aodiv:
 14903                           	opt callstack 0
 14904                           
 14905 ;; *************** function _ctoa *****************
 14906 ;; Defined at:
 14907 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14908 ;; Parameters:    Size  Location     Type
 14909 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 14910 ;;		 -> sprintf@f(6), 
 14911 ;;  c               1   34[COMRAM] unsigned char 
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;  w               2   35[COMRAM] int 
 14914 ;;  l               2    0        int 
 14915 ;; Return value:  Size  Location     Type
 14916 ;;                  2   32[COMRAM] int 
 14917 ;; Registers used:
 14918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14919 ;; Tracked objects:
 14920 ;;		On entry : 0/0
 14921 ;;		On exit  : 0/0
 14922 ;;		Unchanged: 0/0
 14923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14924 ;;      Params:         3       0       0       0       0       0       0       0       0
 14925 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14926 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14927 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14928 ;;Total ram usage:        5 bytes
 14929 ;; Hardware stack levels used:    1
 14930 ;; Hardware stack levels required when called:    6
 14931 ;; This function calls:
 14932 ;;		_pad
 14933 ;; This function is called by:
 14934 ;;		_vfpfcnvrt
 14935 ;; This function uses a non-reentrant model
 14936 ;;
 14937                           
 14938                           	psect	text54
 14939  00515C                     __ptext54:
 14940                           	opt callstack 0
 14941  00515C                     _ctoa:
 14942                           	opt callstack 20
 14943  00515C                     
 14944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14945  00515C  0101               	movlb	1	; () banked
 14946  00515E  5132               	movf	_width& (0+255),w,b
 14947  005160  1133               	iorwf	(_width+1)& (0+255),w,b
 14948  005162  A4D8               	btfss	status,2,c
 14949  005164  EFB6  F028         	goto	u9941
 14950  005168  EFB8  F028         	goto	u9940
 14951  00516C                     u9941:
 14952  00516C  EFBE  F028         	goto	l9129
 14953  005170                     u9940:
 14954  005170                     
 14955                           ; BSR set to: 1
 14956  005170  C132  F024         	movff	_width,ctoa@w
 14957  005174  C133  F025         	movff	_width+1,ctoa@w+1
 14958  005178  EFC4  F028         	goto	l9131
 14959  00517C                     l9129:
 14960                           
 14961                           ; BSR set to: 1
 14962  00517C  0EFF               	movlw	255
 14963  00517E  2532               	addwf	_width& (0+255),w,b
 14964  005180  6E24               	movwf	ctoa@w^0,c
 14965  005182  0EFF               	movlw	255
 14966  005184  2133               	addwfc	(_width+1)& (0+255),w,b
 14967  005186  6E25               	movwf	(ctoa@w+1)^0,c
 14968  005188                     l9131:
 14969                           
 14970                           ; BSR set to: 1
 14971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14972  005188  C023  F142         	movff	ctoa@c,_dbuf
 14973  00518C                     
 14974                           ; BSR set to: 1
 14975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14976  00518C  0E00               	movlw	0
 14977  00518E  6F43               	movwf	(_dbuf+1)& (0+255),b
 14978  005190                     
 14979                           ; BSR set to: 1
 14980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14981  005190  C021  F016         	movff	ctoa@fp,pad@fp
 14982  005194  C022  F017         	movff	ctoa@fp+1,pad@fp+1
 14983  005198  0E42               	movlw	low _dbuf
 14984  00519A  6E18               	movwf	pad@buf^0,c
 14985  00519C  0E01               	movlw	high _dbuf
 14986  00519E  6E19               	movwf	(pad@buf+1)^0,c
 14987  0051A0  C024  F01A         	movff	ctoa@w,pad@p
 14988  0051A4  C025  F01B         	movff	ctoa@w+1,pad@p+1
 14989  0051A8  EC73  F024         	call	_pad	;wreg free
 14990  0051AC  C016  F021         	movff	?_pad,?_ctoa
 14991  0051B0  C017  F022         	movff	?_pad+1,?_ctoa+1
 14992  0051B4  0012               	return		;funcret
 14993  0051B6                     __end_of_ctoa:
 14994                           	opt callstack 0
 14995                           
 14996 ;; *************** function _pad *****************
 14997 ;; Defined at:
 14998 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14999 ;; Parameters:    Size  Location     Type
 15000 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
 15001 ;;		 -> sprintf@f(6), 
 15002 ;;  buf             2   23[COMRAM] PTR unsigned char 
 15003 ;;		 -> dbuf(80), 
 15004 ;;  p               2   25[COMRAM] int 
 15005 ;; Auto vars:     Size  Location     Type
 15006 ;;  w               2   30[COMRAM] int 
 15007 ;;  i               2   28[COMRAM] int 
 15008 ;; Return value:  Size  Location     Type
 15009 ;;                  2   21[COMRAM] int 
 15010 ;; Registers used:
 15011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15012 ;; Tracked objects:
 15013 ;;		On entry : 0/0
 15014 ;;		On exit  : 0/0
 15015 ;;		Unchanged: 0/0
 15016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15017 ;;      Params:         6       0       0       0       0       0       0       0       0
 15018 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15019 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15020 ;;      Totals:        11       0       0       0       0       0       0       0       0
 15021 ;;Total ram usage:       11 bytes
 15022 ;; Hardware stack levels used:    1
 15023 ;; Hardware stack levels required when called:    5
 15024 ;; This function calls:
 15025 ;;		_fputc
 15026 ;;		_fputs
 15027 ;;		_strlen
 15028 ;; This function is called by:
 15029 ;;		_ctoa
 15030 ;;		_dtoa
 15031 ;;		_efgtoa
 15032 ;; This function uses a non-reentrant model
 15033 ;;
 15034                           
 15035                           	psect	text55
 15036  0048E6                     __ptext55:
 15037                           	opt callstack 0
 15038  0048E6                     _pad:
 15039                           	opt callstack 20
 15040  0048E6                     
 15041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 15042  0048E6  A055               	btfss	_flags^0,0,c
 15043  0048E8  EF78  F024         	goto	u8671
 15044  0048EC  EF7A  F024         	goto	u8670
 15045  0048F0                     u8671:
 15046  0048F0  EF84  F024         	goto	l8429
 15047  0048F4                     u8670:
 15048  0048F4                     
 15049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 15050  0048F4  C018  F00F         	movff	pad@buf,fputs@s
 15051  0048F8  C019  F010         	movff	pad@buf+1,fputs@s+1
 15052  0048FC  C016  F011         	movff	pad@fp,fputs@fp
 15053  004900  C017  F012         	movff	pad@fp+1,fputs@fp+1
 15054  004904  ECB1  F02A         	call	_fputs	;wreg free
 15055  004908                     l8429:
 15056                           
 15057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 15058  004908  BE1B               	btfsc	(pad@p+1)^0,7,c
 15059  00490A  EF89  F024         	goto	u8681
 15060  00490E  EF8B  F024         	goto	u8680
 15061  004912                     u8681:
 15062  004912  EF91  F024         	goto	l8433
 15063  004916                     u8680:
 15064  004916  C01A  F01F         	movff	pad@p,pad@w
 15065  00491A  C01B  F020         	movff	pad@p+1,pad@w+1
 15066  00491E  EF95  F024         	goto	l782
 15067  004922                     l8433:
 15068  004922  0E00               	movlw	0
 15069  004924  6E20               	movwf	(pad@w+1)^0,c
 15070  004926  0E00               	movlw	0
 15071  004928  6E1F               	movwf	pad@w^0,c
 15072  00492A                     l782:
 15073                           
 15074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 15075  00492A  0E00               	movlw	0
 15076  00492C  6E1E               	movwf	(pad@i+1)^0,c
 15077  00492E  0E00               	movlw	0
 15078  004930  6E1D               	movwf	pad@i^0,c
 15079                           
 15080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 15081  004932  EFA7  F024         	goto	l8439
 15082  004936                     l8435:
 15083                           
 15084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 15085  004936  0E00               	movlw	0
 15086  004938  6E07               	movwf	(fputc@c+1)^0,c
 15087  00493A  0E20               	movlw	32
 15088  00493C  6E06               	movwf	fputc@c^0,c
 15089  00493E  C016  F008         	movff	pad@fp,fputc@fp
 15090  004942  C017  F009         	movff	pad@fp+1,fputc@fp+1
 15091  004946  ECAC  F023         	call	_fputc	;wreg free
 15092  00494A                     
 15093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 15094  00494A  4A1D               	infsnz	pad@i^0,f,c
 15095  00494C  2A1E               	incf	(pad@i+1)^0,f,c
 15096  00494E                     l8439:
 15097                           
 15098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 15099  00494E  501F               	movf	pad@w^0,w,c
 15100  004950  5C1D               	subwf	pad@i^0,w,c
 15101  004952  501E               	movf	(pad@i+1)^0,w,c
 15102  004954  0A80               	xorlw	128
 15103  004956  6E1C               	movwf	??_pad^0,c
 15104  004958  5020               	movf	(pad@w+1)^0,w,c
 15105  00495A  0A80               	xorlw	128
 15106  00495C  581C               	subwfb	??_pad^0,w,c
 15107  00495E  A0D8               	btfss	status,0,c
 15108  004960  EFB4  F024         	goto	u8691
 15109  004964  EFB6  F024         	goto	u8690
 15110  004968                     u8691:
 15111  004968  EF9B  F024         	goto	l8435
 15112  00496C                     u8690:
 15113  00496C                     
 15114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 15115  00496C  B055               	btfsc	_flags^0,0,c
 15116  00496E  EFBB  F024         	goto	u8701
 15117  004972  EFBD  F024         	goto	u8700
 15118  004976                     u8701:
 15119  004976  EFC7  F024         	goto	l8443
 15120  00497A                     u8700:
 15121  00497A                     
 15122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 15123  00497A  C018  F00F         	movff	pad@buf,fputs@s
 15124  00497E  C019  F010         	movff	pad@buf+1,fputs@s+1
 15125  004982  C016  F011         	movff	pad@fp,fputs@fp
 15126  004986  C017  F012         	movff	pad@fp+1,fputs@fp+1
 15127  00498A  ECB1  F02A         	call	_fputs	;wreg free
 15128  00498E                     l8443:
 15129                           
 15130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 15131  00498E  C018  F006         	movff	pad@buf,strlen@s
 15132  004992  C019  F007         	movff	pad@buf+1,strlen@s+1
 15133  004996  EC67  F02B         	call	_strlen	;wreg free
 15134  00499A  501F               	movf	pad@w^0,w,c
 15135  00499C  2406               	addwf	?_strlen^0,w,c
 15136  00499E  6E16               	movwf	?_pad^0,c
 15137  0049A0  5020               	movf	(pad@w+1)^0,w,c
 15138  0049A2  2007               	addwfc	(?_strlen+1)^0,w,c
 15139  0049A4  6E17               	movwf	(?_pad+1)^0,c
 15140  0049A6  0012               	return		;funcret
 15141  0049A8                     __end_of_pad:
 15142                           	opt callstack 0
 15143                           
 15144 ;; *************** function _strlen *****************
 15145 ;; Defined at:
 15146 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 15147 ;; Parameters:    Size  Location     Type
 15148 ;;  s               2    5[COMRAM] PTR const unsigned char 
 15149 ;;		 -> dbuf(80), 
 15150 ;; Auto vars:     Size  Location     Type
 15151 ;;  a               2    7[COMRAM] PTR const unsigned char 
 15152 ;;		 -> dbuf(80), 
 15153 ;; Return value:  Size  Location     Type
 15154 ;;                  2    5[COMRAM] unsigned int 
 15155 ;; Registers used:
 15156 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15157 ;; Tracked objects:
 15158 ;;		On entry : 0/0
 15159 ;;		On exit  : 0/0
 15160 ;;		Unchanged: 0/0
 15161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15162 ;;      Params:         2       0       0       0       0       0       0       0       0
 15163 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15164 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15165 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15166 ;;Total ram usage:        4 bytes
 15167 ;; Hardware stack levels used:    1
 15168 ;; Hardware stack levels required when called:    2
 15169 ;; This function calls:
 15170 ;;		Nothing
 15171 ;; This function is called by:
 15172 ;;		_pad
 15173 ;; This function uses a non-reentrant model
 15174 ;;
 15175                           
 15176                           	psect	text56
 15177  0056CE                     __ptext56:
 15178                           	opt callstack 0
 15179  0056CE                     _strlen:
 15180                           	opt callstack 22
 15181  0056CE  C006  F008         	movff	strlen@s,strlen@a
 15182  0056D2  C007  F009         	movff	strlen@s+1,strlen@a+1
 15183  0056D6  EF6F  F02B         	goto	l8155
 15184  0056DA                     l8153:
 15185  0056DA  4A06               	infsnz	strlen@s^0,f,c
 15186  0056DC  2A07               	incf	(strlen@s+1)^0,f,c
 15187  0056DE                     l8155:
 15188  0056DE  C006  FFD9         	movff	strlen@s,fsr2l
 15189  0056E2  C007  FFDA         	movff	strlen@s+1,fsr2h
 15190  0056E6  50DF               	movf	indf2,w,c
 15191  0056E8  A4D8               	btfss	status,2,c
 15192  0056EA  EF79  F02B         	goto	u8171
 15193  0056EE  EF7B  F02B         	goto	u8170
 15194  0056F2                     u8171:
 15195  0056F2  EF6D  F02B         	goto	l8153
 15196  0056F6                     u8170:
 15197  0056F6  5008               	movf	strlen@a^0,w,c
 15198  0056F8  5C06               	subwf	strlen@s^0,w,c
 15199  0056FA  6E06               	movwf	?_strlen^0,c
 15200  0056FC  5009               	movf	(strlen@a+1)^0,w,c
 15201  0056FE  5807               	subwfb	(strlen@s+1)^0,w,c
 15202  005700  6E07               	movwf	(?_strlen+1)^0,c
 15203  005702  0012               	return		;funcret
 15204  005704                     __end_of_strlen:
 15205                           	opt callstack 0
 15206                           
 15207 ;; *************** function _fputs *****************
 15208 ;; Defined at:
 15209 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 15210 ;; Parameters:    Size  Location     Type
 15211 ;;  s               2   14[COMRAM] PTR const unsigned char 
 15212 ;;		 -> dbuf(80), 
 15213 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 15214 ;;		 -> sprintf@f(6), 
 15215 ;; Auto vars:     Size  Location     Type
 15216 ;;  i               2   19[COMRAM] int 
 15217 ;;  c               1   18[COMRAM] unsigned char 
 15218 ;; Return value:  Size  Location     Type
 15219 ;;                  2   14[COMRAM] int 
 15220 ;; Registers used:
 15221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15222 ;; Tracked objects:
 15223 ;;		On entry : 0/0
 15224 ;;		On exit  : 0/0
 15225 ;;		Unchanged: 0/0
 15226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15227 ;;      Params:         4       0       0       0       0       0       0       0       0
 15228 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15229 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15230 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15231 ;;Total ram usage:        7 bytes
 15232 ;; Hardware stack levels used:    1
 15233 ;; Hardware stack levels required when called:    4
 15234 ;; This function calls:
 15235 ;;		_fputc
 15236 ;; This function is called by:
 15237 ;;		_pad
 15238 ;; This function uses a non-reentrant model
 15239 ;;
 15240                           
 15241                           	psect	text57
 15242  005562                     __ptext57:
 15243                           	opt callstack 0
 15244  005562                     _fputs:
 15245                           	opt callstack 20
 15246  005562  0E00               	movlw	0
 15247  005564  6E15               	movwf	(fputs@i+1)^0,c
 15248  005566  0E00               	movlw	0
 15249  005568  6E14               	movwf	fputs@i^0,c
 15250  00556A  EFC2  F02A         	goto	l8149
 15251  00556E                     l8145:
 15252  00556E  C013  F006         	movff	fputs@c,fputc@c
 15253  005572  6A07               	clrf	(fputc@c+1)^0,c
 15254  005574  C011  F008         	movff	fputs@fp,fputc@fp
 15255  005578  C012  F009         	movff	fputs@fp+1,fputc@fp+1
 15256  00557C  ECAC  F023         	call	_fputc	;wreg free
 15257  005580  4A14               	infsnz	fputs@i^0,f,c
 15258  005582  2A15               	incf	(fputs@i+1)^0,f,c
 15259  005584                     l8149:
 15260  005584  5014               	movf	fputs@i^0,w,c
 15261  005586  240F               	addwf	fputs@s^0,w,c
 15262  005588  6ED9               	movwf	fsr2l,c
 15263  00558A  5015               	movf	(fputs@i+1)^0,w,c
 15264  00558C  2010               	addwfc	(fputs@s+1)^0,w,c
 15265  00558E  6EDA               	movwf	fsr2h,c
 15266  005590  50DF               	movf	indf2,w,c
 15267  005592  6E13               	movwf	fputs@c^0,c
 15268  005594  5013               	movf	fputs@c^0,w,c
 15269  005596  A4D8               	btfss	status,2,c
 15270  005598  EFD0  F02A         	goto	u8161
 15271  00559C  EFD2  F02A         	goto	u8160
 15272  0055A0                     u8161:
 15273  0055A0  EFB7  F02A         	goto	l8145
 15274  0055A4                     u8160:
 15275  0055A4  0012               	return		;funcret
 15276  0055A6                     __end_of_fputs:
 15277                           	opt callstack 0
 15278                           
 15279 ;; *************** function _fputc *****************
 15280 ;; Defined at:
 15281 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 15282 ;; Parameters:    Size  Location     Type
 15283 ;;  c               2    5[COMRAM] int 
 15284 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
 15285 ;;		 -> sprintf@f(6), 
 15286 ;; Auto vars:     Size  Location     Type
 15287 ;;		None
 15288 ;; Return value:  Size  Location     Type
 15289 ;;                  2    5[COMRAM] int 
 15290 ;; Registers used:
 15291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15292 ;; Tracked objects:
 15293 ;;		On entry : 0/0
 15294 ;;		On exit  : 0/0
 15295 ;;		Unchanged: 0/0
 15296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15297 ;;      Params:         4       0       0       0       0       0       0       0       0
 15298 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15299 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15300 ;;      Totals:         9       0       0       0       0       0       0       0       0
 15301 ;;Total ram usage:        9 bytes
 15302 ;; Hardware stack levels used:    1
 15303 ;; Hardware stack levels required when called:    3
 15304 ;; This function calls:
 15305 ;;		_putch
 15306 ;; This function is called by:
 15307 ;;		_pad
 15308 ;;		_vfpfcnvrt
 15309 ;;		_fputs
 15310 ;; This function uses a non-reentrant model
 15311 ;;
 15312                           
 15313                           	psect	text58
 15314  004758                     __ptext58:
 15315                           	opt callstack 0
 15316  004758                     _fputc:
 15317                           	opt callstack 23
 15318  004758  5008               	movf	fputc@fp^0,w,c
 15319  00475A  1009               	iorwf	(fputc@fp+1)^0,w,c
 15320  00475C  B4D8               	btfsc	status,2,c
 15321  00475E  EFB3  F023         	goto	u8121
 15322  004762  EFB5  F023         	goto	u8120
 15323  004766                     u8121:
 15324  004766  EFBE  F023         	goto	l8133
 15325  00476A                     u8120:
 15326  00476A  5008               	movf	fputc@fp^0,w,c
 15327  00476C  1009               	iorwf	(fputc@fp+1)^0,w,c
 15328  00476E  A4D8               	btfss	status,2,c
 15329  004770  EFBC  F023         	goto	u8131
 15330  004774  EFBE  F023         	goto	u8130
 15331  004778                     u8131:
 15332  004778  EFC3  F023         	goto	l8135
 15333  00477C                     u8130:
 15334  00477C                     l8133:
 15335  00477C  5006               	movf	fputc@c^0,w,c
 15336  00477E  EC34  F02C         	call	_putch
 15337  004782  EF10  F024         	goto	l1714
 15338  004786                     l8135:
 15339  004786  EE20 F004          	lfsr	2,4
 15340  00478A  5008               	movf	fputc@fp^0,w,c
 15341  00478C  26D9               	addwf	fsr2l,f,c
 15342  00478E  5009               	movf	(fputc@fp+1)^0,w,c
 15343  004790  22DA               	addwfc	fsr2h,f,c
 15344  004792  50DE               	movf	postinc2,w,c
 15345  004794  10DE               	iorwf	postinc2,w,c
 15346  004796  B4D8               	btfsc	status,2,c
 15347  004798  EFD0  F023         	goto	u8141
 15348  00479C  EFD2  F023         	goto	u8140
 15349  0047A0                     u8141:
 15350  0047A0  EFED  F023         	goto	l8139
 15351  0047A4                     u8140:
 15352  0047A4  EE20 F004          	lfsr	2,4
 15353  0047A8  5008               	movf	fputc@fp^0,w,c
 15354  0047AA  26D9               	addwf	fsr2l,f,c
 15355  0047AC  5009               	movf	(fputc@fp+1)^0,w,c
 15356  0047AE  22DA               	addwfc	fsr2h,f,c
 15357  0047B0  EE10 F002          	lfsr	1,2
 15358  0047B4  5008               	movf	fputc@fp^0,w,c
 15359  0047B6  26E1               	addwf	fsr1l,f,c
 15360  0047B8  5009               	movf	(fputc@fp+1)^0,w,c
 15361  0047BA  22E2               	addwfc	fsr1h,f,c
 15362  0047BC  50DE               	movf	postinc2,w,c
 15363  0047BE  5CE6               	subwf	postinc1,w,c
 15364  0047C0  50E6               	movf	postinc1,w,c
 15365  0047C2  0A80               	xorlw	128
 15366  0047C4  6E0E               	movwf	(??_fputc+4)^0,c
 15367  0047C6  50DE               	movf	postinc2,w,c
 15368  0047C8  0A80               	xorlw	128
 15369  0047CA  580E               	subwfb	(??_fputc+4)^0,w,c
 15370  0047CC  B0D8               	btfsc	status,0,c
 15371  0047CE  EFEB  F023         	goto	u8151
 15372  0047D2  EFED  F023         	goto	u8150
 15373  0047D6                     u8151:
 15374  0047D6  EF10  F024         	goto	l1714
 15375  0047DA                     u8150:
 15376  0047DA                     l8139:
 15377  0047DA  EE20 F002          	lfsr	2,2
 15378  0047DE  5008               	movf	fputc@fp^0,w,c
 15379  0047E0  26D9               	addwf	fsr2l,f,c
 15380  0047E2  5009               	movf	(fputc@fp+1)^0,w,c
 15381  0047E4  22DA               	addwfc	fsr2h,f,c
 15382  0047E6  CFDE F00A          	movff	postinc2,??_fputc
 15383  0047EA  CFDD F00B          	movff	postdec2,??_fputc+1
 15384  0047EE  C008  FFD9         	movff	fputc@fp,fsr2l
 15385  0047F2  C009  FFDA         	movff	fputc@fp+1,fsr2h
 15386  0047F6  CFDE F00C          	movff	postinc2,??_fputc+2
 15387  0047FA  CFDD F00D          	movff	postdec2,??_fputc+3
 15388  0047FE  500A               	movf	??_fputc^0,w,c
 15389  004800  240C               	addwf	(??_fputc+2)^0,w,c
 15390  004802  6ED9               	movwf	fsr2l,c
 15391  004804  500B               	movf	(??_fputc+1)^0,w,c
 15392  004806  200D               	addwfc	(??_fputc+3)^0,w,c
 15393  004808  6EDA               	movwf	fsr2h,c
 15394  00480A  C006  FFDF         	movff	fputc@c,indf2
 15395  00480E  EE20 F002          	lfsr	2,2
 15396  004812  5008               	movf	fputc@fp^0,w,c
 15397  004814  26D9               	addwf	fsr2l,f,c
 15398  004816  5009               	movf	(fputc@fp+1)^0,w,c
 15399  004818  22DA               	addwfc	fsr2h,f,c
 15400  00481A  2ADE               	incf	postinc2,f,c
 15401  00481C  0E00               	movlw	0
 15402  00481E  22DD               	addwfc	postdec2,f,c
 15403  004820                     l1714:
 15404  004820  0012               	return		;funcret
 15405  004822                     __end_of_fputc:
 15406                           	opt callstack 0
 15407                           
 15408 ;; *************** function _putch *****************
 15409 ;; Defined at:
 15410 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 15411 ;; Parameters:    Size  Location     Type
 15412 ;;  c               1    wreg     unsigned char 
 15413 ;; Auto vars:     Size  Location     Type
 15414 ;;  c               1    0[COMRAM] unsigned char 
 15415 ;; Return value:  Size  Location     Type
 15416 ;;                  1    wreg      void 
 15417 ;; Registers used:
 15418 ;;		wreg
 15419 ;; Tracked objects:
 15420 ;;		On entry : 0/0
 15421 ;;		On exit  : 0/0
 15422 ;;		Unchanged: 0/0
 15423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15424 ;;      Params:         0       0       0       0       0       0       0       0       0
 15425 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15426 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15427 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15428 ;;Total ram usage:        0 bytes
 15429 ;; Hardware stack levels used:    1
 15430 ;; Hardware stack levels required when called:    2
 15431 ;; This function calls:
 15432 ;;		Nothing
 15433 ;; This function is called by:
 15434 ;;		_fputc
 15435 ;; This function uses a non-reentrant model
 15436 ;;
 15437                           
 15438                           	psect	text59
 15439  005868                     __ptext59:
 15440                           	opt callstack 0
 15441  005868                     _putch:
 15442                           	opt callstack 23
 15443  005868  0012               	return		;funcret
 15444  00586A                     __end_of_putch:
 15445                           	opt callstack 0
 15446                           
 15447 ;; *************** function _atoi *****************
 15448 ;; Defined at:
 15449 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 15450 ;; Parameters:    Size  Location     Type
 15451 ;;  s               2   12[COMRAM] PTR const unsigned char 
 15452 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
 15453 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
 15454 ;;		 -> STR_3(34), 
 15455 ;; Auto vars:     Size  Location     Type
 15456 ;;  n               2   25[COMRAM] int 
 15457 ;;  neg             2   18[COMRAM] int 
 15458 ;; Return value:  Size  Location     Type
 15459 ;;                  2   12[COMRAM] int 
 15460 ;; Registers used:
 15461 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15462 ;; Tracked objects:
 15463 ;;		On entry : 0/0
 15464 ;;		On exit  : 0/0
 15465 ;;		Unchanged: 0/0
 15466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15467 ;;      Params:         2       0       0       0       0       0       0       0       0
 15468 ;;      Locals:         9       0       0       0       0       0       0       0       0
 15469 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15470 ;;      Totals:        15       0       0       0       0       0       0       0       0
 15471 ;;Total ram usage:       15 bytes
 15472 ;; Hardware stack levels used:    1
 15473 ;; Hardware stack levels required when called:    3
 15474 ;; This function calls:
 15475 ;;		___wmul
 15476 ;;		_isdigit
 15477 ;;		_isspace
 15478 ;; This function is called by:
 15479 ;;		_vfpfcnvrt
 15480 ;; This function uses a non-reentrant model
 15481 ;;
 15482                           
 15483                           	psect	text60
 15484  003780                     __ptext60:
 15485                           	opt callstack 0
 15486  003780                     _atoi:
 15487                           	opt callstack 23
 15488  003780  0E00               	movlw	0
 15489  003782  6E1B               	movwf	(atoi@n+1)^0,c
 15490  003784  0E00               	movlw	0
 15491  003786  6E1A               	movwf	atoi@n^0,c
 15492  003788  0E00               	movlw	0
 15493  00378A  6E14               	movwf	(atoi@neg+1)^0,c
 15494  00378C  0E00               	movlw	0
 15495  00378E  6E13               	movwf	atoi@neg^0,c
 15496  003790  EFCC  F01B         	goto	l9503
 15497  003794                     l9501:
 15498  003794  4A0D               	infsnz	atoi@s^0,f,c
 15499  003796  2A0E               	incf	(atoi@s+1)^0,f,c
 15500  003798                     l9503:
 15501  003798  0E01               	movlw	1
 15502  00379A  6E19               	movwf	_atoi$1428^0,c
 15503  00379C  C00D  FFF6         	movff	atoi@s,tblptrl
 15504  0037A0  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15505  0037A4                     	if	0	;tblptru may be non-zero
 15506  0037A4                     	endif
 15507  0037A4                     	if	0	;tblptru may be non-zero
 15508  0037A4                     	endif
 15509  0037A4  0008               	tblrd		*
 15510  0037A6  50F5               	movf	tablat,w,c
 15511  0037A8  0A20               	xorlw	32
 15512  0037AA  B4D8               	btfsc	status,2,c
 15513  0037AC  EFDA  F01B         	goto	u10621
 15514  0037B0  EFDC  F01B         	goto	u10620
 15515  0037B4                     u10621:
 15516  0037B4  EFF9  F01B         	goto	l9511
 15517  0037B8                     u10620:
 15518  0037B8  0EF7               	movlw	247
 15519  0037BA  6E0F               	movwf	??_atoi^0,c
 15520  0037BC  0EFF               	movlw	255
 15521  0037BE  6E10               	movwf	(??_atoi+1)^0,c
 15522  0037C0  C00D  FFF6         	movff	atoi@s,tblptrl
 15523  0037C4  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15524  0037C8                     	if	0	;tblptru may be non-zero
 15525  0037C8                     	endif
 15526  0037C8                     	if	0	;tblptru may be non-zero
 15527  0037C8                     	endif
 15528  0037C8  0008               	tblrd		*
 15529  0037CA  50F5               	movf	tablat,w,c
 15530  0037CC  6E11               	movwf	(??_atoi+2)^0,c
 15531  0037CE  6A12               	clrf	(??_atoi+3)^0,c
 15532  0037D0  500F               	movf	??_atoi^0,w,c
 15533  0037D2  2611               	addwf	(??_atoi+2)^0,f,c
 15534  0037D4  5010               	movf	(??_atoi+1)^0,w,c
 15535  0037D6  2212               	addwfc	(??_atoi+3)^0,f,c
 15536  0037D8  5012               	movf	(??_atoi+3)^0,w,c
 15537  0037DA  E109               	bnz	u10630
 15538  0037DC  0E05               	movlw	5
 15539  0037DE  5C11               	subwf	(??_atoi+2)^0,w,c
 15540  0037E0  A0D8               	btfss	status,0,c
 15541  0037E2  EFF5  F01B         	goto	u10631
 15542  0037E6  EFF7  F01B         	goto	u10630
 15543  0037EA                     u10631:
 15544  0037EA  EFF9  F01B         	goto	l9511
 15545  0037EE                     u10630:
 15546  0037EE  0E00               	movlw	0
 15547  0037F0  6E19               	movwf	_atoi$1428^0,c
 15548  0037F2                     l9511:
 15549  0037F2  C019  F015         	movff	_atoi$1428,_atoi$1427
 15550  0037F6  6A16               	clrf	(_atoi$1427+1)^0,c
 15551  0037F8  5015               	movf	_atoi$1427^0,w,c
 15552  0037FA  1016               	iorwf	(_atoi$1427+1)^0,w,c
 15553  0037FC  A4D8               	btfss	status,2,c
 15554  0037FE  EF03  F01C         	goto	u10641
 15555  003802  EF05  F01C         	goto	u10640
 15556  003806                     u10641:
 15557  003806  EFCA  F01B         	goto	l9501
 15558  00380A                     u10640:
 15559  00380A  EF0F  F01C         	goto	l9521
 15560  00380E                     l9517:
 15561  00380E  0E00               	movlw	0
 15562  003810  6E14               	movwf	(atoi@neg+1)^0,c
 15563  003812  0E01               	movlw	1
 15564  003814  6E13               	movwf	atoi@neg^0,c
 15565  003816                     l9519:
 15566  003816  4A0D               	infsnz	atoi@s^0,f,c
 15567  003818  2A0E               	incf	(atoi@s+1)^0,f,c
 15568  00381A  EF44  F01C         	goto	l9527
 15569  00381E                     l9521:
 15570  00381E  C00D  FFF6         	movff	atoi@s,tblptrl
 15571  003822  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15572  003826                     	if	0	;tblptru may be non-zero
 15573  003826                     	endif
 15574  003826                     	if	0	;tblptru may be non-zero
 15575  003826                     	endif
 15576  003826  0008               	tblrd		*
 15577  003828  50F5               	movf	tablat,w,c
 15578  00382A  6E0F               	movwf	??_atoi^0,c
 15579  00382C  6A10               	clrf	(??_atoi+1)^0,c
 15580                           
 15581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15582                           ; Switch size 1, requested type "simple"
 15583                           ; Number of cases is 1, Range of values is 0 to 0
 15584                           ; switch strategies available:
 15585                           ; Name         Instructions Cycles
 15586                           ; simple_byte            4     3 (average)
 15587                           ;	Chosen strategy is simple_byte
 15588  00382E  5010               	movf	(??_atoi+1)^0,w,c
 15589  003830  0A00               	xorlw	0	; case 0
 15590  003832  B4D8               	btfsc	status,2,c
 15591  003834  EF1E  F01C         	goto	l11297
 15592  003838  EF44  F01C         	goto	l9527
 15593  00383C                     l11297:
 15594                           
 15595                           ; Switch size 1, requested type "simple"
 15596                           ; Number of cases is 2, Range of values is 43 to 45
 15597                           ; switch strategies available:
 15598                           ; Name         Instructions Cycles
 15599                           ; simple_byte            7     4 (average)
 15600                           ;	Chosen strategy is simple_byte
 15601  00383C  500F               	movf	??_atoi^0,w,c
 15602  00383E  0A2B               	xorlw	43	; case 43
 15603  003840  B4D8               	btfsc	status,2,c
 15604  003842  EF0B  F01C         	goto	l9519
 15605  003846  0A06               	xorlw	6	; case 45
 15606  003848  B4D8               	btfsc	status,2,c
 15607  00384A  EF07  F01C         	goto	l9517
 15608  00384E  EF44  F01C         	goto	l9527
 15609  003852                     l9523:
 15610  003852  C01A  F006         	movff	atoi@n,___wmul@multiplier
 15611  003856  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 15612  00385A  0E00               	movlw	0
 15613  00385C  6E09               	movwf	(___wmul@multiplicand+1)^0,c
 15614  00385E  0E0A               	movlw	10
 15615  003860  6E08               	movwf	___wmul@multiplicand^0,c
 15616  003862  ECBF  F02B         	call	___wmul	;wreg free
 15617  003866  C00D  FFF6         	movff	atoi@s,tblptrl
 15618  00386A  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15619  00386E                     	if	0	;tblptru may be non-zero
 15620  00386E                     	endif
 15621  00386E                     	if	0	;tblptru may be non-zero
 15622  00386E                     	endif
 15623  00386E  0008               	tblrd		*
 15624  003870  50F5               	movf	tablat,w,c
 15625  003872  5E06               	subwf	?___wmul^0,f,c
 15626  003874  0E00               	movlw	0
 15627  003876  5A07               	subwfb	(?___wmul+1)^0,f,c
 15628  003878  0E30               	movlw	48
 15629  00387A  2406               	addwf	?___wmul^0,w,c
 15630  00387C  6E1A               	movwf	atoi@n^0,c
 15631  00387E  0E00               	movlw	0
 15632  003880  2007               	addwfc	(?___wmul+1)^0,w,c
 15633  003882  6E1B               	movwf	(atoi@n+1)^0,c
 15634  003884  EF0B  F01C         	goto	l9519
 15635  003888                     l9527:
 15636  003888  0ED0               	movlw	208
 15637  00388A  6E0F               	movwf	??_atoi^0,c
 15638  00388C  0EFF               	movlw	255
 15639  00388E  6E10               	movwf	(??_atoi+1)^0,c
 15640  003890  C00D  FFF6         	movff	atoi@s,tblptrl
 15641  003894  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15642  003898                     	if	0	;tblptru may be non-zero
 15643  003898                     	endif
 15644  003898                     	if	0	;tblptru may be non-zero
 15645  003898                     	endif
 15646  003898  0008               	tblrd		*
 15647  00389A  50F5               	movf	tablat,w,c
 15648  00389C  6E11               	movwf	(??_atoi+2)^0,c
 15649  00389E  6A12               	clrf	(??_atoi+3)^0,c
 15650  0038A0  500F               	movf	??_atoi^0,w,c
 15651  0038A2  2611               	addwf	(??_atoi+2)^0,f,c
 15652  0038A4  5010               	movf	(??_atoi+1)^0,w,c
 15653  0038A6  2212               	addwfc	(??_atoi+3)^0,f,c
 15654  0038A8  5012               	movf	(??_atoi+3)^0,w,c
 15655  0038AA  E10A               	bnz	u10650
 15656  0038AC  0E0A               	movlw	10
 15657  0038AE  5C11               	subwf	(??_atoi+2)^0,w,c
 15658  0038B0  A0D8               	btfss	status,0,c
 15659  0038B2  EF5D  F01C         	goto	u10651
 15660  0038B6  EF60  F01C         	goto	u10650
 15661  0038BA                     u10651:
 15662  0038BA  0E01               	movlw	1
 15663  0038BC  EF61  F01C         	goto	u10660
 15664  0038C0                     u10650:
 15665  0038C0  0E00               	movlw	0
 15666  0038C2                     u10660:
 15667  0038C2  6E17               	movwf	_atoi$1429^0,c
 15668  0038C4  6A18               	clrf	(_atoi$1429+1)^0,c
 15669  0038C6  5017               	movf	_atoi$1429^0,w,c
 15670  0038C8  1018               	iorwf	(_atoi$1429+1)^0,w,c
 15671  0038CA  A4D8               	btfss	status,2,c
 15672  0038CC  EF6A  F01C         	goto	u10671
 15673  0038D0  EF6C  F01C         	goto	u10670
 15674  0038D4                     u10671:
 15675  0038D4  EF29  F01C         	goto	l9523
 15676  0038D8                     u10670:
 15677  0038D8  5013               	movf	atoi@neg^0,w,c
 15678  0038DA  1014               	iorwf	(atoi@neg+1)^0,w,c
 15679  0038DC  A4D8               	btfss	status,2,c
 15680  0038DE  EF73  F01C         	goto	u10681
 15681  0038E2  EF75  F01C         	goto	u10680
 15682  0038E6                     u10681:
 15683  0038E6  EF83  F01C         	goto	l1666
 15684  0038EA                     u10680:
 15685  0038EA  C01A  F00F         	movff	atoi@n,??_atoi
 15686  0038EE  C01B  F010         	movff	atoi@n+1,??_atoi+1
 15687  0038F2  1E0F               	comf	??_atoi^0,f,c
 15688  0038F4  1E10               	comf	(??_atoi+1)^0,f,c
 15689  0038F6  4A0F               	infsnz	??_atoi^0,f,c
 15690  0038F8  2A10               	incf	(??_atoi+1)^0,f,c
 15691  0038FA  C00F  F00D         	movff	??_atoi,?_atoi
 15692  0038FE  C010  F00E         	movff	??_atoi+1,?_atoi+1
 15693  003902  EF87  F01C         	goto	l1669
 15694  003906                     l1666:
 15695  003906  C01A  F00D         	movff	atoi@n,?_atoi
 15696  00390A  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 15697  00390E                     l1669:
 15698  00390E  0012               	return		;funcret
 15699  003910                     __end_of_atoi:
 15700                           	opt callstack 0
 15701                           
 15702 ;; *************** function _isspace *****************
 15703 ;; Defined at:
 15704 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 15705 ;; Parameters:    Size  Location     Type
 15706 ;;  c               2    5[COMRAM] int 
 15707 ;; Auto vars:     Size  Location     Type
 15708 ;;		None
 15709 ;; Return value:  Size  Location     Type
 15710 ;;                  2    5[COMRAM] int 
 15711 ;; Registers used:
 15712 ;;		wreg, status,2, status,0
 15713 ;; Tracked objects:
 15714 ;;		On entry : 0/0
 15715 ;;		On exit  : 0/0
 15716 ;;		Unchanged: 0/0
 15717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15718 ;;      Params:         2       0       0       0       0       0       0       0       0
 15719 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15720 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15721 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15722 ;;Total ram usage:        7 bytes
 15723 ;; Hardware stack levels used:    1
 15724 ;; Hardware stack levels required when called:    2
 15725 ;; This function calls:
 15726 ;;		Nothing
 15727 ;; This function is called by:
 15728 ;;		_atoi
 15729 ;; This function uses a non-reentrant model
 15730 ;;
 15731                           
 15732                           	psect	text61
 15733  005308                     __ptext61:
 15734                           	opt callstack 0
 15735  005308                     _isspace:
 15736                           	opt callstack 23
 15737  005308  0E01               	movlw	1
 15738  00530A  6E0C               	movwf	_isspace$1458^0,c
 15739  00530C  0E20               	movlw	32
 15740  00530E  1806               	xorwf	isspace@c^0,w,c
 15741  005310  1007               	iorwf	(isspace@c+1)^0,w,c
 15742  005312  B4D8               	btfsc	status,2,c
 15743  005314  EF8E  F029         	goto	u9891
 15744  005318  EF90  F029         	goto	u9890
 15745  00531C                     u9891:
 15746  00531C  EFA9  F029         	goto	l9103
 15747  005320                     u9890:
 15748  005320  0EF7               	movlw	247
 15749  005322  6E08               	movwf	??_isspace^0,c
 15750  005324  0EFF               	movlw	255
 15751  005326  6E09               	movwf	(??_isspace+1)^0,c
 15752  005328  C006  F00A         	movff	isspace@c,??_isspace+2
 15753  00532C  C007  F00B         	movff	isspace@c+1,??_isspace+3
 15754  005330  5008               	movf	??_isspace^0,w,c
 15755  005332  260A               	addwf	(??_isspace+2)^0,f,c
 15756  005334  5009               	movf	(??_isspace+1)^0,w,c
 15757  005336  220B               	addwfc	(??_isspace+3)^0,f,c
 15758  005338  500B               	movf	(??_isspace+3)^0,w,c
 15759  00533A  E109               	bnz	u9900
 15760  00533C  0E05               	movlw	5
 15761  00533E  5C0A               	subwf	(??_isspace+2)^0,w,c
 15762  005340  A0D8               	btfss	status,0,c
 15763  005342  EFA5  F029         	goto	u9901
 15764  005346  EFA7  F029         	goto	u9900
 15765  00534A                     u9901:
 15766  00534A  EFA9  F029         	goto	l9103
 15767  00534E                     u9900:
 15768  00534E  0E00               	movlw	0
 15769  005350  6E0C               	movwf	_isspace$1458^0,c
 15770  005352                     l9103:
 15771  005352  C00C  F006         	movff	_isspace$1458,?_isspace
 15772  005356  6A07               	clrf	(?_isspace+1)^0,c
 15773  005358  0012               	return		;funcret
 15774  00535A                     __end_of_isspace:
 15775                           	opt callstack 0
 15776                           
 15777 ;; *************** function _isdigit *****************
 15778 ;; Defined at:
 15779 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15780 ;; Parameters:    Size  Location     Type
 15781 ;;  c               2    5[COMRAM] int 
 15782 ;; Auto vars:     Size  Location     Type
 15783 ;;		None
 15784 ;; Return value:  Size  Location     Type
 15785 ;;                  2    5[COMRAM] int 
 15786 ;; Registers used:
 15787 ;;		wreg, status,2, status,0
 15788 ;; Tracked objects:
 15789 ;;		On entry : 0/0
 15790 ;;		On exit  : 0/0
 15791 ;;		Unchanged: 0/0
 15792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15793 ;;      Params:         2       0       0       0       0       0       0       0       0
 15794 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15795 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15796 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15797 ;;Total ram usage:        6 bytes
 15798 ;; Hardware stack levels used:    1
 15799 ;; Hardware stack levels required when called:    2
 15800 ;; This function calls:
 15801 ;;		Nothing
 15802 ;; This function is called by:
 15803 ;;		_vfpfcnvrt
 15804 ;;		_atoi
 15805 ;; This function uses a non-reentrant model
 15806 ;;
 15807                           
 15808                           	psect	text62
 15809  005696                     __ptext62:
 15810                           	opt callstack 0
 15811  005696                     _isdigit:
 15812                           	opt callstack 24
 15813  005696  0ED0               	movlw	208
 15814  005698  6E08               	movwf	??_isdigit^0,c
 15815  00569A  0EFF               	movlw	255
 15816  00569C  6E09               	movwf	(??_isdigit+1)^0,c
 15817  00569E  C006  F00A         	movff	isdigit@c,??_isdigit+2
 15818  0056A2  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 15819  0056A6  5008               	movf	??_isdigit^0,w,c
 15820  0056A8  260A               	addwf	(??_isdigit+2)^0,f,c
 15821  0056AA  5009               	movf	(??_isdigit+1)^0,w,c
 15822  0056AC  220B               	addwfc	(??_isdigit+3)^0,f,c
 15823  0056AE  500B               	movf	(??_isdigit+3)^0,w,c
 15824  0056B0  E10A               	bnz	u8940
 15825  0056B2  0E0A               	movlw	10
 15826  0056B4  5C0A               	subwf	(??_isdigit+2)^0,w,c
 15827  0056B6  A0D8               	btfss	status,0,c
 15828  0056B8  EF60  F02B         	goto	u8941
 15829  0056BC  EF63  F02B         	goto	u8940
 15830  0056C0                     u8941:
 15831  0056C0  0E01               	movlw	1
 15832  0056C2  EF64  F02B         	goto	u8950
 15833  0056C6                     u8940:
 15834  0056C6  0E00               	movlw	0
 15835  0056C8                     u8950:
 15836  0056C8  6E06               	movwf	?_isdigit^0,c
 15837  0056CA  6A07               	clrf	(?_isdigit+1)^0,c
 15838  0056CC  0012               	return		;funcret
 15839  0056CE                     __end_of_isdigit:
 15840                           	opt callstack 0
 15841                           
 15842 ;; *************** function ___wmul *****************
 15843 ;; Defined at:
 15844 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15845 ;; Parameters:    Size  Location     Type
 15846 ;;  multiplier      2    5[COMRAM] unsigned int 
 15847 ;;  multiplicand    2    7[COMRAM] unsigned int 
 15848 ;; Auto vars:     Size  Location     Type
 15849 ;;  product         2    9[COMRAM] unsigned int 
 15850 ;; Return value:  Size  Location     Type
 15851 ;;                  2    5[COMRAM] unsigned int 
 15852 ;; Registers used:
 15853 ;;		wreg, status,2, status,0, prodl, prodh
 15854 ;; Tracked objects:
 15855 ;;		On entry : 0/0
 15856 ;;		On exit  : 0/0
 15857 ;;		Unchanged: 0/0
 15858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15859 ;;      Params:         4       0       0       0       0       0       0       0       0
 15860 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15861 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15862 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15863 ;;Total ram usage:        6 bytes
 15864 ;; Hardware stack levels used:    1
 15865 ;; Hardware stack levels required when called:    2
 15866 ;; This function calls:
 15867 ;;		Nothing
 15868 ;; This function is called by:
 15869 ;;		_atoi
 15870 ;; This function uses a non-reentrant model
 15871 ;;
 15872                           
 15873                           	psect	text63
 15874  00577E                     __ptext63:
 15875                           	opt callstack 0
 15876  00577E                     ___wmul:
 15877                           	opt callstack 23
 15878  00577E  5006               	movf	___wmul@multiplier^0,w,c
 15879  005780  0208               	mulwf	___wmul@multiplicand^0,c
 15880  005782  CFF3 F00A          	movff	prodl,___wmul@product
 15881  005786  CFF4 F00B          	movff	prodh,___wmul@product+1
 15882  00578A  5006               	movf	___wmul@multiplier^0,w,c
 15883  00578C  0209               	mulwf	(___wmul@multiplicand+1)^0,c
 15884  00578E  50F3               	movf	243,w,c
 15885  005790  260B               	addwf	(___wmul@product+1)^0,f,c
 15886  005792  5007               	movf	(___wmul@multiplier+1)^0,w,c
 15887  005794  0208               	mulwf	___wmul@multiplicand^0,c
 15888  005796  50F3               	movf	243,w,c
 15889  005798  260B               	addwf	(___wmul@product+1)^0,f,c
 15890  00579A  C00A  F006         	movff	___wmul@product,?___wmul
 15891  00579E  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 15892  0057A2  0012               	return		;funcret
 15893  0057A4                     __end_of___wmul:
 15894                           	opt callstack 0
 15895                           
 15896 ;; *************** function _seLlegoAlDestino *****************
 15897 ;; Defined at:
 15898 ;;		line 802 in file "main.c"
 15899 ;; Parameters:    Size  Location     Type
 15900 ;;		None
 15901 ;; Auto vars:     Size  Location     Type
 15902 ;;  llegoDestino    1   10[COMRAM] unsigned char 
 15903 ;; Return value:  Size  Location     Type
 15904 ;;                  1    wreg      unsigned char 
 15905 ;; Registers used:
 15906 ;;		wreg, status,2, status,0, cstack
 15907 ;; Tracked objects:
 15908 ;;		On entry : 0/0
 15909 ;;		On exit  : 0/0
 15910 ;;		Unchanged: 0/0
 15911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15912 ;;      Params:         0       0       0       0       0       0       0       0       0
 15913 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15914 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15915 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15916 ;;Total ram usage:        1 bytes
 15917 ;; Hardware stack levels used:    1
 15918 ;; Hardware stack levels required when called:    3
 15919 ;; This function calls:
 15920 ;;		_dameLecturaAdc
 15921 ;; This function is called by:
 15922 ;;		_decidirDireccion
 15923 ;; This function uses a non-reentrant model
 15924 ;;
 15925                           
 15926                           	psect	text64
 15927  005704                     __ptext64:
 15928                           	opt callstack 0
 15929  005704                     _seLlegoAlDestino:
 15930                           	opt callstack 25
 15931  005704                     
 15932                           ;main.c: 804:     T_BOOL llegoDestino = 0;
 15933  005704  0E00               	movlw	0
 15934  005706  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15935  005708                     
 15936                           ;main.c: 807:     if (dameLecturaAdc(0) < 20)
 15937  005708  0E00               	movlw	0
 15938  00570A  EC8E  F02A         	call	_dameLecturaAdc
 15939  00570E  BE07               	btfsc	(?_dameLecturaAdc+1)^0,7,c
 15940  005710  EF95  F02B         	goto	u11330
 15941  005714  5007               	movf	(?_dameLecturaAdc+1)^0,w,c
 15942  005716  E107               	bnz	u11331
 15943  005718  0E14               	movlw	20
 15944  00571A  5C06               	subwf	?_dameLecturaAdc^0,w,c
 15945  00571C  B0D8               	btfsc	status,0,c
 15946  00571E  EF93  F02B         	goto	u11331
 15947  005722  EF95  F02B         	goto	u11330
 15948  005726                     u11331:
 15949  005726  EF97  F02B         	goto	l515
 15950  00572A                     u11330:
 15951  00572A                     
 15952                           ;main.c: 808:         llegoDestino = 1;
 15953  00572A  0E01               	movlw	1
 15954  00572C  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15955  00572E                     l515:
 15956                           
 15957                           ;main.c: 810:     return llegoDestino;
 15958  00572E  500B               	movf	seLlegoAlDestino@llegoDestino^0,w,c
 15959  005730  0012               	return		;funcret
 15960  005732                     __end_of_seLlegoAlDestino:
 15961                           	opt callstack 0
 15962                           
 15963 ;; *************** function _dameLecturaAdc *****************
 15964 ;; Defined at:
 15965 ;;		line 12 in file "./adc.h"
 15966 ;; Parameters:    Size  Location     Type
 15967 ;;  canalLeer       1    wreg     unsigned char 
 15968 ;; Auto vars:     Size  Location     Type
 15969 ;;  canalLeer       1    9[COMRAM] unsigned char 
 15970 ;; Return value:  Size  Location     Type
 15971 ;;                  2    5[COMRAM] short 
 15972 ;; Registers used:
 15973 ;;		wreg, status,2, status,0
 15974 ;; Tracked objects:
 15975 ;;		On entry : 0/0
 15976 ;;		On exit  : 0/0
 15977 ;;		Unchanged: 0/0
 15978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15979 ;;      Params:         2       0       0       0       0       0       0       0       0
 15980 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15981 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15982 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15983 ;;Total ram usage:        5 bytes
 15984 ;; Hardware stack levels used:    1
 15985 ;; Hardware stack levels required when called:    2
 15986 ;; This function calls:
 15987 ;;		Nothing
 15988 ;; This function is called by:
 15989 ;;		_seLlegoAlDestino
 15990 ;;		_probarSensores
 15991 ;; This function uses a non-reentrant model
 15992 ;;
 15993                           
 15994                           	psect	text65
 15995  00551C                     __ptext65:
 15996                           	opt callstack 0
 15997  00551C                     _dameLecturaAdc:
 15998                           	opt callstack 25
 15999                           
 16000                           ;incstack = 0
 16001                           ;dameLecturaAdc@canalLeer stored from wreg
 16002  00551C  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
 16003  00551E                     
 16004                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 16005  00551E  0E06               	movlw	6
 16006  005520                     u12317:
 16007  005520  2EE8               	decfsz	wreg,f,c
 16008  005522  D7FE               	bra	u12317
 16009  005524  D000               	nop2	
 16010  005526                     
 16011                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
 16012  005526  80C2               	bsf	194,0,c	;volatile
 16013  005528                     
 16014                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
 16015  005528  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
 16016  00552C  4608               	rlncf	??_dameLecturaAdc^0,f,c
 16017  00552E  4608               	rlncf	??_dameLecturaAdc^0,f,c
 16018  005530  50C2               	movf	194,w,c	;volatile
 16019  005532  1808               	xorwf	??_dameLecturaAdc^0,w,c
 16020  005534  0BC3               	andlw	-61
 16021  005536  1808               	xorwf	??_dameLecturaAdc^0,w,c
 16022  005538  6EC2               	movwf	194,c	;volatile
 16023  00553A                     
 16024                           ;./adc.h: 18:     ADCON0bits.GO = 1;
 16025  00553A  82C2               	bsf	194,1,c	;volatile
 16026  00553C                     
 16027                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
 16028  00553C  82C2               	bsf	194,1,c	;volatile
 16029  00553E                     l233:
 16030  00553E  B2C2               	btfsc	194,1,c	;volatile
 16031  005540  EFA4  F02A         	goto	u10951
 16032  005544  EFA6  F02A         	goto	u10950
 16033  005548                     u10951:
 16034  005548  EF9F  F02A         	goto	l233
 16035  00554C                     u10950:
 16036  00554C                     
 16037                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
 16038  00554C  90C2               	bcf	194,0,c	;volatile
 16039  00554E                     
 16040                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
 16041  00554E  50C4               	movf	196,w,c	;volatile
 16042  005550  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
 16043  005552  6A08               	clrf	??_dameLecturaAdc^0,c
 16044  005554  50C3               	movf	195,w,c	;volatile
 16045  005556  2408               	addwf	??_dameLecturaAdc^0,w,c
 16046  005558  6E06               	movwf	?_dameLecturaAdc^0,c
 16047  00555A  0E00               	movlw	0
 16048  00555C  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
 16049  00555E  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
 16050  005560  0012               	return		;funcret
 16051  005562                     __end_of_dameLecturaAdc:
 16052                           	opt callstack 0
 16053                           
 16054 ;; *************** function _mostrarDireccionElegida *****************
 16055 ;; Defined at:
 16056 ;;		line 814 in file "main.c"
 16057 ;; Parameters:    Size  Location     Type
 16058 ;;  direccionEle    1    wreg     unsigned char 
 16059 ;; Auto vars:     Size  Location     Type
 16060 ;;  direccionEle    1   10[COMRAM] unsigned char 
 16061 ;; Return value:  Size  Location     Type
 16062 ;;                  1    wreg      void 
 16063 ;; Registers used:
 16064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16065 ;; Tracked objects:
 16066 ;;		On entry : 0/0
 16067 ;;		On exit  : 0/0
 16068 ;;		Unchanged: 0/0
 16069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16070 ;;      Params:         0       0       0       0       0       0       0       0       0
 16071 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16072 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16073 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16074 ;;Total ram usage:        3 bytes
 16075 ;; Hardware stack levels used:    1
 16076 ;; Hardware stack levels required when called:    4
 16077 ;; This function calls:
 16078 ;;		_UART_printf
 16079 ;; This function is called by:
 16080 ;;		_decidirDireccion
 16081 ;; This function uses a non-reentrant model
 16082 ;;
 16083                           
 16084                           	psect	text66
 16085  004D8E                     __ptext66:
 16086                           	opt callstack 0
 16087  004D8E                     _mostrarDireccionElegida:
 16088                           	opt callstack 24
 16089                           
 16090                           ;incstack = 0
 16091                           ;mostrarDireccionElegida@direccionElegida stored from wreg
 16092  004D8E  6E0B               	movwf	mostrarDireccionElegida@direccionElegida^0,c
 16093  004D90                     
 16094                           ;main.c: 816:     switch (direccionElegida) {
 16095  004D90  EFEA  F026         	goto	l10041
 16096  004D94                     l10031:
 16097                           
 16098                           ;main.c: 818:             UART_printf("\rDireccion Elegida: ENFRENTE\n\n\r");
 16099  004D94  0EEA               	movlw	low STR_15
 16100  004D96  6E07               	movwf	UART_printf@cadena^0,c
 16101  004D98  0E7E               	movlw	high STR_15
 16102  004D9A  6E08               	movwf	(UART_printf@cadena+1)^0,c
 16103  004D9C  EC51  F028         	call	_UART_printf	;wreg free
 16104                           
 16105                           ;main.c: 819:             break;
 16106  004DA0  EF07  F027         	goto	l526
 16107  004DA4                     l10033:
 16108                           
 16109                           ;main.c: 822:             UART_printf("\rDireccion Elegida: IZQUIERDA\n\n\r");
 16110  004DA4  0EA9               	movlw	low STR_16
 16111  004DA6  6E07               	movwf	UART_printf@cadena^0,c
 16112  004DA8  0E7E               	movlw	high STR_16
 16113  004DAA  6E08               	movwf	(UART_printf@cadena+1)^0,c
 16114  004DAC  EC51  F028         	call	_UART_printf	;wreg free
 16115                           
 16116                           ;main.c: 823:             break;
 16117  004DB0  EF07  F027         	goto	l526
 16118  004DB4                     l10035:
 16119                           
 16120                           ;main.c: 826:             UART_printf("\rDireccion Elegida: DERECHA\n\n\r");
 16121  004DB4  0E2A               	movlw	low STR_17
 16122  004DB6  6E07               	movwf	UART_printf@cadena^0,c
 16123  004DB8  0E7F               	movlw	high STR_17
 16124  004DBA  6E08               	movwf	(UART_printf@cadena+1)^0,c
 16125  004DBC  EC51  F028         	call	_UART_printf	;wreg free
 16126                           
 16127                           ;main.c: 827:             break;
 16128  004DC0  EF07  F027         	goto	l526
 16129  004DC4                     l10037:
 16130                           
 16131                           ;main.c: 830:             UART_printf("\rDireccion Elegida: CALLEJON\n\n\r");
 16132  004DC4  0E0A               	movlw	low STR_18
 16133  004DC6  6E07               	movwf	UART_printf@cadena^0,c
 16134  004DC8  0E7F               	movlw	high STR_18
 16135  004DCA  6E08               	movwf	(UART_printf@cadena+1)^0,c
 16136  004DCC  EC51  F028         	call	_UART_printf	;wreg free
 16137                           
 16138                           ;main.c: 831:             break;
 16139  004DD0  EF07  F027         	goto	l526
 16140  004DD4                     l10041:
 16141  004DD4  500B               	movf	mostrarDireccionElegida@direccionElegida^0,w,c
 16142  004DD6  6E09               	movwf	??_mostrarDireccionElegida^0,c
 16143  004DD8  6A0A               	clrf	(??_mostrarDireccionElegida+1)^0,c
 16144                           
 16145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16146                           ; Switch size 1, requested type "simple"
 16147                           ; Number of cases is 1, Range of values is 0 to 0
 16148                           ; switch strategies available:
 16149                           ; Name         Instructions Cycles
 16150                           ; simple_byte            4     3 (average)
 16151                           ;	Chosen strategy is simple_byte
 16152  004DDA  500A               	movf	(??_mostrarDireccionElegida+1)^0,w,c
 16153  004DDC  0A00               	xorlw	0	; case 0
 16154  004DDE  B4D8               	btfsc	status,2,c
 16155  004DE0  EFF4  F026         	goto	l11299
 16156  004DE4  EF07  F027         	goto	l526
 16157  004DE8                     l11299:
 16158                           
 16159                           ; Switch size 1, requested type "simple"
 16160                           ; Number of cases is 4, Range of values is 0 to 3
 16161                           ; switch strategies available:
 16162                           ; Name         Instructions Cycles
 16163                           ; simple_byte           13     7 (average)
 16164                           ;	Chosen strategy is simple_byte
 16165  004DE8  5009               	movf	??_mostrarDireccionElegida^0,w,c
 16166  004DEA  0A00               	xorlw	0	; case 0
 16167  004DEC  B4D8               	btfsc	status,2,c
 16168  004DEE  EFE2  F026         	goto	l10037
 16169  004DF2  0A01               	xorlw	1	; case 1
 16170  004DF4  B4D8               	btfsc	status,2,c
 16171  004DF6  EFCA  F026         	goto	l10031
 16172  004DFA  0A03               	xorlw	3	; case 2
 16173  004DFC  B4D8               	btfsc	status,2,c
 16174  004DFE  EFD2  F026         	goto	l10033
 16175  004E02  0A01               	xorlw	1	; case 3
 16176  004E04  B4D8               	btfsc	status,2,c
 16177  004E06  EFDA  F026         	goto	l10035
 16178  004E0A  EF07  F027         	goto	l526
 16179  004E0E                     l526:
 16180  004E0E  0012               	return		;funcret
 16181  004E10                     __end_of_mostrarDireccionElegida:
 16182                           	opt callstack 0
 16183                           
 16184 ;; *************** function _UART_printf *****************
 16185 ;; Defined at:
 16186 ;;		line 47 in file "./UART.h"
 16187 ;; Parameters:    Size  Location     Type
 16188 ;;  cadena          2    6[COMRAM] PTR unsigned char 
 16189 ;;		 -> STR_18(32), STR_17(31), STR_16(33), STR_15(32), 
 16190 ;;		 -> STR_14(23), STR_13(34), STR_12(56), STR_10(6), 
 16191 ;;		 -> STR_9(9), STR_8(11), STR_7(10), buffer(50), 
 16192 ;;		 -> STR_2(25), STR_1(24), 
 16193 ;; Auto vars:     Size  Location     Type
 16194 ;;		None
 16195 ;; Return value:  Size  Location     Type
 16196 ;;                  1    wreg      void 
 16197 ;; Registers used:
 16198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16199 ;; Tracked objects:
 16200 ;;		On entry : 0/0
 16201 ;;		On exit  : 0/0
 16202 ;;		Unchanged: 0/0
 16203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16204 ;;      Params:         2       0       0       0       0       0       0       0       0
 16205 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16206 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16207 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16208 ;;Total ram usage:        2 bytes
 16209 ;; Hardware stack levels used:    1
 16210 ;; Hardware stack levels required when called:    3
 16211 ;; This function calls:
 16212 ;;		_UART_write
 16213 ;; This function is called by:
 16214 ;;		_visualizarPasosRealizados
 16215 ;;		_comportamientoBasico
 16216 ;;		_mostrarDireccionElegida
 16217 ;;		_decidirDireccion
 16218 ;;		_probarMapeoDireccionCruces
 16219 ;;		_probarSensores
 16220 ;;		_probarUltrasonico
 16221 ;; This function uses a non-reentrant model
 16222 ;;
 16223                           
 16224                           	psect	text67
 16225  0050A2                     __ptext67:
 16226                           	opt callstack 0
 16227  0050A2                     _UART_printf:
 16228                           	opt callstack 26
 16229  0050A2                     
 16230                           ;./UART.h: 48:     while (*cadena) {
 16231  0050A2  EF67  F028         	goto	l9695
 16232  0050A6                     l9691:
 16233                           
 16234                           ;./UART.h: 49:         UART_write(*cadena++);
 16235  0050A6  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 16236  0050AA  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 16237  0050AE  6AF8               	clrf	tblptru,c
 16238  0050B0  0E07               	movlw	(high __ramtop+-1)
 16239  0050B2  64F7               	cpfsgt	tblptrh,c
 16240  0050B4  D003               	bra	u10927
 16241  0050B6  0008               	tblrd		*
 16242  0050B8  50F5               	movf	tablat,w,c
 16243  0050BA  D005               	bra	u10920
 16244  0050BC                     u10927:
 16245  0050BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 16246  0050C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 16247  0050C4  50EF               	movf	indf0,w,c
 16248  0050C6                     u10920:
 16249  0050C6  EC21  F02C         	call	_UART_write
 16250  0050CA  4A07               	infsnz	UART_printf@cadena^0,f,c
 16251  0050CC  2A08               	incf	(UART_printf@cadena+1)^0,f,c
 16252  0050CE                     l9695:
 16253                           
 16254                           ;./UART.h: 48:     while (*cadena) {
 16255  0050CE  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 16256  0050D2  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 16257  0050D6  6AF8               	clrf	tblptru,c
 16258  0050D8  0E07               	movlw	(high __ramtop+-1)
 16259  0050DA  64F7               	cpfsgt	tblptrh,c
 16260  0050DC  D003               	bra	u10937
 16261  0050DE  0008               	tblrd		*
 16262  0050E0  50F5               	movf	tablat,w,c
 16263  0050E2  D005               	bra	u10930
 16264  0050E4                     u10937:
 16265  0050E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 16266  0050E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 16267  0050EC  50EF               	movf	indf0,w,c
 16268  0050EE                     u10930:
 16269  0050EE  0900               	iorlw	0
 16270  0050F0  A4D8               	btfss	status,2,c
 16271  0050F2  EF7D  F028         	goto	u10941
 16272  0050F6  EF7F  F028         	goto	u10940
 16273  0050FA                     u10941:
 16274  0050FA  EF53  F028         	goto	l9691
 16275  0050FE                     u10940:
 16276  0050FE  0012               	return		;funcret
 16277  005100                     __end_of_UART_printf:
 16278                           	opt callstack 0
 16279                           
 16280 ;; *************** function _UART_write *****************
 16281 ;; Defined at:
 16282 ;;		line 42 in file "./UART.h"
 16283 ;; Parameters:    Size  Location     Type
 16284 ;;  dato            1    wreg     unsigned char 
 16285 ;; Auto vars:     Size  Location     Type
 16286 ;;  dato            1    5[COMRAM] unsigned char 
 16287 ;; Return value:  Size  Location     Type
 16288 ;;                  1    wreg      void 
 16289 ;; Registers used:
 16290 ;;		wreg
 16291 ;; Tracked objects:
 16292 ;;		On entry : 0/0
 16293 ;;		On exit  : 0/0
 16294 ;;		Unchanged: 0/0
 16295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16296 ;;      Params:         0       0       0       0       0       0       0       0       0
 16297 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16298 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16299 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16300 ;;Total ram usage:        1 bytes
 16301 ;; Hardware stack levels used:    1
 16302 ;; Hardware stack levels required when called:    2
 16303 ;; This function calls:
 16304 ;;		Nothing
 16305 ;; This function is called by:
 16306 ;;		_UART_printf
 16307 ;; This function uses a non-reentrant model
 16308 ;;
 16309                           
 16310                           	psect	text68
 16311  005842                     __ptext68:
 16312                           	opt callstack 0
 16313  005842                     _UART_write:
 16314                           	opt callstack 26
 16315                           
 16316                           ;incstack = 0
 16317                           ;UART_write@dato stored from wreg
 16318  005842  6E06               	movwf	UART_write@dato^0,c
 16319  005844                     
 16320                           ;./UART.h: 43:     TXREG = dato;
 16321  005844  C006  FFAD         	movff	UART_write@dato,4013	;volatile
 16322  005848                     l218:
 16323  005848  A2AC               	btfss	172,1,c	;volatile
 16324  00584A  EF29  F02C         	goto	u10741
 16325  00584E  EF2B  F02C         	goto	u10740
 16326  005852                     u10741:
 16327  005852  EF24  F02C         	goto	l218
 16328  005856                     u10740:
 16329  005856  0012               	return		;funcret
 16330  005858                     __end_of_UART_write:
 16331                           	opt callstack 0
 16332                           
 16333 ;; *************** function _hayCruce *****************
 16334 ;; Defined at:
 16335 ;;		line 666 in file "main.c"
 16336 ;; Parameters:    Size  Location     Type
 16337 ;;  caminosRecor    2   63[COMRAM] PTR unsigned char 
 16338 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 16339 ;;  investigando    1   65[COMRAM] unsigned char 
 16340 ;; Auto vars:     Size  Location     Type
 16341 ;;  contCaminos     1   66[COMRAM] unsigned char 
 16342 ;; Return value:  Size  Location     Type
 16343 ;;                  1    wreg      unsigned char 
 16344 ;; Registers used:
 16345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16346 ;; Tracked objects:
 16347 ;;		On entry : 0/0
 16348 ;;		On exit  : 0/0
 16349 ;;		Unchanged: 0/0
 16350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16351 ;;      Params:         3       0       0       0       0       0       0       0       0
 16352 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16353 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16354 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16355 ;;Total ram usage:        4 bytes
 16356 ;; Hardware stack levels used:    1
 16357 ;; Hardware stack levels required when called:    3
 16358 ;; This function calls:
 16359 ;;		___flge
 16360 ;; This function is called by:
 16361 ;;		_decidirDireccion
 16362 ;; This function uses a non-reentrant model
 16363 ;;
 16364                           
 16365                           	psect	text69
 16366  003910                     __ptext69:
 16367                           	opt callstack 0
 16368  003910                     _hayCruce:
 16369                           	opt callstack 25
 16370  003910                     
 16371                           ;main.c: 668:     T_UBYTE contCaminos = 0;
 16372  003910  0E00               	movlw	0
 16373  003912  6E43               	movwf	hayCruce@contCaminos^0,c
 16374                           
 16375                           ;main.c: 670:     paredEnfrente = 0;
 16376  003914  0E00               	movlw	0
 16377  003916  0101               	movlb	1	; () banked
 16378  003918  6F3B               	movwf	_paredEnfrente& (0+255),b
 16379                           
 16380                           ;main.c: 671:     paredDerecha = 0;
 16381  00391A  0E00               	movlw	0
 16382  00391C  6F3A               	movwf	_paredDerecha& (0+255),b
 16383                           
 16384                           ;main.c: 672:     paredIzquierda = 0;
 16385  00391E  0E00               	movlw	0
 16386  003920  6F39               	movwf	_paredIzquierda& (0+255),b
 16387                           
 16388                           ;main.c: 674:     if (!investigandoCruce) {
 16389  003922  5042               	movf	hayCruce@investigandoCruce^0,w,c
 16390  003924  A4D8               	btfss	status,2,c
 16391  003926  EF97  F01C         	goto	u11241
 16392  00392A  EF99  F01C         	goto	u11240
 16393  00392E                     u11241:
 16394  00392E  EF43  F01D         	goto	l10009
 16395  003932                     u11240:
 16396  003932                     
 16397                           ; BSR set to: 1
 16398                           ;main.c: 676:         if (sensorEnfrente > 35) {
 16399  003932  0E00               	movlw	0
 16400  003934  6E34               	movwf	___flge@ff1^0,c
 16401  003936  0E00               	movlw	0
 16402  003938  6E35               	movwf	(___flge@ff1+1)^0,c
 16403  00393A  0E0C               	movlw	12
 16404  00393C  6E36               	movwf	(___flge@ff1+2)^0,c
 16405  00393E  0E42               	movlw	66
 16406  003940  6E37               	movwf	(___flge@ff1+3)^0,c
 16407  003942  C124  F038         	movff	_sensorEnfrente,___flge@ff2
 16408  003946  C125  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
 16409  00394A  C126  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
 16410  00394E  C127  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
 16411  003952  ECC3  F021         	call	___flge	;wreg free
 16412  003956  B0D8               	btfsc	status,0,c
 16413  003958  EFB0  F01C         	goto	u11251
 16414  00395C  EFB2  F01C         	goto	u11250
 16415  003960                     u11251:
 16416  003960  EFB6  F01C         	goto	l9939
 16417  003964                     u11250:
 16418  003964                     
 16419                           ;main.c: 677:             paredEnfrente = 1;
 16420  003964  0E01               	movlw	1
 16421  003966  0101               	movlb	1	; () banked
 16422  003968  6F3B               	movwf	_paredEnfrente& (0+255),b
 16423  00396A                     
 16424                           ; BSR set to: 1
 16425                           ;main.c: 678:             contCaminos++;
 16426  00396A  2A43               	incf	hayCruce@contCaminos^0,f,c
 16427  00396C                     l9939:
 16428                           
 16429                           ;main.c: 681:         if (sensorIzquierda > 30) {
 16430  00396C  0E00               	movlw	0
 16431  00396E  6E34               	movwf	___flge@ff1^0,c
 16432  003970  0E00               	movlw	0
 16433  003972  6E35               	movwf	(___flge@ff1+1)^0,c
 16434  003974  0EF0               	movlw	240
 16435  003976  6E36               	movwf	(___flge@ff1+2)^0,c
 16436  003978  0E41               	movlw	65
 16437  00397A  6E37               	movwf	(___flge@ff1+3)^0,c
 16438  00397C  C128  F038         	movff	_sensorIzquierda,___flge@ff2
 16439  003980  C129  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
 16440  003984  C12A  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
 16441  003988  C12B  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
 16442  00398C  ECC3  F021         	call	___flge	;wreg free
 16443  003990  B0D8               	btfsc	status,0,c
 16444  003992  EFCD  F01C         	goto	u11261
 16445  003996  EFCF  F01C         	goto	u11260
 16446  00399A                     u11261:
 16447  00399A  EFD3  F01C         	goto	l9945
 16448  00399E                     u11260:
 16449  00399E                     
 16450                           ;main.c: 682:             paredIzquierda = 1;
 16451  00399E  0E01               	movlw	1
 16452  0039A0  0101               	movlb	1	; () banked
 16453  0039A2  6F39               	movwf	_paredIzquierda& (0+255),b
 16454  0039A4                     
 16455                           ; BSR set to: 1
 16456                           ;main.c: 683:             contCaminos++;
 16457  0039A4  2A43               	incf	hayCruce@contCaminos^0,f,c
 16458  0039A6                     l9945:
 16459                           
 16460                           ;main.c: 686:         if (sensorDerecha > 30) {
 16461  0039A6  0E00               	movlw	0
 16462  0039A8  6E34               	movwf	___flge@ff1^0,c
 16463  0039AA  0E00               	movlw	0
 16464  0039AC  6E35               	movwf	(___flge@ff1+1)^0,c
 16465  0039AE  0EF0               	movlw	240
 16466  0039B0  6E36               	movwf	(___flge@ff1+2)^0,c
 16467  0039B2  0E41               	movlw	65
 16468  0039B4  6E37               	movwf	(___flge@ff1+3)^0,c
 16469  0039B6  C12C  F038         	movff	_sensorDerecha,___flge@ff2
 16470  0039BA  C12D  F039         	movff	_sensorDerecha+1,___flge@ff2+1
 16471  0039BE  C12E  F03A         	movff	_sensorDerecha+2,___flge@ff2+2
 16472  0039C2  C12F  F03B         	movff	_sensorDerecha+3,___flge@ff2+3
 16473  0039C6  ECC3  F021         	call	___flge	;wreg free
 16474  0039CA  B0D8               	btfsc	status,0,c
 16475  0039CC  EFEA  F01C         	goto	u11271
 16476  0039D0  EFEC  F01C         	goto	u11270
 16477  0039D4                     u11271:
 16478  0039D4  EFF0  F01C         	goto	l9951
 16479  0039D8                     u11270:
 16480  0039D8                     
 16481                           ;main.c: 687:             paredDerecha = 1;
 16482  0039D8  0E01               	movlw	1
 16483  0039DA  0101               	movlb	1	; () banked
 16484  0039DC  6F3A               	movwf	_paredDerecha& (0+255),b
 16485  0039DE                     
 16486                           ; BSR set to: 1
 16487                           ;main.c: 688:             contCaminos++;
 16488  0039DE  2A43               	incf	hayCruce@contCaminos^0,f,c
 16489  0039E0                     l9951:
 16490                           
 16491                           ;main.c: 692:         if (contCaminos > 1) {
 16492  0039E0  0E01               	movlw	1
 16493  0039E2  6443               	cpfsgt	hayCruce@contCaminos^0,c
 16494  0039E4  EFF6  F01C         	goto	u11281
 16495  0039E8  EFF8  F01C         	goto	u11280
 16496  0039EC                     u11281:
 16497  0039EC  EF43  F01D         	goto	l10009
 16498  0039F0                     u11280:
 16499  0039F0                     
 16500                           ;main.c: 703:                 if (paredDerecha)
 16501  0039F0  0101               	movlb	1	; () banked
 16502  0039F2  513A               	movf	_paredDerecha& (0+255),w,b
 16503  0039F4  B4D8               	btfsc	status,2,c
 16504  0039F6  EFFF  F01C         	goto	u11291
 16505  0039FA  EF01  F01D         	goto	u11290
 16506  0039FE                     u11291:
 16507  0039FE  EF0B  F01D         	goto	l9965
 16508  003A02                     u11290:
 16509  003A02                     
 16510                           ; BSR set to: 1
 16511  003A02  EE20 F002          	lfsr	2,2
 16512  003A06  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16513  003A08  26D9               	addwf	fsr2l,f,c
 16514  003A0A  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16515  003A0C  22DA               	addwfc	fsr2h,f,c
 16516  003A0E  0E31               	movlw	49
 16517  003A10  6EDF               	movwf	indf2,c
 16518  003A12  EF13  F01D         	goto	l9985
 16519  003A16                     l9965:
 16520                           
 16521                           ; BSR set to: 1
 16522  003A16  EE20 F002          	lfsr	2,2
 16523  003A1A  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16524  003A1C  26D9               	addwf	fsr2l,f,c
 16525  003A1E  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16526  003A20  22DA               	addwfc	fsr2h,f,c
 16527  003A22  0E30               	movlw	48
 16528  003A24  6EDF               	movwf	indf2,c
 16529  003A26                     l9985:
 16530                           
 16531                           ; BSR set to: 1
 16532                           ;main.c: 733:                 if (paredIzquierda)
 16533  003A26  5139               	movf	_paredIzquierda& (0+255),w,b
 16534  003A28  B4D8               	btfsc	status,2,c
 16535  003A2A  EF19  F01D         	goto	u11301
 16536  003A2E  EF1B  F01D         	goto	u11300
 16537  003A32                     u11301:
 16538  003A32  EF25  F01D         	goto	l9989
 16539  003A36                     u11300:
 16540  003A36                     
 16541                           ; BSR set to: 1
 16542  003A36  EE20 F001          	lfsr	2,1
 16543  003A3A  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16544  003A3C  26D9               	addwf	fsr2l,f,c
 16545  003A3E  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16546  003A40  22DA               	addwfc	fsr2h,f,c
 16547  003A42  0E31               	movlw	49
 16548  003A44  6EDF               	movwf	indf2,c
 16549  003A46  EF2D  F01D         	goto	l9991
 16550  003A4A                     l9989:
 16551                           
 16552                           ; BSR set to: 1
 16553  003A4A  EE20 F001          	lfsr	2,1
 16554  003A4E  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16555  003A50  26D9               	addwf	fsr2l,f,c
 16556  003A52  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16557  003A54  22DA               	addwfc	fsr2h,f,c
 16558  003A56  0E30               	movlw	48
 16559  003A58  6EDF               	movwf	indf2,c
 16560  003A5A                     l9991:
 16561                           
 16562                           ; BSR set to: 1
 16563                           ;main.c: 742:                 if (paredEnfrente)
 16564  003A5A  513B               	movf	_paredEnfrente& (0+255),w,b
 16565  003A5C  B4D8               	btfsc	status,2,c
 16566  003A5E  EF33  F01D         	goto	u11311
 16567  003A62  EF35  F01D         	goto	u11310
 16568  003A66                     u11311:
 16569  003A66  EF3D  F01D         	goto	l9995
 16570  003A6A                     u11310:
 16571  003A6A                     
 16572                           ; BSR set to: 1
 16573                           ;main.c: 743:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '1';
 16574  003A6A  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 16575  003A6E  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 16576  003A72  0E31               	movlw	49
 16577  003A74  6EDF               	movwf	indf2,c
 16578  003A76  EF43  F01D         	goto	l10009
 16579  003A7A                     l9995:
 16580                           
 16581                           ; BSR set to: 1
 16582                           ;main.c: 745:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '0';
 16583  003A7A  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 16584  003A7E  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 16585  003A82  0E30               	movlw	48
 16586  003A84  6EDF               	movwf	indf2,c
 16587  003A86                     l10009:
 16588                           
 16589                           ;main.c: 770:     if (contCaminos > 1)
 16590  003A86  0E01               	movlw	1
 16591  003A88  6443               	cpfsgt	hayCruce@contCaminos^0,c
 16592  003A8A  EF49  F01D         	goto	u11321
 16593  003A8E  EF4B  F01D         	goto	u11320
 16594  003A92                     u11321:
 16595  003A92  EF4E  F01D         	goto	l10017
 16596  003A96                     u11320:
 16597  003A96                     
 16598                           ;main.c: 771:         return 1;
 16599  003A96  0E01               	movlw	1
 16600  003A98  EF4F  F01D         	goto	l496
 16601  003A9C                     l10017:
 16602                           
 16603                           ;main.c: 774:         return 0;
 16604  003A9C  0E00               	movlw	0
 16605  003A9E                     l496:
 16606  003A9E  0012               	return		;funcret
 16607  003AA0                     __end_of_hayCruce:
 16608                           	opt callstack 0
 16609                           
 16610 ;; *************** function ___flge *****************
 16611 ;; Defined at:
 16612 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 16613 ;; Parameters:    Size  Location     Type
 16614 ;;  ff1             4   51[COMRAM] unsigned char 
 16615 ;;  ff2             4   55[COMRAM] unsigned char 
 16616 ;; Auto vars:     Size  Location     Type
 16617 ;;		None
 16618 ;; Return value:  Size  Location     Type
 16619 ;;		None               void
 16620 ;; Registers used:
 16621 ;;		wreg, status,2, status,0
 16622 ;; Tracked objects:
 16623 ;;		On entry : 0/0
 16624 ;;		On exit  : 0/0
 16625 ;;		Unchanged: 0/0
 16626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16627 ;;      Params:         8       0       0       0       0       0       0       0       0
 16628 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16629 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16630 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16631 ;;Total ram usage:       12 bytes
 16632 ;; Hardware stack levels used:    1
 16633 ;; Hardware stack levels required when called:    2
 16634 ;; This function calls:
 16635 ;;		Nothing
 16636 ;; This function is called by:
 16637 ;;		_forzarEspejeo
 16638 ;;		_hayCruce
 16639 ;;		_decidirDireccion
 16640 ;;		_efgtoa
 16641 ;;		_roundf
 16642 ;;		_probarPID
 16643 ;;		_probarCruceT
 16644 ;; This function uses a non-reentrant model
 16645 ;;
 16646                           
 16647                           	psect	text70
 16648  004386                     __ptext70:
 16649                           	opt callstack 0
 16650  004386                     ___flge:
 16651                           	opt callstack 23
 16652  004386  0E00               	movlw	0
 16653  004388  1434               	andwf	___flge@ff1^0,w,c
 16654  00438A  6E3C               	movwf	??___flge^0,c
 16655  00438C  0E00               	movlw	0
 16656  00438E  1435               	andwf	(___flge@ff1+1)^0,w,c
 16657  004390  6E3D               	movwf	(??___flge+1)^0,c
 16658  004392  0E80               	movlw	128
 16659  004394  1436               	andwf	(___flge@ff1+2)^0,w,c
 16660  004396  6E3E               	movwf	(??___flge+2)^0,c
 16661  004398  0E7F               	movlw	127
 16662  00439A  1437               	andwf	(___flge@ff1+3)^0,w,c
 16663  00439C  6E3F               	movwf	(??___flge+3)^0,c
 16664  00439E  503C               	movf	??___flge^0,w,c
 16665  0043A0  103D               	iorwf	(??___flge+1)^0,w,c
 16666  0043A2  103E               	iorwf	(??___flge+2)^0,w,c
 16667  0043A4  103F               	iorwf	(??___flge+3)^0,w,c
 16668  0043A6  A4D8               	btfss	status,2,c
 16669  0043A8  EFD8  F021         	goto	u9661
 16670  0043AC  EFDA  F021         	goto	u9660
 16671  0043B0                     u9661:
 16672  0043B0  EFE2  F021         	goto	l8979
 16673  0043B4                     u9660:
 16674  0043B4  0E00               	movlw	0
 16675  0043B6  6E34               	movwf	___flge@ff1^0,c
 16676  0043B8  0E00               	movlw	0
 16677  0043BA  6E35               	movwf	(___flge@ff1+1)^0,c
 16678  0043BC  0E00               	movlw	0
 16679  0043BE  6E36               	movwf	(___flge@ff1+2)^0,c
 16680  0043C0  0E00               	movlw	0
 16681  0043C2  6E37               	movwf	(___flge@ff1+3)^0,c
 16682  0043C4                     l8979:
 16683  0043C4  0E00               	movlw	0
 16684  0043C6  1438               	andwf	___flge@ff2^0,w,c
 16685  0043C8  6E3C               	movwf	??___flge^0,c
 16686  0043CA  0E00               	movlw	0
 16687  0043CC  1439               	andwf	(___flge@ff2+1)^0,w,c
 16688  0043CE  6E3D               	movwf	(??___flge+1)^0,c
 16689  0043D0  0E80               	movlw	128
 16690  0043D2  143A               	andwf	(___flge@ff2+2)^0,w,c
 16691  0043D4  6E3E               	movwf	(??___flge+2)^0,c
 16692  0043D6  0E7F               	movlw	127
 16693  0043D8  143B               	andwf	(___flge@ff2+3)^0,w,c
 16694  0043DA  6E3F               	movwf	(??___flge+3)^0,c
 16695  0043DC  503C               	movf	??___flge^0,w,c
 16696  0043DE  103D               	iorwf	(??___flge+1)^0,w,c
 16697  0043E0  103E               	iorwf	(??___flge+2)^0,w,c
 16698  0043E2  103F               	iorwf	(??___flge+3)^0,w,c
 16699  0043E4  A4D8               	btfss	status,2,c
 16700  0043E6  EFF7  F021         	goto	u9671
 16701  0043EA  EFF9  F021         	goto	u9670
 16702  0043EE                     u9671:
 16703  0043EE  EF01  F022         	goto	l8983
 16704  0043F2                     u9670:
 16705  0043F2  0E00               	movlw	0
 16706  0043F4  6E38               	movwf	___flge@ff2^0,c
 16707  0043F6  0E00               	movlw	0
 16708  0043F8  6E39               	movwf	(___flge@ff2+1)^0,c
 16709  0043FA  0E00               	movlw	0
 16710  0043FC  6E3A               	movwf	(___flge@ff2+2)^0,c
 16711  0043FE  0E00               	movlw	0
 16712  004400  6E3B               	movwf	(___flge@ff2+3)^0,c
 16713  004402                     l8983:
 16714  004402  AE37               	btfss	(___flge@ff1+3)^0,7,c
 16715  004404  EF06  F022         	goto	u9681
 16716  004408  EF08  F022         	goto	u9680
 16717  00440C                     u9681:
 16718  00440C  EF11  F022         	goto	l8987
 16719  004410                     u9680:
 16720  004410  6C34               	negf	___flge@ff1^0,c
 16721  004412  1E35               	comf	(___flge@ff1+1)^0,f,c
 16722  004414  B0D8               	btfsc	status,0,c
 16723  004416  2A35               	incf	(___flge@ff1+1)^0,f,c
 16724  004418  1E36               	comf	(___flge@ff1+2)^0,f,c
 16725  00441A  B0D8               	btfsc	status,0,c
 16726  00441C  2A36               	incf	(___flge@ff1+2)^0,f,c
 16727  00441E  0E80               	movlw	128
 16728  004420  5637               	subfwb	(___flge@ff1+3)^0,f,c
 16729  004422                     l8987:
 16730  004422  AE3B               	btfss	(___flge@ff2+3)^0,7,c
 16731  004424  EF16  F022         	goto	u9691
 16732  004428  EF18  F022         	goto	u9690
 16733  00442C                     u9691:
 16734  00442C  EF21  F022         	goto	l1214
 16735  004430                     u9690:
 16736  004430  6C38               	negf	___flge@ff2^0,c
 16737  004432  1E39               	comf	(___flge@ff2+1)^0,f,c
 16738  004434  B0D8               	btfsc	status,0,c
 16739  004436  2A39               	incf	(___flge@ff2+1)^0,f,c
 16740  004438  1E3A               	comf	(___flge@ff2+2)^0,f,c
 16741  00443A  B0D8               	btfsc	status,0,c
 16742  00443C  2A3A               	incf	(___flge@ff2+2)^0,f,c
 16743  00443E  0E80               	movlw	128
 16744  004440  563B               	subfwb	(___flge@ff2+3)^0,f,c
 16745  004442                     l1214:
 16746  004442  0E00               	movlw	0
 16747  004444  1A34               	xorwf	___flge@ff1^0,f,c
 16748  004446  0E00               	movlw	0
 16749  004448  1A35               	xorwf	(___flge@ff1+1)^0,f,c
 16750  00444A  0E00               	movlw	0
 16751  00444C  1A36               	xorwf	(___flge@ff1+2)^0,f,c
 16752  00444E  0E80               	movlw	128
 16753  004450  1A37               	xorwf	(___flge@ff1+3)^0,f,c
 16754  004452  0E00               	movlw	0
 16755  004454  1A38               	xorwf	___flge@ff2^0,f,c
 16756  004456  0E00               	movlw	0
 16757  004458  1A39               	xorwf	(___flge@ff2+1)^0,f,c
 16758  00445A  0E00               	movlw	0
 16759  00445C  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
 16760  00445E  0E80               	movlw	128
 16761  004460  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
 16762  004462  5038               	movf	___flge@ff2^0,w,c
 16763  004464  5C34               	subwf	___flge@ff1^0,w,c
 16764  004466  5039               	movf	(___flge@ff2+1)^0,w,c
 16765  004468  5835               	subwfb	(___flge@ff1+1)^0,w,c
 16766  00446A  503A               	movf	(___flge@ff2+2)^0,w,c
 16767  00446C  5836               	subwfb	(___flge@ff1+2)^0,w,c
 16768  00446E  503B               	movf	(___flge@ff2+3)^0,w,c
 16769  004470  5837               	subwfb	(___flge@ff1+3)^0,w,c
 16770  004472  B0D8               	btfsc	status,0,c
 16771  004474  EF3E  F022         	goto	u9701
 16772  004478  EF40  F022         	goto	u9700
 16773  00447C                     u9701:
 16774  00447C  EF43  F022         	goto	l8993
 16775  004480                     u9700:
 16776  004480  90D8               	bcf	status,0,c
 16777  004482  EF44  F022         	goto	l1219
 16778  004486                     l8993:
 16779  004486  80D8               	bsf	status,0,c
 16780  004488                     l1219:
 16781  004488  0012               	return		;funcret
 16782  00448A                     __end_of___flge:
 16783                           	opt callstack 0
 16784                           
 16785 ;; *************** function _UART_init *****************
 16786 ;; Defined at:
 16787 ;;		line 13 in file "./UART.h"
 16788 ;; Parameters:    Size  Location     Type
 16789 ;;  BAUD            4   31[COMRAM] long 
 16790 ;; Auto vars:     Size  Location     Type
 16791 ;;  frecuenciaCr    4    0        long 
 16792 ;; Return value:  Size  Location     Type
 16793 ;;                  1    wreg      void 
 16794 ;; Registers used:
 16795 ;;		wreg, status,2, status,0, cstack
 16796 ;; Tracked objects:
 16797 ;;		On entry : 0/0
 16798 ;;		On exit  : 0/0
 16799 ;;		Unchanged: 0/0
 16800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16801 ;;      Params:         4       0       0       0       0       0       0       0       0
 16802 ;;      Locals:         8       0       0       0       0       0       0       0       0
 16803 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16804 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16805 ;;Total ram usage:       12 bytes
 16806 ;; Hardware stack levels used:    1
 16807 ;; Hardware stack levels required when called:    3
 16808 ;; This function calls:
 16809 ;;		___aldiv
 16810 ;; This function is called by:
 16811 ;;		_main
 16812 ;; This function uses a non-reentrant model
 16813 ;;
 16814                           
 16815                           	psect	text71
 16816  004EFE                     __ptext71:
 16817                           	opt callstack 0
 16818  004EFE                     _UART_init:
 16819                           	opt callstack 27
 16820  004EFE                     
 16821                           ;./UART.h: 16:     TRISC6 = 0;
 16822  004EFE  9C94               	bcf	3988,6,c	;volatile
 16823  004F00                     
 16824                           ;./UART.h: 17:     TRISC7 = 1;
 16825  004F00  8E94               	bsf	3988,7,c	;volatile
 16826  004F02                     
 16827                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16828  004F02  0E10               	movlw	16
 16829  004F04  6E16               	movwf	___aldiv@divisor^0,c
 16830  004F06  0E00               	movlw	0
 16831  004F08  6E17               	movwf	(___aldiv@divisor+1)^0,c
 16832  004F0A  0E00               	movlw	0
 16833  004F0C  6E18               	movwf	(___aldiv@divisor+2)^0,c
 16834  004F0E  0E00               	movlw	0
 16835  004F10  6E19               	movwf	(___aldiv@divisor+3)^0,c
 16836  004F12  0E00               	movlw	0
 16837  004F14  6E12               	movwf	___aldiv@dividend^0,c
 16838  004F16  0E09               	movlw	9
 16839  004F18  6E13               	movwf	(___aldiv@dividend+1)^0,c
 16840  004F1A  0E3D               	movlw	61
 16841  004F1C  6E14               	movwf	(___aldiv@dividend+2)^0,c
 16842  004F1E  0E00               	movlw	0
 16843  004F20  6E15               	movwf	(___aldiv@dividend+3)^0,c
 16844  004F22  EC35  F020         	call	___aldiv	;wreg free
 16845  004F26  C012  F028         	movff	?___aldiv,_UART_init$1825
 16846  004F2A  C013  F029         	movff	?___aldiv+1,_UART_init$1825+1
 16847  004F2E  C014  F02A         	movff	?___aldiv+2,_UART_init$1825+2
 16848  004F32  C015  F02B         	movff	?___aldiv+3,_UART_init$1825+3
 16849  004F36                     
 16850                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16851  004F36  C028  F012         	movff	_UART_init$1825,___aldiv@dividend
 16852  004F3A  C029  F013         	movff	_UART_init$1825+1,___aldiv@dividend+1
 16853  004F3E  C02A  F014         	movff	_UART_init$1825+2,___aldiv@dividend+2
 16854  004F42  C02B  F015         	movff	_UART_init$1825+3,___aldiv@dividend+3
 16855  004F46  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 16856  004F4A  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 16857  004F4E  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 16858  004F52  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 16859  004F56  EC35  F020         	call	___aldiv	;wreg free
 16860  004F5A  0412               	decf	?___aldiv^0,w,c
 16861  004F5C  6EAF               	movwf	175,c	;volatile
 16862  004F5E                     
 16863                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 16864  004F5E  84AC               	bsf	172,2,c	;volatile
 16865  004F60                     
 16866                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 16867  004F60  98AC               	bcf	172,4,c	;volatile
 16868  004F62                     
 16869                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 16870  004F62  8EAB               	bsf	171,7,c	;volatile
 16871  004F64                     
 16872                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 16873  004F64  9CAC               	bcf	172,6,c	;volatile
 16874  004F66                     
 16875                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 16876  004F66  8AAC               	bsf	172,5,c	;volatile
 16877  004F68                     
 16878                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 16879  004F68  9CAB               	bcf	171,6,c	;volatile
 16880  004F6A                     
 16881                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 16882  004F6A  88AB               	bsf	171,4,c	;volatile
 16883  004F6C  0012               	return		;funcret
 16884  004F6E                     __end_of_UART_init:
 16885                           	opt callstack 0
 16886                           
 16887 ;; *************** function ___aldiv *****************
 16888 ;; Defined at:
 16889 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 16890 ;; Parameters:    Size  Location     Type
 16891 ;;  dividend        4   17[COMRAM] long 
 16892 ;;  divisor         4   21[COMRAM] long 
 16893 ;; Auto vars:     Size  Location     Type
 16894 ;;  quotient        4   27[COMRAM] long 
 16895 ;;  sign            1   26[COMRAM] unsigned char 
 16896 ;;  counter         1   25[COMRAM] unsigned char 
 16897 ;; Return value:  Size  Location     Type
 16898 ;;                  4   17[COMRAM] long 
 16899 ;; Registers used:
 16900 ;;		wreg, status,2, status,0
 16901 ;; Tracked objects:
 16902 ;;		On entry : 0/0
 16903 ;;		On exit  : 0/0
 16904 ;;		Unchanged: 0/0
 16905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16906 ;;      Params:         8       0       0       0       0       0       0       0       0
 16907 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16908 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16909 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16910 ;;Total ram usage:       14 bytes
 16911 ;; Hardware stack levels used:    1
 16912 ;; Hardware stack levels required when called:    2
 16913 ;; This function calls:
 16914 ;;		Nothing
 16915 ;; This function is called by:
 16916 ;;		_map
 16917 ;;		_UART_init
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           	psect	text72
 16922  00406A                     __ptext72:
 16923                           	opt callstack 0
 16924  00406A                     ___aldiv:
 16925                           	opt callstack 24
 16926  00406A  0E00               	movlw	0
 16927  00406C  6E1B               	movwf	___aldiv@sign^0,c
 16928  00406E  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 16929  004070  EF3E  F020         	goto	u8220
 16930  004074  EF3C  F020         	goto	u8221
 16931  004078                     u8221:
 16932  004078  EF48  F020         	goto	l8183
 16933  00407C                     u8220:
 16934  00407C  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 16935  00407E  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 16936  004080  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 16937  004082  6C16               	negf	___aldiv@divisor^0,c
 16938  004084  0E00               	movlw	0
 16939  004086  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 16940  004088  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 16941  00408A  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 16942  00408C  0E01               	movlw	1
 16943  00408E  6E1B               	movwf	___aldiv@sign^0,c
 16944  004090                     l8183:
 16945  004090  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 16946  004092  EF4F  F020         	goto	u8230
 16947  004096  EF4D  F020         	goto	u8231
 16948  00409A                     u8231:
 16949  00409A  EF59  F020         	goto	l8189
 16950  00409E                     u8230:
 16951  00409E  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 16952  0040A0  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 16953  0040A2  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 16954  0040A4  6C12               	negf	___aldiv@dividend^0,c
 16955  0040A6  0E00               	movlw	0
 16956  0040A8  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 16957  0040AA  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 16958  0040AC  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 16959  0040AE  0E01               	movlw	1
 16960  0040B0  1A1B               	xorwf	___aldiv@sign^0,f,c
 16961  0040B2                     l8189:
 16962  0040B2  0E00               	movlw	0
 16963  0040B4  6E1C               	movwf	___aldiv@quotient^0,c
 16964  0040B6  0E00               	movlw	0
 16965  0040B8  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 16966  0040BA  0E00               	movlw	0
 16967  0040BC  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 16968  0040BE  0E00               	movlw	0
 16969  0040C0  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 16970  0040C2  5016               	movf	___aldiv@divisor^0,w,c
 16971  0040C4  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 16972  0040C6  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 16973  0040C8  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 16974  0040CA  B4D8               	btfsc	status,2,c
 16975  0040CC  EF6A  F020         	goto	u8241
 16976  0040D0  EF6C  F020         	goto	u8240
 16977  0040D4                     u8241:
 16978  0040D4  EFA2  F020         	goto	l8211
 16979  0040D8                     u8240:
 16980  0040D8  0E01               	movlw	1
 16981  0040DA  6E1A               	movwf	___aldiv@counter^0,c
 16982  0040DC  EF76  F020         	goto	l8197
 16983  0040E0                     l8195:
 16984  0040E0  90D8               	bcf	status,0,c
 16985  0040E2  3616               	rlcf	___aldiv@divisor^0,f,c
 16986  0040E4  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 16987  0040E6  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 16988  0040E8  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 16989  0040EA  2A1A               	incf	___aldiv@counter^0,f,c
 16990  0040EC                     l8197:
 16991  0040EC  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 16992  0040EE  EF7B  F020         	goto	u8251
 16993  0040F2  EF7D  F020         	goto	u8250
 16994  0040F6                     u8251:
 16995  0040F6  EF70  F020         	goto	l8195
 16996  0040FA                     u8250:
 16997  0040FA                     l8199:
 16998  0040FA  90D8               	bcf	status,0,c
 16999  0040FC  361C               	rlcf	___aldiv@quotient^0,f,c
 17000  0040FE  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 17001  004100  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 17002  004102  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 17003  004104  5016               	movf	___aldiv@divisor^0,w,c
 17004  004106  5C12               	subwf	___aldiv@dividend^0,w,c
 17005  004108  5017               	movf	(___aldiv@divisor+1)^0,w,c
 17006  00410A  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 17007  00410C  5018               	movf	(___aldiv@divisor+2)^0,w,c
 17008  00410E  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 17009  004110  5019               	movf	(___aldiv@divisor+3)^0,w,c
 17010  004112  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 17011  004114  A0D8               	btfss	status,0,c
 17012  004116  EF8F  F020         	goto	u8261
 17013  00411A  EF91  F020         	goto	u8260
 17014  00411E                     u8261:
 17015  00411E  EF9A  F020         	goto	l8207
 17016  004122                     u8260:
 17017  004122  5016               	movf	___aldiv@divisor^0,w,c
 17018  004124  5E12               	subwf	___aldiv@dividend^0,f,c
 17019  004126  5017               	movf	(___aldiv@divisor+1)^0,w,c
 17020  004128  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 17021  00412A  5018               	movf	(___aldiv@divisor+2)^0,w,c
 17022  00412C  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 17023  00412E  5019               	movf	(___aldiv@divisor+3)^0,w,c
 17024  004130  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 17025  004132  801C               	bsf	___aldiv@quotient^0,0,c
 17026  004134                     l8207:
 17027  004134  90D8               	bcf	status,0,c
 17028  004136  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 17029  004138  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 17030  00413A  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 17031  00413C  3216               	rrcf	___aldiv@divisor^0,f,c
 17032  00413E  2E1A               	decfsz	___aldiv@counter^0,f,c
 17033  004140  EF7D  F020         	goto	l8199
 17034  004144                     l8211:
 17035  004144  501B               	movf	___aldiv@sign^0,w,c
 17036  004146  B4D8               	btfsc	status,2,c
 17037  004148  EFA8  F020         	goto	u8271
 17038  00414C  EFAA  F020         	goto	u8270
 17039  004150                     u8271:
 17040  004150  EFB2  F020         	goto	l8215
 17041  004154                     u8270:
 17042  004154  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 17043  004156  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 17044  004158  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 17045  00415A  6C1C               	negf	___aldiv@quotient^0,c
 17046  00415C  0E00               	movlw	0
 17047  00415E  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 17048  004160  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 17049  004162  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 17050  004164                     l8215:
 17051  004164  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 17052  004168  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 17053  00416C  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 17054  004170  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 17055  004174  0012               	return		;funcret
 17056  004176                     __end_of___aldiv:
 17057                           	opt callstack 0
 17058                           
 17059 ;; *************** function _boton *****************
 17060 ;; Defined at:
 17061 ;;		line 106 in file "main.c"
 17062 ;; Parameters:    Size  Location     Type
 17063 ;;		None
 17064 ;; Auto vars:     Size  Location     Type
 17065 ;;		None
 17066 ;; Return value:  Size  Location     Type
 17067 ;;                  1    wreg      void 
 17068 ;; Registers used:
 17069 ;;		wreg, status,2, status,0, cstack
 17070 ;; Tracked objects:
 17071 ;;		On entry : 0/0
 17072 ;;		On exit  : 0/0
 17073 ;;		Unchanged: 0/0
 17074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17075 ;;      Params:         0       0       0       0       0       0       0       0       0
 17076 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17077 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17078 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17079 ;;Total ram usage:        2 bytes
 17080 ;; Hardware stack levels used:    1
 17081 ;; Hardware stack levels required when called:    1
 17082 ;; This function calls:
 17083 ;;		_antiRebote
 17084 ;; This function is called by:
 17085 ;;		Interrupt level 2
 17086 ;; This function uses a non-reentrant model
 17087 ;;
 17088                           
 17089                           	psect	intcode
 17090  000008                     __pintcode:
 17091                           	opt callstack 0
 17092  000008                     _boton:
 17093                           	opt callstack 19
 17094                           
 17095                           ;incstack = 0
 17096  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17097  00000A  ED31  F029         	call	int_func,f	;refresh shadow registers
 17098                           
 17099                           	psect	intcode_body
 17100  005262                     __pintcode_body:
 17101                           	opt callstack 19
 17102  005262                     int_func:
 17103                           	opt callstack 19
 17104  005262  0006               	pop		; remove dummy address from shadow register refresh
 17105  005264                     
 17106                           ;main.c: 108:     if (INT0IF)
 17107  005264  A2F2               	btfss	4082,1,c	;volatile
 17108  005266  EF37  F029         	goto	i2u796_41
 17109  00526A  EF39  F029         	goto	i2u796_40
 17110  00526E                     i2u796_41:
 17111  00526E  EF59  F029         	goto	i2l286
 17112  005272                     i2u796_40:
 17113  005272                     
 17114                           ;main.c: 109:     {;main.c: 110:         antiRebote(1);
 17115  005272  0E01               	movlw	1
 17116  005274  ECDB  F028         	call	_antiRebote
 17117  005278                     
 17118                           ;main.c: 111:         if (pausa) {
 17119  005278  0101               	movlb	1	; () banked
 17120  00527A  51FB               	movf	_pausa& (0+255),w,b
 17121  00527C  B4D8               	btfsc	status,2,c
 17122  00527E  EF43  F029         	goto	i2u797_41
 17123  005282  EF45  F029         	goto	i2u797_40
 17124  005286                     i2u797_41:
 17125  005286  EF55  F029         	goto	i2l284
 17126  00528A                     i2u797_40:
 17127  00528A                     
 17128                           ; BSR set to: 1
 17129                           ;main.c: 112:             pausa = 0;
 17130  00528A  0E00               	movlw	0
 17131  00528C  6FFB               	movwf	_pausa& (0+255),b
 17132  00528E                     
 17133                           ; BSR set to: 1
 17134                           ;main.c: 113:             LATD2 = 1;
 17135  00528E  848C               	bsf	3980,2,c	;volatile
 17136  005290                     
 17137                           ; BSR set to: 1
 17138                           ;main.c: 114:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 17139  005290  0E10               	movlw	16
 17140  005292  6E05               	movwf	(??_boton+1)^0,c
 17141  005294  0E39               	movlw	57
 17142  005296  6E04               	movwf	??_boton^0,c
 17143  005298  0E0E               	movlw	14
 17144  00529A                     i2u1232_47:
 17145  00529A  2EE8               	decfsz	wreg,f,c
 17146  00529C  D7FE               	bra	i2u1232_47
 17147  00529E  2E04               	decfsz	??_boton^0,f,c
 17148  0052A0  D7FC               	bra	i2u1232_47
 17149  0052A2  2E05               	decfsz	(??_boton+1)^0,f,c
 17150  0052A4  D7FA               	bra	i2u1232_47
 17151                           
 17152                           ;main.c: 115:         } else {
 17153  0052A6  EF58  F029         	goto	i2l7589
 17154  0052AA                     i2l284:
 17155                           
 17156                           ; BSR set to: 1
 17157                           ;main.c: 116:             LATD2 = 0;
 17158  0052AA  948C               	bcf	3980,2,c	;volatile
 17159  0052AC                     
 17160                           ; BSR set to: 1
 17161                           ;main.c: 117:             pausa = 1;
 17162  0052AC  0E01               	movlw	1
 17163  0052AE  6FFB               	movwf	_pausa& (0+255),b
 17164  0052B0                     i2l7589:
 17165                           
 17166                           ;main.c: 120:         INT0IF = 0;
 17167  0052B0  92F2               	bcf	4082,1,c	;volatile
 17168  0052B2                     i2l286:
 17169  0052B2  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17170  0052B4  0011               	retfie		f
 17171  0052B6                     __end_of_boton:
 17172                           	opt callstack 0
 17173                           
 17174 ;; *************** function _antiRebote *****************
 17175 ;; Defined at:
 17176 ;;		line 218 in file "main.c"
 17177 ;; Parameters:    Size  Location     Type
 17178 ;;  pin             1    wreg     unsigned char 
 17179 ;; Auto vars:     Size  Location     Type
 17180 ;;  pin             1    2[COMRAM] unsigned char 
 17181 ;; Return value:  Size  Location     Type
 17182 ;;                  1    wreg      void 
 17183 ;; Registers used:
 17184 ;;		wreg, status,2, status,0
 17185 ;; Tracked objects:
 17186 ;;		On entry : 0/0
 17187 ;;		On exit  : 0/0
 17188 ;;		Unchanged: 0/0
 17189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17190 ;;      Params:         0       0       0       0       0       0       0       0       0
 17191 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17192 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17193 ;;      Totals:         3       0       0       0       0       0       0       0       0
 17194 ;;Total ram usage:        3 bytes
 17195 ;; Hardware stack levels used:    1
 17196 ;; This function calls:
 17197 ;;		Nothing
 17198 ;; This function is called by:
 17199 ;;		_boton
 17200 ;; This function uses a non-reentrant model
 17201 ;;
 17202                           
 17203                           	psect	text74
 17204  0051B6                     __ptext74:
 17205                           	opt callstack 0
 17206  0051B6                     _antiRebote:
 17207                           	opt callstack 19
 17208                           
 17209                           ;incstack = 0
 17210                           ;antiRebote@pin stored from wreg
 17211  0051B6  6E03               	movwf	antiRebote@pin^0,c
 17212  0051B8                     
 17213                           ;main.c: 220:     switch (pin) {
 17214  0051B8  EFF5  F028         	goto	i2l7385
 17215  0051BC                     i2l320:
 17216  0051BC  A081               	btfss	129,0,c	;volatile
 17217  0051BE  EFE3  F028         	goto	i2u775_41
 17218  0051C2  EFE5  F028         	goto	i2u775_40
 17219  0051C6                     i2u775_41:
 17220  0051C6  EFDE  F028         	goto	i2l320
 17221  0051CA                     i2u775_40:
 17222  0051CA                     i2l323:
 17223  0051CA  B081               	btfsc	129,0,c	;volatile
 17224  0051CC  EFEA  F028         	goto	i2u776_41
 17225  0051D0  EFEC  F028         	goto	i2u776_40
 17226  0051D4                     i2u776_41:
 17227  0051D4  EFE5  F028         	goto	i2l323
 17228  0051D8                     i2u776_40:
 17229  0051D8                     
 17230                           ;main.c: 224:             _delay((unsigned long)((100)*(4000000/4000.0)));
 17231  0051D8  0E82               	movlw	130
 17232  0051DA  6E01               	movwf	??_antiRebote^0,c
 17233  0051DC  0EDE               	movlw	222
 17234  0051DE                     i2u1233_47:
 17235  0051DE  2EE8               	decfsz	wreg,f,c
 17236  0051E0  D7FE               	bra	i2u1233_47
 17237  0051E2  2E01               	decfsz	??_antiRebote^0,f,c
 17238  0051E4  D7FC               	bra	i2u1233_47
 17239                           
 17240                           ;main.c: 225:             break;
 17241  0051E6  EF06  F029         	goto	i2l328
 17242  0051EA                     i2l7385:
 17243  0051EA  5003               	movf	antiRebote@pin^0,w,c
 17244  0051EC  6E01               	movwf	??_antiRebote^0,c
 17245  0051EE  6A02               	clrf	(??_antiRebote+1)^0,c
 17246                           
 17247                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17248                           ; Switch size 1, requested type "simple"
 17249                           ; Number of cases is 1, Range of values is 0 to 0
 17250                           ; switch strategies available:
 17251                           ; Name         Instructions Cycles
 17252                           ; simple_byte            4     3 (average)
 17253                           ;	Chosen strategy is simple_byte
 17254  0051F0  5002               	movf	(??_antiRebote+1)^0,w,c
 17255  0051F2  0A00               	xorlw	0	; case 0
 17256  0051F4  B4D8               	btfsc	status,2,c
 17257  0051F6  EFFF  F028         	goto	i2l11301
 17258  0051FA  EF06  F029         	goto	i2l328
 17259  0051FE                     i2l11301:
 17260                           
 17261                           ; Switch size 1, requested type "simple"
 17262                           ; Number of cases is 1, Range of values is 1 to 1
 17263                           ; switch strategies available:
 17264                           ; Name         Instructions Cycles
 17265                           ; simple_byte            4     3 (average)
 17266                           ;	Chosen strategy is simple_byte
 17267  0051FE  5001               	movf	??_antiRebote^0,w,c
 17268  005200  0A01               	xorlw	1	; case 1
 17269  005202  B4D8               	btfsc	status,2,c
 17270  005204  EFDE  F028         	goto	i2l320
 17271  005208  EF06  F029         	goto	i2l328
 17272  00520C                     i2l328:
 17273  00520C  0012               	return		;funcret
 17274  00520E                     __end_of_antiRebote:
 17275                           	opt callstack 0
 17276                           
 17277                           	psect	rparam
 17278  0000                     
 17279                           	psect	temp
 17280  00005A                     btemp:
 17281                           	opt callstack 0
 17282  00005A                     	ds	1
 17283  0000                     int$flags	set	btemp
 17284  0000                     wtemp8	set	btemp+1
 17285  0000                     ttemp5	set	btemp+1
 17286  0000                     ttemp6	set	btemp+4
 17287  0000                     ttemp7	set	btemp+8
 17288                           tosu	equ	0xFFF
 17289                           tosh	equ	0xFFE
 17290                           tosl	equ	0xFFD
 17291                           stkptr	equ	0xFFC
 17292                           pclatu	equ	0xFFB
 17293                           pclath	equ	0xFFA
 17294                           pcl	equ	0xFF9
 17295                           tblptru	equ	0xFF8
 17296                           tblptrh	equ	0xFF7
 17297                           tblptrl	equ	0xFF6
 17298                           tablat	equ	0xFF5
 17299                           prodh	equ	0xFF4
 17300                           prodl	equ	0xFF3
 17301                           indf0	equ	0xFEF
 17302                           postinc0	equ	0xFEE
 17303                           postdec0	equ	0xFED
 17304                           preinc0	equ	0xFEC
 17305                           plusw0	equ	0xFEB
 17306                           fsr0h	equ	0xFEA
 17307                           fsr0l	equ	0xFE9
 17308                           wreg	equ	0xFE8
 17309                           indf1	equ	0xFE7
 17310                           postinc1	equ	0xFE6
 17311                           postdec1	equ	0xFE5
 17312                           preinc1	equ	0xFE4
 17313                           plusw1	equ	0xFE3
 17314                           fsr1h	equ	0xFE2
 17315                           fsr1l	equ	0xFE1
 17316                           bsr	equ	0xFE0
 17317                           indf2	equ	0xFDF
 17318                           postinc2	equ	0xFDE
 17319                           postdec2	equ	0xFDD
 17320                           preinc2	equ	0xFDC
 17321                           plusw2	equ	0xFDB
 17322                           fsr2h	equ	0xFDA
 17323                           fsr2l	equ	0xFD9
 17324                           status	equ	0xFD8


Data Sizes:
    Strings     643
    Constant    4
    Data        5
    BSS         436
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    159     160
    BANK1           256     20     255
    BANK2           256      5     205
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1471_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    probarMapeoDireccionCruces@caminoFinal	PTR unsigned char  size(2) Largest target is 20
		 -> comportamientoBasico@caminoFinal(BANK1[20]), 

    probarMapeoDireccionCruces@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    probarMapeoDireccionCruces@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    probarMapeoDireccionCruces@cruceDetectado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cruceDetectado(BANK1[1]), 

    probarMapeoDireccionCruces@mapear	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@mapear(BANK1[1]), 

    probarMapeoDireccionCruces@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    probarMapeoDireccionCruces@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@mapear	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@mapear(BANK1[1]), 

    decidirDireccion@cruceDetectado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cruceDetectado(BANK1[1]), 

    decidirDireccion@caminoFinal	PTR unsigned char  size(2) Largest target is 20
		 -> comportamientoBasico@caminoFinal(BANK1[20]), 

    decidirDireccion@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    decidirDireccion@caminoActual	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@caminoActual(BANK1[1]), 

    decidirDireccion@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    decidirDireccion@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    decidirDireccion@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    decidirDireccion@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    limpiarMovimientos@numMovimientos	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientos(BANK1[2]), 

    limpiarMovimientos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    hayCruce@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    regresarAlCruce@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    moverCarrito@carroEspejeado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@carroEspejeado(BANK1[1]), 

    moverCarrito@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 56
		 -> STR_18(CODE[32]), STR_17(CODE[31]), STR_16(CODE[33]), STR_15(CODE[32]), 
		 -> STR_14(CODE[23]), STR_13(CODE[34]), STR_12(CODE[56]), STR_10(CODE[6]), 
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[10]), buffer(BANK1[50]), 
		 -> STR_2(CODE[25]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _comportamientoBasico->_decidirDireccion
    _comportamientoBasico->_regresarAlCruce
    _mover->_forzarAvanceRecto
    _PID->_roundf
    _roundf->___flsub
    _forzarEspejeo->_forzarEspejeoDerecha
    _forzarEspejeo->_forzarEspejeoIzquierda
    _leerSensores->___fldiv
    _dameDistancia->___xxtofl
    _map->___aldiv
    ___xxtofl->___lwdiv
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->_roundf
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _seLlegoAlDestino->_dameLecturaAdc
    _mostrarDireccionElegida->_UART_printf
    _UART_printf->_UART_write
    _hayCruce->___flge
    ___flge->___flmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _main->_comportamientoBasico
    _main->_visualizarPasosRealizados
    _visualizarPasosRealizados->_sprintf
    _comportamientoBasico->_decidirDireccion
    _regresarAlCruce->_PID
    _PID->_pwmDuty
    _probarMapeoDireccionCruces->_sprintf
    _velocidadEstandar->_pwmDuty
    _leerSensores->___fldiv
    _decidirDireccion->_sprintf
    _velocidadBaja->_pwmDuty
    _pwmDuty->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___fltol->_roundf

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _comportamientoBasico->_decidirDireccion

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_comportamientoBasico

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  410558
                                              2 BANK2      3     3      0
                          _UART_init
               _comportamientoBasico
                          _configPwm
                      _configurarAdc
                     _forzarParoAuto
    _inicializarComportamientoBasico
          _visualizarPasosRealizados
 ---------------------------------------------------------------------------------
 (1) _visualizarPasosRealizados                            4     2      2   61863
                                            155 BANK0      4     2      2
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13829
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _comportamientoBasico                                 3     3      0  333584
                                            158 BANK0      1     1      0
                                              0 BANK2      2     2      0
                                _PID
                        _UART_printf
                   _decidirDireccion
                     _forzarParoAuto
                       _leerSensores
                 _limpiarMovimientos
                       _moverCarrito
         _probarMapeoDireccionCruces
                    _regresarAlCruce
                      _velocidadBaja
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarAlCruce                                      7     3      4   64063
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (3) _mover                                                2     2      0       0
                                              7 COMRAM     2     2      0
                  _forzarAvanceRecto
 ---------------------------------------------------------------------------------
 (3) _PID                                                 18    18      0   51106
                                             40 BANK0     18    18      0
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _pwmDuty
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   20827
                                             75 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _probarMapeoDireccionCruces                          17     2     15   62741
                                            155 BANK0      2     2      0
                                              0 BANK1     15     0     15
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _moverCarrito                                         7     3      4   29092
                                             40 BANK0      7     3      4
                  _forzarAvanceRecto
                      _forzarEspejeo
 ---------------------------------------------------------------------------------
 (3) _forzarEspejeo                                        0     0      0   28788
                             ___flge
               _forzarEspejeoDerecha
             _forzarEspejeoIzquierda
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoIzquierda                               1     1      0   12461
                                             83 COMRAM     1     1      0
                _forzarGiroIzquierda
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarGiroIzquierda                                  2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoDerecha                                 1     1      0   12461
                                             83 COMRAM     1     1      0
                  _forzarGiroDerecha
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (5) _forzarReversa                                        2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _forzarParoAuto                                       1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _forzarGiroDerecha                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarAvanceRecto                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _limpiarMovimientos                                   8     4      4     341
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10233
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (2) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _decidirDireccion                                    24     4     20   89240
                                             83 COMRAM     1     1      0
                                            155 BANK0      3     3      0
                                              0 BANK1     20     0     20
                        _UART_printf
                             ___flge
                           _hayCruce
            _mostrarDireccionElegida
                   _seLlegoAlDestino
                            _sprintf
                      _velocidadBaja
 ---------------------------------------------------------------------------------
 (2) _velocidadBaja                                        0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12461
                                             28 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   60026
                                            135 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   58070
                                            127 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   57522
                                             97 BANK0     30    24      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   38677
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             79 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6347
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5422
                                             51 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3953
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             67 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6763
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4776
                                             32 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4497
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1665
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     562
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _seLlegoAlDestino                                     1     1      0      68
                                             10 COMRAM     1     1      0
                     _dameLecturaAdc
 ---------------------------------------------------------------------------------
 (4) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _mostrarDireccionElegida                              3     3      0    1747
                                              8 COMRAM     3     3      0
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2    1716
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _hayCruce                                             4     1      3    4709
                                             63 COMRAM     4     1      3
                             ___flge
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    3866
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (12) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _comportamientoBasico
     _PID
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _roundf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___xxtofl
         ___lwdiv (ARG)
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
       _roundf
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
     _UART_printf
       _UART_write
     _decidirDireccion
       _UART_printf
         _UART_write
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _hayCruce
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       _mostrarDireccionElegida
         _UART_printf
           _UART_write
       _seLlegoAlDestino
         _dameLecturaAdc
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _velocidadBaja
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _forzarParoAuto
     _leerSensores
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _limpiarMovimientos
     _moverCarrito
       _forzarAvanceRecto
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
     _probarMapeoDireccionCruces
       _UART_printf
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _regresarAlCruce
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _velocidadBaja
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _configPwm
   _configurarAdc
   _forzarParoAuto
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _visualizarPasosRealizados
     _UART_printf
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      5      CD       9       80.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C5      20        0.0%
DATA                 0      0     2C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Sep 27 21:01:19 2020

                                    ___fldiv@aexp 006C                                      ___fldiv@bexp 006B  
                                    ___fldiv@sign 0064                                      ___awdiv@sign 000B  
                                  ?_configurarAdc 0001                               ___wmul@multiplicand 0008  
                                     __CFG_BORV$3 000000               __size_of_probarMapeoDireccionCruces 00FA  
                                    __CFG_CP0$OFF 000000                                      __CFG_CP1$OFF 000000  
                                    __CFG_CP2$OFF 000000                                      __CFG_CP3$OFF 000000  
                 comportamientoBasico@caminoFinal 01C4                                               l221 5856  
                                             l141 4E88                                               l206 4068  
                                             l230 5860                                               l160 53A8  
                                             l209 4F6C                                               l233 553E  
                                             l218 5848                                               l402 5840  
                                             l154 535C                                               l227 50FE  
                                             l235 554C                                               l411 5806  
                                             l331 5444                                               l315 4B02  
                                             l236 5560                                               l180 3F38  
                                             l420 54D4                                               l149 35CA  
                                             l405 57C4                                               l157 5368  
                                             l190 3F68                                               l414 5826  
                                             l158 53A6                                               l159 5372  
                                             l512 53F8                                               l408 57E6  
                                             l185 3FEA                                               l177 3F28  
                                             l417 548C                                               l425 55E4  
                                             l434 41FE                                               l442 4CF8  
                                             l515 572E                                               l187 3F58  
                                             l179 3F36                                               l516 5730  
                                             l196 3F88                                               l436 4228  
                                             l189 3F66                                               l437 4234  
                                             l429 417E                                               l445 4D14  
                                             l526 4E0E                                               l198 3F96  
                                             l438 427C                                               l446 4D3A  
                                             l199 3F98                                               l447 4D46  
                                             l800 2D6A                                               l632 130C  
                                             l448 4D8C                                               l457 4BAE  
                                             l802 2D72                                               l538 0D44  
                                             l378 2576                                               l715 5756  
                                             l395 257A                                               l820 2FA6  
                                             l660 3D72                                               l718 577C  
                                             l647 1186                                               l727 4680  
                                             l496 3A9E                                               l568 0DE4  
                                             l672 3DA2                                               l657 130E  
                                             l585 0E68                                               l665 3D92  
                                             l666 3D82                                               l693 31F8  
                                             l782 492A                                               l838 0BCA  
                                             l856 0402                                               l928 18B6  
                                             l960 4FC6                                               l785 496C  
                                             l945 5038                                               l961 4FD6  
                                             l794 51B4                                               l882 079E  
                                             l946 5040                                               l787 49A6  
                                             l939 17FC                                               l949 57A2  
                                    __CFG_CPB$OFF 000000                                               _PR2 000FCB  
                                             _PID 2FA8                                      __CFG_CPD$OFF 000000  
                                    __CFG_BOR$OFF 000000                                               _abs 55E6  
                                             _ida 01FA                                               _pad 48E6  
                                             _map 4E10                                      ___awmod@sign 000B  
                           _numMovimientosTotales 0141                                               wreg 000FE8  
                                    ___flmul@aexp 0028                                      ___flmul@bexp 002D  
                        _DISTANCIA_PRIORIDAD_BAJA 010C                          _DISTANCIA_PRIORIDAD_ALTA 0114  
                                    ___flmul@sign 0027                                      ___flmul@temp 0032  
                                    ___flmul@prod 002E                       __size_of_limpiarMovimientos 0050  
                                    __CFG_LVP$OFF 000000                                              ?_PID 0001  
                                    ___fltol@exp1 007B                                      __CFG_WDT$OFF 000000  
                                            ?_abs 0018                                              l1028 4174  
                                            l1214 4442                                              l1063 3C26  
                                            l1223 5694                                              l1208 4C58  
                                            l1219 4488                                              l1076 3F06  
                                            l1180 48E4                                              l1246 4384  
                                            l1503 1C90                                              l1504 1C7E  
                                            l1440 4EF4                                              l1193 4A56  
                                            l1531 2CC8                                              l1611 36BA  
                                            l1604 3622                                              l1533 2B28  
                                            l1542 2B6E                                              l1630 4586  
                                            l1519 551A                                              l1607 377E  
                                            l1447 4EFC                                              l1544 2BE6  
                                            l1536 2AEC                                              l1545 2BD4  
                                            l1714 4820                                              l1722 55A4  
                                            l1570 2032                                              l1618 3716  
                                            l1635 561C                                              l1563 1E3C  
                                            l1732 5868                                              l1580 2162  
                                            l1572 20AA                                              l1740 292C  
                                            l1573 2098                                              l1477 1AA6  
                                            l1638 5624                                              l1494 1BC0  
                                            l1486 1D76                                              l1478 1A94  
                                            l1567 21A0                                              l1479 1A5A  
                                            l1753 515A                                              l1729 5306  
                                            l1666 3906                                              l1675 340E  
                                            l1763 4756                                              l1685 56CC  
                                            l1693 5358                                              l1669 390E  
                                            l1773 5098                                              l1678 3352  
                                            l1759 5702                                              l1778 50A0  
                                            l1699 565C                                              ?_map 0020  
                                            ?_pad 0016                                              l8201 4104  
                                            l9001 5684                                              l8203 4122  
                                            l8211 4144                                              l8131 476A  
                                            l9011 42AA                                              l8213 4154  
                                            l8205 4132                                              l9101 534E  
                                            l8133 477C                                              l8301 1A26  
                                            l8221 18C4                                              l9021 42F8  
                                            l9013 42D4                                              l9005 427E  
                                            l8215 4164                                              l8207 4134  
                                            l9103 5352                                              l8135 4786  
                                            l8143 5562                                              l8151 56CE  
                                            l8311 1A78                                              l8303 1A42  
                                            l8231 1904                                              l8223 18D2  
                                            l9031 4324                                              l9015 42D6  
                                            l9007 4296                                              l9111 3490  
                                            l8209 413E                                              l8137 47A4  
                                            l8129 4758                                              l8145 556E  
                                            l8153 56DA                                              l8401 1D16  
                                            l8321 1AC4                                              l8313 1A86  
                                            l8305 1A52                                              l8241 1936  
                                            l8233 1906                                              l8225 18D4  
                                            l9041 4354                                              l9017 42E6  
                                            l8161 5626                                              l9201 0012  
                                            l9113 3516                                              l8139 47DA  
                                            l8147 5580                                              l8155 56DE  
                                            l9131 5188                                              l8411 1D50  
                                            l8403 1D36                                              l8331 1B04  
                                            l8315 1A88                                              l8307 1A68  
                                            l8251 195E                                              l8243 1938  
                                            l8227 18E4                                              l8235 190E  
                                            l8219 18B8                                              l9043 4364  
                                            l9027 4310                                              l9019 42EA  
                                            l9211 0066                                              l9203 001C  
                                            l9051 35DE                                              l8171 4F9C  
                                            l9115 355A                                              l9107 3410  
                                            l8181 408C                                              l8149 5584  
                                            l8157 56F6                                              l9133 518C  
                                            l9125 515C                                              l9141 2CEA  
                                            l8413 1D56                                              l8405 1D3A  
                                            l8341 1B2E                                              l8333 1B10  
                                            l8325 1AD8                                              l8317 1A92  
                                            l8309 1A74                                              l8261 1998  
                                            l8253 196E                                              l8245 193E  
                                            l8237 191E                                              l8229 18F4  
                                            l9045 4374                                              l9037 4338  
                                            l9029 431A                                              l8501 3342  
                                            l9221 00AA                                              l9213 0070  
                                            l9205 002C                                              l9061 365C  
                                            l9053 35EC                                              l8173 4FA6  
                                            l8165 4F6E                                              l8421 4E10  
                                            l9109 3470                                              l8191 40C2  
                                            l8183 4090                                              l8175 406A  
                                            l8431 4916                                              l9135 5190  
                                            l9127 5170                                              l9151 2D5E  
                                            l9143 2D12                                              l8415 1D64  
                                            l8407 1D48                                              l8351 1BA0  
                                            l8335 1B14                                              l8327 1AE8  
                                            l8319 1AB4                                              l8343 1B34  
                                            l8271 19C4                                              l8263 19AA  
                                            l8255 197E                                              l8247 194C  
                                            l8239 1924                                              l9039 4344  
                                            l8511 33FE                                              l8503 3376  
                                            l9311 0488                                              l9223 00B6  
                                            l9231 00CC                                              l9215 0078  
                                            l9207 003A                                              l9071 36B0  
                                            l9063 3664                                              l9055 3632  
                                            l8167 4F7E                                              l9119 359E  
                                            l8193 40D8                                              l8185 409E  
                                            l8177 406E                                              l8521 579A  
                                            l8441 497A                                              l8433 4922  
                                            l8425 48E6                                              l9129 517C  
                                            l8601 3EE6                                              l9161 2DA8  
                                            l9153 2D7A                                              l9145 2D32  
                                            l8417 1D66                                              l8409 1D4E  
                                            l8361 1BFA                                              l8345 1B5A  
                                            l8353 1BB0                                              l8337 1B22  
                                            l8329 1AF6                                              l8281 19D8  
                                            l8273 19C8                                              l8265 19B8  
                                            l8257 1980                                              l8249 194E  
                                            l8505 33B2                                              l9401 08C4  
                                            l9321 04C0                                              l9313 0490  
                                            l9305 0422                                              l9241 0156  
                                            l9233 00F2                                              l9225 00BE  
                                            l9217 008A                                              l9209 0042  
                                            l9081 3726                                              l9073 36EC  
                                            l9065 3670                                              l9057 3648  
                                            l9049 35CE                                              l8169 4F8C  
                                            l8195 40E0                                              l8187 40AE  
                                            l8179 407C                                              l8515 5696  
                                            l8443 498E                                              l8435 4936  
                                            l8427 48F4                                              l8531 3AD2  
                                            l9171 2E44                                              l9163 2DB0  
                                            l9155 2D8C                                              l9147 2D42  
                                            l9139 2CCA                                              l8611 294C  
                                            l8371 1C2A                                              l8363 1C04  
                                            l8355 1BD6                                              l8347 1B8E  
                                            l8339 1B24                                              l8291 19EC  
                                            l8283 19DC                                              l8275 19CC  
                                            l8267 19BC                                              l8259 1988  
                                            l8451 448A                                              l8507 33C6  
                                            l9411 08F8                                              l9403 08CA  
                                            l9331 050A                                              l9323 04CE  
                                            l9307 0436                                              l9315 0494  
                                            l9251 01C6                                              l9243 016E  
                                            l9227 00C2                                              l9219 0098  
                                            l9091 376E                                              l9083 372A  
                                            l9075 36F8                                              l9067 36A2  
                                            l8197 40EC                                              l8189 40B2  
                                            l9501 3794                                              l8437 494A  
                                            l8429 4908                                              l8541 3B14  
                                            l8533 3AD6                                              l8525 3AA0  
                                            l9181 2F14                                              l9165 2DB6  
                                            l9173 2EA8                                              l9157 2D9A  
                                            l9149 2D44                                              l8701 2B8C  
                                            l8613 295C                                              l8621 2986  
                                            l8605 292E                                              l8381 1C52  
                                            l8373 1C2E                                              l8365 1C12  
                                            l8357 1BE6                                              l8349 1B90  
                                            l8293 19F0                                              l8285 19E0  
                                            l8277 19D0                                              l8269 19C0  
                                            l8453 44AA                                              l8509 33EE  
                                            l9405 08D0                                              l9413 08FE  
                                            l9421 0996                                              l9341 0550  
                                            l9333 051C                                              l9325 04D2  
                                            l9317 049C                                              l9309 0452  
                                            l9245 0178                                              l9237 0128  
                                            l9229 00C6                                              l9085 374E  
                                            l9077 3706                                              l9069 36A4  
                                            l8199 40FA                                              l8519 577E  
                                            l9095 5308                                              l9511 37F2  
                                            l9503 3798                                              l8439 494E  
                                            l8551 3B6E                                              l8543 3B32  
                                            l8535 3AE4                                              l8527 3AA4  
                                            l8447 55E6                                              l9191 2F5A  
                                            l9175 2EC2                                              l9183 2F22  
                                            l9167 2E38                                              l9159 2DA0  
                                            l8711 2BF6                                              l8703 2B90  
                                            l8631 29B2                                              l8623 2996  
                                            l8615 296C                                              l8607 293C  
                                            l8391 1CAC                                              l8383 1C60  
                                            l8375 1C3E                                              l8367 1C14  
                                            l8295 19F4                                              l8287 19E4  
                                            l8279 19D4                                              l8455 44E8  
                                            l8463 4528                                              l9431 0A00  
                                            l9423 09B4                                              l9415 0956  
                                            l9407 08E2                                              l9351 0664  
                                            l9343 05B4                                              l9327 04E4  
                                            l9335 0524                                              l9319 04AE  
                                            l9255 01FC                                              l9239 013A  
                                            l9087 375E                                              l9079 3724  
                                            l9097 530C                                              l9521 381E  
                                            l9505 379C                                              l8553 3B9C  
                                            l8545 3B3A                                              l8561 3BD6  
                                            l8537 3B04                                              l8529 3AB2  
                                            l8449 5600                                              l9193 2F66  
                                            l9185 2F34                                              l9177 2EE0  
                                            l9169 2E3E                                              l8721 2C58  
                                            l8713 2C02                                              l8705 2B9E  
                                            l8633 29C2                                              l8641 29EC  
                                            l8625 299C                                              l8617 297C  
                                            l8609 294A                                              l8801 1EF2  
                                            l8393 1CBA                                              l8385 1C76  
                                            l8369 1C22                                              l8377 1C40  
                                            l8289 19E8                                              l8297 19F8  
                                            l8465 453A                                              l8457 4510  
                                            l8473 5100                                              l8481 5078  
                                            l9441 0A3E                                              l9433 0A04  
                                            l9425 09D0                                              l9417 098A  
                                            l9409 08F4                                              l9361 0722  
                                            l9353 0698                                              l9345 060C  
                                            l9337 052C                                              l9329 04F2  
                                            l9281 035E                                              l9273 0296  
                                            l9257 020E                                              l9249 01A0  
                                            l9601 1410                                              l9089 376C  
                                            l9099 5320                                              l9531 38C6  
                                            l9523 3852                                              l9515 37F8  
                                            l9507 37B8                                              l8563 3BE6  
                                            l8555 3BBC                                              l8547 3B4E  
                                            l8539 3B08                                              l8571 3DA8  
                                            l9195 2F6E                                              l9187 2F42  
                                            l9179 2EFA                                              l8731 2CB6  
                                            l8723 2C6E                                              l8715 2C10  
                                            l8707 2BCC                                              l8651 2A2E  
                                            l8643 29FC                                              l8635 29D2  
                                            l8627 29A2                                              l8619 297E  
                                            l8811 1F48                                              l8803 1F02  
                                            l8395 1CF4                                              l8379 1C4E  
                                            l8299 19FC                                              l8459 451C  
                                            l8491 3272                                              l8475 5110  
                                            l8483 508A                                              l9451 0A70  
                                            l9443 0A46                                              l9435 0A14  
                                            l9427 09E2                                              l9419 0992  
                                            l9371 0796                                              l9363 0732  
                                            l9355 06CA                                              l9347 0640  
                                            l9339 053C                                              l9291 03BE  
                                            l9283 0366                                              l9275 02CA  
                                            l9259 022A                                              l9267 0246  
                                            l9611 149A                                              l9603 141E  
                                            l9701 5528                                              l9533 38D8  
                                            l9517 380E                                              l9509 37EE  
                                            l8565 3C06                                              l8557 3BBE  
                                            l8549 3B5C                                              l8581 3E08  
                                            l8573 3DB6                                              l9189 2F48  
                                            l9197 2F7E                                              l8901 4884  
                                            l8733 2CBC                                              l8725 2C88  
                                            l8717 2C3A                                              l8645 2A12  
                                            l8637 29E2                                              l8629 29B0  
                                            l8821 1FEC                                              l8813 1F64  
                                            l8805 1F0E                                              l8389 1CA0  
                                            l8397 1CF6                                              l8469 457E  
                                            l8493 3286                                              l8477 5042  
                                            l9453 0A76                                              l9461 0AC6  
                                            l9445 0A54                                              l9437 0A26  
                                            l9429 09F0                                              l9381 0852  
                                            l9373 07BA                                              l9365 0766  
                                            l9357 06E0                                              l9349 0646  
                                            l9293 03D2                                              l9277 02D0  
                                            l9285 0398                                              l9269 0260  
                                            l9541 4682                                              l9621 1542  
                                            l9613 14AA                                              l9703 553A  
                                            l9535 38EA                                              l9527 3888  
                                            l9519 3816                                              l8559 3BD0  
                                            l8591 3E7E                                              l8583 3E26  
                                            l8575 3DD6                                              l8911 48B8  
                                            l8903 4892                                              l8735 2CBE  
                                            l8727 2CA4                                              l8719 2C3E  
                                            l8671 2AB0                                              l8663 2A66  
                                            l8647 2A22                                              l8655 2A42  
                                            l8639 29E4                                              l8831 2042  
                                            l8823 1FFA                                              l8815 1F70  
                                            l8807 1F1E                                              l8751 1DA4  
                                            l8743 1D78                                              l8399 1D06  
                                            l8495 3294                                              l8487 31FA  
                                            l9471 0B16                                              l9463 0AD8  
                                            l9455 0A9C                                              l9447 0A5C  
                                            l9439 0A2E                                              l9391 089A  
                                            l9383 0860                                              l9375 081E  
                                            l9367 0776                                              l9359 0712  
                                            l9295 03DA                                              l9287 03A8  
                                            l9279 032A                                              l9551 46DE  
                                            l9543 46AC                                              l9631 15D8  
                                            l9623 1574                                              l9615 14DC  
                                            l9607 1466                                              l9711 57C6  
                                            l9561 5844                                              l9705 553C  
                                            l8593 3E9E                                              l8585 3E2E  
                                            l8577 3DDA                                              l8569 3DA4  
                                            l8913 48BE                                              l8905 4898  
                                            l8729 2CA8                                              l8681 2AF6  
                                            l8673 2AB8                                              l8665 2A80  
                                            l8657 2A52                                              l8649 2A2A  
                                            l8833 2050                                              l8825 2018  
                                            l8817 1F8C                                              l8809 1F38  
                                            l8761 1DE0                                              l8753 1DB4  
                                            l8745 1D84                                              l8489 321A  
                                            l9473 0B1E                                              l9465 0AF2  
                                            l9457 0AB8                                              l9449 0A64  
                                            l9393 089E                                              l9377 082C  
                                            l9385 0868                                              l9369 078A  
                                            l9297 03F4                                              l9289 03AC  
                                            l9553 46FA                                              l9641 1680  
                                            l9633 1620                                              l9617 14EC  
                                            l9609 1478                                              l9801 4EA4  
                                            l9713 57CE                                              l9721 545C  
                                            l9707 554E                                              l8595 3EB0  
                                            l8587 3E42                                              l8579 3DE8  
                                            l8907 48AE                                              l8915 48C4  
                                            l8931 49C6                                              l8923 49A8  
                                            l8691 2B4E                                              l8683 2B14  
                                            l8675 2AC8                                              l8667 2A90  
                                            l8659 2A52                                              l8843 20BA  
                                            l8851 2102                                              l8835 2054  
                                            l8827 2022                                              l8819 1FB6  
                                            l8771 1E16                                              l8763 1DE6  
                                            l8755 1DC4                                              l8747 1D92  
                                            l8499 3306                                              l9491 0BA4  
                                            l9483 0B6E                                              l9475 0B2E  
                                            l9467 0AF8                                              l9459 0AC0  
                                            l9395 08A4                                              l9387 087C  
                                            l9379 0840                                              l9299 040E  
                                            l9555 470C                                              l9547 46B8  
                                            l9651 1718                                              l9643 168E  
                                            l9627 1590                                              l9619 151E  
                                            l9811 4EDE                                              l9803 4EAC  
                                            l9571 57AC                                              l9563 5732  
                                            l9731 547A                                              l9723 5460  
                                            l9715 5446                                              l8589 3E50  
                                            l8597 3EB6                                              l8917 48D4  
                                            l8909 48B6                                              l8941 49FE  
                                            l8933 49D4                                              l8925 49AC  
                                            l8693 2B54                                              l8685 2B16  
                                            l8677 2ADC                                              l8669 2AA0  
                                            l8861 2176                                              l8853 211C  
                                            l8845 20C6                                              l8837 2062  
                                            l8829 2030                                              l8773 1E26  
                                            l8765 1DF4                                              l8757 1DCA  
                                            l8749 1D94                                              l9493 0BAA  
                                            l9485 0B80                                              l9477 0B34  
                                            l9469 0B0A                                              l9397 08B0  
                                            l9389 088A                                              l9557 4734  
                                            l9549 46C6                                              l9645 16BE  
                                            l9637 1658                                              l9629 15B4  
                                            l9581 1310                                              l9813 4EE6  
                                            l9805 4EB4                                              l9821 3F1A  
                                            l9565 5828                                              l9741 54A4  
                                            l9573 57E8                                              l9733 5488  
                                            l9725 5464                                              l9717 544A  
                                            l9901 313A                                              l8599 3EC6  
                                            l8919 48DC                                              l8943 4A0C  
                                            l8951 4A36                                              l8935 49DC  
                                            l8927 49BA                                              l8695 2B5E  
                                            l8687 2B26                                              l8679 2AEA  
                                            l8863 2184                                              l8855 2130  
                                            l8847 20D4                                              l8839 2090  
                                            l8791 1EA8                                              l8783 1E70  
                                            l8775 1E2C                                              l8767 1DF6  
                                            l8759 1DDA                                              l9487 0B8C  
                                            l9479 0B3A                                              l9399 08C0  
                                            l9671 1856                                              l9655 1786  
                                            l9639 166A                                              l9591 137C  
                                            l9583 1334                                              l9815 4EE8  
                                            l9807 4EC2                                              l9831 3FA6  
                                            l9823 3F1C                                              l9567 5830  
                                            l9751 54C2                                              l9743 54A8  
                                            l9735 548E                                              l9575 57F0  
                                            l9727 5472                                              l9719 544E  
                                            l9911 3182                                              l9903 314E  
                                            l8881 4826                                              l8953 4A46  
                                            l8945 4A22                                              l8937 49EE  
                                            l8929 49C2                                              l8697 2B6C  
                                            l8689 2B38                                              l8961 4BDE  
                                            l8865 2186                                              l8857 214A  
                                            l8849 20FE                                              l8793 1EC0  
                                            l8785 1E7C                                              l8777 1E4C  
                                            l8769 1E06                                              l8873 54D6  
                                            l9489 0B94                                              l9657 1798  
                                            l9665 1810                                              l9649 16EA  
                                            l9593 1384                                              l9585 1342  
                                            l9681 1880                                              l9817 4EEE  
                                            l9809 4EC8                                              l9841 4046  
                                            l9825 3F22                                              l9577 5808  
                                            l9569 57A4                                              l9753 54D0  
                                            l9745 54AC                                              l9737 5492  
                                            l9729 5476                                              l9761 25FA  
                                            l9921 31D6                                              l9913 31AA  
                                            l9905 3156                                              l9931 3910  
                                            l9691 50A6                                              l9499 3780  
                                            l8891 4856                                              l8883 4834  
                                            l8955 4A4E                                              l8947 4A2A  
                                            l8939 49F6                                              l8699 2B7E  
                                            l8971 4C56                                              l8963 4BEE  
                                            l8859 2166                                              l8867 218C  
                                            l8795 1ECC                                              l8787 1E86  
                                            l8779 1E5C                                              l8875 54E6  
                                            l9683 18A4                                              l9667 1834  
                                            l9675 1864                                              l9659 17CC  
                                            l9595 1392                                              l9587 1354  
                                            l9843 4046                                              l9827 3F46  
                                            l9835 3FB8                                              l9819 3F0A  
                                            l9579 5810                                              l9747 54BA  
                                            l9739 5496                                              l9771 26B0  
                                            l9763 2636                                              l9755 257C  
                                            l9923 31E6                                              l9915 31BA  
                                            l9907 3162                                              l8981 43F2  
                                            l9941 399E                                              l9933 3932  
                                            l9693 50CA                                              l8893 485A  
                                            l8885 483C                                              l8949 4A30  
                                            l8965 4C1C                                              l8869 2190  
                                            l8797 1ED8                                              l8789 1E9C  
                                            l9677 1872                                              l9669 1842  
                                            l9597 13B6                                              l9589 1358  
                                            l9861 52F4                                              l9853 52B6  
                                            l9845 4058                                              l9837 3FFA  
                                            l9829 3F76                                              l9749 54BE  
                                            l9925 55A6                                              l9781 28BC  
                                            l9773 277E                                              l9765 265A  
                                            l9757 259C                                              l9917 31C2  
                                            l9909 316A                                              l8991 4480  
                                            l8983 4402                                              l8975 4386  
                                            l9951 39E0                                              l9943 39A4  
                                            l9935 3964                                              l9695 50CE  
                                            l8895 4862                                              l8887 4840  
                                            l8879 4822                                              l8967 4C2C  
                                            l8959 4BB0                                              l8799 1EE6  
                                            l9599 13F0                                              l9791 4FE0  
                                            l9855 52C8                                              l9839 400C  
                                            l9927 55D8                                              l9783 28F8  
                                            l9775 27EA                                              l9767 2678  
                                            l9759 25E6                                              l9919 31CE  
                                            l9871 4D32                                              STR_1 7F62  
                                            STR_2 7F49                                              l8993 4486  
                                            l8985 4410                                              l8977 43B4  
                                            l9961 39F0                                              l9945 39A6  
                                            l9937 396A                                              l9689 50A2  
                                            l9697 551E                                              l8897 4874  
                                            l8889 484E                                              l8969 4C50  
                                            l9793 4FEE                                              l9857 52D0  
                                            l9929 55E0                                              l9785 291C  
                                            l9777 281C                                              l9865 4CF4  
                                            STR_3 7E43                                              STR_4 7FA4  
                                            l8987 4422                                              l8979 43C4  
                                            l9963 3A02                                              l9947 39D8  
                                            l9939 396C                                              l9699 5526  
                                            l8899 487C                                              l9795 501C  
                                            l9859 52D8                                              l9779 2888  
                                            l9891 2FF2                                              l9867 4D00  
                                            STR_5 7F91                                              STR_6 7FB6  
                                            l8989 4430                                              l9965 3A16  
                                            l9949 39DE                                              l8997 565E  
                                            l9789 4FD8                                              l9885 5758  
                                            l9797 4E8A                                              l9893 30B4  
                                            l9869 4D1C                                              STR_7 7FD2  
                                            STR_8 7FC7                                              l9991 3A5A  
                                            l8999 5674                                              l9799 4E92  
                                            l9895 30E4                                              l9887 2FA8  
                                            l9879 4D52                                              STR_9 7FDC  
                                            l9993 3A6A                                              l9985 3A26  
                                            l9897 30EC                                              l9889 2FB2  
                                            l9995 3A7A                                              l9987 3A36  
                                            l9899 310E                                              l9989 3A4A  
                                            _RCIF 007CF5                                              u8120 476A  
                                            u9000 3B5C                                              u8200 4F8C  
                                            u8121 4766                                              u9001 3B58  
                                            u8201 4F88                                              u8130 477C  
                                            u9010 3B9C                                              u8210 4FC6  
                                            u8131 4778                                              u9011 3B98  
                                            u8211 4FC2                                              u8220 407C  
                                            u8140 47A4                                              u9020 3BE6  
                                            u9100 295C                                              u8300 18F4  
                                            u8221 4078                                              u8141 47A0  
                                            u9021 3BE2                                              u9101 2958  
                                            u8301 18F0                                              u8230 409E  
                                            u8150 47DA                                              u9030 3DB6  
                                            u9110 296C                                              u8310 1936  
                                            u8231 409A                                              u8151 47D6  
                                            u9031 3DB2                                              u9111 2968  
                                            u8311 1932                                              u8240 40D8  
                                            u8160 55A4                                              u9040 3DE8  
                                            u9200 2B38                                              u9120 29B0  
                                            u8400 1A68                                              u8320 194C  
                                            u8241 40D4                                              u8161 55A0  
                                            u9041 3DE4                                              u9201 2B34  
                                            u9121 29AC                                              u8401 1A64  
                                            u8321 1948                                              u8250 40FA  
                                            u8170 56F6                                              u9050 3E26  
                                            u9210 2B4E                                              u9130 29C2  
                                            u8410 1A86                                              u8330 195E  
                                            u8251 40F6                                              u8171 56F2  
                                            u9051 3E22                                              u9211 2B4A  
                                            u9131 29BE                                              u8411 1A82  
                                            u8331 195A                                              u8260 4122  
                                            u9060 3E50                                              u9300 2C88  
                                            u9220 2B6C                                              u9140 29D2  
                                            u8500 1BD6                                              u8420 1AA6  
                                            u8340 196E                                              u8180 5656  
                                            u8261 411E                                              u9061 3E4C  
                                            u9301 2C84                                              u9221 2B68  
                                            u9141 29CE                                              u8501 1BD2  
                                            u8421 1AA2                                              u8341 196A  
                                            u8181 5650                                              u8270 4154  
                                            u9070 3E7E                                              u9310 2CB6  
                                            u9230 2B8C                                              u9150 2A12  
                                            u8510 1BE6                                              u8430 1AB4  
                                            u8350 19AA                                              u8190 5658  
                                            u8271 4150                                              u9071 3E7A  
                                            u9311 2CB2                                              u9231 2B88  
                                            u9151 2A0E                                              u8511 1BE2  
                                            u8431 1AB0                                              u8351 19A6  
                                            u9080 3EC6                                              u9240 2B9E  
                                            u9160 2A52                                              u9400 1FD6  
                                            u9320 1D92                                              u8600 1CBA  
                                            u8520 1C12                                              u8440 1AC4  
                                            u8360 19B8                                              u8280 18D2  
                                            u9081 3EC2                                              u9241 2B9A  
                                            u9161 2A4E                                              u9321 1D8E  
                                            u8601 1CB6                                              u8521 1C0E  
                                            u8441 1AC0                                              u8361 19B4  
                                            u8281 18CE                                              u9250 2BCC  
                                            u9170 2AC8                                              u9090 294A  
                                            u9410 2030                                              u9330 1DA4  
                                            u8610 1CF4                                              u8530 1C22  
                                            u8450 1AF6                                              u8370 1A26  
                                            u8290 18E4                                              u9251 2BC8  
                                            u9171 2AC4                                              u9091 2946  
                                            u9411 202C                                              u9331 1DA0  
                                            u8611 1CF0                                              u8531 1C1E  
                                            u8451 1AF2                                              u8371 1A22  
                                            u8291 18E0                                              u8700 497A  
                                            u9260 2BE2                                              u9180 2AEA  
                                            u9500 2184                                              u9420 2050  
                                            u9340 1DB4                                              u8620 1D06  
                                            u8540 1C3E                                              u8460 1B04  
                                            u8380 1A3E                                              u8701 4976  
                                            u9261 2BDE                                              u9181 2AE6  
                                            u9501 2180                                              u9421 204C  
                                            u9405 1FCC                                              u9341 1DB0  
                                            u8621 1D02                                              u8541 1C3A  
                                            u8461 1B00                                              u8381 1A38  
                                            u8710 5600                                              u9510 4834  
                                            u9270 2BF6                                              u9190 2B14  
                                            u9430 2062                                              u9350 1DF4  
                                            u8630 1D16                                              u8550 1C4E  
                                            u8470 1B22                                              u8390 1A40  
                                            u8711 55FC                                              u9511 4830  
                                            u9271 2BF2                                              u9191 2B10  
                                            u9431 205E                                              u9351 1DF0  
                                            u8631 1D12                                              u8551 1C4A  
                                            u8471 1B1E                                              u9520 484E  
                                            u9600 4A0C                                              u9280 2C10  
                                            u9440 2090                                              u9360 1E06  
                                            u8640 1D36                                              u8560 1C60  
                                            u8480 1B5A                                              u8720 44CA  
                                            u8800 515A                                              u9521 484A  
                                            u9601 4A08                                              u9281 2C0C  
                                            u9441 208C                                              u9361 1E02  
                                            u8641 1D32                                              u8561 1C5C  
                                            u8481 1B56                                              u8801 5156  
                                            u9530 4874                                              u9610 4A22  
                                            u9290 2C58                                              u9450 20A6  
                                            u9370 1E16                                              u8650 1D48  
                                            u8570 1C76                                              u8490 1BA0  
                                            u8730 44E8                                              u8810 5072  
                                            u9531 4870                                              u9611 4A1E  
                                            u9291 2C54                                              u9451 20A2  
                                            u9371 1E12                                              u8651 1D44  
                                            u8571 1C72                                              u8491 1B9C  
                                            u8731 44E4                                              u8811 506C  
                                            u9700 4480                                              u9540 4892  
                                            u9620 4A46                                              u9460 20BA  
                                            u9380 1E4C                                              u8660 1D64  
                                            u8580 1C8C                                              u8740 4510  
                                            u8900 3342                                              u8820 5074  
                                            u9701 447C                                              u9541 488E  
                                            u9621 4A42                                              u9461 20B6  
                                            u9381 1E48                                              u8661 1D60  
                                            u8581 1C88                                              u8741 450C  
                                            u8725 44C0                                              u8901 333E  
                                            u8670 48F4                                              u9550 48AE  
                                            u9630 4BDE                                              u9470 20D4  
                                            u9390 1E5C                                              u9710 5674  
                                            u8590 1CA0                                              u8750 453A  
                                            u8910 3396                                              u8830 508A  
                                            u8671 48F0                                              u9551 48AA  
                                            u9631 4BDA                                              u9471 20D0  
                                            u9391 1E58                                              u9711 5670  
                                            u8591 1C9C                                              u8751 4536  
                                            u8831 5086                                              u8680 4916  
                                            u9560 48D4                                              u9640 4C1C  
                                            u9480 211C                                              u9720 4296  
                                            u8920 33B2                                              u8840 3244  
                                            u9800 35EC                                              u8681 4912  
                                            u9561 48D0                                              u9641 4C18  
                                            u9481 2118                                              u9721 4292  
                                            u8921 33AE                                              u9801 35E8  
                                            u8690 496C                                              u9570 49BA  
                                            u9650 4C50                                              u9490 214A  
                                            u9730 42CA                                              u8770 4574  
                                            u8930 33EE                                              u8850 3272  
                                            u9810 3648                                              u8691 4968  
                                            u9571 49B6                                              u9651 4C4C  
                                            u9491 2146                                              u8771 456E  
                                            u8931 33EA                                              u8915 338C  
                                            u8851 326E                                              u9811 3644  
                                            u9660 43B4                                              u8940 56C6  
                                            u9900 534E                                              u9580 49D4  
                                            u9740 42F8                                              u8780 4576  
                                            u8860 3294                                              u9820 369E  
                                            u9661 43B0                                              u8941 56C0  
                                            u9901 534A                                              u9581 49D0  
                                            u9741 42F4                                              u8765 454C  
                                            u8861 3290                                              u8845 323A  
                                            u9821 369A                                              u9670 43F2  
                                            u8950 56C8                                              u9590 49EE  
                                            u9750 430C                                              u8790 5148  
                                            u9830 36E8                                              u9910 3490  
                                            u9671 43EE                                              u9591 49EA  
                                            u9751 4308                                              u9735 42C0  
                                            u9831 36E4                                              u9911 348C  
                                            u9680 4410                                              u8960 3AB2  
                                            u9760 4334                                              u8880 3302  
                                            u9840 3706                                              u9681 440C  
                                            u8961 3AAE                                              u9761 4330  
                                            u8881 32FE                                              u9841 3702  
                                            u9690 4430                                              u8970 3AE4  
                                            u9770 4354                                              u8890 3326  
                                            u9850 3716                                              u9691 442C  
                                            u8971 3AE0                                              u9771 4350  
                                            u8875 32A8                                              u9851 3712  
                                            u9940 5170                                              u9780 4364  
                                            u8876 32B2                                              u9860 3724  
                                            u9941 516C                                              u8981 3B0E  
                                            u9781 4360                                              u8877 32C2  
                                            u8797 513E                                              u9861 3720  
                                            u9925 352A                                              u8990 3B32  
                                            u9950 2CFA                                              u9870 375E  
                                            u9790 35DE                                              u9926 3534  
                                            u8991 3B2E                                              u9951 2CF4  
                                            u8895 331C                                              u9871 375A  
                                            u9791 35DA                                              u9935 356E  
                                            u9927 3544                                              u9960 2CFC  
                                            u9880 376C                                              u9936 3578  
                                            u9881 3768                                              u9937 3588  
                                            u9890 5320                                              u9970 2D12  
                                            u9891 531C                                              u9971 2D0E  
                                            u9980 2D42                                              u9981 2D3E  
                                            u9990 2D5E                                              u9991 2D5A  
                                ??_forzarParoAuto 0006                                              abs@a 0018  
                                            _dbuf 0142                                              _atoi 3780  
                                            _ctoa 515C                                              _main 4C5A  
                                            _dtoa 2CCA                                              _prec 0134  
                                            _nout 0130                                              pad@i 001D  
                                            pad@p 001A                                              fsr0h 000FEA  
                                            fsr1h 000FE2                                              indf0 000FEF  
                                            fsr2h 000FDA                                              fsr0l 000FE9  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            pad@w 001F                                              map@x 0020  
                                            fsr2l 000FD9                                              btemp 005A  
                                   ___fpclassifyf 448A                          __end_of_decidirDireccion 1310  
                                            prodh 000FF4                                              prodl 000FF3  
                                            start 000E                                     __CFG_IESO$OFF 000000  
                                 ___fldiv@new_exp 0065                                      _tolower$1557 0012  
                                   __CFG_MCLRE$ON 000000                                     ?_leerSensores 0001  
                                    ___param_bank 000000                                             ??_PID 0088  
                                           ??_abs 001A                                             ??_map 0034  
                                           ??_pad 001C                                   ??_velocidadBaja 0054  
                                   __CFG_PLLDIV$1 000000                                    __CFG_CCP2MX$ON 000000  
                                           l10011 3A96                                             l10021 5704  
                                           l10101 0BEC                                             l10031 4D94  
                                           l10023 5708                                             l10111 0C48  
                                           l10103 0C04                                             l10017 3A9C  
                                           l10009 3A86                                             l10033 4DA4  
                                           l10041 4DD4                                             l10025 572A  
                                           l10121 0CAE                                             l10113 0C50  
                                           l10105 0C14                                             l10035 4DB4  
                                           l10211 0E22                                             l10115 0C6A  
                                           l10107 0C2C                                             l10051 3D52  
                                           l10037 4DC4                                             l10029 4D90  
                                           l10213 0E2E                                             l10141 0D7E  
                                           l10125 0CD2                                             l10117 0C7A  
                                           l10133 0D0A                                             l10109 0C38  
                                           l10053 3D62                                             l10231 0E60  
                                           l10207 0DE8                                             l10151 0DD4  
                                           l10143 0D9E                                             l10127 0CE6  
                                           l10119 0C9A                                             l10135 0D44  
                                           l10047 3C28                                             l10071 41C4  
                                           l10063 417A                                             l10401 1162  
                                           l10209 0E02                                             l10145 0DA6  
                                           l10137 0D5C                                             l10049 3D42  
                                           l10081 4220                                             l10073 41DA  
                                           l10065 4186                                             l10403 117A  
                                           l10411 121A                                             l10251 0E8C  
                                           l10227 0E36                                             l10147 0DC4  
                                           l10139 0D76                                             l10075 41EA  
                                           l10067 419E                                             l10421 12C0  
                                           l10413 124C                                             l10405 11AA  
                                           l10341 0F34                                             l10309 0F00  
                                           l10253 0EAA                                             l10229 0E54  
                                           l10149 0DC8                                             l10077 41EE  
                                           l10069 41AA                                             l10431 1308  
                                           l10423 12C8                                             l10415 1254  
                                           l10407 11AE                                             l10351 0F94  
                                           l10255 0EB6                                             l10079 4206  
                                           l10503 4640                                             l10511 535C  
                                           l10425 12DA                                             l10417 1286  
                                           l10409 120A                                             l10361 0FE2  
                                           l10353 0F98                                             l10249 0E6C  
                                           l10345 0F3C                                             l10097 0BCC  
                                           l10089 4240                                             l10505 4674  
                                           l10601 2222                                             l10521 537C  
                                           l10531 4F00                                             l10427 12EA  
                                           l10419 128E                                             l10371 1042  
                                           l10363 0FFA                                             l10339 0F10  
                                           l10347 0F78                                             l10355 0FA2  
                                           l10099 0BD4                                             l10451 4B22  
                                           l10611 229A                                             l10603 222E  
                                           l10541 4F62                                             l10533 4F02  
                                           l10429 12FA                                             l10381 10D8  
                                           l10373 1072                                             l10365 1006  
                                           l10357 0FBA                                             l10349 0F88  
                                           l10461 4B5E                                             l10701 24DE  
                                           l10621 22DA                                             l10613 22AC  
                                           l10605 2232                                             l10517 5360  
                                           l10543 4F64                                             l10535 4F36  
                                           l10527 4EFE                                             l10383 10DC  
                                           l10375 107A                                             l10367 1018  
                                           l10359 0FD2                                             l10391 1106  
                                           l10295 0EBE                                             l10463 4B7C  
                                           l10471 4B9E                                             l10455 4B34  
                                           l10447 4B04                                             l10711 252E  
                                           l10703 24EA                                             l10631 22FA  
                                           l10623 22E2                                             l10615 22BE  
                                           l10607 2238                                             l10551 5858  
                                           l10545 4F66                                             l10537 4F5E  
                                           l10529 4EFE                                             l10393 1116  
                                           l10385 10EC                                             l10377 10AC  
                                           l10369 103A                                             l10297 0EDE  
                                           l10481 53C6                                             l10473 4BA2  
                                           l10465 4B80                                             l10457 4B52  
                                           l10449 4B16                                             l11281 2550  
                                           l10713 2532                                             l10641 236A  
                                           l10625 22E6                                             l10617 22CE  
                                           l10609 223C                                             l10561 4A8C  
                                           l10553 4A58                                             l10547 4F68  
                                           l10539 4F60                                             l10395 111E  
                                           l10387 10F8                                             l10379 10B4  
                                           l11291 0D26                                             l10483 53CA  
                                           l10491 45E0                                             l11283 4D66  
                                           l10467 4B88                                             l10459 4B56  
                                           l10707 2508                                             l10651 23B6  
                                           l10643 237C                                             l10635 2302  
                                           l10627 22EE                                             l10619 22D6  
                                           l11275 4AB2                                             l10555 4A5C  
                                           l10549 4F6A                                             l10397 1146  
                                           l10389 10FC                                             l11293 0F5A  
                                           l10485 53E8                                             l10477 53AA  
                                           l11285 4656                                             l10493 45F2  
                                           l10469 4B8C                                             l10709 251C  
                                           l10661 23E2                                             l10653 23BA  
                                           l10645 2386                                             l10637 2348  
                                           l10629 22F2                                             l10717 253A  
                                           l11277 5390                                             l10581 542A  
                                           l10557 4A6C                                             l10565 4A9C  
                                           l10901 4C74                                             l11295 35B4  
                                           l10399 114A                                             l10479 53B6  
                                           l11287 4256                                             l10495 45F8  
                                           l10487 4588                                             l10671 2414  
                                           l10663 23F4                                             l10647 239C  
                                           l10639 235A                                             l11279 231A  
                                           l10591 21D2                                             l10583 5440  
                                           l10575 53FA                                             l10559 4A7C  
                                           l10567 4AD8                                             l10911 4C7E  
                                           l10903 4C76                                             l11297 383C  
                                           l11289 3FCC                                             l10497 4610  
                                           l10489 45D0                                             l10681 244E  
                                           l10673 2426                                             l10649 23B0  
                                           l10657 23C0                                             l10593 21E2  
                                           l10585 21A2                                             l10577 53FE  
                                           l10569 4AF6                                             l10921 4C90  
                                           l10913 4C80                                             l10905 4C78  
                                           l11299 4DE8                                             l10499 4628  
                                           l10683 2452                                             l10675 2434  
                                           l10659 23D2                                             l10595 21F4  
                                           l10587 21A8                                             l10579 5414  
                                           l10931 4CD2                                             l10923 4C96  
                                           l10915 4C82                                             l10907 4C7A  
                                           l10685 245A                                             l10677 2438  
                                           l10693 2474                                             l10669 2402  
                                           l10597 220A                                             l10589 21C0  
                                           l10941 4CDE                                             l10933 4CD6  
                                           l10925 4C9A                                             l10917 4C84  
                                           l10909 4C7C                                             l10695 2486  
                                           l10687 245E                                             l10679 243E  
                                           l10599 221A                                             l10943 4CE6  
                                           l10927 4CAE                                             l10919 4C8A  
                                           l10697 2498                                             l10689 246A  
                                           l10929 4CC0                                             l10881 4C60  
                                           l10699 24D8                                             l10939 4CDA  
                                           l10891 4C6A                                             l10883 4C62  
                                           l10893 4C6C                                             l10885 4C64  
                                           l10895 4C6E                                             l10887 4C66  
                                           l10879 4C5A                                             l10897 4C70  
                                           l10889 4C68                                             l10899 4C72  
                                   ___fltol@sign1 007A                                   __end_of___aldiv 4176  
                                 __end_of___aodiv 3C28                                             ?_atoi 000D  
                                           ?_ctoa 0021                                   __end_of___fladd 1D78  
                                           ?_main 0001                                             ?_dtoa 0021  
                                 __end_of___aomod 3F08                                   __end_of___fldiv 2CCA  
                                 __end_of___awdiv 48E6                                   __end_of___flneg 5696  
                                           STR_10 7FE5                                             STR_11 7ECA  
                                           STR_20 7DE4                                             STR_12 7D7B  
                                           STR_13 7E65                                             STR_21 7DB3  
                                           STR_14 7F7A                                             STR_22 7E14  
                                           STR_31 7FFB                                             STR_23 7FEB  
                                           STR_15 7EEA                                             STR_24 7FF3  
                                           STR_16 7EA9                                             STR_33 7FFB  
                                           STR_17 7F2A                                             STR_18 7F0A  
                                           STR_27 7FEF                                             STR_19 7E87  
                                           STR_28 7FF7                                   __end_of___awmod 4A58  
                                 __end_of___flmul 21A2                                   __end_of___flsub 551C  
                                 __end_of___fltol 4386                                             u10000 2D8C  
                                           u10001 2D88                                             u10010 2D9A  
                                           u10011 2D96                                             u10020 2EC2  
                                           u10100 003A                                             u10021 2EBE  
                                           u10101 0036                                             u10030 2EE0  
                                           u10110 008A                                             u10031 2EDC  
                                           u10111 0086                                             u10040 2EFA  
                                           u10200 01F8                                             u10120 0098  
                                           u11000 2678                                             u10041 2EF6  
                                           u10121 0094                                             u11001 2674  
                                           u10050 2F14                                             u10210 020E  
                                           u10130 00AA                                             u11010 277E  
                                           u10051 2F10                                             u10211 020A  
                                           u10131 00A6                                             u11011 277A  
                                           u10060 2F22                                             u10300 0452  
                                           u10220 0292                                             u10140 00F2  
                                           u11100 3F46                                             u11020 281C  
                                           u10061 2F1E                                             u10301 044E  
                                           u10221 028E                                             u10141 00EE  
                                           u11101 3F42                                             u11021 2818  
                                           u10070 2F34                                             u10310 0488  
                                           u10230 0326                                             u10150 0122  
                                           u11110 3F54                                             u11030 28DC  
                                           u10071 2F30                                             u10311 0484  
                                           u10231 0322                                             u10151 011C  
                                           u11111 3F50                                             u10080 2F42  
                                           u10400 0712                                             u10320 04AE  
                                           u10240 0398                                             u10160 0124  
                                           u11120 3F66                                             u11040 28F8  
                                           u11200 313A                                             u10081 2F3E  
                                           u10401 070E                                             u10321 04AA  
                                           u10241 0394                                             u11121 3F62  
                                           u11041 28F4                                             u11201 3136  
                                           u10090 2F5A                                             u10410 0722  
                                           u10330 04C0                                             u10250 03BE  
                                           u10170 013A                                             u11050 5038  
                                           u11130 3F76                                             u11210 3182  
                                           u10091 2F56                                             u10411 071E  
                                           u10331 04BC                                             u10251 03BA  
                                           u10171 0136                                             u11051 5034  
                                           u11131 3F72                                             u11035 28D2  
                                           u11211 317E                                             u11300 3A36  
                                           u10500 09B4                                             u10420 078A  
                                           u10340 04CE                                             u10260 03D2  
                                           u10180 01C6                                             u11060 4EA4  
                                           u11140 3F84                                             u11220 31AA  
                                           u11301 3A32                                             u10501 09B0  
                                           u10421 0786                                             u10341 04CA  
                                           u10261 03CE                                             u10181 01C2  
                                           u11061 4EA0                                             u11141 3F80  
                                           u11221 31A6                                             u11310 3A6A  
                                           u10510 09D0                                             u10430 082C  
                                           u10350 04E4                                             u10270 03F4  
                                           u10190 01F6                                             u11070 4EC2  
                                           u11150 3F96                                             u11230 55D8  
                                           u12110 4CC0                                             u11311 3A66  
                                           u10511 09CC                                             u10431 0828  
                                           u10351 04E0                                             u10271 03F0  
                                           u10191 01F0                                             u11071 4EBE  
                                           u11151 3F92                                             u11231 55D4  
                                           u12111 4CBC                                             u11320 3A96  
                                           u11240 3932                                             u10600 0B6A  
                                           u10520 09E2                                             u10440 0840  
                                           u10360 04F2                                             u10280 041E  
                                           u11400 0C48                                             u11080 4EDE  
                                           u11160 3FA6                                             u12120 4CD2  
                                           u11321 3A92                                             u11241 392E  
                                           u10521 09DE                                             u10441 083C  
                                           u10361 04EE                                             u10281 041A  
                                           u11401 0C44                                             u11081 4EDA  
                                           u11161 3FA2                                             u12121 4CCE  
                                           u11250 3964                                             u11330 572A  
                                           u10610 0B80                                             u10530 09F0  
                                           u10450 0852                                             u10370 051C  
                                           u10290 0436                                             u11410 0C6A  
                                           u11170 3FB4                                             u11090 3F36  
                                           u11251 3960                                             u11331 5726  
                                           u10611 0B7C                                             u10531 09EC  
                                           u10451 084E                                             u10371 0518  
                                           u10291 0432                                             u11411 0C66  
                                           u11171 3FB0                                             u11091 3F32  
                                           u11260 399E                                             u10620 37B8  
                                           u10540 0A26                                             u10460 0860  
                                           u10380 0664                                             u10700 46DE  
                                           u11500 0E22                                             u11420 0C9A  
                                           u11180 3FFA                                             u11340 419E  
                                 ___awdiv@divisor 0008                                             u11261 399A  
                                           u10621 37B4                                             u10541 0A22  
                                           u10461 085C                                             u10381 0660  
                                           u10701 46DA                                             u11501 0E1E  
                                           u11421 0C96                                             u11181 3FF6  
                                           u11341 419A                                             u11270 39D8  
                                           u10630 37EE                                             u10550 0A54  
                                           u10470 087C                                             u10390 06CA  
                                           u10710 46FA                                             u11510 0E54  
                                           u11430 0CCE                                             u11350 41EA  
                                           u11190 310E                                             u11271 39D4  
                                           u10631 37EA                                             u10551 0A50  
                                           u10471 0878                                             u10391 06C6  
                                           u10711 46F6                                             u11511 0E50  
                                           u11431 0CCA                                             u12207 546A  
                                           u11351 41E6                                             u11191 310A  
                                           u11280 39F0                                             u10640 380A  
                                           u10560 0AD8                                             u10480 088A  
                                           u10720 470C                                             u10800 1478  
                                           u11600 0FFA                                             u11520 0E8C  
                                           u11440 0D06                                             u11360 0BEC  
                                           _T1CON 000FCD                                             u11281 39EC  
                                           u10641 3806                                             u10561 0AD4  
                                           u10481 0886                                             u10721 4708  
                                           u10801 1474                                             u11601 0FF6  
                                           u11521 0E88                                             u11441 0D02  
                                           u11361 0BE8                                             u12217 5480  
                                           u12137 24F6                                             u11290 3A02  
                                           u10650 38C0                                             u10570 0AF2  
                                           u10490 08E2                                             u10730 4734  
                                           u10810 14AA                                             u11610 1018  
                                           u11530 0EAA                                             u11450 0D5C  
                                           u11370 0C04                                             u11291 39FE  
                                           u10651 38BA                                             u10571 0AEE  
                                           u10491 08DE                                             u10731 4730  
                                           u10811 14A6                                             u11611 1014  
                                           u11531 0EA6                                             u11451 0D58  
                                           u11371 0C00                                             u12307 3F1E  
                                           u12227 57FA                                             u12147 4D06  
                                           u10740 5856                                             u10660 38C2  
                                           u10580 0B0A                                             u10900 1798  
                                           u10820 14EC                                             u11700 1286  
                                           u11620 1072                                             u11540 0EDE  
                                           u11460 0D76                                             u11380 0C14  
                                           u10741 5852                                             u12317 5520  
                                           u10581 0B06                                             u10901 1794  
                                           u10821 14E8                                             u11701 1282  
                                           u11621 106E                                             u11541 0EDA  
                                           u11461 0D72                                             u11381 0C10  
                                           u12237 549C                                             u12157 4D26  
                                           u10670 38D8                                             u10590 0B68  
                                           u10910 1834                                             u10830 1542  
                                           u10750 1334                                             u11710 12C0  
                                           u11630 10AC                                             u11550 0EFC  
                                           u11470 0D9E                                             u11390 0C2C  
                                           u10671 38D4                                             u10591 0B62  
                                           u10911 1830                                             u10831 153E  
                                           u10751 1330                                             u11711 12BC  
                                           u11631 10A8                                             u11551 0EF8  
                                           u11471 0D9A                                             u11391 0C28  
                                           u12247 54B2                                             u12167 41B6  
                                           u10920 50C6                                             u10680 38EA  
                                           u10840 15B4                                             u10760 137C  
                                           u11720 12DA                                             u11640 10EC  
                                           u11560 0F88                                             u11480 0DC4  
                                           u11800 21D2                                             u10681 38E6  
                                           u10841 15B0                                             u10761 1378  
                                           u11721 12D6                                             u11641 10E8  
                                           u11561 0F84                                             u11481 0DC0  
                                           u12257 54C8                                             u12177 41CC  
                                           u11801 21CE                                             u10930 50EE  
                                           u10690 46AC                                             u10850 15D8  
                                           u10770 13B6                                             u11730 12EA  
                                           u11650 1116                                             u11570 0FBA  
                                           u11490 0E02                                             u11810 21E2  
                                           u10691 46A8                                             u10851 15D4  
                                           u10771 13B2                                             u11731 12E6  
                                           u11651 1112                                             u11571 0FB6  
                                           u11491 0DFE                                             u12267 57B6  
                                           u12187 4212                                             u11811 21DE  
                                           u10940 50FE                                             u10860 166A  
                                           u10780 1460                                             u11740 12FA  
                                           u11660 1146                                             u11580 0FD2  
                                           u11900 23E2                                             u11820 21F4  
                                           u10941 50FA                                             u10861 1666  
                                           u10781 145A                                             u11741 12F6  
                                           u11661 1142                                             u11581 0FCE  
                                           u12277 5836                                             u12197 5454  
                                           u11901 23DE                                             u11821 21F0  
                                           u10950 554C                                             u10870 1718  
                                           u10790 1462                                             u11670 1162  
                                           u11590 0FE2                                             u11750 4B30  
                                           u11910 23F4                                             u11830 220A  
                                           u10927 50BC                                             u10951 5548  
                                           u10871 1714                                             u11671 115E  
                                           u11591 0FDE                                             u12287 581A  
                                           u11751 4B2C                                             u11911 23F0  
                                           u11831 2206                                             u10880 1780  
                                           u11680 117A                                             u10960 25BC  
                                           u11760 4B52                                             u11920 2414  
                                           u11840 22BE                                             _LATB4 007C54  
                                           u10937 50E4                                             u10881 177A  
                                           u11681 1176                                             u12297 57D8  
                                           u11761 4B4E                                             u11921 2410  
                                           u11841 22BA                                             _LATB5 007C55  
                                           u10890 1782                                             u11690 124C  
                                           u10970 25E6                                             u11770 4B7C  
                                           u11930 2426                                             u11850 22CE  
                                           _LATD2 007C62                                             _LATB6 007C56  
                                           u11691 1248                                             u10971 25E2  
                                           u11771 4B78                                             u11931 2422  
                                           u11851 22CA                                             _LATD3 007C63  
                                           _LATB7 007C57                                             u11780 53E8  
                                           u10980 261A                                             u11940 244E  
                                           u11860 235A                                             u11781 53E4  
                                           u10965 25B2                                             u11941 244A  
                                           u11861 2356                                             u11790 45E0  
                                           u10990 2636                                             u11950 2486  
                                           u11870 236A                                             u11791 45DC  
                                           u10991 2632                                             u11951 2482  
                                           u11871 2366                                             u11960 2498  
                                           u11880 237C                                             u10985 2610  
                                           u11961 2494                                             u11881 2378  
                                           u11970 251C                                             u11890 23D2  
                                           u11971 2518                                             u11891 23CE  
                                           u11980 252E                                             u11981 252A  
                                 __end_of___lwdiv 4EFE                                             i2l320 51BC  
                                           i2l323 51CA                                             i2l328 520C  
                                           i2l284 52AA                                             i2l286 52B2  
                                    main@iniciado 02CC                                   ___awdiv@counter 000A  
                                           _RCREG 000FAE                                      vfpfcnvrt@fmt 00C3  
                                           _TMR1H 000FCF                                             _TMR1L 000FCE  
                                           _SPBRG 000FAF                  decidirDireccion@posicionInvCruce 01EA  
                                   __CFG_USBDIV$1 000000                                             _TXREG 000FAD  
                                   __CFG_PWRT$OFF 000000                                     __CFG_WRT0$OFF 000000  
                                   __CFG_WRT1$OFF 000000                                     __CFG_WRT2$OFF 000000  
                             ___lmul@multiplicand 000A                                     __CFG_WRT3$OFF 000000  
                                  __CFG_EBTR0$OFF 000000                                    __CFG_FCMEN$OFF 000000  
                                  __CFG_EBTR1$OFF 000000                                    __CFG_EBTR2$OFF 000000  
                                  __CFG_EBTR3$OFF 000000                         hayCruce@investigandoCruce 0042  
                                   __CFG_WRTB$OFF 000000                                     __CFG_WRTC$OFF 000000  
                                   __CFG_WRTD$OFF 000000                                    __CFG_EBTRB$OFF 000000  
                              __size_of_UART_init 0070                                             _flags 0055  
                                           _boton 0008                                             _fputc 4758  
                                           _fputs 5562                                   __end_of_isdigit 56CE  
                                           _pausa 01FB                                             _mover 4CF4  
                                           _mouse 0057                                       ?_UART_write 0001  
                                           atoi@n 001A                                             pad@fp 0016  
                                           atoi@s 000D                                             _width 0132  
                                           ctoa@c 0023                                             _putch 5868  
                                           _toint 7D77                                             ctoa@w 0024  
                                           dtoa@d 0023                                             dtoa@i 0043  
                                           dtoa@n 003B                                             dtoa@p 0035  
                                           dtoa@s 0039                                             dtoa@w 0037  
                               ??_regresarAlCruce 0054                                   __end_of_isspace 535A  
                                 __end_of_isupper 565E                                             tablat 000FF5  
                                 __end_of_pwmDuty 35CC  probarMapeoDireccionCruces@cambioOrientacionCarro 01F3  
                                           ttemp5 005B                                             ttemp6 005E  
                                           ttemp7 0062                                             status 000FD8  
                                           wtemp8 005B                                   __end_of_sprintf 5308  
                                  ?___fpclassifyf 0006                                   __end_of_tolower 50A2  
                                 __end_of_strncmp 4758                                    __CFG_ICPRT$OFF 000000  
                                  ??_leerSensores 0050                                   __initialization 520E  
                                ??_dameLecturaAdc 0008                                      __end_of_atoi 3910  
                                    __end_of_ctoa 51B6                                      __end_of_main 4CF4  
                                    __end_of_dtoa 2FA8                                   ??_configurarAdc 0006  
                             dameDistancia@conteo 0026                            dameDistancia@distancia 0022  
                limpiarMovimientos@numMovimientos 0008                                            ??_atoi 000F  
                                          ??_ctoa 0024                                            ??_main 0055  
                                          ??_dtoa 002B               comportamientoBasico@caminosRecorrer 01D8  
                                   __activetblptr 000002                                            PID@dif 0096  
              __end_of_probarMapeoDireccionCruces 4682                        _probarMapeoDireccionCruces 4588  
                                          _ADCON1 000FC1                                            _ADCON2 000FC0  
                                          ?_boton 0001                                            _CCP1M2 007DEA  
                                          _CCP1M3 007DEB                                            _CCP2M2 007DD2  
                                          _CCP2M3 007DD3                                            ?_fputc 0006  
                                          ?_fputs 000F                                            _ADRESH 000FC4  
                                          _ADRESL 000FC3                                            _CCPR1L 000FBE  
                                          _CCPR2L 000FBB                                  ___awdiv@dividend 0006  
                                          ?_mover 0001                                            ?_putch 0001  
                                          _INT0IF 007F91                                            i2l7381 51D8  
                                          i2l7385 51EA                                            i2l7379 51B8  
                                          i2l7581 528A                                            i2l7583 528E  
                                          i2l7575 5264                                            i2l7585 5290  
                                          i2l7577 5272                                            i2l7587 52AC  
                                          i2l7579 5278                                            i2l7589 52B0  
                         _mostrarDireccionElegida 4D8E                                            _TMR1IF 007CF0  
                                          _TMR1ON 007E68                                            _TMR2ON 007E52  
                                          _TRISB0 007C98                                            _TRISB1 007C99  
                                          _TRISB2 007C9A                                            _TRISC1 007CA1  
                                          _TRISB3 007C9B                                            _TRISC2 007CA2  
                                          _TRISB4 007C9C                                            _TRISB5 007C9D  
                                          _TRISB6 007C9E                                            _TRISD3 007CAB  
                                          _TRISB7 007C9F                                            _TRISC6 007CA6  
                                          _TRISC7 007CA7                                  __end_of___xxtofl 3780  
                                __end_of_hayCruce 3AA0                                    __CFG_XINST$OFF 000000  
                        __end_of_seLlegoAlDestino 5732                comportamientoBasico@numMovimientos 01DB  
                                    vfprintf@cfmt 00E5                         dameDistancia@numeroSensor 0021  
                                          ___flge 4386                                            ___fleq 4BB0  
                                          ___lmul 4F6E                                         ??___aldiv 001A  
                                       ??___aodiv 0016                                         ??___fladd 003C  
                                       ??___aomod 0016                                            ___wmul 577E  
                               __end_of_UART_init 4F6E                                         ??___fldiv 004C  
                                       ??___awdiv 000A                                         ??___flneg 000A  
              comportamientoBasico@espejearCarroY 0138                                         ??___awmod 000A  
                                       ??___flmul 0023                                         ??___flsub 004C  
                                       ??___fltol 0076                                            _efgtoa 0012  
                                       ??___lwdiv 000A                        moverCarrito@espejearCarroY 008E  
                                          _buffer 0192                               _forzarGiroIzquierda 57E8  
                                          _floorf 31FA                               __size_of_UART_write 0016  
                                    ?_UART_printf 0007                                            clear_0 5234  
                                          clear_1 5240                                  ___awdiv@quotient 000C  
                                 ___awmod@divisor 0008                                   ___awmod@counter 000A  
                                          pad@buf 0018                                            ctoa@fp 0021  
                                          _roundf 257C                                            dtoa@fp 0021  
                                          _strcpy 5100                       ??_visualizarPasosRealizados 00FD  
                                          _strlen 56CE                                 _oldSensorEnfrente 0118  
                                          fputc@c 0006                                            fputs@c 0013  
                                          fputs@i 0014                                            fputs@s 000F  
                                       ??_isdigit 0008                             _SENSOR_PRIORIDAD_BAJA 01FC  
                           _SENSOR_PRIORIDAD_ALTA 01FE                                   ___fpclassifyf@e 000E  
         mostrarDireccionElegida@direccionElegida 000B                                   ___fpclassifyf@u 0010  
                                 ___fpclassifyf@x 0006                                      __mediumconst 7D76  
                                       ??_isspace 0008                           ?_forzarEspejeoIzquierda 0001  
                                          tblptrh 000FF7                                         ??_isupper 0008  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                          __size_of_forzarEspejeo 0040                                         ??_pwmDuty 007F  
                                          putch@c 0001                                  __end_of_vfprintf 5042  
                                _posicionDestinoX 013D                                  _posicionDestinoY 013C  
                                       ??_sprintf 0054                                         ??_tolower 000E  
                                       ??_strncmp 000C                              ?_forzarGiroIzquierda 0001  
                               _forzarAvanceRecto 57C6                            __size_of_forzarReversa 0022  
                                      ___flge@ff1 0034                                 _velocidadEstandar 5732  
                                      ___flge@ff2 0038                                   ??___fpclassifyf 000A  
                                    ___xxtofl@arg 0017                                      ___xxtofl@exp 0016  
                                    ___xxtofl@val 000D                                        ___fleq@ff1 0006  
                                      ___fleq@ff2 000A                                        __accesstop 0060  
                         __end_of__initialization 5254       probarMapeoDireccionCruces@investigandoCruce 01E9  
                              ?_forzarAvanceRecto 0001                                   __CFG_PBADEN$OFF 000000  
                                      ___flneg@f1 0006                                   __CFG_FOSC$XT_XT 000000  
                              ?_velocidadEstandar 0001           visualizarPasosRealizados@numMovimientos 00FB  
                                   ___rparam_used 000001                     __size_of_forzarEspejeoDerecha 0048  
                                      ___fltol@f1 0072                               ??_forzarAvanceRecto 0006  
                          __size_of_dameDistancia 0162                                    __pcstackCOMRAM 0001  
                             ??_velocidadEstandar 0054                                      __pidataBANK1 5862  
                                 _sensorIzquierda 0128                                     __end_of_boton 52B6  
                                   __end_of_fputc 4822                                     __end_of_fputs 55A6  
                                   __end_of_mover 4D8E                                     __end_of_putch 586A  
                                   __end_of_toint 7D7B                                 _forzarGiroDerecha 5808  
                              ?_forzarGiroDerecha 0001                    __end_of_forzarEspejeoIzquierda 548E  
       comportamientoBasico@movimientosRealizados 0200                              __end_of_leerSensores 3DA4  
                              __size_of_configPwm 0050                         __end_of_forzarAvanceRecto 57E8  
                                       PID@difAnt 0136                         __end_of_velocidadEstandar 5758  
                                         ??_boton 0004                         ??_mostrarDireccionElegida 0009  
                           ??_forzarGiroIzquierda 0006                                           ??_fputc 000A  
                                         ??_fputs 0013                               ??_forzarGiroDerecha 0006  
                                         ??_mover 0008                                           ??_putch 0006  
                                      __pbssBANK0 00FF                                        __pbssBANK1 0100  
                                      __pbssBANK2 0200                      moverCarrito@avanceRectoLargo 008A  
                                   _paredEnfrente 013B                     __size_of_comportamientoBasico 03DA  
                       _visualizarPasosRealizados 4A58                                 ?_decidirDireccion 01E6  
                           PID@velocidadIzquierda 008E                                        _efgtoa$923 008D  
                                      _efgtoa$932 0093                                        _efgtoa$924 008F  
                                      _efgtoa$933 0095                                        _efgtoa$934 0097  
                                      _efgtoa$928 0091                                     _forzarEspejeo 55A6  
                              ??_decidirDireccion 00FB                                           ?___flge 0034  
                                         ?___fleq 0006                                           ?___lmul 0006  
                                         ?___wmul 0006                         __end_of_forzarGiroDerecha 5828  
                                         ?_efgtoa 007D                                     _forzarReversa 57A4  
                                         _CCP1CON 000FBD                                           _CCP2CON 000FBA  
                                         ?_floorf 0050                     limpiarMovimientos@movimientos 0006  
                                  ___lmul@product 000E            decidirDireccion@cambioOrientacionCarro 01F0  
                                      _antiRebote 51B6                                           ?_roundf 004C  
                                         ?_strcpy 0006                                           ?_strlen 0006  
                                         _T2CKPS0 007E50                                           _T2CKPS1 007E51  
                                 _regresarAlCruce 4B04                                           _PID$737 0090  
                                         _PID$739 0094        probarMapeoDireccionCruces@posicionInvCruce 01EB  
                                         i2l11301 51FE                                         ?___xxtofl 000D  
                      __end_of_limpiarMovimientos 53FA                                     _dameDistancia 3F08  
                              __size_of_vfpfcnvrt 05A8                                         ?_hayCruce 0040  
                                    ??_UART_write 0006                                     ?_moverCarrito 0088  
                                 __CFG_VREGEN$OFF 000000         comportamientoBasico@contCaminosRecorridos 01E0  
 probarMapeoDireccionCruces@contCaminosRecorridos 01F1                                           __Hparam 0000  
                                  ?_forzarEspejeo 0001                                           __Lparam 0000  
                               __end_of_configPwm 53AA                   __end_of_mostrarDireccionElegida 4E10  
                                         ___aldiv 406A                                   __size_of___flge 0104  
                                  ?_forzarReversa 0001                                   __size_of___fleq 00AA  
                                         ___aodiv 3AA0                                           ___fladd 18B8  
                                         ___aomod 3DA4                                           ___fldiv 292E  
                                         ___awdiv 4822                                           ___flneg 565E  
                                 __size_of___lmul 006A                                           ___awmod 49A8  
                                         ___flmul 1D78                                           ___flsub 54D6  
                                         ___fltol 427E                                   __size_of___wmul 0026  
                                         ___lwdiv 4E8A                                         ?_vfprintf 00DF  
           probarMapeoDireccionCruces@caminoFinal 01E6                                   __size_of_efgtoa 0BBA  
                                 __CFG_STVREN$OFF 000000                                   __size_of_floorf 0216  
                                         __pcinit 520E                                           __ramtop 0800  
                              __end_of_UART_write 5858                             __end_of_velocidadBaja 577E  
                                         __ptext0 4C5A                                           __ptext1 4A58  
                                         __ptext2 53FA                                           __ptext3 5858  
                                         __ptext4 535A                                           __ptext5 21A2  
                                         __ptext6 4B04                                           __ptext7 4CF4  
                                         __ptext8 2FA8                                           __ptext9 257C  
                                 __size_of_roundf 03B2                                      __size_of_PID 0252  
                                 __size_of_strcpy 005C                                   __size_of_strlen 0036  
                            __size_of_UART_printf 005E                                      __size_of_abs 0040  
                                    __size_of_pad 00C2                                      __size_of_map 007A  
                                         _isdigit 5696                                        ??___xxtofl 0011  
                                ___awmod@dividend 0006                                    ?_dameDistancia 001B  
                                ___aldiv@dividend 0012                                           _isspace 5308  
                     ?_probarMapeoDireccionCruces 01E6                                           _isupper 5626  
                                         efgtoa@c 0083                                           efgtoa@d 00A1  
                                         efgtoa@e 00B9                                           efgtoa@f 007F  
                                         efgtoa@g 00B5                                           efgtoa@h 00AB  
                                         efgtoa@i 00B3                                           efgtoa@l 00AF  
                                         efgtoa@m 009D                                           efgtoa@n 00BB  
                                         efgtoa@p 00A5                                           efgtoa@t 0099  
                                         efgtoa@u 00BD                                           efgtoa@w 00A8  
                      __size_of_forzarAvanceRecto 0022                                        ??_hayCruce 0043  
                                         _pwmDuty 3410                                           atoi@neg 0013  
                      __size_of_velocidadEstandar 0026                                           _sprintf 52B6  
                                         _tolower 5042                                           _strncmp 4682  
                                  __pintcode_body 5262                              end_of_initialization 5254  
                                  ??_moverCarrito 008C                                           floorf@e 0077  
                                         floorf@m 0073                                           floorf@u 0079  
                                         floorf@x 0050                       decidirDireccion@caminoFinal 01F8  
                decidirDireccion@direccionElegida 0054                                           fputc@fp 0008  
                                   __Lmediumconst 7D76                                           int_func 5262  
                                         fputs@fp 0011                                         i2u1232_47 529A  
                                       i2u1233_47 51DE                            _SENSOR_PRIORIDAD_MEDIA 01FD  
                               ?_seLlegoAlDestino 0001                                 __end_of_vfpfcnvrt 18B8  
                                      efgtoa@mode 00AA                                        efgtoa@sign 00A3  
                                       _RCSTAbits 000FAB                                  ___aldiv@quotient 001C  
                decidirDireccion@avanceRectoLargo 01F6                                           postdec1 000FE5  
                                         postdec2 000FDD                           __end_of_regresarAlCruce 4BB0  
                                         postinc0 000FEE                                           postinc1 000FE6  
                                         postinc2 000FDE                           __size_of_forzarParoAuto 001A  
                                         roundf@e 0064                                           roundf@u 006A  
                                         roundf@x 004C                                           roundf@y 006E  
                      __size_of_forzarGiroDerecha 0020                                ??_seLlegoAlDestino 000B  
                                      ??_vfprintf 0054                             __end_of_configurarAdc 5862  
                                         strcpy@d 000E                                           strlen@a 0008  
                                         strcpy@s 000C                                           strlen@s 0006  
                                     ?_antiRebote 0001                                         _PORTBbits 000F81  
                                       _UART_init 4EFE                             __size_of_leerSensores 017C  
                                     ___fladd@grs 0043                                       pwmDuty@duty 0084  
                                   ___xxtofl@sign 0015                                         _TRISDbits 000F95  
                                     ___fldiv@grs 0067                                _oldSensorIzquierda 011C  
                                     ___fldiv@rem 0060              comportamientoBasico@posicionInvCruce 01E1  
                                      map@out_max 0030                                        map@out_min 002C  
                                     ___flmul@grs 0029                                    _UART_init$1825 0028  
                                       _TXSTAbits 000FAC                                   ??_forzarEspejeo 0055  
                                 ??_forzarReversa 0006                     regresarAlCruce@numMovimientos 009C  
                                    _leerSensores 3C28                __size_of_visualizarPasosRealizados 00AC  
                                  __end_of___flge 448A                                    __end_of___fleq 4C5A  
                                  __end_of___lmul 4FD8                                       vfpfcnvrt@ap 00C5  
                                     vfpfcnvrt@ct 00DB                                       vfpfcnvrt@fp 00C1  
                                     vfpfcnvrt@ll 00CB                                    __end_of___wmul 57A4  
                                  __end_of_efgtoa 0BCC                                    __end_of_floorf 3410  
                                      ?_UART_init 0020                                        floorf@F524 0104  
                    __end_of_forzarEspejeoDerecha 54D6                                   ??_dameDistancia 001F  
           comportamientoBasico@investigandoCruce 01E2                                    __end_of_roundf 292E  
                         __size_of_dameLecturaAdc 0046                                    __end_of_strcpy 515C  
                                  __end_of_strlen 5704                               start_initialization 520E  
                             PID@velocidadDerecha 0092                                       __end_of_PID 31FA  
                                     __end_of_abs 5626                                       __end_of_pad 49A8  
                                     __end_of_map 4E8A                                  regresarAlCruce@i 009E  
                             __size_of_antiRebote 0058                             __end_of___fpclassifyf 4588  
                             pwmDuty@cicloTrabajo 007C                                       vfprintf@fmt 00E1  
                                        ??___flge 003C                                          ??___fleq 000E  
                                        ??___lmul 000E                                          ??___wmul 000A  
                                ?_regresarAlCruce 009A          probarMapeoDireccionCruces@cruceDetectado 01EF  
                                _oldSensorDerecha 0120                        comportamientoBasico@mapear 01E4  
                                  _sensorEnfrente 0124                                          ??_efgtoa 0084  
                                     __pdataBANK1 01FA                                          ??_floorf 006D  
                                __CFG_LPT1OSC$OFF 000000                      __end_of_comportamientoBasico 257C  
               __end_of_visualizarPasosRealizados 4B04                              __end_of_moverCarrito 427E  
                                        ??_roundf 0050                                          ??_strcpy 000A  
                                        ??_strlen 0008                                         ___fladd@a 0038  
                                       ___fladd@b 0034                         __size_of_decidirDireccion 0744  
                     __end_of_forzarGiroIzquierda 5808                                         ___fldiv@a 0048  
                                       ___fldiv@b 0044                                      _llegoDestino 00FF  
                                       ___flmul@a 001F                                         ___flmul@b 001B  
                                     __pbssCOMRAM 0055                                         ___flsub@a 0048  
                                       ___flsub@b 0044                  comportamientoBasico@caminoActual 01DF  
                                   __pcstackBANK0 0060                                     __pcstackBANK1 01E6  
                                   __pcstackBANK2 02C8                                  ___aodiv@dividend 0006  
                               __size_of___xxtofl 01B4                           hayCruce@caminosRecorrer 0040  
                               __size_of_hayCruce 0190                   decidirDireccion@caminosRecorrer 01E6  
                                    _paredDerecha 013A                                _limpiarMovimientos 53AA  
                               UART_printf@cadena 0007                                          PID@error 0098  
                                       _atoi$1427 0015                                         _atoi$1428 0019  
                                       _atoi$1429 0017                         _DISTANCIA_PRIORIDAD_MEDIA 0110  
                                ___lwdiv@dividend 0006                                         __pintcode 0008  
                             ?_limpiarMovimientos 0006                                     __pmediumconst 7D76  
                                  _forzarParoAuto 5828                                          ?___aldiv 0012  
                                        ?___aodiv 0006                                          ?___fladd 0034  
                                        ?___aomod 0006                                          ?___fldiv 0044  
                                        ?___awdiv 0006                                  ___aodiv@quotient 0018  
                                        ?___flneg 0006                                          ?___awmod 0006  
                                        ?___flmul 001B                                          ?___flsub 0044  
                                        ?___fltol 0072                                          ?___lwdiv 0006  
                                       _configPwm 535A                                    _paredIzquierda 0139  
                                     ??_UART_init 0024                                 __size_of_vfprintf 006A  
                                        ?_isdigit 0006                          ?_mostrarDireccionElegida 0001  
                                        ?_isspace 0006                                          ?_isupper 0006  
      comportamientoBasico@cambioOrientacionCarro 01DE                                          ?_pwmDuty 007C  
                            ??_limpiarMovimientos 000A                                  ___lwdiv@quotient 000B  
                                  __size_of_boton 52AE                                          ?_sprintf 00E7  
                                        ?_tolower 000C                                    __size_of_fputc 00CA  
                                  __size_of_fputs 0044                                          _PID$1826 008A  
                                        ?_strncmp 0006                                    __size_of_mover 009A  
           decidirDireccion@contCaminosRecorridos 01EC                                    __size_of_putch 0002  
                                 ___aldiv@divisor 0016                                   ___aldiv@counter 001A  
                                  ___wmul@product 000A                 decidirDireccion@investigandoCruce 01E8  
                    seLlegoAlDestino@llegoDestino 000B                              _forzarEspejeoDerecha 548E  
                          __end_of_forzarParoAuto 5842                                          i2u775_40 51CA  
                                        i2u775_41 51C6                                          i2u776_40 51D8  
                                        i2u776_41 51D4                                          i2u796_40 5272  
                                        i2u796_41 526E                                          i2u797_40 528A  
                                        i2u797_41 5286                                  __CFG_WDTPS$32768 000000  
                        ??_forzarEspejeoIzquierda 0054                                     ??_UART_printf 0009  
                                    ??_antiRebote 0001                                         _vfpfcnvrt 1310  
                                      ?_configPwm 0001                                         map@in_max 0028  
                                       map@in_min 0024                            decidirDireccion@mapear 01F2  
                                      _ADCON0bits 000FC2                                 ___wmul@multiplier 0006  
                                configPwm@channel 0008                                    _dameLecturaAdc 551C  
                                  UART_write@dato 0006                         __size_of_seLlegoAlDestino 002E  
                                    _isspace$1458 000C                                        vfpfcnvrt@c 00DE  
                                      vfpfcnvrt@f 00D7                                 ___lmul@multiplier 0006  
                                     _INTCON2bits 000FF1                                         copy_data0 5222  
                            _comportamientoBasico 21A2                                  _caminoEncontrado 0059  
                           ?_forzarEspejeoDerecha 0001                            __size_of_velocidadBaja 0026  
                              __end_of_antiRebote 520E                                        roundf@F525 0100  
                                        __Hrparam 0000                                   ?_forzarParoAuto 0001  
                                   UART_init@BAUD 0020                                     _sensorDerecha 012C  
                                      vfprintf@ap 00E3                                          __Lrparam 0000  
                                      vfprintf@fp 00DF                             __size_of_moverCarrito 0108  
                                  _posicionCarroX 013F                                    _posicionCarroY 013E  
                                __size_of___aldiv 010C                                  __size_of___aodiv 0188  
                                __size_of___fladd 04C0                                  __size_of___aomod 0164  
                                __size_of___fldiv 039C                                  __size_of___awdiv 00C4  
                                __size_of___flneg 0038                                  __size_of___awmod 00B0  
                                __size_of___flmul 042A                                  __size_of___flsub 0046  
                                __size_of___fltol 0108                                        ?_vfpfcnvrt 00C1  
                                __size_of___lwdiv 0074                            __end_of_dameLecturaAdc 5562  
                                 ___aodiv@divisor 000E            probarMapeoDireccionCruces@caminoActual 01E8  
                                 ___aodiv@counter 0016                                ___fpclassifyf@F463 0108  
                             hayCruce@contCaminos 0043                                  _decidirDireccion 0BCC  
                                      sprintf@fmt 00E9                                          ___xxtofl 35CC  
                             __end_of_UART_printf 5100                                  __size_of_isdigit 0038  
                                        _dtoa$900 0033                                   ___lwdiv@divisor 0008  
                                        _hayCruce 3910                                  __size_of_isspace 0052  
                                 ___lwdiv@counter 000A                                          __ptext10 4588  
                                        __ptext11 4176                                          __ptext20 57C6  
                                        __ptext12 55A6                                          __ptext21 53AA  
                                        __ptext13 5446                                          __ptext30 35CC  
                                        __ptext22 3C28                                          __ptext14 57E8  
                                        __ptext31 52B6                                          __ptext23 3F08  
                                        __ptext15 548E                                          __ptext40 448A  
                                        __ptext32 4FD8                                          __ptext24 4E8A  
                                        __ptext16 5732                                          __ptext41 427E  
                                        __ptext33 1310                                          __ptext25 0BCC  
                                        __ptext17 57A4                                          __ptext50 2CCA  
                                        __ptext42 54D6                                          __ptext34 4682  
                                        __ptext26 5758                                          __ptext18 5828  
                                        __ptext51 55E6                                          __ptext43 18B8  
                                        __ptext35 0012                                          __ptext27 3410  
                                        __ptext19 5808                                          __ptext60 3780  
                                        __ptext52 3DA4                                          __ptext44 565E  
                                        __ptext36 5042                                          __ptext28 4E10  
                                        __ptext61 5308                                          __ptext53 3AA0  
                                        __ptext45 1D78                                          __ptext37 5626  
                                        __ptext29 4F6E                                          __ptext70 4386  
                                        __ptext62 5696                                          __ptext54 515C  
                                        __ptext46 4BB0                                          __ptext38 5100  
                                        __ptext71 4EFE                                          __ptext63 577E  
                                        __ptext55 48E6                                          __ptext47 292E  
                                        __ptext39 31FA                                          __ptext72 406A  
                                        __ptext64 5704                                          __ptext56 56CE  
                                        __ptext48 49A8                                          __ptext65 551C  
                                        __ptext57 5562                                          __ptext49 4822  
                                        __ptext74 51B6                                          __ptext66 4D8E  
                                        __ptext58 4758                                          __ptext67 50A2  
                                        __ptext59 5868                                          __ptext68 5842  
                                        __ptext69 3910                                  __size_of_isupper 0038  
                                __size_of_pwmDuty 01BC                  probarMapeoDireccionCruces@mapear 01ED  
         __end_of_inicializarComportamientoBasico 5446          __size_of_inicializarComportamientoBasico 004C  
               ??_inicializarComportamientoBasico 0054                  ?_inicializarComportamientoBasico 0001  
                 _inicializarComportamientoBasico 53FA                                  __size_of_sprintf 0052  
                                __size_of_tolower 0060                                     antiRebote@pin 0003  
                                      strcpy@dest 0006                                  __size_of_strncmp 00D6  
                           ?_comportamientoBasico 0001                comportamientoBasico@cruceDetectado 01E3  
                                    _moverCarrito 4176                            __size_of_configurarAdc 000A  
                                   __size_of_atoi 0190                                     __size_of_ctoa 005A  
                                   __size_of_main 009A                                     __size_of_dtoa 02DE  
                           __end_of_forzarEspejeo 55E6                                          efgtoa@fp 007D  
                                        efgtoa@ne 009F                                          efgtoa@pp 009B  
                                        efgtoa@ou 0089              comportamientoBasico@direccionElegida 00FE  
                           __end_of_forzarReversa 57C6                                          int$flags 005A  
                         dameLecturaAdc@canalLeer 000A                                          _vfprintf 4FD8  
                 __size_of_forzarEspejeoIzquierda 0048                                       ??_configPwm 0006  
                                 ?_dameLecturaAdc 0006                                  ___aomod@dividend 0006  
                           __CFG_CPUDIV$OSC1_PLL2 000000                                     _velocidadBaja 5758  
            comportamientoBasico@avanceRectoLargo 01DD                      decidirDireccion@caminoActual 01EE  
                  decidirDireccion@cruceDetectado 01F4                                        _INTCONbits 000FF2  
                           __end_of_dameDistancia 406A                               limpiarMovimientos@i 000C  
                                _crucesRecorridos 0140                                          isdigit@c 0006  
                                        intlevel2 0000                                         sprintf@ap 00F3  
                          ??_forzarEspejeoDerecha 0054                                          isspace@c 0006  
                                       strcpy@src 0008                                          isupper@c 0006  
                                       strncmp@_l 0006                                         strncmp@_r 0008  
                                     efgtoa@nmode 00A7                                   ___aomod@divisor 000E  
                                     ??_vfpfcnvrt 00C7                                   ___aomod@counter 0016  
                                   _vfpfcnvrt$954 00D5                                     _vfpfcnvrt$948 00D3  
                                     _UART_printf 50A2                                     _configurarAdc 5858  
                                  ?_velocidadBaja 0001                        ?_visualizarPasosRealizados 00FB  
                                  pwmDuty@channel 007E                                          sprintf@f 00F5  
                                        tolower@c 000C                                          sprintf@s 00E7  
                          __size_of___fpclassifyf 00FE                          __size_of_regresarAlCruce 00AC  
                                _seLlegoAlDestino 5704                                          strncmp@l 000D  
                                        strncmp@n 000A                                          strncmp@r 000F  
              comportamientoBasico@carroEspejeado 01E5                                      ___aldiv@sign 001B  
                      moverCarrito@carroEspejeado 0088                      ??_probarMapeoDireccionCruces 00FB  
                                   ___fladd@signs 0040                            ??_comportamientoBasico 02C8  
                                      _UART_write 5842                            _forzarEspejeoIzquierda 5446  
                    __size_of_forzarGiroIzquierda 0020                                      ___aodiv@sign 0017  
                                    ___fladd@aexp 0041                                      ___fladd@bexp 0042  
                __size_of_mostrarDireccionElegida 0082                        regresarAlCruce@movimientos 009A  
                                    ___aomod@sign 0017                                       _roundf$1827 0066  
                                     _roundf$1828 0060  
