

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Aug 10 20:23:22 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72  0000                     
    73                           ; Version 2.10
    74                           ; Generated 31/07/2019 GMT
    75                           ; 
    76                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F4550 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     
   108                           	psect	idataBANK1
   109  004876                     __pidataBANK1:
   110                           	opt callstack 0
   111                           
   112                           ;initializer for _pausa
   113  004876  01                 	db	1
   114                           
   115                           	psect	smallconst
   116  000800                     __psmallconst:
   117                           	opt callstack 0
   118  000800  00                 	db	0
   119  000801  0000               	dw	0
   120  000803  4B00               	dw	19200
   121  000805                     __end_of_toint:
   122                           	opt callstack 0
   123  0000                     _T1CON	set	4045
   124  0000                     _TRISDbits	set	3989
   125  0000                     _INTCON2bits	set	4081
   126  0000                     _INTCONbits	set	4082
   127  0000                     _ADRESL	set	4035
   128  0000                     _ADRESH	set	4036
   129  0000                     _ADCON0bits	set	4034
   130  0000                     _ADCON2	set	4032
   131  0000                     _ADCON1	set	4033
   132  0000                     _TXREG	set	4013
   133  0000                     _RCREG	set	4014
   134  0000                     _RCSTAbits	set	4011
   135  0000                     _TXSTAbits	set	4012
   136  0000                     _SPBRG	set	4015
   137  0000                     _PORTBbits	set	3969
   138  0000                     _TMR1L	set	4046
   139  0000                     _TMR1H	set	4047
   140  0000                     _PR2	set	4043
   141  0000                     _CCP2CON	set	4026
   142  0000                     _CCPR2L	set	4027
   143  0000                     _CCP1CON	set	4029
   144  0000                     _CCPR1L	set	4030
   145  0000                     _TRISB0	set	31896
   146  0000                     _TRISB7	set	31903
   147  0000                     _TRISB6	set	31902
   148  0000                     _TRISB5	set	31901
   149  0000                     _TRISB4	set	31900
   150  0000                     _TRISB3	set	31899
   151  0000                     _TRISB2	set	31898
   152  0000                     _TRISB1	set	31897
   153  0000                     _TRISD3	set	31915
   154  0000                     _LATB7	set	31831
   155  0000                     _LATB6	set	31830
   156  0000                     _LATB5	set	31829
   157  0000                     _LATB4	set	31828
   158  0000                     _LATD2	set	31842
   159  0000                     _INT0IF	set	32657
   160  0000                     _RCIF	set	31989
   161  0000                     _TRISC7	set	31911
   162  0000                     _TRISC6	set	31910
   163  0000                     _TMR1IF	set	31984
   164  0000                     _TMR1ON	set	32360
   165  0000                     _LATD3	set	31843
   166  0000                     _TMR2ON	set	32338
   167  0000                     _CCP2M2	set	32210
   168  0000                     _CCP2M3	set	32211
   169  0000                     _TRISC1	set	31905
   170  0000                     _CCP1M2	set	32234
   171  0000                     _CCP1M3	set	32235
   172  0000                     _TRISC2	set	31906
   173  0000                     _T2CKPS1	set	32337
   174  0000                     _T2CKPS0	set	32336
   175  000805                     STR_3:
   176  000805  0D                 	db	13
   177  000806  4C                 	db	76	;'L'
   178  000807  65                 	db	101	;'e'
   179  000808  63                 	db	99	;'c'
   180  000809  74                 	db	116	;'t'
   181  00080A  75                 	db	117	;'u'
   182  00080B  72                 	db	114	;'r'
   183  00080C  61                 	db	97	;'a'
   184  00080D  20                 	db	32
   185  00080E  64                 	db	100	;'d'
   186  00080F  65                 	db	101	;'e'
   187  000810  20                 	db	32
   188  000811  73                 	db	115	;'s'
   189  000812  65                 	db	101	;'e'
   190  000813  6E                 	db	110	;'n'
   191  000814  73                 	db	115	;'s'
   192  000815  6F                 	db	111	;'o'
   193  000816  72                 	db	114	;'r'
   194  000817  20                 	db	32
   195  000818  4F                 	db	79	;'O'
   196  000819  70                 	db	112	;'p'
   197  00081A  74                 	db	116	;'t'
   198  00081B  69                 	db	105	;'i'
   199  00081C  63                 	db	99	;'c'
   200  00081D  6F                 	db	111	;'o'
   201  00081E  20                 	db	32
   202  00081F  3D                 	db	61	;'='
   203  000820  20                 	db	32
   204  000821  25                 	db	37
   205  000822  64                 	db	100	;'d'
   206  000823  0D                 	db	13
   207  000824  0A                 	db	10
   208  000825  0A                 	db	10
   209  000826  00                 	db	0
   210  000827  0D                 	db	13
   211  000828  4D                 	db	77	;'M'
   212  000829  6F                 	db	111	;'o'
   213  00082A  76                 	db	118	;'v'
   214  00082B  69                 	db	105	;'i'
   215  00082C  6D                 	db	109	;'m'
   216  00082D  69                 	db	105	;'i'
   217  00082E  65                 	db	101	;'e'
   218  00082F  6E                 	db	110	;'n'
   219  000830  74                 	db	116	;'t'
   220  000831  6F                 	db	111	;'o'
   221  000832  73                 	db	115	;'s'
   222  000833  20                 	db	32
   223  000834  52                 	db	82	;'R'
   224  000835  65                 	db	101	;'e'
   225  000836  61                 	db	97	;'a'
   226  000837  6C                 	db	108	;'l'
   227  000838  69                 	db	105	;'i'
   228  000839  7A                 	db	122	;'z'
   229  00083A  61                 	db	97	;'a'
   230  00083B  64                 	db	100	;'d'
   231  00083C  6F                 	db	111	;'o'
   232  00083D  73                 	db	115	;'s'
   233  00083E  20                 	db	32
   234  00083F  3D                 	db	61	;'='
   235  000840  20                 	db	32
   236  000841  25                 	db	37
   237  000842  64                 	db	100	;'d'
   238  000843  0D                 	db	13
   239  000844  0A                 	db	10
   240  000845  0A                 	db	10
   241  000846  00                 	db	0
   242  000847                     STR_2:
   243  000847  0D                 	db	13
   244  000848  44                 	db	68	;'D'
   245  000849  65                 	db	101	;'e'
   246  00084A  73                 	db	115	;'s'
   247  00084B  74                 	db	116	;'t'
   248  00084C  69                 	db	105	;'i'
   249  00084D  6E                 	db	110	;'n'
   250  00084E  6F                 	db	111	;'o'
   251  00084F  20                 	db	32
   252  000850  6E                 	db	110	;'n'
   253  000851  6F                 	db	111	;'o'
   254  000852  20                 	db	32
   255  000853  64                 	db	100	;'d'
   256  000854  65                 	db	101	;'e'
   257  000855  74                 	db	116	;'t'
   258  000856  65                 	db	101	;'e'
   259  000857  63                 	db	99	;'c'
   260  000858  74                 	db	116	;'t'
   261  000859  61                 	db	97	;'a'
   262  00085A  64                 	db	100	;'d'
   263  00085B  6F                 	db	111	;'o'
   264  00085C  20                 	db	32
   265  00085D  0D                 	db	13
   266  00085E  0A                 	db	10
   267  00085F  00                 	db	0
   268  000860                     STR_1:
   269  000860  0D                 	db	13
   270  000861  53                 	db	83	;'S'
   271  000862  65                 	db	101	;'e'
   272  000863  20                 	db	32
   273  000864  6C                 	db	108	;'l'
   274  000865  6C                 	db	108	;'l'
   275  000866  65                 	db	101	;'e'
   276  000867  67                 	db	103	;'g'
   277  000868  6F                 	db	111	;'o'
   278  000869  20                 	db	32
   279  00086A  61                 	db	97	;'a'
   280  00086B  6C                 	db	108	;'l'
   281  00086C  20                 	db	32
   282  00086D  64                 	db	100	;'d'
   283  00086E  65                 	db	101	;'e'
   284  00086F  73                 	db	115	;'s'
   285  000870  74                 	db	116	;'t'
   286  000871  69                 	db	105	;'i'
   287  000872  6E                 	db	110	;'n'
   288  000873  6F                 	db	111	;'o'
   289  000874  20                 	db	32
   290  000875  0D                 	db	13
   291  000876  0A                 	db	10
   292  000877  00                 	db	0
   293  000878                     STR_5:
   294  000878  0D                 	db	13
   295  000879  49                 	db	73	;'I'
   296  00087A  7A                 	db	122	;'z'
   297  00087B  71                 	db	113	;'q'
   298  00087C  75                 	db	117	;'u'
   299  00087D  69                 	db	105	;'i'
   300  00087E  65                 	db	101	;'e'
   301  00087F  72                 	db	114	;'r'
   302  000880  64                 	db	100	;'d'
   303  000881  61                 	db	97	;'a'
   304  000882  3A                 	db	58	;':'
   305  000883  20                 	db	32
   306  000884  25                 	db	37
   307  000885  2E                 	db	46
   308  000886  32                 	db	50	;'2'
   309  000887  66                 	db	102	;'f'
   310  000888  0D                 	db	13
   311  000889  0A                 	db	10
   312  00088A  00                 	db	0
   313  00088B                     STR_4:
   314  00088B  0D                 	db	13
   315  00088C  45                 	db	69	;'E'
   316  00088D  6E                 	db	110	;'n'
   317  00088E  66                 	db	102	;'f'
   318  00088F  72                 	db	114	;'r'
   319  000890  65                 	db	101	;'e'
   320  000891  6E                 	db	110	;'n'
   321  000892  74                 	db	116	;'t'
   322  000893  65                 	db	101	;'e'
   323  000894  3A                 	db	58	;':'
   324  000895  20                 	db	32
   325  000896  25                 	db	37
   326  000897  2E                 	db	46
   327  000898  32                 	db	50	;'2'
   328  000899  66                 	db	102	;'f'
   329  00089A  0D                 	db	13
   330  00089B  0A                 	db	10
   331  00089C  00                 	db	0
   332  00089D                     STR_6:
   333  00089D  0D                 	db	13
   334  00089E  44                 	db	68	;'D'
   335  00089F  65                 	db	101	;'e'
   336  0008A0  72                 	db	114	;'r'
   337  0008A1  65                 	db	101	;'e'
   338  0008A2  63                 	db	99	;'c'
   339  0008A3  68                 	db	104	;'h'
   340  0008A4  61                 	db	97	;'a'
   341  0008A5  3A                 	db	58	;':'
   342  0008A6  20                 	db	32
   343  0008A7  25                 	db	37
   344  0008A8  2E                 	db	46
   345  0008A9  32                 	db	50	;'2'
   346  0008AA  66                 	db	102	;'f'
   347  0008AB  0D                 	db	13
   348  0008AC  0A                 	db	10
   349  0008AD  00                 	db	0
   350  0008AE  49                 	db	73	;'I'
   351  0008AF  7A                 	db	122	;'z'
   352  0008B0  71                 	db	113	;'q'
   353  0008B1  75                 	db	117	;'u'
   354  0008B2  69                 	db	105	;'i'
   355  0008B3  65                 	db	101	;'e'
   356  0008B4  72                 	db	114	;'r'
   357  0008B5  64                 	db	100	;'d'
   358  0008B6  61                 	db	97	;'a'
   359  0008B7  0A                 	db	10
   360  0008B8  00                 	db	0
   361  0008B9  45                 	db	69	;'E'
   362  0008BA  6E                 	db	110	;'n'
   363  0008BB  66                 	db	102	;'f'
   364  0008BC  72                 	db	114	;'r'
   365  0008BD  65                 	db	101	;'e'
   366  0008BE  6E                 	db	110	;'n'
   367  0008BF  74                 	db	116	;'t'
   368  0008C0  65                 	db	101	;'e'
   369  0008C1  0A                 	db	10
   370  0008C2  00                 	db	0
   371  0008C3  44                 	db	68	;'D'
   372  0008C4  65                 	db	101	;'e'
   373  0008C5  72                 	db	114	;'r'
   374  0008C6  65                 	db	101	;'e'
   375  0008C7  63                 	db	99	;'c'
   376  0008C8  68                 	db	104	;'h'
   377  0008C9  61                 	db	97	;'a'
   378  0008CA  0A                 	db	10
   379  0008CB  00                 	db	0
   380  0008CC  41                 	db	65	;'A'
   381  0008CD  6C                 	db	108	;'l'
   382  0008CE  74                 	db	116	;'t'
   383  0008CF  6F                 	db	111	;'o'
   384  0008D0  0A                 	db	10
   385  0008D1  00                 	db	0
   386  0008D2                     STR_12:
   387  0008D2  49                 	db	73	;'I'
   388  0008D3  4E                 	db	78	;'N'
   389  0008D4  46                 	db	70	;'F'
   390  0008D5  00                 	db	0
   391  0008D6                     STR_16:
   392  0008D6  4E                 	db	78	;'N'
   393  0008D7  41                 	db	65	;'A'
   394  0008D8  4E                 	db	78	;'N'
   395  0008D9  00                 	db	0
   396  0008DA                     STR_13:
   397  0008DA  69                 	db	105	;'i'
   398  0008DB  6E                 	db	110	;'n'
   399  0008DC  66                 	db	102	;'f'
   400  0008DD  00                 	db	0
   401  0008DE                     STR_17:
   402  0008DE  6E                 	db	110	;'n'
   403  0008DF  61                 	db	97	;'a'
   404  0008E0  6E                 	db	110	;'n'
   405  0008E1  00                 	db	0
   406  0008E2                     STR_20:
   407  0008E2  6C                 	db	108	;'l'
   408  0008E3  66                 	db	102	;'f'
   409  0008E4  00                 	db	0
   410  0000                     
   411                           ; #config settings
   412  0008E5  00                 	db	0	; dummy byte at the end
   413  0000                     
   414                           	psect	cinit
   415  00479C                     __pcinit:
   416                           	opt callstack 0
   417  00479C                     start_initialization:
   418                           	opt callstack 0
   419  00479C                     __initialization:
   420                           	opt callstack 0
   421                           
   422                           ; Initialize objects allocated to BANK1 (1 bytes)
   423                           ; load TBLPTR registers with __pidataBANK1
   424  00479C  0E76               	movlw	low __pidataBANK1
   425  00479E  6EF6               	movwf	tblptrl,c
   426  0047A0  0E48               	movlw	high __pidataBANK1
   427  0047A2  6EF7               	movwf	tblptrh,c
   428  0047A4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   429  0047A6  6EF8               	movwf	tblptru,c
   430  0047A8  0009               	tblrd		*+	;fetch initializer
   431  0047AA  CFF5 F1FD          	movff	tablat,__pdataBANK1
   432                           
   433                           ; Clear objects allocated to BANK1 (248 bytes)
   434  0047AE  EE01  F000         	lfsr	0,__pbssBANK1
   435  0047B2  0EF8               	movlw	248
   436  0047B4                     clear_0:
   437  0047B4  6AEE               	clrf	postinc0,c
   438  0047B6  06E8               	decf	wreg,f,c
   439  0047B8  E1FD               	bnz	clear_0
   440                           
   441                           ; Clear objects allocated to COMRAM (5 bytes)
   442  0047BA  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   443  0047BC  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   444  0047BE  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   445  0047C0  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   446  0047C2  6A55               	clrf	__pbssCOMRAM& (0+255),c
   447  0047C4                     end_of_initialization:
   448                           	opt callstack 0
   449  0047C4                     __end_of__initialization:
   450                           	opt callstack 0
   451  0047C4  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   452  0047C6  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   453  0047C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   454  0047CA  6EF8               	movwf	tblptru,c
   455  0047CC  0100               	movlb	0
   456  0047CE  EFC6  F01F         	goto	_main	;jump to C main() function
   457                           
   458                           	psect	bssCOMRAM
   459  000055                     __pbssCOMRAM:
   460                           	opt callstack 0
   461  000055                     _prec:
   462                           	opt callstack 0
   463  000055                     	ds	2
   464  000057                     _flags:
   465                           	opt callstack 0
   466  000057                     	ds	2
   467  000059                     comportamientoBasico@numMovimientos:
   468                           	opt callstack 0
   469  000059                     	ds	1
   470                           
   471                           	psect	bssBANK1
   472  000100                     __pbssBANK1:
   473                           	opt callstack 0
   474  000100                     roundf@F525:
   475                           	opt callstack 0
   476  000100                     	ds	4
   477  000104                     floorf@F524:
   478                           	opt callstack 0
   479  000104                     	ds	4
   480  000108                     ___fpclassifyf@F463:
   481                           	opt callstack 0
   482  000108                     	ds	4
   483  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   484                           	opt callstack 0
   485  00010C                     	ds	4
   486  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   487                           	opt callstack 0
   488  000110                     	ds	4
   489  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   490                           	opt callstack 0
   491  000114                     	ds	4
   492  000118                     _oldSensorEnfrente:
   493                           	opt callstack 0
   494  000118                     	ds	4
   495  00011C                     _oldSensorIzquierda:
   496                           	opt callstack 0
   497  00011C                     	ds	4
   498  000120                     _oldSensorDerecha:
   499                           	opt callstack 0
   500  000120                     	ds	4
   501  000124                     _sensorEnfrente:
   502                           	opt callstack 0
   503  000124                     	ds	4
   504  000128                     _sensorIzquierda:
   505                           	opt callstack 0
   506  000128                     	ds	4
   507  00012C                     _sensorDerecha:
   508                           	opt callstack 0
   509  00012C                     	ds	4
   510  000130                     _nout:
   511                           	opt callstack 0
   512  000130                     	ds	2
   513  000132                     _width:
   514                           	opt callstack 0
   515  000132                     	ds	2
   516  000134                     PID@difAnt:
   517                           	opt callstack 0
   518  000134                     	ds	2
   519  000136                     _mouse:
   520                           	opt callstack 0
   521  000136                     	ds	2
   522  000138                     decidirDireccion@cambioOrientacionCarro:
   523                           	opt callstack 0
   524  000138                     	ds	1
   525  000139                     comportamientoBasico@carroRotado:
   526                           	opt callstack 0
   527  000139                     	ds	1
   528  00013A                     comportamientoBasico@cruceDetectado:
   529                           	opt callstack 0
   530  00013A                     	ds	1
   531  00013B                     comportamientoBasico@mapear:
   532                           	opt callstack 0
   533  00013B                     	ds	1
   534  00013C                     comportamientoBasico@espejearCarroY:
   535                           	opt callstack 0
   536  00013C                     	ds	1
   537  00013D                     _dbuf:
   538                           	opt callstack 0
   539  00013D                     	ds	80
   540  00018D                     comportamientoBasico@movimientosRealizados:
   541                           	opt callstack 0
   542  00018D                     	ds	50
   543  0001BF                     _buffer:
   544                           	opt callstack 0
   545  0001BF                     	ds	50
   546  0001F1                     comportamientoBasico@caminosRecorrer:
   547                           	opt callstack 0
   548  0001F1                     	ds	3
   549  0001F4                     comportamientoBasico@contCaminosRecorridos:
   550                           	opt callstack 0
   551  0001F4                     	ds	1
   552  0001F5                     comportamientoBasico@posicionInvCruce:
   553                           	opt callstack 0
   554  0001F5                     	ds	1
   555  0001F6                     comportamientoBasico@investigandoCruce:
   556                           	opt callstack 0
   557  0001F6                     	ds	1
   558  0001F7                     comportamientoBasico@carroEspejeado:
   559                           	opt callstack 0
   560  0001F7                     	ds	1
   561                           
   562                           	psect	dataBANK1
   563  0001FD                     __pdataBANK1:
   564                           	opt callstack 0
   565  0001FD                     _pausa:
   566                           	opt callstack 0
   567  0001FD                     	ds	1
   568                           
   569                           	psect	cstackBANK1
   570  0001F8                     __pcstackBANK1:
   571                           	opt callstack 0
   572  0001F8                     probarSensores@lecturaSensorOptico:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x0
   576  0001F8                     	ds	4
   577  0001FC                     main@iniciado:
   578                           	opt callstack 0
   579                           
   580                           ; 1 bytes @ 0x4
   581  0001FC                     	ds	1
   582                           
   583                           	psect	cstackBANK0
   584  000060                     __pcstackBANK0:
   585                           	opt callstack 0
   586  000060                     ??_floorf:
   587  000060                     ?___flmul:
   588                           	opt callstack 0
   589  000060                     ___flmul@b:
   590                           	opt callstack 0
   591                           
   592                           ; 4 bytes @ 0x0
   593  000060                     	ds	4
   594  000064                     ___flmul@a:
   595                           	opt callstack 0
   596                           
   597                           ; 4 bytes @ 0x4
   598  000064                     	ds	2
   599  000066                     floorf@m:
   600                           	opt callstack 0
   601                           
   602                           ; 4 bytes @ 0x6
   603  000066                     	ds	2
   604  000068                     ___flmul@sign:
   605                           	opt callstack 0
   606                           
   607                           ; 1 bytes @ 0x8
   608  000068                     	ds	1
   609  000069                     ___flmul@aexp:
   610                           	opt callstack 0
   611                           
   612                           ; 1 bytes @ 0x9
   613  000069                     	ds	1
   614  00006A                     floorf@e:
   615                           	opt callstack 0
   616  00006A                     ___flmul@grs:
   617                           	opt callstack 0
   618                           
   619                           ; 4 bytes @ 0xA
   620  00006A                     	ds	2
   621  00006C                     floorf@u:
   622                           	opt callstack 0
   623                           
   624                           ; 4 bytes @ 0xC
   625  00006C                     	ds	2
   626  00006E                     ___flmul@bexp:
   627                           	opt callstack 0
   628                           
   629                           ; 1 bytes @ 0xE
   630  00006E                     	ds	1
   631  00006F                     ___flmul@prod:
   632                           	opt callstack 0
   633                           
   634                           ; 4 bytes @ 0xF
   635  00006F                     	ds	4
   636  000073                     ___flmul@temp:
   637                           	opt callstack 0
   638                           
   639                           ; 2 bytes @ 0x13
   640  000073                     	ds	2
   641  000075                     ?___flsub:
   642                           	opt callstack 0
   643  000075                     ?___fltol:
   644                           	opt callstack 0
   645  000075                     ___flge@ff1:
   646                           	opt callstack 0
   647  000075                     ___fltol@f1:
   648                           	opt callstack 0
   649  000075                     ___flsub@b:
   650                           	opt callstack 0
   651                           
   652                           ; 4 bytes @ 0x15
   653  000075                     	ds	4
   654  000079                     ??___fltol:
   655  000079                     ___flge@ff2:
   656                           	opt callstack 0
   657  000079                     ___flsub@a:
   658                           	opt callstack 0
   659                           
   660                           ; 4 bytes @ 0x19
   661  000079                     	ds	4
   662  00007D                     ??___flge:
   663  00007D                     ___fltol@sign1:
   664                           	opt callstack 0
   665                           
   666                           ; 1 bytes @ 0x1D
   667  00007D                     	ds	1
   668  00007E                     ___fltol@exp1:
   669                           	opt callstack 0
   670                           
   671                           ; 1 bytes @ 0x1E
   672  00007E                     	ds	1
   673  00007F                     pwmDuty@cicloTrabajo:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0x1F
   677  00007F                     	ds	2
   678  000081                     ?_efgtoa:
   679                           	opt callstack 0
   680  000081                     pwmDuty@channel:
   681                           	opt callstack 0
   682  000081                     efgtoa@fp:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x21
   686  000081                     	ds	1
   687  000082                     ??_pwmDuty:
   688                           
   689                           ; 1 bytes @ 0x22
   690  000082                     	ds	1
   691  000083                     efgtoa@f:
   692                           	opt callstack 0
   693                           
   694                           ; 4 bytes @ 0x23
   695  000083                     	ds	4
   696  000087                     efgtoa@c:
   697                           	opt callstack 0
   698  000087                     pwmDuty@duty:
   699                           	opt callstack 0
   700                           
   701                           ; 4 bytes @ 0x27
   702  000087                     	ds	1
   703  000088                     ??_efgtoa:
   704                           
   705                           ; 1 bytes @ 0x28
   706  000088                     	ds	5
   707  00008D                     efgtoa@ou:
   708                           	opt callstack 0
   709                           
   710                           ; 4 bytes @ 0x2D
   711  00008D                     	ds	4
   712  000091                     _efgtoa$823:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x31
   716  000091                     	ds	2
   717  000093                     _efgtoa$824:
   718                           	opt callstack 0
   719                           
   720                           ; 2 bytes @ 0x33
   721  000093                     	ds	2
   722  000095                     _efgtoa$828:
   723                           	opt callstack 0
   724                           
   725                           ; 2 bytes @ 0x35
   726  000095                     	ds	2
   727  000097                     _efgtoa$832:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x37
   731  000097                     	ds	2
   732  000099                     _efgtoa$833:
   733                           	opt callstack 0
   734                           
   735                           ; 2 bytes @ 0x39
   736  000099                     	ds	2
   737  00009B                     _efgtoa$834:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x3B
   741  00009B                     	ds	2
   742  00009D                     efgtoa@t:
   743                           	opt callstack 0
   744                           
   745                           ; 2 bytes @ 0x3D
   746  00009D                     	ds	2
   747  00009F                     efgtoa@pp:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x3F
   751  00009F                     	ds	2
   752  0000A1                     efgtoa@m:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x41
   756  0000A1                     	ds	2
   757  0000A3                     efgtoa@ne:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x43
   761  0000A3                     	ds	2
   762  0000A5                     efgtoa@d:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x45
   766  0000A5                     	ds	2
   767  0000A7                     efgtoa@sign:
   768                           	opt callstack 0
   769                           
   770                           ; 2 bytes @ 0x47
   771  0000A7                     	ds	2
   772  0000A9                     efgtoa@p:
   773                           	opt callstack 0
   774                           
   775                           ; 2 bytes @ 0x49
   776  0000A9                     	ds	2
   777  0000AB                     efgtoa@nmode:
   778                           	opt callstack 0
   779                           
   780                           ; 1 bytes @ 0x4B
   781  0000AB                     	ds	1
   782  0000AC                     efgtoa@w:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0x4C
   786  0000AC                     	ds	2
   787  0000AE                     efgtoa@mode:
   788                           	opt callstack 0
   789                           
   790                           ; 1 bytes @ 0x4E
   791  0000AE                     	ds	1
   792  0000AF                     efgtoa@h:
   793                           	opt callstack 0
   794                           
   795                           ; 4 bytes @ 0x4F
   796  0000AF                     	ds	4
   797  0000B3                     efgtoa@l:
   798                           	opt callstack 0
   799                           
   800                           ; 4 bytes @ 0x53
   801  0000B3                     	ds	4
   802  0000B7                     efgtoa@i:
   803                           	opt callstack 0
   804                           
   805                           ; 2 bytes @ 0x57
   806  0000B7                     	ds	2
   807  0000B9                     efgtoa@g:
   808                           	opt callstack 0
   809                           
   810                           ; 4 bytes @ 0x59
   811  0000B9                     	ds	4
   812  0000BD                     efgtoa@e:
   813                           	opt callstack 0
   814                           
   815                           ; 2 bytes @ 0x5D
   816  0000BD                     	ds	2
   817  0000BF                     efgtoa@n:
   818                           	opt callstack 0
   819                           
   820                           ; 2 bytes @ 0x5F
   821  0000BF                     	ds	2
   822  0000C1                     efgtoa@u:
   823                           	opt callstack 0
   824                           
   825                           ; 4 bytes @ 0x61
   826  0000C1                     	ds	4
   827  0000C5                     ?_vfpfcnvrt:
   828                           	opt callstack 0
   829  0000C5                     vfpfcnvrt@fp:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x65
   833  0000C5                     	ds	2
   834  0000C7                     vfpfcnvrt@fmt:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0x67
   838  0000C7                     	ds	2
   839  0000C9                     vfpfcnvrt@ap:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x69
   843  0000C9                     	ds	2
   844  0000CB                     ??_vfpfcnvrt:
   845                           
   846                           ; 1 bytes @ 0x6B
   847  0000CB                     	ds	4
   848  0000CF                     vfpfcnvrt@ll:
   849                           	opt callstack 0
   850                           
   851                           ; 8 bytes @ 0x6F
   852  0000CF                     	ds	8
   853  0000D7                     _vfpfcnvrt$848:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0x77
   857  0000D7                     	ds	2
   858  0000D9                     _vfpfcnvrt$853:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x79
   862  0000D9                     	ds	2
   863  0000DB                     vfpfcnvrt@f:
   864                           	opt callstack 0
   865                           
   866                           ; 4 bytes @ 0x7B
   867  0000DB                     	ds	4
   868  0000DF                     vfpfcnvrt@ct:
   869                           	opt callstack 0
   870                           
   871                           ; 3 bytes @ 0x7F
   872  0000DF                     	ds	3
   873  0000E2                     vfpfcnvrt@c:
   874                           	opt callstack 0
   875                           
   876                           ; 1 bytes @ 0x82
   877  0000E2                     	ds	1
   878  0000E3                     ?_vfprintf:
   879                           	opt callstack 0
   880  0000E3                     vfprintf@fp:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x83
   884  0000E3                     	ds	2
   885  0000E5                     vfprintf@fmt:
   886                           	opt callstack 0
   887                           
   888                           ; 2 bytes @ 0x85
   889  0000E5                     	ds	2
   890  0000E7                     vfprintf@ap:
   891                           	opt callstack 0
   892                           
   893                           ; 2 bytes @ 0x87
   894  0000E7                     	ds	2
   895  0000E9                     vfprintf@cfmt:
   896                           	opt callstack 0
   897                           
   898                           ; 2 bytes @ 0x89
   899  0000E9                     	ds	2
   900  0000EB                     ?_sprintf:
   901                           	opt callstack 0
   902  0000EB                     sprintf@s:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0x8B
   906  0000EB                     	ds	2
   907  0000ED                     sprintf@fmt:
   908                           	opt callstack 0
   909                           
   910                           ; 2 bytes @ 0x8D
   911  0000ED                     	ds	8
   912  0000F5                     sprintf@ap:
   913                           	opt callstack 0
   914                           
   915                           ; 2 bytes @ 0x95
   916  0000F5                     	ds	2
   917  0000F7                     sprintf@f:
   918                           	opt callstack 0
   919                           
   920                           ; 6 bytes @ 0x97
   921  0000F7                     	ds	6
   922  0000FD                     ??_probarUltrasonico:
   923                           
   924                           ; 1 bytes @ 0x9D
   925  0000FD                     	ds	2
   926  0000FF                     probarUltrasonico@numeroSensor:
   927                           	opt callstack 0
   928                           
   929                           ; 1 bytes @ 0x9F
   930  0000FF                     	ds	1
   931                           
   932                           	psect	cstackCOMRAM
   933  000001                     __pcstackCOMRAM:
   934                           	opt callstack 0
   935  000001                     ??_antiRebote:
   936  000001                     
   937                           ; 1 bytes @ 0x0
   938  000001                     	ds	2
   939  000003                     antiRebote@pin:
   940                           	opt callstack 0
   941                           
   942                           ; 1 bytes @ 0x2
   943  000003                     	ds	1
   944  000004                     ??_boton:
   945                           
   946                           ; 1 bytes @ 0x3
   947  000004                     	ds	2
   948  000006                     ??_configPwm:
   949  000006                     ?_strlen:
   950                           	opt callstack 0
   951  000006                     ?___fpclassifyf:
   952                           	opt callstack 0
   953  000006                     ?_isupper:
   954                           	opt callstack 0
   955  000006                     ?_isdigit:
   956                           	opt callstack 0
   957  000006                     ?_strncmp:
   958                           	opt callstack 0
   959  000006                     ?_isspace:
   960                           	opt callstack 0
   961  000006                     ?_dameLecturaAdc:
   962                           	opt callstack 0
   963  000006                     ?___wmul:
   964                           	opt callstack 0
   965  000006                     ?___awdiv:
   966                           	opt callstack 0
   967  000006                     ?___awmod:
   968                           	opt callstack 0
   969  000006                     ?___lwdiv:
   970                           	opt callstack 0
   971  000006                     ?___lmul:
   972                           	opt callstack 0
   973  000006                     ?___flneg:
   974                           	opt callstack 0
   975  000006                     ?___aodiv:
   976                           	opt callstack 0
   977  000006                     ?___aomod:
   978                           	opt callstack 0
   979  000006                     UART_write@dato:
   980                           	opt callstack 0
   981  000006                     ___wmul@multiplier:
   982                           	opt callstack 0
   983  000006                     ___awdiv@dividend:
   984                           	opt callstack 0
   985  000006                     ___awmod@dividend:
   986                           	opt callstack 0
   987  000006                     ___lwdiv@dividend:
   988                           	opt callstack 0
   989  000006                     isdigit@c:
   990                           	opt callstack 0
   991  000006                     isspace@c:
   992                           	opt callstack 0
   993  000006                     isupper@c:
   994                           	opt callstack 0
   995  000006                     fputc@c:
   996                           	opt callstack 0
   997  000006                     strcpy@dest:
   998                           	opt callstack 0
   999  000006                     strlen@s:
  1000                           	opt callstack 0
  1001  000006                     strncmp@_l:
  1002                           	opt callstack 0
  1003  000006                     ___lmul@multiplier:
  1004                           	opt callstack 0
  1005  000006                     ___fleq@ff1:
  1006                           	opt callstack 0
  1007  000006                     ___flneg@f1:
  1008                           	opt callstack 0
  1009  000006                     ___fpclassifyf@x:
  1010                           	opt callstack 0
  1011  000006                     ___aodiv@dividend:
  1012                           	opt callstack 0
  1013  000006                     ___aomod@dividend:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 8 bytes @ 0x5
  1017  000006                     	ds	1
  1018  000007                     UART_printf@cadena:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x6
  1022  000007                     	ds	1
  1023  000008                     ??_isupper:
  1024  000008                     ??_isdigit:
  1025  000008                     ??_isspace:
  1026  000008                     ??_dameLecturaAdc:
  1027  000008                     configPwm@channel:
  1028                           	opt callstack 0
  1029  000008                     ___wmul@multiplicand:
  1030                           	opt callstack 0
  1031  000008                     ___awdiv@divisor:
  1032                           	opt callstack 0
  1033  000008                     ___awmod@divisor:
  1034                           	opt callstack 0
  1035  000008                     ___lwdiv@divisor:
  1036                           	opt callstack 0
  1037  000008                     fputc@fp:
  1038                           	opt callstack 0
  1039  000008                     strcpy@src:
  1040                           	opt callstack 0
  1041  000008                     strlen@a:
  1042                           	opt callstack 0
  1043  000008                     strncmp@_r:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x7
  1047  000008                     	ds	1
  1048  000009                     
  1049                           ; 1 bytes @ 0x8
  1050  000009                     	ds	1
  1051  00000A                     ??_fputc:
  1052  00000A                     ??___fpclassifyf:
  1053  00000A                     ??_strcpy:
  1054  00000A                     dameLecturaAdc@canalLeer:
  1055                           	opt callstack 0
  1056  00000A                     ___awdiv@counter:
  1057                           	opt callstack 0
  1058  00000A                     ___awmod@counter:
  1059                           	opt callstack 0
  1060  00000A                     ___lwdiv@counter:
  1061                           	opt callstack 0
  1062  00000A                     ___wmul@product:
  1063                           	opt callstack 0
  1064  00000A                     strncmp@n:
  1065                           	opt callstack 0
  1066  00000A                     ___lmul@multiplicand:
  1067                           	opt callstack 0
  1068  00000A                     ___fleq@ff2:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 4 bytes @ 0x9
  1072  00000A                     	ds	1
  1073  00000B                     ___awdiv@sign:
  1074                           	opt callstack 0
  1075  00000B                     ___awmod@sign:
  1076                           	opt callstack 0
  1077  00000B                     ___lwdiv@quotient:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 2 bytes @ 0xA
  1081  00000B                     	ds	1
  1082  00000C                     ??_strncmp:
  1083  00000C                     ?_tolower:
  1084                           	opt callstack 0
  1085  00000C                     _isspace$1357:
  1086                           	opt callstack 0
  1087  00000C                     ___awdiv@quotient:
  1088                           	opt callstack 0
  1089  00000C                     strcpy@s:
  1090                           	opt callstack 0
  1091  00000C                     tolower@c:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 2 bytes @ 0xB
  1095  00000C                     	ds	1
  1096  00000D                     ?_atoi:
  1097                           	opt callstack 0
  1098  00000D                     ?___xxtofl:
  1099                           	opt callstack 0
  1100  00000D                     atoi@s:
  1101                           	opt callstack 0
  1102  00000D                     strncmp@l:
  1103                           	opt callstack 0
  1104  00000D                     ___xxtofl@val:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 4 bytes @ 0xC
  1108  00000D                     	ds	1
  1109  00000E                     ??_tolower:
  1110  00000E                     ??___fleq:
  1111  00000E                     ___fpclassifyf@e:
  1112                           	opt callstack 0
  1113  00000E                     strcpy@d:
  1114                           	opt callstack 0
  1115  00000E                     ___lmul@product:
  1116                           	opt callstack 0
  1117  00000E                     ___aodiv@divisor:
  1118                           	opt callstack 0
  1119  00000E                     ___aomod@divisor:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 8 bytes @ 0xD
  1123  00000E                     	ds	1
  1124  00000F                     ??_atoi:
  1125  00000F                     fputs@s:
  1126                           	opt callstack 0
  1127  00000F                     strncmp@r:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 2 bytes @ 0xE
  1131  00000F                     	ds	1
  1132  000010                     ___fpclassifyf@u:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 4 bytes @ 0xF
  1136  000010                     	ds	1
  1137  000011                     ??___xxtofl:
  1138  000011                     fputs@fp:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x10
  1142  000011                     	ds	1
  1143  000012                     ?___aldiv:
  1144                           	opt callstack 0
  1145  000012                     _tolower$1456:
  1146                           	opt callstack 0
  1147  000012                     ___aldiv@dividend:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x11
  1151  000012                     	ds	1
  1152  000013                     fputs@c:
  1153                           	opt callstack 0
  1154  000013                     atoi@neg:
  1155                           	opt callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x12
  1158  000013                     	ds	1
  1159  000014                     fputs@i:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x13
  1163  000014                     	ds	1
  1164  000015                     ___xxtofl@sign:
  1165                           	opt callstack 0
  1166  000015                     _atoi$1326:
  1167                           	opt callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x14
  1170  000015                     	ds	1
  1171  000016                     ?_pad:
  1172                           	opt callstack 0
  1173  000016                     ___aodiv@counter:
  1174                           	opt callstack 0
  1175  000016                     ___aomod@counter:
  1176                           	opt callstack 0
  1177  000016                     ___xxtofl@exp:
  1178                           	opt callstack 0
  1179  000016                     pad@fp:
  1180                           	opt callstack 0
  1181  000016                     ___aldiv@divisor:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x15
  1185  000016                     	ds	1
  1186  000017                     ___aodiv@sign:
  1187                           	opt callstack 0
  1188  000017                     ___aomod@sign:
  1189                           	opt callstack 0
  1190  000017                     _atoi$1328:
  1191                           	opt callstack 0
  1192  000017                     ___xxtofl@arg:
  1193                           	opt callstack 0
  1194                           
  1195                           ; 4 bytes @ 0x16
  1196  000017                     	ds	1
  1197  000018                     ?_abs:
  1198                           	opt callstack 0
  1199  000018                     pad@buf:
  1200                           	opt callstack 0
  1201  000018                     abs@a:
  1202                           	opt callstack 0
  1203  000018                     ___aodiv@quotient:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 8 bytes @ 0x17
  1207  000018                     	ds	1
  1208  000019                     _atoi$1327:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x18
  1212  000019                     	ds	1
  1213  00001A                     ??_abs:
  1214  00001A                     ___aldiv@counter:
  1215                           	opt callstack 0
  1216  00001A                     pad@p:
  1217                           	opt callstack 0
  1218  00001A                     atoi@n:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x19
  1222  00001A                     	ds	1
  1223  00001B                     ?_dameDistancia:
  1224                           	opt callstack 0
  1225  00001B                     ___aldiv@sign:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 1 bytes @ 0x1A
  1229  00001B                     	ds	1
  1230  00001C                     ??_pad:
  1231  00001C                     ___aldiv@quotient:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x1B
  1235  00001C                     	ds	1
  1236  00001D                     pad@i:
  1237                           	opt callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x1C
  1240  00001D                     	ds	2
  1241  00001F                     ??_dameDistancia:
  1242  00001F                     pad@w:
  1243                           	opt callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x1E
  1246  00001F                     	ds	1
  1247  000020                     ?_map:
  1248                           	opt callstack 0
  1249  000020                     map@x:
  1250                           	opt callstack 0
  1251  000020                     UART_init@BAUD:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x1F
  1255  000020                     	ds	1
  1256  000021                     ?_dtoa:
  1257                           	opt callstack 0
  1258  000021                     dameDistancia@numeroSensor:
  1259                           	opt callstack 0
  1260  000021                     dtoa@fp:
  1261                           	opt callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x20
  1264  000021                     	ds	1
  1265  000022                     dameDistancia@distancia:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x21
  1269  000022                     	ds	1
  1270  000023                     dtoa@d:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 8 bytes @ 0x22
  1274  000023                     	ds	1
  1275  000024                     map@in_min:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x23
  1279  000024                     	ds	2
  1280  000026                     dameDistancia@conteo:
  1281                           	opt callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x25
  1284  000026                     	ds	2
  1285  000028                     ?___fladd:
  1286                           	opt callstack 0
  1287  000028                     map@in_max:
  1288                           	opt callstack 0
  1289  000028                     ___fladd@b:
  1290                           	opt callstack 0
  1291  000028                     _UART_init$1690:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x27
  1295  000028                     	ds	3
  1296  00002B                     ??_dtoa:
  1297                           
  1298                           ; 1 bytes @ 0x2A
  1299  00002B                     	ds	1
  1300  00002C                     map@out_min:
  1301                           	opt callstack 0
  1302  00002C                     ___fladd@a:
  1303                           	opt callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x2B
  1306  00002C                     	ds	4
  1307  000030                     ??___fladd:
  1308  000030                     map@out_max:
  1309                           	opt callstack 0
  1310                           
  1311                           ; 4 bytes @ 0x2F
  1312  000030                     	ds	3
  1313  000033                     _dtoa$799:
  1314                           	opt callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x32
  1317  000033                     	ds	1
  1318  000034                     ___fladd@signs:
  1319                           	opt callstack 0
  1320                           
  1321                           ; 1 bytes @ 0x33
  1322  000034                     	ds	1
  1323  000035                     ___fladd@aexp:
  1324                           	opt callstack 0
  1325  000035                     dtoa@p:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x34
  1329  000035                     	ds	1
  1330  000036                     ___fladd@bexp:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 1 bytes @ 0x35
  1334  000036                     	ds	1
  1335  000037                     ___fladd@grs:
  1336                           	opt callstack 0
  1337  000037                     dtoa@w:
  1338                           	opt callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x36
  1341  000037                     	ds	1
  1342  000038                     ?___fldiv:
  1343                           	opt callstack 0
  1344  000038                     ___fldiv@b:
  1345                           	opt callstack 0
  1346                           
  1347                           ; 4 bytes @ 0x37
  1348  000038                     	ds	1
  1349  000039                     dtoa@s:
  1350                           	opt callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x38
  1353  000039                     	ds	2
  1354  00003B                     dtoa@n:
  1355                           	opt callstack 0
  1356                           
  1357                           ; 8 bytes @ 0x3A
  1358  00003B                     	ds	1
  1359  00003C                     ___fldiv@a:
  1360                           	opt callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x3B
  1363  00003C                     	ds	4
  1364  000040                     ??___fldiv:
  1365                           
  1366                           ; 1 bytes @ 0x3F
  1367  000040                     	ds	3
  1368  000043                     dtoa@i:
  1369                           	opt callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x42
  1372  000043                     	ds	1
  1373  000044                     ___fldiv@rem:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 4 bytes @ 0x43
  1377  000044                     	ds	4
  1378  000048                     ___fldiv@sign:
  1379                           	opt callstack 0
  1380                           
  1381                           ; 1 bytes @ 0x47
  1382  000048                     	ds	1
  1383  000049                     ___fldiv@new_exp:
  1384                           	opt callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x48
  1387  000049                     	ds	2
  1388  00004B                     ___fldiv@grs:
  1389                           	opt callstack 0
  1390                           
  1391                           ; 4 bytes @ 0x4A
  1392  00004B                     	ds	4
  1393  00004F                     ___fldiv@bexp:
  1394                           	opt callstack 0
  1395                           
  1396                           ; 1 bytes @ 0x4E
  1397  00004F                     	ds	1
  1398  000050                     ___fldiv@aexp:
  1399                           	opt callstack 0
  1400                           
  1401                           ; 1 bytes @ 0x4F
  1402  000050                     	ds	1
  1403  000051                     ??___flmul:
  1404  000051                     ?_floorf:
  1405                           	opt callstack 0
  1406  000051                     floorf@x:
  1407                           	opt callstack 0
  1408                           
  1409                           ; 4 bytes @ 0x50
  1410  000051                     	ds	4
  1411  000055                     
  1412                           ; 1 bytes @ 0x54
  1413 ;;
  1414 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1415 ;;
  1416 ;; *************** function _main *****************
  1417 ;; Defined at:
  1418 ;;		line 904 in file "main.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  numMovimient    2    0        int 
  1423 ;;  iniciado        1    4[BANK1 ] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1433 ;;      Params:         0       0       0       0       0       0       0       0       0
  1434 ;;      Locals:         0       0       3       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1436 ;;      Totals:         0       0       3       0       0       0       0       0       0
  1437 ;;Total ram usage:        3 bytes
  1438 ;; Hardware stack levels required when called:   12
  1439 ;; This function calls:
  1440 ;;		_UART_init
  1441 ;;		_configPwm
  1442 ;;		_configurarAdc
  1443 ;;		_inicializarComportamientoBasico
  1444 ;;		_probarSensores
  1445 ;; This function is called by:
  1446 ;;		Startup code after reset
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text0
  1451  003F8C                     __ptext0:
  1452                           	opt callstack 0
  1453  003F8C                     _main:
  1454                           	opt callstack 19
  1455  003F8C                     
  1456                           ;main.c: 906:     T_BOOL iniciado = 0;
  1457  003F8C  0E00               	movlw	0
  1458  003F8E  0101               	movlb	1	; () banked
  1459  003F90  6FFC               	movwf	main@iniciado& (0+255),b
  1460  003F92                     
  1461                           ; BSR set to: 1
  1462                           ;main.c: 910:     INTCONbits.GIE = 1;
  1463  003F92  8EF2               	bsf	242,7,c	;volatile
  1464  003F94                     
  1465                           ; BSR set to: 1
  1466                           ;main.c: 911:     INTCONbits.INT0IE = 1;
  1467  003F94  88F2               	bsf	242,4,c	;volatile
  1468  003F96                     
  1469                           ; BSR set to: 1
  1470                           ;main.c: 912:     INTCON2bits.INTEDG0 = 1;
  1471  003F96  8CF1               	bsf	241,6,c	;volatile
  1472  003F98                     
  1473                           ; BSR set to: 1
  1474                           ;main.c: 914:     TRISD3 = 0;
  1475  003F98  9695               	bcf	3989,3,c	;volatile
  1476  003F9A                     
  1477                           ; BSR set to: 1
  1478                           ;main.c: 915:     TRISB1 = 1;
  1479  003F9A  8293               	bsf	3987,1,c	;volatile
  1480  003F9C                     
  1481                           ; BSR set to: 1
  1482                           ;main.c: 916:     TRISB2 = 1;
  1483  003F9C  8493               	bsf	3987,2,c	;volatile
  1484  003F9E                     
  1485                           ; BSR set to: 1
  1486                           ;main.c: 917:     TRISB3 = 1;
  1487  003F9E  8693               	bsf	3987,3,c	;volatile
  1488  003FA0                     
  1489                           ; BSR set to: 1
  1490                           ;main.c: 919:     TRISB4 = 0;
  1491  003FA0  9893               	bcf	3987,4,c	;volatile
  1492  003FA2                     
  1493                           ; BSR set to: 1
  1494                           ;main.c: 920:     TRISB5 = 0;
  1495  003FA2  9A93               	bcf	3987,5,c	;volatile
  1496  003FA4                     
  1497                           ; BSR set to: 1
  1498                           ;main.c: 921:     TRISB6 = 0;
  1499  003FA4  9C93               	bcf	3987,6,c	;volatile
  1500  003FA6                     
  1501                           ; BSR set to: 1
  1502                           ;main.c: 922:     TRISB7 = 0;
  1503  003FA6  9E93               	bcf	3987,7,c	;volatile
  1504  003FA8                     
  1505                           ; BSR set to: 1
  1506                           ;main.c: 924:     TRISDbits.RD2 = 0;
  1507  003FA8  9495               	bcf	149,2,c	;volatile
  1508  003FAA                     
  1509                           ; BSR set to: 1
  1510                           ;main.c: 925:     TRISB0 = 1;
  1511  003FAA  8093               	bsf	3987,0,c	;volatile
  1512  003FAC                     
  1513                           ; BSR set to: 1
  1514                           ;main.c: 927:     LATD3 = 0;
  1515  003FAC  968C               	bcf	3980,3,c	;volatile
  1516  003FAE                     
  1517                           ; BSR set to: 1
  1518                           ;main.c: 928:     LATB4 = 0;
  1519  003FAE  988A               	bcf	3978,4,c	;volatile
  1520  003FB0                     
  1521                           ; BSR set to: 1
  1522                           ;main.c: 929:     LATB5 = 0;
  1523  003FB0  9A8A               	bcf	3978,5,c	;volatile
  1524  003FB2                     
  1525                           ; BSR set to: 1
  1526                           ;main.c: 930:     LATB6 = 0;
  1527  003FB2  9C8A               	bcf	3978,6,c	;volatile
  1528  003FB4                     
  1529                           ; BSR set to: 1
  1530                           ;main.c: 931:     LATB7 = 0;
  1531  003FB4  9E8A               	bcf	3978,7,c	;volatile
  1532  003FB6                     
  1533                           ; BSR set to: 1
  1534                           ;main.c: 932:     LATD2 = 0;
  1535  003FB6  948C               	bcf	3980,2,c	;volatile
  1536                           
  1537                           ;main.c: 935:     T1CON = 0b00000000;
  1538  003FB8  0E00               	movlw	0
  1539  003FBA  6ECD               	movwf	205,c	;volatile
  1540  003FBC                     
  1541                           ; BSR set to: 1
  1542                           ;main.c: 937:     configPwm(1);
  1543  003FBC  0E01               	movlw	1
  1544  003FBE  ECA2  F022         	call	_configPwm
  1545  003FC2                     
  1546                           ;main.c: 938:     configPwm(2);
  1547  003FC2  0E02               	movlw	2
  1548  003FC4  ECA2  F022         	call	_configPwm
  1549  003FC8                     
  1550                           ;main.c: 939:     configurarAdc();
  1551  003FC8  EC35  F024         	call	_configurarAdc	;wreg free
  1552  003FCC                     
  1553                           ;main.c: 941:     UART_init(9600);
  1554  003FCC  0E80               	movlw	128
  1555  003FCE  6E20               	movwf	UART_init@BAUD^0,c
  1556  003FD0  0E25               	movlw	37
  1557  003FD2  6E21               	movwf	(UART_init@BAUD+1)^0,c
  1558  003FD4  0E00               	movlw	0
  1559  003FD6  6E22               	movwf	(UART_init@BAUD+2)^0,c
  1560  003FD8  0E00               	movlw	0
  1561  003FDA  6E23               	movwf	(UART_init@BAUD+3)^0,c
  1562  003FDC  ECCB  F020         	call	_UART_init	;wreg free
  1563  003FE0                     l8986:
  1564                           
  1565                           ;main.c: 946:         if (!pausa) {
  1566  003FE0  0101               	movlb	1	; () banked
  1567  003FE2  51FD               	movf	_pausa& (0+255),w,b
  1568  003FE4  A4D8               	btfss	status,2,c
  1569  003FE6  EFF7  F01F         	goto	u10751
  1570  003FEA  EFF9  F01F         	goto	u10750
  1571  003FEE                     u10751:
  1572  003FEE  EF09  F020         	goto	l8996
  1573  003FF2                     u10750:
  1574  003FF2                     
  1575                           ; BSR set to: 1
  1576                           ;main.c: 948:             if (!iniciado) {
  1577  003FF2  51FC               	movf	main@iniciado& (0+255),w,b
  1578  003FF4  A4D8               	btfss	status,2,c
  1579  003FF6  EFFF  F01F         	goto	u10761
  1580  003FFA  EF01  F020         	goto	u10760
  1581  003FFE                     u10761:
  1582  003FFE  EF05  F020         	goto	l8994
  1583  004002                     u10760:
  1584  004002                     
  1585                           ; BSR set to: 1
  1586                           ;main.c: 949:                 iniciado = 1;
  1587  004002  0E01               	movlw	1
  1588  004004  6FFC               	movwf	main@iniciado& (0+255),b
  1589  004006                     
  1590                           ; BSR set to: 1
  1591                           ;main.c: 950:                 inicializarComportamientoBasico();
  1592  004006  ECCA  F022         	call	_inicializarComportamientoBasico	;wreg free
  1593  00400A                     l8994:
  1594                           
  1595                           ;main.c: 953:             probarSensores();
  1596  00400A  EC0F  F020         	call	_probarSensores	;wreg free
  1597                           
  1598                           ;main.c: 958:         } else {
  1599  00400E  EFF0  F01F         	goto	l8986
  1600  004012                     l8996:
  1601                           
  1602                           ; BSR set to: 1
  1603                           ;main.c: 960:             iniciado = 0;
  1604  004012  0E00               	movlw	0
  1605  004014  6FFC               	movwf	main@iniciado& (0+255),b
  1606  004016  EFF0  F01F         	goto	l8986
  1607  00401A  EF07  F000         	goto	start
  1608  00401E                     __end_of_main:
  1609                           	opt callstack 0
  1610                           
  1611 ;; *************** function _probarSensores *****************
  1612 ;; Defined at:
  1613 ;;		line 104 in file "main.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  lecturaSenso    2    0[BANK1 ] short 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1627 ;;      Params:         0       0       0       0       0       0       0       0       0
  1628 ;;      Locals:         0       0       2       0       0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1630 ;;      Totals:         0       0       2       0       0       0       0       0       0
  1631 ;;Total ram usage:        2 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:   11
  1634 ;; This function calls:
  1635 ;;		_UART_printf
  1636 ;;		_dameLecturaAdc
  1637 ;;		_leerSensores
  1638 ;;		_probarUltrasonico
  1639 ;;		_sprintf
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text1
  1646  00401E                     __ptext1:
  1647                           	opt callstack 0
  1648  00401E                     _probarSensores:
  1649                           	opt callstack 19
  1650  00401E                     
  1651                           ;main.c: 106:     leerSensores();
  1652  00401E  ECEB  F018         	call	_leerSensores	;wreg free
  1653  004022                     
  1654                           ;main.c: 108:     probarUltrasonico(ENFRENTE);
  1655  004022  0E01               	movlw	1
  1656  004024  EC18  F01D         	call	_probarUltrasonico
  1657  004028                     
  1658                           ;main.c: 109:     probarUltrasonico(IZQUIERDA);
  1659  004028  0E02               	movlw	2
  1660  00402A  EC18  F01D         	call	_probarUltrasonico
  1661  00402E                     
  1662                           ;main.c: 110:     probarUltrasonico(DERECHA);
  1663  00402E  0E03               	movlw	3
  1664  004030  EC18  F01D         	call	_probarUltrasonico
  1665  004034                     
  1666                           ;main.c: 111:     T_WORD lecturaSensorOptico = dameLecturaAdc(0);
  1667  004034  0E00               	movlw	0
  1668  004036  EC15  F023         	call	_dameLecturaAdc
  1669  00403A  C006  F1F8         	movff	?_dameLecturaAdc,probarSensores@lecturaSensorOptico
  1670  00403E  C007  F1F9         	movff	?_dameLecturaAdc+1,probarSensores@lecturaSensorOptico+1
  1671  004042                     
  1672                           ;main.c: 113:     if (lecturaSensorOptico < 100)
  1673  004042  0101               	movlb	1	; () banked
  1674  004044  BFF9               	btfsc	(probarSensores@lecturaSensorOptico+1)& (0+255),7,b
  1675  004046  EF30  F020         	goto	u10170
  1676  00404A  51F9               	movf	(probarSensores@lecturaSensorOptico+1)& (0+255),w,b
  1677  00404C  E107               	bnz	u10171
  1678  00404E  0E64               	movlw	100
  1679  004050  5DF8               	subwf	probarSensores@lecturaSensorOptico& (0+255),w,b
  1680  004052  B0D8               	btfsc	status,0,c
  1681  004054  EF2E  F020         	goto	u10171
  1682  004058  EF30  F020         	goto	u10170
  1683  00405C                     u10171:
  1684  00405C  EF38  F020         	goto	l8388
  1685  004060                     u10170:
  1686  004060                     
  1687                           ; BSR set to: 1
  1688                           ;main.c: 114:         UART_printf("\rSe llego al destino \r\n");
  1689  004060  0E60               	movlw	low STR_1
  1690  004062  6E07               	movwf	UART_printf@cadena^0,c
  1691  004064  0E08               	movlw	high STR_1
  1692  004066  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1693  004068  EC9D  F021         	call	_UART_printf	;wreg free
  1694  00406C  EF3E  F020         	goto	l8390
  1695  004070                     l8388:
  1696                           
  1697                           ; BSR set to: 1
  1698                           ;main.c: 116:         UART_printf("\rDestino no detectado \r\n");
  1699  004070  0E47               	movlw	low STR_2
  1700  004072  6E07               	movwf	UART_printf@cadena^0,c
  1701  004074  0E08               	movlw	high STR_2
  1702  004076  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1703  004078  EC9D  F021         	call	_UART_printf	;wreg free
  1704  00407C                     l8390:
  1705                           
  1706                           ;main.c: 118:     sprintf(buffer, "\rLectura de sensor Optico = %d\r\n\n", lecturaSensor
      +                          Optico);
  1707  00407C  0EBF               	movlw	low _buffer
  1708  00407E  0100               	movlb	0	; () banked
  1709  004080  6FEB               	movwf	sprintf@s& (0+255),b
  1710  004082  0E01               	movlw	high _buffer
  1711  004084  6FEC               	movwf	(sprintf@s+1)& (0+255),b
  1712  004086  0E05               	movlw	low STR_3
  1713  004088  6FED               	movwf	sprintf@fmt& (0+255),b
  1714  00408A  0E08               	movlw	high STR_3
  1715  00408C  6FEE               	movwf	(sprintf@fmt+1)& (0+255),b
  1716  00408E  C1F8  F0EF         	movff	probarSensores@lecturaSensorOptico,?_sprintf+4
  1717  004092  C1F9  F0F0         	movff	probarSensores@lecturaSensorOptico+1,?_sprintf+5
  1718  004096  EC50  F022         	call	_sprintf	;wreg free
  1719  00409A                     
  1720                           ;main.c: 119:     UART_printf(buffer);
  1721  00409A  0EBF               	movlw	low _buffer
  1722  00409C  6E07               	movwf	UART_printf@cadena^0,c
  1723  00409E  0E01               	movlw	high _buffer
  1724  0040A0  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1725  0040A2  EC9D  F021         	call	_UART_printf	;wreg free
  1726  0040A6  0012               	return		;funcret
  1727  0040A8                     __end_of_probarSensores:
  1728                           	opt callstack 0
  1729                           
  1730 ;; *************** function _probarUltrasonico *****************
  1731 ;; Defined at:
  1732 ;;		line 123 in file "main.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  numeroSensor    1    wreg     unsigned char 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  numeroSensor    1  159[BANK0 ] unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1746 ;;      Params:         0       0       0       0       0       0       0       0       0
  1747 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1748 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1749 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1750 ;;Total ram usage:        3 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:   10
  1753 ;; This function calls:
  1754 ;;		_UART_printf
  1755 ;;		_sprintf
  1756 ;; This function is called by:
  1757 ;;		_probarSensores
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text2
  1762  003A30                     __ptext2:
  1763                           	opt callstack 0
  1764  003A30                     _probarUltrasonico:
  1765                           	opt callstack 19
  1766                           
  1767                           ;incstack = 0
  1768                           ;probarUltrasonico@numeroSensor stored from wreg
  1769  003A30  0100               	movlb	0	; () banked
  1770  003A32  6FFF               	movwf	probarUltrasonico@numeroSensor& (0+255),b
  1771  003A34                     
  1772                           ;main.c: 125:     switch (numeroSensor) {
  1773  003A34  EF58  F01D         	goto	l8320
  1774  003A38                     l8312:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;main.c: 128:             sprintf(buffer, "\rEnfrente: %.2f\r\n", sensorEnfrente);
  1778  003A38  0EBF               	movlw	low _buffer
  1779  003A3A  6FEB               	movwf	sprintf@s& (0+255),b
  1780  003A3C  0E01               	movlw	high _buffer
  1781  003A3E  6FEC               	movwf	(sprintf@s+1)& (0+255),b
  1782  003A40  0E8B               	movlw	low STR_4
  1783  003A42  6FED               	movwf	sprintf@fmt& (0+255),b
  1784  003A44  0E08               	movlw	high STR_4
  1785  003A46  6FEE               	movwf	(sprintf@fmt+1)& (0+255),b
  1786  003A48  C124  F0EF         	movff	_sensorEnfrente,?_sprintf+4
  1787  003A4C  C125  F0F0         	movff	_sensorEnfrente+1,?_sprintf+5
  1788  003A50  C126  F0F1         	movff	_sensorEnfrente+2,?_sprintf+6
  1789  003A54  C127  F0F2         	movff	_sensorEnfrente+3,?_sprintf+7
  1790  003A58  EC50  F022         	call	_sprintf	;wreg free
  1791                           
  1792                           ;main.c: 129:             break;
  1793  003A5C  EF72  F01D         	goto	l8322
  1794  003A60                     l8314:
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;main.c: 132:             sprintf(buffer, "\rIzquierda: %.2f\r\n", sensorIzquierda);
  1798  003A60  0EBF               	movlw	low _buffer
  1799  003A62  6FEB               	movwf	sprintf@s& (0+255),b
  1800  003A64  0E01               	movlw	high _buffer
  1801  003A66  6FEC               	movwf	(sprintf@s+1)& (0+255),b
  1802  003A68  0E78               	movlw	low STR_5
  1803  003A6A  6FED               	movwf	sprintf@fmt& (0+255),b
  1804  003A6C  0E08               	movlw	high STR_5
  1805  003A6E  6FEE               	movwf	(sprintf@fmt+1)& (0+255),b
  1806  003A70  C128  F0EF         	movff	_sensorIzquierda,?_sprintf+4
  1807  003A74  C129  F0F0         	movff	_sensorIzquierda+1,?_sprintf+5
  1808  003A78  C12A  F0F1         	movff	_sensorIzquierda+2,?_sprintf+6
  1809  003A7C  C12B  F0F2         	movff	_sensorIzquierda+3,?_sprintf+7
  1810  003A80  EC50  F022         	call	_sprintf	;wreg free
  1811                           
  1812                           ;main.c: 133:             break;
  1813  003A84  EF72  F01D         	goto	l8322
  1814  003A88                     l8316:
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;main.c: 136:             sprintf(buffer, "\rDerecha: %.2f\r\n", sensorDerecha);
  1818  003A88  0EBF               	movlw	low _buffer
  1819  003A8A  6FEB               	movwf	sprintf@s& (0+255),b
  1820  003A8C  0E01               	movlw	high _buffer
  1821  003A8E  6FEC               	movwf	(sprintf@s+1)& (0+255),b
  1822  003A90  0E9D               	movlw	low STR_6
  1823  003A92  6FED               	movwf	sprintf@fmt& (0+255),b
  1824  003A94  0E08               	movlw	high STR_6
  1825  003A96  6FEE               	movwf	(sprintf@fmt+1)& (0+255),b
  1826  003A98  C12C  F0EF         	movff	_sensorDerecha,?_sprintf+4
  1827  003A9C  C12D  F0F0         	movff	_sensorDerecha+1,?_sprintf+5
  1828  003AA0  C12E  F0F1         	movff	_sensorDerecha+2,?_sprintf+6
  1829  003AA4  C12F  F0F2         	movff	_sensorDerecha+3,?_sprintf+7
  1830  003AA8  EC50  F022         	call	_sprintf	;wreg free
  1831                           
  1832                           ;main.c: 137:             break;
  1833  003AAC  EF72  F01D         	goto	l8322
  1834  003AB0                     l8320:
  1835  003AB0  0100               	movlb	0	; () banked
  1836  003AB2  51FF               	movf	probarUltrasonico@numeroSensor& (0+255),w,b
  1837  003AB4  6FFD               	movwf	??_probarUltrasonico& (0+255),b
  1838  003AB6  6BFE               	clrf	(??_probarUltrasonico+1)& (0+255),b
  1839                           
  1840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1841                           ; Switch size 1, requested type "simple"
  1842                           ; Number of cases is 1, Range of values is 0 to 0
  1843                           ; switch strategies available:
  1844                           ; Name         Instructions Cycles
  1845                           ; simple_byte            4     3 (average)
  1846                           ;	Chosen strategy is simple_byte
  1847  003AB8  51FE               	movf	(??_probarUltrasonico+1)& (0+255),w,b
  1848  003ABA  0A00               	xorlw	0	; case 0
  1849  003ABC  B4D8               	btfsc	status,2,c
  1850  003ABE  EF63  F01D         	goto	l9118
  1851  003AC2  EF72  F01D         	goto	l8322
  1852  003AC6                     l9118:
  1853                           
  1854                           ; BSR set to: 0
  1855                           ; Switch size 1, requested type "simple"
  1856                           ; Number of cases is 3, Range of values is 1 to 3
  1857                           ; switch strategies available:
  1858                           ; Name         Instructions Cycles
  1859                           ; simple_byte           10     6 (average)
  1860                           ;	Chosen strategy is simple_byte
  1861  003AC6  51FD               	movf	??_probarUltrasonico& (0+255),w,b
  1862  003AC8  0A01               	xorlw	1	; case 1
  1863  003ACA  B4D8               	btfsc	status,2,c
  1864  003ACC  EF1C  F01D         	goto	l8312
  1865  003AD0  0A03               	xorlw	3	; case 2
  1866  003AD2  B4D8               	btfsc	status,2,c
  1867  003AD4  EF30  F01D         	goto	l8314
  1868  003AD8  0A01               	xorlw	1	; case 3
  1869  003ADA  B4D8               	btfsc	status,2,c
  1870  003ADC  EF44  F01D         	goto	l8316
  1871  003AE0  EF72  F01D         	goto	l8322
  1872  003AE4                     l8322:
  1873                           
  1874                           ;main.c: 142:     UART_printf(buffer);
  1875  003AE4  0EBF               	movlw	low _buffer
  1876  003AE6  6E07               	movwf	UART_printf@cadena^0,c
  1877  003AE8  0E01               	movlw	high _buffer
  1878  003AEA  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1879  003AEC  EC9D  F021         	call	_UART_printf	;wreg free
  1880  003AF0                     
  1881                           ;main.c: 143:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1882  003AF0  0E06               	movlw	6
  1883  003AF2  0100               	movlb	0	; () banked
  1884  003AF4  6FFE               	movwf	(??_probarUltrasonico+1)& (0+255),b
  1885  003AF6  0E13               	movlw	19
  1886  003AF8  6FFD               	movwf	??_probarUltrasonico& (0+255),b
  1887  003AFA  0EAD               	movlw	173
  1888  003AFC                     u10777:
  1889  003AFC  2EE8               	decfsz	wreg,f,c
  1890  003AFE  D7FE               	bra	u10777
  1891  003B00  2FFD               	decfsz	??_probarUltrasonico& (0+255),f,b
  1892  003B02  D7FC               	bra	u10777
  1893  003B04  2FFE               	decfsz	(??_probarUltrasonico+1)& (0+255),f,b
  1894  003B06  D7FA               	bra	u10777
  1895  003B08  D000               	nop2	
  1896  003B0A  0012               	return		;funcret
  1897  003B0C                     __end_of_probarUltrasonico:
  1898                           	opt callstack 0
  1899                           
  1900 ;; *************** function _sprintf *****************
  1901 ;; Defined at:
  1902 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  s               2  139[BANK0 ] PTR unsigned char 
  1905 ;;		 -> buffer(50), 
  1906 ;;  fmt             2  141[BANK0 ] PTR const unsigned char 
  1907 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  1908 ;;		 -> STR_3(34), 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  f               6  151[BANK0 ] struct _IO_FILE
  1911 ;;  ap              2  149[BANK0 ] PTR void [1]
  1912 ;;		 -> ?_sprintf(2), 
  1913 ;;  ret             2    0        int 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  2  139[BANK0 ] int 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1923 ;;      Params:         0       8       0       0       0       0       0       0       0
  1924 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1926 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1927 ;;Total ram usage:       18 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    9
  1930 ;; This function calls:
  1931 ;;		_vfprintf
  1932 ;; This function is called by:
  1933 ;;		_probarSensores
  1934 ;;		_probarUltrasonico
  1935 ;;		_visualizarPasosRealizados
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text3
  1940  0044A0                     __ptext3:
  1941                           	opt callstack 0
  1942  0044A0                     _sprintf:
  1943                           	opt callstack 20
  1944  0044A0  0EEF               	movlw	low (?_sprintf+4)
  1945  0044A2  0100               	movlb	0	; () banked
  1946  0044A4  6FF5               	movwf	sprintf@ap& (0+255),b
  1947  0044A6  0E00               	movlw	high (?_sprintf+4)
  1948  0044A8  6FF6               	movwf	(sprintf@ap+1)& (0+255),b
  1949  0044AA  C0EB  F0F7         	movff	sprintf@s,sprintf@f
  1950  0044AE  C0EC  F0F8         	movff	sprintf@s+1,sprintf@f+1
  1951  0044B2                     
  1952                           ; BSR set to: 0
  1953  0044B2  0E00               	movlw	0
  1954  0044B4  6FFA               	movwf	(sprintf@f+3)& (0+255),b
  1955  0044B6  0E00               	movlw	0
  1956  0044B8  6FF9               	movwf	(sprintf@f+2)& (0+255),b
  1957  0044BA                     
  1958                           ; BSR set to: 0
  1959  0044BA  0E00               	movlw	0
  1960  0044BC  6FFC               	movwf	(sprintf@f+5)& (0+255),b
  1961  0044BE  0E00               	movlw	0
  1962  0044C0  6FFB               	movwf	(sprintf@f+4)& (0+255),b
  1963  0044C2                     
  1964                           ; BSR set to: 0
  1965  0044C2  0EF7               	movlw	low sprintf@f
  1966  0044C4  6FE3               	movwf	vfprintf@fp& (0+255),b
  1967  0044C6  0E00               	movlw	high sprintf@f
  1968  0044C8  6FE4               	movwf	(vfprintf@fp+1)& (0+255),b
  1969  0044CA  C0ED  F0E5         	movff	sprintf@fmt,vfprintf@fmt
  1970  0044CE  C0EE  F0E6         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1971  0044D2  0EF5               	movlw	low sprintf@ap
  1972  0044D4  6FE7               	movwf	vfprintf@ap& (0+255),b
  1973  0044D6  0E00               	movlw	high sprintf@ap
  1974  0044D8  6FE8               	movwf	(vfprintf@ap+1)& (0+255),b
  1975  0044DA  EC03  F021         	call	_vfprintf	;wreg free
  1976  0044DE  0100               	movlb	0	; () banked
  1977  0044E0  51F9               	movf	(sprintf@f+2)& (0+255),w,b
  1978  0044E2  25EB               	addwf	sprintf@s& (0+255),w,b
  1979  0044E4  6ED9               	movwf	fsr2l,c
  1980  0044E6  51FA               	movf	(sprintf@f+3)& (0+255),w,b
  1981  0044E8  21EC               	addwfc	(sprintf@s+1)& (0+255),w,b
  1982  0044EA  6EDA               	movwf	fsr2h,c
  1983  0044EC  0E00               	movlw	0
  1984  0044EE  6EDF               	movwf	indf2,c
  1985  0044F0                     
  1986                           ; BSR set to: 0
  1987  0044F0  0012               	return		;funcret
  1988  0044F2                     __end_of_sprintf:
  1989                           	opt callstack 0
  1990                           
  1991 ;; *************** function _vfprintf *****************
  1992 ;; Defined at:
  1993 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  fp              2  131[BANK0 ] PTR struct _IO_FILE
  1996 ;;		 -> sprintf@f(6), 
  1997 ;;  fmt             2  133[BANK0 ] PTR const unsigned char 
  1998 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  1999 ;;		 -> STR_3(34), 
  2000 ;;  ap              2  135[BANK0 ] PTR PTR void 
  2001 ;;		 -> sprintf@ap(2), 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  cfmt            2  137[BANK0 ] PTR unsigned char 
  2004 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2005 ;;		 -> STR_3(34), 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  2  131[BANK0 ] int 
  2008 ;; Registers used:
  2009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2015 ;;      Params:         0       6       0       0       0       0       0       0       0
  2016 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2018 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2019 ;;Total ram usage:        8 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    8
  2022 ;; This function calls:
  2023 ;;		_vfpfcnvrt
  2024 ;; This function is called by:
  2025 ;;		_sprintf
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text4
  2030  004206                     __ptext4:
  2031                           	opt callstack 0
  2032  004206                     _vfprintf:
  2033                           	opt callstack 20
  2034  004206                     
  2035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2036  004206  C0E5  F0E9         	movff	vfprintf@fmt,vfprintf@cfmt
  2037  00420A  C0E6  F0EA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2038  00420E                     
  2039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2040  00420E  0E00               	movlw	0
  2041  004210  0101               	movlb	1	; () banked
  2042  004212  6F31               	movwf	(_nout+1)& (0+255),b
  2043  004214  0E00               	movlw	0
  2044  004216  6F30               	movwf	_nout& (0+255),b
  2045                           
  2046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2047  004218  EF25  F021         	goto	l8138
  2048  00421C                     l8136:
  2049                           
  2050                           ; BSR set to: 1
  2051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2052  00421C  C0E3  F0C5         	movff	vfprintf@fp,vfpfcnvrt@fp
  2053  004220  C0E4  F0C6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2054  004224  0EE9               	movlw	low vfprintf@cfmt
  2055  004226  0100               	movlb	0	; () banked
  2056  004228  6FC7               	movwf	vfpfcnvrt@fmt& (0+255),b
  2057  00422A  0E00               	movlw	high vfprintf@cfmt
  2058  00422C  6FC8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2059  00422E  C0E7  F0C9         	movff	vfprintf@ap,vfpfcnvrt@ap
  2060  004232  C0E8  F0CA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2061  004236  EC4F  F00A         	call	_vfpfcnvrt	;wreg free
  2062  00423A  0100               	movlb	0	; () banked
  2063  00423C  51C5               	movf	?_vfpfcnvrt& (0+255),w,b
  2064  00423E  0101               	movlb	1	; () banked
  2065  004240  2730               	addwf	_nout& (0+255),f,b
  2066  004242  0100               	movlb	0	; () banked
  2067  004244  51C6               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2068  004246  0101               	movlb	1	; () banked
  2069  004248  2331               	addwfc	(_nout+1)& (0+255),f,b
  2070  00424A                     l8138:
  2071                           
  2072                           ; BSR set to: 1
  2073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2074  00424A  C0E9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2075  00424E  C0EA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2076  004252                     	if	0	;tblptru may be non-zero
  2077  004252                     	endif
  2078  004252                     	if	0	;tblptru may be non-zero
  2079  004252                     	endif
  2080  004252  0008               	tblrd		*
  2081  004254  50F5               	movf	tablat,w,c
  2082  004256  0900               	iorlw	0
  2083  004258  A4D8               	btfss	status,2,c
  2084  00425A  EF31  F021         	goto	u9861
  2085  00425E  EF33  F021         	goto	u9860
  2086  004262                     u9861:
  2087  004262  EF0E  F021         	goto	l8136
  2088  004266                     u9860:
  2089  004266                     
  2090                           ; BSR set to: 1
  2091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2092  004266  C130  F0E3         	movff	_nout,?_vfprintf
  2093  00426A  C131  F0E4         	movff	_nout+1,?_vfprintf+1
  2094  00426E                     
  2095                           ; BSR set to: 1
  2096  00426E  0012               	return		;funcret
  2097  004270                     __end_of_vfprintf:
  2098                           	opt callstack 0
  2099                           
  2100 ;; *************** function _vfpfcnvrt *****************
  2101 ;; Defined at:
  2102 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  2105 ;;		 -> sprintf@f(6), 
  2106 ;;  fmt             2  103[BANK0 ] PTR PTR unsigned char 
  2107 ;;		 -> vfprintf@cfmt(2), 
  2108 ;;  ap              2  105[BANK0 ] PTR PTR void 
  2109 ;;		 -> sprintf@ap(2), 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  ll              8  111[BANK0 ] long long 
  2112 ;;  llu             8    0        unsigned long long 
  2113 ;;  f               4  123[BANK0 ] unsigned long long 
  2114 ;;  ct              3  127[BANK0 ] unsigned char [3]
  2115 ;;  vp              3    0        PTR void 
  2116 ;;  cp              3    0        PTR unsigned char 
  2117 ;;  i               2    0        int 
  2118 ;;  done            2    0        int 
  2119 ;;  c               1  130[BANK0 ] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  2  101[BANK0 ] int 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2129 ;;      Params:         0       6       0       0       0       0       0       0       0
  2130 ;;      Locals:         0      20       0       0       0       0       0       0       0
  2131 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2132 ;;      Totals:         0      30       0       0       0       0       0       0       0
  2133 ;;Total ram usage:       30 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    7
  2136 ;; This function calls:
  2137 ;;		_atoi
  2138 ;;		_dtoa
  2139 ;;		_efgtoa
  2140 ;;		_fputc
  2141 ;;		_isdigit
  2142 ;;		_isupper
  2143 ;;		_strncmp
  2144 ;;		_tolower
  2145 ;; This function is called by:
  2146 ;;		_vfprintf
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text5
  2151  00149E                     __ptext5:
  2152                           	opt callstack 0
  2153  00149E                     _vfpfcnvrt:
  2154                           	opt callstack 20
  2155  00149E                     
  2156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2157  00149E  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2158  0014A2  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2159  0014A6  CFDE FFF6          	movff	postinc2,tblptrl
  2160  0014AA  CFDD FFF7          	movff	postdec2,tblptrh
  2161  0014AE                     	if	0	;tblptru may be non-zero
  2162  0014AE                     	endif
  2163  0014AE                     	if	0	;tblptru may be non-zero
  2164  0014AE                     	endif
  2165  0014AE  0008               	tblrd		*
  2166  0014B0  50F5               	movf	tablat,w,c
  2167  0014B2  0A25               	xorlw	37
  2168  0014B4  A4D8               	btfss	status,2,c
  2169  0014B6  EF5F  F00A         	goto	u9611
  2170  0014BA  EF61  F00A         	goto	u9610
  2171  0014BE                     u9611:
  2172  0014BE  EFCE  F00C         	goto	l8064
  2173  0014C2                     u9610:
  2174  0014C2                     
  2175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2176  0014C2  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2177  0014C6  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2178  0014CA  2ADE               	incf	postinc2,f,c
  2179  0014CC  0E00               	movlw	0
  2180  0014CE  22DD               	addwfc	postdec2,f,c
  2181  0014D0                     
  2182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2183  0014D0  0E00               	movlw	0
  2184  0014D2  0101               	movlb	1	; () banked
  2185  0014D4  6F33               	movwf	(_width+1)& (0+255),b
  2186  0014D6  0E00               	movlw	0
  2187  0014D8  6F32               	movwf	_width& (0+255),b
  2188  0014DA  C132  F057         	movff	_width,_flags
  2189  0014DE  C133  F058         	movff	_width+1,_flags+1
  2190  0014E2                     
  2191                           ; BSR set to: 1
  2192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2193  0014E2  6855               	setf	_prec^0,c
  2194  0014E4  6856               	setf	(_prec+1)^0,c
  2195  0014E6                     
  2196                           ; BSR set to: 1
  2197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2198  0014E6  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2199  0014EA  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2200  0014EE  CFDE FFF6          	movff	postinc2,tblptrl
  2201  0014F2  CFDD FFF7          	movff	postdec2,tblptrh
  2202  0014F6                     	if	0	;tblptru may be non-zero
  2203  0014F6                     	endif
  2204  0014F6                     	if	0	;tblptru may be non-zero
  2205  0014F6                     	endif
  2206  0014F6  0008               	tblrd		*
  2207  0014F8  50F5               	movf	tablat,w,c
  2208  0014FA  0A2E               	xorlw	46
  2209  0014FC  A4D8               	btfss	status,2,c
  2210  0014FE  EF83  F00A         	goto	u9621
  2211  001502  EF85  F00A         	goto	u9620
  2212  001506                     u9621:
  2213  001506  EF03  F00B         	goto	l8000
  2214  00150A                     u9620:
  2215  00150A                     
  2216                           ; BSR set to: 1
  2217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2218  00150A  0E00               	movlw	0
  2219  00150C  6E56               	movwf	(_prec+1)^0,c
  2220  00150E  0E00               	movlw	0
  2221  001510  6E55               	movwf	_prec^0,c
  2222  001512                     
  2223                           ; BSR set to: 1
  2224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2225  001512  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2226  001516  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2227  00151A  2ADE               	incf	postinc2,f,c
  2228  00151C  0E00               	movlw	0
  2229  00151E  22DD               	addwfc	postdec2,f,c
  2230  001520                     
  2231                           ; BSR set to: 1
  2232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2233  001520  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2234  001524  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2235  001528  CFDE FFF6          	movff	postinc2,tblptrl
  2236  00152C  CFDD FFF7          	movff	postdec2,tblptrh
  2237  001530                     	if	0	;tblptru may be non-zero
  2238  001530                     	endif
  2239  001530                     	if	0	;tblptru may be non-zero
  2240  001530                     	endif
  2241  001530  0008               	tblrd		*
  2242  001532  50F5               	movf	tablat,w,c
  2243  001534  0A2A               	xorlw	42
  2244  001536  A4D8               	btfss	status,2,c
  2245  001538  EFA0  F00A         	goto	u9631
  2246  00153C  EFA2  F00A         	goto	u9630
  2247  001540                     u9631:
  2248  001540  EFBF  F00A         	goto	l7990
  2249  001544                     u9630:
  2250  001544                     
  2251                           ; BSR set to: 1
  2252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2253  001544  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2254  001548  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2255  00154C  2ADE               	incf	postinc2,f,c
  2256  00154E  0E00               	movlw	0
  2257  001550  22DD               	addwfc	postdec2,f,c
  2258                           
  2259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2260  001552  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2261  001556  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2262  00155A  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2263  00155E  0E02               	movlw	2
  2264  001560  26DE               	addwf	postinc2,f,c
  2265  001562  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2266  001566  0E00               	movlw	0
  2267  001568  22DD               	addwfc	postdec2,f,c
  2268  00156A  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2269  00156E  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2270  001572  CFDE F055          	movff	postinc2,_prec
  2271  001576  CFDD F056          	movff	postdec2,_prec+1
  2272                           
  2273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2274  00157A  EF03  F00B         	goto	l8000
  2275  00157E                     l7990:
  2276                           
  2277                           ; BSR set to: 1
  2278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2279  00157E  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2280  001582  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2281  001586  CFDE F00D          	movff	postinc2,atoi@s
  2282  00158A  CFDD F00E          	movff	postdec2,atoi@s+1
  2283  00158E  EC5F  F017         	call	_atoi	;wreg free
  2284  001592  C00D  F055         	movff	?_atoi,_prec
  2285  001596  C00E  F056         	movff	?_atoi+1,_prec+1
  2286                           
  2287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2288  00159A  EFD6  F00A         	goto	l7994
  2289  00159E                     l7992:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2293  00159E  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2294  0015A2  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2295  0015A6  2ADE               	incf	postinc2,f,c
  2296  0015A8  0E00               	movlw	0
  2297  0015AA  22DD               	addwfc	postdec2,f,c
  2298  0015AC                     l7994:
  2299  0015AC  0ED0               	movlw	208
  2300  0015AE  0100               	movlb	0	; () banked
  2301  0015B0  6FCB               	movwf	??_vfpfcnvrt& (0+255),b
  2302  0015B2  0EFF               	movlw	255
  2303  0015B4  6FCC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2304  0015B6  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2305  0015BA  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2306  0015BE  CFDE FFF6          	movff	postinc2,tblptrl
  2307  0015C2  CFDD FFF7          	movff	postdec2,tblptrh
  2308  0015C6                     	if	0	;tblptru may be non-zero
  2309  0015C6                     	endif
  2310  0015C6                     	if	0	;tblptru may be non-zero
  2311  0015C6                     	endif
  2312  0015C6  0008               	tblrd		*
  2313  0015C8  50F5               	movf	tablat,w,c
  2314  0015CA  6FCD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2315  0015CC  6BCE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2316  0015CE  51CB               	movf	??_vfpfcnvrt& (0+255),w,b
  2317  0015D0  27CD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2318  0015D2  51CC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2319  0015D4  23CE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2320  0015D6  51CE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2321  0015D8  E10A               	bnz	u9640
  2322  0015DA  0E0A               	movlw	10
  2323  0015DC  5DCD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2324  0015DE  A0D8               	btfss	status,0,c
  2325  0015E0  EFF4  F00A         	goto	u9641
  2326  0015E4  EFF7  F00A         	goto	u9640
  2327  0015E8                     u9641:
  2328  0015E8  0E01               	movlw	1
  2329  0015EA  EFF8  F00A         	goto	u9650
  2330  0015EE                     u9640:
  2331  0015EE  0E00               	movlw	0
  2332  0015F0                     u9650:
  2333  0015F0  6FD7               	movwf	_vfpfcnvrt$848& (0+255),b
  2334  0015F2  6BD8               	clrf	(_vfpfcnvrt$848+1)& (0+255),b
  2335  0015F4                     
  2336                           ; BSR set to: 0
  2337  0015F4  51D7               	movf	_vfpfcnvrt$848& (0+255),w,b
  2338  0015F6  11D8               	iorwf	(_vfpfcnvrt$848+1)& (0+255),w,b
  2339  0015F8  A4D8               	btfss	status,2,c
  2340  0015FA  EF01  F00B         	goto	u9661
  2341  0015FE  EF03  F00B         	goto	u9660
  2342  001602                     u9661:
  2343  001602  EFCF  F00A         	goto	l7992
  2344  001606                     u9660:
  2345  001606                     l8000:
  2346                           
  2347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2348  001606  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2349  00160A  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2350  00160E  CFDE FFF6          	movff	postinc2,tblptrl
  2351  001612  CFDD FFF7          	movff	postdec2,tblptrh
  2352  001616                     	if	0	;tblptru may be non-zero
  2353  001616                     	endif
  2354  001616                     	if	0	;tblptru may be non-zero
  2355  001616                     	endif
  2356  001616  0008               	tblrd		*
  2357  001618  50F5               	movf	tablat,w,c
  2358  00161A  6E0C               	movwf	tolower@c^0,c
  2359  00161C  6A0D               	clrf	(tolower@c+1)^0,c
  2360  00161E  EC6D  F021         	call	_tolower	;wreg free
  2361  001622  500C               	movf	?_tolower^0,w,c
  2362  001624  0100               	movlb	0	; () banked
  2363  001626  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  2364  001628                     
  2365                           ; BSR set to: 0
  2366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2367  001628  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  2368  00162A  B4D8               	btfsc	status,2,c
  2369  00162C  EF1A  F00B         	goto	u9671
  2370  001630  EF1C  F00B         	goto	u9670
  2371  001634                     u9671:
  2372  001634  EF56  F00B         	goto	l8010
  2373  001638                     u9670:
  2374  001638                     
  2375                           ; BSR set to: 0
  2376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2377  001638  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2378  00163C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2379  001640  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  2380  001644  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  2381  001648  0E01               	movlw	1
  2382  00164A  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  2383  00164C  0E00               	movlw	0
  2384  00164E  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2385  001650  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2386  001654  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2387  001658                     	if	0	;tblptru may be non-zero
  2388  001658                     	endif
  2389  001658                     	if	0	;tblptru may be non-zero
  2390  001658                     	endif
  2391  001658  0008               	tblrd		*
  2392  00165A  50F5               	movf	tablat,w,c
  2393  00165C  6E0C               	movwf	tolower@c^0,c
  2394  00165E  6A0D               	clrf	(tolower@c+1)^0,c
  2395  001660  EC6D  F021         	call	_tolower	;wreg free
  2396  001664  500C               	movf	?_tolower^0,w,c
  2397  001666  0100               	movlb	0	; () banked
  2398  001668  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2399  00166A                     
  2400                           ; BSR set to: 0
  2401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2402  00166A  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2403  00166C  B4D8               	btfsc	status,2,c
  2404  00166E  EF3B  F00B         	goto	u9681
  2405  001672  EF3D  F00B         	goto	u9680
  2406  001676                     u9681:
  2407  001676  EF56  F00B         	goto	l8010
  2408  00167A                     u9680:
  2409  00167A                     
  2410                           ; BSR set to: 0
  2411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2412  00167A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2413  00167E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2414  001682  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  2415  001686  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  2416  00168A  0E02               	movlw	2
  2417  00168C  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  2418  00168E  0E00               	movlw	0
  2419  001690  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2420  001692  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2421  001696  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2422  00169A                     	if	0	;tblptru may be non-zero
  2423  00169A                     	endif
  2424  00169A                     	if	0	;tblptru may be non-zero
  2425  00169A                     	endif
  2426  00169A  0008               	tblrd		*
  2427  00169C  50F5               	movf	tablat,w,c
  2428  00169E  6E0C               	movwf	tolower@c^0,c
  2429  0016A0  6A0D               	clrf	(tolower@c+1)^0,c
  2430  0016A2  EC6D  F021         	call	_tolower	;wreg free
  2431  0016A6  500C               	movf	?_tolower^0,w,c
  2432  0016A8  0100               	movlb	0	; () banked
  2433  0016AA  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2434  0016AC                     l8010:
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2438  0016AC  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2439  0016B0  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2440  0016B4  CFDE FFF6          	movff	postinc2,tblptrl
  2441  0016B8  CFDD FFF7          	movff	postdec2,tblptrh
  2442  0016BC                     	if	0	;tblptru may be non-zero
  2443  0016BC                     	endif
  2444  0016BC                     	if	0	;tblptru may be non-zero
  2445  0016BC                     	endif
  2446  0016BC  0008               	tblrd		*
  2447  0016BE  50F5               	movf	tablat,w,c
  2448  0016C0  0A64               	xorlw	100
  2449  0016C2  B4D8               	btfsc	status,2,c
  2450  0016C4  EF66  F00B         	goto	u9691
  2451  0016C8  EF68  F00B         	goto	u9690
  2452  0016CC                     u9691:
  2453  0016CC  EF7A  F00B         	goto	l8014
  2454  0016D0                     u9690:
  2455  0016D0                     
  2456                           ; BSR set to: 0
  2457  0016D0  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2458  0016D4  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2459  0016D8  CFDE FFF6          	movff	postinc2,tblptrl
  2460  0016DC  CFDD FFF7          	movff	postdec2,tblptrh
  2461  0016E0                     	if	0	;tblptru may be non-zero
  2462  0016E0                     	endif
  2463  0016E0                     	if	0	;tblptru may be non-zero
  2464  0016E0                     	endif
  2465  0016E0  0008               	tblrd		*
  2466  0016E2  50F5               	movf	tablat,w,c
  2467  0016E4  0A69               	xorlw	105
  2468  0016E6  A4D8               	btfss	status,2,c
  2469  0016E8  EF78  F00B         	goto	u9701
  2470  0016EC  EF7A  F00B         	goto	u9700
  2471  0016F0                     u9701:
  2472  0016F0  EFBA  F00B         	goto	l8020
  2473  0016F4                     u9700:
  2474  0016F4                     l8014:
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2478  0016F4  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2479  0016F8  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2480  0016FC  2ADE               	incf	postinc2,f,c
  2481  0016FE  0E00               	movlw	0
  2482  001700  22DD               	addwfc	postdec2,f,c
  2483                           
  2484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2485  001702  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2486  001706  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2487  00170A  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2488  00170E  0E02               	movlw	2
  2489  001710  26DE               	addwf	postinc2,f,c
  2490  001712  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2491  001716  0E00               	movlw	0
  2492  001718  22DD               	addwfc	postdec2,f,c
  2493  00171A  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2494  00171E  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2495  001722  CFDE F0CF          	movff	postinc2,vfpfcnvrt@ll
  2496  001726  CFDD F0D0          	movff	postdec2,vfpfcnvrt@ll+1
  2497  00172A  0E00               	movlw	0
  2498  00172C  BFD0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2499  00172E  0EFF               	movlw	-1
  2500  001730  6FD1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2501  001732  6FD2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2502  001734  6FD3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2503  001736  6FD4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2504  001738  6FD5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2505  00173A  6FD6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2506  00173C                     
  2507                           ; BSR set to: 0
  2508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2509  00173C  C0C5  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  2510  001740  C0C6  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2511  001744  C0CF  F023         	movff	vfpfcnvrt@ll,dtoa@d
  2512  001748  C0D0  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2513  00174C  C0D1  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2514  001750  C0D2  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2515  001754  C0D3  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2516  001758  C0D4  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2517  00175C  C0D5  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2518  001760  C0D6  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2519  001764  EC2D  F013         	call	_dtoa	;wreg free
  2520  001768  C021  F0C5         	movff	?_dtoa,?_vfpfcnvrt
  2521  00176C  C022  F0C6         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2522  001770  EFE9  F00C         	goto	l766
  2523  001774                     l8020:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2527  001774  0E66               	movlw	102
  2528  001776  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2529  001778  A4D8               	btfss	status,2,c
  2530  00177A  EFC1  F00B         	goto	u9711
  2531  00177E  EFC3  F00B         	goto	u9710
  2532  001782                     u9711:
  2533  001782  EF03  F00C         	goto	l8032
  2534  001786                     u9710:
  2535  001786                     
  2536                           ; BSR set to: 0
  2537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2538  001786  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2539  00178A  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2540  00178E  CFDE FFF6          	movff	postinc2,tblptrl
  2541  001792  CFDD FFF7          	movff	postdec2,tblptrh
  2542  001796                     	if	0	;tblptru may be non-zero
  2543  001796                     	endif
  2544  001796                     	if	0	;tblptru may be non-zero
  2545  001796                     	endif
  2546  001796  0008               	tblrd		*
  2547  001798  CFF5 F0E2          	movff	tablat,vfpfcnvrt@c
  2548  00179C                     
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2551  00179C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2552  0017A0  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2553  0017A4  2ADE               	incf	postinc2,f,c
  2554  0017A6  0E00               	movlw	0
  2555  0017A8  22DD               	addwfc	postdec2,f,c
  2556  0017AA                     
  2557                           ; BSR set to: 0
  2558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2559  0017AA  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2560  0017AE  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2561  0017B2  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2562  0017B6  0E04               	movlw	4
  2563  0017B8  26DE               	addwf	postinc2,f,c
  2564  0017BA  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2565  0017BE  0E00               	movlw	0
  2566  0017C0  22DD               	addwfc	postdec2,f,c
  2567  0017C2  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2568  0017C6  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2569  0017CA  CFDE F0DB          	movff	postinc2,vfpfcnvrt@f
  2570  0017CE  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f+1
  2571  0017D2  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+2
  2572  0017D6  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+3
  2573  0017DA                     l8028:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2577  0017DA  C0C5  F081         	movff	vfpfcnvrt@fp,efgtoa@fp
  2578  0017DE  C0C6  F082         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2579  0017E2  C0DB  F083         	movff	vfpfcnvrt@f,efgtoa@f
  2580  0017E6  C0DC  F084         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2581  0017EA  C0DD  F085         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2582  0017EE  C0DE  F086         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2583  0017F2  C0E2  F087         	movff	vfpfcnvrt@c,efgtoa@c
  2584  0017F6  EC73  F004         	call	_efgtoa	;wreg free
  2585  0017FA  C081  F0C5         	movff	?_efgtoa,?_vfpfcnvrt
  2586  0017FE  C082  F0C6         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2587  001802  EFE9  F00C         	goto	l766
  2588  001806                     l8032:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2592  001806  0EDF               	movlw	low vfpfcnvrt@ct
  2593  001808  6E06               	movwf	strncmp@_l^0,c
  2594  00180A  0E00               	movlw	high vfpfcnvrt@ct
  2595  00180C  6E07               	movwf	(strncmp@_l+1)^0,c
  2596  00180E  0EE2               	movlw	low STR_20
  2597  001810  6E08               	movwf	strncmp@_r^0,c
  2598  001812  0E08               	movlw	high STR_20
  2599  001814  6E09               	movwf	(strncmp@_r+1)^0,c
  2600  001816  0E00               	movlw	0
  2601  001818  6E0B               	movwf	(strncmp@n+1)^0,c
  2602  00181A  0E02               	movlw	2
  2603  00181C  6E0A               	movwf	strncmp@n^0,c
  2604  00181E  EC86  F01D         	call	_strncmp	;wreg free
  2605  001822  5006               	movf	?_strncmp^0,w,c
  2606  001824  1007               	iorwf	(?_strncmp+1)^0,w,c
  2607  001826  A4D8               	btfss	status,2,c
  2608  001828  EF18  F00C         	goto	u9721
  2609  00182C  EF1A  F00C         	goto	u9720
  2610  001830                     u9721:
  2611  001830  EF96  F00C         	goto	l8048
  2612  001834                     u9720:
  2613  001834                     
  2614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2615  001834  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2616  001838  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2617  00183C  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  2618  001840  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  2619  001844  0E01               	movlw	1
  2620  001846  0100               	movlb	0	; () banked
  2621  001848  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  2622  00184A  0E00               	movlw	0
  2623  00184C  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2624  00184E  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2625  001852  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2626  001856                     	if	0	;tblptru may be non-zero
  2627  001856                     	endif
  2628  001856                     	if	0	;tblptru may be non-zero
  2629  001856                     	endif
  2630  001856  0008               	tblrd		*
  2631  001858  CFF5 F0E2          	movff	tablat,vfpfcnvrt@c
  2632  00185C  0EBF               	movlw	191
  2633  00185E  6FCB               	movwf	??_vfpfcnvrt& (0+255),b
  2634  001860  0EFF               	movlw	255
  2635  001862  6FCC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2636  001864  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2637  001868  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2638  00186C  CFDE FFF6          	movff	postinc2,tblptrl
  2639  001870  CFDD FFF7          	movff	postdec2,tblptrh
  2640  001874                     	if	0	;tblptru may be non-zero
  2641  001874                     	endif
  2642  001874                     	if	0	;tblptru may be non-zero
  2643  001874                     	endif
  2644  001874  0008               	tblrd		*
  2645  001876  50F5               	movf	tablat,w,c
  2646  001878  6FCD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2647  00187A  6BCE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2648  00187C  51CB               	movf	??_vfpfcnvrt& (0+255),w,b
  2649  00187E  27CD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2650  001880  51CC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2651  001882  23CE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2652  001884  51CE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2653  001886  E10A               	bnz	u9730
  2654  001888  0E1A               	movlw	26
  2655  00188A  5DCD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2656  00188C  A0D8               	btfss	status,0,c
  2657  00188E  EF4B  F00C         	goto	u9731
  2658  001892  EF4E  F00C         	goto	u9730
  2659  001896                     u9731:
  2660  001896  0E01               	movlw	1
  2661  001898  EF4F  F00C         	goto	u9740
  2662  00189C                     u9730:
  2663  00189C  0E00               	movlw	0
  2664  00189E                     u9740:
  2665  00189E  6FD9               	movwf	_vfpfcnvrt$853& (0+255),b
  2666  0018A0  6BDA               	clrf	(_vfpfcnvrt$853+1)& (0+255),b
  2667  0018A2                     
  2668                           ; BSR set to: 0
  2669  0018A2  51D9               	movf	_vfpfcnvrt$853& (0+255),w,b
  2670  0018A4  11DA               	iorwf	(_vfpfcnvrt$853+1)& (0+255),w,b
  2671  0018A6  B4D8               	btfsc	status,2,c
  2672  0018A8  EF58  F00C         	goto	u9751
  2673  0018AC  EF5A  F00C         	goto	u9750
  2674  0018B0                     u9751:
  2675  0018B0  EF74  F00C         	goto	l8042
  2676  0018B4                     u9750:
  2677  0018B4                     
  2678                           ; BSR set to: 0
  2679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2680  0018B4  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2681  0018B8  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2682  0018BC  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2683  0018C0  0E04               	movlw	4
  2684  0018C2  26DE               	addwf	postinc2,f,c
  2685  0018C4  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2686  0018C8  0E00               	movlw	0
  2687  0018CA  22DD               	addwfc	postdec2,f,c
  2688  0018CC  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2689  0018D0  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2690  0018D4  CFDE F0DB          	movff	postinc2,vfpfcnvrt@f
  2691  0018D8  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f+1
  2692  0018DC  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+2
  2693  0018E0  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+3
  2694                           
  2695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2696  0018E4  EF8C  F00C         	goto	l774
  2697  0018E8                     l8042:
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2701  0018E8  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2702  0018EC  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2703  0018F0  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2704  0018F4  0E04               	movlw	4
  2705  0018F6  26DE               	addwf	postinc2,f,c
  2706  0018F8  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2707  0018FC  0E00               	movlw	0
  2708  0018FE  22DD               	addwfc	postdec2,f,c
  2709  001900  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2710  001904  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2711  001908  CFDE F0DB          	movff	postinc2,vfpfcnvrt@f
  2712  00190C  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f+1
  2713  001910  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+2
  2714  001914  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+3
  2715  001918                     l774:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2719  001918  0E02               	movlw	2
  2720  00191A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2721  00191E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2722  001922  26DE               	addwf	postinc2,f,c
  2723  001924  0E00               	movlw	0
  2724  001926  22DD               	addwfc	postdec2,f,c
  2725  001928  EFED  F00B         	goto	l8028
  2726  00192C                     l8048:
  2727                           
  2728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2729  00192C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2730  001930  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2731  001934  CFDE FFF6          	movff	postinc2,tblptrl
  2732  001938  CFDD FFF7          	movff	postdec2,tblptrh
  2733  00193C                     	if	0	;tblptru may be non-zero
  2734  00193C                     	endif
  2735  00193C                     	if	0	;tblptru may be non-zero
  2736  00193C                     	endif
  2737  00193C  0008               	tblrd		*
  2738  00193E  50F5               	movf	tablat,w,c
  2739  001940  0A25               	xorlw	37
  2740  001942  A4D8               	btfss	status,2,c
  2741  001944  EFA6  F00C         	goto	u9761
  2742  001948  EFA8  F00C         	goto	u9760
  2743  00194C                     u9761:
  2744  00194C  EFC0  F00C         	goto	l8058
  2745  001950                     u9760:
  2746  001950                     
  2747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2748  001950  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2749  001954  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2750  001958  2ADE               	incf	postinc2,f,c
  2751  00195A  0E00               	movlw	0
  2752  00195C  22DD               	addwfc	postdec2,f,c
  2753  00195E                     
  2754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2755  00195E  0E00               	movlw	0
  2756  001960  6E07               	movwf	(fputc@c+1)^0,c
  2757  001962  0E25               	movlw	37
  2758  001964  6E06               	movwf	fputc@c^0,c
  2759  001966  C0C5  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2760  00196A  C0C6  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2761  00196E  ECF1  F01D         	call	_fputc	;wreg free
  2762  001972                     l8054:
  2763                           
  2764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2765  001972  0E00               	movlw	0
  2766  001974  0100               	movlb	0	; () banked
  2767  001976  6FC6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2768  001978  0E01               	movlw	1
  2769  00197A  6FC5               	movwf	?_vfpfcnvrt& (0+255),b
  2770  00197C  EFE9  F00C         	goto	l766
  2771  001980                     l8058:
  2772                           
  2773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2774  001980  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2775  001984  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2776  001988  2ADE               	incf	postinc2,f,c
  2777  00198A  0E00               	movlw	0
  2778  00198C  22DD               	addwfc	postdec2,f,c
  2779  00198E                     
  2780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2781  00198E  0E00               	movlw	0
  2782  001990  0100               	movlb	0	; () banked
  2783  001992  6FC6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2784  001994  0E00               	movlw	0
  2785  001996  6FC5               	movwf	?_vfpfcnvrt& (0+255),b
  2786  001998  EFE9  F00C         	goto	l766
  2787  00199C                     l8064:
  2788                           
  2789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2790  00199C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2791  0019A0  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2792  0019A4  CFDE FFF6          	movff	postinc2,tblptrl
  2793  0019A8  CFDD FFF7          	movff	postdec2,tblptrh
  2794  0019AC                     	if	0	;tblptru may be non-zero
  2795  0019AC                     	endif
  2796  0019AC                     	if	0	;tblptru may be non-zero
  2797  0019AC                     	endif
  2798  0019AC  0008               	tblrd		*
  2799  0019AE  50F5               	movf	tablat,w,c
  2800  0019B0  6E06               	movwf	fputc@c^0,c
  2801  0019B2  6A07               	clrf	(fputc@c+1)^0,c
  2802  0019B4  C0C5  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2803  0019B8  C0C6  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2804  0019BC  ECF1  F01D         	call	_fputc	;wreg free
  2805  0019C0                     
  2806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2807  0019C0  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2808  0019C4  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2809  0019C8  2ADE               	incf	postinc2,f,c
  2810  0019CA  0E00               	movlw	0
  2811  0019CC  22DD               	addwfc	postdec2,f,c
  2812  0019CE  EFB9  F00C         	goto	l8054
  2813  0019D2                     l766:
  2814  0019D2  0012               	return		;funcret
  2815  0019D4                     __end_of_vfpfcnvrt:
  2816                           	opt callstack 0
  2817                           
  2818 ;; *************** function _strncmp *****************
  2819 ;; Defined at:
  2820 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  2823 ;;		 -> vfpfcnvrt@ct(3), 
  2824 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  2825 ;;		 -> STR_22(3), 
  2826 ;;  n               2    9[COMRAM] unsigned int 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  r               2   14[COMRAM] PTR const unsigned char 
  2829 ;;		 -> STR_22(3), 
  2830 ;;  l               2   12[COMRAM] PTR const unsigned char 
  2831 ;;		 -> vfpfcnvrt@ct(3), 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  2    5[COMRAM] int 
  2834 ;; Registers used:
  2835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2841 ;;      Params:         6       0       0       0       0       0       0       0       0
  2842 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2843 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2844 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2845 ;;Total ram usage:       11 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    2
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_vfpfcnvrt
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text6
  2856  003B0C                     __ptext6:
  2857                           	opt callstack 0
  2858  003B0C                     _strncmp:
  2859                           	opt callstack 24
  2860  003B0C  C006  F00D         	movff	strncmp@_l,strncmp@l
  2861  003B10  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  2862  003B14  C008  F00F         	movff	strncmp@_r,strncmp@r
  2863  003B18  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  2864  003B1C  060A               	decf	strncmp@n^0,f,c
  2865  003B1E  A0D8               	btfss	status,0,c
  2866  003B20  060B               	decf	(strncmp@n+1)^0,f,c
  2867  003B22  280A               	incf	strncmp@n^0,w,c
  2868  003B24  E106               	bnz	u9561
  2869  003B26  280B               	incf	(strncmp@n+1)^0,w,c
  2870  003B28  A4D8               	btfss	status,2,c
  2871  003B2A  EF99  F01D         	goto	u9561
  2872  003B2E  EF9B  F01D         	goto	u9560
  2873  003B32                     u9561:
  2874  003B32  EFA8  F01D         	goto	l7960
  2875  003B36                     u9560:
  2876  003B36  0E00               	movlw	0
  2877  003B38  6E07               	movwf	(?_strncmp+1)^0,c
  2878  003B3A  0E00               	movlw	0
  2879  003B3C  6E06               	movwf	?_strncmp^0,c
  2880  003B3E  EFF0  F01D         	goto	l1598
  2881  003B42                     l7958:
  2882  003B42  4A0D               	infsnz	strncmp@l^0,f,c
  2883  003B44  2A0E               	incf	(strncmp@l+1)^0,f,c
  2884  003B46  4A0F               	infsnz	strncmp@r^0,f,c
  2885  003B48  2A10               	incf	(strncmp@r+1)^0,f,c
  2886  003B4A  060A               	decf	strncmp@n^0,f,c
  2887  003B4C  A0D8               	btfss	status,0,c
  2888  003B4E  060B               	decf	(strncmp@n+1)^0,f,c
  2889  003B50                     l7960:
  2890  003B50  C00D  FFD9         	movff	strncmp@l,fsr2l
  2891  003B54  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2892  003B58  50DF               	movf	indf2,w,c
  2893  003B5A  B4D8               	btfsc	status,2,c
  2894  003B5C  EFB2  F01D         	goto	u9571
  2895  003B60  EFB4  F01D         	goto	u9570
  2896  003B64                     u9571:
  2897  003B64  EFDF  F01D         	goto	l7968
  2898  003B68                     u9570:
  2899  003B68  C00F  FFF6         	movff	strncmp@r,tblptrl
  2900  003B6C  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2901  003B70                     	if	0	;tblptru may be non-zero
  2902  003B70                     	endif
  2903  003B70                     	if	0	;tblptru may be non-zero
  2904  003B70                     	endif
  2905  003B70  0008               	tblrd		*
  2906  003B72  50F5               	movf	tablat,w,c
  2907  003B74  0900               	iorlw	0
  2908  003B76  B4D8               	btfsc	status,2,c
  2909  003B78  EFC0  F01D         	goto	u9581
  2910  003B7C  EFC2  F01D         	goto	u9580
  2911  003B80                     u9581:
  2912  003B80  EFDF  F01D         	goto	l7968
  2913  003B84                     u9580:
  2914  003B84  500A               	movf	strncmp@n^0,w,c
  2915  003B86  100B               	iorwf	(strncmp@n+1)^0,w,c
  2916  003B88  B4D8               	btfsc	status,2,c
  2917  003B8A  EFC9  F01D         	goto	u9591
  2918  003B8E  EFCB  F01D         	goto	u9590
  2919  003B92                     u9591:
  2920  003B92  EFDF  F01D         	goto	l7968
  2921  003B96                     u9590:
  2922  003B96  C00D  FFD9         	movff	strncmp@l,fsr2l
  2923  003B9A  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2924  003B9E  50DF               	movf	indf2,w,c
  2925  003BA0  6E0C               	movwf	??_strncmp^0,c
  2926  003BA2  C00F  FFF6         	movff	strncmp@r,tblptrl
  2927  003BA6  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2928  003BAA                     	if	0	;tblptru may be non-zero
  2929  003BAA                     	endif
  2930  003BAA                     	if	0	;tblptru may be non-zero
  2931  003BAA                     	endif
  2932  003BAA  0008               	tblrd		*
  2933  003BAC  50F5               	movf	tablat,w,c
  2934  003BAE  180C               	xorwf	??_strncmp^0,w,c
  2935  003BB0  B4D8               	btfsc	status,2,c
  2936  003BB2  EFDD  F01D         	goto	u9601
  2937  003BB6  EFDF  F01D         	goto	u9600
  2938  003BBA                     u9601:
  2939  003BBA  EFA1  F01D         	goto	l7958
  2940  003BBE                     u9600:
  2941  003BBE                     l7968:
  2942  003BBE  C00D  FFD9         	movff	strncmp@l,fsr2l
  2943  003BC2  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2944  003BC6  50DF               	movf	indf2,w,c
  2945  003BC8  6E0C               	movwf	??_strncmp^0,c
  2946  003BCA  C00F  FFF6         	movff	strncmp@r,tblptrl
  2947  003BCE  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2948  003BD2                     	if	0	;tblptru may be non-zero
  2949  003BD2                     	endif
  2950  003BD2                     	if	0	;tblptru may be non-zero
  2951  003BD2                     	endif
  2952  003BD2  0008               	tblrd		*
  2953  003BD4  50F5               	movf	tablat,w,c
  2954  003BD6  5C0C               	subwf	??_strncmp^0,w,c
  2955  003BD8  6E06               	movwf	?_strncmp^0,c
  2956  003BDA  6A07               	clrf	(?_strncmp+1)^0,c
  2957  003BDC  A0D8               	btfss	status,0,c
  2958  003BDE  0607               	decf	(?_strncmp+1)^0,f,c
  2959  003BE0                     l1598:
  2960  003BE0  0012               	return		;funcret
  2961  003BE2                     __end_of_strncmp:
  2962                           	opt callstack 0
  2963                           
  2964 ;; *************** function _efgtoa *****************
  2965 ;; Defined at:
  2966 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  fp              2   33[BANK0 ] PTR struct _IO_FILE
  2969 ;;		 -> sprintf@f(6), 
  2970 ;;  f               4   35[BANK0 ] PTR struct _IO_FILE
  2971 ;;  c               1   39[BANK0 ] unsigned char 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  u               4   97[BANK0 ] unsigned char 
  2974 ;;  g               4   89[BANK0 ] unsigned char 
  2975 ;;  l               4   83[BANK0 ] unsigned char 
  2976 ;;  h               4   79[BANK0 ] unsigned char 
  2977 ;;  ou              4   45[BANK0 ] unsigned char 
  2978 ;;  n               2   95[BANK0 ] int 
  2979 ;;  e               2   93[BANK0 ] int 
  2980 ;;  i               2   87[BANK0 ] int 
  2981 ;;  w               2   76[BANK0 ] int 
  2982 ;;  p               2   73[BANK0 ] int 
  2983 ;;  sign            2   71[BANK0 ] int 
  2984 ;;  d               2   69[BANK0 ] int 
  2985 ;;  ne              2   67[BANK0 ] int 
  2986 ;;  m               2   65[BANK0 ] int 
  2987 ;;  pp              2   63[BANK0 ] int 
  2988 ;;  t               2   61[BANK0 ] int 
  2989 ;;  mode            1   78[BANK0 ] unsigned char 
  2990 ;;  nmode           1   75[BANK0 ] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  2   33[BANK0 ] int 
  2993 ;; Registers used:
  2994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3000 ;;      Params:         0       7       0       0       0       0       0       0       0
  3001 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3002 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3003 ;;      Totals:         0      68       0       0       0       0       0       0       0
  3004 ;;Total ram usage:       68 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    6
  3007 ;; This function calls:
  3008 ;;		___awdiv
  3009 ;;		___awmod
  3010 ;;		___fladd
  3011 ;;		___fldiv
  3012 ;;		___fleq
  3013 ;;		___flge
  3014 ;;		___flmul
  3015 ;;		___flneg
  3016 ;;		___flsub
  3017 ;;		___fltol
  3018 ;;		___fpclassifyf
  3019 ;;		_floorf
  3020 ;;		_isupper
  3021 ;;		_pad
  3022 ;;		_strcpy
  3023 ;;		_tolower
  3024 ;; This function is called by:
  3025 ;;		_vfpfcnvrt
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text7
  3030  0008E6                     __ptext7:
  3031                           	opt callstack 0
  3032  0008E6                     _efgtoa:
  3033                           	opt callstack 20
  3034  0008E6                     
  3035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3036  0008E6  0E00               	movlw	0
  3037  0008E8  0100               	movlb	0	; () banked
  3038  0008EA  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  3039  0008EC  0E00               	movlw	0
  3040  0008EE  6FA7               	movwf	efgtoa@sign& (0+255),b
  3041  0008F0                     
  3042                           ; BSR set to: 0
  3043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3044  0008F0  C083  F0B9         	movff	efgtoa@f,efgtoa@g
  3045  0008F4  C084  F0BA         	movff	efgtoa@f+1,efgtoa@g+1
  3046  0008F8  C085  F0BB         	movff	efgtoa@f+2,efgtoa@g+2
  3047  0008FC  C086  F0BC         	movff	efgtoa@f+3,efgtoa@g+3
  3048  000900                     
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3051  000900  BFBC               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3052  000902  EF87  F004         	goto	u8970
  3053  000906  EF85  F004         	goto	u8971
  3054  00090A                     u8971:
  3055  00090A  EF9D  F004         	goto	l7622
  3056  00090E                     u8970:
  3057  00090E                     
  3058                           ; BSR set to: 0
  3059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3060  00090E  0E00               	movlw	0
  3061  000910  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  3062  000912  0E01               	movlw	1
  3063  000914  6FA7               	movwf	efgtoa@sign& (0+255),b
  3064  000916                     
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3067  000916  C0B9  F006         	movff	efgtoa@g,___flneg@f1
  3068  00091A  C0BA  F007         	movff	efgtoa@g+1,___flneg@f1+1
  3069  00091E  C0BB  F008         	movff	efgtoa@g+2,___flneg@f1+2
  3070  000922  C0BC  F009         	movff	efgtoa@g+3,___flneg@f1+3
  3071  000926  EC96  F023         	call	___flneg	;wreg free
  3072  00092A  C006  F0B9         	movff	?___flneg,efgtoa@g
  3073  00092E  C007  F0BA         	movff	?___flneg+1,efgtoa@g+1
  3074  000932  C008  F0BB         	movff	?___flneg+2,efgtoa@g+2
  3075  000936  C009  F0BC         	movff	?___flneg+3,efgtoa@g+3
  3076  00093A                     l7622:
  3077                           
  3078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3079  00093A  0E00               	movlw	0
  3080  00093C  0100               	movlb	0	; () banked
  3081  00093E  6FC0               	movwf	(efgtoa@n+1)& (0+255),b
  3082  000940  0E00               	movlw	0
  3083  000942  6FBF               	movwf	efgtoa@n& (0+255),b
  3084  000944                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3087  000944  C132  F0AC         	movff	_width,efgtoa@w
  3088  000948  C133  F0AD         	movff	_width+1,efgtoa@w+1
  3089  00094C                     
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3092  00094C  51A7               	movf	efgtoa@sign& (0+255),w,b
  3093  00094E  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3094  000950  A4D8               	btfss	status,2,c
  3095  000952  EFAD  F004         	goto	u8981
  3096  000956  EFAF  F004         	goto	u8980
  3097  00095A                     u8981:
  3098  00095A  EFB6  F004         	goto	l7630
  3099  00095E                     u8980:
  3100  00095E                     
  3101                           ; BSR set to: 0
  3102  00095E  A457               	btfss	_flags^0,2,c
  3103  000960  EFB4  F004         	goto	u8991
  3104  000964  EFB6  F004         	goto	u8990
  3105  000968                     u8991:
  3106  000968  EFD0  F004         	goto	l7642
  3107  00096C                     u8990:
  3108  00096C                     l7630:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3112  00096C  51A7               	movf	efgtoa@sign& (0+255),w,b
  3113  00096E  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3114  000970  A4D8               	btfss	status,2,c
  3115  000972  EFBD  F004         	goto	u9001
  3116  000976  EFBF  F004         	goto	u9000
  3117  00097A                     u9001:
  3118  00097A  EFC5  F004         	goto	l7634
  3119  00097E                     u9000:
  3120  00097E                     
  3121                           ; BSR set to: 0
  3122  00097E  0E00               	movlw	0
  3123  000980  6F92               	movwf	(_efgtoa$823+1)& (0+255),b
  3124  000982  0E2B               	movlw	43
  3125  000984  6F91               	movwf	_efgtoa$823& (0+255),b
  3126  000986  EFC9  F004         	goto	l7636
  3127  00098A                     l7634:
  3128                           
  3129                           ; BSR set to: 0
  3130  00098A  0E00               	movlw	0
  3131  00098C  6F92               	movwf	(_efgtoa$823+1)& (0+255),b
  3132  00098E  0E2D               	movlw	45
  3133  000990  6F91               	movwf	_efgtoa$823& (0+255),b
  3134  000992                     l7636:
  3135                           
  3136                           ; BSR set to: 0
  3137  000992  C091  F13D         	movff	_efgtoa$823,_dbuf
  3138  000996                     
  3139                           ; BSR set to: 0
  3140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3141  000996  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  3142  000998  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  3143  00099A                     
  3144                           ; BSR set to: 0
  3145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3146  00099A  07AC               	decf	efgtoa@w& (0+255),f,b
  3147  00099C  A0D8               	btfss	status,0,c
  3148  00099E  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  3149  0009A0                     l7642:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3153  0009A0  C0B9  F006         	movff	efgtoa@g,___fpclassifyf@x
  3154  0009A4  C0BA  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3155  0009A8  C0BB  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3156  0009AC  C0BC  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3157  0009B0  EC99  F01C         	call	___fpclassifyf	;wreg free
  3158  0009B4  0406               	decf	?___fpclassifyf^0,w,c
  3159  0009B6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3160  0009B8  A4D8               	btfss	status,2,c
  3161  0009BA  EFE1  F004         	goto	u9011
  3162  0009BE  EFE3  F004         	goto	u9010
  3163  0009C2                     u9011:
  3164  0009C2  EF3A  F005         	goto	l7660
  3165  0009C6                     u9010:
  3166  0009C6  0EBF               	movlw	191
  3167  0009C8  0100               	movlb	0	; () banked
  3168  0009CA  6F88               	movwf	??_efgtoa& (0+255),b
  3169  0009CC  0EFF               	movlw	255
  3170  0009CE  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  3171  0009D0  5187               	movf	efgtoa@c& (0+255),w,b
  3172  0009D2  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  3173  0009D4  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  3174  0009D6  5188               	movf	??_efgtoa& (0+255),w,b
  3175  0009D8  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  3176  0009DA  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  3177  0009DC  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3178  0009DE  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  3179  0009E0  E10A               	bnz	u9020
  3180  0009E2  0E1A               	movlw	26
  3181  0009E4  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  3182  0009E6  A0D8               	btfss	status,0,c
  3183  0009E8  EFF8  F004         	goto	u9021
  3184  0009EC  EFFB  F004         	goto	u9020
  3185  0009F0                     u9021:
  3186  0009F0  0E01               	movlw	1
  3187  0009F2  EFFC  F004         	goto	u9030
  3188  0009F6                     u9020:
  3189  0009F6  0E00               	movlw	0
  3190  0009F8                     u9030:
  3191  0009F8  6F93               	movwf	_efgtoa$824& (0+255),b
  3192  0009FA  6B94               	clrf	(_efgtoa$824+1)& (0+255),b
  3193  0009FC                     
  3194                           ; BSR set to: 0
  3195  0009FC  5193               	movf	_efgtoa$824& (0+255),w,b
  3196  0009FE  1194               	iorwf	(_efgtoa$824+1)& (0+255),w,b
  3197  000A00  B4D8               	btfsc	status,2,c
  3198  000A02  EF05  F005         	goto	u9041
  3199  000A06  EF07  F005         	goto	u9040
  3200  000A0A                     u9041:
  3201  000A0A  EF15  F005         	goto	l7652
  3202  000A0E                     u9040:
  3203  000A0E                     
  3204                           ; BSR set to: 0
  3205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3206  000A0E  0E3D               	movlw	low _dbuf
  3207  000A10  25BF               	addwf	efgtoa@n& (0+255),w,b
  3208  000A12  6E06               	movwf	strcpy@dest^0,c
  3209  000A14  0E01               	movlw	high _dbuf
  3210  000A16  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3211  000A18  6E07               	movwf	(strcpy@dest+1)^0,c
  3212  000A1A  0ED2               	movlw	low STR_12
  3213  000A1C  6E08               	movwf	strcpy@src^0,c
  3214  000A1E  0E08               	movlw	high STR_12
  3215  000A20  6E09               	movwf	(strcpy@src+1)^0,c
  3216  000A22  ECCC  F021         	call	_strcpy	;wreg free
  3217                           
  3218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3219  000A26  EF21  F005         	goto	l7654
  3220  000A2A                     l7652:
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3224  000A2A  0E3D               	movlw	low _dbuf
  3225  000A2C  25BF               	addwf	efgtoa@n& (0+255),w,b
  3226  000A2E  6E06               	movwf	strcpy@dest^0,c
  3227  000A30  0E01               	movlw	high _dbuf
  3228  000A32  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3229  000A34  6E07               	movwf	(strcpy@dest+1)^0,c
  3230  000A36  0EDA               	movlw	low STR_13
  3231  000A38  6E08               	movwf	strcpy@src^0,c
  3232  000A3A  0E08               	movlw	high STR_13
  3233  000A3C  6E09               	movwf	(strcpy@src+1)^0,c
  3234  000A3E  ECCC  F021         	call	_strcpy	;wreg free
  3235  000A42                     l7654:
  3236                           
  3237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3238  000A42  0100               	movlb	0	; () banked
  3239  000A44  0EFD               	movlw	253
  3240  000A46  27AC               	addwf	efgtoa@w& (0+255),f,b
  3241  000A48  0EFF               	movlw	255
  3242  000A4A  23AD               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3243  000A4C                     l7656:
  3244                           
  3245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3246  000A4C  C081  F016         	movff	efgtoa@fp,pad@fp
  3247  000A50  C082  F017         	movff	efgtoa@fp+1,pad@fp+1
  3248  000A54  0E3D               	movlw	low _dbuf
  3249  000A56  6E18               	movwf	pad@buf^0,c
  3250  000A58  0E01               	movlw	high _dbuf
  3251  000A5A  6E19               	movwf	(pad@buf+1)^0,c
  3252  000A5C  C0AC  F01A         	movff	efgtoa@w,pad@p
  3253  000A60  C0AD  F01B         	movff	efgtoa@w+1,pad@p+1
  3254  000A64  ECB8  F01E         	call	_pad	;wreg free
  3255  000A68  C016  F081         	movff	?_pad,?_efgtoa
  3256  000A6C  C017  F082         	movff	?_pad+1,?_efgtoa+1
  3257  000A70  EF4E  F00A         	goto	l674
  3258  000A74                     l7660:
  3259                           
  3260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3261  000A74  C0B9  F006         	movff	efgtoa@g,___fpclassifyf@x
  3262  000A78  C0BA  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3263  000A7C  C0BB  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3264  000A80  C0BC  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3265  000A84  EC99  F01C         	call	___fpclassifyf	;wreg free
  3266  000A88  5006               	movf	?___fpclassifyf^0,w,c
  3267  000A8A  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3268  000A8C  A4D8               	btfss	status,2,c
  3269  000A8E  EF4B  F005         	goto	u9051
  3270  000A92  EF4D  F005         	goto	u9050
  3271  000A96                     u9051:
  3272  000A96  EF8D  F005         	goto	l7678
  3273  000A9A                     u9050:
  3274  000A9A  0EBF               	movlw	191
  3275  000A9C  0100               	movlb	0	; () banked
  3276  000A9E  6F88               	movwf	??_efgtoa& (0+255),b
  3277  000AA0  0EFF               	movlw	255
  3278  000AA2  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  3279  000AA4  5187               	movf	efgtoa@c& (0+255),w,b
  3280  000AA6  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  3281  000AA8  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  3282  000AAA  5188               	movf	??_efgtoa& (0+255),w,b
  3283  000AAC  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  3284  000AAE  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  3285  000AB0  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3286  000AB2  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  3287  000AB4  E10A               	bnz	u9060
  3288  000AB6  0E1A               	movlw	26
  3289  000AB8  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  3290  000ABA  A0D8               	btfss	status,0,c
  3291  000ABC  EF62  F005         	goto	u9061
  3292  000AC0  EF65  F005         	goto	u9060
  3293  000AC4                     u9061:
  3294  000AC4  0E01               	movlw	1
  3295  000AC6  EF66  F005         	goto	u9070
  3296  000ACA                     u9060:
  3297  000ACA  0E00               	movlw	0
  3298  000ACC                     u9070:
  3299  000ACC  6F95               	movwf	_efgtoa$828& (0+255),b
  3300  000ACE  6B96               	clrf	(_efgtoa$828+1)& (0+255),b
  3301  000AD0                     
  3302                           ; BSR set to: 0
  3303  000AD0  5195               	movf	_efgtoa$828& (0+255),w,b
  3304  000AD2  1196               	iorwf	(_efgtoa$828+1)& (0+255),w,b
  3305  000AD4  B4D8               	btfsc	status,2,c
  3306  000AD6  EF6F  F005         	goto	u9081
  3307  000ADA  EF71  F005         	goto	u9080
  3308  000ADE                     u9081:
  3309  000ADE  EF7F  F005         	goto	l7670
  3310  000AE2                     u9080:
  3311  000AE2                     
  3312                           ; BSR set to: 0
  3313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3314  000AE2  0E3D               	movlw	low _dbuf
  3315  000AE4  25BF               	addwf	efgtoa@n& (0+255),w,b
  3316  000AE6  6E06               	movwf	strcpy@dest^0,c
  3317  000AE8  0E01               	movlw	high _dbuf
  3318  000AEA  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3319  000AEC  6E07               	movwf	(strcpy@dest+1)^0,c
  3320  000AEE  0ED6               	movlw	low STR_16
  3321  000AF0  6E08               	movwf	strcpy@src^0,c
  3322  000AF2  0E08               	movlw	high STR_16
  3323  000AF4  6E09               	movwf	(strcpy@src+1)^0,c
  3324  000AF6  ECCC  F021         	call	_strcpy	;wreg free
  3325                           
  3326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3327  000AFA  EF21  F005         	goto	l7654
  3328  000AFE                     l7670:
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3332  000AFE  0E3D               	movlw	low _dbuf
  3333  000B00  25BF               	addwf	efgtoa@n& (0+255),w,b
  3334  000B02  6E06               	movwf	strcpy@dest^0,c
  3335  000B04  0E01               	movlw	high _dbuf
  3336  000B06  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3337  000B08  6E07               	movwf	(strcpy@dest+1)^0,c
  3338  000B0A  0EDE               	movlw	low STR_17
  3339  000B0C  6E08               	movwf	strcpy@src^0,c
  3340  000B0E  0E08               	movlw	high STR_17
  3341  000B10  6E09               	movwf	(strcpy@src+1)^0,c
  3342  000B12  ECCC  F021         	call	_strcpy	;wreg free
  3343  000B16  EF21  F005         	goto	l7654
  3344  000B1A                     l7678:
  3345                           
  3346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3347  000B1A  0E00               	movlw	0
  3348  000B1C  0100               	movlb	0	; () banked
  3349  000B1E  6FC1               	movwf	efgtoa@u& (0+255),b
  3350  000B20  0E00               	movlw	0
  3351  000B22  6FC2               	movwf	(efgtoa@u+1)& (0+255),b
  3352  000B24  0E80               	movlw	128
  3353  000B26  6FC3               	movwf	(efgtoa@u+2)& (0+255),b
  3354  000B28  0E3F               	movlw	63
  3355  000B2A  6FC4               	movwf	(efgtoa@u+3)& (0+255),b
  3356                           
  3357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3358  000B2C  0E00               	movlw	0
  3359  000B2E  6FBE               	movwf	(efgtoa@e+1)& (0+255),b
  3360  000B30  0E00               	movlw	0
  3361  000B32  6FBD               	movwf	efgtoa@e& (0+255),b
  3362  000B34                     
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3365  000B34  C0B9  F006         	movff	efgtoa@g,___fleq@ff1
  3366  000B38  C0BA  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  3367  000B3C  C0BB  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  3368  000B40  C0BC  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  3369  000B44  0E00               	movlw	0
  3370  000B46  6E0A               	movwf	___fleq@ff2^0,c
  3371  000B48  0E00               	movlw	0
  3372  000B4A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  3373  000B4C  0E00               	movlw	0
  3374  000B4E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  3375  000B50  0E00               	movlw	0
  3376  000B52  6E0D               	movwf	(___fleq@ff2+3)^0,c
  3377  000B54  EC71  F01F         	call	___fleq	;wreg free
  3378  000B58  B0D8               	btfsc	status,0,c
  3379  000B5A  EFB1  F005         	goto	u9091
  3380  000B5E  EFB3  F005         	goto	u9090
  3381  000B62                     u9091:
  3382  000B62  EF39  F006         	goto	l7696
  3383  000B66                     u9090:
  3384  000B66  EFD2  F005         	goto	l7688
  3385  000B6A                     l7684:
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3389  000B6A  C0C1  F060         	movff	efgtoa@u,___flmul@b
  3390  000B6E  C0C2  F061         	movff	efgtoa@u+1,___flmul@b+1
  3391  000B72  C0C3  F062         	movff	efgtoa@u+2,___flmul@b+2
  3392  000B76  C0C4  F063         	movff	efgtoa@u+3,___flmul@b+3
  3393  000B7A  0E00               	movlw	0
  3394  000B7C  6F64               	movwf	___flmul@a& (0+255),b
  3395  000B7E  0E00               	movlw	0
  3396  000B80  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3397  000B82  0E20               	movlw	32
  3398  000B84  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3399  000B86  0E41               	movlw	65
  3400  000B88  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3401  000B8A  EC4A  F00F         	call	___flmul	;wreg free
  3402  000B8E  C060  F0C1         	movff	?___flmul,efgtoa@u
  3403  000B92  C061  F0C2         	movff	?___flmul+1,efgtoa@u+1
  3404  000B96  C062  F0C3         	movff	?___flmul+2,efgtoa@u+2
  3405  000B9A  C063  F0C4         	movff	?___flmul+3,efgtoa@u+3
  3406  000B9E                     
  3407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3408  000B9E  0100               	movlb	0	; () banked
  3409  000BA0  4BBD               	infsnz	efgtoa@e& (0+255),f,b
  3410  000BA2  2BBE               	incf	(efgtoa@e+1)& (0+255),f,b
  3411  000BA4                     l7688:
  3412                           
  3413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3414  000BA4  C0B9  F075         	movff	efgtoa@g,___flge@ff1
  3415  000BA8  C0BA  F076         	movff	efgtoa@g+1,___flge@ff1+1
  3416  000BAC  C0BB  F077         	movff	efgtoa@g+2,___flge@ff1+2
  3417  000BB0  C0BC  F078         	movff	efgtoa@g+3,___flge@ff1+3
  3418  000BB4  0E00               	movlw	0
  3419  000BB6  0100               	movlb	0	; () banked
  3420  000BB8  6F64               	movwf	___flmul@a& (0+255),b
  3421  000BBA  0E00               	movlw	0
  3422  000BBC  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3423  000BBE  0E20               	movlw	32
  3424  000BC0  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3425  000BC2  0E41               	movlw	65
  3426  000BC4  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3427  000BC6  C0C1  F060         	movff	efgtoa@u,___flmul@b
  3428  000BCA  C0C2  F061         	movff	efgtoa@u+1,___flmul@b+1
  3429  000BCE  C0C3  F062         	movff	efgtoa@u+2,___flmul@b+2
  3430  000BD2  C0C4  F063         	movff	efgtoa@u+3,___flmul@b+3
  3431  000BD6  EC4A  F00F         	call	___flmul	;wreg free
  3432  000BDA  C060  F079         	movff	?___flmul,___flge@ff2
  3433  000BDE  C061  F07A         	movff	?___flmul+1,___flge@ff2+1
  3434  000BE2  C062  F07B         	movff	?___flmul+2,___flge@ff2+2
  3435  000BE6  C063  F07C         	movff	?___flmul+3,___flge@ff2+3
  3436  000BEA  EC16  F01C         	call	___flge	;wreg free
  3437  000BEE  0100               	movlb	0	; () banked
  3438  000BF0  B0D8               	btfsc	status,0,c
  3439  000BF2  EFFD  F005         	goto	u9101
  3440  000BF6  EFFF  F005         	goto	u9100
  3441  000BFA                     u9101:
  3442  000BFA  EFB5  F005         	goto	l7684
  3443  000BFE                     u9100:
  3444  000BFE  EF1F  F006         	goto	l7694
  3445  000C02                     l7690:
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3449  000C02  C0C1  F038         	movff	efgtoa@u,___fldiv@b
  3450  000C06  C0C2  F039         	movff	efgtoa@u+1,___fldiv@b+1
  3451  000C0A  C0C3  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  3452  000C0E  C0C4  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  3453  000C12  0E00               	movlw	0
  3454  000C14  6E3C               	movwf	___fldiv@a^0,c
  3455  000C16  0E00               	movlw	0
  3456  000C18  6E3D               	movwf	(___fldiv@a+1)^0,c
  3457  000C1A  0E20               	movlw	32
  3458  000C1C  6E3E               	movwf	(___fldiv@a+2)^0,c
  3459  000C1E  0E41               	movlw	65
  3460  000C20  6E3F               	movwf	(___fldiv@a+3)^0,c
  3461  000C22  EC60  F011         	call	___fldiv	;wreg free
  3462  000C26  C038  F0C1         	movff	?___fldiv,efgtoa@u
  3463  000C2A  C039  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  3464  000C2E  C03A  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  3465  000C32  C03B  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  3466  000C36                     
  3467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3468  000C36  0100               	movlb	0	; () banked
  3469  000C38  07BD               	decf	efgtoa@e& (0+255),f,b
  3470  000C3A  A0D8               	btfss	status,0,c
  3471  000C3C  07BE               	decf	(efgtoa@e+1)& (0+255),f,b
  3472  000C3E                     l7694:
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3476  000C3E  C0B9  F075         	movff	efgtoa@g,___flge@ff1
  3477  000C42  C0BA  F076         	movff	efgtoa@g+1,___flge@ff1+1
  3478  000C46  C0BB  F077         	movff	efgtoa@g+2,___flge@ff1+2
  3479  000C4A  C0BC  F078         	movff	efgtoa@g+3,___flge@ff1+3
  3480  000C4E  C0C1  F079         	movff	efgtoa@u,___flge@ff2
  3481  000C52  C0C2  F07A         	movff	efgtoa@u+1,___flge@ff2+1
  3482  000C56  C0C3  F07B         	movff	efgtoa@u+2,___flge@ff2+2
  3483  000C5A  C0C4  F07C         	movff	efgtoa@u+3,___flge@ff2+3
  3484  000C5E  EC16  F01C         	call	___flge	;wreg free
  3485  000C62  0100               	movlb	0	; () banked
  3486  000C64  A0D8               	btfss	status,0,c
  3487  000C66  EF37  F006         	goto	u9111
  3488  000C6A  EF39  F006         	goto	u9110
  3489  000C6E                     u9111:
  3490  000C6E  EF01  F006         	goto	l7690
  3491  000C72                     u9110:
  3492  000C72                     l7696:
  3493                           
  3494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3495  000C72  C087  F00C         	movff	efgtoa@c,tolower@c
  3496  000C76  6A0D               	clrf	(tolower@c+1)^0,c
  3497  000C78  EC6D  F021         	call	_tolower	;wreg free
  3498  000C7C  500C               	movf	?_tolower^0,w,c
  3499  000C7E  0100               	movlb	0	; () banked
  3500  000C80  6FAE               	movwf	efgtoa@mode& (0+255),b
  3501  000C82                     
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3504  000C82  C0AE  F0AB         	movff	efgtoa@mode,efgtoa@nmode
  3505  000C86                     
  3506                           ; BSR set to: 0
  3507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3508  000C86  0E67               	movlw	103
  3509  000C88  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3510  000C8A  A4D8               	btfss	status,2,c
  3511  000C8C  EF4A  F006         	goto	u9121
  3512  000C90  EF4C  F006         	goto	u9120
  3513  000C94                     u9121:
  3514  000C94  EF72  F006         	goto	l7710
  3515  000C98                     u9120:
  3516  000C98                     
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3519  000C98  5055               	movf	_prec^0,w,c
  3520  000C9A  1056               	iorwf	(_prec+1)^0,w,c
  3521  000C9C  A4D8               	btfss	status,2,c
  3522  000C9E  EF53  F006         	goto	u9131
  3523  000CA2  EF55  F006         	goto	u9130
  3524  000CA6                     u9131:
  3525  000CA6  EF59  F006         	goto	l7706
  3526  000CAA                     u9130:
  3527  000CAA                     
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3530  000CAA  0E00               	movlw	0
  3531  000CAC  6E56               	movwf	(_prec+1)^0,c
  3532  000CAE  0E01               	movlw	1
  3533  000CB0  6E55               	movwf	_prec^0,c
  3534  000CB2                     l7706:
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3538  000CB2  BE56               	btfsc	(_prec+1)^0,7,c
  3539  000CB4  EF66  F006         	goto	u9140
  3540  000CB8  5056               	movf	(_prec+1)^0,w,c
  3541  000CBA  E106               	bnz	u9141
  3542  000CBC  0455               	decf	_prec^0,w,c
  3543  000CBE  B0D8               	btfsc	status,0,c
  3544  000CC0  EF64  F006         	goto	u9141
  3545  000CC4  EF66  F006         	goto	u9140
  3546  000CC8                     u9141:
  3547  000CC8  EF6C  F006         	goto	l692
  3548  000CCC                     u9140:
  3549  000CCC                     l7708:
  3550                           
  3551                           ; BSR set to: 0
  3552  000CCC  0E00               	movlw	0
  3553  000CCE  6FAA               	movwf	(efgtoa@p+1)& (0+255),b
  3554  000CD0  0E06               	movlw	6
  3555  000CD2  6FA9               	movwf	efgtoa@p& (0+255),b
  3556  000CD4  EF7B  F006         	goto	l7716
  3557  000CD8                     l692:
  3558                           
  3559                           ; BSR set to: 0
  3560  000CD8  C055  F0A9         	movff	_prec,efgtoa@p
  3561  000CDC  C056  F0AA         	movff	_prec+1,efgtoa@p+1
  3562  000CE0  EF7B  F006         	goto	l7716
  3563  000CE4                     l7710:
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3567  000CE4  BE56               	btfsc	(_prec+1)^0,7,c
  3568  000CE6  EF77  F006         	goto	u9151
  3569  000CEA  EF79  F006         	goto	u9150
  3570  000CEE                     u9151:
  3571  000CEE  EF66  F006         	goto	l7708
  3572  000CF2                     u9150:
  3573  000CF2  EF6C  F006         	goto	l692
  3574  000CF6                     l7716:
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3578  000CF6  0E67               	movlw	103
  3579  000CF8  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3580  000CFA  A4D8               	btfss	status,2,c
  3581  000CFC  EF82  F006         	goto	u9161
  3582  000D00  EF84  F006         	goto	u9160
  3583  000D04                     u9161:
  3584  000D04  EFB3  F006         	goto	l7726
  3585  000D08                     u9160:
  3586  000D08                     
  3587                           ; BSR set to: 0
  3588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3589  000D08  AFBE               	btfss	(efgtoa@e+1)& (0+255),7,b
  3590  000D0A  EF92  F006         	goto	u9170
  3591  000D0E  0EFC               	movlw	252
  3592  000D10  5DBD               	subwf	efgtoa@e& (0+255),w,b
  3593  000D12  0EFF               	movlw	255
  3594  000D14  59BE               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3595  000D16  A0D8               	btfss	status,0,c
  3596  000D18  EF90  F006         	goto	u9171
  3597  000D1C  EF92  F006         	goto	u9170
  3598  000D20                     u9171:
  3599  000D20  EFB1  F006         	goto	l7724
  3600  000D24                     u9170:
  3601  000D24                     
  3602                           ; BSR set to: 0
  3603  000D24  0EFF               	movlw	255
  3604  000D26  6F88               	movwf	??_efgtoa& (0+255),b
  3605  000D28  0EFF               	movlw	255
  3606  000D2A  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  3607  000D2C  C0A9  F08A         	movff	efgtoa@p,??_efgtoa+2
  3608  000D30  C0AA  F08B         	movff	efgtoa@p+1,??_efgtoa+3
  3609  000D34  5188               	movf	??_efgtoa& (0+255),w,b
  3610  000D36  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  3611  000D38  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  3612  000D3A  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3613  000D3C  51BD               	movf	efgtoa@e& (0+255),w,b
  3614  000D3E  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  3615  000D40  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  3616  000D42  0A80               	xorlw	128
  3617  000D44  6F8C               	movwf	(??_efgtoa+4)& (0+255),b
  3618  000D46  51BE               	movf	(efgtoa@e+1)& (0+255),w,b
  3619  000D48  0A80               	xorlw	128
  3620  000D4A  598C               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3621  000D4C  A0D8               	btfss	status,0,c
  3622  000D4E  EFAB  F006         	goto	u9181
  3623  000D52  EFAD  F006         	goto	u9180
  3624  000D56                     u9181:
  3625  000D56  EFB1  F006         	goto	l7724
  3626  000D5A                     u9180:
  3627  000D5A                     
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3630  000D5A  0E66               	movlw	102
  3631  000D5C  6FAB               	movwf	efgtoa@nmode& (0+255),b
  3632                           
  3633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3634  000D5E  EFB3  F006         	goto	l7726
  3635  000D62                     l7724:
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3639  000D62  0E65               	movlw	101
  3640  000D64  6FAB               	movwf	efgtoa@nmode& (0+255),b
  3641  000D66                     l7726:
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3645  000D66  C0A9  F0A1         	movff	efgtoa@p,efgtoa@m
  3646  000D6A  C0AA  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  3647  000D6E                     
  3648                           ; BSR set to: 0
  3649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3650  000D6E  0E67               	movlw	103
  3651  000D70  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3652  000D72  A4D8               	btfss	status,2,c
  3653  000D74  EFBE  F006         	goto	u9191
  3654  000D78  EFC0  F006         	goto	u9190
  3655  000D7C                     u9191:
  3656  000D7C  EFD0  F006         	goto	l7734
  3657  000D80                     u9190:
  3658  000D80                     
  3659                           ; BSR set to: 0
  3660  000D80  0E66               	movlw	102
  3661  000D82  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
  3662  000D84  A4D8               	btfss	status,2,c
  3663  000D86  EFC7  F006         	goto	u9201
  3664  000D8A  EFC9  F006         	goto	u9200
  3665  000D8E                     u9201:
  3666  000D8E  EFD2  F006         	goto	l7736
  3667  000D92                     u9200:
  3668  000D92                     
  3669                           ; BSR set to: 0
  3670  000D92  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3671  000D94  EFD0  F006         	goto	u9210
  3672  000D98  EFCE  F006         	goto	u9211
  3673  000D9C                     u9211:
  3674  000D9C  EFD2  F006         	goto	l7736
  3675  000DA0                     u9210:
  3676  000DA0                     l7734:
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3680  000DA0  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  3681  000DA2  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  3682  000DA4                     l7736:
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3686  000DA4  0E66               	movlw	102
  3687  000DA6  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
  3688  000DA8  A4D8               	btfss	status,2,c
  3689  000DAA  EFD9  F006         	goto	u9221
  3690  000DAE  EFDB  F006         	goto	u9220
  3691  000DB2                     u9221:
  3692  000DB2  EFFB  F006         	goto	l7746
  3693  000DB6                     u9220:
  3694  000DB6                     
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3697  000DB6  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3698  000DB8  EFE2  F006         	goto	u9230
  3699  000DBC  EFE0  F006         	goto	u9231
  3700  000DC0                     u9231:
  3701  000DC0  EFEE  F006         	goto	l7742
  3702  000DC4                     u9230:
  3703  000DC4                     
  3704                           ; BSR set to: 0
  3705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3706  000DC4  0E00               	movlw	0
  3707  000DC6  6FC1               	movwf	efgtoa@u& (0+255),b
  3708  000DC8  0E00               	movlw	0
  3709  000DCA  6FC2               	movwf	(efgtoa@u+1)& (0+255),b
  3710  000DCC  0E80               	movlw	128
  3711  000DCE  6FC3               	movwf	(efgtoa@u+2)& (0+255),b
  3712  000DD0  0E3F               	movlw	63
  3713  000DD2  6FC4               	movwf	(efgtoa@u+3)& (0+255),b
  3714                           
  3715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3716  000DD4  0E00               	movlw	0
  3717  000DD6  6FBE               	movwf	(efgtoa@e+1)& (0+255),b
  3718  000DD8  0E00               	movlw	0
  3719  000DDA  6FBD               	movwf	efgtoa@e& (0+255),b
  3720  000DDC                     l7742:
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3724  000DDC  0E67               	movlw	103
  3725  000DDE  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3726  000DE0  B4D8               	btfsc	status,2,c
  3727  000DE2  EFF5  F006         	goto	u9241
  3728  000DE6  EFF7  F006         	goto	u9240
  3729  000DEA                     u9241:
  3730  000DEA  EFFB  F006         	goto	l7746
  3731  000DEE                     u9240:
  3732  000DEE                     
  3733                           ; BSR set to: 0
  3734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3735  000DEE  51BD               	movf	efgtoa@e& (0+255),w,b
  3736  000DF0  27A1               	addwf	efgtoa@m& (0+255),f,b
  3737  000DF2  51BE               	movf	(efgtoa@e+1)& (0+255),w,b
  3738  000DF4  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3739  000DF6                     l7746:
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3743  000DF6  0E00               	movlw	0
  3744  000DF8  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  3745  000DFA  0E00               	movlw	0
  3746  000DFC  6FB7               	movwf	efgtoa@i& (0+255),b
  3747  000DFE                     
  3748                           ; BSR set to: 0
  3749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3750  000DFE  C0B9  F0AF         	movff	efgtoa@g,efgtoa@h
  3751  000E02  C0BA  F0B0         	movff	efgtoa@g+1,efgtoa@h+1
  3752  000E06  C0BB  F0B1         	movff	efgtoa@g+2,efgtoa@h+2
  3753  000E0A  C0BC  F0B2         	movff	efgtoa@g+3,efgtoa@h+3
  3754  000E0E                     
  3755                           ; BSR set to: 0
  3756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3757  000E0E  C0C1  F08D         	movff	efgtoa@u,efgtoa@ou
  3758  000E12  C0C2  F08E         	movff	efgtoa@u+1,efgtoa@ou+1
  3759  000E16  C0C3  F08F         	movff	efgtoa@u+2,efgtoa@ou+2
  3760  000E1A  C0C4  F090         	movff	efgtoa@u+3,efgtoa@ou+3
  3761                           
  3762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3763  000E1E  EF8C  F007         	goto	l7760
  3764  000E22                     l7752:
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3768  000E22  C0AF  F038         	movff	efgtoa@h,___fldiv@b
  3769  000E26  C0B0  F039         	movff	efgtoa@h+1,___fldiv@b+1
  3770  000E2A  C0B1  F03A         	movff	efgtoa@h+2,___fldiv@b+2
  3771  000E2E  C0B2  F03B         	movff	efgtoa@h+3,___fldiv@b+3
  3772  000E32  C0C1  F03C         	movff	efgtoa@u,___fldiv@a
  3773  000E36  C0C2  F03D         	movff	efgtoa@u+1,___fldiv@a+1
  3774  000E3A  C0C3  F03E         	movff	efgtoa@u+2,___fldiv@a+2
  3775  000E3E  C0C4  F03F         	movff	efgtoa@u+3,___fldiv@a+3
  3776  000E42  EC60  F011         	call	___fldiv	;wreg free
  3777  000E46  C038  F051         	movff	?___fldiv,floorf@x
  3778  000E4A  C039  F052         	movff	?___fldiv+1,floorf@x+1
  3779  000E4E  C03A  F053         	movff	?___fldiv+2,floorf@x+2
  3780  000E52  C03B  F054         	movff	?___fldiv+3,floorf@x+3
  3781  000E56  EC9C  F014         	call	_floorf	;wreg free
  3782  000E5A  C051  F0B3         	movff	?_floorf,efgtoa@l
  3783  000E5E  C052  F0B4         	movff	?_floorf+1,efgtoa@l+1
  3784  000E62  C053  F0B5         	movff	?_floorf+2,efgtoa@l+2
  3785  000E66  C054  F0B6         	movff	?_floorf+3,efgtoa@l+3
  3786                           
  3787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3788  000E6A  C0B3  F075         	movff	efgtoa@l,___fltol@f1
  3789  000E6E  C0B4  F076         	movff	efgtoa@l+1,___fltol@f1+1
  3790  000E72  C0B5  F077         	movff	efgtoa@l+2,___fltol@f1+2
  3791  000E76  C0B6  F078         	movff	efgtoa@l+3,___fltol@f1+3
  3792  000E7A  EC92  F01B         	call	___fltol	;wreg free
  3793  000E7E  C075  F0A5         	movff	?___fltol,efgtoa@d
  3794  000E82  C076  F0A6         	movff	?___fltol+1,efgtoa@d+1
  3795  000E86                     
  3796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3797  000E86  C0AF  F075         	movff	efgtoa@h,___flsub@b
  3798  000E8A  C0B0  F076         	movff	efgtoa@h+1,___flsub@b+1
  3799  000E8E  C0B1  F077         	movff	efgtoa@h+2,___flsub@b+2
  3800  000E92  C0B2  F078         	movff	efgtoa@h+3,___flsub@b+3
  3801  000E96  C0C1  F064         	movff	efgtoa@u,___flmul@a
  3802  000E9A  C0C2  F065         	movff	efgtoa@u+1,___flmul@a+1
  3803  000E9E  C0C3  F066         	movff	efgtoa@u+2,___flmul@a+2
  3804  000EA2  C0C4  F067         	movff	efgtoa@u+3,___flmul@a+3
  3805  000EA6  C0B3  F060         	movff	efgtoa@l,___flmul@b
  3806  000EAA  C0B4  F061         	movff	efgtoa@l+1,___flmul@b+1
  3807  000EAE  C0B5  F062         	movff	efgtoa@l+2,___flmul@b+2
  3808  000EB2  C0B6  F063         	movff	efgtoa@l+3,___flmul@b+3
  3809  000EB6  EC4A  F00F         	call	___flmul	;wreg free
  3810  000EBA  C060  F079         	movff	?___flmul,___flsub@a
  3811  000EBE  C061  F07A         	movff	?___flmul+1,___flsub@a+1
  3812  000EC2  C062  F07B         	movff	?___flmul+2,___flsub@a+2
  3813  000EC6  C063  F07C         	movff	?___flmul+3,___flsub@a+3
  3814  000ECA  ECF1  F022         	call	___flsub	;wreg free
  3815  000ECE  C075  F0AF         	movff	?___flsub,efgtoa@h
  3816  000ED2  C076  F0B0         	movff	?___flsub+1,efgtoa@h+1
  3817  000ED6  C077  F0B1         	movff	?___flsub+2,efgtoa@h+2
  3818  000EDA  C078  F0B2         	movff	?___flsub+3,efgtoa@h+3
  3819  000EDE                     
  3820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3821  000EDE  C0C1  F038         	movff	efgtoa@u,___fldiv@b
  3822  000EE2  C0C2  F039         	movff	efgtoa@u+1,___fldiv@b+1
  3823  000EE6  C0C3  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  3824  000EEA  C0C4  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  3825  000EEE  0E00               	movlw	0
  3826  000EF0  6E3C               	movwf	___fldiv@a^0,c
  3827  000EF2  0E00               	movlw	0
  3828  000EF4  6E3D               	movwf	(___fldiv@a+1)^0,c
  3829  000EF6  0E20               	movlw	32
  3830  000EF8  6E3E               	movwf	(___fldiv@a+2)^0,c
  3831  000EFA  0E41               	movlw	65
  3832  000EFC  6E3F               	movwf	(___fldiv@a+3)^0,c
  3833  000EFE  EC60  F011         	call	___fldiv	;wreg free
  3834  000F02  C038  F0C1         	movff	?___fldiv,efgtoa@u
  3835  000F06  C039  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  3836  000F0A  C03A  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  3837  000F0E  C03B  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  3838  000F12                     
  3839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3840  000F12  0100               	movlb	0	; () banked
  3841  000F14  4BB7               	infsnz	efgtoa@i& (0+255),f,b
  3842  000F16  2BB8               	incf	(efgtoa@i+1)& (0+255),f,b
  3843  000F18                     l7760:
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3847  000F18  51A1               	movf	efgtoa@m& (0+255),w,b
  3848  000F1A  5DB7               	subwf	efgtoa@i& (0+255),w,b
  3849  000F1C  51B8               	movf	(efgtoa@i+1)& (0+255),w,b
  3850  000F1E  0A80               	xorlw	128
  3851  000F20  6F88               	movwf	??_efgtoa& (0+255),b
  3852  000F22  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  3853  000F24  0A80               	xorlw	128
  3854  000F26  5988               	subwfb	??_efgtoa& (0+255),w,b
  3855  000F28  A0D8               	btfss	status,0,c
  3856  000F2A  EF99  F007         	goto	u9251
  3857  000F2E  EF9B  F007         	goto	u9250
  3858  000F32                     u9251:
  3859  000F32  EF11  F007         	goto	l7752
  3860  000F36                     u9250:
  3861  000F36                     
  3862                           ; BSR set to: 0
  3863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3864  000F36  C0C1  F060         	movff	efgtoa@u,___flmul@b
  3865  000F3A  C0C2  F061         	movff	efgtoa@u+1,___flmul@b+1
  3866  000F3E  C0C3  F062         	movff	efgtoa@u+2,___flmul@b+2
  3867  000F42  C0C4  F063         	movff	efgtoa@u+3,___flmul@b+3
  3868  000F46  0E00               	movlw	0
  3869  000F48  6F64               	movwf	___flmul@a& (0+255),b
  3870  000F4A  0E00               	movlw	0
  3871  000F4C  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3872  000F4E  0EA0               	movlw	160
  3873  000F50  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3874  000F52  0E40               	movlw	64
  3875  000F54  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3876  000F56  EC4A  F00F         	call	___flmul	;wreg free
  3877  000F5A  C060  F0B3         	movff	?___flmul,efgtoa@l
  3878  000F5E  C061  F0B4         	movff	?___flmul+1,efgtoa@l+1
  3879  000F62  C062  F0B5         	movff	?___flmul+2,efgtoa@l+2
  3880  000F66  C063  F0B6         	movff	?___flmul+3,efgtoa@l+3
  3881  000F6A                     
  3882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3883  000F6A  C0AF  F075         	movff	efgtoa@h,___flge@ff1
  3884  000F6E  C0B0  F076         	movff	efgtoa@h+1,___flge@ff1+1
  3885  000F72  C0B1  F077         	movff	efgtoa@h+2,___flge@ff1+2
  3886  000F76  C0B2  F078         	movff	efgtoa@h+3,___flge@ff1+3
  3887  000F7A  C0B3  F079         	movff	efgtoa@l,___flge@ff2
  3888  000F7E  C0B4  F07A         	movff	efgtoa@l+1,___flge@ff2+1
  3889  000F82  C0B5  F07B         	movff	efgtoa@l+2,___flge@ff2+2
  3890  000F86  C0B6  F07C         	movff	efgtoa@l+3,___flge@ff2+3
  3891  000F8A  EC16  F01C         	call	___flge	;wreg free
  3892  000F8E  0100               	movlb	0	; () banked
  3893  000F90  B0D8               	btfsc	status,0,c
  3894  000F92  EFCD  F007         	goto	u9261
  3895  000F96  EFCF  F007         	goto	u9260
  3896  000F9A                     u9261:
  3897  000F9A  EFD9  F007         	goto	l7768
  3898  000F9E                     u9260:
  3899  000F9E                     
  3900                           ; BSR set to: 0
  3901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3902  000F9E  0E00               	movlw	0
  3903  000FA0  6FB3               	movwf	efgtoa@l& (0+255),b
  3904  000FA2  0E00               	movlw	0
  3905  000FA4  6FB4               	movwf	(efgtoa@l+1)& (0+255),b
  3906  000FA6  0E00               	movlw	0
  3907  000FA8  6FB5               	movwf	(efgtoa@l+2)& (0+255),b
  3908  000FAA  0E00               	movlw	0
  3909  000FAC  6FB6               	movwf	(efgtoa@l+3)& (0+255),b
  3910                           
  3911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3912  000FAE  EF02  F008         	goto	l7774
  3913  000FB2                     l7768:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3917  000FB2  C0AF  F006         	movff	efgtoa@h,___fleq@ff1
  3918  000FB6  C0B0  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  3919  000FBA  C0B1  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  3920  000FBE  C0B2  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  3921  000FC2  C0B3  F00A         	movff	efgtoa@l,___fleq@ff2
  3922  000FC6  C0B4  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  3923  000FCA  C0B5  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  3924  000FCE  C0B6  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  3925  000FD2  EC71  F01F         	call	___fleq	;wreg free
  3926  000FD6  A0D8               	btfss	status,0,c
  3927  000FD8  EFF0  F007         	goto	u9271
  3928  000FDC  EFF2  F007         	goto	u9270
  3929  000FE0                     u9271:
  3930  000FE0  EF02  F008         	goto	l7774
  3931  000FE4                     u9270:
  3932  000FE4  0100               	movlb	0	; () banked
  3933  000FE6  B1A5               	btfsc	efgtoa@d& (0+255),0,b
  3934  000FE8  EFF8  F007         	goto	u9281
  3935  000FEC  EFFA  F007         	goto	u9280
  3936  000FF0                     u9281:
  3937  000FF0  EF02  F008         	goto	l7774
  3938  000FF4                     u9280:
  3939  000FF4                     
  3940                           ; BSR set to: 0
  3941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3942  000FF4  0E00               	movlw	0
  3943  000FF6  6FB3               	movwf	efgtoa@l& (0+255),b
  3944  000FF8  0E00               	movlw	0
  3945  000FFA  6FB4               	movwf	(efgtoa@l+1)& (0+255),b
  3946  000FFC  0E00               	movlw	0
  3947  000FFE  6FB5               	movwf	(efgtoa@l+2)& (0+255),b
  3948  001000  0E00               	movlw	0
  3949  001002  6FB6               	movwf	(efgtoa@l+3)& (0+255),b
  3950  001004                     l7774:
  3951                           
  3952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3953  001004  C0B9  F028         	movff	efgtoa@g,___fladd@b
  3954  001008  C0BA  F029         	movff	efgtoa@g+1,___fladd@b+1
  3955  00100C  C0BB  F02A         	movff	efgtoa@g+2,___fladd@b+2
  3956  001010  C0BC  F02B         	movff	efgtoa@g+3,___fladd@b+3
  3957  001014  C0B3  F02C         	movff	efgtoa@l,___fladd@a
  3958  001018  C0B4  F02D         	movff	efgtoa@l+1,___fladd@a+1
  3959  00101C  C0B5  F02E         	movff	efgtoa@l+2,___fladd@a+2
  3960  001020  C0B6  F02F         	movff	efgtoa@l+3,___fladd@a+3
  3961  001024  ECEA  F00C         	call	___fladd	;wreg free
  3962  001028  C028  F0AF         	movff	?___fladd,efgtoa@h
  3963  00102C  C029  F0B0         	movff	?___fladd+1,efgtoa@h+1
  3964  001030  C02A  F0B1         	movff	?___fladd+2,efgtoa@h+2
  3965  001034  C02B  F0B2         	movff	?___fladd+3,efgtoa@h+3
  3966  001038                     
  3967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3968  001038  C08D  F0C1         	movff	efgtoa@ou,efgtoa@u
  3969  00103C  C08E  F0C2         	movff	efgtoa@ou+1,efgtoa@u+1
  3970  001040  C08F  F0C3         	movff	efgtoa@ou+2,efgtoa@u+2
  3971  001044  C090  F0C4         	movff	efgtoa@ou+3,efgtoa@u+3
  3972  001048                     
  3973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3974  001048  0E65               	movlw	101
  3975  00104A  0100               	movlb	0	; () banked
  3976  00104C  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
  3977  00104E  B4D8               	btfsc	status,2,c
  3978  001050  EF2C  F008         	goto	u9291
  3979  001054  EF2E  F008         	goto	u9290
  3980  001058                     u9291:
  3981  001058  EF34  F008         	goto	l7782
  3982  00105C                     u9290:
  3983  00105C                     
  3984                           ; BSR set to: 0
  3985  00105C  C0BD  F0A3         	movff	efgtoa@e,efgtoa@ne
  3986  001060  C0BE  F0A4         	movff	efgtoa@e+1,efgtoa@ne+1
  3987  001064  EF38  F008         	goto	l718
  3988  001068                     l7782:
  3989                           
  3990                           ; BSR set to: 0
  3991  001068  0E00               	movlw	0
  3992  00106A  6FA4               	movwf	(efgtoa@ne+1)& (0+255),b
  3993  00106C  0E00               	movlw	0
  3994  00106E  6FA3               	movwf	efgtoa@ne& (0+255),b
  3995  001070                     l718:
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3999  001070  0E00               	movlw	0
  4000  001072  6FA0               	movwf	(efgtoa@pp+1)& (0+255),b
  4001  001074  0E00               	movlw	0
  4002  001076  6F9F               	movwf	efgtoa@pp& (0+255),b
  4003                           
  4004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4005  001078  0E00               	movlw	0
  4006  00107A  6F9E               	movwf	(efgtoa@t+1)& (0+255),b
  4007  00107C  0E00               	movlw	0
  4008  00107E  6F9D               	movwf	efgtoa@t& (0+255),b
  4009                           
  4010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4011  001080  0E00               	movlw	0
  4012  001082  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  4013  001084  0E00               	movlw	0
  4014  001086  6FB7               	movwf	efgtoa@i& (0+255),b
  4015                           
  4016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4017  001088  EF34  F009         	goto	l7832
  4018  00108C                     l7784:
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4022  00108C  C0AF  F038         	movff	efgtoa@h,___fldiv@b
  4023  001090  C0B0  F039         	movff	efgtoa@h+1,___fldiv@b+1
  4024  001094  C0B1  F03A         	movff	efgtoa@h+2,___fldiv@b+2
  4025  001098  C0B2  F03B         	movff	efgtoa@h+3,___fldiv@b+3
  4026  00109C  C0C1  F03C         	movff	efgtoa@u,___fldiv@a
  4027  0010A0  C0C2  F03D         	movff	efgtoa@u+1,___fldiv@a+1
  4028  0010A4  C0C3  F03E         	movff	efgtoa@u+2,___fldiv@a+2
  4029  0010A8  C0C4  F03F         	movff	efgtoa@u+3,___fldiv@a+3
  4030  0010AC  EC60  F011         	call	___fldiv	;wreg free
  4031  0010B0  C038  F051         	movff	?___fldiv,floorf@x
  4032  0010B4  C039  F052         	movff	?___fldiv+1,floorf@x+1
  4033  0010B8  C03A  F053         	movff	?___fldiv+2,floorf@x+2
  4034  0010BC  C03B  F054         	movff	?___fldiv+3,floorf@x+3
  4035  0010C0  EC9C  F014         	call	_floorf	;wreg free
  4036  0010C4  C051  F0B3         	movff	?_floorf,efgtoa@l
  4037  0010C8  C052  F0B4         	movff	?_floorf+1,efgtoa@l+1
  4038  0010CC  C053  F0B5         	movff	?_floorf+2,efgtoa@l+2
  4039  0010D0  C054  F0B6         	movff	?_floorf+3,efgtoa@l+3
  4040                           
  4041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4042  0010D4  C0B3  F075         	movff	efgtoa@l,___fltol@f1
  4043  0010D8  C0B4  F076         	movff	efgtoa@l+1,___fltol@f1+1
  4044  0010DC  C0B5  F077         	movff	efgtoa@l+2,___fltol@f1+2
  4045  0010E0  C0B6  F078         	movff	efgtoa@l+3,___fltol@f1+3
  4046  0010E4  EC92  F01B         	call	___fltol	;wreg free
  4047  0010E8  C075  F0A5         	movff	?___fltol,efgtoa@d
  4048  0010EC  C076  F0A6         	movff	?___fltol+1,efgtoa@d+1
  4049  0010F0                     
  4050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4051  0010F0  B857               	btfsc	_flags^0,4,c
  4052  0010F2  EF7D  F008         	goto	u9301
  4053  0010F6  EF7F  F008         	goto	u9300
  4054  0010FA                     u9301:
  4055  0010FA  EF9D  F008         	goto	l7796
  4056  0010FE                     u9300:
  4057  0010FE  0100               	movlb	0	; () banked
  4058  001100  51A5               	movf	efgtoa@d& (0+255),w,b
  4059  001102  11A6               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4060  001104  A4D8               	btfss	status,2,c
  4061  001106  EF87  F008         	goto	u9311
  4062  00110A  EF89  F008         	goto	u9310
  4063  00110E                     u9311:
  4064  00110E  EF9D  F008         	goto	l7796
  4065  001112                     u9310:
  4066  001112                     
  4067                           ; BSR set to: 0
  4068  001112  0E67               	movlw	103
  4069  001114  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  4070  001116  A4D8               	btfss	status,2,c
  4071  001118  EF90  F008         	goto	u9321
  4072  00111C  EF92  F008         	goto	u9320
  4073  001120                     u9321:
  4074  001120  EF9D  F008         	goto	l7796
  4075  001124                     u9320:
  4076  001124                     
  4077                           ; BSR set to: 0
  4078  001124  BFA4               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4079  001126  EF99  F008         	goto	u9330
  4080  00112A  EF97  F008         	goto	u9331
  4081  00112E                     u9331:
  4082  00112E  EF9D  F008         	goto	l7796
  4083  001132                     u9330:
  4084  001132                     
  4085                           ; BSR set to: 0
  4086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4087  001132  4B9D               	infsnz	efgtoa@t& (0+255),f,b
  4088  001134  2B9E               	incf	(efgtoa@t+1)& (0+255),f,b
  4089                           
  4090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4091  001136  EFE8  F008         	goto	l7824
  4092  00113A                     l7796:
  4093                           
  4094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4095  00113A  0100               	movlb	0	; () banked
  4096  00113C  519F               	movf	efgtoa@pp& (0+255),w,b
  4097  00113E  11A0               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4098  001140  A4D8               	btfss	status,2,c
  4099  001142  EFA5  F008         	goto	u9341
  4100  001146  EFA7  F008         	goto	u9340
  4101  00114A                     u9341:
  4102  00114A  EFD1  F008         	goto	l7816
  4103  00114E                     u9340:
  4104  00114E                     
  4105                           ; BSR set to: 0
  4106  00114E  BFA4               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4107  001150  EFAE  F008         	goto	u9350
  4108  001154  EFAC  F008         	goto	u9351
  4109  001158                     u9351:
  4110  001158  EFD1  F008         	goto	l7816
  4111  00115C                     u9350:
  4112  00115C                     
  4113                           ; BSR set to: 0
  4114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4115  00115C  0E3D               	movlw	low _dbuf
  4116  00115E  25BF               	addwf	efgtoa@n& (0+255),w,b
  4117  001160  6ED9               	movwf	fsr2l,c
  4118  001162  0E01               	movlw	high _dbuf
  4119  001164  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4120  001166  6EDA               	movwf	fsr2h,c
  4121  001168  0E2E               	movlw	46
  4122  00116A  6EDF               	movwf	indf2,c
  4123  00116C                     
  4124                           ; BSR set to: 0
  4125  00116C  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  4126  00116E  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  4127  001170                     
  4128                           ; BSR set to: 0
  4129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4130  001170  07AC               	decf	efgtoa@w& (0+255),f,b
  4131  001172  A0D8               	btfss	status,0,c
  4132  001174  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4133  001176                     
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4136  001176  0E00               	movlw	0
  4137  001178  6FA0               	movwf	(efgtoa@pp+1)& (0+255),b
  4138  00117A  0E01               	movlw	1
  4139  00117C  6F9F               	movwf	efgtoa@pp& (0+255),b
  4140  00117E  EFD1  F008         	goto	l7816
  4141  001182                     l7808:
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4145  001182  0E3D               	movlw	low _dbuf
  4146  001184  25BF               	addwf	efgtoa@n& (0+255),w,b
  4147  001186  6ED9               	movwf	fsr2l,c
  4148  001188  0E01               	movlw	high _dbuf
  4149  00118A  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4150  00118C  6EDA               	movwf	fsr2h,c
  4151  00118E  0E30               	movlw	48
  4152  001190  6EDF               	movwf	indf2,c
  4153  001192                     
  4154                           ; BSR set to: 0
  4155  001192  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  4156  001194  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  4157  001196                     
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4160  001196  07AC               	decf	efgtoa@w& (0+255),f,b
  4161  001198  A0D8               	btfss	status,0,c
  4162  00119A  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4163  00119C                     
  4164                           ; BSR set to: 0
  4165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4166  00119C  079D               	decf	efgtoa@t& (0+255),f,b
  4167  00119E  A0D8               	btfss	status,0,c
  4168  0011A0  079E               	decf	(efgtoa@t+1)& (0+255),f,b
  4169  0011A2                     l7816:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4173  0011A2  519D               	movf	efgtoa@t& (0+255),w,b
  4174  0011A4  119E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4175  0011A6  A4D8               	btfss	status,2,c
  4176  0011A8  EFD8  F008         	goto	u9361
  4177  0011AC  EFDA  F008         	goto	u9360
  4178  0011B0                     u9361:
  4179  0011B0  EFC1  F008         	goto	l7808
  4180  0011B4                     u9360:
  4181  0011B4                     
  4182                           ; BSR set to: 0
  4183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4184  0011B4  0E3D               	movlw	low _dbuf
  4185  0011B6  25BF               	addwf	efgtoa@n& (0+255),w,b
  4186  0011B8  6ED9               	movwf	fsr2l,c
  4187  0011BA  0E01               	movlw	high _dbuf
  4188  0011BC  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4189  0011BE  6EDA               	movwf	fsr2h,c
  4190  0011C0  51A5               	movf	efgtoa@d& (0+255),w,b
  4191  0011C2  0F30               	addlw	48
  4192  0011C4  6EDF               	movwf	indf2,c
  4193  0011C6                     
  4194                           ; BSR set to: 0
  4195  0011C6  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  4196  0011C8  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  4197  0011CA                     
  4198                           ; BSR set to: 0
  4199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4200  0011CA  07AC               	decf	efgtoa@w& (0+255),f,b
  4201  0011CC  A0D8               	btfss	status,0,c
  4202  0011CE  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4203  0011D0                     l7824:
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4207  0011D0  C0AF  F075         	movff	efgtoa@h,___flsub@b
  4208  0011D4  C0B0  F076         	movff	efgtoa@h+1,___flsub@b+1
  4209  0011D8  C0B1  F077         	movff	efgtoa@h+2,___flsub@b+2
  4210  0011DC  C0B2  F078         	movff	efgtoa@h+3,___flsub@b+3
  4211  0011E0  C0C1  F064         	movff	efgtoa@u,___flmul@a
  4212  0011E4  C0C2  F065         	movff	efgtoa@u+1,___flmul@a+1
  4213  0011E8  C0C3  F066         	movff	efgtoa@u+2,___flmul@a+2
  4214  0011EC  C0C4  F067         	movff	efgtoa@u+3,___flmul@a+3
  4215  0011F0  C0B3  F060         	movff	efgtoa@l,___flmul@b
  4216  0011F4  C0B4  F061         	movff	efgtoa@l+1,___flmul@b+1
  4217  0011F8  C0B5  F062         	movff	efgtoa@l+2,___flmul@b+2
  4218  0011FC  C0B6  F063         	movff	efgtoa@l+3,___flmul@b+3
  4219  001200  EC4A  F00F         	call	___flmul	;wreg free
  4220  001204  C060  F079         	movff	?___flmul,___flsub@a
  4221  001208  C061  F07A         	movff	?___flmul+1,___flsub@a+1
  4222  00120C  C062  F07B         	movff	?___flmul+2,___flsub@a+2
  4223  001210  C063  F07C         	movff	?___flmul+3,___flsub@a+3
  4224  001214  ECF1  F022         	call	___flsub	;wreg free
  4225  001218  C075  F0AF         	movff	?___flsub,efgtoa@h
  4226  00121C  C076  F0B0         	movff	?___flsub+1,efgtoa@h+1
  4227  001220  C077  F0B1         	movff	?___flsub+2,efgtoa@h+2
  4228  001224  C078  F0B2         	movff	?___flsub+3,efgtoa@h+3
  4229  001228                     
  4230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4231  001228  C0C1  F038         	movff	efgtoa@u,___fldiv@b
  4232  00122C  C0C2  F039         	movff	efgtoa@u+1,___fldiv@b+1
  4233  001230  C0C3  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  4234  001234  C0C4  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  4235  001238  0E00               	movlw	0
  4236  00123A  6E3C               	movwf	___fldiv@a^0,c
  4237  00123C  0E00               	movlw	0
  4238  00123E  6E3D               	movwf	(___fldiv@a+1)^0,c
  4239  001240  0E20               	movlw	32
  4240  001242  6E3E               	movwf	(___fldiv@a+2)^0,c
  4241  001244  0E41               	movlw	65
  4242  001246  6E3F               	movwf	(___fldiv@a+3)^0,c
  4243  001248  EC60  F011         	call	___fldiv	;wreg free
  4244  00124C  C038  F0C1         	movff	?___fldiv,efgtoa@u
  4245  001250  C039  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  4246  001254  C03A  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  4247  001258  C03B  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  4248  00125C                     
  4249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4250  00125C  0100               	movlb	0	; () banked
  4251  00125E  07A3               	decf	efgtoa@ne& (0+255),f,b
  4252  001260  A0D8               	btfss	status,0,c
  4253  001262  07A4               	decf	(efgtoa@ne+1)& (0+255),f,b
  4254  001264                     
  4255                           ; BSR set to: 0
  4256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4257  001264  4BB7               	infsnz	efgtoa@i& (0+255),f,b
  4258  001266  2BB8               	incf	(efgtoa@i+1)& (0+255),f,b
  4259  001268                     l7832:
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4263  001268  51A1               	movf	efgtoa@m& (0+255),w,b
  4264  00126A  5DB7               	subwf	efgtoa@i& (0+255),w,b
  4265  00126C  51B8               	movf	(efgtoa@i+1)& (0+255),w,b
  4266  00126E  0A80               	xorlw	128
  4267  001270  6F88               	movwf	??_efgtoa& (0+255),b
  4268  001272  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  4269  001274  0A80               	xorlw	128
  4270  001276  5988               	subwfb	??_efgtoa& (0+255),w,b
  4271  001278  B0D8               	btfsc	status,0,c
  4272  00127A  EF41  F009         	goto	u9371
  4273  00127E  EF43  F009         	goto	u9370
  4274  001282                     u9371:
  4275  001282  EF51  F009         	goto	l7836
  4276  001286                     u9370:
  4277  001286                     
  4278                           ; BSR set to: 0
  4279  001286  BFC0               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4280  001288  EF4F  F009         	goto	u9381
  4281  00128C  51C0               	movf	(efgtoa@n+1)& (0+255),w,b
  4282  00128E  E109               	bnz	u9380
  4283  001290  0E4B               	movlw	75
  4284  001292  5DBF               	subwf	efgtoa@n& (0+255),w,b
  4285  001294  A0D8               	btfss	status,0,c
  4286  001296  EF4F  F009         	goto	u9381
  4287  00129A  EF51  F009         	goto	u9380
  4288  00129E                     u9381:
  4289  00129E  EF46  F008         	goto	l7784
  4290  0012A2                     u9380:
  4291  0012A2                     l7836:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4295  0012A2  519F               	movf	efgtoa@pp& (0+255),w,b
  4296  0012A4  11A0               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4297  0012A6  A4D8               	btfss	status,2,c
  4298  0012A8  EF58  F009         	goto	u9391
  4299  0012AC  EF5A  F009         	goto	u9390
  4300  0012B0                     u9391:
  4301  0012B0  EF6B  F009         	goto	l7844
  4302  0012B4                     u9390:
  4303  0012B4                     
  4304                           ; BSR set to: 0
  4305  0012B4  A857               	btfss	_flags^0,4,c
  4306  0012B6  EF5F  F009         	goto	u9401
  4307  0012BA  EF61  F009         	goto	u9400
  4308  0012BE                     u9401:
  4309  0012BE  EF6B  F009         	goto	l7844
  4310  0012C2                     u9400:
  4311  0012C2                     
  4312                           ; BSR set to: 0
  4313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4314  0012C2  0E3D               	movlw	low _dbuf
  4315  0012C4  25BF               	addwf	efgtoa@n& (0+255),w,b
  4316  0012C6  6ED9               	movwf	fsr2l,c
  4317  0012C8  0E01               	movlw	high _dbuf
  4318  0012CA  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4319  0012CC  6EDA               	movwf	fsr2h,c
  4320  0012CE  0E2E               	movlw	46
  4321  0012D0  6EDF               	movwf	indf2,c
  4322  0012D2                     
  4323                           ; BSR set to: 0
  4324  0012D2  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  4325  0012D4  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  4326  0012D6                     l7844:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4330  0012D6  0E3D               	movlw	low _dbuf
  4331  0012D8  25BF               	addwf	efgtoa@n& (0+255),w,b
  4332  0012DA  6ED9               	movwf	fsr2l,c
  4333  0012DC  0E01               	movlw	high _dbuf
  4334  0012DE  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4335  0012E0  6EDA               	movwf	fsr2h,c
  4336  0012E2  0E00               	movlw	0
  4337  0012E4  6EDF               	movwf	indf2,c
  4338  0012E6                     
  4339                           ; BSR set to: 0
  4340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4341  0012E6  0E65               	movlw	101
  4342  0012E8  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
  4343  0012EA  A4D8               	btfss	status,2,c
  4344  0012EC  EF7A  F009         	goto	u9411
  4345  0012F0  EF7C  F009         	goto	u9410
  4346  0012F4                     u9411:
  4347  0012F4  EF26  F005         	goto	l7656
  4348  0012F8                     u9410:
  4349  0012F8                     
  4350                           ; BSR set to: 0
  4351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4352  0012F8  0E00               	movlw	0
  4353  0012FA  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  4354  0012FC  0E4F               	movlw	79
  4355  0012FE  6FB7               	movwf	efgtoa@i& (0+255),b
  4356  001300                     
  4357                           ; BSR set to: 0
  4358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4359  001300  0E3D               	movlw	low _dbuf
  4360  001302  25B7               	addwf	efgtoa@i& (0+255),w,b
  4361  001304  6ED9               	movwf	fsr2l,c
  4362  001306  0E01               	movlw	high _dbuf
  4363  001308  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4364  00130A  6EDA               	movwf	fsr2h,c
  4365  00130C  0E00               	movlw	0
  4366  00130E  6EDF               	movwf	indf2,c
  4367  001310                     
  4368                           ; BSR set to: 0
  4369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4370  001310  0E00               	movlw	0
  4371  001312  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  4372  001314  0E00               	movlw	0
  4373  001316  6FA7               	movwf	efgtoa@sign& (0+255),b
  4374  001318                     
  4375                           ; BSR set to: 0
  4376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4377  001318  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4378  00131A  EF93  F009         	goto	u9420
  4379  00131E  EF91  F009         	goto	u9421
  4380  001322                     u9421:
  4381  001322  EF9B  F009         	goto	l7860
  4382  001326                     u9420:
  4383  001326                     
  4384                           ; BSR set to: 0
  4385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4386  001326  0E00               	movlw	0
  4387  001328  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  4388  00132A  0E01               	movlw	1
  4389  00132C  6FA7               	movwf	efgtoa@sign& (0+255),b
  4390  00132E                     
  4391                           ; BSR set to: 0
  4392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4393  00132E  6DBD               	negf	efgtoa@e& (0+255),b
  4394  001330  1FBE               	comf	(efgtoa@e+1)& (0+255),f,b
  4395  001332  B0D8               	btfsc	status,0,c
  4396  001334  2BBE               	incf	(efgtoa@e+1)& (0+255),f,b
  4397  001336                     l7860:
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4401  001336  0E00               	movlw	0
  4402  001338  6FAA               	movwf	(efgtoa@p+1)& (0+255),b
  4403  00133A  0E02               	movlw	2
  4404  00133C  6FA9               	movwf	efgtoa@p& (0+255),b
  4405                           
  4406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4407  00133E  EFCC  F009         	goto	l7872
  4408  001342                     l7862:
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4412  001342  07B7               	decf	efgtoa@i& (0+255),f,b
  4413  001344  A0D8               	btfss	status,0,c
  4414  001346  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  4415  001348                     
  4416                           ; BSR set to: 0
  4417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4418  001348  0E3D               	movlw	low _dbuf
  4419  00134A  25B7               	addwf	efgtoa@i& (0+255),w,b
  4420  00134C  6ED9               	movwf	fsr2l,c
  4421  00134E  0E01               	movlw	high _dbuf
  4422  001350  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4423  001352  6EDA               	movwf	fsr2h,c
  4424  001354  C0BD  F006         	movff	efgtoa@e,___awmod@dividend
  4425  001358  C0BE  F007         	movff	efgtoa@e+1,___awmod@dividend+1
  4426  00135C  0E00               	movlw	0
  4427  00135E  6E09               	movwf	(___awmod@divisor+1)^0,c
  4428  001360  0E0A               	movlw	10
  4429  001362  6E08               	movwf	___awmod@divisor^0,c
  4430  001364  EC19  F01F         	call	___awmod	;wreg free
  4431  001368  5006               	movf	?___awmod^0,w,c
  4432  00136A  0F30               	addlw	48
  4433  00136C  6EDF               	movwf	indf2,c
  4434  00136E                     
  4435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4436  00136E  C0BD  F006         	movff	efgtoa@e,___awdiv@dividend
  4437  001372  C0BE  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  4438  001376  0E00               	movlw	0
  4439  001378  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4440  00137A  0E0A               	movlw	10
  4441  00137C  6E08               	movwf	___awdiv@divisor^0,c
  4442  00137E  EC56  F01E         	call	___awdiv	;wreg free
  4443  001382  C006  F0BD         	movff	?___awdiv,efgtoa@e
  4444  001386  C007  F0BE         	movff	?___awdiv+1,efgtoa@e+1
  4445  00138A                     
  4446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4447  00138A  0100               	movlb	0	; () banked
  4448  00138C  07A9               	decf	efgtoa@p& (0+255),f,b
  4449  00138E  A0D8               	btfss	status,0,c
  4450  001390  07AA               	decf	(efgtoa@p+1)& (0+255),f,b
  4451  001392                     
  4452                           ; BSR set to: 0
  4453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4454  001392  07AC               	decf	efgtoa@w& (0+255),f,b
  4455  001394  A0D8               	btfss	status,0,c
  4456  001396  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4457  001398                     l7872:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4461  001398  51BD               	movf	efgtoa@e& (0+255),w,b
  4462  00139A  11BE               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4463  00139C  A4D8               	btfss	status,2,c
  4464  00139E  EFD3  F009         	goto	u9431
  4465  0013A2  EFD5  F009         	goto	u9430
  4466  0013A6                     u9431:
  4467  0013A6  EFA1  F009         	goto	l7862
  4468  0013AA                     u9430:
  4469  0013AA                     
  4470                           ; BSR set to: 0
  4471  0013AA  BFAA               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4472  0013AC  EFE2  F009         	goto	u9440
  4473  0013B0  51AA               	movf	(efgtoa@p+1)& (0+255),w,b
  4474  0013B2  E106               	bnz	u9441
  4475  0013B4  05A9               	decf	efgtoa@p& (0+255),w,b
  4476  0013B6  B0D8               	btfsc	status,0,c
  4477  0013B8  EFE0  F009         	goto	u9441
  4478  0013BC  EFE2  F009         	goto	u9440
  4479  0013C0                     u9441:
  4480  0013C0  EFA1  F009         	goto	l7862
  4481  0013C4                     u9440:
  4482  0013C4                     
  4483                           ; BSR set to: 0
  4484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4485  0013C4  07B7               	decf	efgtoa@i& (0+255),f,b
  4486  0013C6  A0D8               	btfss	status,0,c
  4487  0013C8  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  4488  0013CA                     
  4489                           ; BSR set to: 0
  4490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4491  0013CA  51A7               	movf	efgtoa@sign& (0+255),w,b
  4492  0013CC  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4493  0013CE  A4D8               	btfss	status,2,c
  4494  0013D0  EFEC  F009         	goto	u9451
  4495  0013D4  EFEE  F009         	goto	u9450
  4496  0013D8                     u9451:
  4497  0013D8  EFF4  F009         	goto	l7882
  4498  0013DC                     u9450:
  4499  0013DC                     
  4500                           ; BSR set to: 0
  4501  0013DC  0E00               	movlw	0
  4502  0013DE  6F98               	movwf	(_efgtoa$832+1)& (0+255),b
  4503  0013E0  0E2B               	movlw	43
  4504  0013E2  6F97               	movwf	_efgtoa$832& (0+255),b
  4505  0013E4  EFF8  F009         	goto	l7884
  4506  0013E8                     l7882:
  4507                           
  4508                           ; BSR set to: 0
  4509  0013E8  0E00               	movlw	0
  4510  0013EA  6F98               	movwf	(_efgtoa$832+1)& (0+255),b
  4511  0013EC  0E2D               	movlw	45
  4512  0013EE  6F97               	movwf	_efgtoa$832& (0+255),b
  4513  0013F0                     l7884:
  4514                           
  4515                           ; BSR set to: 0
  4516  0013F0  0E3D               	movlw	low _dbuf
  4517  0013F2  25B7               	addwf	efgtoa@i& (0+255),w,b
  4518  0013F4  6ED9               	movwf	fsr2l,c
  4519  0013F6  0E01               	movlw	high _dbuf
  4520  0013F8  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4521  0013FA  6EDA               	movwf	fsr2h,c
  4522  0013FC  C097  FFDF         	movff	_efgtoa$832,indf2
  4523  001400                     
  4524                           ; BSR set to: 0
  4525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4526  001400  07AC               	decf	efgtoa@w& (0+255),f,b
  4527  001402  A0D8               	btfss	status,0,c
  4528  001404  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4529  001406                     
  4530                           ; BSR set to: 0
  4531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4532  001406  07B7               	decf	efgtoa@i& (0+255),f,b
  4533  001408  A0D8               	btfss	status,0,c
  4534  00140A  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  4535  00140C                     
  4536                           ; BSR set to: 0
  4537  00140C  0EBF               	movlw	191
  4538  00140E  6F88               	movwf	??_efgtoa& (0+255),b
  4539  001410  0EFF               	movlw	255
  4540  001412  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  4541  001414  5187               	movf	efgtoa@c& (0+255),w,b
  4542  001416  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  4543  001418  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  4544  00141A  5188               	movf	??_efgtoa& (0+255),w,b
  4545  00141C  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4546  00141E  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  4547  001420  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4548  001422  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  4549  001424  E10A               	bnz	u9460
  4550  001426  0E1A               	movlw	26
  4551  001428  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4552  00142A  A0D8               	btfss	status,0,c
  4553  00142C  EF1A  F00A         	goto	u9461
  4554  001430  EF1D  F00A         	goto	u9460
  4555  001434                     u9461:
  4556  001434  0E01               	movlw	1
  4557  001436  EF1E  F00A         	goto	u9470
  4558  00143A                     u9460:
  4559  00143A  0E00               	movlw	0
  4560  00143C                     u9470:
  4561  00143C  6F9B               	movwf	_efgtoa$834& (0+255),b
  4562  00143E  6B9C               	clrf	(_efgtoa$834+1)& (0+255),b
  4563  001440                     
  4564                           ; BSR set to: 0
  4565  001440  519B               	movf	_efgtoa$834& (0+255),w,b
  4566  001442  119C               	iorwf	(_efgtoa$834+1)& (0+255),w,b
  4567  001444  A4D8               	btfss	status,2,c
  4568  001446  EF27  F00A         	goto	u9481
  4569  00144A  EF29  F00A         	goto	u9480
  4570  00144E                     u9481:
  4571  00144E  EF2F  F00A         	goto	l7898
  4572  001452                     u9480:
  4573  001452                     
  4574                           ; BSR set to: 0
  4575  001452  0E00               	movlw	0
  4576  001454  6F9A               	movwf	(_efgtoa$833+1)& (0+255),b
  4577  001456  0E65               	movlw	101
  4578  001458  6F99               	movwf	_efgtoa$833& (0+255),b
  4579  00145A  EF33  F00A         	goto	l7900
  4580  00145E                     l7898:
  4581                           
  4582                           ; BSR set to: 0
  4583  00145E  0E00               	movlw	0
  4584  001460  6F9A               	movwf	(_efgtoa$833+1)& (0+255),b
  4585  001462  0E45               	movlw	69
  4586  001464  6F99               	movwf	_efgtoa$833& (0+255),b
  4587  001466                     l7900:
  4588                           
  4589                           ; BSR set to: 0
  4590  001466  0E3D               	movlw	low _dbuf
  4591  001468  25B7               	addwf	efgtoa@i& (0+255),w,b
  4592  00146A  6ED9               	movwf	fsr2l,c
  4593  00146C  0E01               	movlw	high _dbuf
  4594  00146E  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4595  001470  6EDA               	movwf	fsr2h,c
  4596  001472  C099  FFDF         	movff	_efgtoa$833,indf2
  4597  001476                     
  4598                           ; BSR set to: 0
  4599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4600  001476  07AC               	decf	efgtoa@w& (0+255),f,b
  4601  001478  A0D8               	btfss	status,0,c
  4602  00147A  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4603  00147C                     
  4604                           ; BSR set to: 0
  4605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4606  00147C  0E3D               	movlw	low _dbuf
  4607  00147E  25BF               	addwf	efgtoa@n& (0+255),w,b
  4608  001480  6E06               	movwf	strcpy@dest^0,c
  4609  001482  0E01               	movlw	high _dbuf
  4610  001484  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4611  001486  6E07               	movwf	(strcpy@dest+1)^0,c
  4612  001488  0E3D               	movlw	low _dbuf
  4613  00148A  25B7               	addwf	efgtoa@i& (0+255),w,b
  4614  00148C  6E08               	movwf	strcpy@src^0,c
  4615  00148E  0E01               	movlw	high _dbuf
  4616  001490  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4617  001492  6E09               	movwf	(strcpy@src+1)^0,c
  4618  001494  ECCC  F021         	call	_strcpy	;wreg free
  4619  001498  EF26  F005         	goto	l7656
  4620  00149C                     l674:
  4621  00149C  0012               	return		;funcret
  4622  00149E                     __end_of_efgtoa:
  4623                           	opt callstack 0
  4624                           
  4625 ;; *************** function _tolower *****************
  4626 ;; Defined at:
  4627 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  c               2   11[COMRAM] int 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  2   11[COMRAM] int 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2, status,0
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4641 ;;      Params:         2       0       0       0       0       0       0       0       0
  4642 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4643 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4644 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4645 ;;Total ram usage:        8 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:    3
  4648 ;; This function calls:
  4649 ;;		_isupper
  4650 ;; This function is called by:
  4651 ;;		_efgtoa
  4652 ;;		_vfpfcnvrt
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text8
  4657  0042DA                     __ptext8:
  4658                           	opt callstack 0
  4659  0042DA                     _tolower:
  4660                           	opt callstack 23
  4661  0042DA  0EBF               	movlw	191
  4662  0042DC  6E0E               	movwf	??_tolower^0,c
  4663  0042DE  0EFF               	movlw	255
  4664  0042E0  6E0F               	movwf	(??_tolower+1)^0,c
  4665  0042E2  C00C  F010         	movff	tolower@c,??_tolower+2
  4666  0042E6  C00D  F011         	movff	tolower@c+1,??_tolower+3
  4667  0042EA  500E               	movf	??_tolower^0,w,c
  4668  0042EC  2610               	addwf	(??_tolower+2)^0,f,c
  4669  0042EE  500F               	movf	(??_tolower+1)^0,w,c
  4670  0042F0  2211               	addwfc	(??_tolower+3)^0,f,c
  4671  0042F2  5011               	movf	(??_tolower+3)^0,w,c
  4672  0042F4  E10A               	bnz	u7820
  4673  0042F6  0E1A               	movlw	26
  4674  0042F8  5C10               	subwf	(??_tolower+2)^0,w,c
  4675  0042FA  A0D8               	btfss	status,0,c
  4676  0042FC  EF82  F021         	goto	u7821
  4677  004300  EF85  F021         	goto	u7820
  4678  004304                     u7821:
  4679  004304  0E01               	movlw	1
  4680  004306  EF86  F021         	goto	u7830
  4681  00430A                     u7820:
  4682  00430A  0E00               	movlw	0
  4683  00430C                     u7830:
  4684  00430C  6E12               	movwf	_tolower$1456^0,c
  4685  00430E  6A13               	clrf	(_tolower$1456+1)^0,c
  4686  004310  5012               	movf	_tolower$1456^0,w,c
  4687  004312  1013               	iorwf	(_tolower$1456+1)^0,w,c
  4688  004314  B4D8               	btfsc	status,2,c
  4689  004316  EF8F  F021         	goto	u7841
  4690  00431A  EF91  F021         	goto	u7840
  4691  00431E                     u7841:
  4692  00431E  EF98  F021         	goto	l1608
  4693  004322                     u7840:
  4694  004322  0E20               	movlw	32
  4695  004324  100C               	iorwf	tolower@c^0,w,c
  4696  004326  6E0C               	movwf	?_tolower^0,c
  4697  004328  500D               	movf	(tolower@c+1)^0,w,c
  4698  00432A  6E0D               	movwf	(?_tolower+1)^0,c
  4699  00432C  EF9C  F021         	goto	l1613
  4700  004330                     l1608:
  4701  004330  C00C  F00C         	movff	tolower@c,?_tolower
  4702  004334  C00D  F00D         	movff	tolower@c+1,?_tolower+1
  4703  004338                     l1613:
  4704  004338  0012               	return		;funcret
  4705  00433A                     __end_of_tolower:
  4706                           	opt callstack 0
  4707                           
  4708 ;; *************** function _isupper *****************
  4709 ;; Defined at:
  4710 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  c               2    5[COMRAM] int 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;		None
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  2    5[COMRAM] int 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4724 ;;      Params:         2       0       0       0       0       0       0       0       0
  4725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4726 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4727 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4728 ;;Total ram usage:        6 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:    2
  4731 ;; This function calls:
  4732 ;;		Nothing
  4733 ;; This function is called by:
  4734 ;;		_efgtoa
  4735 ;;		_vfpfcnvrt
  4736 ;;		_tolower
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text9
  4741  0046F4                     __ptext9:
  4742                           	opt callstack 0
  4743  0046F4                     _isupper:
  4744                           	opt callstack 23
  4745  0046F4  0EBF               	movlw	191
  4746  0046F6  6E08               	movwf	??_isupper^0,c
  4747  0046F8  0EFF               	movlw	255
  4748  0046FA  6E09               	movwf	(??_isupper+1)^0,c
  4749  0046FC  C006  F00A         	movff	isupper@c,??_isupper+2
  4750  004700  C007  F00B         	movff	isupper@c+1,??_isupper+3
  4751  004704  5008               	movf	??_isupper^0,w,c
  4752  004706  260A               	addwf	(??_isupper+2)^0,f,c
  4753  004708  5009               	movf	(??_isupper+1)^0,w,c
  4754  00470A  220B               	addwfc	(??_isupper+3)^0,f,c
  4755  00470C  500B               	movf	(??_isupper+3)^0,w,c
  4756  00470E  E10A               	bnz	u7270
  4757  004710  0E1A               	movlw	26
  4758  004712  5C0A               	subwf	(??_isupper+2)^0,w,c
  4759  004714  A0D8               	btfss	status,0,c
  4760  004716  EF8F  F023         	goto	u7271
  4761  00471A  EF92  F023         	goto	u7270
  4762  00471E                     u7271:
  4763  00471E  0E01               	movlw	1
  4764  004720  EF93  F023         	goto	u7280
  4765  004724                     u7270:
  4766  004724  0E00               	movlw	0
  4767  004726                     u7280:
  4768  004726  6E06               	movwf	?_isupper^0,c
  4769  004728  6A07               	clrf	(?_isupper+1)^0,c
  4770  00472A  0012               	return		;funcret
  4771  00472C                     __end_of_isupper:
  4772                           	opt callstack 0
  4773                           
  4774 ;; *************** function _strcpy *****************
  4775 ;; Defined at:
  4776 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  dest            2    5[COMRAM] PTR unsigned char 
  4779 ;;		 -> dbuf(80), 
  4780 ;;  src             2    7[COMRAM] PTR const unsigned char 
  4781 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  4782 ;;		 -> dbuf(80), 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  d               2   13[COMRAM] PTR unsigned char 
  4785 ;;		 -> dbuf(80), 
  4786 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4787 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  4788 ;;		 -> dbuf(80), 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  2    5[COMRAM] PTR unsigned char 
  4791 ;; Registers used:
  4792 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4798 ;;      Params:         4       0       0       0       0       0       0       0       0
  4799 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4800 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4801 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4802 ;;Total ram usage:       10 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    2
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_efgtoa
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text10
  4813  004398                     __ptext10:
  4814                           	opt callstack 0
  4815  004398                     _strcpy:
  4816                           	opt callstack 23
  4817  004398  C008  F00C         	movff	strcpy@src,strcpy@s
  4818  00439C  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
  4819  0043A0  C006  F00E         	movff	strcpy@dest,strcpy@d
  4820  0043A4  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
  4821  0043A8                     l6964:
  4822  0043A8  500C               	movf	strcpy@s^0,w,c
  4823  0043AA  6E0A               	movwf	??_strcpy^0,c
  4824  0043AC  500D               	movf	(strcpy@s+1)^0,w,c
  4825  0043AE  6E0B               	movwf	(??_strcpy+1)^0,c
  4826  0043B0  4A0C               	infsnz	strcpy@s^0,f,c
  4827  0043B2  2A0D               	incf	(strcpy@s+1)^0,f,c
  4828  0043B4  C00A  FFF6         	movff	??_strcpy,tblptrl
  4829  0043B8  C00B  FFF7         	movff	??_strcpy+1,tblptrh
  4830  0043BC  6AF8               	clrf	tblptru,c
  4831  0043BE  C00E  FFD9         	movff	strcpy@d,fsr2l
  4832  0043C2  C00F  FFDA         	movff	strcpy@d+1,fsr2h
  4833  0043C6  4A0E               	infsnz	strcpy@d^0,f,c
  4834  0043C8  2A0F               	incf	(strcpy@d+1)^0,f,c
  4835  0043CA  0E07               	movlw	(high __ramtop+-1)
  4836  0043CC  64F7               	cpfsgt	tblptrh,c
  4837  0043CE  D003               	bra	u7807
  4838  0043D0  0008               	tblrd		*
  4839  0043D2  50F5               	movf	tablat,w,c
  4840  0043D4  D005               	bra	u7800
  4841  0043D6                     u7807:
  4842  0043D6  CFF6 FFE9          	movff	tblptrl,fsr0l
  4843  0043DA  CFF7 FFEA          	movff	tblptrh,fsr0h
  4844  0043DE  50EF               	movf	indf0,w,c
  4845  0043E0                     u7800:
  4846  0043E0  6EDF               	movwf	indf2,c
  4847  0043E2  50DF               	movf	indf2,w,c
  4848  0043E4  A4D8               	btfss	status,2,c
  4849  0043E6  EFF7  F021         	goto	u7811
  4850  0043EA  EFF9  F021         	goto	u7810
  4851  0043EE                     u7811:
  4852  0043EE  EFD4  F021         	goto	l6964
  4853  0043F2                     u7810:
  4854  0043F2  0012               	return		;funcret
  4855  0043F4                     __end_of_strcpy:
  4856                           	opt callstack 0
  4857                           
  4858 ;; *************** function _floorf *****************
  4859 ;; Defined at:
  4860 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  x               4   80[COMRAM] float 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  u               4   12[BANK0 ] struct .
  4865 ;;  m               4    6[BANK0 ] unsigned long 
  4866 ;;  e               2   10[BANK0 ] int 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  4   80[COMRAM] float 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, status,0
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4876 ;;      Params:         4       0       0       0       0       0       0       0       0
  4877 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4878 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4879 ;;      Totals:         4      16       0       0       0       0       0       0       0
  4880 ;;Total ram usage:       20 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:    2
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_efgtoa
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text11
  4891  002938                     __ptext11:
  4892                           	opt callstack 0
  4893  002938                     _floorf:
  4894                           	opt callstack 23
  4895  002938  C104  F06C         	movff	floorf@F524,floorf@u
  4896  00293C  C105  F06D         	movff	floorf@F524+1,floorf@u+1
  4897  002940  C106  F06E         	movff	floorf@F524+2,floorf@u+2
  4898  002944  C107  F06F         	movff	floorf@F524+3,floorf@u+3
  4899  002948  C051  F06C         	movff	floorf@x,floorf@u
  4900  00294C  C052  F06D         	movff	floorf@x+1,floorf@u+1
  4901  002950  C053  F06E         	movff	floorf@x+2,floorf@u+2
  4902  002954  C054  F06F         	movff	floorf@x+3,floorf@u+3
  4903  002958  0E81               	movlw	129
  4904  00295A  0100               	movlb	0	; () banked
  4905  00295C  6F60               	movwf	??_floorf& (0+255),b
  4906  00295E  0EFF               	movlw	255
  4907  002960  6F61               	movwf	(??_floorf+1)& (0+255),b
  4908  002962  C06C  F062         	movff	floorf@u,??_floorf+2
  4909  002966  C06D  F063         	movff	floorf@u+1,??_floorf+3
  4910  00296A  C06E  F064         	movff	floorf@u+2,??_floorf+4
  4911  00296E  C06F  F065         	movff	floorf@u+3,??_floorf+5
  4912  002972  0E18               	movlw	24
  4913  002974  EFC1  F014         	goto	u7850
  4914  002978                     u7855:
  4915  002978  90D8               	bcf	status,0,c
  4916  00297A  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  4917  00297C  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4918  00297E  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4919  002980  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4920  002982                     u7850:
  4921  002982  2EE8               	decfsz	wreg,f,c
  4922  002984  EFBC  F014         	goto	u7855
  4923  002988  5162               	movf	(??_floorf+2)& (0+255),w,b
  4924  00298A  2560               	addwf	??_floorf& (0+255),w,b
  4925  00298C  6F6A               	movwf	floorf@e& (0+255),b
  4926  00298E  0E00               	movlw	0
  4927  002990  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  4928  002992  6F6B               	movwf	(floorf@e+1)& (0+255),b
  4929  002994  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4930  002996  EFD6  F014         	goto	u7861
  4931  00299A  516B               	movf	(floorf@e+1)& (0+255),w,b
  4932  00299C  E109               	bnz	u7860
  4933  00299E  0E17               	movlw	23
  4934  0029A0  5D6A               	subwf	floorf@e& (0+255),w,b
  4935  0029A2  A0D8               	btfss	status,0,c
  4936  0029A4  EFD6  F014         	goto	u7861
  4937  0029A8  EFD8  F014         	goto	u7860
  4938  0029AC                     u7861:
  4939  0029AC  EFE2  F014         	goto	l6982
  4940  0029B0                     u7860:
  4941  0029B0                     l6980:
  4942                           
  4943                           ; BSR set to: 0
  4944  0029B0  C051  F051         	movff	floorf@x,?_floorf
  4945  0029B4  C052  F052         	movff	floorf@x+1,?_floorf+1
  4946  0029B8  C053  F053         	movff	floorf@x+2,?_floorf+2
  4947  0029BC  C054  F054         	movff	floorf@x+3,?_floorf+3
  4948  0029C0  EFA6  F015         	goto	l1510
  4949  0029C4                     l6982:
  4950                           
  4951                           ; BSR set to: 0
  4952  0029C4  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4953  0029C6  EFE7  F014         	goto	u7871
  4954  0029CA  EFE9  F014         	goto	u7870
  4955  0029CE                     u7871:
  4956  0029CE  EF5A  F015         	goto	l6992
  4957  0029D2                     u7870:
  4958  0029D2                     
  4959                           ; BSR set to: 0
  4960  0029D2  C06A  F060         	movff	floorf@e,??_floorf
  4961  0029D6  0EFF               	movlw	255
  4962  0029D8  6F61               	movwf	(??_floorf+1)& (0+255),b
  4963  0029DA  0EFF               	movlw	255
  4964  0029DC  6F62               	movwf	(??_floorf+2)& (0+255),b
  4965  0029DE  0E7F               	movlw	127
  4966  0029E0  6F63               	movwf	(??_floorf+3)& (0+255),b
  4967  0029E2  0E00               	movlw	0
  4968  0029E4  6F64               	movwf	(??_floorf+4)& (0+255),b
  4969  0029E6                     u7885:
  4970  0029E6  6760               	tstfsz	??_floorf& (0+255),b
  4971  0029E8  EFF8  F014         	goto	u7886
  4972  0029EC  EF00  F015         	goto	u7887
  4973  0029F0                     u7886:
  4974  0029F0  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  4975  0029F2  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4976  0029F4  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4977  0029F6  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4978  0029F8  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4979  0029FA  2F60               	decfsz	??_floorf& (0+255),f,b
  4980  0029FC  EFF3  F014         	goto	u7885
  4981  002A00                     u7887:
  4982  002A00  C061  F066         	movff	??_floorf+1,floorf@m
  4983  002A04  C062  F067         	movff	??_floorf+2,floorf@m+1
  4984  002A08  C063  F068         	movff	??_floorf+3,floorf@m+2
  4985  002A0C  C064  F069         	movff	??_floorf+4,floorf@m+3
  4986  002A10  0100               	movlb	0	; () banked
  4987  002A12  5166               	movf	floorf@m& (0+255),w,b
  4988  002A14  156C               	andwf	floorf@u& (0+255),w,b
  4989  002A16  6F60               	movwf	??_floorf& (0+255),b
  4990  002A18  5167               	movf	(floorf@m+1)& (0+255),w,b
  4991  002A1A  156D               	andwf	(floorf@u+1)& (0+255),w,b
  4992  002A1C  6F61               	movwf	(??_floorf+1)& (0+255),b
  4993  002A1E  5168               	movf	(floorf@m+2)& (0+255),w,b
  4994  002A20  156E               	andwf	(floorf@u+2)& (0+255),w,b
  4995  002A22  6F62               	movwf	(??_floorf+2)& (0+255),b
  4996  002A24  5169               	movf	(floorf@m+3)& (0+255),w,b
  4997  002A26  156F               	andwf	(floorf@u+3)& (0+255),w,b
  4998  002A28  6F63               	movwf	(??_floorf+3)& (0+255),b
  4999  002A2A  5160               	movf	??_floorf& (0+255),w,b
  5000  002A2C  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5001  002A2E  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5002  002A30  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5003  002A32  A4D8               	btfss	status,2,c
  5004  002A34  EF1E  F015         	goto	u7891
  5005  002A38  EF20  F015         	goto	u7890
  5006  002A3C                     u7891:
  5007  002A3C  EF22  F015         	goto	l6988
  5008  002A40                     u7890:
  5009  002A40  EFD8  F014         	goto	l6980
  5010  002A44                     l6988:
  5011                           
  5012                           ; BSR set to: 0
  5013  002A44  C06C  F060         	movff	floorf@u,??_floorf
  5014  002A48  C06D  F061         	movff	floorf@u+1,??_floorf+1
  5015  002A4C  C06E  F062         	movff	floorf@u+2,??_floorf+2
  5016  002A50  C06F  F063         	movff	floorf@u+3,??_floorf+3
  5017  002A54  0E20               	movlw	32
  5018  002A56  EF32  F015         	goto	u7900
  5019  002A5A                     u7905:
  5020  002A5A  90D8               	bcf	status,0,c
  5021  002A5C  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5022  002A5E  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5023  002A60  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5024  002A62  3360               	rrcf	??_floorf& (0+255),f,b
  5025  002A64                     u7900:
  5026  002A64  2EE8               	decfsz	wreg,f,c
  5027  002A66  EF2D  F015         	goto	u7905
  5028  002A6A  5160               	movf	??_floorf& (0+255),w,b
  5029  002A6C  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5030  002A6E  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5031  002A70  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5032  002A72  B4D8               	btfsc	status,2,c
  5033  002A74  EF3E  F015         	goto	u7911
  5034  002A78  EF40  F015         	goto	u7910
  5035  002A7C                     u7911:
  5036  002A7C  EF48  F015         	goto	l1513
  5037  002A80                     u7910:
  5038  002A80                     
  5039                           ; BSR set to: 0
  5040  002A80  5166               	movf	floorf@m& (0+255),w,b
  5041  002A82  276C               	addwf	floorf@u& (0+255),f,b
  5042  002A84  5167               	movf	(floorf@m+1)& (0+255),w,b
  5043  002A86  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  5044  002A88  5168               	movf	(floorf@m+2)& (0+255),w,b
  5045  002A8A  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  5046  002A8C  5169               	movf	(floorf@m+3)& (0+255),w,b
  5047  002A8E  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  5048  002A90                     l1513:
  5049                           
  5050                           ; BSR set to: 0
  5051  002A90  1D66               	comf	floorf@m& (0+255),w,b
  5052  002A92  6F60               	movwf	??_floorf& (0+255),b
  5053  002A94  1D67               	comf	(floorf@m+1)& (0+255),w,b
  5054  002A96  6F61               	movwf	(??_floorf+1)& (0+255),b
  5055  002A98  1D68               	comf	(floorf@m+2)& (0+255),w,b
  5056  002A9A  6F62               	movwf	(??_floorf+2)& (0+255),b
  5057  002A9C  1D69               	comf	(floorf@m+3)& (0+255),w,b
  5058  002A9E  6F63               	movwf	(??_floorf+3)& (0+255),b
  5059  002AA0  5160               	movf	??_floorf& (0+255),w,b
  5060  002AA2  176C               	andwf	floorf@u& (0+255),f,b
  5061  002AA4  5161               	movf	(??_floorf+1)& (0+255),w,b
  5062  002AA6  176D               	andwf	(floorf@u+1)& (0+255),f,b
  5063  002AA8  5162               	movf	(??_floorf+2)& (0+255),w,b
  5064  002AAA  176E               	andwf	(floorf@u+2)& (0+255),f,b
  5065  002AAC  5163               	movf	(??_floorf+3)& (0+255),w,b
  5066  002AAE  176F               	andwf	(floorf@u+3)& (0+255),f,b
  5067  002AB0  EF9E  F015         	goto	l7000
  5068  002AB4                     l6992:
  5069                           
  5070                           ; BSR set to: 0
  5071  002AB4  C06C  F060         	movff	floorf@u,??_floorf
  5072  002AB8  C06D  F061         	movff	floorf@u+1,??_floorf+1
  5073  002ABC  C06E  F062         	movff	floorf@u+2,??_floorf+2
  5074  002AC0  C06F  F063         	movff	floorf@u+3,??_floorf+3
  5075  002AC4  0E20               	movlw	32
  5076  002AC6  EF6A  F015         	goto	u7920
  5077  002ACA                     u7925:
  5078  002ACA  90D8               	bcf	status,0,c
  5079  002ACC  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5080  002ACE  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5081  002AD0  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5082  002AD2  3360               	rrcf	??_floorf& (0+255),f,b
  5083  002AD4                     u7920:
  5084  002AD4  2EE8               	decfsz	wreg,f,c
  5085  002AD6  EF65  F015         	goto	u7925
  5086  002ADA  5160               	movf	??_floorf& (0+255),w,b
  5087  002ADC  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5088  002ADE  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5089  002AE0  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5090  002AE2  A4D8               	btfss	status,2,c
  5091  002AE4  EF76  F015         	goto	u7931
  5092  002AE8  EF78  F015         	goto	u7930
  5093  002AEC                     u7931:
  5094  002AEC  EF82  F015         	goto	l6996
  5095  002AF0                     u7930:
  5096  002AF0                     
  5097                           ; BSR set to: 0
  5098  002AF0  0E00               	movlw	0
  5099  002AF2  6F6C               	movwf	floorf@u& (0+255),b
  5100  002AF4  0E00               	movlw	0
  5101  002AF6  6F6D               	movwf	(floorf@u+1)& (0+255),b
  5102  002AF8  0E00               	movlw	0
  5103  002AFA  6F6E               	movwf	(floorf@u+2)& (0+255),b
  5104  002AFC  0E00               	movlw	0
  5105  002AFE  6F6F               	movwf	(floorf@u+3)& (0+255),b
  5106  002B00  EF9E  F015         	goto	l7000
  5107  002B04                     l6996:
  5108                           
  5109                           ; BSR set to: 0
  5110  002B04  90D8               	bcf	status,0,c
  5111  002B06  356C               	rlcf	floorf@u& (0+255),w,b
  5112  002B08  6F60               	movwf	??_floorf& (0+255),b
  5113  002B0A  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  5114  002B0C  6F61               	movwf	(??_floorf+1)& (0+255),b
  5115  002B0E  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  5116  002B10  6F62               	movwf	(??_floorf+2)& (0+255),b
  5117  002B12  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  5118  002B14  6F63               	movwf	(??_floorf+3)& (0+255),b
  5119  002B16  5160               	movf	??_floorf& (0+255),w,b
  5120  002B18  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5121  002B1A  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5122  002B1C  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5123  002B1E  B4D8               	btfsc	status,2,c
  5124  002B20  EF94  F015         	goto	u7941
  5125  002B24  EF96  F015         	goto	u7940
  5126  002B28                     u7941:
  5127  002B28  EF9E  F015         	goto	l7000
  5128  002B2C                     u7940:
  5129  002B2C                     
  5130                           ; BSR set to: 0
  5131  002B2C  0E00               	movlw	0
  5132  002B2E  6F6C               	movwf	floorf@u& (0+255),b
  5133  002B30  0E00               	movlw	0
  5134  002B32  6F6D               	movwf	(floorf@u+1)& (0+255),b
  5135  002B34  0E80               	movlw	128
  5136  002B36  6F6E               	movwf	(floorf@u+2)& (0+255),b
  5137  002B38  0EBF               	movlw	191
  5138  002B3A  6F6F               	movwf	(floorf@u+3)& (0+255),b
  5139  002B3C                     l7000:
  5140                           
  5141                           ; BSR set to: 0
  5142  002B3C  C06C  F051         	movff	floorf@u,?_floorf
  5143  002B40  C06D  F052         	movff	floorf@u+1,?_floorf+1
  5144  002B44  C06E  F053         	movff	floorf@u+2,?_floorf+2
  5145  002B48  C06F  F054         	movff	floorf@u+3,?_floorf+3
  5146  002B4C                     l1510:
  5147                           
  5148                           ; BSR set to: 0
  5149  002B4C  0012               	return		;funcret
  5150  002B4E                     __end_of_floorf:
  5151                           	opt callstack 0
  5152                           
  5153 ;; *************** function ___fpclassifyf *****************
  5154 ;; Defined at:
  5155 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  x               4    5[COMRAM] float 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  u               4   15[COMRAM] struct .
  5160 ;;  e               2   13[COMRAM] int 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  2    5[COMRAM] int 
  5163 ;; Registers used:
  5164 ;;		wreg, status,2, status,0
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5170 ;;      Params:         4       0       0       0       0       0       0       0       0
  5171 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5172 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5173 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5174 ;;Total ram usage:       14 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; Hardware stack levels required when called:    2
  5177 ;; This function calls:
  5178 ;;		Nothing
  5179 ;; This function is called by:
  5180 ;;		_efgtoa
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text12
  5185  003932                     __ptext12:
  5186                           	opt callstack 0
  5187  003932                     ___fpclassifyf:
  5188                           	opt callstack 23
  5189  003932  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5190  003936  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5191  00393A  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5192  00393E  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5193  003942  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  5194  003946  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5195  00394A  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5196  00394E  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5197  003952  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5198  003956  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5199  00395A  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5200  00395E  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5201  003962  0E18               	movlw	24
  5202  003964  EFB9  F01C         	goto	u7730
  5203  003968                     u7735:
  5204  003968  90D8               	bcf	status,0,c
  5205  00396A  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  5206  00396C  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  5207  00396E  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  5208  003970  320A               	rrcf	??___fpclassifyf^0,f,c
  5209  003972                     u7730:
  5210  003972  2EE8               	decfsz	wreg,f,c
  5211  003974  EFB4  F01C         	goto	u7735
  5212  003978  500A               	movf	??___fpclassifyf^0,w,c
  5213  00397A  6E0E               	movwf	___fpclassifyf@e^0,c
  5214  00397C  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  5215  00397E  500E               	movf	___fpclassifyf@e^0,w,c
  5216  003980  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5217  003982  A4D8               	btfss	status,2,c
  5218  003984  EFC6  F01C         	goto	u7741
  5219  003988  EFC8  F01C         	goto	u7740
  5220  00398C                     u7741:
  5221  00398C  EFE8  F01C         	goto	l6952
  5222  003990                     u7740:
  5223  003990  90D8               	bcf	status,0,c
  5224  003992  3410               	rlcf	___fpclassifyf@u^0,w,c
  5225  003994  6E0A               	movwf	??___fpclassifyf^0,c
  5226  003996  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5227  003998  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  5228  00399A  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5229  00399C  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  5230  00399E  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5231  0039A0  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  5232  0039A2  500A               	movf	??___fpclassifyf^0,w,c
  5233  0039A4  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5234  0039A6  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5235  0039A8  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5236  0039AA  A4D8               	btfss	status,2,c
  5237  0039AC  EFDA  F01C         	goto	u7751
  5238  0039B0  EFDC  F01C         	goto	u7750
  5239  0039B4                     u7751:
  5240  0039B4  EFE2  F01C         	goto	l6948
  5241  0039B8                     u7750:
  5242  0039B8  0E00               	movlw	0
  5243  0039BA  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5244  0039BC  0E02               	movlw	2
  5245  0039BE  6E06               	movwf	?___fpclassifyf^0,c
  5246  0039C0  EF17  F01D         	goto	l1465
  5247  0039C4                     l6948:
  5248  0039C4  0E00               	movlw	0
  5249  0039C6  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5250  0039C8  0E03               	movlw	3
  5251  0039CA  6E06               	movwf	?___fpclassifyf^0,c
  5252  0039CC  EF17  F01D         	goto	l1465
  5253  0039D0                     l6952:
  5254  0039D0  280E               	incf	___fpclassifyf@e^0,w,c
  5255  0039D2  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5256  0039D4  A4D8               	btfss	status,2,c
  5257  0039D6  EFEF  F01C         	goto	u7761
  5258  0039DA  EFF1  F01C         	goto	u7760
  5259  0039DE                     u7761:
  5260  0039DE  EF13  F01D         	goto	l6958
  5261  0039E2                     u7760:
  5262  0039E2  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5263  0039E6  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5264  0039EA  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5265  0039EE  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5266  0039F2  0E09               	movlw	9
  5267  0039F4                     u7775:
  5268  0039F4  90D8               	bcf	status,0,c
  5269  0039F6  360A               	rlcf	??___fpclassifyf^0,f,c
  5270  0039F8  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  5271  0039FA  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  5272  0039FC  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  5273  0039FE  2EE8               	decfsz	wreg,f,c
  5274  003A00  EFFA  F01C         	goto	u7775
  5275  003A04  500A               	movf	??___fpclassifyf^0,w,c
  5276  003A06  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5277  003A08  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5278  003A0A  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5279  003A0C  B4D8               	btfsc	status,2,c
  5280  003A0E  EF0B  F01D         	goto	u7781
  5281  003A12  EF0E  F01D         	goto	u7780
  5282  003A16                     u7781:
  5283  003A16  0E01               	movlw	1
  5284  003A18  EF0F  F01D         	goto	u7790
  5285  003A1C                     u7780:
  5286  003A1C  0E00               	movlw	0
  5287  003A1E                     u7790:
  5288  003A1E  6E06               	movwf	?___fpclassifyf^0,c
  5289  003A20  6A07               	clrf	(?___fpclassifyf+1)^0,c
  5290  003A22  EF17  F01D         	goto	l1465
  5291  003A26                     l6958:
  5292  003A26  0E00               	movlw	0
  5293  003A28  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5294  003A2A  0E04               	movlw	4
  5295  003A2C  6E06               	movwf	?___fpclassifyf^0,c
  5296  003A2E                     l1465:
  5297  003A2E  0012               	return		;funcret
  5298  003A30                     __end_of___fpclassifyf:
  5299                           	opt callstack 0
  5300                           
  5301 ;; *************** function ___flsub *****************
  5302 ;; Defined at:
  5303 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  b               4   21[BANK0 ] int 
  5306 ;;  a               4   25[BANK0 ] int 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  4   21[BANK0 ] int 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, status,0, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5318 ;;      Params:         0       8       0       0       0       0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5321 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5322 ;;Total ram usage:        8 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    3
  5325 ;; This function calls:
  5326 ;;		___fladd
  5327 ;; This function is called by:
  5328 ;;		_efgtoa
  5329 ;;		_PID
  5330 ;;		_roundf
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text13
  5335  0045E2                     __ptext13:
  5336                           	opt callstack 0
  5337  0045E2                     ___flsub:
  5338                           	opt callstack 22
  5339  0045E2  0E00               	movlw	0
  5340  0045E4  0100               	movlb	0	; () banked
  5341  0045E6  1B79               	xorwf	___flsub@a& (0+255),f,b
  5342  0045E8  0E00               	movlw	0
  5343  0045EA  1B7A               	xorwf	(___flsub@a+1)& (0+255),f,b
  5344  0045EC  0E00               	movlw	0
  5345  0045EE  1B7B               	xorwf	(___flsub@a+2)& (0+255),f,b
  5346  0045F0  0E80               	movlw	128
  5347  0045F2  1B7C               	xorwf	(___flsub@a+3)& (0+255),f,b
  5348  0045F4                     
  5349                           ; BSR set to: 0
  5350  0045F4  C075  F028         	movff	___flsub@b,___fladd@b
  5351  0045F8  C076  F029         	movff	___flsub@b+1,___fladd@b+1
  5352  0045FC  C077  F02A         	movff	___flsub@b+2,___fladd@b+2
  5353  004600  C078  F02B         	movff	___flsub@b+3,___fladd@b+3
  5354  004604  C079  F02C         	movff	___flsub@a,___fladd@a
  5355  004608  C07A  F02D         	movff	___flsub@a+1,___fladd@a+1
  5356  00460C  C07B  F02E         	movff	___flsub@a+2,___fladd@a+2
  5357  004610  C07C  F02F         	movff	___flsub@a+3,___fladd@a+3
  5358  004614  ECEA  F00C         	call	___fladd	;wreg free
  5359  004618  C028  F075         	movff	?___fladd,?___flsub
  5360  00461C  C029  F076         	movff	?___fladd+1,?___flsub+1
  5361  004620  C02A  F077         	movff	?___fladd+2,?___flsub+2
  5362  004624  C02B  F078         	movff	?___fladd+3,?___flsub+3
  5363  004628  0012               	return		;funcret
  5364  00462A                     __end_of___flsub:
  5365                           	opt callstack 0
  5366                           
  5367 ;; *************** function ___flneg *****************
  5368 ;; Defined at:
  5369 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  f1              4    5[COMRAM] int 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  4    5[COMRAM] int 
  5376 ;; Registers used:
  5377 ;;		wreg, status,2, status,0
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5383 ;;      Params:         4       0       0       0       0       0       0       0       0
  5384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5386 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5387 ;;Total ram usage:        4 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    2
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_efgtoa
  5394 ;;		_roundf
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text14
  5399  00472C                     __ptext14:
  5400                           	opt callstack 0
  5401  00472C                     ___flneg:
  5402                           	opt callstack 23
  5403  00472C  5006               	movf	___flneg@f1^0,w,c
  5404  00472E  1007               	iorwf	(___flneg@f1+1)^0,w,c
  5405  004730  1008               	iorwf	(___flneg@f1+2)^0,w,c
  5406  004732  1009               	iorwf	(___flneg@f1+3)^0,w,c
  5407  004734  B4D8               	btfsc	status,2,c
  5408  004736  EF9F  F023         	goto	u8721
  5409  00473A  EFA1  F023         	goto	u8720
  5410  00473E                     u8721:
  5411  00473E  EFA9  F023         	goto	l7490
  5412  004742                     u8720:
  5413  004742  0E00               	movlw	0
  5414  004744  1A06               	xorwf	___flneg@f1^0,f,c
  5415  004746  0E00               	movlw	0
  5416  004748  1A07               	xorwf	(___flneg@f1+1)^0,f,c
  5417  00474A  0E00               	movlw	0
  5418  00474C  1A08               	xorwf	(___flneg@f1+2)^0,f,c
  5419  00474E  0E80               	movlw	128
  5420  004750  1A09               	xorwf	(___flneg@f1+3)^0,f,c
  5421  004752                     l7490:
  5422  004752  C006  F006         	movff	___flneg@f1,?___flneg
  5423  004756  C007  F007         	movff	___flneg@f1+1,?___flneg+1
  5424  00475A  C008  F008         	movff	___flneg@f1+2,?___flneg+2
  5425  00475E  C009  F009         	movff	___flneg@f1+3,?___flneg+3
  5426  004762  0012               	return		;funcret
  5427  004764                     __end_of___flneg:
  5428                           	opt callstack 0
  5429                           
  5430 ;; *************** function ___flge *****************
  5431 ;; Defined at:
  5432 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  ff1             4   21[BANK0 ] int 
  5435 ;;  ff2             4   25[BANK0 ] int 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;		None               void
  5440 ;; Registers used:
  5441 ;;		wreg, status,2, status,0
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5447 ;;      Params:         0       8       0       0       0       0       0       0       0
  5448 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5449 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5450 ;;      Totals:         0      12       0       0       0       0       0       0       0
  5451 ;;Total ram usage:       12 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    2
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_efgtoa
  5458 ;;		_hayCruce
  5459 ;;		_decidirDireccion
  5460 ;;		_roundf
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text15
  5465  00382C                     __ptext15:
  5466                           	opt callstack 0
  5467  00382C                     ___flge:
  5468                           	opt callstack 23
  5469  00382C  0E00               	movlw	0
  5470  00382E  0100               	movlb	0	; () banked
  5471  003830  1575               	andwf	___flge@ff1& (0+255),w,b
  5472  003832  6F7D               	movwf	??___flge& (0+255),b
  5473  003834  0E00               	movlw	0
  5474  003836  1576               	andwf	(___flge@ff1+1)& (0+255),w,b
  5475  003838  6F7E               	movwf	(??___flge+1)& (0+255),b
  5476  00383A  0E80               	movlw	128
  5477  00383C  1577               	andwf	(___flge@ff1+2)& (0+255),w,b
  5478  00383E  6F7F               	movwf	(??___flge+2)& (0+255),b
  5479  003840  0E7F               	movlw	127
  5480  003842  1578               	andwf	(___flge@ff1+3)& (0+255),w,b
  5481  003844  6F80               	movwf	(??___flge+3)& (0+255),b
  5482  003846  517D               	movf	??___flge& (0+255),w,b
  5483  003848  117E               	iorwf	(??___flge+1)& (0+255),w,b
  5484  00384A  117F               	iorwf	(??___flge+2)& (0+255),w,b
  5485  00384C  1180               	iorwf	(??___flge+3)& (0+255),w,b
  5486  00384E  A4D8               	btfss	status,2,c
  5487  003850  EF2C  F01C         	goto	u8671
  5488  003854  EF2E  F01C         	goto	u8670
  5489  003858                     u8671:
  5490  003858  EF36  F01C         	goto	l7468
  5491  00385C                     u8670:
  5492  00385C                     
  5493                           ; BSR set to: 0
  5494  00385C  0E00               	movlw	0
  5495  00385E  6F75               	movwf	___flge@ff1& (0+255),b
  5496  003860  0E00               	movlw	0
  5497  003862  6F76               	movwf	(___flge@ff1+1)& (0+255),b
  5498  003864  0E00               	movlw	0
  5499  003866  6F77               	movwf	(___flge@ff1+2)& (0+255),b
  5500  003868  0E00               	movlw	0
  5501  00386A  6F78               	movwf	(___flge@ff1+3)& (0+255),b
  5502  00386C                     l7468:
  5503                           
  5504                           ; BSR set to: 0
  5505  00386C  0E00               	movlw	0
  5506  00386E  1579               	andwf	___flge@ff2& (0+255),w,b
  5507  003870  6F7D               	movwf	??___flge& (0+255),b
  5508  003872  0E00               	movlw	0
  5509  003874  157A               	andwf	(___flge@ff2+1)& (0+255),w,b
  5510  003876  6F7E               	movwf	(??___flge+1)& (0+255),b
  5511  003878  0E80               	movlw	128
  5512  00387A  157B               	andwf	(___flge@ff2+2)& (0+255),w,b
  5513  00387C  6F7F               	movwf	(??___flge+2)& (0+255),b
  5514  00387E  0E7F               	movlw	127
  5515  003880  157C               	andwf	(___flge@ff2+3)& (0+255),w,b
  5516  003882  6F80               	movwf	(??___flge+3)& (0+255),b
  5517  003884  517D               	movf	??___flge& (0+255),w,b
  5518  003886  117E               	iorwf	(??___flge+1)& (0+255),w,b
  5519  003888  117F               	iorwf	(??___flge+2)& (0+255),w,b
  5520  00388A  1180               	iorwf	(??___flge+3)& (0+255),w,b
  5521  00388C  A4D8               	btfss	status,2,c
  5522  00388E  EF4B  F01C         	goto	u8681
  5523  003892  EF4D  F01C         	goto	u8680
  5524  003896                     u8681:
  5525  003896  EF55  F01C         	goto	l7472
  5526  00389A                     u8680:
  5527  00389A                     
  5528                           ; BSR set to: 0
  5529  00389A  0E00               	movlw	0
  5530  00389C  6F79               	movwf	___flge@ff2& (0+255),b
  5531  00389E  0E00               	movlw	0
  5532  0038A0  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
  5533  0038A2  0E00               	movlw	0
  5534  0038A4  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
  5535  0038A6  0E00               	movlw	0
  5536  0038A8  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
  5537  0038AA                     l7472:
  5538                           
  5539                           ; BSR set to: 0
  5540  0038AA  AF78               	btfss	(___flge@ff1+3)& (0+255),7,b
  5541  0038AC  EF5A  F01C         	goto	u8691
  5542  0038B0  EF5C  F01C         	goto	u8690
  5543  0038B4                     u8691:
  5544  0038B4  EF65  F01C         	goto	l7476
  5545  0038B8                     u8690:
  5546  0038B8                     
  5547                           ; BSR set to: 0
  5548  0038B8  6D75               	negf	___flge@ff1& (0+255),b
  5549  0038BA  1F76               	comf	(___flge@ff1+1)& (0+255),f,b
  5550  0038BC  B0D8               	btfsc	status,0,c
  5551  0038BE  2B76               	incf	(___flge@ff1+1)& (0+255),f,b
  5552  0038C0  1F77               	comf	(___flge@ff1+2)& (0+255),f,b
  5553  0038C2  B0D8               	btfsc	status,0,c
  5554  0038C4  2B77               	incf	(___flge@ff1+2)& (0+255),f,b
  5555  0038C6  0E80               	movlw	128
  5556  0038C8  5778               	subfwb	(___flge@ff1+3)& (0+255),f,b
  5557  0038CA                     l7476:
  5558                           
  5559                           ; BSR set to: 0
  5560  0038CA  AF7C               	btfss	(___flge@ff2+3)& (0+255),7,b
  5561  0038CC  EF6A  F01C         	goto	u8701
  5562  0038D0  EF6C  F01C         	goto	u8700
  5563  0038D4                     u8701:
  5564  0038D4  EF75  F01C         	goto	l1049
  5565  0038D8                     u8700:
  5566  0038D8                     
  5567                           ; BSR set to: 0
  5568  0038D8  6D79               	negf	___flge@ff2& (0+255),b
  5569  0038DA  1F7A               	comf	(___flge@ff2+1)& (0+255),f,b
  5570  0038DC  B0D8               	btfsc	status,0,c
  5571  0038DE  2B7A               	incf	(___flge@ff2+1)& (0+255),f,b
  5572  0038E0  1F7B               	comf	(___flge@ff2+2)& (0+255),f,b
  5573  0038E2  B0D8               	btfsc	status,0,c
  5574  0038E4  2B7B               	incf	(___flge@ff2+2)& (0+255),f,b
  5575  0038E6  0E80               	movlw	128
  5576  0038E8  577C               	subfwb	(___flge@ff2+3)& (0+255),f,b
  5577  0038EA                     l1049:
  5578                           
  5579                           ; BSR set to: 0
  5580  0038EA  0E00               	movlw	0
  5581  0038EC  1B75               	xorwf	___flge@ff1& (0+255),f,b
  5582  0038EE  0E00               	movlw	0
  5583  0038F0  1B76               	xorwf	(___flge@ff1+1)& (0+255),f,b
  5584  0038F2  0E00               	movlw	0
  5585  0038F4  1B77               	xorwf	(___flge@ff1+2)& (0+255),f,b
  5586  0038F6  0E80               	movlw	128
  5587  0038F8  1B78               	xorwf	(___flge@ff1+3)& (0+255),f,b
  5588  0038FA  0E00               	movlw	0
  5589  0038FC  1B79               	xorwf	___flge@ff2& (0+255),f,b
  5590  0038FE  0E00               	movlw	0
  5591  003900  1B7A               	xorwf	(___flge@ff2+1)& (0+255),f,b
  5592  003902  0E00               	movlw	0
  5593  003904  1B7B               	xorwf	(___flge@ff2+2)& (0+255),f,b
  5594  003906  0E80               	movlw	128
  5595  003908  1B7C               	xorwf	(___flge@ff2+3)& (0+255),f,b
  5596  00390A  5179               	movf	___flge@ff2& (0+255),w,b
  5597  00390C  5D75               	subwf	___flge@ff1& (0+255),w,b
  5598  00390E  517A               	movf	(___flge@ff2+1)& (0+255),w,b
  5599  003910  5976               	subwfb	(___flge@ff1+1)& (0+255),w,b
  5600  003912  517B               	movf	(___flge@ff2+2)& (0+255),w,b
  5601  003914  5977               	subwfb	(___flge@ff1+2)& (0+255),w,b
  5602  003916  517C               	movf	(___flge@ff2+3)& (0+255),w,b
  5603  003918  5978               	subwfb	(___flge@ff1+3)& (0+255),w,b
  5604  00391A  B0D8               	btfsc	status,0,c
  5605  00391C  EF92  F01C         	goto	u8711
  5606  003920  EF94  F01C         	goto	u8710
  5607  003924                     u8711:
  5608  003924  EF97  F01C         	goto	l7482
  5609  003928                     u8710:
  5610  003928                     
  5611                           ; BSR set to: 0
  5612  003928  90D8               	bcf	status,0,c
  5613  00392A  EF98  F01C         	goto	l1054
  5614  00392E                     l7482:
  5615                           
  5616                           ; BSR set to: 0
  5617  00392E  80D8               	bsf	status,0,c
  5618  003930                     l1054:
  5619                           
  5620                           ; BSR set to: 0
  5621  003930  0012               	return		;funcret
  5622  003932                     __end_of___flge:
  5623                           	opt callstack 0
  5624                           
  5625 ;; *************** function ___fleq *****************
  5626 ;; Defined at:
  5627 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  ff1             4    5[COMRAM] int 
  5630 ;;  ff2             4    9[COMRAM] int 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;		None
  5633 ;; Return value:  Size  Location     Type
  5634 ;;		None               void
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5642 ;;      Params:         8       0       0       0       0       0       0       0       0
  5643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5644 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5645 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5646 ;;Total ram usage:       12 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; Hardware stack levels required when called:    2
  5649 ;; This function calls:
  5650 ;;		Nothing
  5651 ;; This function is called by:
  5652 ;;		_efgtoa
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text16
  5657  003EE2                     __ptext16:
  5658                           	opt callstack 0
  5659  003EE2                     ___fleq:
  5660                           	opt callstack 23
  5661  003EE2  0E00               	movlw	0
  5662  003EE4  1406               	andwf	___fleq@ff1^0,w,c
  5663  003EE6  6E0E               	movwf	??___fleq^0,c
  5664  003EE8  0E00               	movlw	0
  5665  003EEA  1407               	andwf	(___fleq@ff1+1)^0,w,c
  5666  003EEC  6E0F               	movwf	(??___fleq+1)^0,c
  5667  003EEE  0E80               	movlw	128
  5668  003EF0  1408               	andwf	(___fleq@ff1+2)^0,w,c
  5669  003EF2  6E10               	movwf	(??___fleq+2)^0,c
  5670  003EF4  0E7F               	movlw	127
  5671  003EF6  1409               	andwf	(___fleq@ff1+3)^0,w,c
  5672  003EF8  6E11               	movwf	(??___fleq+3)^0,c
  5673  003EFA  500E               	movf	??___fleq^0,w,c
  5674  003EFC  100F               	iorwf	(??___fleq+1)^0,w,c
  5675  003EFE  1010               	iorwf	(??___fleq+2)^0,w,c
  5676  003F00  1011               	iorwf	(??___fleq+3)^0,w,c
  5677  003F02  A4D8               	btfss	status,2,c
  5678  003F04  EF86  F01F         	goto	u8641
  5679  003F08  EF88  F01F         	goto	u8640
  5680  003F0C                     u8641:
  5681  003F0C  EF90  F01F         	goto	l7452
  5682  003F10                     u8640:
  5683  003F10  0E00               	movlw	0
  5684  003F12  6E06               	movwf	___fleq@ff1^0,c
  5685  003F14  0E00               	movlw	0
  5686  003F16  6E07               	movwf	(___fleq@ff1+1)^0,c
  5687  003F18  0E00               	movlw	0
  5688  003F1A  6E08               	movwf	(___fleq@ff1+2)^0,c
  5689  003F1C  0E00               	movlw	0
  5690  003F1E  6E09               	movwf	(___fleq@ff1+3)^0,c
  5691  003F20                     l7452:
  5692  003F20  0E00               	movlw	0
  5693  003F22  140A               	andwf	___fleq@ff2^0,w,c
  5694  003F24  6E0E               	movwf	??___fleq^0,c
  5695  003F26  0E00               	movlw	0
  5696  003F28  140B               	andwf	(___fleq@ff2+1)^0,w,c
  5697  003F2A  6E0F               	movwf	(??___fleq+1)^0,c
  5698  003F2C  0E80               	movlw	128
  5699  003F2E  140C               	andwf	(___fleq@ff2+2)^0,w,c
  5700  003F30  6E10               	movwf	(??___fleq+2)^0,c
  5701  003F32  0E7F               	movlw	127
  5702  003F34  140D               	andwf	(___fleq@ff2+3)^0,w,c
  5703  003F36  6E11               	movwf	(??___fleq+3)^0,c
  5704  003F38  500E               	movf	??___fleq^0,w,c
  5705  003F3A  100F               	iorwf	(??___fleq+1)^0,w,c
  5706  003F3C  1010               	iorwf	(??___fleq+2)^0,w,c
  5707  003F3E  1011               	iorwf	(??___fleq+3)^0,w,c
  5708  003F40  A4D8               	btfss	status,2,c
  5709  003F42  EFA5  F01F         	goto	u8651
  5710  003F46  EFA7  F01F         	goto	u8650
  5711  003F4A                     u8651:
  5712  003F4A  EFAF  F01F         	goto	l7456
  5713  003F4E                     u8650:
  5714  003F4E  0E00               	movlw	0
  5715  003F50  6E0A               	movwf	___fleq@ff2^0,c
  5716  003F52  0E00               	movlw	0
  5717  003F54  6E0B               	movwf	(___fleq@ff2+1)^0,c
  5718  003F56  0E00               	movlw	0
  5719  003F58  6E0C               	movwf	(___fleq@ff2+2)^0,c
  5720  003F5A  0E00               	movlw	0
  5721  003F5C  6E0D               	movwf	(___fleq@ff2+3)^0,c
  5722  003F5E                     l7456:
  5723  003F5E  500A               	movf	___fleq@ff2^0,w,c
  5724  003F60  1806               	xorwf	___fleq@ff1^0,w,c
  5725  003F62  E10F               	bnz	u8660
  5726  003F64  500B               	movf	(___fleq@ff2+1)^0,w,c
  5727  003F66  1807               	xorwf	(___fleq@ff1+1)^0,w,c
  5728  003F68  E10C               	bnz	u8660
  5729  003F6A  500C               	movf	(___fleq@ff2+2)^0,w,c
  5730  003F6C  1808               	xorwf	(___fleq@ff1+2)^0,w,c
  5731  003F6E  E109               	bnz	u8660
  5732  003F70  500D               	movf	(___fleq@ff2+3)^0,w,c
  5733  003F72  1809               	xorwf	(___fleq@ff1+3)^0,w,c
  5734  003F74  B4D8               	btfsc	status,2,c
  5735  003F76  EFBF  F01F         	goto	u8661
  5736  003F7A  EFC1  F01F         	goto	u8660
  5737  003F7E                     u8661:
  5738  003F7E  EFC4  F01F         	goto	l7460
  5739  003F82                     u8660:
  5740  003F82  90D8               	bcf	status,0,c
  5741  003F84  EFC5  F01F         	goto	l1043
  5742  003F88                     l7460:
  5743  003F88  80D8               	bsf	status,0,c
  5744  003F8A                     l1043:
  5745  003F8A  0012               	return		;funcret
  5746  003F8C                     __end_of___fleq:
  5747                           	opt callstack 0
  5748                           
  5749 ;; *************** function ___awmod *****************
  5750 ;; Defined at:
  5751 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  dividend        2    5[COMRAM] int 
  5754 ;;  divisor         2    7[COMRAM] int 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  sign            1   10[COMRAM] unsigned char 
  5757 ;;  counter         1    9[COMRAM] unsigned char 
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  2    5[COMRAM] int 
  5760 ;; Registers used:
  5761 ;;		wreg, status,2, status,0
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5767 ;;      Params:         4       0       0       0       0       0       0       0       0
  5768 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5770 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5771 ;;Total ram usage:        6 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    2
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_efgtoa
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text17
  5782  003E32                     __ptext17:
  5783                           	opt callstack 0
  5784  003E32                     ___awmod:
  5785                           	opt callstack 23
  5786  003E32  0E00               	movlw	0
  5787  003E34  6E0B               	movwf	___awmod@sign^0,c
  5788  003E36  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  5789  003E38  EF22  F01F         	goto	u8580
  5790  003E3C  EF20  F01F         	goto	u8581
  5791  003E40                     u8581:
  5792  003E40  EF28  F01F         	goto	l7420
  5793  003E44                     u8580:
  5794  003E44  6C06               	negf	___awmod@dividend^0,c
  5795  003E46  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5796  003E48  B0D8               	btfsc	status,0,c
  5797  003E4A  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5798  003E4C  0E01               	movlw	1
  5799  003E4E  6E0B               	movwf	___awmod@sign^0,c
  5800  003E50                     l7420:
  5801  003E50  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  5802  003E52  EF2F  F01F         	goto	u8590
  5803  003E56  EF2D  F01F         	goto	u8591
  5804  003E5A                     u8591:
  5805  003E5A  EF33  F01F         	goto	l7424
  5806  003E5E                     u8590:
  5807  003E5E  6C08               	negf	___awmod@divisor^0,c
  5808  003E60  1E09               	comf	(___awmod@divisor+1)^0,f,c
  5809  003E62  B0D8               	btfsc	status,0,c
  5810  003E64  2A09               	incf	(___awmod@divisor+1)^0,f,c
  5811  003E66                     l7424:
  5812  003E66  5008               	movf	___awmod@divisor^0,w,c
  5813  003E68  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  5814  003E6A  B4D8               	btfsc	status,2,c
  5815  003E6C  EF3A  F01F         	goto	u8601
  5816  003E70  EF3C  F01F         	goto	u8600
  5817  003E74                     u8601:
  5818  003E74  EF60  F01F         	goto	l7440
  5819  003E78                     u8600:
  5820  003E78  0E01               	movlw	1
  5821  003E7A  6E0A               	movwf	___awmod@counter^0,c
  5822  003E7C  EF44  F01F         	goto	l7430
  5823  003E80                     l7428:
  5824  003E80  90D8               	bcf	status,0,c
  5825  003E82  3608               	rlcf	___awmod@divisor^0,f,c
  5826  003E84  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  5827  003E86  2A0A               	incf	___awmod@counter^0,f,c
  5828  003E88                     l7430:
  5829  003E88  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  5830  003E8A  EF49  F01F         	goto	u8611
  5831  003E8E  EF4B  F01F         	goto	u8610
  5832  003E92                     u8611:
  5833  003E92  EF40  F01F         	goto	l7428
  5834  003E96                     u8610:
  5835  003E96                     l7432:
  5836  003E96  5008               	movf	___awmod@divisor^0,w,c
  5837  003E98  5C06               	subwf	___awmod@dividend^0,w,c
  5838  003E9A  5009               	movf	(___awmod@divisor+1)^0,w,c
  5839  003E9C  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  5840  003E9E  A0D8               	btfss	status,0,c
  5841  003EA0  EF54  F01F         	goto	u8621
  5842  003EA4  EF56  F01F         	goto	u8620
  5843  003EA8                     u8621:
  5844  003EA8  EF5A  F01F         	goto	l7436
  5845  003EAC                     u8620:
  5846  003EAC  5008               	movf	___awmod@divisor^0,w,c
  5847  003EAE  5E06               	subwf	___awmod@dividend^0,f,c
  5848  003EB0  5009               	movf	(___awmod@divisor+1)^0,w,c
  5849  003EB2  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  5850  003EB4                     l7436:
  5851  003EB4  90D8               	bcf	status,0,c
  5852  003EB6  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  5853  003EB8  3208               	rrcf	___awmod@divisor^0,f,c
  5854  003EBA  2E0A               	decfsz	___awmod@counter^0,f,c
  5855  003EBC  EF4B  F01F         	goto	l7432
  5856  003EC0                     l7440:
  5857  003EC0  500B               	movf	___awmod@sign^0,w,c
  5858  003EC2  B4D8               	btfsc	status,2,c
  5859  003EC4  EF66  F01F         	goto	u8631
  5860  003EC8  EF68  F01F         	goto	u8630
  5861  003ECC                     u8631:
  5862  003ECC  EF6C  F01F         	goto	l7444
  5863  003ED0                     u8630:
  5864  003ED0  6C06               	negf	___awmod@dividend^0,c
  5865  003ED2  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5866  003ED4  B0D8               	btfsc	status,0,c
  5867  003ED6  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5868  003ED8                     l7444:
  5869  003ED8  C006  F006         	movff	___awmod@dividend,?___awmod
  5870  003EDC  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  5871  003EE0  0012               	return		;funcret
  5872  003EE2                     __end_of___awmod:
  5873                           	opt callstack 0
  5874                           
  5875 ;; *************** function ___awdiv *****************
  5876 ;; Defined at:
  5877 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  dividend        2    5[COMRAM] int 
  5880 ;;  divisor         2    7[COMRAM] int 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  quotient        2   11[COMRAM] int 
  5883 ;;  sign            1   10[COMRAM] unsigned char 
  5884 ;;  counter         1    9[COMRAM] unsigned char 
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  2    5[COMRAM] int 
  5887 ;; Registers used:
  5888 ;;		wreg, status,2, status,0
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5894 ;;      Params:         4       0       0       0       0       0       0       0       0
  5895 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5897 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5898 ;;Total ram usage:        8 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; Hardware stack levels required when called:    2
  5901 ;; This function calls:
  5902 ;;		Nothing
  5903 ;; This function is called by:
  5904 ;;		_efgtoa
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text18
  5909  003CAC                     __ptext18:
  5910                           	opt callstack 0
  5911  003CAC                     ___awdiv:
  5912                           	opt callstack 23
  5913  003CAC  0E00               	movlw	0
  5914  003CAE  6E0B               	movwf	___awdiv@sign^0,c
  5915  003CB0  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  5916  003CB2  EF5F  F01E         	goto	u8520
  5917  003CB6  EF5D  F01E         	goto	u8521
  5918  003CBA                     u8521:
  5919  003CBA  EF65  F01E         	goto	l7376
  5920  003CBE                     u8520:
  5921  003CBE  6C08               	negf	___awdiv@divisor^0,c
  5922  003CC0  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  5923  003CC2  B0D8               	btfsc	status,0,c
  5924  003CC4  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  5925  003CC6  0E01               	movlw	1
  5926  003CC8  6E0B               	movwf	___awdiv@sign^0,c
  5927  003CCA                     l7376:
  5928  003CCA  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  5929  003CCC  EF6C  F01E         	goto	u8530
  5930  003CD0  EF6A  F01E         	goto	u8531
  5931  003CD4                     u8531:
  5932  003CD4  EF72  F01E         	goto	l7382
  5933  003CD8                     u8530:
  5934  003CD8  6C06               	negf	___awdiv@dividend^0,c
  5935  003CDA  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  5936  003CDC  B0D8               	btfsc	status,0,c
  5937  003CDE  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  5938  003CE0  0E01               	movlw	1
  5939  003CE2  1A0B               	xorwf	___awdiv@sign^0,f,c
  5940  003CE4                     l7382:
  5941  003CE4  0E00               	movlw	0
  5942  003CE6  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  5943  003CE8  0E00               	movlw	0
  5944  003CEA  6E0C               	movwf	___awdiv@quotient^0,c
  5945  003CEC  5008               	movf	___awdiv@divisor^0,w,c
  5946  003CEE  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  5947  003CF0  B4D8               	btfsc	status,2,c
  5948  003CF2  EF7D  F01E         	goto	u8541
  5949  003CF6  EF7F  F01E         	goto	u8540
  5950  003CFA                     u8541:
  5951  003CFA  EFA7  F01E         	goto	l7404
  5952  003CFE                     u8540:
  5953  003CFE  0E01               	movlw	1
  5954  003D00  6E0A               	movwf	___awdiv@counter^0,c
  5955  003D02  EF87  F01E         	goto	l7390
  5956  003D06                     l7388:
  5957  003D06  90D8               	bcf	status,0,c
  5958  003D08  3608               	rlcf	___awdiv@divisor^0,f,c
  5959  003D0A  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  5960  003D0C  2A0A               	incf	___awdiv@counter^0,f,c
  5961  003D0E                     l7390:
  5962  003D0E  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  5963  003D10  EF8C  F01E         	goto	u8551
  5964  003D14  EF8E  F01E         	goto	u8550
  5965  003D18                     u8551:
  5966  003D18  EF83  F01E         	goto	l7388
  5967  003D1C                     u8550:
  5968  003D1C                     l7392:
  5969  003D1C  90D8               	bcf	status,0,c
  5970  003D1E  360C               	rlcf	___awdiv@quotient^0,f,c
  5971  003D20  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  5972  003D22  5008               	movf	___awdiv@divisor^0,w,c
  5973  003D24  5C06               	subwf	___awdiv@dividend^0,w,c
  5974  003D26  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5975  003D28  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  5976  003D2A  A0D8               	btfss	status,0,c
  5977  003D2C  EF9A  F01E         	goto	u8561
  5978  003D30  EF9C  F01E         	goto	u8560
  5979  003D34                     u8561:
  5980  003D34  EFA1  F01E         	goto	l7400
  5981  003D38                     u8560:
  5982  003D38  5008               	movf	___awdiv@divisor^0,w,c
  5983  003D3A  5E06               	subwf	___awdiv@dividend^0,f,c
  5984  003D3C  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5985  003D3E  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  5986  003D40  800C               	bsf	___awdiv@quotient^0,0,c
  5987  003D42                     l7400:
  5988  003D42  90D8               	bcf	status,0,c
  5989  003D44  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  5990  003D46  3208               	rrcf	___awdiv@divisor^0,f,c
  5991  003D48  2E0A               	decfsz	___awdiv@counter^0,f,c
  5992  003D4A  EF8E  F01E         	goto	l7392
  5993  003D4E                     l7404:
  5994  003D4E  500B               	movf	___awdiv@sign^0,w,c
  5995  003D50  B4D8               	btfsc	status,2,c
  5996  003D52  EFAD  F01E         	goto	u8571
  5997  003D56  EFAF  F01E         	goto	u8570
  5998  003D5A                     u8571:
  5999  003D5A  EFB3  F01E         	goto	l7408
  6000  003D5E                     u8570:
  6001  003D5E  6C0C               	negf	___awdiv@quotient^0,c
  6002  003D60  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  6003  003D62  B0D8               	btfsc	status,0,c
  6004  003D64  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  6005  003D66                     l7408:
  6006  003D66  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  6007  003D6A  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  6008  003D6E  0012               	return		;funcret
  6009  003D70                     __end_of___awdiv:
  6010                           	opt callstack 0
  6011                           
  6012 ;; *************** function _dtoa *****************
  6013 ;; Defined at:
  6014 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  6017 ;;		 -> sprintf@f(6), 
  6018 ;;  d               8   34[COMRAM] long long 
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;  n               8   58[COMRAM] long long 
  6021 ;;  i               2   66[COMRAM] int 
  6022 ;;  s               2   56[COMRAM] int 
  6023 ;;  w               2   54[COMRAM] int 
  6024 ;;  p               2   52[COMRAM] int 
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  2   32[COMRAM] int 
  6027 ;; Registers used:
  6028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6034 ;;      Params:        10       0       0       0       0       0       0       0       0
  6035 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6036 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6037 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6038 ;;Total ram usage:       36 bytes
  6039 ;; Hardware stack levels used:    1
  6040 ;; Hardware stack levels required when called:    6
  6041 ;; This function calls:
  6042 ;;		___aodiv
  6043 ;;		___aomod
  6044 ;;		_abs
  6045 ;;		_pad
  6046 ;; This function is called by:
  6047 ;;		_vfpfcnvrt
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           	psect	text19
  6052  00265A                     __ptext19:
  6053                           	opt callstack 0
  6054  00265A                     _dtoa:
  6055                           	opt callstack 20
  6056  00265A                     
  6057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6058  00265A  C023  F03B         	movff	dtoa@d,dtoa@n
  6059  00265E  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
  6060  002662  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
  6061  002666  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
  6062  00266A  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
  6063  00266E  C028  F040         	movff	dtoa@d+5,dtoa@n+5
  6064  002672  C029  F041         	movff	dtoa@d+6,dtoa@n+6
  6065  002676  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
  6066  00267A                     
  6067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6068  00267A  BE42               	btfsc	(dtoa@n+7)^0,7,c
  6069  00267C  EF42  F013         	goto	u8821
  6070  002680  EF45  F013         	goto	u8820
  6071  002684                     u8821:
  6072  002684  0E01               	movlw	1
  6073  002686  EF46  F013         	goto	u8830
  6074  00268A                     u8820:
  6075  00268A  0E00               	movlw	0
  6076  00268C                     u8830:
  6077  00268C  6E39               	movwf	dtoa@s^0,c
  6078  00268E  6A3A               	clrf	(dtoa@s+1)^0,c
  6079                           
  6080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6081  002690  5039               	movf	dtoa@s^0,w,c
  6082  002692  103A               	iorwf	(dtoa@s+1)^0,w,c
  6083  002694  B4D8               	btfsc	status,2,c
  6084  002696  EF4F  F013         	goto	u8841
  6085  00269A  EF51  F013         	goto	u8840
  6086  00269E                     u8841:
  6087  00269E  EF61  F013         	goto	l7556
  6088  0026A2                     u8840:
  6089  0026A2                     
  6090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6091  0026A2  1E42               	comf	(dtoa@n+7)^0,f,c
  6092  0026A4  1E41               	comf	(dtoa@n+6)^0,f,c
  6093  0026A6  1E40               	comf	(dtoa@n+5)^0,f,c
  6094  0026A8  1E3F               	comf	(dtoa@n+4)^0,f,c
  6095  0026AA  1E3E               	comf	(dtoa@n+3)^0,f,c
  6096  0026AC  1E3D               	comf	(dtoa@n+2)^0,f,c
  6097  0026AE  1E3C               	comf	(dtoa@n+1)^0,f,c
  6098  0026B0  6C3B               	negf	dtoa@n^0,c
  6099  0026B2  0E00               	movlw	0
  6100  0026B4  223C               	addwfc	(dtoa@n+1)^0,f,c
  6101  0026B6  223D               	addwfc	(dtoa@n+2)^0,f,c
  6102  0026B8  223E               	addwfc	(dtoa@n+3)^0,f,c
  6103  0026BA  223F               	addwfc	(dtoa@n+4)^0,f,c
  6104  0026BC  2240               	addwfc	(dtoa@n+5)^0,f,c
  6105  0026BE  2241               	addwfc	(dtoa@n+6)^0,f,c
  6106  0026C0  2242               	addwfc	(dtoa@n+7)^0,f,c
  6107  0026C2                     l7556:
  6108                           
  6109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6110  0026C2  BE56               	btfsc	(_prec+1)^0,7,c
  6111  0026C4  EF66  F013         	goto	u8851
  6112  0026C8  EF68  F013         	goto	u8850
  6113  0026CC                     u8851:
  6114  0026CC  EF69  F013         	goto	l7560
  6115  0026D0                     u8850:
  6116  0026D0                     
  6117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6118  0026D0  9257               	bcf	_flags^0,1,c
  6119  0026D2                     l7560:
  6120                           
  6121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6122  0026D2  BE56               	btfsc	(_prec+1)^0,7,c
  6123  0026D4  EF76  F013         	goto	u8860
  6124  0026D8  5056               	movf	(_prec+1)^0,w,c
  6125  0026DA  E106               	bnz	u8861
  6126  0026DC  0455               	decf	_prec^0,w,c
  6127  0026DE  B0D8               	btfsc	status,0,c
  6128  0026E0  EF74  F013         	goto	u8861
  6129  0026E4  EF76  F013         	goto	u8860
  6130  0026E8                     u8861:
  6131  0026E8  EF7C  F013         	goto	l636
  6132  0026EC                     u8860:
  6133  0026EC  0E00               	movlw	0
  6134  0026EE  6E36               	movwf	(dtoa@p+1)^0,c
  6135  0026F0  0E01               	movlw	1
  6136  0026F2  6E35               	movwf	dtoa@p^0,c
  6137  0026F4  EF80  F013         	goto	l638
  6138  0026F8                     l636:
  6139  0026F8  C055  F035         	movff	_prec,dtoa@p
  6140  0026FC  C056  F036         	movff	_prec+1,dtoa@p+1
  6141  002700                     l638:
  6142                           
  6143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6144  002700  C132  F037         	movff	_width,dtoa@w
  6145  002704  C133  F038         	movff	_width+1,dtoa@w+1
  6146  002708                     
  6147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6148  002708  5039               	movf	dtoa@s^0,w,c
  6149  00270A  103A               	iorwf	(dtoa@s+1)^0,w,c
  6150  00270C  A4D8               	btfss	status,2,c
  6151  00270E  EF8B  F013         	goto	u8871
  6152  002712  EF8D  F013         	goto	u8870
  6153  002716                     u8871:
  6154  002716  EF94  F013         	goto	l7568
  6155  00271A                     u8870:
  6156  00271A  A457               	btfss	_flags^0,2,c
  6157  00271C  EF92  F013         	goto	u8881
  6158  002720  EF94  F013         	goto	u8880
  6159  002724                     u8881:
  6160  002724  EF97  F013         	goto	l7570
  6161  002728                     u8880:
  6162  002728                     l7568:
  6163                           
  6164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6165  002728  0637               	decf	dtoa@w^0,f,c
  6166  00272A  A0D8               	btfss	status,0,c
  6167  00272C  0638               	decf	(dtoa@w+1)^0,f,c
  6168  00272E                     l7570:
  6169                           
  6170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6171  00272E  0E00               	movlw	0
  6172  002730  6E44               	movwf	(dtoa@i+1)^0,c
  6173  002732  0E4F               	movlw	79
  6174  002734  6E43               	movwf	dtoa@i^0,c
  6175  002736                     
  6176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6177  002736  0E00               	movlw	0
  6178  002738  0101               	movlb	1	; () banked
  6179  00273A  6F8C               	movwf	(_dbuf+79)& (0+255),b
  6180                           
  6181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6182  00273C  EF1C  F014         	goto	l7584
  6183  002740                     l7574:
  6184                           
  6185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6186  002740  0643               	decf	dtoa@i^0,f,c
  6187  002742  A0D8               	btfss	status,0,c
  6188  002744  0644               	decf	(dtoa@i+1)^0,f,c
  6189  002746                     
  6190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6191  002746  0E3D               	movlw	low _dbuf
  6192  002748  2443               	addwf	dtoa@i^0,w,c
  6193  00274A  6ED9               	movwf	fsr2l,c
  6194  00274C  0E01               	movlw	high _dbuf
  6195  00274E  2044               	addwfc	(dtoa@i+1)^0,w,c
  6196  002750  6EDA               	movwf	fsr2h,c
  6197  002752  C03B  F006         	movff	dtoa@n,___aomod@dividend
  6198  002756  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
  6199  00275A  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
  6200  00275E  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
  6201  002762  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  6202  002766  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  6203  00276A  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  6204  00276E  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  6205  002772  0E0A               	movlw	10
  6206  002774  6E0E               	movwf	___aomod@divisor^0,c
  6207  002776  0E00               	movlw	0
  6208  002778  6E0F               	movwf	(___aomod@divisor+1)^0,c
  6209  00277A  0E00               	movlw	0
  6210  00277C  6E10               	movwf	(___aomod@divisor+2)^0,c
  6211  00277E  0E00               	movlw	0
  6212  002780  6E11               	movwf	(___aomod@divisor+3)^0,c
  6213  002782  0E00               	movlw	0
  6214  002784  6E12               	movwf	(___aomod@divisor+4)^0,c
  6215  002786  0E00               	movlw	0
  6216  002788  6E13               	movwf	(___aomod@divisor+5)^0,c
  6217  00278A  0E00               	movlw	0
  6218  00278C  6E14               	movwf	(___aomod@divisor+6)^0,c
  6219  00278E  0E00               	movlw	0
  6220  002790  6E15               	movwf	(___aomod@divisor+7)^0,c
  6221  002792  ECA9  F019         	call	___aomod	;wreg free
  6222  002796  C006  F02B         	movff	?___aomod,??_dtoa
  6223  00279A  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  6224  00279E  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  6225  0027A2  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  6226  0027A6  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  6227  0027AA  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  6228  0027AE  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  6229  0027B2  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  6230  0027B6  C02B  F018         	movff	??_dtoa,abs@a
  6231  0027BA  C02D  F019         	movff	??_dtoa+2,abs@a+1
  6232  0027BE  EC5A  F023         	call	_abs	;wreg free
  6233  0027C2  5018               	movf	?_abs^0,w,c
  6234  0027C4  0F30               	addlw	48
  6235  0027C6  6EDF               	movwf	indf2,c
  6236  0027C8                     
  6237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6238  0027C8  0635               	decf	dtoa@p^0,f,c
  6239  0027CA  A0D8               	btfss	status,0,c
  6240  0027CC  0636               	decf	(dtoa@p+1)^0,f,c
  6241  0027CE                     
  6242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6243  0027CE  0637               	decf	dtoa@w^0,f,c
  6244  0027D0  A0D8               	btfss	status,0,c
  6245  0027D2  0638               	decf	(dtoa@w+1)^0,f,c
  6246  0027D4                     
  6247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6248  0027D4  C03B  F006         	movff	dtoa@n,___aodiv@dividend
  6249  0027D8  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  6250  0027DC  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  6251  0027E0  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  6252  0027E4  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  6253  0027E8  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  6254  0027EC  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  6255  0027F0  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  6256  0027F4  0E0A               	movlw	10
  6257  0027F6  6E0E               	movwf	___aodiv@divisor^0,c
  6258  0027F8  0E00               	movlw	0
  6259  0027FA  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  6260  0027FC  0E00               	movlw	0
  6261  0027FE  6E10               	movwf	(___aodiv@divisor+2)^0,c
  6262  002800  0E00               	movlw	0
  6263  002802  6E11               	movwf	(___aodiv@divisor+3)^0,c
  6264  002804  0E00               	movlw	0
  6265  002806  6E12               	movwf	(___aodiv@divisor+4)^0,c
  6266  002808  0E00               	movlw	0
  6267  00280A  6E13               	movwf	(___aodiv@divisor+5)^0,c
  6268  00280C  0E00               	movlw	0
  6269  00280E  6E14               	movwf	(___aodiv@divisor+6)^0,c
  6270  002810  0E00               	movlw	0
  6271  002812  6E15               	movwf	(___aodiv@divisor+7)^0,c
  6272  002814  EC27  F018         	call	___aodiv	;wreg free
  6273  002818  C006  F03B         	movff	?___aodiv,dtoa@n
  6274  00281C  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
  6275  002820  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
  6276  002824  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
  6277  002828  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
  6278  00282C  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
  6279  002830  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
  6280  002834  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
  6281  002838                     l7584:
  6282                           
  6283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6284  002838  BE44               	btfsc	(dtoa@i+1)^0,7,c
  6285  00283A  EF27  F014         	goto	u8891
  6286  00283E  5044               	movf	(dtoa@i+1)^0,w,c
  6287  002840  E108               	bnz	u8890
  6288  002842  0443               	decf	dtoa@i^0,w,c
  6289  002844  A0D8               	btfss	status,0,c
  6290  002846  EF27  F014         	goto	u8891
  6291  00284A  EF29  F014         	goto	u8890
  6292  00284E                     u8891:
  6293  00284E  EF59  F014         	goto	l7594
  6294  002852                     u8890:
  6295  002852  503B               	movf	dtoa@n^0,w,c
  6296  002854  103C               	iorwf	(dtoa@n+1)^0,w,c
  6297  002856  103D               	iorwf	(dtoa@n+2)^0,w,c
  6298  002858  103E               	iorwf	(dtoa@n+3)^0,w,c
  6299  00285A  103F               	iorwf	(dtoa@n+4)^0,w,c
  6300  00285C  1040               	iorwf	(dtoa@n+5)^0,w,c
  6301  00285E  1041               	iorwf	(dtoa@n+6)^0,w,c
  6302  002860  1042               	iorwf	(dtoa@n+7)^0,w,c
  6303  002862  A4D8               	btfss	status,2,c
  6304  002864  EF36  F014         	goto	u8901
  6305  002868  EF38  F014         	goto	u8900
  6306  00286C                     u8901:
  6307  00286C  EFA0  F013         	goto	l7574
  6308  002870                     u8900:
  6309  002870  BE36               	btfsc	(dtoa@p+1)^0,7,c
  6310  002872  EF45  F014         	goto	u8910
  6311  002876  5036               	movf	(dtoa@p+1)^0,w,c
  6312  002878  E106               	bnz	u8911
  6313  00287A  0435               	decf	dtoa@p^0,w,c
  6314  00287C  B0D8               	btfsc	status,0,c
  6315  00287E  EF43  F014         	goto	u8911
  6316  002882  EF45  F014         	goto	u8910
  6317  002886                     u8911:
  6318  002886  EFA0  F013         	goto	l7574
  6319  00288A                     u8910:
  6320  00288A  BE38               	btfsc	(dtoa@w+1)^0,7,c
  6321  00288C  EF50  F014         	goto	u8921
  6322  002890  5038               	movf	(dtoa@w+1)^0,w,c
  6323  002892  E108               	bnz	u8920
  6324  002894  0437               	decf	dtoa@w^0,w,c
  6325  002896  A0D8               	btfss	status,0,c
  6326  002898  EF50  F014         	goto	u8921
  6327  00289C  EF52  F014         	goto	u8920
  6328  0028A0                     u8921:
  6329  0028A0  EF59  F014         	goto	l7594
  6330  0028A4                     u8920:
  6331  0028A4  B257               	btfsc	_flags^0,1,c
  6332  0028A6  EF57  F014         	goto	u8931
  6333  0028AA  EF59  F014         	goto	u8930
  6334  0028AE                     u8931:
  6335  0028AE  EFA0  F013         	goto	l7574
  6336  0028B2                     u8930:
  6337  0028B2                     l7594:
  6338                           
  6339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6340  0028B2  5039               	movf	dtoa@s^0,w,c
  6341  0028B4  103A               	iorwf	(dtoa@s+1)^0,w,c
  6342  0028B6  A4D8               	btfss	status,2,c
  6343  0028B8  EF60  F014         	goto	u8941
  6344  0028BC  EF62  F014         	goto	u8940
  6345  0028C0                     u8941:
  6346  0028C0  EF69  F014         	goto	l7598
  6347  0028C4                     u8940:
  6348  0028C4  A457               	btfss	_flags^0,2,c
  6349  0028C6  EF67  F014         	goto	u8951
  6350  0028CA  EF69  F014         	goto	u8950
  6351  0028CE                     u8951:
  6352  0028CE  EF87  F014         	goto	l7608
  6353  0028D2                     u8950:
  6354  0028D2                     l7598:
  6355                           
  6356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6357  0028D2  0643               	decf	dtoa@i^0,f,c
  6358  0028D4  A0D8               	btfss	status,0,c
  6359  0028D6  0644               	decf	(dtoa@i+1)^0,f,c
  6360  0028D8                     
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6362  0028D8  5039               	movf	dtoa@s^0,w,c
  6363  0028DA  103A               	iorwf	(dtoa@s+1)^0,w,c
  6364  0028DC  A4D8               	btfss	status,2,c
  6365  0028DE  EF73  F014         	goto	u8961
  6366  0028E2  EF75  F014         	goto	u8960
  6367  0028E6                     u8961:
  6368  0028E6  EF7B  F014         	goto	l7604
  6369  0028EA                     u8960:
  6370  0028EA  0E00               	movlw	0
  6371  0028EC  6E34               	movwf	(_dtoa$799+1)^0,c
  6372  0028EE  0E2B               	movlw	43
  6373  0028F0  6E33               	movwf	_dtoa$799^0,c
  6374  0028F2  EF7F  F014         	goto	l7606
  6375  0028F6                     l7604:
  6376  0028F6  0E00               	movlw	0
  6377  0028F8  6E34               	movwf	(_dtoa$799+1)^0,c
  6378  0028FA  0E2D               	movlw	45
  6379  0028FC  6E33               	movwf	_dtoa$799^0,c
  6380  0028FE                     l7606:
  6381  0028FE  0E3D               	movlw	low _dbuf
  6382  002900  2443               	addwf	dtoa@i^0,w,c
  6383  002902  6ED9               	movwf	fsr2l,c
  6384  002904  0E01               	movlw	high _dbuf
  6385  002906  2044               	addwfc	(dtoa@i+1)^0,w,c
  6386  002908  6EDA               	movwf	fsr2h,c
  6387  00290A  C033  FFDF         	movff	_dtoa$799,indf2
  6388  00290E                     l7608:
  6389                           
  6390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6391  00290E  C021  F016         	movff	dtoa@fp,pad@fp
  6392  002912  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  6393  002916  0E3D               	movlw	low _dbuf
  6394  002918  2443               	addwf	dtoa@i^0,w,c
  6395  00291A  6E18               	movwf	pad@buf^0,c
  6396  00291C  0E01               	movlw	high _dbuf
  6397  00291E  2044               	addwfc	(dtoa@i+1)^0,w,c
  6398  002920  6E19               	movwf	(pad@buf+1)^0,c
  6399  002922  C037  F01A         	movff	dtoa@w,pad@p
  6400  002926  C038  F01B         	movff	dtoa@w+1,pad@p+1
  6401  00292A  ECB8  F01E         	call	_pad	;wreg free
  6402  00292E  C016  F021         	movff	?_pad,?_dtoa
  6403  002932  C017  F022         	movff	?_pad+1,?_dtoa+1
  6404  002936  0012               	return		;funcret
  6405  002938                     __end_of_dtoa:
  6406                           	opt callstack 0
  6407                           
  6408 ;; *************** function _pad *****************
  6409 ;; Defined at:
  6410 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  6413 ;;		 -> sprintf@f(6), 
  6414 ;;  buf             2   23[COMRAM] PTR unsigned char 
  6415 ;;		 -> dbuf(80), 
  6416 ;;  p               2   25[COMRAM] int 
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  w               2   30[COMRAM] int 
  6419 ;;  i               2   28[COMRAM] int 
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  2   21[COMRAM] int 
  6422 ;; Registers used:
  6423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6429 ;;      Params:         6       0       0       0       0       0       0       0       0
  6430 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6431 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6432 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6433 ;;Total ram usage:       11 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    5
  6436 ;; This function calls:
  6437 ;;		_fputc
  6438 ;;		_fputs
  6439 ;;		_strlen
  6440 ;; This function is called by:
  6441 ;;		_dtoa
  6442 ;;		_efgtoa
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text20
  6447  003D70                     __ptext20:
  6448                           	opt callstack 0
  6449  003D70                     _pad:
  6450                           	opt callstack 20
  6451  003D70                     
  6452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6453  003D70  A057               	btfss	_flags^0,0,c
  6454  003D72  EFBD  F01E         	goto	u7681
  6455  003D76  EFBF  F01E         	goto	u7680
  6456  003D7A                     u7681:
  6457  003D7A  EFC9  F01E         	goto	l6918
  6458  003D7E                     u7680:
  6459  003D7E                     
  6460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6461  003D7E  C018  F00F         	movff	pad@buf,fputs@s
  6462  003D82  C019  F010         	movff	pad@buf+1,fputs@s+1
  6463  003D86  C016  F011         	movff	pad@fp,fputs@fp
  6464  003D8A  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6465  003D8E  EC38  F023         	call	_fputs	;wreg free
  6466  003D92                     l6918:
  6467                           
  6468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6469  003D92  BE1B               	btfsc	(pad@p+1)^0,7,c
  6470  003D94  EFCE  F01E         	goto	u7691
  6471  003D98  EFD0  F01E         	goto	u7690
  6472  003D9C                     u7691:
  6473  003D9C  EFD6  F01E         	goto	l6922
  6474  003DA0                     u7690:
  6475  003DA0  C01A  F01F         	movff	pad@p,pad@w
  6476  003DA4  C01B  F020         	movff	pad@p+1,pad@w+1
  6477  003DA8  EFDA  F01E         	goto	l625
  6478  003DAC                     l6922:
  6479  003DAC  0E00               	movlw	0
  6480  003DAE  6E20               	movwf	(pad@w+1)^0,c
  6481  003DB0  0E00               	movlw	0
  6482  003DB2  6E1F               	movwf	pad@w^0,c
  6483  003DB4                     l625:
  6484                           
  6485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6486  003DB4  0E00               	movlw	0
  6487  003DB6  6E1E               	movwf	(pad@i+1)^0,c
  6488  003DB8  0E00               	movlw	0
  6489  003DBA  6E1D               	movwf	pad@i^0,c
  6490                           
  6491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6492  003DBC  EFEC  F01E         	goto	l6928
  6493  003DC0                     l6924:
  6494                           
  6495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6496  003DC0  0E00               	movlw	0
  6497  003DC2  6E07               	movwf	(fputc@c+1)^0,c
  6498  003DC4  0E20               	movlw	32
  6499  003DC6  6E06               	movwf	fputc@c^0,c
  6500  003DC8  C016  F008         	movff	pad@fp,fputc@fp
  6501  003DCC  C017  F009         	movff	pad@fp+1,fputc@fp+1
  6502  003DD0  ECF1  F01D         	call	_fputc	;wreg free
  6503  003DD4                     
  6504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6505  003DD4  4A1D               	infsnz	pad@i^0,f,c
  6506  003DD6  2A1E               	incf	(pad@i+1)^0,f,c
  6507  003DD8                     l6928:
  6508                           
  6509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6510  003DD8  501F               	movf	pad@w^0,w,c
  6511  003DDA  5C1D               	subwf	pad@i^0,w,c
  6512  003DDC  501E               	movf	(pad@i+1)^0,w,c
  6513  003DDE  0A80               	xorlw	128
  6514  003DE0  6E1C               	movwf	??_pad^0,c
  6515  003DE2  5020               	movf	(pad@w+1)^0,w,c
  6516  003DE4  0A80               	xorlw	128
  6517  003DE6  581C               	subwfb	??_pad^0,w,c
  6518  003DE8  A0D8               	btfss	status,0,c
  6519  003DEA  EFF9  F01E         	goto	u7701
  6520  003DEE  EFFB  F01E         	goto	u7700
  6521  003DF2                     u7701:
  6522  003DF2  EFE0  F01E         	goto	l6924
  6523  003DF6                     u7700:
  6524  003DF6                     
  6525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6526  003DF6  B057               	btfsc	_flags^0,0,c
  6527  003DF8  EF00  F01F         	goto	u7711
  6528  003DFC  EF02  F01F         	goto	u7710
  6529  003E00                     u7711:
  6530  003E00  EF0C  F01F         	goto	l6932
  6531  003E04                     u7710:
  6532  003E04                     
  6533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6534  003E04  C018  F00F         	movff	pad@buf,fputs@s
  6535  003E08  C019  F010         	movff	pad@buf+1,fputs@s+1
  6536  003E0C  C016  F011         	movff	pad@fp,fputs@fp
  6537  003E10  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6538  003E14  EC38  F023         	call	_fputs	;wreg free
  6539  003E18                     l6932:
  6540                           
  6541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6542  003E18  C018  F006         	movff	pad@buf,strlen@s
  6543  003E1C  C019  F007         	movff	pad@buf+1,strlen@s+1
  6544  003E20  ECE9  F023         	call	_strlen	;wreg free
  6545  003E24  501F               	movf	pad@w^0,w,c
  6546  003E26  2406               	addwf	?_strlen^0,w,c
  6547  003E28  6E16               	movwf	?_pad^0,c
  6548  003E2A  5020               	movf	(pad@w+1)^0,w,c
  6549  003E2C  2007               	addwfc	(?_strlen+1)^0,w,c
  6550  003E2E  6E17               	movwf	(?_pad+1)^0,c
  6551  003E30  0012               	return		;funcret
  6552  003E32                     __end_of_pad:
  6553                           	opt callstack 0
  6554                           
  6555 ;; *************** function _strlen *****************
  6556 ;; Defined at:
  6557 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  s               2    5[COMRAM] PTR const unsigned char 
  6560 ;;		 -> dbuf(80), 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;  a               2    7[COMRAM] PTR const unsigned char 
  6563 ;;		 -> dbuf(80), 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  2    5[COMRAM] unsigned int 
  6566 ;; Registers used:
  6567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6573 ;;      Params:         2       0       0       0       0       0       0       0       0
  6574 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6576 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6577 ;;Total ram usage:        4 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; Hardware stack levels required when called:    2
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_pad
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text21
  6588  0047D2                     __ptext21:
  6589                           	opt callstack 0
  6590  0047D2                     _strlen:
  6591                           	opt callstack 22
  6592  0047D2  C006  F008         	movff	strlen@s,strlen@a
  6593  0047D6  C007  F009         	movff	strlen@s+1,strlen@a+1
  6594  0047DA  EFF1  F023         	goto	l6702
  6595  0047DE                     l6700:
  6596  0047DE  4A06               	infsnz	strlen@s^0,f,c
  6597  0047E0  2A07               	incf	(strlen@s+1)^0,f,c
  6598  0047E2                     l6702:
  6599  0047E2  C006  FFD9         	movff	strlen@s,fsr2l
  6600  0047E6  C007  FFDA         	movff	strlen@s+1,fsr2h
  6601  0047EA  50DF               	movf	indf2,w,c
  6602  0047EC  A4D8               	btfss	status,2,c
  6603  0047EE  EFFB  F023         	goto	u7261
  6604  0047F2  EFFD  F023         	goto	u7260
  6605  0047F6                     u7261:
  6606  0047F6  EFEF  F023         	goto	l6700
  6607  0047FA                     u7260:
  6608  0047FA  5008               	movf	strlen@a^0,w,c
  6609  0047FC  5C06               	subwf	strlen@s^0,w,c
  6610  0047FE  6E06               	movwf	?_strlen^0,c
  6611  004800  5009               	movf	(strlen@a+1)^0,w,c
  6612  004802  5807               	subwfb	(strlen@s+1)^0,w,c
  6613  004804  6E07               	movwf	(?_strlen+1)^0,c
  6614  004806  0012               	return		;funcret
  6615  004808                     __end_of_strlen:
  6616                           	opt callstack 0
  6617                           
  6618 ;; *************** function _fputs *****************
  6619 ;; Defined at:
  6620 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;  s               2   14[COMRAM] PTR const unsigned char 
  6623 ;;		 -> dbuf(80), 
  6624 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6625 ;;		 -> sprintf@f(6), 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  i               2   19[COMRAM] int 
  6628 ;;  c               1   18[COMRAM] unsigned char 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  2   14[COMRAM] int 
  6631 ;; Registers used:
  6632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6638 ;;      Params:         4       0       0       0       0       0       0       0       0
  6639 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6641 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6642 ;;Total ram usage:        7 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    4
  6645 ;; This function calls:
  6646 ;;		_fputc
  6647 ;; This function is called by:
  6648 ;;		_pad
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text22
  6653  004670                     __ptext22:
  6654                           	opt callstack 0
  6655  004670                     _fputs:
  6656                           	opt callstack 20
  6657  004670  0E00               	movlw	0
  6658  004672  6E15               	movwf	(fputs@i+1)^0,c
  6659  004674  0E00               	movlw	0
  6660  004676  6E14               	movwf	fputs@i^0,c
  6661  004678  EF49  F023         	goto	l6696
  6662  00467C                     l6692:
  6663  00467C  C013  F006         	movff	fputs@c,fputc@c
  6664  004680  6A07               	clrf	(fputc@c+1)^0,c
  6665  004682  C011  F008         	movff	fputs@fp,fputc@fp
  6666  004686  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  6667  00468A  ECF1  F01D         	call	_fputc	;wreg free
  6668  00468E  4A14               	infsnz	fputs@i^0,f,c
  6669  004690  2A15               	incf	(fputs@i+1)^0,f,c
  6670  004692                     l6696:
  6671  004692  5014               	movf	fputs@i^0,w,c
  6672  004694  240F               	addwf	fputs@s^0,w,c
  6673  004696  6ED9               	movwf	fsr2l,c
  6674  004698  5015               	movf	(fputs@i+1)^0,w,c
  6675  00469A  2010               	addwfc	(fputs@s+1)^0,w,c
  6676  00469C  6EDA               	movwf	fsr2h,c
  6677  00469E  50DF               	movf	indf2,w,c
  6678  0046A0  6E13               	movwf	fputs@c^0,c
  6679  0046A2  5013               	movf	fputs@c^0,w,c
  6680  0046A4  A4D8               	btfss	status,2,c
  6681  0046A6  EF57  F023         	goto	u7251
  6682  0046AA  EF59  F023         	goto	u7250
  6683  0046AE                     u7251:
  6684  0046AE  EF3E  F023         	goto	l6692
  6685  0046B2                     u7250:
  6686  0046B2  0012               	return		;funcret
  6687  0046B4                     __end_of_fputs:
  6688                           	opt callstack 0
  6689                           
  6690 ;; *************** function _fputc *****************
  6691 ;; Defined at:
  6692 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;  c               2    5[COMRAM] int 
  6695 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  6696 ;;		 -> sprintf@f(6), 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;		None
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  2    5[COMRAM] int 
  6701 ;; Registers used:
  6702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6708 ;;      Params:         4       0       0       0       0       0       0       0       0
  6709 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6710 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6711 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6712 ;;Total ram usage:        9 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; Hardware stack levels required when called:    3
  6715 ;; This function calls:
  6716 ;;		_putch
  6717 ;; This function is called by:
  6718 ;;		_pad
  6719 ;;		_vfpfcnvrt
  6720 ;;		_fputs
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text23
  6725  003BE2                     __ptext23:
  6726                           	opt callstack 0
  6727  003BE2                     _fputc:
  6728                           	opt callstack 23
  6729  003BE2  5008               	movf	fputc@fp^0,w,c
  6730  003BE4  1009               	iorwf	(fputc@fp+1)^0,w,c
  6731  003BE6  B4D8               	btfsc	status,2,c
  6732  003BE8  EFF8  F01D         	goto	u7211
  6733  003BEC  EFFA  F01D         	goto	u7210
  6734  003BF0                     u7211:
  6735  003BF0  EF03  F01E         	goto	l6680
  6736  003BF4                     u7210:
  6737  003BF4  5008               	movf	fputc@fp^0,w,c
  6738  003BF6  1009               	iorwf	(fputc@fp+1)^0,w,c
  6739  003BF8  A4D8               	btfss	status,2,c
  6740  003BFA  EF01  F01E         	goto	u7221
  6741  003BFE  EF03  F01E         	goto	u7220
  6742  003C02                     u7221:
  6743  003C02  EF08  F01E         	goto	l6682
  6744  003C06                     u7220:
  6745  003C06                     l6680:
  6746  003C06  5006               	movf	fputc@c^0,w,c
  6747  003C08  EC3A  F024         	call	_putch
  6748  003C0C  EF55  F01E         	goto	l1549
  6749  003C10                     l6682:
  6750  003C10  EE20 F004          	lfsr	2,4
  6751  003C14  5008               	movf	fputc@fp^0,w,c
  6752  003C16  26D9               	addwf	fsr2l,f,c
  6753  003C18  5009               	movf	(fputc@fp+1)^0,w,c
  6754  003C1A  22DA               	addwfc	fsr2h,f,c
  6755  003C1C  50DE               	movf	postinc2,w,c
  6756  003C1E  10DE               	iorwf	postinc2,w,c
  6757  003C20  B4D8               	btfsc	status,2,c
  6758  003C22  EF15  F01E         	goto	u7231
  6759  003C26  EF17  F01E         	goto	u7230
  6760  003C2A                     u7231:
  6761  003C2A  EF32  F01E         	goto	l6686
  6762  003C2E                     u7230:
  6763  003C2E  EE20 F004          	lfsr	2,4
  6764  003C32  5008               	movf	fputc@fp^0,w,c
  6765  003C34  26D9               	addwf	fsr2l,f,c
  6766  003C36  5009               	movf	(fputc@fp+1)^0,w,c
  6767  003C38  22DA               	addwfc	fsr2h,f,c
  6768  003C3A  EE10 F002          	lfsr	1,2
  6769  003C3E  5008               	movf	fputc@fp^0,w,c
  6770  003C40  26E1               	addwf	fsr1l,f,c
  6771  003C42  5009               	movf	(fputc@fp+1)^0,w,c
  6772  003C44  22E2               	addwfc	fsr1h,f,c
  6773  003C46  50DE               	movf	postinc2,w,c
  6774  003C48  5CE6               	subwf	postinc1,w,c
  6775  003C4A  50E6               	movf	postinc1,w,c
  6776  003C4C  0A80               	xorlw	128
  6777  003C4E  6E0E               	movwf	(??_fputc+4)^0,c
  6778  003C50  50DE               	movf	postinc2,w,c
  6779  003C52  0A80               	xorlw	128
  6780  003C54  580E               	subwfb	(??_fputc+4)^0,w,c
  6781  003C56  B0D8               	btfsc	status,0,c
  6782  003C58  EF30  F01E         	goto	u7241
  6783  003C5C  EF32  F01E         	goto	u7240
  6784  003C60                     u7241:
  6785  003C60  EF55  F01E         	goto	l1549
  6786  003C64                     u7240:
  6787  003C64                     l6686:
  6788  003C64  EE20 F002          	lfsr	2,2
  6789  003C68  5008               	movf	fputc@fp^0,w,c
  6790  003C6A  26D9               	addwf	fsr2l,f,c
  6791  003C6C  5009               	movf	(fputc@fp+1)^0,w,c
  6792  003C6E  22DA               	addwfc	fsr2h,f,c
  6793  003C70  CFDE F00A          	movff	postinc2,??_fputc
  6794  003C74  CFDD F00B          	movff	postdec2,??_fputc+1
  6795  003C78  C008  FFD9         	movff	fputc@fp,fsr2l
  6796  003C7C  C009  FFDA         	movff	fputc@fp+1,fsr2h
  6797  003C80  CFDE F00C          	movff	postinc2,??_fputc+2
  6798  003C84  CFDD F00D          	movff	postdec2,??_fputc+3
  6799  003C88  500A               	movf	??_fputc^0,w,c
  6800  003C8A  240C               	addwf	(??_fputc+2)^0,w,c
  6801  003C8C  6ED9               	movwf	fsr2l,c
  6802  003C8E  500B               	movf	(??_fputc+1)^0,w,c
  6803  003C90  200D               	addwfc	(??_fputc+3)^0,w,c
  6804  003C92  6EDA               	movwf	fsr2h,c
  6805  003C94  C006  FFDF         	movff	fputc@c,indf2
  6806  003C98  EE20 F002          	lfsr	2,2
  6807  003C9C  5008               	movf	fputc@fp^0,w,c
  6808  003C9E  26D9               	addwf	fsr2l,f,c
  6809  003CA0  5009               	movf	(fputc@fp+1)^0,w,c
  6810  003CA2  22DA               	addwfc	fsr2h,f,c
  6811  003CA4  2ADE               	incf	postinc2,f,c
  6812  003CA6  0E00               	movlw	0
  6813  003CA8  22DD               	addwfc	postdec2,f,c
  6814  003CAA                     l1549:
  6815  003CAA  0012               	return		;funcret
  6816  003CAC                     __end_of_fputc:
  6817                           	opt callstack 0
  6818                           
  6819 ;; *************** function _putch *****************
  6820 ;; Defined at:
  6821 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;  c               1    wreg     unsigned char 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  c               1    0[COMRAM] unsigned char 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      void 
  6828 ;; Registers used:
  6829 ;;		wreg
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6835 ;;      Params:         0       0       0       0       0       0       0       0       0
  6836 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6838 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6839 ;;Total ram usage:        0 bytes
  6840 ;; Hardware stack levels used:    1
  6841 ;; Hardware stack levels required when called:    2
  6842 ;; This function calls:
  6843 ;;		Nothing
  6844 ;; This function is called by:
  6845 ;;		_fputc
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text24
  6850  004874                     __ptext24:
  6851                           	opt callstack 0
  6852  004874                     _putch:
  6853                           	opt callstack 23
  6854  004874  0012               	return		;funcret
  6855  004876                     __end_of_putch:
  6856                           	opt callstack 0
  6857                           
  6858 ;; *************** function _abs *****************
  6859 ;; Defined at:
  6860 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;  a               2   23[COMRAM] int 
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;		None
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  2   23[COMRAM] int 
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6874 ;;      Params:         2       0       0       0       0       0       0       0       0
  6875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6876 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6877 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6878 ;;Total ram usage:        4 bytes
  6879 ;; Hardware stack levels used:    1
  6880 ;; Hardware stack levels required when called:    2
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_dtoa
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           	psect	text25
  6889  0046B4                     __ptext25:
  6890                           	opt callstack 0
  6891  0046B4                     _abs:
  6892                           	opt callstack 23
  6893  0046B4  BE19               	btfsc	(abs@a+1)^0,7,c
  6894  0046B6  EF67  F023         	goto	u7720
  6895  0046BA  5019               	movf	(abs@a+1)^0,w,c
  6896  0046BC  E106               	bnz	u7721
  6897  0046BE  0418               	decf	abs@a^0,w,c
  6898  0046C0  B0D8               	btfsc	status,0,c
  6899  0046C2  EF65  F023         	goto	u7721
  6900  0046C6  EF67  F023         	goto	u7720
  6901  0046CA                     u7721:
  6902  0046CA  EF75  F023         	goto	l1470
  6903  0046CE                     u7720:
  6904  0046CE  C018  F01A         	movff	abs@a,??_abs
  6905  0046D2  C019  F01B         	movff	abs@a+1,??_abs+1
  6906  0046D6  1E1A               	comf	??_abs^0,f,c
  6907  0046D8  1E1B               	comf	(??_abs+1)^0,f,c
  6908  0046DA  4A1A               	infsnz	??_abs^0,f,c
  6909  0046DC  2A1B               	incf	(??_abs+1)^0,f,c
  6910  0046DE  C01A  F018         	movff	??_abs,?_abs
  6911  0046E2  C01B  F019         	movff	??_abs+1,?_abs+1
  6912  0046E6  EF79  F023         	goto	l1473
  6913  0046EA                     l1470:
  6914  0046EA  C018  F018         	movff	abs@a,?_abs
  6915  0046EE  C019  F019         	movff	abs@a+1,?_abs+1
  6916  0046F2                     l1473:
  6917  0046F2  0012               	return		;funcret
  6918  0046F4                     __end_of_abs:
  6919                           	opt callstack 0
  6920                           
  6921 ;; *************** function ___aomod *****************
  6922 ;; Defined at:
  6923 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  dividend        8    5[COMRAM] long long 
  6926 ;;  divisor         8   13[COMRAM] long long 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;  sign            1   22[COMRAM] unsigned char 
  6929 ;;  counter         1   21[COMRAM] unsigned char 
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  8    5[COMRAM] long long 
  6932 ;; Registers used:
  6933 ;;		wreg, status,2, status,0
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6939 ;;      Params:        16       0       0       0       0       0       0       0       0
  6940 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6942 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6943 ;;Total ram usage:       18 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:    2
  6946 ;; This function calls:
  6947 ;;		Nothing
  6948 ;; This function is called by:
  6949 ;;		_dtoa
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text26
  6954  003352                     __ptext26:
  6955                           	opt callstack 0
  6956  003352                     ___aomod:
  6957                           	opt callstack 23
  6958  003352  0E00               	movlw	0
  6959  003354  6E17               	movwf	___aomod@sign^0,c
  6960  003356  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  6961  003358  EFB2  F019         	goto	u8040
  6962  00335C  EFB0  F019         	goto	u8041
  6963  003360                     u8041:
  6964  003360  EFC4  F019         	goto	l7066
  6965  003364                     u8040:
  6966  003364  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  6967  003366  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  6968  003368  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  6969  00336A  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  6970  00336C  1E09               	comf	(___aomod@dividend+3)^0,f,c
  6971  00336E  1E08               	comf	(___aomod@dividend+2)^0,f,c
  6972  003370  1E07               	comf	(___aomod@dividend+1)^0,f,c
  6973  003372  6C06               	negf	___aomod@dividend^0,c
  6974  003374  0E00               	movlw	0
  6975  003376  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  6976  003378  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  6977  00337A  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  6978  00337C  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  6979  00337E  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  6980  003380  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  6981  003382  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  6982  003384  0E01               	movlw	1
  6983  003386  6E17               	movwf	___aomod@sign^0,c
  6984  003388                     l7066:
  6985  003388  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  6986  00338A  EFCB  F019         	goto	u8050
  6987  00338E  EFC9  F019         	goto	u8051
  6988  003392                     u8051:
  6989  003392  EFDB  F019         	goto	l7070
  6990  003396                     u8050:
  6991  003396  1E15               	comf	(___aomod@divisor+7)^0,f,c
  6992  003398  1E14               	comf	(___aomod@divisor+6)^0,f,c
  6993  00339A  1E13               	comf	(___aomod@divisor+5)^0,f,c
  6994  00339C  1E12               	comf	(___aomod@divisor+4)^0,f,c
  6995  00339E  1E11               	comf	(___aomod@divisor+3)^0,f,c
  6996  0033A0  1E10               	comf	(___aomod@divisor+2)^0,f,c
  6997  0033A2  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  6998  0033A4  6C0E               	negf	___aomod@divisor^0,c
  6999  0033A6  0E00               	movlw	0
  7000  0033A8  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  7001  0033AA  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  7002  0033AC  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  7003  0033AE  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  7004  0033B0  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  7005  0033B2  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  7006  0033B4  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  7007  0033B6                     l7070:
  7008  0033B6  500E               	movf	___aomod@divisor^0,w,c
  7009  0033B8  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  7010  0033BA  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  7011  0033BC  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  7012  0033BE  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  7013  0033C0  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  7014  0033C2  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  7015  0033C4  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  7016  0033C6  B4D8               	btfsc	status,2,c
  7017  0033C8  EFE8  F019         	goto	u8061
  7018  0033CC  EFEA  F019         	goto	u8060
  7019  0033D0                     u8061:
  7020  0033D0  EF32  F01A         	goto	l7086
  7021  0033D4                     u8060:
  7022  0033D4  0E01               	movlw	1
  7023  0033D6  6E16               	movwf	___aomod@counter^0,c
  7024  0033D8  EFF8  F019         	goto	l7076
  7025  0033DC                     l7074:
  7026  0033DC  90D8               	bcf	status,0,c
  7027  0033DE  360E               	rlcf	___aomod@divisor^0,f,c
  7028  0033E0  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  7029  0033E2  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  7030  0033E4  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  7031  0033E6  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  7032  0033E8  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  7033  0033EA  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  7034  0033EC  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  7035  0033EE  2A16               	incf	___aomod@counter^0,f,c
  7036  0033F0                     l7076:
  7037  0033F0  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7038  0033F2  EFFD  F019         	goto	u8071
  7039  0033F6  EFFF  F019         	goto	u8070
  7040  0033FA                     u8071:
  7041  0033FA  EFEE  F019         	goto	l7074
  7042  0033FE                     u8070:
  7043  0033FE                     l7078:
  7044  0033FE  500E               	movf	___aomod@divisor^0,w,c
  7045  003400  5C06               	subwf	___aomod@dividend^0,w,c
  7046  003402  500F               	movf	(___aomod@divisor+1)^0,w,c
  7047  003404  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  7048  003406  5010               	movf	(___aomod@divisor+2)^0,w,c
  7049  003408  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  7050  00340A  5011               	movf	(___aomod@divisor+3)^0,w,c
  7051  00340C  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  7052  00340E  5012               	movf	(___aomod@divisor+4)^0,w,c
  7053  003410  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  7054  003412  5013               	movf	(___aomod@divisor+5)^0,w,c
  7055  003414  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  7056  003416  5014               	movf	(___aomod@divisor+6)^0,w,c
  7057  003418  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  7058  00341A  5015               	movf	(___aomod@divisor+7)^0,w,c
  7059  00341C  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  7060  00341E  A0D8               	btfss	status,0,c
  7061  003420  EF14  F01A         	goto	u8081
  7062  003424  EF16  F01A         	goto	u8080
  7063  003428                     u8081:
  7064  003428  EF26  F01A         	goto	l7082
  7065  00342C                     u8080:
  7066  00342C  500E               	movf	___aomod@divisor^0,w,c
  7067  00342E  5E06               	subwf	___aomod@dividend^0,f,c
  7068  003430  500F               	movf	(___aomod@divisor+1)^0,w,c
  7069  003432  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  7070  003434  5010               	movf	(___aomod@divisor+2)^0,w,c
  7071  003436  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  7072  003438  5011               	movf	(___aomod@divisor+3)^0,w,c
  7073  00343A  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  7074  00343C  5012               	movf	(___aomod@divisor+4)^0,w,c
  7075  00343E  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  7076  003440  5013               	movf	(___aomod@divisor+5)^0,w,c
  7077  003442  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  7078  003444  5014               	movf	(___aomod@divisor+6)^0,w,c
  7079  003446  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  7080  003448  5015               	movf	(___aomod@divisor+7)^0,w,c
  7081  00344A  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  7082  00344C                     l7082:
  7083  00344C  90D8               	bcf	status,0,c
  7084  00344E  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  7085  003450  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  7086  003452  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  7087  003454  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  7088  003456  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  7089  003458  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  7090  00345A  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  7091  00345C  320E               	rrcf	___aomod@divisor^0,f,c
  7092  00345E  2E16               	decfsz	___aomod@counter^0,f,c
  7093  003460  EFFF  F019         	goto	l7078
  7094  003464                     l7086:
  7095  003464  5017               	movf	___aomod@sign^0,w,c
  7096  003466  B4D8               	btfsc	status,2,c
  7097  003468  EF38  F01A         	goto	u8091
  7098  00346C  EF3A  F01A         	goto	u8090
  7099  003470                     u8091:
  7100  003470  EF4A  F01A         	goto	l7090
  7101  003474                     u8090:
  7102  003474  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7103  003476  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7104  003478  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7105  00347A  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7106  00347C  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7107  00347E  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7108  003480  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7109  003482  6C06               	negf	___aomod@dividend^0,c
  7110  003484  0E00               	movlw	0
  7111  003486  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7112  003488  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7113  00348A  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7114  00348C  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7115  00348E  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7116  003490  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7117  003492  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7118  003494                     l7090:
  7119  003494  C006  F006         	movff	___aomod@dividend,?___aomod
  7120  003498  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  7121  00349C  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  7122  0034A0  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  7123  0034A4  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  7124  0034A8  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  7125  0034AC  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  7126  0034B0  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  7127  0034B4  0012               	return		;funcret
  7128  0034B6                     __end_of___aomod:
  7129                           	opt callstack 0
  7130                           
  7131 ;; *************** function ___aodiv *****************
  7132 ;; Defined at:
  7133 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  dividend        8    5[COMRAM] long long 
  7136 ;;  divisor         8   13[COMRAM] long long 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;  quotient        8   23[COMRAM] long long 
  7139 ;;  sign            1   22[COMRAM] unsigned char 
  7140 ;;  counter         1   21[COMRAM] unsigned char 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  8    5[COMRAM] long long 
  7143 ;; Registers used:
  7144 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7150 ;;      Params:        16       0       0       0       0       0       0       0       0
  7151 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7153 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7154 ;;Total ram usage:       26 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    2
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_dtoa
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text27
  7165  00304E                     __ptext27:
  7166                           	opt callstack 0
  7167  00304E                     ___aodiv:
  7168                           	opt callstack 23
  7169  00304E  0E00               	movlw	0
  7170  003050  6E17               	movwf	___aodiv@sign^0,c
  7171  003052  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  7172  003054  EF30  F018         	goto	u7970
  7173  003058  EF2E  F018         	goto	u7971
  7174  00305C                     u7971:
  7175  00305C  EF42  F018         	goto	l7022
  7176  003060                     u7970:
  7177  003060  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  7178  003062  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  7179  003064  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  7180  003066  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  7181  003068  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  7182  00306A  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  7183  00306C  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  7184  00306E  6C0E               	negf	___aodiv@divisor^0,c
  7185  003070  0E00               	movlw	0
  7186  003072  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  7187  003074  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  7188  003076  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  7189  003078  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  7190  00307A  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  7191  00307C  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  7192  00307E  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  7193  003080  0E01               	movlw	1
  7194  003082  6E17               	movwf	___aodiv@sign^0,c
  7195  003084                     l7022:
  7196  003084  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  7197  003086  EF49  F018         	goto	u7980
  7198  00308A  EF47  F018         	goto	u7981
  7199  00308E                     u7981:
  7200  00308E  EF5B  F018         	goto	l7028
  7201  003092                     u7980:
  7202  003092  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  7203  003094  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  7204  003096  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  7205  003098  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  7206  00309A  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  7207  00309C  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  7208  00309E  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  7209  0030A0  6C06               	negf	___aodiv@dividend^0,c
  7210  0030A2  0E00               	movlw	0
  7211  0030A4  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  7212  0030A6  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  7213  0030A8  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  7214  0030AA  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  7215  0030AC  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  7216  0030AE  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  7217  0030B0  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  7218  0030B2  0E01               	movlw	1
  7219  0030B4  1A17               	xorwf	___aodiv@sign^0,f,c
  7220  0030B6                     l7028:
  7221  0030B6  EE20  F018         	lfsr	2,___aodiv@quotient
  7222  0030BA  0E07               	movlw	7
  7223  0030BC                     u7991:
  7224  0030BC  6ADE               	clrf	postinc2,c
  7225  0030BE  06E8               	decf	wreg,f,c
  7226  0030C0  E2FD               	bc	u7991
  7227  0030C2  500E               	movf	___aodiv@divisor^0,w,c
  7228  0030C4  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  7229  0030C6  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  7230  0030C8  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  7231  0030CA  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  7232  0030CC  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  7233  0030CE  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  7234  0030D0  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  7235  0030D2  B4D8               	btfsc	status,2,c
  7236  0030D4  EF6E  F018         	goto	u8001
  7237  0030D8  EF70  F018         	goto	u8000
  7238  0030DC                     u8001:
  7239  0030DC  EFC2  F018         	goto	l7050
  7240  0030E0                     u8000:
  7241  0030E0  0E01               	movlw	1
  7242  0030E2  6E16               	movwf	___aodiv@counter^0,c
  7243  0030E4  EF7E  F018         	goto	l7036
  7244  0030E8                     l7034:
  7245  0030E8  90D8               	bcf	status,0,c
  7246  0030EA  360E               	rlcf	___aodiv@divisor^0,f,c
  7247  0030EC  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  7248  0030EE  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  7249  0030F0  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  7250  0030F2  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  7251  0030F4  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  7252  0030F6  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  7253  0030F8  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  7254  0030FA  2A16               	incf	___aodiv@counter^0,f,c
  7255  0030FC                     l7036:
  7256  0030FC  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7257  0030FE  EF83  F018         	goto	u8011
  7258  003102  EF85  F018         	goto	u8010
  7259  003106                     u8011:
  7260  003106  EF74  F018         	goto	l7034
  7261  00310A                     u8010:
  7262  00310A                     l7038:
  7263  00310A  90D8               	bcf	status,0,c
  7264  00310C  3618               	rlcf	___aodiv@quotient^0,f,c
  7265  00310E  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  7266  003110  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  7267  003112  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  7268  003114  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  7269  003116  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  7270  003118  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  7271  00311A  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  7272  00311C  500E               	movf	___aodiv@divisor^0,w,c
  7273  00311E  5C06               	subwf	___aodiv@dividend^0,w,c
  7274  003120  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7275  003122  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  7276  003124  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7277  003126  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  7278  003128  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7279  00312A  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  7280  00312C  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7281  00312E  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  7282  003130  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7283  003132  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  7284  003134  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7285  003136  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  7286  003138  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7287  00313A  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  7288  00313C  A0D8               	btfss	status,0,c
  7289  00313E  EFA3  F018         	goto	u8021
  7290  003142  EFA5  F018         	goto	u8020
  7291  003146                     u8021:
  7292  003146  EFB6  F018         	goto	l7046
  7293  00314A                     u8020:
  7294  00314A  500E               	movf	___aodiv@divisor^0,w,c
  7295  00314C  5E06               	subwf	___aodiv@dividend^0,f,c
  7296  00314E  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7297  003150  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  7298  003152  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7299  003154  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  7300  003156  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7301  003158  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  7302  00315A  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7303  00315C  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  7304  00315E  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7305  003160  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  7306  003162  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7307  003164  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  7308  003166  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7309  003168  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  7310  00316A  8018               	bsf	___aodiv@quotient^0,0,c
  7311  00316C                     l7046:
  7312  00316C  90D8               	bcf	status,0,c
  7313  00316E  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  7314  003170  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  7315  003172  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  7316  003174  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  7317  003176  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  7318  003178  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  7319  00317A  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  7320  00317C  320E               	rrcf	___aodiv@divisor^0,f,c
  7321  00317E  2E16               	decfsz	___aodiv@counter^0,f,c
  7322  003180  EF85  F018         	goto	l7038
  7323  003184                     l7050:
  7324  003184  5017               	movf	___aodiv@sign^0,w,c
  7325  003186  B4D8               	btfsc	status,2,c
  7326  003188  EFC8  F018         	goto	u8031
  7327  00318C  EFCA  F018         	goto	u8030
  7328  003190                     u8031:
  7329  003190  EFDA  F018         	goto	l7054
  7330  003194                     u8030:
  7331  003194  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  7332  003196  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  7333  003198  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  7334  00319A  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  7335  00319C  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  7336  00319E  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  7337  0031A0  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  7338  0031A2  6C18               	negf	___aodiv@quotient^0,c
  7339  0031A4  0E00               	movlw	0
  7340  0031A6  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  7341  0031A8  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  7342  0031AA  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  7343  0031AC  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  7344  0031AE  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  7345  0031B0  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  7346  0031B2  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  7347  0031B4                     l7054:
  7348  0031B4  C018  F006         	movff	___aodiv@quotient,?___aodiv
  7349  0031B8  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  7350  0031BC  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  7351  0031C0  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  7352  0031C4  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  7353  0031C8  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  7354  0031CC  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  7355  0031D0  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  7356  0031D4  0012               	return		;funcret
  7357  0031D6                     __end_of___aodiv:
  7358                           	opt callstack 0
  7359                           
  7360 ;; *************** function _atoi *****************
  7361 ;; Defined at:
  7362 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  s               2   12[COMRAM] PTR const unsigned char 
  7365 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  7366 ;;		 -> STR_3(34), 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  n               2   25[COMRAM] int 
  7369 ;;  neg             2   18[COMRAM] int 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  2   12[COMRAM] int 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7379 ;;      Params:         2       0       0       0       0       0       0       0       0
  7380 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7381 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7382 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7383 ;;Total ram usage:       15 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:    3
  7386 ;; This function calls:
  7387 ;;		___wmul
  7388 ;;		_isdigit
  7389 ;;		_isspace
  7390 ;; This function is called by:
  7391 ;;		_vfpfcnvrt
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text28
  7396  002EBE                     __ptext28:
  7397                           	opt callstack 0
  7398  002EBE                     _atoi:
  7399                           	opt callstack 23
  7400  002EBE  0E00               	movlw	0
  7401  002EC0  6E1B               	movwf	(atoi@n+1)^0,c
  7402  002EC2  0E00               	movlw	0
  7403  002EC4  6E1A               	movwf	atoi@n^0,c
  7404  002EC6  0E00               	movlw	0
  7405  002EC8  6E14               	movwf	(atoi@neg+1)^0,c
  7406  002ECA  0E00               	movlw	0
  7407  002ECC  6E13               	movwf	atoi@neg^0,c
  7408  002ECE  EF6B  F017         	goto	l7914
  7409  002ED2                     l7912:
  7410  002ED2  4A0D               	infsnz	atoi@s^0,f,c
  7411  002ED4  2A0E               	incf	(atoi@s+1)^0,f,c
  7412  002ED6                     l7914:
  7413  002ED6  0E01               	movlw	1
  7414  002ED8  6E19               	movwf	_atoi$1327^0,c
  7415  002EDA  C00D  FFF6         	movff	atoi@s,tblptrl
  7416  002EDE  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7417  002EE2                     	if	0	;tblptru may be non-zero
  7418  002EE2                     	endif
  7419  002EE2                     	if	0	;tblptru may be non-zero
  7420  002EE2                     	endif
  7421  002EE2  0008               	tblrd		*
  7422  002EE4  50F5               	movf	tablat,w,c
  7423  002EE6  0A20               	xorlw	32
  7424  002EE8  B4D8               	btfsc	status,2,c
  7425  002EEA  EF79  F017         	goto	u9491
  7426  002EEE  EF7B  F017         	goto	u9490
  7427  002EF2                     u9491:
  7428  002EF2  EF98  F017         	goto	l7922
  7429  002EF6                     u9490:
  7430  002EF6  0EF7               	movlw	247
  7431  002EF8  6E0F               	movwf	??_atoi^0,c
  7432  002EFA  0EFF               	movlw	255
  7433  002EFC  6E10               	movwf	(??_atoi+1)^0,c
  7434  002EFE  C00D  FFF6         	movff	atoi@s,tblptrl
  7435  002F02  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7436  002F06                     	if	0	;tblptru may be non-zero
  7437  002F06                     	endif
  7438  002F06                     	if	0	;tblptru may be non-zero
  7439  002F06                     	endif
  7440  002F06  0008               	tblrd		*
  7441  002F08  50F5               	movf	tablat,w,c
  7442  002F0A  6E11               	movwf	(??_atoi+2)^0,c
  7443  002F0C  6A12               	clrf	(??_atoi+3)^0,c
  7444  002F0E  500F               	movf	??_atoi^0,w,c
  7445  002F10  2611               	addwf	(??_atoi+2)^0,f,c
  7446  002F12  5010               	movf	(??_atoi+1)^0,w,c
  7447  002F14  2212               	addwfc	(??_atoi+3)^0,f,c
  7448  002F16  5012               	movf	(??_atoi+3)^0,w,c
  7449  002F18  E109               	bnz	u9500
  7450  002F1A  0E05               	movlw	5
  7451  002F1C  5C11               	subwf	(??_atoi+2)^0,w,c
  7452  002F1E  A0D8               	btfss	status,0,c
  7453  002F20  EF94  F017         	goto	u9501
  7454  002F24  EF96  F017         	goto	u9500
  7455  002F28                     u9501:
  7456  002F28  EF98  F017         	goto	l7922
  7457  002F2C                     u9500:
  7458  002F2C  0E00               	movlw	0
  7459  002F2E  6E19               	movwf	_atoi$1327^0,c
  7460  002F30                     l7922:
  7461  002F30  C019  F015         	movff	_atoi$1327,_atoi$1326
  7462  002F34  6A16               	clrf	(_atoi$1326+1)^0,c
  7463  002F36  5015               	movf	_atoi$1326^0,w,c
  7464  002F38  1016               	iorwf	(_atoi$1326+1)^0,w,c
  7465  002F3A  A4D8               	btfss	status,2,c
  7466  002F3C  EFA2  F017         	goto	u9511
  7467  002F40  EFA4  F017         	goto	u9510
  7468  002F44                     u9511:
  7469  002F44  EF69  F017         	goto	l7912
  7470  002F48                     u9510:
  7471  002F48  EFAE  F017         	goto	l7932
  7472  002F4C                     l7928:
  7473  002F4C  0E00               	movlw	0
  7474  002F4E  6E14               	movwf	(atoi@neg+1)^0,c
  7475  002F50  0E01               	movlw	1
  7476  002F52  6E13               	movwf	atoi@neg^0,c
  7477  002F54                     l7930:
  7478  002F54  4A0D               	infsnz	atoi@s^0,f,c
  7479  002F56  2A0E               	incf	(atoi@s+1)^0,f,c
  7480  002F58  EFE3  F017         	goto	l7938
  7481  002F5C                     l7932:
  7482  002F5C  C00D  FFF6         	movff	atoi@s,tblptrl
  7483  002F60  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7484  002F64                     	if	0	;tblptru may be non-zero
  7485  002F64                     	endif
  7486  002F64                     	if	0	;tblptru may be non-zero
  7487  002F64                     	endif
  7488  002F64  0008               	tblrd		*
  7489  002F66  50F5               	movf	tablat,w,c
  7490  002F68  6E0F               	movwf	??_atoi^0,c
  7491  002F6A  6A10               	clrf	(??_atoi+1)^0,c
  7492                           
  7493                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7494                           ; Switch size 1, requested type "simple"
  7495                           ; Number of cases is 1, Range of values is 0 to 0
  7496                           ; switch strategies available:
  7497                           ; Name         Instructions Cycles
  7498                           ; simple_byte            4     3 (average)
  7499                           ;	Chosen strategy is simple_byte
  7500  002F6C  5010               	movf	(??_atoi+1)^0,w,c
  7501  002F6E  0A00               	xorlw	0	; case 0
  7502  002F70  B4D8               	btfsc	status,2,c
  7503  002F72  EFBD  F017         	goto	l9120
  7504  002F76  EFE3  F017         	goto	l7938
  7505  002F7A                     l9120:
  7506                           
  7507                           ; Switch size 1, requested type "simple"
  7508                           ; Number of cases is 2, Range of values is 43 to 45
  7509                           ; switch strategies available:
  7510                           ; Name         Instructions Cycles
  7511                           ; simple_byte            7     4 (average)
  7512                           ;	Chosen strategy is simple_byte
  7513  002F7A  500F               	movf	??_atoi^0,w,c
  7514  002F7C  0A2B               	xorlw	43	; case 43
  7515  002F7E  B4D8               	btfsc	status,2,c
  7516  002F80  EFAA  F017         	goto	l7930
  7517  002F84  0A06               	xorlw	6	; case 45
  7518  002F86  B4D8               	btfsc	status,2,c
  7519  002F88  EFA6  F017         	goto	l7928
  7520  002F8C  EFE3  F017         	goto	l7938
  7521  002F90                     l7934:
  7522  002F90  C01A  F006         	movff	atoi@n,___wmul@multiplier
  7523  002F94  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  7524  002F98  0E00               	movlw	0
  7525  002F9A  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7526  002F9C  0E0A               	movlw	10
  7527  002F9E  6E08               	movwf	___wmul@multiplicand^0,c
  7528  002FA0  EC04  F024         	call	___wmul	;wreg free
  7529  002FA4  C00D  FFF6         	movff	atoi@s,tblptrl
  7530  002FA8  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7531  002FAC                     	if	0	;tblptru may be non-zero
  7532  002FAC                     	endif
  7533  002FAC                     	if	0	;tblptru may be non-zero
  7534  002FAC                     	endif
  7535  002FAC  0008               	tblrd		*
  7536  002FAE  50F5               	movf	tablat,w,c
  7537  002FB0  5E06               	subwf	?___wmul^0,f,c
  7538  002FB2  0E00               	movlw	0
  7539  002FB4  5A07               	subwfb	(?___wmul+1)^0,f,c
  7540  002FB6  0E30               	movlw	48
  7541  002FB8  2406               	addwf	?___wmul^0,w,c
  7542  002FBA  6E1A               	movwf	atoi@n^0,c
  7543  002FBC  0E00               	movlw	0
  7544  002FBE  2007               	addwfc	(?___wmul+1)^0,w,c
  7545  002FC0  6E1B               	movwf	(atoi@n+1)^0,c
  7546  002FC2  EFAA  F017         	goto	l7930
  7547  002FC6                     l7938:
  7548  002FC6  0ED0               	movlw	208
  7549  002FC8  6E0F               	movwf	??_atoi^0,c
  7550  002FCA  0EFF               	movlw	255
  7551  002FCC  6E10               	movwf	(??_atoi+1)^0,c
  7552  002FCE  C00D  FFF6         	movff	atoi@s,tblptrl
  7553  002FD2  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7554  002FD6                     	if	0	;tblptru may be non-zero
  7555  002FD6                     	endif
  7556  002FD6                     	if	0	;tblptru may be non-zero
  7557  002FD6                     	endif
  7558  002FD6  0008               	tblrd		*
  7559  002FD8  50F5               	movf	tablat,w,c
  7560  002FDA  6E11               	movwf	(??_atoi+2)^0,c
  7561  002FDC  6A12               	clrf	(??_atoi+3)^0,c
  7562  002FDE  500F               	movf	??_atoi^0,w,c
  7563  002FE0  2611               	addwf	(??_atoi+2)^0,f,c
  7564  002FE2  5010               	movf	(??_atoi+1)^0,w,c
  7565  002FE4  2212               	addwfc	(??_atoi+3)^0,f,c
  7566  002FE6  5012               	movf	(??_atoi+3)^0,w,c
  7567  002FE8  E10A               	bnz	u9520
  7568  002FEA  0E0A               	movlw	10
  7569  002FEC  5C11               	subwf	(??_atoi+2)^0,w,c
  7570  002FEE  A0D8               	btfss	status,0,c
  7571  002FF0  EFFC  F017         	goto	u9521
  7572  002FF4  EFFF  F017         	goto	u9520
  7573  002FF8                     u9521:
  7574  002FF8  0E01               	movlw	1
  7575  002FFA  EF00  F018         	goto	u9530
  7576  002FFE                     u9520:
  7577  002FFE  0E00               	movlw	0
  7578  003000                     u9530:
  7579  003000  6E17               	movwf	_atoi$1328^0,c
  7580  003002  6A18               	clrf	(_atoi$1328+1)^0,c
  7581  003004  5017               	movf	_atoi$1328^0,w,c
  7582  003006  1018               	iorwf	(_atoi$1328+1)^0,w,c
  7583  003008  A4D8               	btfss	status,2,c
  7584  00300A  EF09  F018         	goto	u9541
  7585  00300E  EF0B  F018         	goto	u9540
  7586  003012                     u9541:
  7587  003012  EFC8  F017         	goto	l7934
  7588  003016                     u9540:
  7589  003016  5013               	movf	atoi@neg^0,w,c
  7590  003018  1014               	iorwf	(atoi@neg+1)^0,w,c
  7591  00301A  A4D8               	btfss	status,2,c
  7592  00301C  EF12  F018         	goto	u9551
  7593  003020  EF14  F018         	goto	u9550
  7594  003024                     u9551:
  7595  003024  EF22  F018         	goto	l1501
  7596  003028                     u9550:
  7597  003028  C01A  F00F         	movff	atoi@n,??_atoi
  7598  00302C  C01B  F010         	movff	atoi@n+1,??_atoi+1
  7599  003030  1E0F               	comf	??_atoi^0,f,c
  7600  003032  1E10               	comf	(??_atoi+1)^0,f,c
  7601  003034  4A0F               	infsnz	??_atoi^0,f,c
  7602  003036  2A10               	incf	(??_atoi+1)^0,f,c
  7603  003038  C00F  F00D         	movff	??_atoi,?_atoi
  7604  00303C  C010  F00E         	movff	??_atoi+1,?_atoi+1
  7605  003040  EF26  F018         	goto	l1504
  7606  003044                     l1501:
  7607  003044  C01A  F00D         	movff	atoi@n,?_atoi
  7608  003048  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  7609  00304C                     l1504:
  7610  00304C  0012               	return		;funcret
  7611  00304E                     __end_of_atoi:
  7612                           	opt callstack 0
  7613                           
  7614 ;; *************** function _isspace *****************
  7615 ;; Defined at:
  7616 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;  c               2    5[COMRAM] int 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;		None
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  2    5[COMRAM] int 
  7623 ;; Registers used:
  7624 ;;		wreg, status,2, status,0
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7630 ;;      Params:         2       0       0       0       0       0       0       0       0
  7631 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7632 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7633 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7634 ;;Total ram usage:        7 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:    2
  7637 ;; This function calls:
  7638 ;;		Nothing
  7639 ;; This function is called by:
  7640 ;;		_atoi
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text29
  7645  0044F2                     __ptext29:
  7646                           	opt callstack 0
  7647  0044F2                     _isspace:
  7648                           	opt callstack 23
  7649  0044F2  0E01               	movlw	1
  7650  0044F4  6E0C               	movwf	_isspace$1357^0,c
  7651  0044F6  0E20               	movlw	32
  7652  0044F8  1806               	xorwf	isspace@c^0,w,c
  7653  0044FA  1007               	iorwf	(isspace@c+1)^0,w,c
  7654  0044FC  B4D8               	btfsc	status,2,c
  7655  0044FE  EF83  F022         	goto	u8801
  7656  004502  EF85  F022         	goto	u8800
  7657  004506                     u8801:
  7658  004506  EF9E  F022         	goto	l7546
  7659  00450A                     u8800:
  7660  00450A  0EF7               	movlw	247
  7661  00450C  6E08               	movwf	??_isspace^0,c
  7662  00450E  0EFF               	movlw	255
  7663  004510  6E09               	movwf	(??_isspace+1)^0,c
  7664  004512  C006  F00A         	movff	isspace@c,??_isspace+2
  7665  004516  C007  F00B         	movff	isspace@c+1,??_isspace+3
  7666  00451A  5008               	movf	??_isspace^0,w,c
  7667  00451C  260A               	addwf	(??_isspace+2)^0,f,c
  7668  00451E  5009               	movf	(??_isspace+1)^0,w,c
  7669  004520  220B               	addwfc	(??_isspace+3)^0,f,c
  7670  004522  500B               	movf	(??_isspace+3)^0,w,c
  7671  004524  E109               	bnz	u8810
  7672  004526  0E05               	movlw	5
  7673  004528  5C0A               	subwf	(??_isspace+2)^0,w,c
  7674  00452A  A0D8               	btfss	status,0,c
  7675  00452C  EF9A  F022         	goto	u8811
  7676  004530  EF9C  F022         	goto	u8810
  7677  004534                     u8811:
  7678  004534  EF9E  F022         	goto	l7546
  7679  004538                     u8810:
  7680  004538  0E00               	movlw	0
  7681  00453A  6E0C               	movwf	_isspace$1357^0,c
  7682  00453C                     l7546:
  7683  00453C  C00C  F006         	movff	_isspace$1357,?_isspace
  7684  004540  6A07               	clrf	(?_isspace+1)^0,c
  7685  004542  0012               	return		;funcret
  7686  004544                     __end_of_isspace:
  7687                           	opt callstack 0
  7688                           
  7689 ;; *************** function _isdigit *****************
  7690 ;; Defined at:
  7691 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;  c               2    5[COMRAM] int 
  7694 ;; Auto vars:     Size  Location     Type
  7695 ;;		None
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  2    5[COMRAM] int 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2, status,0
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7705 ;;      Params:         2       0       0       0       0       0       0       0       0
  7706 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7707 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7708 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7709 ;;Total ram usage:        6 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; Hardware stack levels required when called:    2
  7712 ;; This function calls:
  7713 ;;		Nothing
  7714 ;; This function is called by:
  7715 ;;		_vfpfcnvrt
  7716 ;;		_atoi
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text30
  7721  004764                     __ptext30:
  7722                           	opt callstack 0
  7723  004764                     _isdigit:
  7724                           	opt callstack 24
  7725  004764  0ED0               	movlw	208
  7726  004766  6E08               	movwf	??_isdigit^0,c
  7727  004768  0EFF               	movlw	255
  7728  00476A  6E09               	movwf	(??_isdigit+1)^0,c
  7729  00476C  C006  F00A         	movff	isdigit@c,??_isdigit+2
  7730  004770  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  7731  004774  5008               	movf	??_isdigit^0,w,c
  7732  004776  260A               	addwf	(??_isdigit+2)^0,f,c
  7733  004778  5009               	movf	(??_isdigit+1)^0,w,c
  7734  00477A  220B               	addwfc	(??_isdigit+3)^0,f,c
  7735  00477C  500B               	movf	(??_isdigit+3)^0,w,c
  7736  00477E  E10A               	bnz	u7950
  7737  004780  0E0A               	movlw	10
  7738  004782  5C0A               	subwf	(??_isdigit+2)^0,w,c
  7739  004784  A0D8               	btfss	status,0,c
  7740  004786  EFC7  F023         	goto	u7951
  7741  00478A  EFCA  F023         	goto	u7950
  7742  00478E                     u7951:
  7743  00478E  0E01               	movlw	1
  7744  004790  EFCB  F023         	goto	u7960
  7745  004794                     u7950:
  7746  004794  0E00               	movlw	0
  7747  004796                     u7960:
  7748  004796  6E06               	movwf	?_isdigit^0,c
  7749  004798  6A07               	clrf	(?_isdigit+1)^0,c
  7750  00479A  0012               	return		;funcret
  7751  00479C                     __end_of_isdigit:
  7752                           	opt callstack 0
  7753                           
  7754 ;; *************** function ___wmul *****************
  7755 ;; Defined at:
  7756 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  multiplier      2    5[COMRAM] unsigned int 
  7759 ;;  multiplicand    2    7[COMRAM] unsigned int 
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;  product         2    9[COMRAM] unsigned int 
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  2    5[COMRAM] unsigned int 
  7764 ;; Registers used:
  7765 ;;		wreg, status,2, status,0, prodl, prodh
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7771 ;;      Params:         4       0       0       0       0       0       0       0       0
  7772 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7774 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7775 ;;Total ram usage:        6 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:    2
  7778 ;; This function calls:
  7779 ;;		Nothing
  7780 ;; This function is called by:
  7781 ;;		_atoi
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text31
  7786  004808                     __ptext31:
  7787                           	opt callstack 0
  7788  004808                     ___wmul:
  7789                           	opt callstack 23
  7790  004808  5006               	movf	___wmul@multiplier^0,w,c
  7791  00480A  0208               	mulwf	___wmul@multiplicand^0,c
  7792  00480C  CFF3 F00A          	movff	prodl,___wmul@product
  7793  004810  CFF4 F00B          	movff	prodh,___wmul@product+1
  7794  004814  5006               	movf	___wmul@multiplier^0,w,c
  7795  004816  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7796  004818  50F3               	movf	243,w,c
  7797  00481A  260B               	addwf	(___wmul@product+1)^0,f,c
  7798  00481C  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7799  00481E  0208               	mulwf	___wmul@multiplicand^0,c
  7800  004820  50F3               	movf	243,w,c
  7801  004822  260B               	addwf	(___wmul@product+1)^0,f,c
  7802  004824  C00A  F006         	movff	___wmul@product,?___wmul
  7803  004828  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7804  00482C  0012               	return		;funcret
  7805  00482E                     __end_of___wmul:
  7806                           	opt callstack 0
  7807                           
  7808 ;; *************** function _UART_printf *****************
  7809 ;; Defined at:
  7810 ;;		line 47 in file "./UART.h"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  cadena          2    6[COMRAM] PTR unsigned char 
  7813 ;;		 -> STR_10(6), STR_9(9), STR_8(11), STR_7(10), 
  7814 ;;		 -> buffer(50), STR_2(25), STR_1(24), 
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;		None
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  1    wreg      void 
  7819 ;; Registers used:
  7820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7826 ;;      Params:         2       0       0       0       0       0       0       0       0
  7827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7829 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7830 ;;Total ram usage:        2 bytes
  7831 ;; Hardware stack levels used:    1
  7832 ;; Hardware stack levels required when called:    3
  7833 ;; This function calls:
  7834 ;;		_UART_write
  7835 ;; This function is called by:
  7836 ;;		_probarSensores
  7837 ;;		_probarUltrasonico
  7838 ;;		_visualizarPasosRealizados
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text32
  7843  00433A                     __ptext32:
  7844                           	opt callstack 0
  7845  00433A                     _UART_printf:
  7846                           	opt callstack 25
  7847  00433A                     
  7848                           ;./UART.h: 48:     while (*cadena) {
  7849  00433A  EFB3  F021         	goto	l8266
  7850  00433E                     l8262:
  7851                           
  7852                           ;./UART.h: 49:         UART_write(*cadena++);
  7853  00433E  C007  FFF6         	movff	UART_printf@cadena,tblptrl
  7854  004342  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7855  004346  6AF8               	clrf	tblptru,c
  7856  004348  0E07               	movlw	(high __ramtop+-1)
  7857  00434A  64F7               	cpfsgt	tblptrh,c
  7858  00434C  D003               	bra	u10137
  7859  00434E  0008               	tblrd		*
  7860  004350  50F5               	movf	tablat,w,c
  7861  004352  D005               	bra	u10130
  7862  004354                     u10137:
  7863  004354  CFF6 FFE9          	movff	tblptrl,fsr0l
  7864  004358  CFF7 FFEA          	movff	tblptrh,fsr0h
  7865  00435C  50EF               	movf	indf0,w,c
  7866  00435E                     u10130:
  7867  00435E  EC2A  F024         	call	_UART_write
  7868  004362  4A07               	infsnz	UART_printf@cadena^0,f,c
  7869  004364  2A08               	incf	(UART_printf@cadena+1)^0,f,c
  7870  004366                     l8266:
  7871                           
  7872                           ;./UART.h: 48:     while (*cadena) {
  7873  004366  C007  FFF6         	movff	UART_printf@cadena,tblptrl
  7874  00436A  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7875  00436E  6AF8               	clrf	tblptru,c
  7876  004370  0E07               	movlw	(high __ramtop+-1)
  7877  004372  64F7               	cpfsgt	tblptrh,c
  7878  004374  D003               	bra	u10147
  7879  004376  0008               	tblrd		*
  7880  004378  50F5               	movf	tablat,w,c
  7881  00437A  D005               	bra	u10140
  7882  00437C                     u10147:
  7883  00437C  CFF6 FFE9          	movff	tblptrl,fsr0l
  7884  004380  CFF7 FFEA          	movff	tblptrh,fsr0h
  7885  004384  50EF               	movf	indf0,w,c
  7886  004386                     u10140:
  7887  004386  0900               	iorlw	0
  7888  004388  A4D8               	btfss	status,2,c
  7889  00438A  EFC9  F021         	goto	u10151
  7890  00438E  EFCB  F021         	goto	u10150
  7891  004392                     u10151:
  7892  004392  EF9F  F021         	goto	l8262
  7893  004396                     u10150:
  7894  004396  0012               	return		;funcret
  7895  004398                     __end_of_UART_printf:
  7896                           	opt callstack 0
  7897                           
  7898 ;; *************** function _UART_write *****************
  7899 ;; Defined at:
  7900 ;;		line 42 in file "./UART.h"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;  dato            1    wreg     unsigned char 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  dato            1    5[COMRAM] unsigned char 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  1    wreg      void 
  7907 ;; Registers used:
  7908 ;;		wreg
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7914 ;;      Params:         0       0       0       0       0       0       0       0       0
  7915 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7917 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7918 ;;Total ram usage:        1 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:    2
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_UART_printf
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text33
  7929  004854                     __ptext33:
  7930                           	opt callstack 0
  7931  004854                     _UART_write:
  7932                           	opt callstack 25
  7933                           
  7934                           ;incstack = 0
  7935                           ;UART_write@dato stored from wreg
  7936  004854  6E06               	movwf	UART_write@dato^0,c
  7937  004856                     
  7938                           ;./UART.h: 43:     TXREG = dato;
  7939  004856  C006  FFAD         	movff	UART_write@dato,4013	;volatile
  7940  00485A                     l212:
  7941  00485A  A2AC               	btfss	172,1,c	;volatile
  7942  00485C  EF32  F024         	goto	u9851
  7943  004860  EF34  F024         	goto	u9850
  7944  004864                     u9851:
  7945  004864  EF2D  F024         	goto	l212
  7946  004868                     u9850:
  7947  004868  0012               	return		;funcret
  7948  00486A                     __end_of_UART_write:
  7949                           	opt callstack 0
  7950                           
  7951 ;; *************** function _leerSensores *****************
  7952 ;; Defined at:
  7953 ;;		line 846 in file "main.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;		None
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;		None
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  1    wreg      void 
  7960 ;; Registers used:
  7961 ;;		wreg, status,2, status,0, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7967 ;;      Params:         0       0       0       0       0       0       0       0       0
  7968 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7969 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7970 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7971 ;;Total ram usage:        0 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; Hardware stack levels required when called:    4
  7974 ;; This function calls:
  7975 ;;		___fladd
  7976 ;;		___fldiv
  7977 ;;		_dameDistancia
  7978 ;; This function is called by:
  7979 ;;		_probarSensores
  7980 ;;		_comportamientoBasico
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text34
  7985  0031D6                     __ptext34:
  7986                           	opt callstack 0
  7987  0031D6                     _leerSensores:
  7988                           	opt callstack 25
  7989  0031D6                     
  7990                           ;main.c: 848:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  7991  0031D6  C120  F02C         	movff	_oldSensorDerecha,___fladd@a
  7992  0031DA  C121  F02D         	movff	_oldSensorDerecha+1,___fladd@a+1
  7993  0031DE  C122  F02E         	movff	_oldSensorDerecha+2,___fladd@a+2
  7994  0031E2  C123  F02F         	movff	_oldSensorDerecha+3,___fladd@a+3
  7995  0031E6  0E03               	movlw	3
  7996  0031E8  EC5B  F01A         	call	_dameDistancia
  7997  0031EC  C01B  F028         	movff	?_dameDistancia,___fladd@b
  7998  0031F0  C01C  F029         	movff	?_dameDistancia+1,___fladd@b+1
  7999  0031F4  C01D  F02A         	movff	?_dameDistancia+2,___fladd@b+2
  8000  0031F8  C01E  F02B         	movff	?_dameDistancia+3,___fladd@b+3
  8001  0031FC  ECEA  F00C         	call	___fladd	;wreg free
  8002  003200  C028  F038         	movff	?___fladd,___fldiv@b
  8003  003204  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  8004  003208  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  8005  00320C  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  8006  003210  0E00               	movlw	0
  8007  003212  6E3C               	movwf	___fldiv@a^0,c
  8008  003214  0E00               	movlw	0
  8009  003216  6E3D               	movwf	(___fldiv@a+1)^0,c
  8010  003218  0E00               	movlw	0
  8011  00321A  6E3E               	movwf	(___fldiv@a+2)^0,c
  8012  00321C  0E40               	movlw	64
  8013  00321E  6E3F               	movwf	(___fldiv@a+3)^0,c
  8014  003220  EC60  F011         	call	___fldiv	;wreg free
  8015  003224  C038  F12C         	movff	?___fldiv,_sensorDerecha
  8016  003228  C039  F12D         	movff	?___fldiv+1,_sensorDerecha+1
  8017  00322C  C03A  F12E         	movff	?___fldiv+2,_sensorDerecha+2
  8018  003230  C03B  F12F         	movff	?___fldiv+3,_sensorDerecha+3
  8019                           
  8020                           ;main.c: 849:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2;
  8021  003234  C11C  F02C         	movff	_oldSensorIzquierda,___fladd@a
  8022  003238  C11D  F02D         	movff	_oldSensorIzquierda+1,___fladd@a+1
  8023  00323C  C11E  F02E         	movff	_oldSensorIzquierda+2,___fladd@a+2
  8024  003240  C11F  F02F         	movff	_oldSensorIzquierda+3,___fladd@a+3
  8025  003244  0E02               	movlw	2
  8026  003246  EC5B  F01A         	call	_dameDistancia
  8027  00324A  C01B  F028         	movff	?_dameDistancia,___fladd@b
  8028  00324E  C01C  F029         	movff	?_dameDistancia+1,___fladd@b+1
  8029  003252  C01D  F02A         	movff	?_dameDistancia+2,___fladd@b+2
  8030  003256  C01E  F02B         	movff	?_dameDistancia+3,___fladd@b+3
  8031  00325A  ECEA  F00C         	call	___fladd	;wreg free
  8032  00325E  C028  F038         	movff	?___fladd,___fldiv@b
  8033  003262  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  8034  003266  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  8035  00326A  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  8036  00326E  0E00               	movlw	0
  8037  003270  6E3C               	movwf	___fldiv@a^0,c
  8038  003272  0E00               	movlw	0
  8039  003274  6E3D               	movwf	(___fldiv@a+1)^0,c
  8040  003276  0E00               	movlw	0
  8041  003278  6E3E               	movwf	(___fldiv@a+2)^0,c
  8042  00327A  0E40               	movlw	64
  8043  00327C  6E3F               	movwf	(___fldiv@a+3)^0,c
  8044  00327E  EC60  F011         	call	___fldiv	;wreg free
  8045  003282  C038  F128         	movff	?___fldiv,_sensorIzquierda
  8046  003286  C039  F129         	movff	?___fldiv+1,_sensorIzquierda+1
  8047  00328A  C03A  F12A         	movff	?___fldiv+2,_sensorIzquierda+2
  8048  00328E  C03B  F12B         	movff	?___fldiv+3,_sensorIzquierda+3
  8049                           
  8050                           ;main.c: 850:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  8051  003292  C118  F02C         	movff	_oldSensorEnfrente,___fladd@a
  8052  003296  C119  F02D         	movff	_oldSensorEnfrente+1,___fladd@a+1
  8053  00329A  C11A  F02E         	movff	_oldSensorEnfrente+2,___fladd@a+2
  8054  00329E  C11B  F02F         	movff	_oldSensorEnfrente+3,___fladd@a+3
  8055  0032A2  0E01               	movlw	1
  8056  0032A4  EC5B  F01A         	call	_dameDistancia
  8057  0032A8  C01B  F028         	movff	?_dameDistancia,___fladd@b
  8058  0032AC  C01C  F029         	movff	?_dameDistancia+1,___fladd@b+1
  8059  0032B0  C01D  F02A         	movff	?_dameDistancia+2,___fladd@b+2
  8060  0032B4  C01E  F02B         	movff	?_dameDistancia+3,___fladd@b+3
  8061  0032B8  ECEA  F00C         	call	___fladd	;wreg free
  8062  0032BC  C028  F038         	movff	?___fladd,___fldiv@b
  8063  0032C0  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  8064  0032C4  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  8065  0032C8  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  8066  0032CC  0E00               	movlw	0
  8067  0032CE  6E3C               	movwf	___fldiv@a^0,c
  8068  0032D0  0E00               	movlw	0
  8069  0032D2  6E3D               	movwf	(___fldiv@a+1)^0,c
  8070  0032D4  0E00               	movlw	0
  8071  0032D6  6E3E               	movwf	(___fldiv@a+2)^0,c
  8072  0032D8  0E40               	movlw	64
  8073  0032DA  6E3F               	movwf	(___fldiv@a+3)^0,c
  8074  0032DC  EC60  F011         	call	___fldiv	;wreg free
  8075  0032E0  C038  F124         	movff	?___fldiv,_sensorEnfrente
  8076  0032E4  C039  F125         	movff	?___fldiv+1,_sensorEnfrente+1
  8077  0032E8  C03A  F126         	movff	?___fldiv+2,_sensorEnfrente+2
  8078  0032EC  C03B  F127         	movff	?___fldiv+3,_sensorEnfrente+3
  8079  0032F0                     
  8080                           ;main.c: 852:     oldSensorDerecha = sensorDerecha;
  8081  0032F0  C12C  F120         	movff	_sensorDerecha,_oldSensorDerecha
  8082  0032F4  C12D  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
  8083  0032F8  C12E  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
  8084  0032FC  C12F  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
  8085  003300                     
  8086                           ;main.c: 853:     oldSensorIzquierda = sensorIzquierda;
  8087  003300  C128  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
  8088  003304  C129  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
  8089  003308  C12A  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
  8090  00330C  C12B  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
  8091  003310                     
  8092                           ;main.c: 854:     oldSensorEnfrente = sensorEnfrente;
  8093  003310  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
  8094  003314  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
  8095  003318  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
  8096  00331C  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
  8097  003320                     
  8098                           ;main.c: 859:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
  8099  003320  C12C  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
  8100  003324  C12D  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
  8101  003328  C12E  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
  8102  00332C  C12F  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
  8103  003330                     
  8104                           ;main.c: 868:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
  8105  003330  C128  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
  8106  003334  C129  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
  8107  003338  C12A  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
  8108  00333C  C12B  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
  8109  003340                     
  8110                           ;main.c: 871:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
  8111  003340  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
  8112  003344  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
  8113  003348  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
  8114  00334C  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
  8115  003350  0012               	return		;funcret
  8116  003352                     __end_of_leerSensores:
  8117                           	opt callstack 0
  8118                           
  8119 ;; *************** function ___fladd *****************
  8120 ;; Defined at:
  8121 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;  b               4   39[COMRAM] void 
  8124 ;;  a               4   43[COMRAM] void 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;  grs             1   54[COMRAM] unsigned char 
  8127 ;;  bexp            1   53[COMRAM] unsigned char 
  8128 ;;  aexp            1   52[COMRAM] unsigned char 
  8129 ;;  signs           1   51[COMRAM] unsigned char 
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  4   39[COMRAM] unsigned char 
  8132 ;; Registers used:
  8133 ;;		wreg, status,2, status,0
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 0/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8139 ;;      Params:         8       0       0       0       0       0       0       0       0
  8140 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8141 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8142 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8143 ;;Total ram usage:       16 bytes
  8144 ;; Hardware stack levels used:    1
  8145 ;; Hardware stack levels required when called:    2
  8146 ;; This function calls:
  8147 ;;		Nothing
  8148 ;; This function is called by:
  8149 ;;		_leerSensores
  8150 ;;		_efgtoa
  8151 ;;		___flsub
  8152 ;;		_PID
  8153 ;;		_roundf
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text35
  8158  0019D4                     __ptext35:
  8159                           	opt callstack 0
  8160  0019D4                     ___fladd:
  8161                           	opt callstack 22
  8162  0019D4  502B               	movf	(___fladd@b+3)^0,w,c
  8163  0019D6  0B80               	andlw	128
  8164  0019D8  6E34               	movwf	___fladd@signs^0,c
  8165  0019DA  502B               	movf	(___fladd@b+3)^0,w,c
  8166  0019DC  242B               	addwf	(___fladd@b+3)^0,w,c
  8167  0019DE  6E36               	movwf	___fladd@bexp^0,c
  8168  0019E0  AE2A               	btfss	(___fladd@b+2)^0,7,c
  8169  0019E2  EFF5  F00C         	goto	u7291
  8170  0019E6  EFF7  F00C         	goto	u7290
  8171  0019EA                     u7291:
  8172  0019EA  EFF8  F00C         	goto	l6718
  8173  0019EE                     u7290:
  8174  0019EE  8036               	bsf	___fladd@bexp^0,0,c
  8175  0019F0                     l6718:
  8176  0019F0  5036               	movf	___fladd@bexp^0,w,c
  8177  0019F2  B4D8               	btfsc	status,2,c
  8178  0019F4  EFFE  F00C         	goto	u7301
  8179  0019F8  EF00  F00D         	goto	u7300
  8180  0019FC                     u7301:
  8181  0019FC  EF15  F00D         	goto	l6728
  8182  001A00                     u7300:
  8183  001A00  2836               	incf	___fladd@bexp^0,w,c
  8184  001A02  A4D8               	btfss	status,2,c
  8185  001A04  EF06  F00D         	goto	u7311
  8186  001A08  EF08  F00D         	goto	u7310
  8187  001A0C                     u7311:
  8188  001A0C  EF10  F00D         	goto	l6724
  8189  001A10                     u7310:
  8190  001A10  0E00               	movlw	0
  8191  001A12  6E28               	movwf	___fladd@b^0,c
  8192  001A14  0E00               	movlw	0
  8193  001A16  6E29               	movwf	(___fladd@b+1)^0,c
  8194  001A18  0E00               	movlw	0
  8195  001A1A  6E2A               	movwf	(___fladd@b+2)^0,c
  8196  001A1C  0E00               	movlw	0
  8197  001A1E  6E2B               	movwf	(___fladd@b+3)^0,c
  8198  001A20                     l6724:
  8199  001A20  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8200  001A22  0E00               	movlw	0
  8201  001A24  6E2B               	movwf	(___fladd@b+3)^0,c
  8202  001A26  EF1D  F00D         	goto	l6730
  8203  001A2A                     l6728:
  8204  001A2A  0E00               	movlw	0
  8205  001A2C  6E28               	movwf	___fladd@b^0,c
  8206  001A2E  0E00               	movlw	0
  8207  001A30  6E29               	movwf	(___fladd@b+1)^0,c
  8208  001A32  0E00               	movlw	0
  8209  001A34  6E2A               	movwf	(___fladd@b+2)^0,c
  8210  001A36  0E00               	movlw	0
  8211  001A38  6E2B               	movwf	(___fladd@b+3)^0,c
  8212  001A3A                     l6730:
  8213  001A3A  502F               	movf	(___fladd@a+3)^0,w,c
  8214  001A3C  0B80               	andlw	128
  8215  001A3E  6E35               	movwf	___fladd@aexp^0,c
  8216  001A40  5034               	movf	___fladd@signs^0,w,c
  8217  001A42  1835               	xorwf	___fladd@aexp^0,w,c
  8218  001A44  B4D8               	btfsc	status,2,c
  8219  001A46  EF27  F00D         	goto	u7321
  8220  001A4A  EF29  F00D         	goto	u7320
  8221  001A4E                     u7321:
  8222  001A4E  EF2A  F00D         	goto	l6736
  8223  001A52                     u7320:
  8224  001A52  8C34               	bsf	___fladd@signs^0,6,c
  8225  001A54                     l6736:
  8226  001A54  502F               	movf	(___fladd@a+3)^0,w,c
  8227  001A56  242F               	addwf	(___fladd@a+3)^0,w,c
  8228  001A58  6E35               	movwf	___fladd@aexp^0,c
  8229  001A5A  AE2E               	btfss	(___fladd@a+2)^0,7,c
  8230  001A5C  EF32  F00D         	goto	u7331
  8231  001A60  EF34  F00D         	goto	u7330
  8232  001A64                     u7331:
  8233  001A64  EF35  F00D         	goto	l6742
  8234  001A68                     u7330:
  8235  001A68  8035               	bsf	___fladd@aexp^0,0,c
  8236  001A6A                     l6742:
  8237  001A6A  5035               	movf	___fladd@aexp^0,w,c
  8238  001A6C  B4D8               	btfsc	status,2,c
  8239  001A6E  EF3B  F00D         	goto	u7341
  8240  001A72  EF3D  F00D         	goto	u7340
  8241  001A76                     u7341:
  8242  001A76  EF52  F00D         	goto	l6752
  8243  001A7A                     u7340:
  8244  001A7A  2835               	incf	___fladd@aexp^0,w,c
  8245  001A7C  A4D8               	btfss	status,2,c
  8246  001A7E  EF43  F00D         	goto	u7351
  8247  001A82  EF45  F00D         	goto	u7350
  8248  001A86                     u7351:
  8249  001A86  EF4D  F00D         	goto	l6748
  8250  001A8A                     u7350:
  8251  001A8A  0E00               	movlw	0
  8252  001A8C  6E2C               	movwf	___fladd@a^0,c
  8253  001A8E  0E00               	movlw	0
  8254  001A90  6E2D               	movwf	(___fladd@a+1)^0,c
  8255  001A92  0E00               	movlw	0
  8256  001A94  6E2E               	movwf	(___fladd@a+2)^0,c
  8257  001A96  0E00               	movlw	0
  8258  001A98  6E2F               	movwf	(___fladd@a+3)^0,c
  8259  001A9A                     l6748:
  8260  001A9A  8E2E               	bsf	(___fladd@a+2)^0,7,c
  8261  001A9C  0E00               	movlw	0
  8262  001A9E  6E2F               	movwf	(___fladd@a+3)^0,c
  8263  001AA0  EF5A  F00D         	goto	l6754
  8264  001AA4                     l6752:
  8265  001AA4  0E00               	movlw	0
  8266  001AA6  6E2C               	movwf	___fladd@a^0,c
  8267  001AA8  0E00               	movlw	0
  8268  001AAA  6E2D               	movwf	(___fladd@a+1)^0,c
  8269  001AAC  0E00               	movlw	0
  8270  001AAE  6E2E               	movwf	(___fladd@a+2)^0,c
  8271  001AB0  0E00               	movlw	0
  8272  001AB2  6E2F               	movwf	(___fladd@a+3)^0,c
  8273  001AB4                     l6754:
  8274  001AB4  5036               	movf	___fladd@bexp^0,w,c
  8275  001AB6  5C35               	subwf	___fladd@aexp^0,w,c
  8276  001AB8  B0D8               	btfsc	status,0,c
  8277  001ABA  EF61  F00D         	goto	u7361
  8278  001ABE  EF63  F00D         	goto	u7360
  8279  001AC2                     u7361:
  8280  001AC2  EF8A  F00D         	goto	l6790
  8281  001AC6                     u7360:
  8282  001AC6  AC34               	btfss	___fladd@signs^0,6,c
  8283  001AC8  EF68  F00D         	goto	u7371
  8284  001ACC  EF6A  F00D         	goto	u7370
  8285  001AD0                     u7371:
  8286  001AD0  EF6C  F00D         	goto	l6760
  8287  001AD4                     u7370:
  8288  001AD4  0E80               	movlw	128
  8289  001AD6  1A34               	xorwf	___fladd@signs^0,f,c
  8290  001AD8                     l6760:
  8291  001AD8  C036  F037         	movff	___fladd@bexp,___fladd@grs
  8292  001ADC  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  8293  001AE0  C037  F035         	movff	___fladd@grs,___fladd@aexp
  8294  001AE4  C028  F037         	movff	___fladd@b,___fladd@grs
  8295  001AE8  C02C  F028         	movff	___fladd@a,___fladd@b
  8296  001AEC  C037  F02C         	movff	___fladd@grs,___fladd@a
  8297  001AF0  C029  F037         	movff	___fladd@b+1,___fladd@grs
  8298  001AF4  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  8299  001AF8  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  8300  001AFC  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  8301  001B00  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  8302  001B04  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  8303  001B08  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  8304  001B0C  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  8305  001B10  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  8306  001B14                     l6790:
  8307  001B14  0E00               	movlw	0
  8308  001B16  6E37               	movwf	___fladd@grs^0,c
  8309  001B18  5036               	movf	___fladd@bexp^0,w,c
  8310  001B1A  C035  F030         	movff	___fladd@aexp,??___fladd
  8311  001B1E  6A31               	clrf	(??___fladd+1)^0,c
  8312  001B20  5E30               	subwf	??___fladd^0,f,c
  8313  001B22  0E00               	movlw	0
  8314  001B24  5A31               	subwfb	(??___fladd+1)^0,f,c
  8315  001B26  BE31               	btfsc	(??___fladd+1)^0,7,c
  8316  001B28  EF9F  F00D         	goto	u7381
  8317  001B2C  5031               	movf	(??___fladd+1)^0,w,c
  8318  001B2E  E109               	bnz	u7380
  8319  001B30  0E1A               	movlw	26
  8320  001B32  5C30               	subwf	??___fladd^0,w,c
  8321  001B34  A0D8               	btfss	status,0,c
  8322  001B36  EF9F  F00D         	goto	u7381
  8323  001B3A  EFA1  F00D         	goto	u7380
  8324  001B3E                     u7381:
  8325  001B3E  EFD8  F00D         	goto	l1313
  8326  001B42                     u7380:
  8327  001B42  5028               	movf	___fladd@b^0,w,c
  8328  001B44  1029               	iorwf	(___fladd@b+1)^0,w,c
  8329  001B46  102A               	iorwf	(___fladd@b+2)^0,w,c
  8330  001B48  102B               	iorwf	(___fladd@b+3)^0,w,c
  8331  001B4A  A4D8               	btfss	status,2,c
  8332  001B4C  EFAA  F00D         	goto	u7391
  8333  001B50  EFAD  F00D         	goto	u7390
  8334  001B54                     u7391:
  8335  001B54  0E01               	movlw	1
  8336  001B56  EFAE  F00D         	goto	u7400
  8337  001B5A                     u7390:
  8338  001B5A  0E00               	movlw	0
  8339  001B5C                     u7400:
  8340  001B5C  6E37               	movwf	___fladd@grs^0,c
  8341  001B5E  0E00               	movlw	0
  8342  001B60  6E28               	movwf	___fladd@b^0,c
  8343  001B62  0E00               	movlw	0
  8344  001B64  6E29               	movwf	(___fladd@b+1)^0,c
  8345  001B66  0E00               	movlw	0
  8346  001B68  6E2A               	movwf	(___fladd@b+2)^0,c
  8347  001B6A  0E00               	movlw	0
  8348  001B6C  6E2B               	movwf	(___fladd@b+3)^0,c
  8349  001B6E  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  8350  001B72  EFE1  F00D         	goto	l1312
  8351  001B76                     l1314:
  8352  001B76  A037               	btfss	___fladd@grs^0,0,c
  8353  001B78  EFC0  F00D         	goto	u7411
  8354  001B7C  EFC2  F00D         	goto	u7410
  8355  001B80                     u7411:
  8356  001B80  EFC8  F00D         	goto	l6802
  8357  001B84                     u7410:
  8358  001B84  90D8               	bcf	status,0,c
  8359  001B86  3037               	rrcf	___fladd@grs^0,w,c
  8360  001B88  0901               	iorlw	1
  8361  001B8A  6E37               	movwf	___fladd@grs^0,c
  8362  001B8C  EFCA  F00D         	goto	l6804
  8363  001B90                     l6802:
  8364  001B90  90D8               	bcf	status,0,c
  8365  001B92  3237               	rrcf	___fladd@grs^0,f,c
  8366  001B94                     l6804:
  8367  001B94  A028               	btfss	___fladd@b^0,0,c
  8368  001B96  EFCF  F00D         	goto	u7421
  8369  001B9A  EFD1  F00D         	goto	u7420
  8370  001B9E                     u7421:
  8371  001B9E  EFD2  F00D         	goto	l6808
  8372  001BA2                     u7420:
  8373  001BA2  8E37               	bsf	___fladd@grs^0,7,c
  8374  001BA4                     l6808:
  8375  001BA4  342B               	rlcf	(___fladd@b+3)^0,w,c
  8376  001BA6  322B               	rrcf	(___fladd@b+3)^0,f,c
  8377  001BA8  322A               	rrcf	(___fladd@b+2)^0,f,c
  8378  001BAA  3229               	rrcf	(___fladd@b+1)^0,f,c
  8379  001BAC  3228               	rrcf	___fladd@b^0,f,c
  8380  001BAE  2A36               	incf	___fladd@bexp^0,f,c
  8381  001BB0                     l1313:
  8382  001BB0  5035               	movf	___fladd@aexp^0,w,c
  8383  001BB2  5C36               	subwf	___fladd@bexp^0,w,c
  8384  001BB4  A0D8               	btfss	status,0,c
  8385  001BB6  EFDF  F00D         	goto	u7431
  8386  001BBA  EFE1  F00D         	goto	u7430
  8387  001BBE                     u7431:
  8388  001BBE  EFBB  F00D         	goto	l1314
  8389  001BC2                     u7430:
  8390  001BC2                     l1312:
  8391  001BC2  BC34               	btfsc	___fladd@signs^0,6,c
  8392  001BC4  EFE6  F00D         	goto	u7441
  8393  001BC8  EFE8  F00D         	goto	u7440
  8394  001BCC                     u7441:
  8395  001BCC  EF28  F00E         	goto	l6836
  8396  001BD0                     u7440:
  8397  001BD0  5036               	movf	___fladd@bexp^0,w,c
  8398  001BD2  A4D8               	btfss	status,2,c
  8399  001BD4  EFEE  F00D         	goto	u7451
  8400  001BD8  EFF0  F00D         	goto	u7450
  8401  001BDC                     u7451:
  8402  001BDC  EFFA  F00D         	goto	l6818
  8403  001BE0                     u7450:
  8404  001BE0  0E00               	movlw	0
  8405  001BE2  6E28               	movwf	?___fladd^0,c
  8406  001BE4  0E00               	movlw	0
  8407  001BE6  6E29               	movwf	(?___fladd+1)^0,c
  8408  001BE8  0E00               	movlw	0
  8409  001BEA  6E2A               	movwf	(?___fladd+2)^0,c
  8410  001BEC  0E00               	movlw	0
  8411  001BEE  6E2B               	movwf	(?___fladd+3)^0,c
  8412  001BF0  EF49  F00F         	goto	l1321
  8413  001BF4                     l6818:
  8414  001BF4  502C               	movf	___fladd@a^0,w,c
  8415  001BF6  2628               	addwf	___fladd@b^0,f,c
  8416  001BF8  502D               	movf	(___fladd@a+1)^0,w,c
  8417  001BFA  2229               	addwfc	(___fladd@b+1)^0,f,c
  8418  001BFC  502E               	movf	(___fladd@a+2)^0,w,c
  8419  001BFE  222A               	addwfc	(___fladd@b+2)^0,f,c
  8420  001C00  502F               	movf	(___fladd@a+3)^0,w,c
  8421  001C02  222B               	addwfc	(___fladd@b+3)^0,f,c
  8422  001C04  A02B               	btfss	(___fladd@b+3)^0,0,c
  8423  001C06  EF07  F00E         	goto	u7461
  8424  001C0A  EF09  F00E         	goto	u7460
  8425  001C0E                     u7461:
  8426  001C0E  EFB5  F00E         	goto	l6872
  8427  001C12                     u7460:
  8428  001C12  A037               	btfss	___fladd@grs^0,0,c
  8429  001C14  EF0E  F00E         	goto	u7471
  8430  001C18  EF10  F00E         	goto	u7470
  8431  001C1C                     u7471:
  8432  001C1C  EF16  F00E         	goto	l6826
  8433  001C20                     u7470:
  8434  001C20  90D8               	bcf	status,0,c
  8435  001C22  3037               	rrcf	___fladd@grs^0,w,c
  8436  001C24  0901               	iorlw	1
  8437  001C26  6E37               	movwf	___fladd@grs^0,c
  8438  001C28  EF18  F00E         	goto	l6828
  8439  001C2C                     l6826:
  8440  001C2C  90D8               	bcf	status,0,c
  8441  001C2E  3237               	rrcf	___fladd@grs^0,f,c
  8442  001C30                     l6828:
  8443  001C30  A028               	btfss	___fladd@b^0,0,c
  8444  001C32  EF1D  F00E         	goto	u7481
  8445  001C36  EF1F  F00E         	goto	u7480
  8446  001C3A                     u7481:
  8447  001C3A  EF20  F00E         	goto	l6832
  8448  001C3E                     u7480:
  8449  001C3E  8E37               	bsf	___fladd@grs^0,7,c
  8450  001C40                     l6832:
  8451  001C40  342B               	rlcf	(___fladd@b+3)^0,w,c
  8452  001C42  322B               	rrcf	(___fladd@b+3)^0,f,c
  8453  001C44  322A               	rrcf	(___fladd@b+2)^0,f,c
  8454  001C46  3229               	rrcf	(___fladd@b+1)^0,f,c
  8455  001C48  3228               	rrcf	___fladd@b^0,f,c
  8456  001C4A  2A36               	incf	___fladd@bexp^0,f,c
  8457  001C4C  EFB5  F00E         	goto	l6872
  8458  001C50                     l6836:
  8459  001C50  502C               	movf	___fladd@a^0,w,c
  8460  001C52  5C28               	subwf	___fladd@b^0,w,c
  8461  001C54  502D               	movf	(___fladd@a+1)^0,w,c
  8462  001C56  5829               	subwfb	(___fladd@b+1)^0,w,c
  8463  001C58  502E               	movf	(___fladd@a+2)^0,w,c
  8464  001C5A  582A               	subwfb	(___fladd@b+2)^0,w,c
  8465  001C5C  502B               	movf	(___fladd@b+3)^0,w,c
  8466  001C5E  0A80               	xorlw	128
  8467  001C60  6E30               	movwf	??___fladd^0,c
  8468  001C62  502F               	movf	(___fladd@a+3)^0,w,c
  8469  001C64  0A80               	xorlw	128
  8470  001C66  5830               	subwfb	??___fladd^0,w,c
  8471  001C68  B0D8               	btfsc	status,0,c
  8472  001C6A  EF39  F00E         	goto	u7491
  8473  001C6E  EF3B  F00E         	goto	u7490
  8474  001C72                     u7491:
  8475  001C72  EF66  F00E         	goto	l6846
  8476  001C76                     u7490:
  8477  001C76  5028               	movf	___fladd@b^0,w,c
  8478  001C78  5C2C               	subwf	___fladd@a^0,w,c
  8479  001C7A  6E30               	movwf	??___fladd^0,c
  8480  001C7C  5029               	movf	(___fladd@b+1)^0,w,c
  8481  001C7E  582D               	subwfb	(___fladd@a+1)^0,w,c
  8482  001C80  6E31               	movwf	(??___fladd+1)^0,c
  8483  001C82  502A               	movf	(___fladd@b+2)^0,w,c
  8484  001C84  582E               	subwfb	(___fladd@a+2)^0,w,c
  8485  001C86  6E32               	movwf	(??___fladd+2)^0,c
  8486  001C88  502B               	movf	(___fladd@b+3)^0,w,c
  8487  001C8A  582F               	subwfb	(___fladd@a+3)^0,w,c
  8488  001C8C  6E33               	movwf	(??___fladd+3)^0,c
  8489  001C8E  0EFF               	movlw	255
  8490  001C90  2430               	addwf	??___fladd^0,w,c
  8491  001C92  6E28               	movwf	___fladd@b^0,c
  8492  001C94  0EFF               	movlw	255
  8493  001C96  2031               	addwfc	(??___fladd+1)^0,w,c
  8494  001C98  6E29               	movwf	(___fladd@b+1)^0,c
  8495  001C9A  0EFF               	movlw	255
  8496  001C9C  2032               	addwfc	(??___fladd+2)^0,w,c
  8497  001C9E  6E2A               	movwf	(___fladd@b+2)^0,c
  8498  001CA0  0EFF               	movlw	255
  8499  001CA2  2033               	addwfc	(??___fladd+3)^0,w,c
  8500  001CA4  6E2B               	movwf	(___fladd@b+3)^0,c
  8501  001CA6  0E80               	movlw	128
  8502  001CA8  1A34               	xorwf	___fladd@signs^0,f,c
  8503  001CAA  6C37               	negf	___fladd@grs^0,c
  8504  001CAC  5037               	movf	___fladd@grs^0,w,c
  8505  001CAE  A4D8               	btfss	status,2,c
  8506  001CB0  EF5C  F00E         	goto	u7501
  8507  001CB4  EF5E  F00E         	goto	u7500
  8508  001CB8                     u7501:
  8509  001CB8  EF6E  F00E         	goto	l1329
  8510  001CBC                     u7500:
  8511  001CBC  0E01               	movlw	1
  8512  001CBE  2628               	addwf	___fladd@b^0,f,c
  8513  001CC0  0E00               	movlw	0
  8514  001CC2  2229               	addwfc	(___fladd@b+1)^0,f,c
  8515  001CC4  222A               	addwfc	(___fladd@b+2)^0,f,c
  8516  001CC6  222B               	addwfc	(___fladd@b+3)^0,f,c
  8517  001CC8  EF6E  F00E         	goto	l1329
  8518  001CCC                     l6846:
  8519  001CCC  502C               	movf	___fladd@a^0,w,c
  8520  001CCE  5E28               	subwf	___fladd@b^0,f,c
  8521  001CD0  502D               	movf	(___fladd@a+1)^0,w,c
  8522  001CD2  5A29               	subwfb	(___fladd@b+1)^0,f,c
  8523  001CD4  502E               	movf	(___fladd@a+2)^0,w,c
  8524  001CD6  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  8525  001CD8  502F               	movf	(___fladd@a+3)^0,w,c
  8526  001CDA  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  8527  001CDC                     l1329:
  8528  001CDC  5028               	movf	___fladd@b^0,w,c
  8529  001CDE  1029               	iorwf	(___fladd@b+1)^0,w,c
  8530  001CE0  102A               	iorwf	(___fladd@b+2)^0,w,c
  8531  001CE2  102B               	iorwf	(___fladd@b+3)^0,w,c
  8532  001CE4  A4D8               	btfss	status,2,c
  8533  001CE6  EF77  F00E         	goto	u7511
  8534  001CEA  EF79  F00E         	goto	u7510
  8535  001CEE                     u7511:
  8536  001CEE  EFAE  F00E         	goto	l6870
  8537  001CF2                     u7510:
  8538  001CF2  5037               	movf	___fladd@grs^0,w,c
  8539  001CF4  A4D8               	btfss	status,2,c
  8540  001CF6  EF7F  F00E         	goto	u7521
  8541  001CFA  EF81  F00E         	goto	u7520
  8542  001CFE                     u7521:
  8543  001CFE  EFAE  F00E         	goto	l6870
  8544  001D02                     u7520:
  8545  001D02  0E00               	movlw	0
  8546  001D04  6E28               	movwf	?___fladd^0,c
  8547  001D06  0E00               	movlw	0
  8548  001D08  6E29               	movwf	(?___fladd+1)^0,c
  8549  001D0A  0E00               	movlw	0
  8550  001D0C  6E2A               	movwf	(?___fladd+2)^0,c
  8551  001D0E  0E00               	movlw	0
  8552  001D10  6E2B               	movwf	(?___fladd+3)^0,c
  8553  001D12  EF49  F00F         	goto	l1321
  8554  001D16                     l6854:
  8555  001D16  90D8               	bcf	status,0,c
  8556  001D18  3628               	rlcf	___fladd@b^0,f,c
  8557  001D1A  3629               	rlcf	(___fladd@b+1)^0,f,c
  8558  001D1C  362A               	rlcf	(___fladd@b+2)^0,f,c
  8559  001D1E  362B               	rlcf	(___fladd@b+3)^0,f,c
  8560  001D20  AE37               	btfss	___fladd@grs^0,7,c
  8561  001D22  EF95  F00E         	goto	u7531
  8562  001D26  EF97  F00E         	goto	u7530
  8563  001D2A                     u7531:
  8564  001D2A  EF98  F00E         	goto	l6860
  8565  001D2E                     u7530:
  8566  001D2E  8028               	bsf	___fladd@b^0,0,c
  8567  001D30                     l6860:
  8568  001D30  A037               	btfss	___fladd@grs^0,0,c
  8569  001D32  EF9D  F00E         	goto	u7541
  8570  001D36  EF9F  F00E         	goto	u7540
  8571  001D3A                     u7541:
  8572  001D3A  EFA3  F00E         	goto	l6864
  8573  001D3E                     u7540:
  8574  001D3E  80D8               	bsf	status,0,c
  8575  001D40  3637               	rlcf	___fladd@grs^0,f,c
  8576  001D42  EFA5  F00E         	goto	l6866
  8577  001D46                     l6864:
  8578  001D46  90D8               	bcf	status,0,c
  8579  001D48  3637               	rlcf	___fladd@grs^0,f,c
  8580  001D4A                     l6866:
  8581  001D4A  5036               	movf	___fladd@bexp^0,w,c
  8582  001D4C  B4D8               	btfsc	status,2,c
  8583  001D4E  EFAB  F00E         	goto	u7551
  8584  001D52  EFAD  F00E         	goto	u7550
  8585  001D56                     u7551:
  8586  001D56  EFAE  F00E         	goto	l6870
  8587  001D5A                     u7550:
  8588  001D5A  0636               	decf	___fladd@bexp^0,f,c
  8589  001D5C                     l6870:
  8590  001D5C  AE2A               	btfss	(___fladd@b+2)^0,7,c
  8591  001D5E  EFB3  F00E         	goto	u7561
  8592  001D62  EFB5  F00E         	goto	u7560
  8593  001D66                     u7561:
  8594  001D66  EF8B  F00E         	goto	l6854
  8595  001D6A                     u7560:
  8596  001D6A                     l6872:
  8597  001D6A  0E00               	movlw	0
  8598  001D6C  6E35               	movwf	___fladd@aexp^0,c
  8599  001D6E  AE37               	btfss	___fladd@grs^0,7,c
  8600  001D70  EFBC  F00E         	goto	u7571
  8601  001D74  EFBE  F00E         	goto	u7570
  8602  001D78                     u7571:
  8603  001D78  EFD6  F00E         	goto	l1338
  8604  001D7C                     u7570:
  8605  001D7C  C037  F030         	movff	___fladd@grs,??___fladd
  8606  001D80  0E7F               	movlw	127
  8607  001D82  1630               	andwf	??___fladd^0,f,c
  8608  001D84  B4D8               	btfsc	status,2,c
  8609  001D86  EFC7  F00E         	goto	u7581
  8610  001D8A  EFC9  F00E         	goto	u7580
  8611  001D8E                     u7581:
  8612  001D8E  EFCD  F00E         	goto	l1339
  8613  001D92                     u7580:
  8614  001D92                     l6878:
  8615  001D92  0E01               	movlw	1
  8616  001D94  6E35               	movwf	___fladd@aexp^0,c
  8617  001D96  EFD6  F00E         	goto	l1338
  8618  001D9A                     l1339:
  8619  001D9A  A028               	btfss	___fladd@b^0,0,c
  8620  001D9C  EFD2  F00E         	goto	u7591
  8621  001DA0  EFD4  F00E         	goto	u7590
  8622  001DA4                     u7591:
  8623  001DA4  EFD6  F00E         	goto	l1338
  8624  001DA8                     u7590:
  8625  001DA8  EFC9  F00E         	goto	l6878
  8626  001DAC                     l1338:
  8627  001DAC  5035               	movf	___fladd@aexp^0,w,c
  8628  001DAE  B4D8               	btfsc	status,2,c
  8629  001DB0  EFDC  F00E         	goto	u7601
  8630  001DB4  EFDE  F00E         	goto	u7600
  8631  001DB8                     u7601:
  8632  001DB8  EF09  F00F         	goto	l6890
  8633  001DBC                     u7600:
  8634  001DBC  0E01               	movlw	1
  8635  001DBE  2628               	addwf	___fladd@b^0,f,c
  8636  001DC0  0E00               	movlw	0
  8637  001DC2  2229               	addwfc	(___fladd@b+1)^0,f,c
  8638  001DC4  222A               	addwfc	(___fladd@b+2)^0,f,c
  8639  001DC6  222B               	addwfc	(___fladd@b+3)^0,f,c
  8640  001DC8  A02B               	btfss	(___fladd@b+3)^0,0,c
  8641  001DCA  EFE9  F00E         	goto	u7611
  8642  001DCE  EFEB  F00E         	goto	u7610
  8643  001DD2                     u7611:
  8644  001DD2  EF09  F00F         	goto	l6890
  8645  001DD6                     u7610:
  8646  001DD6  C028  F030         	movff	___fladd@b,??___fladd
  8647  001DDA  C029  F031         	movff	___fladd@b+1,??___fladd+1
  8648  001DDE  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  8649  001DE2  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  8650  001DE6  3433               	rlcf	(??___fladd+3)^0,w,c
  8651  001DE8  3233               	rrcf	(??___fladd+3)^0,f,c
  8652  001DEA  3232               	rrcf	(??___fladd+2)^0,f,c
  8653  001DEC  3231               	rrcf	(??___fladd+1)^0,f,c
  8654  001DEE  3230               	rrcf	??___fladd^0,f,c
  8655  001DF0  C030  F028         	movff	??___fladd,___fladd@b
  8656  001DF4  C031  F029         	movff	??___fladd+1,___fladd@b+1
  8657  001DF8  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  8658  001DFC  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  8659  001E00  2836               	incf	___fladd@bexp^0,w,c
  8660  001E02  B4D8               	btfsc	status,2,c
  8661  001E04  EF06  F00F         	goto	u7621
  8662  001E08  EF08  F00F         	goto	u7620
  8663  001E0C                     u7621:
  8664  001E0C  EF09  F00F         	goto	l6890
  8665  001E10                     u7620:
  8666  001E10  2A36               	incf	___fladd@bexp^0,f,c
  8667  001E12                     l6890:
  8668  001E12  2836               	incf	___fladd@bexp^0,w,c
  8669  001E14  B4D8               	btfsc	status,2,c
  8670  001E16  EF0F  F00F         	goto	u7631
  8671  001E1A  EF11  F00F         	goto	u7630
  8672  001E1E                     u7631:
  8673  001E1E  EF19  F00F         	goto	l6894
  8674  001E22                     u7630:
  8675  001E22  5036               	movf	___fladd@bexp^0,w,c
  8676  001E24  A4D8               	btfss	status,2,c
  8677  001E26  EF17  F00F         	goto	u7641
  8678  001E2A  EF19  F00F         	goto	u7640
  8679  001E2E                     u7641:
  8680  001E2E  EF2B  F00F         	goto	l6898
  8681  001E32                     u7640:
  8682  001E32                     l6894:
  8683  001E32  0E00               	movlw	0
  8684  001E34  6E28               	movwf	___fladd@b^0,c
  8685  001E36  0E00               	movlw	0
  8686  001E38  6E29               	movwf	(___fladd@b+1)^0,c
  8687  001E3A  0E00               	movlw	0
  8688  001E3C  6E2A               	movwf	(___fladd@b+2)^0,c
  8689  001E3E  0E00               	movlw	0
  8690  001E40  6E2B               	movwf	(___fladd@b+3)^0,c
  8691  001E42  5036               	movf	___fladd@bexp^0,w,c
  8692  001E44  A4D8               	btfss	status,2,c
  8693  001E46  EF27  F00F         	goto	u7651
  8694  001E4A  EF29  F00F         	goto	u7650
  8695  001E4E                     u7651:
  8696  001E4E  EF2B  F00F         	goto	l6898
  8697  001E52                     u7650:
  8698  001E52  0E00               	movlw	0
  8699  001E54  6E34               	movwf	___fladd@signs^0,c
  8700  001E56                     l6898:
  8701  001E56  A036               	btfss	___fladd@bexp^0,0,c
  8702  001E58  EF30  F00F         	goto	u7661
  8703  001E5C  EF32  F00F         	goto	u7660
  8704  001E60                     u7661:
  8705  001E60  EF35  F00F         	goto	l6902
  8706  001E64                     u7660:
  8707  001E64  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8708  001E66  EF36  F00F         	goto	l6904
  8709  001E6A                     l6902:
  8710  001E6A  9E2A               	bcf	(___fladd@b+2)^0,7,c
  8711  001E6C                     l6904:
  8712  001E6C  90D8               	bcf	status,0,c
  8713  001E6E  3036               	rrcf	___fladd@bexp^0,w,c
  8714  001E70  6E2B               	movwf	(___fladd@b+3)^0,c
  8715  001E72  AE34               	btfss	___fladd@signs^0,7,c
  8716  001E74  EF3E  F00F         	goto	u7671
  8717  001E78  EF40  F00F         	goto	u7670
  8718  001E7C                     u7671:
  8719  001E7C  EF41  F00F         	goto	l6910
  8720  001E80                     u7670:
  8721  001E80  8E2B               	bsf	(___fladd@b+3)^0,7,c
  8722  001E82                     l6910:
  8723  001E82  C028  F028         	movff	___fladd@b,?___fladd
  8724  001E86  C029  F029         	movff	___fladd@b+1,?___fladd+1
  8725  001E8A  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  8726  001E8E  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  8727  001E92                     l1321:
  8728  001E92  0012               	return		;funcret
  8729  001E94                     __end_of___fladd:
  8730                           	opt callstack 0
  8731                           
  8732 ;; *************** function _dameLecturaAdc *****************
  8733 ;; Defined at:
  8734 ;;		line 12 in file "./adc.h"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  canalLeer       1    wreg     unsigned char 
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;  canalLeer       1    9[COMRAM] unsigned char 
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  2    5[COMRAM] short 
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8748 ;;      Params:         2       0       0       0       0       0       0       0       0
  8749 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8750 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8751 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8752 ;;Total ram usage:        5 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:    2
  8755 ;; This function calls:
  8756 ;;		Nothing
  8757 ;; This function is called by:
  8758 ;;		_probarSensores
  8759 ;;		_seLlegoAlDestino
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	text36
  8764  00462A                     __ptext36:
  8765                           	opt callstack 0
  8766  00462A                     _dameLecturaAdc:
  8767                           	opt callstack 27
  8768                           
  8769                           ;incstack = 0
  8770                           ;dameLecturaAdc@canalLeer stored from wreg
  8771  00462A  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
  8772  00462C                     
  8773                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  8774  00462C  0E06               	movlw	6
  8775  00462E                     u10787:
  8776  00462E  2EE8               	decfsz	wreg,f,c
  8777  004630  D7FE               	bra	u10787
  8778  004632  D000               	nop2	
  8779  004634                     
  8780                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
  8781  004634  80C2               	bsf	194,0,c	;volatile
  8782  004636                     
  8783                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
  8784  004636  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
  8785  00463A  4608               	rlncf	??_dameLecturaAdc^0,f,c
  8786  00463C  4608               	rlncf	??_dameLecturaAdc^0,f,c
  8787  00463E  50C2               	movf	194,w,c	;volatile
  8788  004640  1808               	xorwf	??_dameLecturaAdc^0,w,c
  8789  004642  0BC3               	andlw	-61
  8790  004644  1808               	xorwf	??_dameLecturaAdc^0,w,c
  8791  004646  6EC2               	movwf	194,c	;volatile
  8792  004648                     
  8793                           ;./adc.h: 18:     ADCON0bits.GO = 1;
  8794  004648  82C2               	bsf	194,1,c	;volatile
  8795  00464A                     
  8796                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
  8797  00464A  82C2               	bsf	194,1,c	;volatile
  8798  00464C                     l227:
  8799  00464C  B2C2               	btfsc	194,1,c	;volatile
  8800  00464E  EF2B  F023         	goto	u10161
  8801  004652  EF2D  F023         	goto	u10160
  8802  004656                     u10161:
  8803  004656  EF26  F023         	goto	l227
  8804  00465A                     u10160:
  8805  00465A                     
  8806                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
  8807  00465A  90C2               	bcf	194,0,c	;volatile
  8808  00465C                     
  8809                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
  8810  00465C  50C4               	movf	196,w,c	;volatile
  8811  00465E  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
  8812  004660  6A08               	clrf	??_dameLecturaAdc^0,c
  8813  004662  50C3               	movf	195,w,c	;volatile
  8814  004664  2408               	addwf	??_dameLecturaAdc^0,w,c
  8815  004666  6E06               	movwf	?_dameLecturaAdc^0,c
  8816  004668  0E00               	movlw	0
  8817  00466A  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
  8818  00466C  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
  8819  00466E  0012               	return		;funcret
  8820  004670                     __end_of_dameLecturaAdc:
  8821                           	opt callstack 0
  8822                           
  8823 ;; *************** function _inicializarComportamientoBasico *****************
  8824 ;; Defined at:
  8825 ;;		line 213 in file "main.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;		None
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;		None
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      void 
  8832 ;; Registers used:
  8833 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8839 ;;      Params:         0       0       0       0       0       0       0       0       0
  8840 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8842 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8843 ;;Total ram usage:        0 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:    6
  8846 ;; This function calls:
  8847 ;;		_dameDistancia
  8848 ;;		_velocidadEstandar
  8849 ;; This function is called by:
  8850 ;;		_main
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text37
  8855  004594                     __ptext37:
  8856                           	opt callstack 0
  8857  004594                     _inicializarComportamientoBasico:
  8858                           	opt callstack 24
  8859  004594                     
  8860                           ;main.c: 215:     mouse.curr_state = ENFRENTE;
  8861  004594  0E01               	movlw	1
  8862  004596  0101               	movlb	1	; () banked
  8863  004598  6F36               	movwf	_mouse& (0+255),b
  8864  00459A                     
  8865                           ; BSR set to: 1
  8866                           ;main.c: 217:     oldSensorDerecha = dameDistancia(DERECHA);
  8867  00459A  0E03               	movlw	3
  8868  00459C  EC5B  F01A         	call	_dameDistancia
  8869  0045A0  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
  8870  0045A4  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  8871  0045A8  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  8872  0045AC  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  8873  0045B0                     
  8874                           ;main.c: 218:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  8875  0045B0  0E02               	movlw	2
  8876  0045B2  EC5B  F01A         	call	_dameDistancia
  8877  0045B6  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  8878  0045BA  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  8879  0045BE  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  8880  0045C2  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  8881  0045C6                     
  8882                           ;main.c: 219:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  8883  0045C6  0E01               	movlw	1
  8884  0045C8  EC5B  F01A         	call	_dameDistancia
  8885  0045CC  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  8886  0045D0  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  8887  0045D4  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  8888  0045D8  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  8889  0045DC                     
  8890                           ;main.c: 221:     velocidadEstandar();
  8891  0045DC  EC17  F024         	call	_velocidadEstandar	;wreg free
  8892  0045E0  0012               	return		;funcret
  8893  0045E2                     __end_of_inicializarComportamientoBasico:
  8894                           	opt callstack 0
  8895                           
  8896 ;; *************** function _velocidadEstandar *****************
  8897 ;; Defined at:
  8898 ;;		line 898 in file "main.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;		None
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;		None
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      void 
  8905 ;; Registers used:
  8906 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8912 ;;      Params:         0       0       0       0       0       0       0       0       0
  8913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8915 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8916 ;;Total ram usage:        0 bytes
  8917 ;; Hardware stack levels used:    1
  8918 ;; Hardware stack levels required when called:    5
  8919 ;; This function calls:
  8920 ;;		_pwmDuty
  8921 ;; This function is called by:
  8922 ;;		_inicializarComportamientoBasico
  8923 ;;		_comportamientoBasico
  8924 ;;		_regresarCruceAnterior
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text38
  8929  00482E                     __ptext38:
  8930                           	opt callstack 0
  8931  00482E                     _velocidadEstandar:
  8932                           	opt callstack 24
  8933  00482E                     
  8934                           ;main.c: 899:     pwmDuty(70, 1);
  8935  00482E  0E00               	movlw	0
  8936  004830  0100               	movlb	0	; () banked
  8937  004832  6F80               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  8938  004834  0E46               	movlw	70
  8939  004836  6F7F               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  8940  004838  0E01               	movlw	1
  8941  00483A  6F81               	movwf	pwmDuty@channel& (0+255),b
  8942  00483C  ECA7  F015         	call	_pwmDuty	;wreg free
  8943                           
  8944                           ;main.c: 900:     pwmDuty(70, 2);
  8945  004840  0E00               	movlw	0
  8946  004842  0100               	movlb	0	; () banked
  8947  004844  6F80               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  8948  004846  0E46               	movlw	70
  8949  004848  6F7F               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  8950  00484A  0E02               	movlw	2
  8951  00484C  6F81               	movwf	pwmDuty@channel& (0+255),b
  8952  00484E  ECA7  F015         	call	_pwmDuty	;wreg free
  8953  004852  0012               	return		;funcret
  8954  004854                     __end_of_velocidadEstandar:
  8955                           	opt callstack 0
  8956                           
  8957 ;; *************** function _pwmDuty *****************
  8958 ;; Defined at:
  8959 ;;		line 20 in file "./pwm.h"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  cicloTrabajo    2   31[BANK0 ] unsigned int 
  8962 ;;  channel         1   33[BANK0 ] unsigned char 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  duty            4   39[BANK0 ] long 
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  1    wreg      void 
  8967 ;; Registers used:
  8968 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8974 ;;      Params:         0       3       0       0       0       0       0       0       0
  8975 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8976 ;;      Temps:          0       5       0       0       0       0       0       0       0
  8977 ;;      Totals:         0      12       0       0       0       0       0       0       0
  8978 ;;Total ram usage:       12 bytes
  8979 ;; Hardware stack levels used:    1
  8980 ;; Hardware stack levels required when called:    4
  8981 ;; This function calls:
  8982 ;;		___fldiv
  8983 ;;		___flmul
  8984 ;;		___fltol
  8985 ;;		___xxtofl
  8986 ;;		_map
  8987 ;; This function is called by:
  8988 ;;		_velocidadEstandar
  8989 ;;		_PID
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text39
  8994  002B4E                     __ptext39:
  8995                           	opt callstack 0
  8996  002B4E                     _pwmDuty:
  8997                           	opt callstack 24
  8998  002B4E                     
  8999                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
  9000  002B4E  C07F  F020         	movff	pwmDuty@cicloTrabajo,map@x
  9001  002B52  C080  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
  9002  002B56  6A22               	clrf	(map@x+2)^0,c
  9003  002B58  6A23               	clrf	(map@x+3)^0,c
  9004  002B5A  0E00               	movlw	0
  9005  002B5C  6E24               	movwf	map@in_min^0,c
  9006  002B5E  0E00               	movlw	0
  9007  002B60  6E25               	movwf	(map@in_min+1)^0,c
  9008  002B62  0E00               	movlw	0
  9009  002B64  6E26               	movwf	(map@in_min+2)^0,c
  9010  002B66  0E00               	movlw	0
  9011  002B68  6E27               	movwf	(map@in_min+3)^0,c
  9012  002B6A  0E64               	movlw	100
  9013  002B6C  6E28               	movwf	map@in_max^0,c
  9014  002B6E  0E00               	movlw	0
  9015  002B70  6E29               	movwf	(map@in_max+1)^0,c
  9016  002B72  0E00               	movlw	0
  9017  002B74  6E2A               	movwf	(map@in_max+2)^0,c
  9018  002B76  0E00               	movlw	0
  9019  002B78  6E2B               	movwf	(map@in_max+3)^0,c
  9020  002B7A  0E00               	movlw	0
  9021  002B7C  6E2C               	movwf	map@out_min^0,c
  9022  002B7E  0E00               	movlw	0
  9023  002B80  6E2D               	movwf	(map@out_min+1)^0,c
  9024  002B82  0E00               	movlw	0
  9025  002B84  6E2E               	movwf	(map@out_min+2)^0,c
  9026  002B86  0E00               	movlw	0
  9027  002B88  6E2F               	movwf	(map@out_min+3)^0,c
  9028  002B8A  0EFF               	movlw	255
  9029  002B8C  6E30               	movwf	map@out_max^0,c
  9030  002B8E  0E03               	movlw	3
  9031  002B90  6E31               	movwf	(map@out_max+1)^0,c
  9032  002B92  0E00               	movlw	0
  9033  002B94  6E32               	movwf	(map@out_max+2)^0,c
  9034  002B96  0E00               	movlw	0
  9035  002B98  6E33               	movwf	(map@out_max+3)^0,c
  9036  002B9A  EC54  F020         	call	_map	;wreg free
  9037  002B9E  C020  F087         	movff	?_map,pwmDuty@duty
  9038  002BA2  C021  F088         	movff	?_map+1,pwmDuty@duty+1
  9039  002BA6  C022  F089         	movff	?_map+2,pwmDuty@duty+2
  9040  002BAA  C023  F08A         	movff	?_map+3,pwmDuty@duty+3
  9041  002BAE                     
  9042                           ;./pwm.h: 24:     if (duty < 1024) {
  9043  002BAE  0100               	movlb	0	; () banked
  9044  002BB0  BF8A               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
  9045  002BB2  EFE7  F015         	goto	u10000
  9046  002BB6  518A               	movf	(pwmDuty@duty+3)& (0+255),w,b
  9047  002BB8  1189               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
  9048  002BBA  E107               	bnz	u10001
  9049  002BBC  0E04               	movlw	4
  9050  002BBE  5D88               	subwf	(pwmDuty@duty+1)& (0+255),w,b
  9051  002BC0  B0D8               	btfsc	status,0,c
  9052  002BC2  EFE5  F015         	goto	u10001
  9053  002BC6  EFE7  F015         	goto	u10000
  9054  002BCA                     u10001:
  9055  002BCA  EF84  F016         	goto	l143
  9056  002BCE                     u10000:
  9057  002BCE                     
  9058                           ; BSR set to: 0
  9059                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
  9060  002BCE  0E00               	movlw	0
  9061  002BD0  6F64               	movwf	___flmul@a& (0+255),b
  9062  002BD2  0E00               	movlw	0
  9063  002BD4  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9064  002BD6  0EFA               	movlw	250
  9065  002BD8  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9066  002BDA  0E43               	movlw	67
  9067  002BDC  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9068  002BDE  0E00               	movlw	0
  9069  002BE0  6E3C               	movwf	___fldiv@a^0,c
  9070  002BE2  0EC0               	movlw	192
  9071  002BE4  6E3D               	movwf	(___fldiv@a+1)^0,c
  9072  002BE6  0E7F               	movlw	127
  9073  002BE8  6E3E               	movwf	(___fldiv@a+2)^0,c
  9074  002BEA  0E44               	movlw	68
  9075  002BEC  6E3F               	movwf	(___fldiv@a+3)^0,c
  9076  002BEE  C087  F00D         	movff	pwmDuty@duty,___xxtofl@val
  9077  002BF2  C088  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
  9078  002BF6  C089  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
  9079  002BFA  C08A  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
  9080  002BFE  0E01               	movlw	1
  9081  002C00  EC85  F016         	call	___xxtofl
  9082  002C04  C00D  F038         	movff	?___xxtofl,___fldiv@b
  9083  002C08  C00E  F039         	movff	?___xxtofl+1,___fldiv@b+1
  9084  002C0C  C00F  F03A         	movff	?___xxtofl+2,___fldiv@b+2
  9085  002C10  C010  F03B         	movff	?___xxtofl+3,___fldiv@b+3
  9086  002C14  EC60  F011         	call	___fldiv	;wreg free
  9087  002C18  C038  F060         	movff	?___fldiv,___flmul@b
  9088  002C1C  C039  F061         	movff	?___fldiv+1,___flmul@b+1
  9089  002C20  C03A  F062         	movff	?___fldiv+2,___flmul@b+2
  9090  002C24  C03B  F063         	movff	?___fldiv+3,___flmul@b+3
  9091  002C28  EC4A  F00F         	call	___flmul	;wreg free
  9092  002C2C  C060  F075         	movff	?___flmul,___fltol@f1
  9093  002C30  C061  F076         	movff	?___flmul+1,___fltol@f1+1
  9094  002C34  C062  F077         	movff	?___flmul+2,___fltol@f1+2
  9095  002C38  C063  F078         	movff	?___flmul+3,___fltol@f1+3
  9096  002C3C  EC92  F01B         	call	___fltol	;wreg free
  9097  002C40  C075  F087         	movff	?___fltol,pwmDuty@duty
  9098  002C44  C076  F088         	movff	?___fltol+1,pwmDuty@duty+1
  9099  002C48  C077  F089         	movff	?___fltol+2,pwmDuty@duty+2
  9100  002C4C  C078  F08A         	movff	?___fltol+3,pwmDuty@duty+3
  9101                           
  9102                           ;./pwm.h: 28:         switch (channel) {
  9103  002C50  EF6E  F016         	goto	l8220
  9104  002C54                     l8214:
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
  9108  002C54  0E02               	movlw	2
  9109  002C56  6F82               	movwf	??_pwmDuty& (0+255),b
  9110  002C58  C087  F083         	movff	pwmDuty@duty,??_pwmDuty+1
  9111  002C5C  C088  F084         	movff	pwmDuty@duty+1,??_pwmDuty+2
  9112  002C60  C089  F085         	movff	pwmDuty@duty+2,??_pwmDuty+3
  9113  002C64  C08A  F086         	movff	pwmDuty@duty+3,??_pwmDuty+4
  9114  002C68                     u10015:
  9115  002C68  6782               	tstfsz	??_pwmDuty& (0+255),b
  9116  002C6A  EF39  F016         	goto	u10016
  9117  002C6E  EF41  F016         	goto	u10017
  9118  002C72                     u10016:
  9119  002C72  3586               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  9120  002C74  3386               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  9121  002C76  3385               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  9122  002C78  3384               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  9123  002C7A  3383               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  9124  002C7C  2F82               	decfsz	??_pwmDuty& (0+255),f,b
  9125  002C7E  EF34  F016         	goto	u10015
  9126  002C82                     u10017:
  9127  002C82  0100               	movlb	0	; () banked
  9128  002C84  5183               	movf	(??_pwmDuty+1)& (0+255),w,b
  9129  002C86  6EBE               	movwf	190,c	;volatile
  9130                           
  9131                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
  9132  002C88  0ECF               	movlw	207
  9133  002C8A  16BD               	andwf	189,f,c	;volatile
  9134                           
  9135                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
  9136  002C8C  3987               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  9137  002C8E  0BF0               	andlw	240
  9138  002C90  0B30               	andlw	48
  9139  002C92  12BD               	iorwf	189,f,c	;volatile
  9140                           
  9141                           ;./pwm.h: 34:                 break;
  9142  002C94  EF84  F016         	goto	l143
  9143  002C98                     l8216:
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
  9147  002C98  0E02               	movlw	2
  9148  002C9A  6F82               	movwf	??_pwmDuty& (0+255),b
  9149  002C9C  C087  F083         	movff	pwmDuty@duty,??_pwmDuty+1
  9150  002CA0  C088  F084         	movff	pwmDuty@duty+1,??_pwmDuty+2
  9151  002CA4  C089  F085         	movff	pwmDuty@duty+2,??_pwmDuty+3
  9152  002CA8  C08A  F086         	movff	pwmDuty@duty+3,??_pwmDuty+4
  9153  002CAC                     u10025:
  9154  002CAC  6782               	tstfsz	??_pwmDuty& (0+255),b
  9155  002CAE  EF5B  F016         	goto	u10026
  9156  002CB2  EF63  F016         	goto	u10027
  9157  002CB6                     u10026:
  9158  002CB6  3586               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  9159  002CB8  3386               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  9160  002CBA  3385               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  9161  002CBC  3384               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  9162  002CBE  3383               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  9163  002CC0  2F82               	decfsz	??_pwmDuty& (0+255),f,b
  9164  002CC2  EF56  F016         	goto	u10025
  9165  002CC6                     u10027:
  9166  002CC6  0100               	movlb	0	; () banked
  9167  002CC8  5183               	movf	(??_pwmDuty+1)& (0+255),w,b
  9168  002CCA  6EBB               	movwf	187,c	;volatile
  9169                           
  9170                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
  9171  002CCC  0ECF               	movlw	207
  9172  002CCE  16BA               	andwf	186,f,c	;volatile
  9173                           
  9174                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
  9175  002CD0  3987               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  9176  002CD2  0BF0               	andlw	240
  9177  002CD4  0B30               	andlw	48
  9178  002CD6  12BA               	iorwf	186,f,c	;volatile
  9179                           
  9180                           ;./pwm.h: 40:                 break;
  9181  002CD8  EF84  F016         	goto	l143
  9182  002CDC                     l8220:
  9183  002CDC  0100               	movlb	0	; () banked
  9184  002CDE  5181               	movf	pwmDuty@channel& (0+255),w,b
  9185  002CE0  6F82               	movwf	??_pwmDuty& (0+255),b
  9186  002CE2  6B83               	clrf	(??_pwmDuty+1)& (0+255),b
  9187                           
  9188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9189                           ; Switch size 1, requested type "simple"
  9190                           ; Number of cases is 1, Range of values is 0 to 0
  9191                           ; switch strategies available:
  9192                           ; Name         Instructions Cycles
  9193                           ; simple_byte            4     3 (average)
  9194                           ;	Chosen strategy is simple_byte
  9195  002CE4  5183               	movf	(??_pwmDuty+1)& (0+255),w,b
  9196  002CE6  0A00               	xorlw	0	; case 0
  9197  002CE8  B4D8               	btfsc	status,2,c
  9198  002CEA  EF79  F016         	goto	l9122
  9199  002CEE  EF84  F016         	goto	l143
  9200  002CF2                     l9122:
  9201                           
  9202                           ; BSR set to: 0
  9203                           ; Switch size 1, requested type "simple"
  9204                           ; Number of cases is 2, Range of values is 1 to 2
  9205                           ; switch strategies available:
  9206                           ; Name         Instructions Cycles
  9207                           ; simple_byte            7     4 (average)
  9208                           ;	Chosen strategy is simple_byte
  9209  002CF2  5182               	movf	??_pwmDuty& (0+255),w,b
  9210  002CF4  0A01               	xorlw	1	; case 1
  9211  002CF6  B4D8               	btfsc	status,2,c
  9212  002CF8  EF2A  F016         	goto	l8214
  9213  002CFC  0A03               	xorlw	3	; case 2
  9214  002CFE  B4D8               	btfsc	status,2,c
  9215  002D00  EF4C  F016         	goto	l8216
  9216  002D04  EF84  F016         	goto	l143
  9217  002D08                     l143:
  9218                           
  9219                           ; BSR set to: 0
  9220  002D08  0012               	return		;funcret
  9221  002D0A                     __end_of_pwmDuty:
  9222                           	opt callstack 0
  9223                           
  9224 ;; *************** function _map *****************
  9225 ;; Defined at:
  9226 ;;		line 16 in file "./pwm.h"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  x               4   31[COMRAM] long 
  9229 ;;  in_min          4   35[COMRAM] long 
  9230 ;;  in_max          4   39[COMRAM] long 
  9231 ;;  out_min         4   43[COMRAM] long 
  9232 ;;  out_max         4   47[COMRAM] long 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;		None
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  4   31[COMRAM] long 
  9237 ;; Registers used:
  9238 ;;		wreg, status,2, status,0, cstack
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9244 ;;      Params:        20       0       0       0       0       0       0       0       0
  9245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9247 ;;      Totals:        20       0       0       0       0       0       0       0       0
  9248 ;;Total ram usage:       20 bytes
  9249 ;; Hardware stack levels used:    1
  9250 ;; Hardware stack levels required when called:    3
  9251 ;; This function calls:
  9252 ;;		___aldiv
  9253 ;;		___lmul
  9254 ;; This function is called by:
  9255 ;;		_pwmDuty
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text40
  9260  0040A8                     __ptext40:
  9261                           	opt callstack 0
  9262  0040A8                     _map:
  9263                           	opt callstack 24
  9264  0040A8                     
  9265                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  9266  0040A8  5024               	movf	map@in_min^0,w,c
  9267  0040AA  5C20               	subwf	map@x^0,w,c
  9268  0040AC  6E06               	movwf	___lmul@multiplier^0,c
  9269  0040AE  5025               	movf	(map@in_min+1)^0,w,c
  9270  0040B0  5821               	subwfb	(map@x+1)^0,w,c
  9271  0040B2  6E07               	movwf	(___lmul@multiplier+1)^0,c
  9272  0040B4  5026               	movf	(map@in_min+2)^0,w,c
  9273  0040B6  5822               	subwfb	(map@x+2)^0,w,c
  9274  0040B8  6E08               	movwf	(___lmul@multiplier+2)^0,c
  9275  0040BA  5027               	movf	(map@in_min+3)^0,w,c
  9276  0040BC  5823               	subwfb	(map@x+3)^0,w,c
  9277  0040BE  6E09               	movwf	(___lmul@multiplier+3)^0,c
  9278  0040C0  502C               	movf	map@out_min^0,w,c
  9279  0040C2  5C30               	subwf	map@out_max^0,w,c
  9280  0040C4  6E0A               	movwf	___lmul@multiplicand^0,c
  9281  0040C6  502D               	movf	(map@out_min+1)^0,w,c
  9282  0040C8  5831               	subwfb	(map@out_max+1)^0,w,c
  9283  0040CA  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  9284  0040CC  502E               	movf	(map@out_min+2)^0,w,c
  9285  0040CE  5832               	subwfb	(map@out_max+2)^0,w,c
  9286  0040D0  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  9287  0040D2  502F               	movf	(map@out_min+3)^0,w,c
  9288  0040D4  5833               	subwfb	(map@out_max+3)^0,w,c
  9289  0040D6  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  9290  0040D8  EC38  F021         	call	___lmul	;wreg free
  9291  0040DC  C006  F012         	movff	?___lmul,___aldiv@dividend
  9292  0040E0  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
  9293  0040E4  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
  9294  0040E8  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
  9295  0040EC  5024               	movf	map@in_min^0,w,c
  9296  0040EE  5C28               	subwf	map@in_max^0,w,c
  9297  0040F0  6E16               	movwf	___aldiv@divisor^0,c
  9298  0040F2  5025               	movf	(map@in_min+1)^0,w,c
  9299  0040F4  5829               	subwfb	(map@in_max+1)^0,w,c
  9300  0040F6  6E17               	movwf	(___aldiv@divisor+1)^0,c
  9301  0040F8  5026               	movf	(map@in_min+2)^0,w,c
  9302  0040FA  582A               	subwfb	(map@in_max+2)^0,w,c
  9303  0040FC  6E18               	movwf	(___aldiv@divisor+2)^0,c
  9304  0040FE  5027               	movf	(map@in_min+3)^0,w,c
  9305  004100  582B               	subwfb	(map@in_max+3)^0,w,c
  9306  004102  6E19               	movwf	(___aldiv@divisor+3)^0,c
  9307  004104  EC0C  F01B         	call	___aldiv	;wreg free
  9308  004108  502C               	movf	map@out_min^0,w,c
  9309  00410A  2412               	addwf	?___aldiv^0,w,c
  9310  00410C  6E20               	movwf	?_map^0,c
  9311  00410E  502D               	movf	(map@out_min+1)^0,w,c
  9312  004110  2013               	addwfc	(?___aldiv+1)^0,w,c
  9313  004112  6E21               	movwf	(?_map+1)^0,c
  9314  004114  502E               	movf	(map@out_min+2)^0,w,c
  9315  004116  2014               	addwfc	(?___aldiv+2)^0,w,c
  9316  004118  6E22               	movwf	(?_map+2)^0,c
  9317  00411A  502F               	movf	(map@out_min+3)^0,w,c
  9318  00411C  2015               	addwfc	(?___aldiv+3)^0,w,c
  9319  00411E  6E23               	movwf	(?_map+3)^0,c
  9320  004120  0012               	return		;funcret
  9321  004122                     __end_of_map:
  9322                           	opt callstack 0
  9323                           
  9324 ;; *************** function ___lmul *****************
  9325 ;; Defined at:
  9326 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;  multiplier      4    5[COMRAM] unsigned long 
  9329 ;;  multiplicand    4    9[COMRAM] unsigned long 
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;  product         4   13[COMRAM] unsigned long 
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  4    5[COMRAM] unsigned long 
  9334 ;; Registers used:
  9335 ;;		wreg, status,2, status,0
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9341 ;;      Params:         8       0       0       0       0       0       0       0       0
  9342 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9344 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9345 ;;Total ram usage:       12 bytes
  9346 ;; Hardware stack levels used:    1
  9347 ;; Hardware stack levels required when called:    2
  9348 ;; This function calls:
  9349 ;;		Nothing
  9350 ;; This function is called by:
  9351 ;;		_map
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text41
  9356  004270                     __ptext41:
  9357                           	opt callstack 0
  9358  004270                     ___lmul:
  9359                           	opt callstack 24
  9360  004270  0E00               	movlw	0
  9361  004272  6E0E               	movwf	___lmul@product^0,c
  9362  004274  0E00               	movlw	0
  9363  004276  6E0F               	movwf	(___lmul@product+1)^0,c
  9364  004278  0E00               	movlw	0
  9365  00427A  6E10               	movwf	(___lmul@product+2)^0,c
  9366  00427C  0E00               	movlw	0
  9367  00427E  6E11               	movwf	(___lmul@product+3)^0,c
  9368  004280                     l8074:
  9369  004280  A006               	btfss	___lmul@multiplier^0,0,c
  9370  004282  EF45  F021         	goto	u9771
  9371  004286  EF47  F021         	goto	u9770
  9372  00428A                     u9771:
  9373  00428A  EF4F  F021         	goto	l8078
  9374  00428E                     u9770:
  9375  00428E  500A               	movf	___lmul@multiplicand^0,w,c
  9376  004290  260E               	addwf	___lmul@product^0,f,c
  9377  004292  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  9378  004294  220F               	addwfc	(___lmul@product+1)^0,f,c
  9379  004296  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  9380  004298  2210               	addwfc	(___lmul@product+2)^0,f,c
  9381  00429A  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  9382  00429C  2211               	addwfc	(___lmul@product+3)^0,f,c
  9383  00429E                     l8078:
  9384  00429E  90D8               	bcf	status,0,c
  9385  0042A0  360A               	rlcf	___lmul@multiplicand^0,f,c
  9386  0042A2  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  9387  0042A4  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  9388  0042A6  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  9389  0042A8  90D8               	bcf	status,0,c
  9390  0042AA  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  9391  0042AC  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  9392  0042AE  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  9393  0042B0  3206               	rrcf	___lmul@multiplier^0,f,c
  9394  0042B2  5006               	movf	___lmul@multiplier^0,w,c
  9395  0042B4  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  9396  0042B6  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  9397  0042B8  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  9398  0042BA  A4D8               	btfss	status,2,c
  9399  0042BC  EF62  F021         	goto	u9781
  9400  0042C0  EF64  F021         	goto	u9780
  9401  0042C4                     u9781:
  9402  0042C4  EF40  F021         	goto	l8074
  9403  0042C8                     u9780:
  9404  0042C8  C00E  F006         	movff	___lmul@product,?___lmul
  9405  0042CC  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  9406  0042D0  C010  F008         	movff	___lmul@product+2,?___lmul+2
  9407  0042D4  C011  F009         	movff	___lmul@product+3,?___lmul+3
  9408  0042D8  0012               	return		;funcret
  9409  0042DA                     __end_of___lmul:
  9410                           	opt callstack 0
  9411                           
  9412 ;; *************** function ___fltol *****************
  9413 ;; Defined at:
  9414 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  f1              4   21[BANK0 ] unsigned long 
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  exp1            1   30[BANK0 ] unsigned char 
  9419 ;;  sign1           1   29[BANK0 ] unsigned char 
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  4   21[BANK0 ] long 
  9422 ;; Registers used:
  9423 ;;		wreg, status,2, status,0
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9429 ;;      Params:         0       4       0       0       0       0       0       0       0
  9430 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9431 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9432 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9433 ;;Total ram usage:       10 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:    2
  9436 ;; This function calls:
  9437 ;;		Nothing
  9438 ;; This function is called by:
  9439 ;;		_pwmDuty
  9440 ;;		_efgtoa
  9441 ;;		_PID
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445                           	psect	text42
  9446  003724                     __ptext42:
  9447                           	opt callstack 0
  9448  003724                     ___fltol:
  9449                           	opt callstack 23
  9450  003724  0100               	movlb	0	; () banked
  9451  003726  3577               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9452  003728  3578               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9453  00372A  6F7E               	movwf	___fltol@exp1& (0+255),b
  9454  00372C  517E               	movf	___fltol@exp1& (0+255),w,b
  9455  00372E  A4D8               	btfss	status,2,c
  9456  003730  EF9C  F01B         	goto	u8731
  9457  003734  EF9E  F01B         	goto	u8730
  9458  003738                     u8731:
  9459  003738  EFA8  F01B         	goto	l7500
  9460  00373C                     u8730:
  9461  00373C                     l7496:
  9462                           
  9463                           ; BSR set to: 0
  9464  00373C  0E00               	movlw	0
  9465  00373E  6F75               	movwf	?___fltol& (0+255),b
  9466  003740  0E00               	movlw	0
  9467  003742  6F76               	movwf	(?___fltol+1)& (0+255),b
  9468  003744  0E00               	movlw	0
  9469  003746  6F77               	movwf	(?___fltol+2)& (0+255),b
  9470  003748  0E00               	movlw	0
  9471  00374A  6F78               	movwf	(?___fltol+3)& (0+255),b
  9472  00374C  EF15  F01C         	goto	l1081
  9473  003750                     l7500:
  9474                           
  9475                           ; BSR set to: 0
  9476  003750  C075  F079         	movff	___fltol@f1,??___fltol
  9477  003754  C076  F07A         	movff	___fltol@f1+1,??___fltol+1
  9478  003758  C077  F07B         	movff	___fltol@f1+2,??___fltol+2
  9479  00375C  C078  F07C         	movff	___fltol@f1+3,??___fltol+3
  9480  003760  0E20               	movlw	32
  9481  003762  EFB8  F01B         	goto	u8740
  9482  003766                     u8745:
  9483  003766  90D8               	bcf	status,0,c
  9484  003768  337C               	rrcf	(??___fltol+3)& (0+255),f,b
  9485  00376A  337B               	rrcf	(??___fltol+2)& (0+255),f,b
  9486  00376C  337A               	rrcf	(??___fltol+1)& (0+255),f,b
  9487  00376E  3379               	rrcf	??___fltol& (0+255),f,b
  9488  003770                     u8740:
  9489  003770  2EE8               	decfsz	wreg,f,c
  9490  003772  EFB3  F01B         	goto	u8745
  9491  003776  5179               	movf	??___fltol& (0+255),w,b
  9492  003778  6F7D               	movwf	___fltol@sign1& (0+255),b
  9493  00377A                     
  9494                           ; BSR set to: 0
  9495  00377A  8F77               	bsf	(___fltol@f1+2)& (0+255),7,b
  9496  00377C                     
  9497                           ; BSR set to: 0
  9498  00377C  0EFF               	movlw	255
  9499  00377E  1775               	andwf	___fltol@f1& (0+255),f,b
  9500  003780  0EFF               	movlw	255
  9501  003782  1776               	andwf	(___fltol@f1+1)& (0+255),f,b
  9502  003784  0EFF               	movlw	255
  9503  003786  1777               	andwf	(___fltol@f1+2)& (0+255),f,b
  9504  003788  0E00               	movlw	0
  9505  00378A  1778               	andwf	(___fltol@f1+3)& (0+255),f,b
  9506  00378C                     
  9507                           ; BSR set to: 0
  9508  00378C  0E96               	movlw	150
  9509  00378E  5F7E               	subwf	___fltol@exp1& (0+255),f,b
  9510  003790                     
  9511                           ; BSR set to: 0
  9512  003790  BF7E               	btfsc	___fltol@exp1& (0+255),7,b
  9513  003792  EFCF  F01B         	goto	u8750
  9514  003796  EFCD  F01B         	goto	u8751
  9515  00379A                     u8751:
  9516  00379A  EFE5  F01B         	goto	l7520
  9517  00379E                     u8750:
  9518  00379E                     
  9519                           ; BSR set to: 0
  9520  00379E  517E               	movf	___fltol@exp1& (0+255),w,b
  9521  0037A0  0A80               	xorlw	128
  9522  0037A2  0F97               	addlw	151
  9523  0037A4  B0D8               	btfsc	status,0,c
  9524  0037A6  EFD7  F01B         	goto	u8761
  9525  0037AA  EFD9  F01B         	goto	u8760
  9526  0037AE                     u8761:
  9527  0037AE  EFDB  F01B         	goto	l7516
  9528  0037B2                     u8760:
  9529  0037B2  EF9E  F01B         	goto	l7496
  9530  0037B6                     l7516:
  9531                           
  9532                           ; BSR set to: 0
  9533  0037B6  90D8               	bcf	status,0,c
  9534  0037B8  3378               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9535  0037BA  3377               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9536  0037BC  3376               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9537  0037BE  3375               	rrcf	___fltol@f1& (0+255),f,b
  9538  0037C0                     
  9539                           ; BSR set to: 0
  9540  0037C0  3F7E               	incfsz	___fltol@exp1& (0+255),f,b
  9541  0037C2  EFDB  F01B         	goto	l7516
  9542  0037C6  EFFD  F01B         	goto	l7530
  9543  0037CA                     l7520:
  9544                           
  9545                           ; BSR set to: 0
  9546  0037CA  0E1F               	movlw	31
  9547  0037CC  657E               	cpfsgt	___fltol@exp1& (0+255),b
  9548  0037CE  EFEB  F01B         	goto	u8771
  9549  0037D2  EFED  F01B         	goto	u8770
  9550  0037D6                     u8771:
  9551  0037D6  EFF5  F01B         	goto	l7528
  9552  0037DA                     u8770:
  9553  0037DA  EF9E  F01B         	goto	l7496
  9554  0037DE                     l7526:
  9555                           
  9556                           ; BSR set to: 0
  9557  0037DE  90D8               	bcf	status,0,c
  9558  0037E0  3775               	rlcf	___fltol@f1& (0+255),f,b
  9559  0037E2  3776               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9560  0037E4  3777               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9561  0037E6  3778               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9562  0037E8  077E               	decf	___fltol@exp1& (0+255),f,b
  9563  0037EA                     l7528:
  9564                           
  9565                           ; BSR set to: 0
  9566  0037EA  517E               	movf	___fltol@exp1& (0+255),w,b
  9567  0037EC  A4D8               	btfss	status,2,c
  9568  0037EE  EFFB  F01B         	goto	u8781
  9569  0037F2  EFFD  F01B         	goto	u8780
  9570  0037F6                     u8781:
  9571  0037F6  EFEF  F01B         	goto	l7526
  9572  0037FA                     u8780:
  9573  0037FA                     l7530:
  9574                           
  9575                           ; BSR set to: 0
  9576  0037FA  517D               	movf	___fltol@sign1& (0+255),w,b
  9577  0037FC  B4D8               	btfsc	status,2,c
  9578  0037FE  EF03  F01C         	goto	u8791
  9579  003802  EF05  F01C         	goto	u8790
  9580  003806                     u8791:
  9581  003806  EF0D  F01C         	goto	l7534
  9582  00380A                     u8790:
  9583  00380A                     
  9584                           ; BSR set to: 0
  9585  00380A  1F78               	comf	(___fltol@f1+3)& (0+255),f,b
  9586  00380C  1F77               	comf	(___fltol@f1+2)& (0+255),f,b
  9587  00380E  1F76               	comf	(___fltol@f1+1)& (0+255),f,b
  9588  003810  6D75               	negf	___fltol@f1& (0+255),b
  9589  003812  0E00               	movlw	0
  9590  003814  2376               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9591  003816  2377               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9592  003818  2378               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9593  00381A                     l7534:
  9594                           
  9595                           ; BSR set to: 0
  9596  00381A  C075  F075         	movff	___fltol@f1,?___fltol
  9597  00381E  C076  F076         	movff	___fltol@f1+1,?___fltol+1
  9598  003822  C077  F077         	movff	___fltol@f1+2,?___fltol+2
  9599  003826  C078  F078         	movff	___fltol@f1+3,?___fltol+3
  9600  00382A                     l1081:
  9601                           
  9602                           ; BSR set to: 0
  9603  00382A  0012               	return		;funcret
  9604  00382C                     __end_of___fltol:
  9605                           	opt callstack 0
  9606                           
  9607 ;; *************** function ___flmul *****************
  9608 ;; Defined at:
  9609 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;  b               4    0[BANK0 ] long 
  9612 ;;  a               4    4[BANK0 ] long 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  prod            4   15[BANK0 ] struct .
  9615 ;;  grs             4   10[BANK0 ] unsigned long 
  9616 ;;  temp            2   19[BANK0 ] struct .
  9617 ;;  bexp            1   14[BANK0 ] unsigned char 
  9618 ;;  aexp            1    9[BANK0 ] unsigned char 
  9619 ;;  sign            1    8[BANK0 ] unsigned char 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  4    0[BANK0 ] unsigned char 
  9622 ;; Registers used:
  9623 ;;		wreg, status,2, status,0, prodl, prodh
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9629 ;;      Params:         0       8       0       0       0       0       0       0       0
  9630 ;;      Locals:         0      13       0       0       0       0       0       0       0
  9631 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9632 ;;      Totals:         4      21       0       0       0       0       0       0       0
  9633 ;;Total ram usage:       25 bytes
  9634 ;; Hardware stack levels used:    1
  9635 ;; Hardware stack levels required when called:    2
  9636 ;; This function calls:
  9637 ;;		Nothing
  9638 ;; This function is called by:
  9639 ;;		_pwmDuty
  9640 ;;		_efgtoa
  9641 ;;		_PID
  9642 ;;		_roundf
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646                           	psect	text43
  9647  001E94                     __ptext43:
  9648                           	opt callstack 0
  9649  001E94                     ___flmul:
  9650                           	opt callstack 23
  9651  001E94  0100               	movlb	0	; () banked
  9652  001E96  5163               	movf	(___flmul@b+3)& (0+255),w,b
  9653  001E98  0B80               	andlw	128
  9654  001E9A  6F68               	movwf	___flmul@sign& (0+255),b
  9655  001E9C  5163               	movf	(___flmul@b+3)& (0+255),w,b
  9656  001E9E  2563               	addwf	(___flmul@b+3)& (0+255),w,b
  9657  001EA0  6F6E               	movwf	___flmul@bexp& (0+255),b
  9658  001EA2                     
  9659                           ; BSR set to: 0
  9660  001EA2  AF62               	btfss	(___flmul@b+2)& (0+255),7,b
  9661  001EA4  EF56  F00F         	goto	u8331
  9662  001EA8  EF58  F00F         	goto	u8330
  9663  001EAC                     u8331:
  9664  001EAC  EF59  F00F         	goto	l7238
  9665  001EB0                     u8330:
  9666  001EB0                     
  9667                           ; BSR set to: 0
  9668  001EB0  816E               	bsf	___flmul@bexp& (0+255),0,b
  9669  001EB2                     l7238:
  9670                           
  9671                           ; BSR set to: 0
  9672  001EB2  516E               	movf	___flmul@bexp& (0+255),w,b
  9673  001EB4  B4D8               	btfsc	status,2,c
  9674  001EB6  EF5F  F00F         	goto	u8341
  9675  001EBA  EF61  F00F         	goto	u8340
  9676  001EBE                     u8341:
  9677  001EBE  EF74  F00F         	goto	l7246
  9678  001EC2                     u8340:
  9679  001EC2                     
  9680                           ; BSR set to: 0
  9681  001EC2  296E               	incf	___flmul@bexp& (0+255),w,b
  9682  001EC4  A4D8               	btfss	status,2,c
  9683  001EC6  EF67  F00F         	goto	u8351
  9684  001ECA  EF69  F00F         	goto	u8350
  9685  001ECE                     u8351:
  9686  001ECE  EF71  F00F         	goto	l7244
  9687  001ED2                     u8350:
  9688  001ED2                     
  9689                           ; BSR set to: 0
  9690  001ED2  0E00               	movlw	0
  9691  001ED4  6F60               	movwf	___flmul@b& (0+255),b
  9692  001ED6  0E00               	movlw	0
  9693  001ED8  6F61               	movwf	(___flmul@b+1)& (0+255),b
  9694  001EDA  0E00               	movlw	0
  9695  001EDC  6F62               	movwf	(___flmul@b+2)& (0+255),b
  9696  001EDE  0E00               	movlw	0
  9697  001EE0  6F63               	movwf	(___flmul@b+3)& (0+255),b
  9698  001EE2                     l7244:
  9699                           
  9700                           ; BSR set to: 0
  9701  001EE2  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
  9702  001EE4  EF7C  F00F         	goto	l7248
  9703  001EE8                     l7246:
  9704                           
  9705                           ; BSR set to: 0
  9706  001EE8  0E00               	movlw	0
  9707  001EEA  6F60               	movwf	___flmul@b& (0+255),b
  9708  001EEC  0E00               	movlw	0
  9709  001EEE  6F61               	movwf	(___flmul@b+1)& (0+255),b
  9710  001EF0  0E00               	movlw	0
  9711  001EF2  6F62               	movwf	(___flmul@b+2)& (0+255),b
  9712  001EF4  0E00               	movlw	0
  9713  001EF6  6F63               	movwf	(___flmul@b+3)& (0+255),b
  9714  001EF8                     l7248:
  9715                           
  9716                           ; BSR set to: 0
  9717  001EF8  5167               	movf	(___flmul@a+3)& (0+255),w,b
  9718  001EFA  0B80               	andlw	128
  9719  001EFC  1B68               	xorwf	___flmul@sign& (0+255),f,b
  9720  001EFE                     
  9721                           ; BSR set to: 0
  9722  001EFE  5167               	movf	(___flmul@a+3)& (0+255),w,b
  9723  001F00  2567               	addwf	(___flmul@a+3)& (0+255),w,b
  9724  001F02  6F69               	movwf	___flmul@aexp& (0+255),b
  9725  001F04                     
  9726                           ; BSR set to: 0
  9727  001F04  AF66               	btfss	(___flmul@a+2)& (0+255),7,b
  9728  001F06  EF87  F00F         	goto	u8361
  9729  001F0A  EF89  F00F         	goto	u8360
  9730  001F0E                     u8361:
  9731  001F0E  EF8A  F00F         	goto	l7256
  9732  001F12                     u8360:
  9733  001F12                     
  9734                           ; BSR set to: 0
  9735  001F12  8169               	bsf	___flmul@aexp& (0+255),0,b
  9736  001F14                     l7256:
  9737                           
  9738                           ; BSR set to: 0
  9739  001F14  5169               	movf	___flmul@aexp& (0+255),w,b
  9740  001F16  B4D8               	btfsc	status,2,c
  9741  001F18  EF90  F00F         	goto	u8371
  9742  001F1C  EF92  F00F         	goto	u8370
  9743  001F20                     u8371:
  9744  001F20  EFA5  F00F         	goto	l7264
  9745  001F24                     u8370:
  9746  001F24                     
  9747                           ; BSR set to: 0
  9748  001F24  2969               	incf	___flmul@aexp& (0+255),w,b
  9749  001F26  A4D8               	btfss	status,2,c
  9750  001F28  EF98  F00F         	goto	u8381
  9751  001F2C  EF9A  F00F         	goto	u8380
  9752  001F30                     u8381:
  9753  001F30  EFA2  F00F         	goto	l7262
  9754  001F34                     u8380:
  9755  001F34                     
  9756                           ; BSR set to: 0
  9757  001F34  0E00               	movlw	0
  9758  001F36  6F64               	movwf	___flmul@a& (0+255),b
  9759  001F38  0E00               	movlw	0
  9760  001F3A  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9761  001F3C  0E00               	movlw	0
  9762  001F3E  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9763  001F40  0E00               	movlw	0
  9764  001F42  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9765  001F44                     l7262:
  9766                           
  9767                           ; BSR set to: 0
  9768  001F44  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
  9769  001F46  EFAD  F00F         	goto	l1398
  9770  001F4A                     l7264:
  9771                           
  9772                           ; BSR set to: 0
  9773  001F4A  0E00               	movlw	0
  9774  001F4C  6F64               	movwf	___flmul@a& (0+255),b
  9775  001F4E  0E00               	movlw	0
  9776  001F50  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9777  001F52  0E00               	movlw	0
  9778  001F54  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9779  001F56  0E00               	movlw	0
  9780  001F58  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9781  001F5A                     l1398:
  9782                           
  9783                           ; BSR set to: 0
  9784  001F5A  5169               	movf	___flmul@aexp& (0+255),w,b
  9785  001F5C  B4D8               	btfsc	status,2,c
  9786  001F5E  EFB3  F00F         	goto	u8391
  9787  001F62  EFB5  F00F         	goto	u8390
  9788  001F66                     u8391:
  9789  001F66  EFBD  F00F         	goto	l7268
  9790  001F6A                     u8390:
  9791  001F6A                     
  9792                           ; BSR set to: 0
  9793  001F6A  516E               	movf	___flmul@bexp& (0+255),w,b
  9794  001F6C  A4D8               	btfss	status,2,c
  9795  001F6E  EFBB  F00F         	goto	u8401
  9796  001F72  EFBD  F00F         	goto	u8400
  9797  001F76                     u8401:
  9798  001F76  EFC7  F00F         	goto	l7272
  9799  001F7A                     u8400:
  9800  001F7A                     l7268:
  9801                           
  9802                           ; BSR set to: 0
  9803  001F7A  0E00               	movlw	0
  9804  001F7C  6F60               	movwf	?___flmul& (0+255),b
  9805  001F7E  0E00               	movlw	0
  9806  001F80  6F61               	movwf	(?___flmul+1)& (0+255),b
  9807  001F82  0E00               	movlw	0
  9808  001F84  6F62               	movwf	(?___flmul+2)& (0+255),b
  9809  001F86  0E00               	movlw	0
  9810  001F88  6F63               	movwf	(?___flmul+3)& (0+255),b
  9811  001F8A  EF5F  F011         	goto	l1402
  9812  001F8E                     l7272:
  9813                           
  9814                           ; BSR set to: 0
  9815  001F8E  5166               	movf	(___flmul@a+2)& (0+255),w,b
  9816  001F90  0360               	mulwf	___flmul@b& (0+255),b
  9817  001F92  CFF3 F073          	movff	prodl,___flmul@temp
  9818  001F96  CFF4 F074          	movff	prodh,___flmul@temp+1
  9819  001F9A                     
  9820                           ; BSR set to: 0
  9821  001F9A  5173               	movf	___flmul@temp& (0+255),w,b
  9822  001F9C  6F6A               	movwf	___flmul@grs& (0+255),b
  9823  001F9E  6B6B               	clrf	(___flmul@grs+1)& (0+255),b
  9824  001FA0  6B6C               	clrf	(___flmul@grs+2)& (0+255),b
  9825  001FA2  6B6D               	clrf	(___flmul@grs+3)& (0+255),b
  9826  001FA4                     
  9827                           ; BSR set to: 0
  9828  001FA4  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9829  001FA6  6F6F               	movwf	___flmul@prod& (0+255),b
  9830  001FA8  6B70               	clrf	(___flmul@prod+1)& (0+255),b
  9831  001FAA  6B71               	clrf	(___flmul@prod+2)& (0+255),b
  9832  001FAC  6B72               	clrf	(___flmul@prod+3)& (0+255),b
  9833  001FAE  5165               	movf	(___flmul@a+1)& (0+255),w,b
  9834  001FB0  0361               	mulwf	(___flmul@b+1)& (0+255),b
  9835  001FB2  CFF3 F073          	movff	prodl,___flmul@temp
  9836  001FB6  CFF4 F074          	movff	prodh,___flmul@temp+1
  9837  001FBA                     
  9838                           ; BSR set to: 0
  9839  001FBA  5173               	movf	___flmul@temp& (0+255),w,b
  9840  001FBC  276A               	addwf	___flmul@grs& (0+255),f,b
  9841  001FBE  0E00               	movlw	0
  9842  001FC0  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9843  001FC2  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9844  001FC4  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9845  001FC6                     
  9846                           ; BSR set to: 0
  9847  001FC6  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9848  001FC8  276F               	addwf	___flmul@prod& (0+255),f,b
  9849  001FCA  0E00               	movlw	0
  9850  001FCC  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9851  001FCE  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9852  001FD0  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9853  001FD2  5164               	movf	___flmul@a& (0+255),w,b
  9854  001FD4  0362               	mulwf	(___flmul@b+2)& (0+255),b
  9855  001FD6  CFF3 F073          	movff	prodl,___flmul@temp
  9856  001FDA  CFF4 F074          	movff	prodh,___flmul@temp+1
  9857  001FDE                     
  9858                           ; BSR set to: 0
  9859  001FDE  5173               	movf	___flmul@temp& (0+255),w,b
  9860  001FE0  276A               	addwf	___flmul@grs& (0+255),f,b
  9861  001FE2  0E00               	movlw	0
  9862  001FE4  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9863  001FE6  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9864  001FE8  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9865  001FEA                     
  9866                           ; BSR set to: 0
  9867  001FEA  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9868  001FEC  276F               	addwf	___flmul@prod& (0+255),f,b
  9869  001FEE  0E00               	movlw	0
  9870  001FF0  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9871  001FF2  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9872  001FF4  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9873  001FF6                     
  9874                           ; BSR set to: 0
  9875  001FF6  C06C  F06D         	movff	___flmul@grs+2,___flmul@grs+3
  9876  001FFA  C06B  F06C         	movff	___flmul@grs+1,___flmul@grs+2
  9877  001FFE  C06A  F06B         	movff	___flmul@grs,___flmul@grs+1
  9878  002002  6B6A               	clrf	___flmul@grs& (0+255),b
  9879  002004                     
  9880                           ; BSR set to: 0
  9881  002004  5164               	movf	___flmul@a& (0+255),w,b
  9882  002006  0361               	mulwf	(___flmul@b+1)& (0+255),b
  9883  002008  CFF3 F073          	movff	prodl,___flmul@temp
  9884  00200C  CFF4 F074          	movff	prodh,___flmul@temp+1
  9885  002010                     
  9886                           ; BSR set to: 0
  9887  002010  5173               	movf	___flmul@temp& (0+255),w,b
  9888  002012  276A               	addwf	___flmul@grs& (0+255),f,b
  9889  002014  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9890  002016  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9891  002018  0E00               	movlw	0
  9892  00201A  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9893  00201C  0E00               	movlw	0
  9894  00201E  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9895  002020                     
  9896                           ; BSR set to: 0
  9897  002020  5165               	movf	(___flmul@a+1)& (0+255),w,b
  9898  002022  0360               	mulwf	___flmul@b& (0+255),b
  9899  002024  CFF3 F073          	movff	prodl,___flmul@temp
  9900  002028  CFF4 F074          	movff	prodh,___flmul@temp+1
  9901  00202C                     
  9902                           ; BSR set to: 0
  9903  00202C  5173               	movf	___flmul@temp& (0+255),w,b
  9904  00202E  276A               	addwf	___flmul@grs& (0+255),f,b
  9905  002030  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9906  002032  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9907  002034  0E00               	movlw	0
  9908  002036  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9909  002038  0E00               	movlw	0
  9910  00203A  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9911  00203C                     
  9912                           ; BSR set to: 0
  9913  00203C  C06C  F06D         	movff	___flmul@grs+2,___flmul@grs+3
  9914  002040  C06B  F06C         	movff	___flmul@grs+1,___flmul@grs+2
  9915  002044  C06A  F06B         	movff	___flmul@grs,___flmul@grs+1
  9916  002048  6B6A               	clrf	___flmul@grs& (0+255),b
  9917  00204A  5164               	movf	___flmul@a& (0+255),w,b
  9918  00204C  0360               	mulwf	___flmul@b& (0+255),b
  9919  00204E  CFF3 F073          	movff	prodl,___flmul@temp
  9920  002052  CFF4 F074          	movff	prodh,___flmul@temp+1
  9921  002056                     
  9922                           ; BSR set to: 0
  9923  002056  5173               	movf	___flmul@temp& (0+255),w,b
  9924  002058  276A               	addwf	___flmul@grs& (0+255),f,b
  9925  00205A  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9926  00205C  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9927  00205E  0E00               	movlw	0
  9928  002060  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9929  002062  0E00               	movlw	0
  9930  002064  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9931  002066                     
  9932                           ; BSR set to: 0
  9933  002066  5166               	movf	(___flmul@a+2)& (0+255),w,b
  9934  002068  0361               	mulwf	(___flmul@b+1)& (0+255),b
  9935  00206A  CFF3 F073          	movff	prodl,___flmul@temp
  9936  00206E  CFF4 F074          	movff	prodh,___flmul@temp+1
  9937  002072  5173               	movf	___flmul@temp& (0+255),w,b
  9938  002074  276F               	addwf	___flmul@prod& (0+255),f,b
  9939  002076  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9940  002078  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9941  00207A  0E00               	movlw	0
  9942  00207C  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9943  00207E  0E00               	movlw	0
  9944  002080  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9945  002082                     
  9946                           ; BSR set to: 0
  9947  002082  5165               	movf	(___flmul@a+1)& (0+255),w,b
  9948  002084  0362               	mulwf	(___flmul@b+2)& (0+255),b
  9949  002086  CFF3 F073          	movff	prodl,___flmul@temp
  9950  00208A  CFF4 F074          	movff	prodh,___flmul@temp+1
  9951  00208E                     
  9952                           ; BSR set to: 0
  9953  00208E  5173               	movf	___flmul@temp& (0+255),w,b
  9954  002090  276F               	addwf	___flmul@prod& (0+255),f,b
  9955  002092  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9956  002094  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9957  002096  0E00               	movlw	0
  9958  002098  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9959  00209A  0E00               	movlw	0
  9960  00209C  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9961  00209E  5166               	movf	(___flmul@a+2)& (0+255),w,b
  9962  0020A0  0362               	mulwf	(___flmul@b+2)& (0+255),b
  9963  0020A2  CFF3 F073          	movff	prodl,___flmul@temp
  9964  0020A6  CFF4 F074          	movff	prodh,___flmul@temp+1
  9965  0020AA                     
  9966                           ; BSR set to: 0
  9967  0020AA  5173               	movf	___flmul@temp& (0+255),w,b
  9968  0020AC  6E51               	movwf	??___flmul^0,c
  9969  0020AE  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9970  0020B0  6E52               	movwf	(??___flmul+1)^0,c
  9971  0020B2  6A53               	clrf	(??___flmul+2)^0,c
  9972  0020B4  6A54               	clrf	(??___flmul+3)^0,c
  9973  0020B6  C053  F054         	movff	??___flmul+2,??___flmul+3
  9974  0020BA  C052  F053         	movff	??___flmul+1,??___flmul+2
  9975  0020BE  C051  F052         	movff	??___flmul,??___flmul+1
  9976  0020C2  6A51               	clrf	??___flmul^0,c
  9977  0020C4  5051               	movf	??___flmul^0,w,c
  9978  0020C6  276F               	addwf	___flmul@prod& (0+255),f,b
  9979  0020C8  5052               	movf	(??___flmul+1)^0,w,c
  9980  0020CA  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9981  0020CC  5053               	movf	(??___flmul+2)^0,w,c
  9982  0020CE  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9983  0020D0  5054               	movf	(??___flmul+3)^0,w,c
  9984  0020D2  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9985  0020D4                     
  9986                           ; BSR set to: 0
  9987  0020D4  C06A  F051         	movff	___flmul@grs,??___flmul
  9988  0020D8  C06B  F052         	movff	___flmul@grs+1,??___flmul+1
  9989  0020DC  C06C  F053         	movff	___flmul@grs+2,??___flmul+2
  9990  0020E0  C06D  F054         	movff	___flmul@grs+3,??___flmul+3
  9991  0020E4  0E19               	movlw	25
  9992  0020E6  EF7A  F010         	goto	u8410
  9993  0020EA                     u8415:
  9994  0020EA  90D8               	bcf	status,0,c
  9995  0020EC  3254               	rrcf	(??___flmul+3)^0,f,c
  9996  0020EE  3253               	rrcf	(??___flmul+2)^0,f,c
  9997  0020F0  3252               	rrcf	(??___flmul+1)^0,f,c
  9998  0020F2  3251               	rrcf	??___flmul^0,f,c
  9999  0020F4                     u8410:
 10000  0020F4  2EE8               	decfsz	wreg,f,c
 10001  0020F6  EF75  F010         	goto	u8415
 10002  0020FA  5051               	movf	??___flmul^0,w,c
 10003  0020FC  276F               	addwf	___flmul@prod& (0+255),f,b
 10004  0020FE  5052               	movf	(??___flmul+1)^0,w,c
 10005  002100  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10006  002102  5053               	movf	(??___flmul+2)^0,w,c
 10007  002104  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10008  002106  5054               	movf	(??___flmul+3)^0,w,c
 10009  002108  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10010  00210A                     
 10011                           ; BSR set to: 0
 10012  00210A  C06C  F06D         	movff	___flmul@grs+2,___flmul@grs+3
 10013  00210E  C06B  F06C         	movff	___flmul@grs+1,___flmul@grs+2
 10014  002112  C06A  F06B         	movff	___flmul@grs,___flmul@grs+1
 10015  002116  6B6A               	clrf	___flmul@grs& (0+255),b
 10016  002118                     
 10017                           ; BSR set to: 0
 10018  002118  5169               	movf	___flmul@aexp& (0+255),w,b
 10019  00211A  C06E  F051         	movff	___flmul@bexp,??___flmul
 10020  00211E  6A52               	clrf	(??___flmul+1)^0,c
 10021  002120  2651               	addwf	??___flmul^0,f,c
 10022  002122  0E00               	movlw	0
 10023  002124  2252               	addwfc	(??___flmul+1)^0,f,c
 10024  002126  0E82               	movlw	130
 10025  002128  2451               	addwf	??___flmul^0,w,c
 10026  00212A  6F73               	movwf	___flmul@temp& (0+255),b
 10027  00212C  0EFF               	movlw	255
 10028  00212E  2052               	addwfc	(??___flmul+1)^0,w,c
 10029  002130  6F74               	movwf	(___flmul@temp+1)& (0+255),b
 10030  002132  EFB0  F010         	goto	l7320
 10031  002136                     l7314:
 10032                           
 10033                           ; BSR set to: 0
 10034  002136  90D8               	bcf	status,0,c
 10035  002138  376F               	rlcf	___flmul@prod& (0+255),f,b
 10036  00213A  3770               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10037  00213C  3771               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10038  00213E  3772               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10039  002140                     
 10040                           ; BSR set to: 0
 10041  002140  AF6D               	btfss	(___flmul@grs+3)& (0+255),7,b
 10042  002142  EFA5  F010         	goto	u8421
 10043  002146  EFA7  F010         	goto	u8420
 10044  00214A                     u8421:
 10045  00214A  EFA8  F010         	goto	l1405
 10046  00214E                     u8420:
 10047  00214E                     
 10048                           ; BSR set to: 0
 10049  00214E  816F               	bsf	___flmul@prod& (0+255),0,b
 10050  002150                     l1405:
 10051                           
 10052                           ; BSR set to: 0
 10053  002150  90D8               	bcf	status,0,c
 10054  002152  376A               	rlcf	___flmul@grs& (0+255),f,b
 10055  002154  376B               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10056  002156  376C               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10057  002158  376D               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10058  00215A  0773               	decf	___flmul@temp& (0+255),f,b
 10059  00215C  A0D8               	btfss	status,0,c
 10060  00215E  0774               	decf	(___flmul@temp+1)& (0+255),f,b
 10061  002160                     l7320:
 10062                           
 10063                           ; BSR set to: 0
 10064  002160  AF71               	btfss	(___flmul@prod+2)& (0+255),7,b
 10065  002162  EFB5  F010         	goto	u8431
 10066  002166  EFB7  F010         	goto	u8430
 10067  00216A                     u8431:
 10068  00216A  EF9B  F010         	goto	l7314
 10069  00216E                     u8430:
 10070  00216E                     
 10071                           ; BSR set to: 0
 10072  00216E  0E00               	movlw	0
 10073  002170  6F69               	movwf	___flmul@aexp& (0+255),b
 10074  002172                     
 10075                           ; BSR set to: 0
 10076  002172  AF6D               	btfss	(___flmul@grs+3)& (0+255),7,b
 10077  002174  EFBE  F010         	goto	u8441
 10078  002178  EFC0  F010         	goto	u8440
 10079  00217C                     u8441:
 10080  00217C  EFE4  F010         	goto	l1407
 10081  002180                     u8440:
 10082  002180                     
 10083                           ; BSR set to: 0
 10084  002180  0EFF               	movlw	255
 10085  002182  156A               	andwf	___flmul@grs& (0+255),w,b
 10086  002184  6E51               	movwf	??___flmul^0,c
 10087  002186  0EFF               	movlw	255
 10088  002188  156B               	andwf	(___flmul@grs+1)& (0+255),w,b
 10089  00218A  6E52               	movwf	(??___flmul+1)^0,c
 10090  00218C  0EFF               	movlw	255
 10091  00218E  156C               	andwf	(___flmul@grs+2)& (0+255),w,b
 10092  002190  6E53               	movwf	(??___flmul+2)^0,c
 10093  002192  0E7F               	movlw	127
 10094  002194  156D               	andwf	(___flmul@grs+3)& (0+255),w,b
 10095  002196  6E54               	movwf	(??___flmul+3)^0,c
 10096  002198  5051               	movf	??___flmul^0,w,c
 10097  00219A  1052               	iorwf	(??___flmul+1)^0,w,c
 10098  00219C  1053               	iorwf	(??___flmul+2)^0,w,c
 10099  00219E  1054               	iorwf	(??___flmul+3)^0,w,c
 10100  0021A0  B4D8               	btfsc	status,2,c
 10101  0021A2  EFD5  F010         	goto	u8451
 10102  0021A6  EFD7  F010         	goto	u8450
 10103  0021AA                     u8451:
 10104  0021AA  EFDB  F010         	goto	l1408
 10105  0021AE                     u8450:
 10106  0021AE                     l7328:
 10107                           
 10108                           ; BSR set to: 0
 10109  0021AE  0E01               	movlw	1
 10110  0021B0  6F69               	movwf	___flmul@aexp& (0+255),b
 10111  0021B2  EFE4  F010         	goto	l1407
 10112  0021B6                     l1408:
 10113                           
 10114                           ; BSR set to: 0
 10115  0021B6  A16F               	btfss	___flmul@prod& (0+255),0,b
 10116  0021B8  EFE0  F010         	goto	u8461
 10117  0021BC  EFE2  F010         	goto	u8460
 10118  0021C0                     u8461:
 10119  0021C0  EFE4  F010         	goto	l1407
 10120  0021C4                     u8460:
 10121  0021C4  EFD7  F010         	goto	l7328
 10122  0021C8                     l1407:
 10123                           
 10124                           ; BSR set to: 0
 10125  0021C8  5169               	movf	___flmul@aexp& (0+255),w,b
 10126  0021CA  B4D8               	btfsc	status,2,c
 10127  0021CC  EFEA  F010         	goto	u8471
 10128  0021D0  EFEC  F010         	goto	u8470
 10129  0021D4                     u8471:
 10130  0021D4  EF10  F011         	goto	l7340
 10131  0021D8                     u8470:
 10132  0021D8                     
 10133                           ; BSR set to: 0
 10134  0021D8  0E01               	movlw	1
 10135  0021DA  276F               	addwf	___flmul@prod& (0+255),f,b
 10136  0021DC  0E00               	movlw	0
 10137  0021DE  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10138  0021E0  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10139  0021E2  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10140  0021E4                     
 10141                           ; BSR set to: 0
 10142  0021E4  A172               	btfss	(___flmul@prod+3)& (0+255),0,b
 10143  0021E6  EFF7  F010         	goto	u8481
 10144  0021EA  EFF9  F010         	goto	u8480
 10145  0021EE                     u8481:
 10146  0021EE  EF10  F011         	goto	l7340
 10147  0021F2                     u8480:
 10148  0021F2                     
 10149                           ; BSR set to: 0
 10150  0021F2  C06F  F051         	movff	___flmul@prod,??___flmul
 10151  0021F6  C070  F052         	movff	___flmul@prod+1,??___flmul+1
 10152  0021FA  C071  F053         	movff	___flmul@prod+2,??___flmul+2
 10153  0021FE  C072  F054         	movff	___flmul@prod+3,??___flmul+3
 10154  002202  3454               	rlcf	(??___flmul+3)^0,w,c
 10155  002204  3254               	rrcf	(??___flmul+3)^0,f,c
 10156  002206  3253               	rrcf	(??___flmul+2)^0,f,c
 10157  002208  3252               	rrcf	(??___flmul+1)^0,f,c
 10158  00220A  3251               	rrcf	??___flmul^0,f,c
 10159  00220C  C051  F06F         	movff	??___flmul,___flmul@prod
 10160  002210  C052  F070         	movff	??___flmul+1,___flmul@prod+1
 10161  002214  C053  F071         	movff	??___flmul+2,___flmul@prod+2
 10162  002218  C054  F072         	movff	??___flmul+3,___flmul@prod+3
 10163  00221C                     
 10164                           ; BSR set to: 0
 10165  00221C  4B73               	infsnz	___flmul@temp& (0+255),f,b
 10166  00221E  2B74               	incf	(___flmul@temp+1)& (0+255),f,b
 10167  002220                     l7340:
 10168                           
 10169                           ; BSR set to: 0
 10170  002220  BF74               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10171  002222  EF1B  F011         	goto	u8491
 10172  002226  5174               	movf	(___flmul@temp+1)& (0+255),w,b
 10173  002228  E108               	bnz	u8490
 10174  00222A  2973               	incf	___flmul@temp& (0+255),w,b
 10175  00222C  A0D8               	btfss	status,0,c
 10176  00222E  EF1B  F011         	goto	u8491
 10177  002232  EF1D  F011         	goto	u8490
 10178  002236                     u8491:
 10179  002236  EF27  F011         	goto	l7344
 10180  00223A                     u8490:
 10181  00223A                     
 10182                           ; BSR set to: 0
 10183  00223A  0E00               	movlw	0
 10184  00223C  6F6F               	movwf	___flmul@prod& (0+255),b
 10185  00223E  0E00               	movlw	0
 10186  002240  6F70               	movwf	(___flmul@prod+1)& (0+255),b
 10187  002242  0E80               	movlw	128
 10188  002244  6F71               	movwf	(___flmul@prod+2)& (0+255),b
 10189  002246  0E7F               	movlw	127
 10190  002248  6F72               	movwf	(___flmul@prod+3)& (0+255),b
 10191  00224A  EF55  F011         	goto	l7356
 10192  00224E                     l7344:
 10193                           
 10194                           ; BSR set to: 0
 10195  00224E  BF74               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10196  002250  EF34  F011         	goto	u8500
 10197  002254  5174               	movf	(___flmul@temp+1)& (0+255),w,b
 10198  002256  E106               	bnz	u8501
 10199  002258  0573               	decf	___flmul@temp& (0+255),w,b
 10200  00225A  B0D8               	btfsc	status,0,c
 10201  00225C  EF32  F011         	goto	u8501
 10202  002260  EF34  F011         	goto	u8500
 10203  002264                     u8501:
 10204  002264  EF40  F011         	goto	l1415
 10205  002268                     u8500:
 10206  002268                     
 10207                           ; BSR set to: 0
 10208  002268  0E00               	movlw	0
 10209  00226A  6F6F               	movwf	___flmul@prod& (0+255),b
 10210  00226C  0E00               	movlw	0
 10211  00226E  6F70               	movwf	(___flmul@prod+1)& (0+255),b
 10212  002270  0E00               	movlw	0
 10213  002272  6F71               	movwf	(___flmul@prod+2)& (0+255),b
 10214  002274  0E00               	movlw	0
 10215  002276  6F72               	movwf	(___flmul@prod+3)& (0+255),b
 10216  002278  0E00               	movlw	0
 10217  00227A  6F68               	movwf	___flmul@sign& (0+255),b
 10218  00227C  EF55  F011         	goto	l7356
 10219  002280                     l1415:
 10220                           
 10221                           ; BSR set to: 0
 10222  002280  C073  F06E         	movff	___flmul@temp,___flmul@bexp
 10223  002284                     
 10224                           ; BSR set to: 0
 10225  002284  0EFF               	movlw	255
 10226  002286  176F               	andwf	___flmul@prod& (0+255),f,b
 10227  002288  0EFF               	movlw	255
 10228  00228A  1770               	andwf	(___flmul@prod+1)& (0+255),f,b
 10229  00228C  0E7F               	movlw	127
 10230  00228E  1771               	andwf	(___flmul@prod+2)& (0+255),f,b
 10231  002290  0E00               	movlw	0
 10232  002292  1772               	andwf	(___flmul@prod+3)& (0+255),f,b
 10233  002294                     
 10234                           ; BSR set to: 0
 10235  002294  A16E               	btfss	___flmul@bexp& (0+255),0,b
 10236  002296  EF4F  F011         	goto	u8511
 10237  00229A  EF51  F011         	goto	u8510
 10238  00229E                     u8511:
 10239  00229E  EF52  F011         	goto	l7354
 10240  0022A2                     u8510:
 10241  0022A2                     
 10242                           ; BSR set to: 0
 10243  0022A2  8F71               	bsf	(___flmul@prod+2)& (0+255),7,b
 10244  0022A4                     l7354:
 10245                           
 10246                           ; BSR set to: 0
 10247  0022A4  90D8               	bcf	status,0,c
 10248  0022A6  316E               	rrcf	___flmul@bexp& (0+255),w,b
 10249  0022A8  6F72               	movwf	(___flmul@prod+3)& (0+255),b
 10250  0022AA                     l7356:
 10251                           
 10252                           ; BSR set to: 0
 10253  0022AA  5168               	movf	___flmul@sign& (0+255),w,b
 10254  0022AC  1372               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10255  0022AE                     
 10256                           ; BSR set to: 0
 10257  0022AE  C06F  F060         	movff	___flmul@prod,?___flmul
 10258  0022B2  C070  F061         	movff	___flmul@prod+1,?___flmul+1
 10259  0022B6  C071  F062         	movff	___flmul@prod+2,?___flmul+2
 10260  0022BA  C072  F063         	movff	___flmul@prod+3,?___flmul+3
 10261  0022BE                     l1402:
 10262                           
 10263                           ; BSR set to: 0
 10264  0022BE  0012               	return		;funcret
 10265  0022C0                     __end_of___flmul:
 10266                           	opt callstack 0
 10267                           
 10268 ;; *************** function ___fldiv *****************
 10269 ;; Defined at:
 10270 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;  b               4   55[COMRAM] unsigned char 
 10273 ;;  a               4   59[COMRAM] unsigned char 
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;  grs             4   74[COMRAM] unsigned long 
 10276 ;;  rem             4   67[COMRAM] unsigned long 
 10277 ;;  new_exp         2   72[COMRAM] short 
 10278 ;;  aexp            1   79[COMRAM] unsigned char 
 10279 ;;  bexp            1   78[COMRAM] unsigned char 
 10280 ;;  sign            1   71[COMRAM] unsigned char 
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  4   55[COMRAM] unsigned char 
 10283 ;; Registers used:
 10284 ;;		wreg, status,2, status,0
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10290 ;;      Params:         8       0       0       0       0       0       0       0       0
 10291 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10292 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10293 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10294 ;;Total ram usage:       25 bytes
 10295 ;; Hardware stack levels used:    1
 10296 ;; Hardware stack levels required when called:    2
 10297 ;; This function calls:
 10298 ;;		Nothing
 10299 ;; This function is called by:
 10300 ;;		_pwmDuty
 10301 ;;		_leerSensores
 10302 ;;		_efgtoa
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           	psect	text44
 10307  0022C0                     __ptext44:
 10308                           	opt callstack 0
 10309  0022C0                     ___fldiv:
 10310                           	opt callstack 23
 10311  0022C0  503B               	movf	(___fldiv@b+3)^0,w,c
 10312  0022C2  0B80               	andlw	128
 10313  0022C4  6E48               	movwf	___fldiv@sign^0,c
 10314  0022C6  503B               	movf	(___fldiv@b+3)^0,w,c
 10315  0022C8  243B               	addwf	(___fldiv@b+3)^0,w,c
 10316  0022CA  6E4F               	movwf	___fldiv@bexp^0,c
 10317  0022CC  AE3A               	btfss	(___fldiv@b+2)^0,7,c
 10318  0022CE  EF6B  F011         	goto	u8101
 10319  0022D2  EF6D  F011         	goto	u8100
 10320  0022D6                     u8101:
 10321  0022D6  EF6E  F011         	goto	l7100
 10322  0022DA                     u8100:
 10323  0022DA  804F               	bsf	___fldiv@bexp^0,0,c
 10324  0022DC                     l7100:
 10325  0022DC  504F               	movf	___fldiv@bexp^0,w,c
 10326  0022DE  B4D8               	btfsc	status,2,c
 10327  0022E0  EF74  F011         	goto	u8111
 10328  0022E4  EF76  F011         	goto	u8110
 10329  0022E8                     u8111:
 10330  0022E8  EF8B  F011         	goto	l7110
 10331  0022EC                     u8110:
 10332  0022EC  284F               	incf	___fldiv@bexp^0,w,c
 10333  0022EE  A4D8               	btfss	status,2,c
 10334  0022F0  EF7C  F011         	goto	u8121
 10335  0022F4  EF7E  F011         	goto	u8120
 10336  0022F8                     u8121:
 10337  0022F8  EF86  F011         	goto	l7106
 10338  0022FC                     u8120:
 10339  0022FC  0E00               	movlw	0
 10340  0022FE  6E38               	movwf	___fldiv@b^0,c
 10341  002300  0E00               	movlw	0
 10342  002302  6E39               	movwf	(___fldiv@b+1)^0,c
 10343  002304  0E00               	movlw	0
 10344  002306  6E3A               	movwf	(___fldiv@b+2)^0,c
 10345  002308  0E00               	movlw	0
 10346  00230A  6E3B               	movwf	(___fldiv@b+3)^0,c
 10347  00230C                     l7106:
 10348  00230C  8E3A               	bsf	(___fldiv@b+2)^0,7,c
 10349  00230E  0E00               	movlw	0
 10350  002310  6E3B               	movwf	(___fldiv@b+3)^0,c
 10351  002312  EF93  F011         	goto	l7112
 10352  002316                     l7110:
 10353  002316  0E00               	movlw	0
 10354  002318  6E38               	movwf	___fldiv@b^0,c
 10355  00231A  0E00               	movlw	0
 10356  00231C  6E39               	movwf	(___fldiv@b+1)^0,c
 10357  00231E  0E00               	movlw	0
 10358  002320  6E3A               	movwf	(___fldiv@b+2)^0,c
 10359  002322  0E00               	movlw	0
 10360  002324  6E3B               	movwf	(___fldiv@b+3)^0,c
 10361  002326                     l7112:
 10362  002326  503F               	movf	(___fldiv@a+3)^0,w,c
 10363  002328  0B80               	andlw	128
 10364  00232A  1A48               	xorwf	___fldiv@sign^0,f,c
 10365  00232C  503F               	movf	(___fldiv@a+3)^0,w,c
 10366  00232E  243F               	addwf	(___fldiv@a+3)^0,w,c
 10367  002330  6E50               	movwf	___fldiv@aexp^0,c
 10368  002332  AE3E               	btfss	(___fldiv@a+2)^0,7,c
 10369  002334  EF9E  F011         	goto	u8131
 10370  002338  EFA0  F011         	goto	u8130
 10371  00233C                     u8131:
 10372  00233C  EFA1  F011         	goto	l7120
 10373  002340                     u8130:
 10374  002340  8050               	bsf	___fldiv@aexp^0,0,c
 10375  002342                     l7120:
 10376  002342  5050               	movf	___fldiv@aexp^0,w,c
 10377  002344  B4D8               	btfsc	status,2,c
 10378  002346  EFA7  F011         	goto	u8141
 10379  00234A  EFA9  F011         	goto	u8140
 10380  00234E                     u8141:
 10381  00234E  EFBE  F011         	goto	l7130
 10382  002352                     u8140:
 10383  002352  2850               	incf	___fldiv@aexp^0,w,c
 10384  002354  A4D8               	btfss	status,2,c
 10385  002356  EFAF  F011         	goto	u8151
 10386  00235A  EFB1  F011         	goto	u8150
 10387  00235E                     u8151:
 10388  00235E  EFB9  F011         	goto	l7126
 10389  002362                     u8150:
 10390  002362  0E00               	movlw	0
 10391  002364  6E3C               	movwf	___fldiv@a^0,c
 10392  002366  0E00               	movlw	0
 10393  002368  6E3D               	movwf	(___fldiv@a+1)^0,c
 10394  00236A  0E00               	movlw	0
 10395  00236C  6E3E               	movwf	(___fldiv@a+2)^0,c
 10396  00236E  0E00               	movlw	0
 10397  002370  6E3F               	movwf	(___fldiv@a+3)^0,c
 10398  002372                     l7126:
 10399  002372  8E3E               	bsf	(___fldiv@a+2)^0,7,c
 10400  002374  0E00               	movlw	0
 10401  002376  6E3F               	movwf	(___fldiv@a+3)^0,c
 10402  002378  EFC6  F011         	goto	l7132
 10403  00237C                     l7130:
 10404  00237C  0E00               	movlw	0
 10405  00237E  6E3C               	movwf	___fldiv@a^0,c
 10406  002380  0E00               	movlw	0
 10407  002382  6E3D               	movwf	(___fldiv@a+1)^0,c
 10408  002384  0E00               	movlw	0
 10409  002386  6E3E               	movwf	(___fldiv@a+2)^0,c
 10410  002388  0E00               	movlw	0
 10411  00238A  6E3F               	movwf	(___fldiv@a+3)^0,c
 10412  00238C                     l7132:
 10413  00238C  503C               	movf	___fldiv@a^0,w,c
 10414  00238E  103D               	iorwf	(___fldiv@a+1)^0,w,c
 10415  002390  103E               	iorwf	(___fldiv@a+2)^0,w,c
 10416  002392  103F               	iorwf	(___fldiv@a+3)^0,w,c
 10417  002394  A4D8               	btfss	status,2,c
 10418  002396  EFCF  F011         	goto	u8161
 10419  00239A  EFD1  F011         	goto	u8160
 10420  00239E                     u8161:
 10421  00239E  EFE9  F011         	goto	l7144
 10422  0023A2                     u8160:
 10423  0023A2  0E00               	movlw	0
 10424  0023A4  6E38               	movwf	___fldiv@b^0,c
 10425  0023A6  0E00               	movlw	0
 10426  0023A8  6E39               	movwf	(___fldiv@b+1)^0,c
 10427  0023AA  0E00               	movlw	0
 10428  0023AC  6E3A               	movwf	(___fldiv@b+2)^0,c
 10429  0023AE  0E00               	movlw	0
 10430  0023B0  6E3B               	movwf	(___fldiv@b+3)^0,c
 10431  0023B2  0E80               	movlw	128
 10432  0023B4  123A               	iorwf	(___fldiv@b+2)^0,f,c
 10433  0023B6  0E7F               	movlw	127
 10434  0023B8  123B               	iorwf	(___fldiv@b+3)^0,f,c
 10435  0023BA                     l7138:
 10436  0023BA  5048               	movf	___fldiv@sign^0,w,c
 10437  0023BC  123B               	iorwf	(___fldiv@b+3)^0,f,c
 10438  0023BE  C038  F038         	movff	___fldiv@b,?___fldiv
 10439  0023C2  C039  F039         	movff	___fldiv@b+1,?___fldiv+1
 10440  0023C6  C03A  F03A         	movff	___fldiv@b+2,?___fldiv+2
 10441  0023CA  C03B  F03B         	movff	___fldiv@b+3,?___fldiv+3
 10442  0023CE  EF2C  F013         	goto	l1366
 10443  0023D2                     l7144:
 10444  0023D2  504F               	movf	___fldiv@bexp^0,w,c
 10445  0023D4  A4D8               	btfss	status,2,c
 10446  0023D6  EFEF  F011         	goto	u8171
 10447  0023DA  EFF1  F011         	goto	u8170
 10448  0023DE                     u8171:
 10449  0023DE  EFFB  F011         	goto	l7152
 10450  0023E2                     u8170:
 10451  0023E2  0E00               	movlw	0
 10452  0023E4  6E38               	movwf	?___fldiv^0,c
 10453  0023E6  0E00               	movlw	0
 10454  0023E8  6E39               	movwf	(?___fldiv+1)^0,c
 10455  0023EA  0E00               	movlw	0
 10456  0023EC  6E3A               	movwf	(?___fldiv+2)^0,c
 10457  0023EE  0E00               	movlw	0
 10458  0023F0  6E3B               	movwf	(?___fldiv+3)^0,c
 10459  0023F2  EF2C  F013         	goto	l1366
 10460  0023F6                     l7152:
 10461  0023F6  5050               	movf	___fldiv@aexp^0,w,c
 10462  0023F8  C04F  F040         	movff	___fldiv@bexp,??___fldiv
 10463  0023FC  6A41               	clrf	(??___fldiv+1)^0,c
 10464  0023FE  5E40               	subwf	??___fldiv^0,f,c
 10465  002400  0E00               	movlw	0
 10466  002402  5A41               	subwfb	(??___fldiv+1)^0,f,c
 10467  002404  0E7F               	movlw	127
 10468  002406  2440               	addwf	??___fldiv^0,w,c
 10469  002408  6E49               	movwf	___fldiv@new_exp^0,c
 10470  00240A  0E00               	movlw	0
 10471  00240C  2041               	addwfc	(??___fldiv+1)^0,w,c
 10472  00240E  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
 10473  002410  C038  F044         	movff	___fldiv@b,___fldiv@rem
 10474  002414  C039  F045         	movff	___fldiv@b+1,___fldiv@rem+1
 10475  002418  C03A  F046         	movff	___fldiv@b+2,___fldiv@rem+2
 10476  00241C  C03B  F047         	movff	___fldiv@b+3,___fldiv@rem+3
 10477  002420  0E00               	movlw	0
 10478  002422  6E38               	movwf	___fldiv@b^0,c
 10479  002424  0E00               	movlw	0
 10480  002426  6E39               	movwf	(___fldiv@b+1)^0,c
 10481  002428  0E00               	movlw	0
 10482  00242A  6E3A               	movwf	(___fldiv@b+2)^0,c
 10483  00242C  0E00               	movlw	0
 10484  00242E  6E3B               	movwf	(___fldiv@b+3)^0,c
 10485  002430  0E00               	movlw	0
 10486  002432  6E4B               	movwf	___fldiv@grs^0,c
 10487  002434  0E00               	movlw	0
 10488  002436  6E4C               	movwf	(___fldiv@grs+1)^0,c
 10489  002438  0E00               	movlw	0
 10490  00243A  6E4D               	movwf	(___fldiv@grs+2)^0,c
 10491  00243C  0E00               	movlw	0
 10492  00243E  6E4E               	movwf	(___fldiv@grs+3)^0,c
 10493  002440  0E00               	movlw	0
 10494  002442  6E50               	movwf	___fldiv@aexp^0,c
 10495  002444  EF5C  F012         	goto	l1368
 10496  002448                     l7162:
 10497  002448  5050               	movf	___fldiv@aexp^0,w,c
 10498  00244A  B4D8               	btfsc	status,2,c
 10499  00244C  EF2A  F012         	goto	u8181
 10500  002450  EF2C  F012         	goto	u8180
 10501  002454                     u8181:
 10502  002454  EF43  F012         	goto	l7170
 10503  002458                     u8180:
 10504  002458  90D8               	bcf	status,0,c
 10505  00245A  3644               	rlcf	___fldiv@rem^0,f,c
 10506  00245C  3645               	rlcf	(___fldiv@rem+1)^0,f,c
 10507  00245E  3646               	rlcf	(___fldiv@rem+2)^0,f,c
 10508  002460  3647               	rlcf	(___fldiv@rem+3)^0,f,c
 10509  002462  90D8               	bcf	status,0,c
 10510  002464  3638               	rlcf	___fldiv@b^0,f,c
 10511  002466  3639               	rlcf	(___fldiv@b+1)^0,f,c
 10512  002468  363A               	rlcf	(___fldiv@b+2)^0,f,c
 10513  00246A  363B               	rlcf	(___fldiv@b+3)^0,f,c
 10514  00246C  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
 10515  00246E  EF3B  F012         	goto	u8191
 10516  002472  EF3D  F012         	goto	u8190
 10517  002476                     u8191:
 10518  002476  EF3E  F012         	goto	l1371
 10519  00247A                     u8190:
 10520  00247A  8038               	bsf	___fldiv@b^0,0,c
 10521  00247C                     l1371:
 10522  00247C  90D8               	bcf	status,0,c
 10523  00247E  364B               	rlcf	___fldiv@grs^0,f,c
 10524  002480  364C               	rlcf	(___fldiv@grs+1)^0,f,c
 10525  002482  364D               	rlcf	(___fldiv@grs+2)^0,f,c
 10526  002484  364E               	rlcf	(___fldiv@grs+3)^0,f,c
 10527  002486                     l7170:
 10528  002486  503C               	movf	___fldiv@a^0,w,c
 10529  002488  5C44               	subwf	___fldiv@rem^0,w,c
 10530  00248A  503D               	movf	(___fldiv@a+1)^0,w,c
 10531  00248C  5845               	subwfb	(___fldiv@rem+1)^0,w,c
 10532  00248E  503E               	movf	(___fldiv@a+2)^0,w,c
 10533  002490  5846               	subwfb	(___fldiv@rem+2)^0,w,c
 10534  002492  503F               	movf	(___fldiv@a+3)^0,w,c
 10535  002494  5847               	subwfb	(___fldiv@rem+3)^0,w,c
 10536  002496  A0D8               	btfss	status,0,c
 10537  002498  EF50  F012         	goto	u8201
 10538  00249C  EF52  F012         	goto	u8200
 10539  0024A0                     u8201:
 10540  0024A0  EF5B  F012         	goto	l7176
 10541  0024A4                     u8200:
 10542  0024A4  8C4E               	bsf	(___fldiv@grs+3)^0,6,c
 10543  0024A6  503C               	movf	___fldiv@a^0,w,c
 10544  0024A8  5E44               	subwf	___fldiv@rem^0,f,c
 10545  0024AA  503D               	movf	(___fldiv@a+1)^0,w,c
 10546  0024AC  5A45               	subwfb	(___fldiv@rem+1)^0,f,c
 10547  0024AE  503E               	movf	(___fldiv@a+2)^0,w,c
 10548  0024B0  5A46               	subwfb	(___fldiv@rem+2)^0,f,c
 10549  0024B2  503F               	movf	(___fldiv@a+3)^0,w,c
 10550  0024B4  5A47               	subwfb	(___fldiv@rem+3)^0,f,c
 10551  0024B6                     l7176:
 10552  0024B6  2A50               	incf	___fldiv@aexp^0,f,c
 10553  0024B8                     l1368:
 10554  0024B8  0E19               	movlw	25
 10555  0024BA  6450               	cpfsgt	___fldiv@aexp^0,c
 10556  0024BC  EF62  F012         	goto	u8211
 10557  0024C0  EF64  F012         	goto	u8210
 10558  0024C4                     u8211:
 10559  0024C4  EF24  F012         	goto	l7162
 10560  0024C8                     u8210:
 10561  0024C8  5044               	movf	___fldiv@rem^0,w,c
 10562  0024CA  1045               	iorwf	(___fldiv@rem+1)^0,w,c
 10563  0024CC  1046               	iorwf	(___fldiv@rem+2)^0,w,c
 10564  0024CE  1047               	iorwf	(___fldiv@rem+3)^0,w,c
 10565  0024D0  B4D8               	btfsc	status,2,c
 10566  0024D2  EF6D  F012         	goto	u8221
 10567  0024D6  EF6F  F012         	goto	u8220
 10568  0024DA                     u8221:
 10569  0024DA  EF87  F012         	goto	l7188
 10570  0024DE                     u8220:
 10571  0024DE  804B               	bsf	___fldiv@grs^0,0,c
 10572  0024E0  EF87  F012         	goto	l7188
 10573  0024E4                     l7182:
 10574  0024E4  90D8               	bcf	status,0,c
 10575  0024E6  3638               	rlcf	___fldiv@b^0,f,c
 10576  0024E8  3639               	rlcf	(___fldiv@b+1)^0,f,c
 10577  0024EA  363A               	rlcf	(___fldiv@b+2)^0,f,c
 10578  0024EC  363B               	rlcf	(___fldiv@b+3)^0,f,c
 10579  0024EE  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
 10580  0024F0  EF7C  F012         	goto	u8231
 10581  0024F4  EF7E  F012         	goto	u8230
 10582  0024F8                     u8231:
 10583  0024F8  EF7F  F012         	goto	l1377
 10584  0024FC                     u8230:
 10585  0024FC  8038               	bsf	___fldiv@b^0,0,c
 10586  0024FE                     l1377:
 10587  0024FE  90D8               	bcf	status,0,c
 10588  002500  364B               	rlcf	___fldiv@grs^0,f,c
 10589  002502  364C               	rlcf	(___fldiv@grs+1)^0,f,c
 10590  002504  364D               	rlcf	(___fldiv@grs+2)^0,f,c
 10591  002506  364E               	rlcf	(___fldiv@grs+3)^0,f,c
 10592  002508  0649               	decf	___fldiv@new_exp^0,f,c
 10593  00250A  A0D8               	btfss	status,0,c
 10594  00250C  064A               	decf	(___fldiv@new_exp+1)^0,f,c
 10595  00250E                     l7188:
 10596  00250E  AE3A               	btfss	(___fldiv@b+2)^0,7,c
 10597  002510  EF8C  F012         	goto	u8241
 10598  002514  EF8E  F012         	goto	u8240
 10599  002518                     u8241:
 10600  002518  EF72  F012         	goto	l7182
 10601  00251C                     u8240:
 10602  00251C  0E00               	movlw	0
 10603  00251E  6E50               	movwf	___fldiv@aexp^0,c
 10604  002520  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
 10605  002522  EF95  F012         	goto	u8251
 10606  002526  EF97  F012         	goto	u8250
 10607  00252A                     u8251:
 10608  00252A  EFBB  F012         	goto	l1379
 10609  00252E                     u8250:
 10610  00252E  0EFF               	movlw	255
 10611  002530  144B               	andwf	___fldiv@grs^0,w,c
 10612  002532  6E40               	movwf	??___fldiv^0,c
 10613  002534  0EFF               	movlw	255
 10614  002536  144C               	andwf	(___fldiv@grs+1)^0,w,c
 10615  002538  6E41               	movwf	(??___fldiv+1)^0,c
 10616  00253A  0EFF               	movlw	255
 10617  00253C  144D               	andwf	(___fldiv@grs+2)^0,w,c
 10618  00253E  6E42               	movwf	(??___fldiv+2)^0,c
 10619  002540  0E7F               	movlw	127
 10620  002542  144E               	andwf	(___fldiv@grs+3)^0,w,c
 10621  002544  6E43               	movwf	(??___fldiv+3)^0,c
 10622  002546  5040               	movf	??___fldiv^0,w,c
 10623  002548  1041               	iorwf	(??___fldiv+1)^0,w,c
 10624  00254A  1042               	iorwf	(??___fldiv+2)^0,w,c
 10625  00254C  1043               	iorwf	(??___fldiv+3)^0,w,c
 10626  00254E  B4D8               	btfsc	status,2,c
 10627  002550  EFAC  F012         	goto	u8261
 10628  002554  EFAE  F012         	goto	u8260
 10629  002558                     u8261:
 10630  002558  EFB2  F012         	goto	l1380
 10631  00255C                     u8260:
 10632  00255C                     l7196:
 10633  00255C  0E01               	movlw	1
 10634  00255E  6E50               	movwf	___fldiv@aexp^0,c
 10635  002560  EFBB  F012         	goto	l1379
 10636  002564                     l1380:
 10637  002564  A038               	btfss	___fldiv@b^0,0,c
 10638  002566  EFB7  F012         	goto	u8271
 10639  00256A  EFB9  F012         	goto	u8270
 10640  00256E                     u8271:
 10641  00256E  EFBB  F012         	goto	l1379
 10642  002572                     u8270:
 10643  002572  EFAE  F012         	goto	l7196
 10644  002576                     l1379:
 10645  002576  5050               	movf	___fldiv@aexp^0,w,c
 10646  002578  B4D8               	btfsc	status,2,c
 10647  00257A  EFC1  F012         	goto	u8281
 10648  00257E  EFC3  F012         	goto	u8280
 10649  002582                     u8281:
 10650  002582  EFE7  F012         	goto	l7208
 10651  002586                     u8280:
 10652  002586  0E01               	movlw	1
 10653  002588  2638               	addwf	___fldiv@b^0,f,c
 10654  00258A  0E00               	movlw	0
 10655  00258C  2239               	addwfc	(___fldiv@b+1)^0,f,c
 10656  00258E  223A               	addwfc	(___fldiv@b+2)^0,f,c
 10657  002590  223B               	addwfc	(___fldiv@b+3)^0,f,c
 10658  002592  A03B               	btfss	(___fldiv@b+3)^0,0,c
 10659  002594  EFCE  F012         	goto	u8291
 10660  002598  EFD0  F012         	goto	u8290
 10661  00259C                     u8291:
 10662  00259C  EFE7  F012         	goto	l7208
 10663  0025A0                     u8290:
 10664  0025A0  C038  F040         	movff	___fldiv@b,??___fldiv
 10665  0025A4  C039  F041         	movff	___fldiv@b+1,??___fldiv+1
 10666  0025A8  C03A  F042         	movff	___fldiv@b+2,??___fldiv+2
 10667  0025AC  C03B  F043         	movff	___fldiv@b+3,??___fldiv+3
 10668  0025B0  3443               	rlcf	(??___fldiv+3)^0,w,c
 10669  0025B2  3243               	rrcf	(??___fldiv+3)^0,f,c
 10670  0025B4  3242               	rrcf	(??___fldiv+2)^0,f,c
 10671  0025B6  3241               	rrcf	(??___fldiv+1)^0,f,c
 10672  0025B8  3240               	rrcf	??___fldiv^0,f,c
 10673  0025BA  C040  F038         	movff	??___fldiv,___fldiv@b
 10674  0025BE  C041  F039         	movff	??___fldiv+1,___fldiv@b+1
 10675  0025C2  C042  F03A         	movff	??___fldiv+2,___fldiv@b+2
 10676  0025C6  C043  F03B         	movff	??___fldiv+3,___fldiv@b+3
 10677  0025CA  4A49               	infsnz	___fldiv@new_exp^0,f,c
 10678  0025CC  2A4A               	incf	(___fldiv@new_exp+1)^0,f,c
 10679  0025CE                     l7208:
 10680  0025CE  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10681  0025D0  EFF2  F012         	goto	u8301
 10682  0025D4  504A               	movf	(___fldiv@new_exp+1)^0,w,c
 10683  0025D6  E108               	bnz	u8300
 10684  0025D8  2849               	incf	___fldiv@new_exp^0,w,c
 10685  0025DA  A0D8               	btfss	status,0,c
 10686  0025DC  EFF2  F012         	goto	u8301
 10687  0025E0  EFF4  F012         	goto	u8300
 10688  0025E4                     u8301:
 10689  0025E4  EFFF  F012         	goto	l7212
 10690  0025E8                     u8300:
 10691  0025E8  0E00               	movlw	0
 10692  0025EA  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
 10693  0025EC  6849               	setf	___fldiv@new_exp^0,c
 10694  0025EE  0E00               	movlw	0
 10695  0025F0  6E38               	movwf	___fldiv@b^0,c
 10696  0025F2  0E00               	movlw	0
 10697  0025F4  6E39               	movwf	(___fldiv@b+1)^0,c
 10698  0025F6  0E00               	movlw	0
 10699  0025F8  6E3A               	movwf	(___fldiv@b+2)^0,c
 10700  0025FA  0E00               	movlw	0
 10701  0025FC  6E3B               	movwf	(___fldiv@b+3)^0,c
 10702  0025FE                     l7212:
 10703  0025FE  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10704  002600  EF0C  F013         	goto	u8310
 10705  002604  504A               	movf	(___fldiv@new_exp+1)^0,w,c
 10706  002606  E106               	bnz	u8311
 10707  002608  0449               	decf	___fldiv@new_exp^0,w,c
 10708  00260A  B0D8               	btfsc	status,0,c
 10709  00260C  EF0A  F013         	goto	u8311
 10710  002610  EF0C  F013         	goto	u8310
 10711  002614                     u8311:
 10712  002614  EF1A  F013         	goto	l7216
 10713  002618                     u8310:
 10714  002618  0E00               	movlw	0
 10715  00261A  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
 10716  00261C  0E00               	movlw	0
 10717  00261E  6E49               	movwf	___fldiv@new_exp^0,c
 10718  002620  0E00               	movlw	0
 10719  002622  6E38               	movwf	___fldiv@b^0,c
 10720  002624  0E00               	movlw	0
 10721  002626  6E39               	movwf	(___fldiv@b+1)^0,c
 10722  002628  0E00               	movlw	0
 10723  00262A  6E3A               	movwf	(___fldiv@b+2)^0,c
 10724  00262C  0E00               	movlw	0
 10725  00262E  6E3B               	movwf	(___fldiv@b+3)^0,c
 10726  002630  0E00               	movlw	0
 10727  002632  6E48               	movwf	___fldiv@sign^0,c
 10728  002634                     l7216:
 10729  002634  C049  F04F         	movff	___fldiv@new_exp,___fldiv@bexp
 10730  002638  A04F               	btfss	___fldiv@bexp^0,0,c
 10731  00263A  EF21  F013         	goto	u8321
 10732  00263E  EF23  F013         	goto	u8320
 10733  002642                     u8321:
 10734  002642  EF26  F013         	goto	l7222
 10735  002646                     u8320:
 10736  002646  8E3A               	bsf	(___fldiv@b+2)^0,7,c
 10737  002648  EF27  F013         	goto	l7224
 10738  00264C                     l7222:
 10739  00264C  9E3A               	bcf	(___fldiv@b+2)^0,7,c
 10740  00264E                     l7224:
 10741  00264E  90D8               	bcf	status,0,c
 10742  002650  304F               	rrcf	___fldiv@bexp^0,w,c
 10743  002652  6E3B               	movwf	(___fldiv@b+3)^0,c
 10744  002654  EFDD  F011         	goto	l7138
 10745  002658                     l1366:
 10746  002658  0012               	return		;funcret
 10747  00265A                     __end_of___fldiv:
 10748                           	opt callstack 0
 10749                           
 10750 ;; *************** function _dameDistancia *****************
 10751 ;; Defined at:
 10752 ;;		line 26 in file "./ultrasonico.h"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;  numeroSensor    1    wreg     unsigned char 
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;  numeroSensor    1   32[COMRAM] unsigned char 
 10757 ;;  distancia       4   33[COMRAM] float 
 10758 ;;  conteo          2   37[COMRAM] unsigned int 
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  4   26[COMRAM] float 
 10761 ;; Registers used:
 10762 ;;		wreg, status,2, status,0, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10768 ;;      Params:         4       0       0       0       0       0       0       0       0
 10769 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10770 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10771 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10772 ;;Total ram usage:       13 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:    3
 10775 ;; This function calls:
 10776 ;;		___lwdiv
 10777 ;;		___xxtofl
 10778 ;; This function is called by:
 10779 ;;		_inicializarComportamientoBasico
 10780 ;;		_leerSensores
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784                           	psect	text45
 10785  0034B6                     __ptext45:
 10786                           	opt callstack 0
 10787  0034B6                     _dameDistancia:
 10788                           	opt callstack 25
 10789                           
 10790                           ;incstack = 0
 10791                           ;dameDistancia@numeroSensor stored from wreg
 10792  0034B6  6E21               	movwf	dameDistancia@numeroSensor^0,c
 10793  0034B8                     
 10794                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
 10795  0034B8  0E00               	movlw	0
 10796  0034BA  6ECF               	movwf	207,c	;volatile
 10797                           
 10798                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
 10799  0034BC  0E00               	movlw	0
 10800  0034BE  6ECE               	movwf	206,c	;volatile
 10801                           
 10802                           ;./ultrasonico.h: 33:     conteo = 0;
 10803  0034C0  0E00               	movlw	0
 10804  0034C2  6E27               	movwf	(dameDistancia@conteo+1)^0,c
 10805  0034C4  0E00               	movlw	0
 10806  0034C6  6E26               	movwf	dameDistancia@conteo^0,c
 10807  0034C8                     
 10808                           ;./ultrasonico.h: 34:     LATD3 = 1;
 10809  0034C8  868C               	bsf	3980,3,c	;volatile
 10810  0034CA                     
 10811                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
 10812  0034CA  0E04               	movlw	4
 10813  0034CC                     u10797:
 10814  0034CC  2EE8               	decfsz	wreg,f,c
 10815  0034CE  D7FE               	bra	u10797
 10816  0034D0                     
 10817                           ;./ultrasonico.h: 36:     LATD3 = 0;
 10818  0034D0  968C               	bcf	3980,3,c	;volatile
 10819                           
 10820                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
 10821  0034D2  EFB3  F01A         	goto	l8242
 10822  0034D6                     l171:
 10823  0034D6  A281               	btfss	129,1,c	;volatile
 10824  0034D8  EF70  F01A         	goto	u10031
 10825  0034DC  EF72  F01A         	goto	u10030
 10826  0034E0                     u10031:
 10827  0034E0  EF6B  F01A         	goto	l171
 10828  0034E4                     u10030:
 10829  0034E4                     
 10830                           ;./ultrasonico.h: 43:             TMR1ON = 1;
 10831  0034E4  80CD               	bsf	4045,0,c	;volatile
 10832  0034E6                     l174:
 10833  0034E6  A281               	btfss	129,1,c	;volatile
 10834  0034E8  EF78  F01A         	goto	u10041
 10835  0034EC  EF7A  F01A         	goto	u10040
 10836  0034F0                     u10041:
 10837  0034F0  EFCC  F01A         	goto	l179
 10838  0034F4                     u10040:
 10839  0034F4  A09E               	btfss	3998,0,c	;volatile
 10840  0034F6  EF7F  F01A         	goto	u10051
 10841  0034FA  EF81  F01A         	goto	u10050
 10842  0034FE                     u10051:
 10843  0034FE  EF73  F01A         	goto	l174
 10844  003502                     u10050:
 10845  003502  EFCC  F01A         	goto	l179
 10846  003506                     l181:
 10847  003506  A481               	btfss	129,2,c	;volatile
 10848  003508  EF88  F01A         	goto	u10061
 10849  00350C  EF8A  F01A         	goto	u10060
 10850  003510                     u10061:
 10851  003510  EF83  F01A         	goto	l181
 10852  003514                     u10060:
 10853  003514                     
 10854                           ;./ultrasonico.h: 51:             TMR1ON = 1;
 10855  003514  80CD               	bsf	4045,0,c	;volatile
 10856  003516                     l184:
 10857  003516  A481               	btfss	129,2,c	;volatile
 10858  003518  EF90  F01A         	goto	u10071
 10859  00351C  EF92  F01A         	goto	u10070
 10860  003520                     u10071:
 10861  003520  EFCC  F01A         	goto	l179
 10862  003524                     u10070:
 10863  003524  A09E               	btfss	3998,0,c	;volatile
 10864  003526  EF97  F01A         	goto	u10081
 10865  00352A  EF99  F01A         	goto	u10080
 10866  00352E                     u10081:
 10867  00352E  EF8B  F01A         	goto	l184
 10868  003532                     u10080:
 10869  003532  EFCC  F01A         	goto	l179
 10870  003536                     l190:
 10871  003536  A681               	btfss	129,3,c	;volatile
 10872  003538  EFA0  F01A         	goto	u10091
 10873  00353C  EFA2  F01A         	goto	u10090
 10874  003540                     u10091:
 10875  003540  EF9B  F01A         	goto	l190
 10876  003544                     u10090:
 10877  003544                     
 10878                           ;./ultrasonico.h: 59:             TMR1ON = 1;
 10879  003544  80CD               	bsf	4045,0,c	;volatile
 10880  003546                     l193:
 10881  003546  A681               	btfss	129,3,c	;volatile
 10882  003548  EFA8  F01A         	goto	u10101
 10883  00354C  EFAA  F01A         	goto	u10100
 10884  003550                     u10101:
 10885  003550  EFCC  F01A         	goto	l179
 10886  003554                     u10100:
 10887  003554  A09E               	btfss	3998,0,c	;volatile
 10888  003556  EFAF  F01A         	goto	u10111
 10889  00355A  EFB1  F01A         	goto	u10110
 10890  00355E                     u10111:
 10891  00355E  EFA3  F01A         	goto	l193
 10892  003562                     u10110:
 10893  003562  EFCC  F01A         	goto	l179
 10894  003566                     l8242:
 10895  003566  5021               	movf	dameDistancia@numeroSensor^0,w,c
 10896  003568  6E1F               	movwf	??_dameDistancia^0,c
 10897  00356A  6A20               	clrf	(??_dameDistancia+1)^0,c
 10898                           
 10899                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10900                           ; Switch size 1, requested type "simple"
 10901                           ; Number of cases is 1, Range of values is 0 to 0
 10902                           ; switch strategies available:
 10903                           ; Name         Instructions Cycles
 10904                           ; simple_byte            4     3 (average)
 10905                           ;	Chosen strategy is simple_byte
 10906  00356C  5020               	movf	(??_dameDistancia+1)^0,w,c
 10907  00356E  0A00               	xorlw	0	; case 0
 10908  003570  B4D8               	btfsc	status,2,c
 10909  003572  EFBD  F01A         	goto	l9124
 10910  003576  EFCC  F01A         	goto	l179
 10911  00357A                     l9124:
 10912                           
 10913                           ; Switch size 1, requested type "simple"
 10914                           ; Number of cases is 3, Range of values is 1 to 3
 10915                           ; switch strategies available:
 10916                           ; Name         Instructions Cycles
 10917                           ; simple_byte           10     6 (average)
 10918                           ;	Chosen strategy is simple_byte
 10919  00357A  501F               	movf	??_dameDistancia^0,w,c
 10920  00357C  0A01               	xorlw	1	; case 1
 10921  00357E  B4D8               	btfsc	status,2,c
 10922  003580  EF6B  F01A         	goto	l171
 10923  003584  0A03               	xorlw	3	; case 2
 10924  003586  B4D8               	btfsc	status,2,c
 10925  003588  EF83  F01A         	goto	l181
 10926  00358C  0A01               	xorlw	1	; case 3
 10927  00358E  B4D8               	btfsc	status,2,c
 10928  003590  EF9B  F01A         	goto	l190
 10929  003594  EFCC  F01A         	goto	l179
 10930  003598                     l179:
 10931                           
 10932                           ;./ultrasonico.h: 66:     TMR1ON = 0;
 10933  003598  90CD               	bcf	4045,0,c	;volatile
 10934                           
 10935                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
 10936  00359A  B09E               	btfsc	3998,0,c	;volatile
 10937  00359C  EFD2  F01A         	goto	u10121
 10938  0035A0  EFD4  F01A         	goto	u10120
 10939  0035A4                     u10121:
 10940  0035A4  EFFA  F01A         	goto	l8248
 10941  0035A8                     u10120:
 10942  0035A8                     
 10943                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
 10944  0035A8  50CF               	movf	207,w,c	;volatile
 10945  0035AA  6E20               	movwf	(??_dameDistancia+1)^0,c
 10946  0035AC  6A1F               	clrf	??_dameDistancia^0,c
 10947  0035AE  501F               	movf	??_dameDistancia^0,w,c
 10948  0035B0  1226               	iorwf	dameDistancia@conteo^0,f,c
 10949  0035B2  5020               	movf	(??_dameDistancia+1)^0,w,c
 10950  0035B4  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
 10951                           
 10952                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
 10953  0035B6  50CE               	movf	206,w,c	;volatile
 10954  0035B8  1226               	iorwf	dameDistancia@conteo^0,f,c
 10955  0035BA                     
 10956                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
 10957  0035BA  0E00               	movlw	0
 10958  0035BC  6E09               	movwf	(___lwdiv@divisor+1)^0,c
 10959  0035BE  0E3A               	movlw	58
 10960  0035C0  6E08               	movwf	___lwdiv@divisor^0,c
 10961  0035C2  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
 10962  0035C6  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
 10963  0035CA  EC91  F020         	call	___lwdiv	;wreg free
 10964  0035CE  C006  F00D         	movff	?___lwdiv,___xxtofl@val
 10965  0035D2  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
 10966  0035D6  6A0F               	clrf	(___xxtofl@val+2)^0,c
 10967  0035D8  6A10               	clrf	(___xxtofl@val+3)^0,c
 10968  0035DA  0E00               	movlw	0
 10969  0035DC  EC85  F016         	call	___xxtofl
 10970  0035E0  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
 10971  0035E4  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
 10972  0035E8  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
 10973  0035EC  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
 10974                           
 10975                           ;./ultrasonico.h: 73:     } else {
 10976  0035F0  EF03  F01B         	goto	l8252
 10977  0035F4                     l8248:
 10978  0035F4                     
 10979                           ;./ultrasonico.h: 75:         TMR1IF = 0;
 10980  0035F4  909E               	bcf	3998,0,c	;volatile
 10981                           
 10982                           ;./ultrasonico.h: 76:         distancia = 0;
 10983  0035F6  0E00               	movlw	0
 10984  0035F8  6E22               	movwf	dameDistancia@distancia^0,c
 10985  0035FA  0E00               	movlw	0
 10986  0035FC  6E23               	movwf	(dameDistancia@distancia+1)^0,c
 10987  0035FE  0E00               	movlw	0
 10988  003600  6E24               	movwf	(dameDistancia@distancia+2)^0,c
 10989  003602  0E00               	movlw	0
 10990  003604  6E25               	movwf	(dameDistancia@distancia+3)^0,c
 10991  003606                     l8252:
 10992                           
 10993                           ;./ultrasonico.h: 80:     return distancia;
 10994  003606  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
 10995  00360A  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
 10996  00360E  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
 10997  003612  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
 10998  003616  0012               	return		;funcret
 10999  003618                     __end_of_dameDistancia:
 11000                           	opt callstack 0
 11001                           
 11002 ;; *************** function ___xxtofl *****************
 11003 ;; Defined at:
 11004 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 11005 ;; Parameters:    Size  Location     Type
 11006 ;;  sign            1    wreg     unsigned char 
 11007 ;;  val             4   12[COMRAM] long 
 11008 ;; Auto vars:     Size  Location     Type
 11009 ;;  sign            1   20[COMRAM] unsigned char 
 11010 ;;  arg             4   22[COMRAM] unsigned long 
 11011 ;;  exp             1   21[COMRAM] unsigned char 
 11012 ;; Return value:  Size  Location     Type
 11013 ;;                  4   12[COMRAM] unsigned char 
 11014 ;; Registers used:
 11015 ;;		wreg, status,2, status,0
 11016 ;; Tracked objects:
 11017 ;;		On entry : 0/0
 11018 ;;		On exit  : 0/0
 11019 ;;		Unchanged: 0/0
 11020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11021 ;;      Params:         4       0       0       0       0       0       0       0       0
 11022 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11023 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11024 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11025 ;;Total ram usage:       14 bytes
 11026 ;; Hardware stack levels used:    1
 11027 ;; Hardware stack levels required when called:    2
 11028 ;; This function calls:
 11029 ;;		Nothing
 11030 ;; This function is called by:
 11031 ;;		_pwmDuty
 11032 ;;		_dameDistancia
 11033 ;;		_PID
 11034 ;; This function uses a non-reentrant model
 11035 ;;
 11036                           
 11037                           	psect	text46
 11038  002D0A                     __ptext46:
 11039                           	opt callstack 0
 11040  002D0A                     ___xxtofl:
 11041                           	opt callstack 25
 11042                           
 11043                           ;incstack = 0
 11044                           ;___xxtofl@sign stored from wreg
 11045  002D0A  6E15               	movwf	___xxtofl@sign^0,c
 11046  002D0C  5015               	movf	___xxtofl@sign^0,w,c
 11047  002D0E  B4D8               	btfsc	status,2,c
 11048  002D10  EF8C  F016         	goto	u9901
 11049  002D14  EF8E  F016         	goto	u9900
 11050  002D18                     u9901:
 11051  002D18  EFB0  F016         	goto	l1439
 11052  002D1C                     u9900:
 11053  002D1C  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 11054  002D1E  EF95  F016         	goto	u9910
 11055  002D22  EF93  F016         	goto	u9911
 11056  002D26                     u9911:
 11057  002D26  EFB0  F016         	goto	l1439
 11058  002D2A                     u9910:
 11059  002D2A  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 11060  002D2E  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 11061  002D32  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 11062  002D36  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 11063  002D3A  1E11               	comf	??___xxtofl^0,f,c
 11064  002D3C  1E12               	comf	(??___xxtofl+1)^0,f,c
 11065  002D3E  1E13               	comf	(??___xxtofl+2)^0,f,c
 11066  002D40  1E14               	comf	(??___xxtofl+3)^0,f,c
 11067  002D42  2A11               	incf	??___xxtofl^0,f,c
 11068  002D44  0E00               	movlw	0
 11069  002D46  2212               	addwfc	(??___xxtofl+1)^0,f,c
 11070  002D48  2213               	addwfc	(??___xxtofl+2)^0,f,c
 11071  002D4A  2214               	addwfc	(??___xxtofl+3)^0,f,c
 11072  002D4C  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 11073  002D50  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 11074  002D54  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 11075  002D58  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 11076  002D5C  EFB8  F016         	goto	l8168
 11077  002D60                     l1439:
 11078  002D60  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 11079  002D64  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11080  002D68  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11081  002D6C  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11082  002D70                     l8168:
 11083  002D70  500D               	movf	___xxtofl@val^0,w,c
 11084  002D72  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 11085  002D74  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 11086  002D76  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 11087  002D78  A4D8               	btfss	status,2,c
 11088  002D7A  EFC1  F016         	goto	u9921
 11089  002D7E  EFC3  F016         	goto	u9920
 11090  002D82                     u9921:
 11091  002D82  EFCD  F016         	goto	l8174
 11092  002D86                     u9920:
 11093  002D86  0E00               	movlw	0
 11094  002D88  6E0D               	movwf	?___xxtofl^0,c
 11095  002D8A  0E00               	movlw	0
 11096  002D8C  6E0E               	movwf	(?___xxtofl+1)^0,c
 11097  002D8E  0E00               	movlw	0
 11098  002D90  6E0F               	movwf	(?___xxtofl+2)^0,c
 11099  002D92  0E00               	movlw	0
 11100  002D94  6E10               	movwf	(?___xxtofl+3)^0,c
 11101  002D96  EF5E  F017         	goto	l1442
 11102  002D9A                     l8174:
 11103  002D9A  0E96               	movlw	150
 11104  002D9C  6E16               	movwf	___xxtofl@exp^0,c
 11105  002D9E  EFD7  F016         	goto	l8178
 11106  002DA2                     l8176:
 11107  002DA2  2A16               	incf	___xxtofl@exp^0,f,c
 11108  002DA4  90D8               	bcf	status,0,c
 11109  002DA6  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 11110  002DA8  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 11111  002DAA  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 11112  002DAC  3217               	rrcf	___xxtofl@arg^0,f,c
 11113  002DAE                     l8178:
 11114  002DAE  0E00               	movlw	0
 11115  002DB0  1417               	andwf	___xxtofl@arg^0,w,c
 11116  002DB2  6E11               	movwf	??___xxtofl^0,c
 11117  002DB4  0E00               	movlw	0
 11118  002DB6  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 11119  002DB8  6E12               	movwf	(??___xxtofl+1)^0,c
 11120  002DBA  0E00               	movlw	0
 11121  002DBC  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 11122  002DBE  6E13               	movwf	(??___xxtofl+2)^0,c
 11123  002DC0  0EFE               	movlw	254
 11124  002DC2  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 11125  002DC4  6E14               	movwf	(??___xxtofl+3)^0,c
 11126  002DC6  5011               	movf	??___xxtofl^0,w,c
 11127  002DC8  1012               	iorwf	(??___xxtofl+1)^0,w,c
 11128  002DCA  1013               	iorwf	(??___xxtofl+2)^0,w,c
 11129  002DCC  1014               	iorwf	(??___xxtofl+3)^0,w,c
 11130  002DCE  A4D8               	btfss	status,2,c
 11131  002DD0  EFEC  F016         	goto	u9931
 11132  002DD4  EFEE  F016         	goto	u9930
 11133  002DD8                     u9931:
 11134  002DD8  EFD1  F016         	goto	l8176
 11135  002DDC                     u9930:
 11136  002DDC  EFFC  F016         	goto	l1446
 11137  002DE0                     l8180:
 11138  002DE0  2A16               	incf	___xxtofl@exp^0,f,c
 11139  002DE2  0E01               	movlw	1
 11140  002DE4  2617               	addwf	___xxtofl@arg^0,f,c
 11141  002DE6  0E00               	movlw	0
 11142  002DE8  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 11143  002DEA  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 11144  002DEC  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 11145  002DEE  90D8               	bcf	status,0,c
 11146  002DF0  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 11147  002DF2  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 11148  002DF4  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 11149  002DF6  3217               	rrcf	___xxtofl@arg^0,f,c
 11150  002DF8                     l1446:
 11151  002DF8  0E00               	movlw	0
 11152  002DFA  1417               	andwf	___xxtofl@arg^0,w,c
 11153  002DFC  6E11               	movwf	??___xxtofl^0,c
 11154  002DFE  0E00               	movlw	0
 11155  002E00  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 11156  002E02  6E12               	movwf	(??___xxtofl+1)^0,c
 11157  002E04  0E00               	movlw	0
 11158  002E06  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 11159  002E08  6E13               	movwf	(??___xxtofl+2)^0,c
 11160  002E0A  0EFF               	movlw	255
 11161  002E0C  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 11162  002E0E  6E14               	movwf	(??___xxtofl+3)^0,c
 11163  002E10  5011               	movf	??___xxtofl^0,w,c
 11164  002E12  1012               	iorwf	(??___xxtofl+1)^0,w,c
 11165  002E14  1013               	iorwf	(??___xxtofl+2)^0,w,c
 11166  002E16  1014               	iorwf	(??___xxtofl+3)^0,w,c
 11167  002E18  A4D8               	btfss	status,2,c
 11168  002E1A  EF11  F017         	goto	u9941
 11169  002E1E  EF13  F017         	goto	u9940
 11170  002E22                     u9941:
 11171  002E22  EFF0  F016         	goto	l8180
 11172  002E26                     u9940:
 11173  002E26  EF1B  F017         	goto	l8188
 11174  002E2A                     l8186:
 11175  002E2A  0616               	decf	___xxtofl@exp^0,f,c
 11176  002E2C  90D8               	bcf	status,0,c
 11177  002E2E  3617               	rlcf	___xxtofl@arg^0,f,c
 11178  002E30  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 11179  002E32  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 11180  002E34  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 11181  002E36                     l8188:
 11182  002E36  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 11183  002E38  EF20  F017         	goto	u9951
 11184  002E3C  EF22  F017         	goto	u9950
 11185  002E40                     u9951:
 11186  002E40  EF2A  F017         	goto	l1453
 11187  002E44                     u9950:
 11188  002E44  0E02               	movlw	2
 11189  002E46  6016               	cpfslt	___xxtofl@exp^0,c
 11190  002E48  EF28  F017         	goto	u9961
 11191  002E4C  EF2A  F017         	goto	u9960
 11192  002E50                     u9961:
 11193  002E50  EF15  F017         	goto	l8186
 11194  002E54                     u9960:
 11195  002E54                     l1453:
 11196  002E54  B016               	btfsc	___xxtofl@exp^0,0,c
 11197  002E56  EF2F  F017         	goto	u9971
 11198  002E5A  EF31  F017         	goto	u9970
 11199  002E5E                     u9971:
 11200  002E5E  EF32  F017         	goto	l8194
 11201  002E62                     u9970:
 11202  002E62  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 11203  002E64                     l8194:
 11204  002E64  90D8               	bcf	status,0,c
 11205  002E66  3216               	rrcf	___xxtofl@exp^0,f,c
 11206  002E68  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 11207  002E6C  6A12               	clrf	(??___xxtofl+1)^0,c
 11208  002E6E  6A13               	clrf	(??___xxtofl+2)^0,c
 11209  002E70  6A14               	clrf	(??___xxtofl+3)^0,c
 11210  002E72  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 11211  002E76  6A13               	clrf	(??___xxtofl+2)^0,c
 11212  002E78  6A12               	clrf	(??___xxtofl+1)^0,c
 11213  002E7A  6A11               	clrf	??___xxtofl^0,c
 11214  002E7C  5011               	movf	??___xxtofl^0,w,c
 11215  002E7E  1217               	iorwf	___xxtofl@arg^0,f,c
 11216  002E80  5012               	movf	(??___xxtofl+1)^0,w,c
 11217  002E82  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 11218  002E84  5013               	movf	(??___xxtofl+2)^0,w,c
 11219  002E86  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 11220  002E88  5014               	movf	(??___xxtofl+3)^0,w,c
 11221  002E8A  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 11222  002E8C  5015               	movf	___xxtofl@sign^0,w,c
 11223  002E8E  B4D8               	btfsc	status,2,c
 11224  002E90  EF4C  F017         	goto	u9981
 11225  002E94  EF4E  F017         	goto	u9980
 11226  002E98                     u9981:
 11227  002E98  EF56  F017         	goto	l8204
 11228  002E9C                     u9980:
 11229  002E9C  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 11230  002E9E  EF55  F017         	goto	u9990
 11231  002EA2  EF53  F017         	goto	u9991
 11232  002EA6                     u9991:
 11233  002EA6  EF56  F017         	goto	l8204
 11234  002EAA                     u9990:
 11235  002EAA  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 11236  002EAC                     l8204:
 11237  002EAC  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 11238  002EB0  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 11239  002EB4  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 11240  002EB8  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 11241  002EBC                     l1442:
 11242  002EBC  0012               	return		;funcret
 11243  002EBE                     __end_of___xxtofl:
 11244                           	opt callstack 0
 11245                           
 11246 ;; *************** function ___lwdiv *****************
 11247 ;; Defined at:
 11248 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;  dividend        2    5[COMRAM] unsigned int 
 11251 ;;  divisor         2    7[COMRAM] unsigned int 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;  quotient        2   10[COMRAM] unsigned int 
 11254 ;;  counter         1    9[COMRAM] unsigned char 
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  2    5[COMRAM] unsigned int 
 11257 ;; Registers used:
 11258 ;;		wreg, status,2, status,0
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 0/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11264 ;;      Params:         4       0       0       0       0       0       0       0       0
 11265 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11266 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11267 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11268 ;;Total ram usage:        7 bytes
 11269 ;; Hardware stack levels used:    1
 11270 ;; Hardware stack levels required when called:    2
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_dameDistancia
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           	psect	text47
 11279  004122                     __ptext47:
 11280                           	opt callstack 0
 11281  004122                     ___lwdiv:
 11282                           	opt callstack 25
 11283  004122  0E00               	movlw	0
 11284  004124  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11285  004126  0E00               	movlw	0
 11286  004128  6E0B               	movwf	___lwdiv@quotient^0,c
 11287  00412A  5008               	movf	___lwdiv@divisor^0,w,c
 11288  00412C  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11289  00412E  B4D8               	btfsc	status,2,c
 11290  004130  EF9C  F020         	goto	u9871
 11291  004134  EF9E  F020         	goto	u9870
 11292  004138                     u9871:
 11293  004138  EFC6  F020         	goto	l1275
 11294  00413C                     u9870:
 11295  00413C  0E01               	movlw	1
 11296  00413E  6E0A               	movwf	___lwdiv@counter^0,c
 11297  004140  EFA6  F020         	goto	l8148
 11298  004144                     l8146:
 11299  004144  90D8               	bcf	status,0,c
 11300  004146  3608               	rlcf	___lwdiv@divisor^0,f,c
 11301  004148  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11302  00414A  2A0A               	incf	___lwdiv@counter^0,f,c
 11303  00414C                     l8148:
 11304  00414C  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
 11305  00414E  EFAB  F020         	goto	u9881
 11306  004152  EFAD  F020         	goto	u9880
 11307  004156                     u9881:
 11308  004156  EFA2  F020         	goto	l8146
 11309  00415A                     u9880:
 11310  00415A                     l8150:
 11311  00415A  90D8               	bcf	status,0,c
 11312  00415C  360B               	rlcf	___lwdiv@quotient^0,f,c
 11313  00415E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11314  004160  5008               	movf	___lwdiv@divisor^0,w,c
 11315  004162  5C06               	subwf	___lwdiv@dividend^0,w,c
 11316  004164  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 11317  004166  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11318  004168  A0D8               	btfss	status,0,c
 11319  00416A  EFB9  F020         	goto	u9891
 11320  00416E  EFBB  F020         	goto	u9890
 11321  004172                     u9891:
 11322  004172  EFC0  F020         	goto	l8158
 11323  004176                     u9890:
 11324  004176  5008               	movf	___lwdiv@divisor^0,w,c
 11325  004178  5E06               	subwf	___lwdiv@dividend^0,f,c
 11326  00417A  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 11327  00417C  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11328  00417E  800B               	bsf	___lwdiv@quotient^0,0,c
 11329  004180                     l8158:
 11330  004180  90D8               	bcf	status,0,c
 11331  004182  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11332  004184  3208               	rrcf	___lwdiv@divisor^0,f,c
 11333  004186  2E0A               	decfsz	___lwdiv@counter^0,f,c
 11334  004188  EFAD  F020         	goto	l8150
 11335  00418C                     l1275:
 11336  00418C  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
 11337  004190  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11338  004194  0012               	return		;funcret
 11339  004196                     __end_of___lwdiv:
 11340                           	opt callstack 0
 11341                           
 11342 ;; *************** function _configurarAdc *****************
 11343 ;; Defined at:
 11344 ;;		line 7 in file "./adc.h"
 11345 ;; Parameters:    Size  Location     Type
 11346 ;;		None
 11347 ;; Auto vars:     Size  Location     Type
 11348 ;;		None
 11349 ;; Return value:  Size  Location     Type
 11350 ;;                  1    wreg      void 
 11351 ;; Registers used:
 11352 ;;		wreg, status,2
 11353 ;; Tracked objects:
 11354 ;;		On entry : 0/0
 11355 ;;		On exit  : 0/0
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11358 ;;      Params:         0       0       0       0       0       0       0       0       0
 11359 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11360 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11361 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11362 ;;Total ram usage:        0 bytes
 11363 ;; Hardware stack levels used:    1
 11364 ;; Hardware stack levels required when called:    2
 11365 ;; This function calls:
 11366 ;;		Nothing
 11367 ;; This function is called by:
 11368 ;;		_main
 11369 ;; This function uses a non-reentrant model
 11370 ;;
 11371                           
 11372                           	psect	text48
 11373  00486A                     __ptext48:
 11374                           	opt callstack 0
 11375  00486A                     _configurarAdc:
 11376                           	opt callstack 28
 11377  00486A                     
 11378                           ;./adc.h: 8:     ADCON1 = 0b00001110;
 11379  00486A  0E0E               	movlw	14
 11380  00486C  6EC1               	movwf	193,c	;volatile
 11381                           
 11382                           ;./adc.h: 9:     ADCON2 = 0b10100101;
 11383  00486E  0EA5               	movlw	165
 11384  004870  6EC0               	movwf	192,c	;volatile
 11385  004872  0012               	return		;funcret
 11386  004874                     __end_of_configurarAdc:
 11387                           	opt callstack 0
 11388                           
 11389 ;; *************** function _configPwm *****************
 11390 ;; Defined at:
 11391 ;;		line 47 in file "./pwm.h"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;  channel         1    wreg     unsigned char 
 11394 ;; Auto vars:     Size  Location     Type
 11395 ;;  channel         1    7[COMRAM] unsigned char 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      void 
 11398 ;; Registers used:
 11399 ;;		wreg, status,2, status,0
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0
 11406 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11407 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11408 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11409 ;;Total ram usage:        3 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:    2
 11412 ;; This function calls:
 11413 ;;		Nothing
 11414 ;; This function is called by:
 11415 ;;		_main
 11416 ;; This function uses a non-reentrant model
 11417 ;;
 11418                           
 11419                           	psect	text49
 11420  004544                     __ptext49:
 11421                           	opt callstack 0
 11422  004544                     _configPwm:
 11423                           	opt callstack 28
 11424                           
 11425                           ;incstack = 0
 11426                           ;configPwm@channel stored from wreg
 11427  004544  6E08               	movwf	configPwm@channel^0,c
 11428  004546                     
 11429                           ;./pwm.h: 56:         T2CKPS0 = 1;
 11430  004546  80CA               	bsf	4042,0,c	;volatile
 11431                           
 11432                           ;./pwm.h: 57:         T2CKPS1 = 1;
 11433  004548  82CA               	bsf	4042,1,c	;volatile
 11434  00454A                     
 11435                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
 11436  00454A  0E7C               	movlw	124
 11437  00454C  6ECB               	movwf	203,c	;volatile
 11438                           
 11439                           ;./pwm.h: 63:     switch (channel) {
 11440  00454E  EFB3  F022         	goto	l8342
 11441  004552                     l151:
 11442                           
 11443                           ;./pwm.h: 66:             TRISC2 = 0;
 11444  004552  9494               	bcf	3988,2,c	;volatile
 11445                           
 11446                           ;./pwm.h: 67:             CCP1M3 = 1;
 11447  004554  86BD               	bsf	4029,3,c	;volatile
 11448                           
 11449                           ;./pwm.h: 68:             CCP1M2 = 1;
 11450  004556  84BD               	bsf	4029,2,c	;volatile
 11451                           
 11452                           ;./pwm.h: 71:             break;
 11453  004558  EFC8  F022         	goto	l152
 11454  00455C                     l153:
 11455                           
 11456                           ;./pwm.h: 74:             TRISC1 = 0;
 11457  00455C  9294               	bcf	3988,1,c	;volatile
 11458                           
 11459                           ;./pwm.h: 75:             CCP2M3 = 1;
 11460  00455E  86BA               	bsf	4026,3,c	;volatile
 11461                           
 11462                           ;./pwm.h: 76:             CCP2M2 = 1;
 11463  004560  84BA               	bsf	4026,2,c	;volatile
 11464                           
 11465                           ;./pwm.h: 77:             break;
 11466  004562  EFC8  F022         	goto	l152
 11467  004566                     l8342:
 11468  004566  5008               	movf	configPwm@channel^0,w,c
 11469  004568  6E06               	movwf	??_configPwm^0,c
 11470  00456A  6A07               	clrf	(??_configPwm+1)^0,c
 11471                           
 11472                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11473                           ; Switch size 1, requested type "simple"
 11474                           ; Number of cases is 1, Range of values is 0 to 0
 11475                           ; switch strategies available:
 11476                           ; Name         Instructions Cycles
 11477                           ; simple_byte            4     3 (average)
 11478                           ;	Chosen strategy is simple_byte
 11479  00456C  5007               	movf	(??_configPwm+1)^0,w,c
 11480  00456E  0A00               	xorlw	0	; case 0
 11481  004570  B4D8               	btfsc	status,2,c
 11482  004572  EFBD  F022         	goto	l9126
 11483  004576  EFC8  F022         	goto	l152
 11484  00457A                     l9126:
 11485                           
 11486                           ; Switch size 1, requested type "simple"
 11487                           ; Number of cases is 2, Range of values is 1 to 2
 11488                           ; switch strategies available:
 11489                           ; Name         Instructions Cycles
 11490                           ; simple_byte            7     4 (average)
 11491                           ;	Chosen strategy is simple_byte
 11492  00457A  5006               	movf	??_configPwm^0,w,c
 11493  00457C  0A01               	xorlw	1	; case 1
 11494  00457E  B4D8               	btfsc	status,2,c
 11495  004580  EFA9  F022         	goto	l151
 11496  004584  0A03               	xorlw	3	; case 2
 11497  004586  B4D8               	btfsc	status,2,c
 11498  004588  EFAE  F022         	goto	l153
 11499  00458C  EFC8  F022         	goto	l152
 11500  004590                     l152:
 11501                           
 11502                           ;./pwm.h: 81:     TMR2ON = 1;
 11503  004590  84CA               	bsf	4042,2,c	;volatile
 11504  004592  0012               	return		;funcret
 11505  004594                     __end_of_configPwm:
 11506                           	opt callstack 0
 11507                           
 11508 ;; *************** function _UART_init *****************
 11509 ;; Defined at:
 11510 ;;		line 13 in file "./UART.h"
 11511 ;; Parameters:    Size  Location     Type
 11512 ;;  BAUD            4   31[COMRAM] long 
 11513 ;; Auto vars:     Size  Location     Type
 11514 ;;  frecuenciaCr    4    0        long 
 11515 ;; Return value:  Size  Location     Type
 11516 ;;                  1    wreg      void 
 11517 ;; Registers used:
 11518 ;;		wreg, status,2, status,0, cstack
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11524 ;;      Params:         4       0       0       0       0       0       0       0       0
 11525 ;;      Locals:         8       0       0       0       0       0       0       0       0
 11526 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11527 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11528 ;;Total ram usage:       12 bytes
 11529 ;; Hardware stack levels used:    1
 11530 ;; Hardware stack levels required when called:    3
 11531 ;; This function calls:
 11532 ;;		___aldiv
 11533 ;; This function is called by:
 11534 ;;		_main
 11535 ;; This function uses a non-reentrant model
 11536 ;;
 11537                           
 11538                           	psect	text50
 11539  004196                     __ptext50:
 11540                           	opt callstack 0
 11541  004196                     _UART_init:
 11542                           	opt callstack 27
 11543  004196                     
 11544                           ;./UART.h: 16:     TRISC6 = 0;
 11545  004196  9C94               	bcf	3988,6,c	;volatile
 11546  004198                     
 11547                           ;./UART.h: 17:     TRISC7 = 1;
 11548  004198  8E94               	bsf	3988,7,c	;volatile
 11549  00419A                     
 11550                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 11551  00419A  0E10               	movlw	16
 11552  00419C  6E16               	movwf	___aldiv@divisor^0,c
 11553  00419E  0E00               	movlw	0
 11554  0041A0  6E17               	movwf	(___aldiv@divisor+1)^0,c
 11555  0041A2  0E00               	movlw	0
 11556  0041A4  6E18               	movwf	(___aldiv@divisor+2)^0,c
 11557  0041A6  0E00               	movlw	0
 11558  0041A8  6E19               	movwf	(___aldiv@divisor+3)^0,c
 11559  0041AA  0E00               	movlw	0
 11560  0041AC  6E12               	movwf	___aldiv@dividend^0,c
 11561  0041AE  0E09               	movlw	9
 11562  0041B0  6E13               	movwf	(___aldiv@dividend+1)^0,c
 11563  0041B2  0E3D               	movlw	61
 11564  0041B4  6E14               	movwf	(___aldiv@dividend+2)^0,c
 11565  0041B6  0E00               	movlw	0
 11566  0041B8  6E15               	movwf	(___aldiv@dividend+3)^0,c
 11567  0041BA  EC0C  F01B         	call	___aldiv	;wreg free
 11568  0041BE  C012  F028         	movff	?___aldiv,_UART_init$1690
 11569  0041C2  C013  F029         	movff	?___aldiv+1,_UART_init$1690+1
 11570  0041C6  C014  F02A         	movff	?___aldiv+2,_UART_init$1690+2
 11571  0041CA  C015  F02B         	movff	?___aldiv+3,_UART_init$1690+3
 11572  0041CE                     
 11573                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 11574  0041CE  C028  F012         	movff	_UART_init$1690,___aldiv@dividend
 11575  0041D2  C029  F013         	movff	_UART_init$1690+1,___aldiv@dividend+1
 11576  0041D6  C02A  F014         	movff	_UART_init$1690+2,___aldiv@dividend+2
 11577  0041DA  C02B  F015         	movff	_UART_init$1690+3,___aldiv@dividend+3
 11578  0041DE  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 11579  0041E2  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 11580  0041E6  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 11581  0041EA  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 11582  0041EE  EC0C  F01B         	call	___aldiv	;wreg free
 11583  0041F2  0412               	decf	?___aldiv^0,w,c
 11584  0041F4  6EAF               	movwf	175,c	;volatile
 11585  0041F6                     
 11586                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 11587  0041F6  84AC               	bsf	172,2,c	;volatile
 11588  0041F8                     
 11589                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 11590  0041F8  98AC               	bcf	172,4,c	;volatile
 11591  0041FA                     
 11592                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 11593  0041FA  8EAB               	bsf	171,7,c	;volatile
 11594  0041FC                     
 11595                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 11596  0041FC  9CAC               	bcf	172,6,c	;volatile
 11597  0041FE                     
 11598                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 11599  0041FE  8AAC               	bsf	172,5,c	;volatile
 11600  004200                     
 11601                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 11602  004200  9CAB               	bcf	171,6,c	;volatile
 11603  004202                     
 11604                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 11605  004202  88AB               	bsf	171,4,c	;volatile
 11606  004204  0012               	return		;funcret
 11607  004206                     __end_of_UART_init:
 11608                           	opt callstack 0
 11609                           
 11610 ;; *************** function ___aldiv *****************
 11611 ;; Defined at:
 11612 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 11613 ;; Parameters:    Size  Location     Type
 11614 ;;  dividend        4   17[COMRAM] long 
 11615 ;;  divisor         4   21[COMRAM] long 
 11616 ;; Auto vars:     Size  Location     Type
 11617 ;;  quotient        4   27[COMRAM] long 
 11618 ;;  sign            1   26[COMRAM] unsigned char 
 11619 ;;  counter         1   25[COMRAM] unsigned char 
 11620 ;; Return value:  Size  Location     Type
 11621 ;;                  4   17[COMRAM] long 
 11622 ;; Registers used:
 11623 ;;		wreg, status,2, status,0
 11624 ;; Tracked objects:
 11625 ;;		On entry : 0/0
 11626 ;;		On exit  : 0/0
 11627 ;;		Unchanged: 0/0
 11628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11629 ;;      Params:         8       0       0       0       0       0       0       0       0
 11630 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11631 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11632 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11633 ;;Total ram usage:       14 bytes
 11634 ;; Hardware stack levels used:    1
 11635 ;; Hardware stack levels required when called:    2
 11636 ;; This function calls:
 11637 ;;		Nothing
 11638 ;; This function is called by:
 11639 ;;		_map
 11640 ;;		_UART_init
 11641 ;; This function uses a non-reentrant model
 11642 ;;
 11643                           
 11644                           	psect	text51
 11645  003618                     __ptext51:
 11646                           	opt callstack 0
 11647  003618                     ___aldiv:
 11648                           	opt callstack 24
 11649  003618  0E00               	movlw	0
 11650  00361A  6E1B               	movwf	___aldiv@sign^0,c
 11651  00361C  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 11652  00361E  EF15  F01B         	goto	u9790
 11653  003622  EF13  F01B         	goto	u9791
 11654  003626                     u9791:
 11655  003626  EF1F  F01B         	goto	l8090
 11656  00362A                     u9790:
 11657  00362A  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 11658  00362C  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 11659  00362E  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 11660  003630  6C16               	negf	___aldiv@divisor^0,c
 11661  003632  0E00               	movlw	0
 11662  003634  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 11663  003636  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 11664  003638  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 11665  00363A  0E01               	movlw	1
 11666  00363C  6E1B               	movwf	___aldiv@sign^0,c
 11667  00363E                     l8090:
 11668  00363E  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 11669  003640  EF26  F01B         	goto	u9800
 11670  003644  EF24  F01B         	goto	u9801
 11671  003648                     u9801:
 11672  003648  EF30  F01B         	goto	l8096
 11673  00364C                     u9800:
 11674  00364C  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 11675  00364E  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 11676  003650  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 11677  003652  6C12               	negf	___aldiv@dividend^0,c
 11678  003654  0E00               	movlw	0
 11679  003656  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 11680  003658  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 11681  00365A  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 11682  00365C  0E01               	movlw	1
 11683  00365E  1A1B               	xorwf	___aldiv@sign^0,f,c
 11684  003660                     l8096:
 11685  003660  0E00               	movlw	0
 11686  003662  6E1C               	movwf	___aldiv@quotient^0,c
 11687  003664  0E00               	movlw	0
 11688  003666  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 11689  003668  0E00               	movlw	0
 11690  00366A  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 11691  00366C  0E00               	movlw	0
 11692  00366E  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 11693  003670  5016               	movf	___aldiv@divisor^0,w,c
 11694  003672  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 11695  003674  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 11696  003676  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 11697  003678  B4D8               	btfsc	status,2,c
 11698  00367A  EF41  F01B         	goto	u9811
 11699  00367E  EF43  F01B         	goto	u9810
 11700  003682                     u9811:
 11701  003682  EF79  F01B         	goto	l8118
 11702  003686                     u9810:
 11703  003686  0E01               	movlw	1
 11704  003688  6E1A               	movwf	___aldiv@counter^0,c
 11705  00368A  EF4D  F01B         	goto	l8104
 11706  00368E                     l8102:
 11707  00368E  90D8               	bcf	status,0,c
 11708  003690  3616               	rlcf	___aldiv@divisor^0,f,c
 11709  003692  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 11710  003694  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 11711  003696  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 11712  003698  2A1A               	incf	___aldiv@counter^0,f,c
 11713  00369A                     l8104:
 11714  00369A  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 11715  00369C  EF52  F01B         	goto	u9821
 11716  0036A0  EF54  F01B         	goto	u9820
 11717  0036A4                     u9821:
 11718  0036A4  EF47  F01B         	goto	l8102
 11719  0036A8                     u9820:
 11720  0036A8                     l8106:
 11721  0036A8  90D8               	bcf	status,0,c
 11722  0036AA  361C               	rlcf	___aldiv@quotient^0,f,c
 11723  0036AC  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 11724  0036AE  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 11725  0036B0  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 11726  0036B2  5016               	movf	___aldiv@divisor^0,w,c
 11727  0036B4  5C12               	subwf	___aldiv@dividend^0,w,c
 11728  0036B6  5017               	movf	(___aldiv@divisor+1)^0,w,c
 11729  0036B8  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 11730  0036BA  5018               	movf	(___aldiv@divisor+2)^0,w,c
 11731  0036BC  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 11732  0036BE  5019               	movf	(___aldiv@divisor+3)^0,w,c
 11733  0036C0  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 11734  0036C2  A0D8               	btfss	status,0,c
 11735  0036C4  EF66  F01B         	goto	u9831
 11736  0036C8  EF68  F01B         	goto	u9830
 11737  0036CC                     u9831:
 11738  0036CC  EF71  F01B         	goto	l8114
 11739  0036D0                     u9830:
 11740  0036D0  5016               	movf	___aldiv@divisor^0,w,c
 11741  0036D2  5E12               	subwf	___aldiv@dividend^0,f,c
 11742  0036D4  5017               	movf	(___aldiv@divisor+1)^0,w,c
 11743  0036D6  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 11744  0036D8  5018               	movf	(___aldiv@divisor+2)^0,w,c
 11745  0036DA  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 11746  0036DC  5019               	movf	(___aldiv@divisor+3)^0,w,c
 11747  0036DE  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 11748  0036E0  801C               	bsf	___aldiv@quotient^0,0,c
 11749  0036E2                     l8114:
 11750  0036E2  90D8               	bcf	status,0,c
 11751  0036E4  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 11752  0036E6  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 11753  0036E8  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 11754  0036EA  3216               	rrcf	___aldiv@divisor^0,f,c
 11755  0036EC  2E1A               	decfsz	___aldiv@counter^0,f,c
 11756  0036EE  EF54  F01B         	goto	l8106
 11757  0036F2                     l8118:
 11758  0036F2  501B               	movf	___aldiv@sign^0,w,c
 11759  0036F4  B4D8               	btfsc	status,2,c
 11760  0036F6  EF7F  F01B         	goto	u9841
 11761  0036FA  EF81  F01B         	goto	u9840
 11762  0036FE                     u9841:
 11763  0036FE  EF89  F01B         	goto	l8122
 11764  003702                     u9840:
 11765  003702  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 11766  003704  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 11767  003706  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 11768  003708  6C1C               	negf	___aldiv@quotient^0,c
 11769  00370A  0E00               	movlw	0
 11770  00370C  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 11771  00370E  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 11772  003710  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 11773  003712                     l8122:
 11774  003712  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 11775  003716  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 11776  00371A  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 11777  00371E  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 11778  003722  0012               	return		;funcret
 11779  003724                     __end_of___aldiv:
 11780                           	opt callstack 0
 11781                           
 11782 ;; *************** function _boton *****************
 11783 ;; Defined at:
 11784 ;;		line 86 in file "main.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;		None
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;		None
 11789 ;; Return value:  Size  Location     Type
 11790 ;;                  1    wreg      void 
 11791 ;; Registers used:
 11792 ;;		wreg, status,2, status,0, cstack
 11793 ;; Tracked objects:
 11794 ;;		On entry : 0/0
 11795 ;;		On exit  : 0/0
 11796 ;;		Unchanged: 0/0
 11797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11798 ;;      Params:         0       0       0       0       0       0       0       0       0
 11799 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11800 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11801 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11802 ;;Total ram usage:        2 bytes
 11803 ;; Hardware stack levels used:    1
 11804 ;; Hardware stack levels required when called:    1
 11805 ;; This function calls:
 11806 ;;		_antiRebote
 11807 ;; This function is called by:
 11808 ;;		Interrupt level 2
 11809 ;; This function uses a non-reentrant model
 11810 ;;
 11811                           
 11812                           	psect	intcode
 11813  000008                     __pintcode:
 11814                           	opt callstack 0
 11815  000008                     _boton:
 11816                           	opt callstack 19
 11817                           
 11818                           ;incstack = 0
 11819  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11820  00000A  ED26  F022         	call	int_func,f	;refresh shadow registers
 11821                           
 11822                           	psect	intcode_body
 11823  00444C                     __pintcode_body:
 11824                           	opt callstack 19
 11825  00444C                     int_func:
 11826                           	opt callstack 19
 11827  00444C  0006               	pop		; remove dummy address from shadow register refresh
 11828  00444E                     
 11829                           ;main.c: 88:     if (INT0IF)
 11830  00444E  A2F2               	btfss	4082,1,c	;volatile
 11831  004450  EF2C  F022         	goto	i2u657_41
 11832  004454  EF2E  F022         	goto	i2u657_40
 11833  004458                     i2u657_41:
 11834  004458  EF4E  F022         	goto	i2l250
 11835  00445C                     i2u657_40:
 11836  00445C                     
 11837                           ;main.c: 89:     {;main.c: 90:         antiRebote(1);
 11838  00445C  0E01               	movlw	1
 11839  00445E  ECFA  F021         	call	_antiRebote
 11840  004462                     
 11841                           ;main.c: 91:         if (pausa) {
 11842  004462  0101               	movlb	1	; () banked
 11843  004464  51FD               	movf	_pausa& (0+255),w,b
 11844  004466  B4D8               	btfsc	status,2,c
 11845  004468  EF38  F022         	goto	i2u658_41
 11846  00446C  EF3A  F022         	goto	i2u658_40
 11847  004470                     i2u658_41:
 11848  004470  EF4A  F022         	goto	i2l248
 11849  004474                     i2u658_40:
 11850  004474                     
 11851                           ; BSR set to: 1
 11852                           ;main.c: 92:             pausa = 0;
 11853  004474  0E00               	movlw	0
 11854  004476  6FFD               	movwf	_pausa& (0+255),b
 11855  004478                     
 11856                           ; BSR set to: 1
 11857                           ;main.c: 93:             LATD2 = 1;
 11858  004478  848C               	bsf	3980,2,c	;volatile
 11859  00447A                     
 11860                           ; BSR set to: 1
 11861                           ;main.c: 94:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 11862  00447A  0E10               	movlw	16
 11863  00447C  6E05               	movwf	(??_boton+1)^0,c
 11864  00447E  0E39               	movlw	57
 11865  004480  6E04               	movwf	??_boton^0,c
 11866  004482  0E0E               	movlw	14
 11867  004484                     i2u1080_47:
 11868  004484  2EE8               	decfsz	wreg,f,c
 11869  004486  D7FE               	bra	i2u1080_47
 11870  004488  2E04               	decfsz	??_boton^0,f,c
 11871  00448A  D7FC               	bra	i2u1080_47
 11872  00448C  2E05               	decfsz	(??_boton+1)^0,f,c
 11873  00448E  D7FA               	bra	i2u1080_47
 11874                           
 11875                           ;main.c: 95:         } else {
 11876  004490  EF4D  F022         	goto	i2l5896
 11877  004494                     i2l248:
 11878                           
 11879                           ; BSR set to: 1
 11880                           ;main.c: 96:             LATD2 = 0;
 11881  004494  948C               	bcf	3980,2,c	;volatile
 11882  004496                     
 11883                           ; BSR set to: 1
 11884                           ;main.c: 97:             pausa = 1;
 11885  004496  0E01               	movlw	1
 11886  004498  6FFD               	movwf	_pausa& (0+255),b
 11887  00449A                     i2l5896:
 11888                           
 11889                           ;main.c: 100:         INT0IF = 0;
 11890  00449A  92F2               	bcf	4082,1,c	;volatile
 11891  00449C                     i2l250:
 11892  00449C  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11893  00449E  0011               	retfie		f
 11894  0044A0                     __end_of_boton:
 11895                           	opt callstack 0
 11896                           
 11897 ;; *************** function _antiRebote *****************
 11898 ;; Defined at:
 11899 ;;		line 198 in file "main.c"
 11900 ;; Parameters:    Size  Location     Type
 11901 ;;  pin             1    wreg     unsigned char 
 11902 ;; Auto vars:     Size  Location     Type
 11903 ;;  pin             1    2[COMRAM] unsigned char 
 11904 ;; Return value:  Size  Location     Type
 11905 ;;                  1    wreg      void 
 11906 ;; Registers used:
 11907 ;;		wreg, status,2, status,0
 11908 ;; Tracked objects:
 11909 ;;		On entry : 0/0
 11910 ;;		On exit  : 0/0
 11911 ;;		Unchanged: 0/0
 11912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11913 ;;      Params:         0       0       0       0       0       0       0       0       0
 11914 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11915 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11916 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11917 ;;Total ram usage:        3 bytes
 11918 ;; Hardware stack levels used:    1
 11919 ;; This function calls:
 11920 ;;		Nothing
 11921 ;; This function is called by:
 11922 ;;		_boton
 11923 ;; This function uses a non-reentrant model
 11924 ;;
 11925                           
 11926                           	psect	text53
 11927  0043F4                     __ptext53:
 11928                           	opt callstack 0
 11929  0043F4                     _antiRebote:
 11930                           	opt callstack 19
 11931                           
 11932                           ;incstack = 0
 11933                           ;antiRebote@pin stored from wreg
 11934  0043F4  6E03               	movwf	antiRebote@pin^0,c
 11935  0043F6                     
 11936                           ;main.c: 200:     switch (pin) {
 11937  0043F6  EF14  F022         	goto	i2l5822
 11938  0043FA                     i2l284:
 11939  0043FA  A081               	btfss	129,0,c	;volatile
 11940  0043FC  EF02  F022         	goto	i2u653_41
 11941  004400  EF04  F022         	goto	i2u653_40
 11942  004404                     i2u653_41:
 11943  004404  EFFD  F021         	goto	i2l284
 11944  004408                     i2u653_40:
 11945  004408                     i2l287:
 11946  004408  B081               	btfsc	129,0,c	;volatile
 11947  00440A  EF09  F022         	goto	i2u654_41
 11948  00440E  EF0B  F022         	goto	i2u654_40
 11949  004412                     i2u654_41:
 11950  004412  EF04  F022         	goto	i2l287
 11951  004416                     i2u654_40:
 11952  004416                     
 11953                           ;main.c: 204:             _delay((unsigned long)((100)*(4000000/4000.0)));
 11954  004416  0E82               	movlw	130
 11955  004418  6E01               	movwf	??_antiRebote^0,c
 11956  00441A  0EDE               	movlw	222
 11957  00441C                     i2u1081_47:
 11958  00441C  2EE8               	decfsz	wreg,f,c
 11959  00441E  D7FE               	bra	i2u1081_47
 11960  004420  2E01               	decfsz	??_antiRebote^0,f,c
 11961  004422  D7FC               	bra	i2u1081_47
 11962                           
 11963                           ;main.c: 205:             break;
 11964  004424  EF25  F022         	goto	i2l292
 11965  004428                     i2l5822:
 11966  004428  5003               	movf	antiRebote@pin^0,w,c
 11967  00442A  6E01               	movwf	??_antiRebote^0,c
 11968  00442C  6A02               	clrf	(??_antiRebote+1)^0,c
 11969                           
 11970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11971                           ; Switch size 1, requested type "simple"
 11972                           ; Number of cases is 1, Range of values is 0 to 0
 11973                           ; switch strategies available:
 11974                           ; Name         Instructions Cycles
 11975                           ; simple_byte            4     3 (average)
 11976                           ;	Chosen strategy is simple_byte
 11977  00442E  5002               	movf	(??_antiRebote+1)^0,w,c
 11978  004430  0A00               	xorlw	0	; case 0
 11979  004432  B4D8               	btfsc	status,2,c
 11980  004434  EF1E  F022         	goto	i2l9128
 11981  004438  EF25  F022         	goto	i2l292
 11982  00443C                     i2l9128:
 11983                           
 11984                           ; Switch size 1, requested type "simple"
 11985                           ; Number of cases is 1, Range of values is 1 to 1
 11986                           ; switch strategies available:
 11987                           ; Name         Instructions Cycles
 11988                           ; simple_byte            4     3 (average)
 11989                           ;	Chosen strategy is simple_byte
 11990  00443C  5001               	movf	??_antiRebote^0,w,c
 11991  00443E  0A01               	xorlw	1	; case 1
 11992  004440  B4D8               	btfsc	status,2,c
 11993  004442  EFFD  F021         	goto	i2l284
 11994  004446  EF25  F022         	goto	i2l292
 11995  00444A                     i2l292:
 11996  00444A  0012               	return		;funcret
 11997  00444C                     __end_of_antiRebote:
 11998                           	opt callstack 0
 11999                           
 12000                           	psect	rparam
 12001  0000                     
 12002                           	psect	temp
 12003  00005A                     btemp:
 12004                           	opt callstack 0
 12005  00005A                     	ds	1
 12006  0000                     int$flags	set	btemp
 12007  0000                     wtemp8	set	btemp+1
 12008  0000                     ttemp5	set	btemp+1
 12009  0000                     ttemp6	set	btemp+4
 12010  0000                     ttemp7	set	btemp+8
 12011                           tosu	equ	0xFFF
 12012                           tosh	equ	0xFFE
 12013                           tosl	equ	0xFFD
 12014                           stkptr	equ	0xFFC
 12015                           pclatu	equ	0xFFB
 12016                           pclath	equ	0xFFA
 12017                           pcl	equ	0xFF9
 12018                           tblptru	equ	0xFF8
 12019                           tblptrh	equ	0xFF7
 12020                           tblptrl	equ	0xFF6
 12021                           tablat	equ	0xFF5
 12022                           prodh	equ	0xFF4
 12023                           prodl	equ	0xFF3
 12024                           indf0	equ	0xFEF
 12025                           postinc0	equ	0xFEE
 12026                           postdec0	equ	0xFED
 12027                           preinc0	equ	0xFEC
 12028                           plusw0	equ	0xFEB
 12029                           fsr0h	equ	0xFEA
 12030                           fsr0l	equ	0xFE9
 12031                           wreg	equ	0xFE8
 12032                           indf1	equ	0xFE7
 12033                           postinc1	equ	0xFE6
 12034                           postdec1	equ	0xFE5
 12035                           preinc1	equ	0xFE4
 12036                           plusw1	equ	0xFE3
 12037                           fsr1h	equ	0xFE2
 12038                           fsr1l	equ	0xFE1
 12039                           bsr	equ	0xFE0
 12040                           indf2	equ	0xFDF
 12041                           postinc2	equ	0xFDE
 12042                           postdec2	equ	0xFDD
 12043                           preinc2	equ	0xFDC
 12044                           plusw2	equ	0xFDB
 12045                           fsr2h	equ	0xFDA
 12046                           fsr2l	equ	0xFD9
 12047                           status	equ	0xFD8


Data Sizes:
    Strings     224
    Constant    4
    Data        1
    BSS         253
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    160     160
    BANK1           256      5     254
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1370_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 50
		 -> STR_10(CODE[6]), STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[10]), 
		 -> buffer(BANK1[50]), STR_2(CODE[25]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _efgtoa->___flmul
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _UART_printf->_UART_write
    _leerSensores->___fldiv
    ___fladd->_dameDistancia
    _pwmDuty->___flmul
    _map->___aldiv
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___fladd
    _dameDistancia->___xxtofl
    ___xxtofl->___lwdiv
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _probarSensores->_probarUltrasonico
    _probarUltrasonico->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    ___flsub->___flmul
    ___flge->___flmul
    _velocidadEstandar->_pwmDuty
    _pwmDuty->___fltol
    ___fltol->___flmul

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_probarSensores

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  129711
                                              2 BANK1      3     3      0
                          _UART_init
                          _configPwm
                      _configurarAdc
    _inicializarComportamientoBasico
                     _probarSensores
 ---------------------------------------------------------------------------------
 (1) _probarSensores                                       2     2      0  115026
                                              0 BANK1      2     2      0
                        _UART_printf
                     _dameLecturaAdc
                       _leerSensores
                  _probarUltrasonico
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _probarUltrasonico                                    3     3      0   52476
                                            157 BANK0      3     3      0
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   51539
                                            139 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   50309
                                            131 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   49770
                                            101 BANK0     30    24      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   36179
                                             33 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             80 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6091
                                             21 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     303
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2182
                                             21 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6493
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4227
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1615
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2     906
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10009
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5198
                                             39 COMRAM    16     8      8
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (2) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13437
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12069
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12069
                                             31 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             21 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3921
                                             80 COMRAM     4     4      0
                                              0 BANK0     21    13      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (3) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (12) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configPwm
   _configurarAdc
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___fldiv (ARG)
             ___fladd (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fldiv (ARG)
             ___fladd (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _probarSensores
     _UART_printf
       _UART_write
     _dameLecturaAdc
     _leerSensores
       ___fladd
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _probarUltrasonico
       _UART_printf
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv
                 ___fladd (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___fldiv (ARG)
                 ___fladd (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___fladd (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      5      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F7      20        0.0%
DATA                 0      0     1F7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Aug 10 20:23:22 2020

                       ?_probarUltrasonico 0001                               ___fldiv@aexp 0050  
                             ___fldiv@bexp 004F                               ___fldiv@sign 0048  
                             ___awdiv@sign 000B                             ?_configurarAdc 0001  
                      ___wmul@multiplicand 0008                                __CFG_BORV$3 000000  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                      ??_probarUltrasonico 00FD                                        l200 3616  
                                      l203 4204                                        l212 485A  
                                      l221 4396                                        l230 466E  
                                      l151 4552                                        l135 4120  
                                      l143 2D08                                        l215 4868  
                                      l152 4590                                        l224 4872  
                                      l153 455C                                        l154 4592  
                                      l171 34D6                                        l227 464C  
                                      l148 4546                                        l181 3506  
                                      l173 34E4                                        l229 465A  
                                      l190 3536                                        l174 34E6  
                                      l183 3514                                        l263 3B0A  
                                      l255 40A6                                        l192 3544  
                                      l184 3516                                        l193 3546  
                                      l179 3598                                        l540 3340  
                                      l541 3330                                        l630 3E30  
                                      l295 45E0                                        l535 3320  
                                      l625 3DB4                                        l571 4852  
                                      l547 3350                                        l628 3DF6  
                                      l636 26F8                                        l638 2700  
                                      l718 1070                                        l911 34B4  
                                      l656 2936                                        l674 149C  
                                      l692 0CD8                                        l780 4266  
                                      l781 426E                                        l774 1918  
                                      l766 19D2                                        l863 3722  
                                      l784 482C                                        l795 42C8  
                                      l796 42D8                                        l898 31D4  
                             __CFG_CPB$OFF 000000                                        _PR2 000FCB  
                             __CFG_CPD$OFF 000000                               __CFG_BOR$OFF 000000  
                                      _abs 46B4                                        _map 40A8  
                                      _pad 3D70                               ___awmod@sign 000B  
                                      wreg 000FE8                               ___flmul@aexp 0069  
                             ___flmul@bexp 006E                   _DISTANCIA_PRIORIDAD_BAJA 010C  
                 _DISTANCIA_PRIORIDAD_ALTA 0114                               ___flmul@sign 0068  
                             ___flmul@temp 0073                               ___flmul@prod 006F  
                             __CFG_LVP$OFF 000000                               ___fltol@exp1 007E  
                             __CFG_WDT$OFF 000000                                       l1015 3D6E  
                                     l1043 3F8A                                       ?_abs 0018  
                                     l1028 3EE0                                       l1054 3930  
                                     l1312 1BC2                                       l1081 382A  
                                     l1321 1E92                                       l1313 1BB0  
                                     l1049 38EA                                       l1402 22BE  
                                     l1314 1B76                                       l1058 4762  
                                     l1405 2150                                       l1501 3044  
                                     l1510 2B4C                                       l1415 2280  
                                     l1407 21C8                                       l1408 21B6  
                                     l1520 479A                                       l1504 304C  
                                     l1329 1CDC                                       l1513 2A90  
                                     l1282 4194                                       l1442 2EBC  
                                     l1338 1DAC                                       l1354 4628  
                                     l1275 418C                                       l1371 247C  
                                     l1339 1D9A                                       l1380 2564  
                                     l1453 2E54                                       l1613 4338  
                                     l1446 2DF8                                       l1366 2658  
                                     l1470 46EA                                       l1534 472A  
                                     l1439 2D60                                       l1368 24B8  
                                     l1528 4542                                       l1608 4330  
                                     l1377 24FE                                       l1473 46F2  
                                     l1465 3A2E                                       l1379 2576  
                                     l1564 44F0                                       l1549 3CAA  
                                     l1557 46B2                                       l1398 1F5A  
                                     l1567 4874                                       l1594 4806  
                                     l1588 43F2                                       l1598 3BE0  
                                     l7000 2B3C                                       l7010 4824  
                                     l7100 22DC                                       l7004 4764  
                                     l7020 3080                                       l7102 22EC  
                                     l7110 2316                                       l7030 30C2  
                                     l7022 3084                                       l7014 304E  
                                     ?_map 0020                                       ?_pad 0016  
                                     l7200 2586                                       l7120 2342  
                                     l7112 2326                                       l7104 22FC  
                                     l7008 4808                                       l7040 311C  
                                     l7032 30E0                                       l7024 3092  
                                     l7016 3052                                       l8000 1606  
                                     l7210 25E8                                       l7202 2592  
                                     l7122 2352                                       l7130 237C  
                                     l7114 232C                                       l7106 230C  
                                     l7042 314A                                       l7034 30E8  
                                     l7050 3184                                       l7026 30B2  
                                     l7018 3060                                       l8010 16AC  
                                     l8002 1628                                       l8100 3686  
                                     l7220 2646                                       l7212 25FE  
                                     l7204 25A0                                       l7140 23BE  
                                     l7132 238C                                       l7124 2362  
                                     l7116 2332                                       l7108 230E  
                                     l7300 2066                                       l7052 3194  
                                     l7044 316A                                       l7036 30FC  
                                     l7028 30B6                                       l7060 3356  
                                     l8020 1774                                       l8012 16D0  
                                     l8004 1638                                       l8110 36D0  
                                     l8102 368E                                       l7222 264C  
                                     l7214 2618                                       l7206 25CA  
                                     l7134 23A2                                       l7126 2372  
                                     l7118 2340                                       l7310 210A  
                                     l7302 2082                                       l7054 31B4  
                                     l7046 316C                                       l7038 310A  
                                     l7070 33B6                                       l7062 3364  
                                     l8022 1786                                       l8014 16F4  
                                     l8006 166A                                       l8120 3702  
                                     l8112 36E0                                       l8104 369A  
                                     l8200 2E9C                                       l7224 264E  
                                     l7216 2634                                       l7208 25CE  
                                     l7160 2440                                       l7152 23F6  
                                     l7136 23B2                                       l7144 23D2  
                                     l7128 2374                                       l7320 2160  
                                     l7312 2118                                       l7304 208E  
                                     l7240 1EC2                                       l7232 1E94  
                                     l7048 317E                                       l7080 342C  
                                     l7072 33D4                                       l7064 3384  
                                     l7400 3D42                                       l8040 18B4  
                                     l8024 179C                                       l8032 1806  
                                     l8016 173C                                       l8008 167A  
                                     l8122 3712                                       l8114 36E2  
                                     l8106 36A8                                       l8202 2EAA  
                                     l7218 2638                                       l7170 2486  
                                     l7162 2448                                       l7154 2410  
                                     l7146 23E2                                       l7138 23BA  
                                     l7322 216E                                       l7314 2136  
                                     l7306 20AA                                       l7250 1EFE  
                                     l7242 1ED2                                       l7234 1EA2  
                                     l8210 2BAE                                       l8130 4856  
                                     l7090 3494                                       l7082 344C  
                                     l7074 33DC                                       l7066 3388  
                                     l7058 3352                                       l7402 3D48  
                                     l8050 1950                                       l8042 18E8  
                                     l8034 1834                                       l8026 17AA  
                                     l8116 36EC                                       l8108 36B2  
                                     l8140 4122                                       l8204 2EAC  
                                     l7180 24DE                                       l7172 24A4  
                                     l7164 2458                                       l7156 2420  
                                     l7148 23E2                                       l7332 21D8  
                                     l7340 2220                                       l7324 2172  
                                     l7316 2140                                       l7308 20D4  
                                     l7260 1F34                                       l7252 1F04  
                                     l7244 1EE2                                       l7236 1EB0  
                                     l7500 3750                                       l8220 2CDC  
                                     l8212 2BCE                                       l8300 3310  
                                     l7084 345E                                       l7076 33F0  
                                     l7068 3396                                       l6700 47DE  
                                     l7404 3D4E                                       l7420 3E50  
                                     l7412 3E32                                       l8060 198E  
                                     l8052 195E                                       l8028 17DA  
                                     l8132 4206                                       l8118 36F2  
                                     l8150 415A                                       l8142 412A  
                                     l8230 34CA                                       l7190 251C  
                                     l7182 24E4                                       l7174 24A6  
                                     l7166 246C                                       l7158 2430  
                                     l7094 22C0                                       l7350 2294  
                                     l7342 223A                                       l7334 21E4  
                                     l7326 2180                                       l7318 214E  
                                     l7262 1F44                                       l7254 1F12  
                                     l7246 1EE8                                       l7238 1EB2  
                                     l7510 379E                                       l7502 377A  
                                     l8126 40A8                                       l8214 2C54  
                                     l7078 33FE                                       l7086 3464  
                                     l6702 47E2                                       l7406 3D5E  
                                     l7430 3E88                                       l7422 3E5E  
                                     l7414 3E36                                       l8054 1972  
                                     l8038 18A2                                       l8134 420E  
                                     l8310 3A34                                       l8160 4186  
                                     l8152 4160                                       l8144 413C  
                                     l8232 34D0                                       l7192 2520  
                                     l7184 24EE                                       l7176 24B6  
                                     l7168 247A                                       l7096 22CC  
                                     l7352 22A2                                       l7344 224E  
                                     l7336 21F2                                       l7328 21AE  
                                     l7280 1FC6                                       l7272 1F8E  
                                     l7264 1F4A                                       l7256 1F14  
                                     l7248 1EF8                                       l7520 37CA  
                                     l7504 377C                                       l8080 42A8  
                                     l8072 4270                                       l8216 2C98  
                                     l8208 2B4E                                       l8400 45C6  
                                     l6800 1B84                                       l6720 1A00  
                                     l6712 19D4                                       l9120 2F7A  
                                     l7088 3474                                       l6704 47FA  
                                     l7600 28D8                                       l7408 3D66  
                                     l7432 3E96                                       l7440 3EC0  
                                     l7424 3E66                                       l7416 3E44  
                                     l8048 192C                                       l8064 199C  
                                     l8136 421C                                       l8312 3A38  
                                     l8320 3AB0                                       l8090 363E  
                                     l8082 3618                                       l8154 4176  
                                     l8146 4144                                       l8170 2D86  
                                     l8162 2D0C                                       l8250 35F4  
                                     l8234 34F4                                       l8242 3566  
                                     l8226 34B8                                       l7194 252E  
                                     l7186 24FC                                       l7178 24C8  
                                     l7098 22DA                                       l7354 22A4  
                                     l7346 2268                                       l7338 221C  
                                     l7290 2010                                       l7282 1FDE  
                                     l7274 1F9A                                       l7266 1F6A  
                                     l7258 1F24                                       l7530 37FA  
                                     l7506 378C                                       l8074 4280  
                                     l9122 2CF2                                       l8330 482E  
                                     l8402 45DC                                       l6810 1BAE  
                                     l6802 1B90                                       l6730 1A3A  
                                     l6722 1A10                                       l6714 19E0  
                                     l7602 28EA                                       l7370 3CB0  
                                     l7442 3ED0                                       l7434 3EAC  
                                     l7426 3E78                                       l7418 3E4C  
                                     l7450 3F10                                       l7362 45E2  
                                     l8066 19C0                                       l8058 1980  
                                     l8138 424A                                       l8314 3A60  
                                     l8322 3AE4                                       l8092 364C  
                                     l8084 361C                                       l8332 4546  
                                     l8156 417E                                       l8148 414C  
                                     l8180 2DE0                                       l8164 2D1C  
                                     l8252 3606                                       l8244 35A8  
                                     l9124 357A                                       l8236 3524  
                                     l8228 34C8                                       l7196 255C  
                                     l7188 250E                                       l7348 2284  
                                     l7356 22AA                                       l7292 2020  
                                     l7284 1FEA                                       l7276 1FA4  
                                     l7268 1F7A                                       l7532 380A  
                                     l7516 37B6                                       l7508 3790  
                                     l8076 428E                                       l6900 1E64  
                                     l6820 1C04                                       l6812 1BD0  
                                     l6804 1B94                                       l6740 1A68  
                                     l6732 1A40                                       l6724 1A20  
                                     l6716 19EE                                       l8260 433A  
                                     l7540 44F6                                       l7604 28F6  
                                     l7380 3CE0                                       l7372 3CBE  
                                     l7444 3ED8                                       l7436 3EB4  
                                     l7428 3E80                                       l7460 3F88  
                                     l7452 3F20                                       l7364 45F4  
                                     l6708 46F4                                       l7700 0C86  
                                     l7620 0916                                       l7612 08E6  
                                     l8324 3AF0                                       l8316 3A88  
                                     l8094 365C                                       l8086 362A  
                                     l8350 4196                                       l9126 457A  
                                     l8342 4566                                       l8158 4180  
                                     l8190 2E44                                       l8182 2DE2  
                                     l8174 2D9A                                       l8166 2D2A  
                                     l8246 35BA                                       l8238 3554  
                                     l7358 22AE                                       l7294 202C  
                                     l7286 1FF6                                       l7278 1FBA  
                                     l7534 381A                                       l7526 37DE  
                                     l7518 37C0                                       l8078 429E  
                                     l6910 1E82                                       l6902 1E6A  
                                     l6830 1C3E                                       l6822 1C12  
                                     l6814 1BE0                                       l6806 1BA2  
                                     l6750 1A9C                                       l6742 1A6A  
                                     l6734 1A52                                       l6726 1A22  
                                     l6718 19F0                                       l8262 433E  
                                     l7542 450A                                       l7606 28FE  
                                     l7550 265A                                       l7390 3D0E  
                                     l7382 3CE4                                       l7374 3CC6  
                                     l7438 3EBA                                       l7454 3F4E  
                                     l7470 389A                                       l7702 0C98  
                                     l7710 0CE4                                       l7630 096C  
                                     l7622 093A                                       l7614 08F0  
                                     l8270 44B2                                       l9118 3AC6  
                                     l8096 3660                                       l8088 363A  
                                     l8360 41F8                                       l8352 4198  
                                     l8192 2E62                                       l8184 2DEE  
                                     l8176 2DA2                                       l8168 2D70  
                                     l8248 35F4                                       l7296 203C  
                                     l7288 2004                                       l7528 37EA  
                                     l8280 462C                                       l6904 1E6C  
                                     l6840 1CAA                                       l6832 1C40  
                                     l6824 1C20                                       l6808 1BA4  
                                     l6760 1AD8                                       l6744 1A7A  
                                     l6752 1AA4                                       l6736 1A54  
                                     l6728 1A2A                                       l8264 4362  
                                     l7544 4538                                       l6680 3C06  
                                     l6920 3DA0                                       l7608 290E  
                                     l7560 26D2                                       l7552 267A  
                                     l7392 3D1C                                       l7384 3CEC  
                                     l7376 3CCA                                       l7368 3CAC  
                                     l7456 3F5E                                       l7448 3EE2  
                                     l7480 3928                                       l7472 38AA  
                                     l7464 382C                                       l7800 115C  
                                     l7720 0D24                                       l7704 0CAA  
                                     l7640 099A                                       l7632 097E  
                                     l7624 0944                                       l7616 0900  
                                     l8272 44BA                                       l8098 3670  
                                     l8370 4202                                       l8362 41FA  
                                     l8354 419A                                       l8338 454A  
                                     l8194 2E64                                       l8186 2E2A  
                                     l8178 2DAE                                       l7298 2056  
                                     l8290 465C                                       l8282 4634  
                                     l6906 1E72                                       l6850 1D02  
                                     l6842 1CAC                                       l6834 1C4A  
                                     l6826 1C2C                                       l6818 1BF4  
                                     l6770 1AEC                                       l6762 1ADC  
                                     l6754 1AB4                                       l6746 1A8A  
                                     l6738 1A5A                                       l8266 4366  
                                     l7546 453C                                       l7538 44F2  
                                     l6682 3C10                                       l6690 4670  
                                     l6930 3E04                                       l6922 3DAC  
                                     l6914 3D70                                       l7570 272E  
                                     l7562 26EC                                       l7554 26A2  
                                     l7394 3D22                                       l7386 3CFE  
                                     l7378 3CD8                                       l7458 3F82  
                                     l7482 392E                                       l7474 38B8  
                                     l7466 385C                                       l7490 4752  
                                     l7810 1192                                       l7802 116C  
                                     l7730 0D80                                       l7722 0D5A  
                                     l7706 0CB2                                       l7650 0A0E  
                                     l7634 098A                                       l7642 09A0  
                                     l7626 094C                                       l7618 090E  
                                     l8274 44C2                                       l8364 41FC  
                                     l8356 41CE                                       l8348 4196  
                                     l8372 486A                                       l8196 2E68  
                                     l8188 2E36                                       l8284 4636  
                                     l6908 1E80                                       l6860 1D30  
                                     l6844 1CBC                                       l6828 1C30  
                                     l6836 1C50                                       l6780 1B00  
                                     l6772 1AF0                                       l6764 1AE0  
                                     l6756 1AC6                                       l6748 1A9A  
                                     l6684 3C2E                                       l6676 3BE2  
                                     l6692 467C                                       l6932 3E18  
                                     l6924 3DC0                                       l6916 3D7E  
                                     l7580 27CE                                       l7572 2736  
                                     l7564 2708                                       l7556 26C2  
                                     l7396 3D38                                       l7388 3D06  
                                     l7476 38CA                                       l7468 386C  
                                     l6940 3932                                       l7900 1466  
                                     l7820 11C6                                       l7812 1196  
                                     l7804 1170                                       l7740 0DC4  
                                     l7732 0D92                                       l7724 0D62  
                                     l7716 0CF6                                       l7708 0CCC  
                                     l7652 0A2A                                       l7644 09C6  
                                     l7660 0A74                                       l7636 0992  
                                     l7628 095E                                       l8276 44DE  
                                     l8268 44A0                                       l8380 402E  
                                     l8366 41FE                                       l8358 41F6  
                                     l8198 2E8C                                       l7494 3724  
                                     l8286 4648                                       l6862 1D3E  
                                     l6854 1D16                                       l6870 1D5C  
                                     l6838 1C76                                       l6846 1CCC  
                                     l6782 1B04                                       l6774 1AF4  
                                     l6766 1AE4                                       l6758 1AD4  
                                     l6790 1B14                                       l8294 31D6  
                                     l7910 2EBE                                       l6686 3C64  
                                     l6678 3BF4                                       l6694 468E  
                                     l6926 3DD4                                       l6918 3D92  
                                     l7590 288A                                       l7582 27D4  
                                     l7574 2740                                       l7566 271A  
                                     l7558 26D0                                       l7398 3D40  
                                     l7478 38D8                                       l7486 472C  
                                     l6942 3952                                       l7902 1476  
                                     l7830 1264                                       l7822 11CA  
                                     l7814 119C                                       l7806 1176  
                                     l7750 0E0E                                       l7742 0DDC  
                                     l7734 0DA0                                       l7718 0D08  
                                     l7726 0D66                                       l7670 0AFE  
                                     l7662 0A9A                                       l7654 0A42  
                                     l7638 0996                                       l8390 407C  
                                     l8382 4034                                       l8374 401E  
                                     l8368 4200                                       l7496 373C  
                                     l8288 464A                                       l6864 1D46  
                                     l6856 1D20                                       l6848 1CF2  
                                     l6872 1D6A                                       l6792 1B18  
                                     l6784 1B08                                       l6776 1AF8  
                                     l6768 1AE8                                       l8296 32F0  
                                     l7920 2F2C                                       l7912 2ED2  
                                     l6936 46B4                                       l6696 4692  
                                     l6928 3DD8                                       l7592 28A4  
                                     l7576 2746                                       l7584 2838  
                                     l7568 2728                                       l7488 4742  
                                     l6944 3990                                       l6952 39D0  
                                     l7904 147C                                       l7840 12C2  
                                     l7808 1182                                       l7816 11A2  
                                     l7824 11D0                                       l7832 1268  
                                     l7752 0E22                                       l7760 0F18  
                                     l7744 0DEE                                       l7736 0DA4  
                                     l7728 0D6E                                       l7680 0B34  
                                     l7656 0A4C                                       l7648 09FC  
                                     l8392 409A                                       l8384 4042  
                                     l8376 4022                                       l8394 4594  
                                     l6882 1DBC                                       l6890 1E12  
                                     l6874 1D6E                                       l6866 1D4A  
                                     l6858 1D2E                                       l6794 1B42  
                                     l6786 1B0C                                       l6778 1AFC  
                                     l8298 3300                                       l7930 2F54  
                                     l7922 2F30                                       l7914 2ED6  
                                     l6938 46CE                                       l6698 47D2  
                                     l7586 2852                                       l7594 28B2  
                                     l7578 27C8                                       l6954 39E2  
                                     l6946 39B8                                       l6962 4398  
                                     l6970 4310                                       l7850 1300  
                                     l7842 12D2                                       l7834 1286  
                                     l7826 1228                                       l7818 11B4  
                                     l7770 0FE4                                       l7762 0F36  
                                     l7754 0E86                                       l7738 0DB6  
                                     l7746 0DF6                                       l7690 0C02  
                                     l7666 0AD0                                       l8386 4060  
                                     l8378 4028                                       l8396 459A  
                                     l6892 1E22                                       l6884 1DC8  
                                     l6876 1D7C                                       l6868 1D5A  
                                     l6796 1B5E                                       l6788 1B10  
                                     l7932 2F5C                                       l7916 2EDA  
                                     l7596 28C4                                       l7588 2870  
                                     l6948 39C4                                       l6980 29B0  
                                     l6964 43A8                                       l6972 4322  
                                     l7860 1336                                       l7852 1310  
                                     l7844 12D6                                       l7836 12A2  
                                     l7828 125C                                       l7780 105C  
                                     l7772 0FF4                                       l7764 0F6A  
                                     l7756 0EDE                                       l7748 0DFE  
                                     l7692 0C36                                       l7684 0B6A  
                                     l7668 0AE2                                       l8388 4070  
                                     l8398 45B0                                       l6894 1E32  
                                     l6886 1DD6                                       l6878 1D92  
                                     l6798 1B6E                                       l7942 3004  
                                     l7934 2F90                                       l7926 2F36  
                                     l7918 2EF6                                       l7598 28D2  
                                     l6958 3A26                                       l6990 2A80  
                                     l6982 29C4                                       l6966 42DA  
                                     l7870 1392                                       l7862 1342  
                                     l7854 1318                                       l7846 12E6  
                                     l7838 12B4                                       l7790 1112  
                                     l7782 1068                                       l7774 1004  
                                     l7766 0F9E                                       l7758 0F12  
                                     l7694 0C3E                                       l7686 0B9E  
                                     l7678 0B1A                                       l6896 1E52  
                                     l6888 1E10                                       l7944 3016  
                                     l7928 2F4C                                       l6984 29D2  
                                     l6992 2AB4                                       l6976 2938  
                                     l7880 13DC                                       l7864 1348  
                                     l7872 1398                                       l7856 1326  
                                     l7848 12F8                                       l7792 1124  
                                     l7784 108C                                       l7776 1038  
                                     l7768 0FB2                                       l7688 0BA4  
                                     l7696 0C72                                       l7960 3B50  
                                     l7952 3B0C                                       l6898 1E56  
                                     l7946 3028                                       l7938 2FC6  
                                     l6994 2AF0                                       l6978 2958  
                                     l7890 140C                                       l7882 13E8  
                                     l7874 13AA                                       l7866 136E  
                                     l7858 132E                                       l7794 1132  
                                     l7786 10F0                                       l7778 1048  
                                     l7698 0C82                                       l7962 3B68  
                                     l7954 3B36                                       l6996 2B04  
                                     l6988 2A44                                       l7884 13F0  
                                     l7876 13C4                                       l7868 138A  
                                     l7788 10FE                                       l7796 113A  
                                     l7964 3B84                                       l7980 14E6  
                                     l7972 149E                                       l8940 3F92  
                                     l6998 2B2C                                       l7894 1440  
                                     l7886 1400                                       l7878 13CA  
                                     l7798 114E                                       l7966 3B96  
                                     l7958 3B42                                       l7990 157E  
                                     l7982 150A                                       l7974 14C2  
                                     l8950 3F9C                                       l8942 3F94  
                                     l7896 1452                                       l7888 1406  
                                     l7968 3BBE                                       l7992 159E  
                                     l7984 1512                                       l7976 14D0  
                                     l8960 3FA6                                       l8952 3F9E  
                                     l8944 3F96                                       l7898 145E  
                                     l7994 15AC                                       l7986 1520  
                                     l7978 14E2                                       l8970 3FB0  
                                     l8962 3FA8                                       l8954 3FA0  
                                     l8946 3F98                                       l8938 3F8C  
                                     l7988 1544                                       l8980 3FC2  
                                     l8972 3FB2                                       l8964 3FAA  
                                     l8956 3FA2                                       l8948 3F9A  
                                     l7998 15F4                                       l8990 4002  
                                     l8982 3FC8                                       l8974 3FB4  
                                     l8966 3FAC                                       l8958 3FA4  
                                     STR_1 0860                                       l8992 4006  
                                     l8984 3FCC                                       l8976 3FB6  
                                     l8968 3FAE                                       STR_2 0847  
                                     STR_3 0805                                       l8994 400A  
                                     l8986 3FE0                                       l8978 3FBC  
                                     STR_4 088B                                       STR_5 0878  
                                     l8988 3FF2                                       l8996 4012  
                                     STR_6 089D                                       STR_7 08B9  
                                     STR_8 08AE                                       STR_9 08C3  
                                     u8000 30E0                                       u8001 30DC  
                                     u8010 310A                                       u7210 3BF4  
                                     u8011 3106                                       u7211 3BF0  
                                     u8100 22DA                                       u7300 1A00  
                                     u8020 314A                                       u7220 3C06  
                                     _RCIF 007CF5                                       u8101 22D6  
                                     u7301 19FC                                       u8021 3146  
                                     u7221 3C02                                       u8110 22EC  
                                     u7310 1A10                                       u8030 3194  
                                     u7230 3C2E                                       u8111 22E8  
                                     u7311 1A0C                                       u8031 3190  
                                     u7231 3C2A                                       u8200 24A4  
                                     u8120 22FC                                       u7400 1B5C  
                                     u7320 1A52                                       u8040 3364  
                                     u7240 3C64                                       u9000 097E  
                                     u8201 24A0                                       u8121 22F8  
                                     u7321 1A4E                                       u8041 3360  
                                     u7241 3C60                                       u9001 097A  
                                     u8210 24C8                                       u8130 2340  
                                     u7410 1B84                                       u7330 1A68  
                                     u8050 3396                                       u7250 46B2  
                                     u9010 09C6                                       u8211 24C4  
                                     u8131 233C                                       u7411 1B80  
                                     u7331 1A64                                       u8051 3392  
                                     u7251 46AE                                       u9011 09C2  
                                     u8300 25E8                                       u8220 24DE  
                                     u8140 2352                                       u7500 1CBC  
                                     u7420 1BA2                                       u7340 1A7A  
                                     u8060 33D4                                       u7260 47FA  
                                     u9100 0BFE                                       u9020 09F6  
                                     u8301 25E4                                       u8221 24DA  
                                     u8141 234E                                       u7501 1CB8  
                                     u7421 1B9E                                       u7341 1A76  
                                     u8061 33D0                                       u7261 47F6  
                                     u9101 0BFA                                       u9021 09F0  
                                     u8310 2618                                       u8230 24FC  
                                     u8150 2362                                       u7510 1CF2  
                                     u7430 1BC2                                       u7350 1A8A  
                                     u8070 33FE                                       u7270 4724  
                                     u9110 0C72                                       u9030 09F8  
                                     u8311 2614                                       u8231 24F8  
                                     u8151 235E                                       u7511 1CEE  
                                     u7431 1BBE                                       u7351 1A86  
                                     u8071 33FA                                       u7271 471E  
                                     u9111 0C6E                                       u8320 2646  
                                     u8240 251C                                       u8160 23A2  
                                     u8400 1F7A                                       u7600 1DBC  
                                     u7520 1D02                                       u7440 1BD0  
                                     u7360 1AC6                                       u8080 342C  
                                     u7280 4726                                       u9200 0D92  
                                     u9120 0C98                                       u9040 0A0E  
                                     u8321 2642                                       u8241 2518  
                                     u8161 239E                                       u8401 1F76  
                                     u7601 1DB8                                       u7521 1CFE  
                                     u7441 1BCC                                       u7361 1AC2  
                                     u8081 3428                                       u9201 0D8E  
                                     u9121 0C94                                       u9041 0A0A  
                                     u8250 252E                                       u8170 23E2  
                                     u8410 20F4                                       u8330 1EB0  
                                     u7610 1DD6                                       u7530 1D2E  
                                     u7450 1BE0                                       u7370 1AD4  
                                     u7290 19EE                                       u8090 3474  
                                     u9210 0DA0                                       u9130 0CAA  
                                     u9050 0A9A                                       u8251 252A  
                                     u8171 23DE                                       u8331 1EAC  
                                     u7611 1DD2                                       u7531 1D2A  
                                     u7451 1BDC                                       u7371 1AD0  
                                     u7291 19EA                                       u8091 3470  
                                     u9211 0D9C                                       u9131 0CA6  
                                     u9051 0A96                                       u8260 255C  
                                     u8180 2458                                       u8500 2268  
                                     u8420 214E                                       u8340 1EC2  
                                     u7620 1E10                                       u7540 1D3E  
                                     u7460 1C12                                       u7380 1B42  
                                     u7700 3DF6                                       u9300 10FE  
                                     u9220 0DB6                                       u9140 0CCC  
                                     u9060 0ACA                                       u8261 2558  
                                     u8181 2454                                       u8501 2264  
                                     u8421 214A                                       u8341 1EBE  
                                     u7621 1E0C                                       u7541 1D3A  
                                     u7461 1C0E                                       u7381 1B3E  
                                     u7701 3DF2                                       u9301 10FA  
                                     u9221 0DB2                                       u9141 0CC8  
                                     u9061 0AC4                                       u8270 2572  
                                     u8190 247A                                       u8510 22A2  
                                     u8430 216E                                       u8350 1ED2  
                                     u7630 1E22                                       u7550 1D5A  
                                     u7470 1C20                                       u7390 1B5A  
                                     u7710 3E04                                       u9310 1112  
                                     u9230 0DC4                                       u9150 0CF2  
                                     u9070 0ACC                                       u8271 256E  
                                     u8191 2476                                       u8511 229E  
                                     u8431 216A                                       u8415 20EA  
                                     u8351 1ECE                                       u7631 1E1E  
                                     u7551 1D56                                       u7471 1C1C  
                                     u7391 1B54                                       u7711 3E00  
                                     u9311 110E                                       u9231 0DC0  
                                     u9151 0CEE                                       u8280 2586  
                                     u8440 2180                                       u8360 1F12  
                                     u7640 1E32                                       u7560 1D6A  
                                     u7480 1C3E                                       u7720 46CE  
                                     u8520 3CBE                                       u8600 3E78  
                                     u7800 43E0                                       u9400 12C2  
                                     u9320 1124                                       u9240 0DEE  
                                     u9160 0D08                                       u9080 0AE2  
                                     u8281 2582                                       u8441 217C  
                                     u8361 1F0E                                       u7641 1E2E  
                                     u7561 1D66                                       u7481 1C3A  
                                     u7721 46CA                                       u8521 3CBA  
                                     u8601 3E74                                       u9401 12BE  
                                     u9321 1120                                       u9241 0DEA  
                                     u9161 0D04                                       u9081 0ADE  
                                     u8290 25A0                                       u8450 21AE  
                                     u8370 1F24                                       u7650 1E52  
                                     u7570 1D7C                                       u7490 1C76  
                                     u8530 3CD8                                       u8610 3E96  
                                     u7730 3972                                       u7810 43F2  
                                     u9410 12F8                                       u9330 1132  
                                     u9250 0F36                                       u9170 0D24  
                                     u9090 0B66                                       u8291 259C  
                                     u8451 21AA                                       u8371 1F20  
                                     u7651 1E4E                                       u7571 1D78  
                                     u7491 1C72                                       u8531 3CD4  
                                     u8611 3E92                                       u7811 43EE  
                                     u9411 12F4                                       u9331 112E  
                                     u9251 0F32                                       u9171 0D20  
                                     u9091 0B62                                       u8460 21C4  
                                     u8380 1F34                                       u7660 1E64  
                                     u7580 1D92                                       u9500 2F2C  
                                     u8540 3CFE                                       u8620 3EAC  
                                     u8700 38D8                                       u7740 3990  
                                     u7900 2A64                                       u7820 430A  
                                     u9420 1326                                       u9340 114E  
                                     u9260 0F9E                                       u9180 0D5A  
                                     u8461 21C0                                       u8381 1F30  
                                     u7661 1E60                                       u7581 1D8E  
                                     u9501 2F28                                       u8541 3CFA  
                                     u8621 3EA8                                       u8701 38D4  
                                     u7741 398C                                       u7821 4304  
                                     u9421 1322                                       u9341 114A  
                                     u9261 0F9A                                       u9181 0D56  
                                     u8470 21D8                                       u8390 1F6A  
                                     u7670 1E80                                       u7590 1DA8  
                                     u9510 2F48                                       u8550 3D1C  
                                     u8630 3ED0                                       u8710 3928  
                                     u7750 39B8                                       u7910 2A80  
                                     u7830 430C                                       u9430 13AA  
                                     u9350 115C                                       u9270 0FE4  
                                     u9190 0D80                                       u8471 21D4  
                                     u8391 1F66                                       u7671 1E7C  
                                     u7591 1DA4                                       u9511 2F44  
                                     u8551 3D18                                       u8631 3ECC  
                                     u8711 3924                                       u7751 39B4  
                                     u7735 3968                                       u7911 2A7C  
                                     u7807 43D6                                       u9431 13A6  
                                     u9351 1158                                       u9271 0FE0  
                                     u9191 0D7C                                       u8480 21F2  
                                     u8800 450A                                       u9520 2FFE  
                                     u7680 3D7E                                       u8560 3D38  
                                     u8640 3F10                                       u8720 4742  
                                     u7760 39E2                                       u7920 2AD4  
                                     u7840 4322                                       u9440 13C4  
                                     u9360 11B4                                       u9280 0FF4  
                                     u9600 3BBE                                       u8481 21EE  
                                     u8801 4506                                       u9521 2FF8  
                                     u7681 3D7A                                       u8561 3D34  
                                     u8641 3F0C                                       u8721 473E  
                                     u7761 39DE                                       u7905 2A5A  
                                     u7841 431E                                       u9441 13C0  
                                     u9361 11B0                                       u9281 0FF0  
                                     u9601 3BBA                                       u8490 223A  
                                     u8730 373C                                       u8810 4538  
                                     u9530 3000                                       u7690 3DA0  
                                     u8570 3D5E                                       u8650 3F4E  
                                     u7930 2AF0                                       u7850 2982  
                                     u9450 13DC                                       u9370 1286  
                                     u9290 105C                                       u9610 14C2  
                                     u8491 2236                                       u8731 3738  
                                     u8811 4534                                       u7691 3D9C  
                                     u8571 3D5A                                       u8651 3F4A  
                                     u7931 2AEC                                       u9451 13D8  
                                     u9371 1282                                       u9291 1058  
                                     u9611 14BE                                       u8740 3770  
                                     u9540 3016                                       u8900 2870  
                                     u8820 268A                                       u8580 3E44  
                                     u8660 3F82                                       u7780 3A1C  
                                     u7940 2B2C                                       u7860 29B0  
                                     u9460 143A                                       u9380 12A2  
                                     u9700 16F4                                       u9620 150A  
                                     u9541 3012                                       u8901 286C  
                                     u8821 2684                                       u8581 3E40  
                                     u8661 3F7E                                       u7781 3A16  
                                     u7941 2B28                                       u7925 2ACA  
                                     u7861 29AC                                       u9461 1434  
                                     u9381 129E                                       u9701 16F0  
                                     u9621 1506                                       u8750 379E  
                                     u7950 4794                                       u9550 3028  
                                     u8910 288A                                       u8830 268C  
                                     u8590 3E5E                                       u8670 385C  
                                     u7790 3A1E                                       u7870 29D2  
                                     u9470 143C                                       u9390 12B4  
                                     u9710 1786                                       u9630 1544  
                                     u8751 379A                                       u7951 478E  
                                     u9551 3024                                       u8911 2886  
                                     u8591 3E5A                                       u8671 3858  
                                     u7775 39F4                                       u7871 29CE  
                                     u7855 2978                                       u9391 12B0  
                                     u9711 1782                                       u9631 1540  
                                     u9800 364C                                       u8760 37B2  
                                     u7960 4796                                       u8920 28A4  
                                     u8840 26A2                                       u8680 389A  
                                     u9480 1452                                       u9560 3B36  
                                     u9720 1834                                       u9640 15EE  
                                     u9801 3648                                       u8761 37AE  
                                     u8745 3766                                       u8921 28A0  
                                     u8841 269E                                       u8681 3896  
                                     u9481 144E                                       u9561 3B32  
                                     u9721 1830                                       u9641 15E8  
                                     u9810 3686                                       u8770 37DA  
                                     u9490 2EF6                                       u7970 3060  
                                     u8930 28B2                                       u8850 26D0  
                                     u8690 38B8                                       u7890 2A40  
                                     u9570 3B68                                       u9730 189C  
                                     u9650 15F0                                       u9811 3682  
                                     u8771 37D6                                       u9491 2EF2  
                                     u7971 305C                                       u8931 28AE  
                                     u8851 26CC                                       u8691 38B4  
                                     u7891 2A3C                                       u9571 3B64  
                                     u9731 1896                                       u9820 36A8  
                                     u9900 2D1C                                       u8780 37FA  
                                     u7980 3092                                       u8940 28C4  
                                     u8860 26EC                                       u9580 3B84  
                                     u9740 189E                                       u9660 1606  
                                     u9821 36A4                                       u9901 2D18  
                                     u8781 37F6                                       u7981 308E  
                                     u8941 28C0                                       u8861 26E8  
                                     u7885 29E6                                       u9581 3B80  
                                     u9661 1602                                       u9830 36D0  
                                     u9910 2D2A                                       u8790 380A  
                                     u8950 28D2                                       u8870 271A  
                                     u7886 29F0                                       u9590 3B96  
                                     u9750 18B4                                       u9670 1638  
                                     u9831 36CC                                       u9911 2D26  
                                     u8791 3806                                       u7991 30BC  
                                     u8951 28CE                                       u8871 2716  
                                     u7887 2A00                                       u9591 3B92  
                                     u9751 18B0                                       u9671 1634  
                                     u9840 3702                                       u9920 2D86  
                                     u8960 28EA                                       u8880 2728  
                                     u9760 1950                                       u9680 167A  
                                     u9841 36FE                                       u9921 2D82  
                                     u8961 28E6                                       u8881 2724  
                                     u9761 194C                                       u9681 1676  
                                     u9930 2DDC                                       u9770 428E  
                                     u9850 4868                                       u8890 2852  
                                     u8970 090E                                       u9690 16D0  
                                     u9931 2DD8                                       u9771 428A  
                                     u9851 4864                                       u8891 284E  
                                     u8971 090A                                       u9691 16CC  
                                     u9940 2E26                                       u9780 42C8  
                                     u8980 095E                                       u9860 4266  
                                     u9941 2E22                                       u9781 42C4  
                                     u8981 095A                                       u9861 4262  
                                     u9790 362A                                       u9870 413C  
                                     u9950 2E44                                       u8990 096C  
                                     u9791 3626                                       u9871 4138  
                                     u9951 2E40                                       u8991 0968  
                                     u9880 415A                                       u9960 2E54  
                                     u9881 4156                                       u9961 2E50  
                                     u9890 4176                                       u9970 2E62  
                                     u9891 4172                                       u9971 2E5E  
                                     u9980 2E9C                                       u9981 2E98  
                                     u9990 2EAA                                       u9991 2EA6  
                                     abs@a 0018                                       _dbuf 013D  
                                     _atoi 2EBE                                       _main 3F8C  
                                     _dtoa 265A                                       _prec 0055  
                                     _nout 0130                                       pad@i 001D  
                __end_of_probarUltrasonico 3B0C                                       pad@p 001A  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     indf0 000FEF                                       fsr2h 000FDA  
                                     fsr0l 000FE9                                       indf2 000FDF  
                                     fsr1l 000FE1                                       pad@w 001F  
                                     map@x 0020                                       fsr2l 000FD9  
                                     btemp 005A                              ___fpclassifyf 3932  
                                     prodh 000FF4                                       prodl 000FF3  
          comportamientoBasico@carroRotado 0139                                       start 000E  
                            __CFG_IESO$OFF 000000                            ___fldiv@new_exp 0049  
                             _tolower$1456 0012                              __CFG_MCLRE$ON 000000  
                            ?_leerSensores 0001                               ___param_bank 000000  
                                    ??_abs 001A                                      ??_map 0034  
                                    ??_pad 001C                              __CFG_PLLDIV$1 000000  
                           __CFG_CCP2MX$ON 000000                              ___fltol@sign1 007D  
                          __end_of___aldiv 3724                            __end_of___aodiv 31D6  
                                    ?_atoi 000D                            __end_of___fladd 1E94  
                                    ?_main 0001                                      ?_dtoa 0021  
                          __end_of___aomod 34B6                            __end_of___fldiv 265A  
                          __end_of___awdiv 3D70                            __end_of___flneg 4764  
                                    STR_10 08CC                                      STR_11 0827  
                                    STR_20 08E2                                      STR_12 08D2  
                                    STR_13 08DA                                      STR_22 08E2  
                                    STR_16 08D6                                      STR_17 08DE  
                          __end_of___awmod 3EE2                            __end_of___flmul 22C0  
                          __end_of___flsub 462A                            __end_of___fltol 382C  
                                    u10000 2BCE                                      u10001 2BCA  
                                    u10100 3554                                      u10101 3550  
                                    u10110 3562                                      u10030 34E4  
                                    u10111 355E                                      u10031 34E0  
                                    u10015 2C68                                      u10120 35A8  
                                    u10040 34F4                                      u10016 2C72  
                                    u10121 35A4                                      u10041 34F0  
                                    u10025 2CAC                                      u10017 2C82  
                                    u10050 3502                                      u10026 2CB6  
                                    u10130 435E                                      u10051 34FE  
                                    u10027 2CC6                                      u10060 3514  
                                    u10140 4386                                      u10061 3510  
                                    u10070 3524                                      u10150 4396  
                                    u10071 3520                                      u10151 4392  
                                    u10080 3532                                      u10160 465A  
                                    u10081 352E                                      u10161 4656  
                                    u10137 4354                                      u10090 3544  
                                    u10170 4060                                      u10091 3540  
                                    u10147 437C                                      u10171 405C  
                          ___awdiv@divisor 0008                                      _T1CON 000FCD  
                                    u10750 3FF2                                      u10751 3FEE  
                                    u10760 4002                                      u10761 3FFE  
                                    _LATB4 007C54                                      u10777 3AFC  
                                    _LATB5 007C55                                      _LATD2 007C62  
                                    _LATB6 007C56                                      u10787 462E  
                                    _LATD3 007C63                                      _LATB7 007C57  
                                    u10797 34CC                            __end_of___lwdiv 4196  
                                    i2l250 449C                                      i2l248 4494  
                                    i2l292 444A                                      i2l284 43FA  
                                    i2l287 4408                               main@iniciado 01FC  
                          ___awdiv@counter 000A                                      _RCREG 000FAE  
                             vfpfcnvrt@fmt 00C7                                      _TMR1H 000FCF  
                                    _TMR1L 000FCE                                      _SPBRG 000FAF  
                            __CFG_USBDIV$1 000000                                      _TXREG 000FAD  
                            __CFG_PWRT$OFF 000000                              __CFG_WRT0$OFF 000000  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                      ___lmul@multiplicand 000A                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           __CFG_EBTRB$OFF 000000                         __size_of_UART_init 0070  
                                    _flags 0057                                      _boton 0008  
                                    _fputc 3BE2                                      _fputs 4670  
                          __end_of_isdigit 479C                                      _pausa 01FD  
                                    _mouse 0136                                ?_UART_write 0001  
                                    atoi@n 001A                                      pad@fp 0016  
                                    atoi@s 000D                                      _width 0132  
                                    _putch 4874                                      _toint 0801  
                                    dtoa@d 0023                                      dtoa@i 0043  
                                    dtoa@n 003B                                      dtoa@p 0035  
                                    dtoa@s 0039                                      dtoa@w 0037  
                          __end_of_isspace 4544                            __end_of_isupper 472C  
                                    tablat 000FF5                           ??_probarSensores 0055  
                          __end_of_pwmDuty 2D0A                                      ttemp5 005B  
                                    ttemp6 005E                                      ttemp7 0062  
                                    status 000FD8                                      wtemp8 005B  
                          __end_of_sprintf 44F2                             ?___fpclassifyf 0006  
                          __end_of_tolower 433A                            __end_of_strncmp 3BE2  
                           __CFG_ICPRT$OFF 000000                             ??_leerSensores 0051  
                          __initialization 479C                           ??_dameLecturaAdc 0008  
                             __end_of_atoi 304E                               __end_of_main 401E  
                             __end_of_dtoa 2938                            ??_configurarAdc 0006  
                      dameDistancia@conteo 0026                     dameDistancia@distancia 0022  
                                   ??_atoi 000F                                     ??_main 0055  
                                   ??_dtoa 002B        comportamientoBasico@caminosRecorrer 01F1  
                            __activetblptr 000002                                     _ADCON1 000FC1  
                                   _ADCON2 000FC0                                     ?_boton 0001  
                                   _CCP1M2 007DEA                                     _CCP1M3 007DEB  
                                   _CCP2M2 007DD2                                     _CCP2M3 007DD3  
                                   ?_fputc 0006                                     ?_fputs 000F  
                                   _ADRESH 000FC4                                     _ADRESL 000FC3  
                                   _CCPR1L 000FBE                                     _CCPR2L 000FBB  
                         ___awdiv@dividend 0006                                     ?_putch 0001  
                                   _INT0IF 007F91                                     i2l5822 4428  
                                   i2l5816 43F6                                     i2l5818 4416  
                                   i2l9128 443C                                     i2l5890 4478  
                                   i2l5882 444E                                     i2l5892 447A  
                                   i2l5884 445C                                     i2l5894 4496  
                                   i2l5886 4462                                     i2l5896 449A  
                                   i2l5888 4474                                     _TMR1IF 007CF0  
                                   _TMR1ON 007E68                                     _TMR2ON 007E52  
                                   _TRISB0 007C98                                     _TRISB1 007C99  
                                   _TRISB2 007C9A                                     _TRISC1 007CA1  
                                   _TRISB3 007C9B                                     _TRISC2 007CA2  
                                   _TRISB4 007C9C                                     _TRISB5 007C9D  
                                   _TRISB6 007C9E                                     _TRISD3 007CAB  
                                   _TRISB7 007C9F                                     _TRISC6 007CA6  
                                   _TRISC7 007CA7                 __size_of_probarUltrasonico 00DC  
                         __end_of___xxtofl 2EBE                             __CFG_XINST$OFF 000000  
       comportamientoBasico@numMovimientos 0059                               vfprintf@cfmt 00E9  
                dameDistancia@numeroSensor 0021                                     ___flge 382C  
                                   ___fleq 3EE2                                     ___lmul 4270  
                                ??___aldiv 001A                                  ??___aodiv 0016  
                                ??___fladd 0030                                  ??___aomod 0016  
                                   ___wmul 4808                          __end_of_UART_init 4206  
                                ??___fldiv 0040                                  ??___awdiv 000A  
                                ??___flneg 000A         comportamientoBasico@espejearCarroY 013C  
                                ??___awmod 000A                                  ??___flmul 0051  
                                ??___flsub 0055                                  ??___fltol 0079  
                                   _efgtoa 08E6                                  ??___lwdiv 000A  
                                   _buffer 01BF                                     _floorf 2938  
                      __size_of_UART_write 0016                               ?_UART_printf 0007  
                                   clear_0 47B4                           ___awdiv@quotient 000C  
                          ___awmod@divisor 0008                            ___awmod@counter 000A  
                                   pad@buf 0018                                     dtoa@fp 0021  
                                   _strcpy 4398                                     _strlen 47D2  
                        _oldSensorEnfrente 0118                                     fputc@c 0006  
                                   fputs@c 0013                                     fputs@i 0014  
                                   fputs@s 000F                                  ??_isdigit 0008  
                          ___fpclassifyf@e 000E                            ___fpclassifyf@u 0010  
                          ___fpclassifyf@x 0006                               __mediumconst 0000  
                                ??_isspace 0008                                     tblptrh 000FF7  
                                ??_isupper 0008                                     tblptrl 000FF6  
                                   tblptru 000FF8                                  ??_pwmDuty 0082  
                                   putch@c 0001                           __end_of_vfprintf 4270  
                                ??_sprintf 0055                                  ??_tolower 000E  
                                ??_strncmp 000C                                 ___flge@ff1 0075  
                        _velocidadEstandar 482E                            ??___fpclassifyf 000A  
                               ___flge@ff2 0079                               ___xxtofl@arg 0017  
                             ___xxtofl@exp 0016                               ___xxtofl@val 000D  
                               ___fleq@ff1 0006                                 ___fleq@ff2 000A  
                               __accesstop 0060                    __end_of__initialization 47C4  
                          __CFG_PBADEN$OFF 000000                                 ___flneg@f1 0006  
                          __CFG_FOSC$XT_XT 000000                         ?_velocidadEstandar 0001  
                            ___rparam_used 000001                                 ___fltol@f1 0075  
                   __size_of_dameDistancia 0162                             __pcstackCOMRAM 0001  
                      ??_velocidadEstandar 0055                               __pidataBANK1 4876  
                          _sensorIzquierda 0128                              __end_of_boton 44A0  
                            __end_of_fputc 3CAC                              __end_of_fputs 46B4  
                            __end_of_putch 4876                              __end_of_toint 0805  
comportamientoBasico@movimientosRealizados 018D                       __end_of_leerSensores 3352  
                       __size_of_configPwm 0050                                  PID@difAnt 0134  
                __end_of_velocidadEstandar 4854                                    ??_boton 0004  
                                  ??_fputc 000A                                    ??_fputs 0013  
                                  ??_putch 0006                                 __pbssBANK1 0100  
                               _efgtoa$823 0091                                 _efgtoa$832 0097  
                               _efgtoa$824 0093                                 _efgtoa$833 0099  
                               _efgtoa$834 009B                                 _efgtoa$828 0095  
                                  ?___flge 0075                                    ?___fleq 0006  
                                  ?___lmul 0006                                    ?___wmul 0006  
                                  ?_efgtoa 0081                                    _CCP1CON 000FBD  
                                  _CCP2CON 000FBA                                    ?_floorf 0051  
                           ___lmul@product 000E     decidirDireccion@cambioOrientacionCarro 0138  
                               _antiRebote 43F4                                    ?_strcpy 0006  
                                  ?_strlen 0006                                    _T2CKPS0 007E50  
                                  _T2CKPS1 007E51                                  ?___xxtofl 000D  
                            _dameDistancia 34B6                         __size_of_vfpfcnvrt 0536  
                             ??_UART_write 0006                            __CFG_VREGEN$OFF 000000  
comportamientoBasico@contCaminosRecorridos 01F4                                    __Hparam 0000  
                                  __Lparam 0000                          __end_of_configPwm 4594  
                                  ___aldiv 3618                            __size_of___flge 0106  
                          __size_of___fleq 00AA                                    ___aodiv 304E  
                                  ___fladd 19D4                                    ___aomod 3352  
                                  ___fldiv 22C0                                    ___awdiv 3CAC  
                                  ___flneg 472C                            __size_of___lmul 006A  
                                  ___awmod 3E32                                    ___flmul 1E94  
                                  ___flsub 45E2                                    ___fltol 3724  
                          __size_of___wmul 0026                                    ___lwdiv 4122  
                                ?_vfprintf 00E3                               __psmallconst 0800  
                          __size_of_efgtoa 0BB8                            __CFG_STVREN$OFF 000000  
                          __size_of_floorf 0216                                    __pcinit 479C  
                                  __ramtop 0800                         __end_of_UART_write 486A  
                                  __ptext0 3F8C                                    __ptext1 401E  
                                  __ptext2 3A30                                    __ptext3 44A0  
                                  __ptext4 4206                                    __ptext5 149E  
                                  __ptext6 3B0C                                    __ptext7 08E6  
                                  __ptext8 42DA                                    __ptext9 46F4  
                          __size_of_strcpy 005C                            __size_of_strlen 0036  
                     __size_of_UART_printf 005E                               __size_of_abs 0040  
                             __size_of_map 007A                               __size_of_pad 00C2  
                                  _isdigit 4764                                 ??___xxtofl 0011  
                         ___awmod@dividend 0006                             ?_dameDistancia 001B  
                         ___aldiv@dividend 0012                                    _isspace 44F2  
                                  _isupper 46F4                                    efgtoa@c 0087  
                                  efgtoa@d 00A5                                    efgtoa@e 00BD  
                                  efgtoa@f 0083                                    efgtoa@g 00B9  
                                  efgtoa@h 00AF                                    efgtoa@i 00B7  
                                  efgtoa@l 00B3                                    efgtoa@m 00A1  
                                  efgtoa@n 00BF                                    efgtoa@p 00A9  
                                  efgtoa@t 009D                                    efgtoa@u 00C1  
                                  efgtoa@w 00AC                                    _pwmDuty 2B4E  
                                  atoi@neg 0013                 __size_of_velocidadEstandar 0026  
                                  _sprintf 44A0                                    _tolower 42DA  
                                  _strncmp 3B0C                             __pintcode_body 444C  
                     end_of_initialization 47C4                                    floorf@e 006A  
                                  floorf@m 0066                                    floorf@u 006C  
                                  floorf@x 0051                                    fputc@fp 0008  
                            __Lmediumconst 0000                                    int_func 444C  
                                  fputs@fp 0011                                  i2u1080_47 4484  
                                i2u1081_47 441C                          __end_of_vfpfcnvrt 19D4  
                               efgtoa@mode 00AE                                 efgtoa@sign 00A7  
                                _RCSTAbits 000FAB                           ___aldiv@quotient 001C  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                               ??_vfprintf 0055                      __end_of_configurarAdc 4874  
                                  strcpy@d 000E                                    strlen@a 0008  
                                  strcpy@s 000C                                    strlen@s 0006  
                              ?_antiRebote 0001                                  _PORTBbits 000F81  
                                _UART_init 4196                      __size_of_leerSensores 017C  
                              ___fladd@grs 0037                                pwmDuty@duty 0087  
                            ___xxtofl@sign 0015                                  _TRISDbits 000F95  
                              ___fldiv@grs 004B                         _oldSensorIzquierda 011C  
                              ___fldiv@rem 0044       comportamientoBasico@posicionInvCruce 01F5  
                               map@out_max 0030                                 map@out_min 002C  
                              ___flmul@grs 006A                             _UART_init$1690 0028  
                                _TXSTAbits 000FAC                               _leerSensores 31D6  
                  __size_of_probarSensores 008A                             __end_of___flge 3932  
                           __end_of___fleq 3F8C                             __end_of___lmul 42DA  
                              vfpfcnvrt@ap 00C9                                vfpfcnvrt@ct 00DF  
                              vfpfcnvrt@fp 00C5                                vfpfcnvrt@ll 00CF  
                           __end_of___wmul 482E                             __end_of_efgtoa 149E  
                           __end_of_floorf 2B4E                                 ?_UART_init 0020  
                               floorf@F524 0104                            ??_dameDistancia 001F  
    comportamientoBasico@investigandoCruce 01F6                    __size_of_dameLecturaAdc 0046  
                           __end_of_strcpy 43F4                             __end_of_strlen 4808  
                      start_initialization 479C                                __end_of_abs 46F4  
                              __end_of_map 4122                                __end_of_pad 3E32  
                      __size_of_antiRebote 0058                      __end_of___fpclassifyf 3A30  
                      pwmDuty@cicloTrabajo 007F                                vfprintf@fmt 00E5  
                                 ??___flge 007D                                   ??___fleq 000E  
                                 ??___lmul 000E                                   ??___wmul 000A  
                         _oldSensorDerecha 0120                 comportamientoBasico@mapear 013B  
                           _sensorEnfrente 0124                                   ??_efgtoa 0088  
                              __pdataBANK1 01FD                                   ??_floorf 0060  
                         __CFG_LPT1OSC$OFF 000000                                   ??_strcpy 000A  
                                 ??_strlen 0008                                  ___fladd@a 002C  
                                ___fladd@b 0028                                  ___fldiv@a 003C  
                                ___fldiv@b 0038                                  ___flmul@a 0064  
                                ___flmul@b 0060                                __pbssCOMRAM 0055  
                                ___flsub@a 0079                                  ___flsub@b 0075  
                            __pcstackBANK0 0060                              __pcstackBANK1 01F8  
                         ___aodiv@dividend 0006                          __size_of___xxtofl 01B4  
                        UART_printf@cadena 0007                                  _atoi$1326 0015  
                                _atoi$1327 0019                                  _atoi$1328 0017  
                _DISTANCIA_PRIORIDAD_MEDIA 0110          probarSensores@lecturaSensorOptico 01F8  
                         ___lwdiv@dividend 0006                                  __pintcode 0008  
                                 ?___aldiv 0012                                   ?___aodiv 0006  
                                 ?___fladd 0028                                   ?___aomod 0006  
                                 ?___fldiv 0038                                   ?___awdiv 0006  
                         ___aodiv@quotient 0018                                   ?___flneg 0006  
                                 ?___awmod 0006                                   ?___flmul 0060  
                                 ?___flsub 0075                                   ?___fltol 0075  
                                 ?___lwdiv 0006                                  _configPwm 4544  
                              ??_UART_init 0024                          __size_of_vfprintf 006A  
                              __smallconst 0800                                   ?_isdigit 0006  
                                 ?_isspace 0006                                   ?_isupper 0006  
                                 ?_pwmDuty 007F                           ___lwdiv@quotient 000B  
            probarUltrasonico@numeroSensor 00FF                             __size_of_boton 4498  
                                 ?_sprintf 00EB                                   ?_tolower 000C  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 0006                             __size_of_putch 0002  
                          ___aldiv@divisor 0016                            ___aldiv@counter 001A  
                           ___wmul@product 000A                                   i2u653_40 4408  
                                 i2u653_41 4404                                   i2u654_40 4416  
                                 i2u654_41 4412                                   i2u657_40 445C  
                                 i2u657_41 4458                                   i2u658_40 4474  
                                 i2u658_41 4470                             _probarSensores 401E  
                         __CFG_WDTPS$32768 000000                              ??_UART_printf 0009  
                             ??_antiRebote 0001                                  _vfpfcnvrt 149E  
                               ?_configPwm 0001                                  map@in_max 0028  
                                map@in_min 0024                                 _ADCON0bits 000FC2  
                        ___wmul@multiplier 0006                           configPwm@channel 0008  
                           _dameLecturaAdc 462A                             UART_write@dato 0006  
                             _isspace$1357 000C                                 vfpfcnvrt@c 00E2  
                               vfpfcnvrt@f 00DB                          ___lmul@multiplier 0006  
                              _INTCON2bits 000FF1                         __end_of_antiRebote 444C  
                               roundf@F525 0100                     __end_of_probarSensores 40A8  
                                 __Hrparam 0000                              UART_init@BAUD 0020  
                            _sensorDerecha 012C                                 vfprintf@ap 00E7  
                                 __Lrparam 0000                                 vfprintf@fp 00E3  
                         __size_of___aldiv 010C                           __size_of___aodiv 0188  
                         __size_of___fladd 04C0                           __size_of___aomod 0164  
                         __size_of___fldiv 039A                           __size_of___awdiv 00C4  
                         __size_of___flneg 0038                           __size_of___awmod 00B0  
                         __size_of___flmul 042C                           __size_of___flsub 0048  
                         __size_of___fltol 0108                                 ?_vfpfcnvrt 00C5  
                         __size_of___lwdiv 0074                     __end_of_dameLecturaAdc 4670  
                          ___aodiv@divisor 000E                            ___aodiv@counter 0016  
                       ___fpclassifyf@F463 0108                                 sprintf@fmt 00ED  
                                 ___xxtofl 2D0A                        __end_of_UART_printf 4398  
                         __size_of_isdigit 0038                                   _dtoa$799 0033  
                          ___lwdiv@divisor 0008                           __size_of_isspace 0052  
                          ___lwdiv@counter 000A                                   __ptext10 4398  
                                 __ptext11 2938                                   __ptext20 3D70  
                                 __ptext12 3932                                   __ptext21 47D2  
                                 __ptext13 45E2                                   __ptext30 4764  
                                 __ptext22 4670                                   __ptext14 472C  
                                 __ptext31 4808                                   __ptext23 3BE2  
                                 __ptext15 382C                                   __ptext40 40A8  
                                 __ptext32 433A                                   __ptext24 4874  
                                 __ptext16 3EE2                                   __ptext41 4270  
                                 __ptext33 4854                                   __ptext25 46B4  
                                 __ptext17 3E32                                   __ptext50 4196  
                                 __ptext42 3724                                   __ptext34 31D6  
                                 __ptext26 3352                                   __ptext18 3CAC  
                                 __ptext51 3618                                   __ptext43 1E94  
                                 __ptext35 19D4                                   __ptext27 304E  
                                 __ptext19 265A                                   __ptext44 22C0  
                                 __ptext36 462A                                   __ptext28 2EBE  
                                 __ptext53 43F4                                   __ptext45 34B6  
                                 __ptext37 4594                                   __ptext29 44F2  
                                 __ptext46 2D0A                                   __ptext38 482E  
                                 __ptext47 4122                                   __ptext39 2B4E  
                                 __ptext48 486A                                   __ptext49 4544  
                         __size_of_isupper 0038                           __size_of_pwmDuty 01BC  
  __end_of_inicializarComportamientoBasico 45E2   __size_of_inicializarComportamientoBasico 004E  
        ??_inicializarComportamientoBasico 0055           ?_inicializarComportamientoBasico 0001  
          _inicializarComportamientoBasico 4594                           __size_of_sprintf 0052  
                         __size_of_tolower 0060                              antiRebote@pin 0003  
                               strcpy@dest 0006                           __size_of_strncmp 00D6  
       comportamientoBasico@cruceDetectado 013A                     __size_of_configurarAdc 000A  
                            __size_of_atoi 0190                              __size_of_main 0092  
                            __size_of_dtoa 02DE                            ?_probarSensores 0001  
                                 efgtoa@fp 0081                                   efgtoa@ne 00A3  
                                 efgtoa@pp 009F                                   efgtoa@ou 008D  
                                 int$flags 005A                    dameLecturaAdc@canalLeer 000A  
                                 _vfprintf 4206                                ??_configPwm 0006  
                          ?_dameLecturaAdc 0006                           ___aomod@dividend 0006  
                    __CFG_CPUDIV$OSC1_PLL2 000000                                 _INTCONbits 000FF2  
                    __end_of_dameDistancia 3618                                   isdigit@c 0006  
                                 intlevel2 0000                                  sprintf@ap 00F5  
                                 isspace@c 0006                                  strcpy@src 0008  
                                 isupper@c 0006                                  strncmp@_l 0006  
                                strncmp@_r 0008                                efgtoa@nmode 00AB  
                          ___aomod@divisor 000E                                ??_vfpfcnvrt 00CB  
                          ___aomod@counter 0016                              _vfpfcnvrt$853 00D9  
                            _vfpfcnvrt$848 00D7                                _UART_printf 433A  
                            _configurarAdc 486A                             pwmDuty@channel 0081  
                                 sprintf@f 00F7                                   tolower@c 000C  
                                 sprintf@s 00EB                     __size_of___fpclassifyf 00FE  
                                 strncmp@l 000D                                   strncmp@n 000A  
                                 strncmp@r 000F         comportamientoBasico@carroEspejeado 01F7  
                             ___aldiv@sign 001B                              ___fladd@signs 0034  
                               _UART_write 4854                               ___aodiv@sign 0017  
                             ___fladd@aexp 0035                               ___fladd@bexp 0036  
                             ___aomod@sign 0017                          _probarUltrasonico 3A30  
