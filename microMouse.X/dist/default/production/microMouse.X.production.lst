

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Sep 30 21:14:53 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    96                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    97  0000                     
    98                           ; Version 2.10
    99                           ; Generated 31/07/2019 GMT
   100                           ; 
   101                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC18F4550 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     
   133                           	psect	idataBANK1
   134  00597A                     __pidataBANK1:
   135                           	opt callstack 0
   136                           
   137                           ;initializer for _ida
   138  00597A  01                 	db	1
   139                           
   140                           ;initializer for _pausa
   141  00597B  01                 	db	1
   142                           
   143                           ;initializer for _SENSOR_PRIORIDAD_BAJA
   144  00597C  03                 	db	3
   145                           
   146                           ;initializer for _SENSOR_PRIORIDAD_MEDIA
   147  00597D  02                 	db	2
   148                           
   149                           ;initializer for _SENSOR_PRIORIDAD_ALTA
   150  00597E  01                 	db	1
   151                           
   152                           	psect	mediumconst
   153  007D76                     __pmediumconst:
   154                           	opt callstack 0
   155  007D76  00                 	db	0
   156  007D77  0000               	dw	0
   157  007D79  4B00               	dw	19200
   158  007D7B                     __end_of_toint:
   159                           	opt callstack 0
   160  0000                     _T1CON	set	4045
   161  0000                     _TRISDbits	set	3989
   162  0000                     _INTCON2bits	set	4081
   163  0000                     _INTCONbits	set	4082
   164  0000                     _ADRESL	set	4035
   165  0000                     _ADRESH	set	4036
   166  0000                     _ADCON0bits	set	4034
   167  0000                     _ADCON2	set	4032
   168  0000                     _ADCON1	set	4033
   169  0000                     _TXREG	set	4013
   170  0000                     _RCREG	set	4014
   171  0000                     _RCSTAbits	set	4011
   172  0000                     _TXSTAbits	set	4012
   173  0000                     _SPBRG	set	4015
   174  0000                     _PORTBbits	set	3969
   175  0000                     _TMR1L	set	4046
   176  0000                     _TMR1H	set	4047
   177  0000                     _PR2	set	4043
   178  0000                     _CCP2CON	set	4026
   179  0000                     _CCPR2L	set	4027
   180  0000                     _CCP1CON	set	4029
   181  0000                     _CCPR1L	set	4030
   182  0000                     _TRISB0	set	31896
   183  0000                     _TRISB7	set	31903
   184  0000                     _TRISB6	set	31902
   185  0000                     _TRISB5	set	31901
   186  0000                     _TRISB4	set	31900
   187  0000                     _TRISB3	set	31899
   188  0000                     _TRISB2	set	31898
   189  0000                     _TRISB1	set	31897
   190  0000                     _TRISD3	set	31915
   191  0000                     _LATB7	set	31831
   192  0000                     _LATB6	set	31830
   193  0000                     _LATB5	set	31829
   194  0000                     _LATB4	set	31828
   195  0000                     _LATD2	set	31842
   196  0000                     _INT0IF	set	32657
   197  0000                     _RCIF	set	31989
   198  0000                     _TRISC7	set	31911
   199  0000                     _TRISC6	set	31910
   200  0000                     _TMR1IF	set	31984
   201  0000                     _TMR1ON	set	32360
   202  0000                     _LATD3	set	31843
   203  0000                     _TMR2ON	set	32338
   204  0000                     _CCP2M2	set	32210
   205  0000                     _CCP2M3	set	32211
   206  0000                     _TRISC1	set	31905
   207  0000                     _CCP1M2	set	32234
   208  0000                     _CCP1M3	set	32235
   209  0000                     _TRISC2	set	31906
   210  0000                     _T2CKPS1	set	32337
   211  0000                     _T2CKPS0	set	32336
   212  007D7B                     STR_12:
   213  007D7B  0A                 	db	10
   214  007D7C  0A                 	db	10
   215  007D7D  4F                 	db	79	;'O'
   216  007D7E  56                 	db	86	;'V'
   217  007D7F  45                 	db	69	;'E'
   218  007D80  52                 	db	82	;'R'
   219  007D81  46                 	db	70	;'F'
   220  007D82  4C                 	db	76	;'L'
   221  007D83  4F                 	db	79	;'O'
   222  007D84  57                 	db	87	;'W'
   223  007D85  20                 	db	32
   224  007D86  65                 	db	101	;'e'
   225  007D87  6E                 	db	110	;'n'
   226  007D88  20                 	db	32
   227  007D89  65                 	db	101	;'e'
   228  007D8A  6C                 	db	108	;'l'
   229  007D8B  20                 	db	32
   230  007D8C  6D                 	db	109	;'m'
   231  007D8D  61                 	db	97	;'a'
   232  007D8E  70                 	db	112	;'p'
   233  007D8F  65                 	db	101	;'e'
   234  007D90  6F                 	db	111	;'o'
   235  007D91  20                 	db	32
   236  007D92  64                 	db	100	;'d'
   237  007D93  65                 	db	101	;'e'
   238  007D94  20                 	db	32
   239  007D95  70                 	db	112	;'p'
   240  007D96  61                 	db	97	;'a'
   241  007D97  73                 	db	115	;'s'
   242  007D98  6F                 	db	111	;'o'
   243  007D99  73                 	db	115	;'s'
   244  007D9A  20                 	db	32
   245  007D9B  52                 	db	82	;'R'
   246  007D9C  65                 	db	101	;'e'
   247  007D9D  61                 	db	97	;'a'
   248  007D9E  6C                 	db	108	;'l'
   249  007D9F  69                 	db	105	;'i'
   250  007DA0  7A                 	db	122	;'z'
   251  007DA1  61                 	db	97	;'a'
   252  007DA2  64                 	db	100	;'d'
   253  007DA3  6F                 	db	111	;'o'
   254  007DA4  73                 	db	115	;'s'
   255  007DA5  20                 	db	32
   256  007DA6  70                 	db	112	;'p'
   257  007DA7  61                 	db	97	;'a'
   258  007DA8  72                 	db	114	;'r'
   259  007DA9  61                 	db	97	;'a'
   260  007DAA  20                 	db	32
   261  007DAB  63                 	db	99	;'c'
   262  007DAC  72                 	db	114	;'r'
   263  007DAD  75                 	db	117	;'u'
   264  007DAE  63                 	db	99	;'c'
   265  007DAF  65                 	db	101	;'e'
   266  007DB0  0A                 	db	10
   267  007DB1  0A                 	db	10
   268  007DB2  00                 	db	0
   269  007DB3                     STR_21:
   270  007DB3  0D                 	db	13
   271  007DB4  0A                 	db	10
   272  007DB5  45                 	db	69	;'E'
   273  007DB6  6C                 	db	108	;'l'
   274  007DB7  20                 	db	32
   275  007DB8  63                 	db	99	;'c'
   276  007DB9  61                 	db	97	;'a'
   277  007DBA  6D                 	db	109	;'m'
   278  007DBB  69                 	db	105	;'i'
   279  007DBC  6E                 	db	110	;'n'
   280  007DBD  6F                 	db	111	;'o'
   281  007DBE  20                 	db	32
   282  007DBF  49                 	db	73	;'I'
   283  007DC0  5A                 	db	90	;'Z'
   284  007DC1  51                 	db	81	;'Q'
   285  007DC2  55                 	db	85	;'U'
   286  007DC3  49                 	db	73	;'I'
   287  007DC4  45                 	db	69	;'E'
   288  007DC5  52                 	db	82	;'R'
   289  007DC6  44                 	db	68	;'D'
   290  007DC7  41                 	db	65	;'A'
   291  007DC8  20                 	db	32
   292  007DC9  73                 	db	115	;'s'
   293  007DCA  65                 	db	101	;'e'
   294  007DCB  20                 	db	32
   295  007DCC  61                 	db	97	;'a'
   296  007DCD  63                 	db	99	;'c'
   297  007DCE  65                 	db	101	;'e'
   298  007DCF  72                 	db	114	;'r'
   299  007DD0  63                 	db	99	;'c'
   300  007DD1  61                 	db	97	;'a'
   301  007DD2  20                 	db	32
   302  007DD3  6D                 	db	109	;'m'
   303  007DD4  61                 	db	97	;'a'
   304  007DD5  73                 	db	115	;'s'
   305  007DD6  20                 	db	32
   306  007DD7  61                 	db	97	;'a'
   307  007DD8  6C                 	db	108	;'l'
   308  007DD9  20                 	db	32
   309  007DDA  64                 	db	100	;'d'
   310  007DDB  65                 	db	101	;'e'
   311  007DDC  73                 	db	115	;'s'
   312  007DDD  74                 	db	116	;'t'
   313  007DDE  69                 	db	105	;'i'
   314  007DDF  6E                 	db	110	;'n'
   315  007DE0  6F                 	db	111	;'o'
   316  007DE1  0D                 	db	13
   317  007DE2  0A                 	db	10
   318  007DE3  00                 	db	0
   319  007DE4                     STR_20:
   320  007DE4  0D                 	db	13
   321  007DE5  0A                 	db	10
   322  007DE6  45                 	db	69	;'E'
   323  007DE7  6C                 	db	108	;'l'
   324  007DE8  20                 	db	32
   325  007DE9  63                 	db	99	;'c'
   326  007DEA  61                 	db	97	;'a'
   327  007DEB  6D                 	db	109	;'m'
   328  007DEC  69                 	db	105	;'i'
   329  007DED  6E                 	db	110	;'n'
   330  007DEE  6F                 	db	111	;'o'
   331  007DEF  20                 	db	32
   332  007DF0  45                 	db	69	;'E'
   333  007DF1  4E                 	db	78	;'N'
   334  007DF2  46                 	db	70	;'F'
   335  007DF3  52                 	db	82	;'R'
   336  007DF4  45                 	db	69	;'E'
   337  007DF5  4E                 	db	78	;'N'
   338  007DF6  54                 	db	84	;'T'
   339  007DF7  45                 	db	69	;'E'
   340  007DF8  20                 	db	32
   341  007DF9  73                 	db	115	;'s'
   342  007DFA  65                 	db	101	;'e'
   343  007DFB  20                 	db	32
   344  007DFC  61                 	db	97	;'a'
   345  007DFD  63                 	db	99	;'c'
   346  007DFE  65                 	db	101	;'e'
   347  007DFF  72                 	db	114	;'r'
   348  007E00  63                 	db	99	;'c'
   349  007E01  61                 	db	97	;'a'
   350  007E02  20                 	db	32
   351  007E03  6D                 	db	109	;'m'
   352  007E04  61                 	db	97	;'a'
   353  007E05  73                 	db	115	;'s'
   354  007E06  20                 	db	32
   355  007E07  61                 	db	97	;'a'
   356  007E08  6C                 	db	108	;'l'
   357  007E09  20                 	db	32
   358  007E0A  64                 	db	100	;'d'
   359  007E0B  65                 	db	101	;'e'
   360  007E0C  73                 	db	115	;'s'
   361  007E0D  74                 	db	116	;'t'
   362  007E0E  69                 	db	105	;'i'
   363  007E0F  6E                 	db	110	;'n'
   364  007E10  6F                 	db	111	;'o'
   365  007E11  0D                 	db	13
   366  007E12  0A                 	db	10
   367  007E13  00                 	db	0
   368  007E14                     STR_22:
   369  007E14  0D                 	db	13
   370  007E15  0A                 	db	10
   371  007E16  45                 	db	69	;'E'
   372  007E17  6C                 	db	108	;'l'
   373  007E18  20                 	db	32
   374  007E19  63                 	db	99	;'c'
   375  007E1A  61                 	db	97	;'a'
   376  007E1B  6D                 	db	109	;'m'
   377  007E1C  69                 	db	105	;'i'
   378  007E1D  6E                 	db	110	;'n'
   379  007E1E  6F                 	db	111	;'o'
   380  007E1F  20                 	db	32
   381  007E20  44                 	db	68	;'D'
   382  007E21  45                 	db	69	;'E'
   383  007E22  52                 	db	82	;'R'
   384  007E23  45                 	db	69	;'E'
   385  007E24  43                 	db	67	;'C'
   386  007E25  48                 	db	72	;'H'
   387  007E26  41                 	db	65	;'A'
   388  007E27  20                 	db	32
   389  007E28  73                 	db	115	;'s'
   390  007E29  65                 	db	101	;'e'
   391  007E2A  20                 	db	32
   392  007E2B  61                 	db	97	;'a'
   393  007E2C  63                 	db	99	;'c'
   394  007E2D  65                 	db	101	;'e'
   395  007E2E  72                 	db	114	;'r'
   396  007E2F  63                 	db	99	;'c'
   397  007E30  61                 	db	97	;'a'
   398  007E31  20                 	db	32
   399  007E32  6D                 	db	109	;'m'
   400  007E33  61                 	db	97	;'a'
   401  007E34  73                 	db	115	;'s'
   402  007E35  20                 	db	32
   403  007E36  61                 	db	97	;'a'
   404  007E37  6C                 	db	108	;'l'
   405  007E38  20                 	db	32
   406  007E39  64                 	db	100	;'d'
   407  007E3A  65                 	db	101	;'e'
   408  007E3B  73                 	db	115	;'s'
   409  007E3C  74                 	db	116	;'t'
   410  007E3D  69                 	db	105	;'i'
   411  007E3E  6E                 	db	110	;'n'
   412  007E3F  6F                 	db	111	;'o'
   413  007E40  0D                 	db	13
   414  007E41  0A                 	db	10
   415  007E42  00                 	db	0
   416  007E43  0D                 	db	13
   417  007E44  4C                 	db	76	;'L'
   418  007E45  65                 	db	101	;'e'
   419  007E46  63                 	db	99	;'c'
   420  007E47  74                 	db	116	;'t'
   421  007E48  75                 	db	117	;'u'
   422  007E49  72                 	db	114	;'r'
   423  007E4A  61                 	db	97	;'a'
   424  007E4B  20                 	db	32
   425  007E4C  64                 	db	100	;'d'
   426  007E4D  65                 	db	101	;'e'
   427  007E4E  20                 	db	32
   428  007E4F  73                 	db	115	;'s'
   429  007E50  65                 	db	101	;'e'
   430  007E51  6E                 	db	110	;'n'
   431  007E52  73                 	db	115	;'s'
   432  007E53  6F                 	db	111	;'o'
   433  007E54  72                 	db	114	;'r'
   434  007E55  20                 	db	32
   435  007E56  4F                 	db	79	;'O'
   436  007E57  70                 	db	112	;'p'
   437  007E58  74                 	db	116	;'t'
   438  007E59  69                 	db	105	;'i'
   439  007E5A  63                 	db	99	;'c'
   440  007E5B  6F                 	db	111	;'o'
   441  007E5C  20                 	db	32
   442  007E5D  3D                 	db	61	;'='
   443  007E5E  20                 	db	32
   444  007E5F  25                 	db	37
   445  007E60  64                 	db	100	;'d'
   446  007E61  0D                 	db	13
   447  007E62  0A                 	db	10
   448  007E63  0A                 	db	10
   449  007E64  00                 	db	0
   450  007E65                     STR_13:
   451  007E65  0D                 	db	13
   452  007E66  53                 	db	83	;'S'
   453  007E67  65                 	db	101	;'e'
   454  007E68  20                 	db	32
   455  007E69  72                 	db	114	;'r'
   456  007E6A  65                 	db	101	;'e'
   457  007E6B  67                 	db	103	;'g'
   458  007E6C  72                 	db	114	;'r'
   459  007E6D  65                 	db	101	;'e'
   460  007E6E  73                 	db	115	;'s'
   461  007E6F  6F                 	db	111	;'o'
   462  007E70  20                 	db	32
   463  007E71  61                 	db	97	;'a'
   464  007E72  6C                 	db	108	;'l'
   465  007E73  20                 	db	32
   466  007E74  70                 	db	112	;'p'
   467  007E75  75                 	db	117	;'u'
   468  007E76  6E                 	db	110	;'n'
   469  007E77  74                 	db	116	;'t'
   470  007E78  6F                 	db	111	;'o'
   471  007E79  20                 	db	32
   472  007E7A  64                 	db	100	;'d'
   473  007E7B  65                 	db	101	;'e'
   474  007E7C  20                 	db	32
   475  007E7D  70                 	db	112	;'p'
   476  007E7E  61                 	db	97	;'a'
   477  007E7F  72                 	db	114	;'r'
   478  007E80  74                 	db	116	;'t'
   479  007E81  69                 	db	105	;'i'
   480  007E82  64                 	db	100	;'d'
   481  007E83  61                 	db	97	;'a'
   482  007E84  0D                 	db	13
   483  007E85  0A                 	db	10
   484  007E86  00                 	db	0
   485  007E87                     STR_19:
   486  007E87  49                 	db	73	;'I'
   487  007E88  6E                 	db	110	;'n'
   488  007E89  76                 	db	118	;'v'
   489  007E8A  65                 	db	101	;'e'
   490  007E8B  73                 	db	115	;'s'
   491  007E8C  74                 	db	116	;'t'
   492  007E8D  69                 	db	105	;'i'
   493  007E8E  67                 	db	103	;'g'
   494  007E8F  61                 	db	97	;'a'
   495  007E90  6E                 	db	110	;'n'
   496  007E91  64                 	db	100	;'d'
   497  007E92  6F                 	db	111	;'o'
   498  007E93  20                 	db	32
   499  007E94  43                 	db	67	;'C'
   500  007E95  72                 	db	114	;'r'
   501  007E96  75                 	db	117	;'u'
   502  007E97  63                 	db	99	;'c'
   503  007E98  65                 	db	101	;'e'
   504  007E99  3A                 	db	58	;':'
   505  007E9A  20                 	db	32
   506  007E9B  25                 	db	37
   507  007E9C  63                 	db	99	;'c'
   508  007E9D  20                 	db	32
   509  007E9E  7C                 	db	124
   510  007E9F  20                 	db	32
   511  007EA0  25                 	db	37
   512  007EA1  63                 	db	99	;'c'
   513  007EA2  20                 	db	32
   514  007EA3  7C                 	db	124
   515  007EA4  20                 	db	32
   516  007EA5  25                 	db	37
   517  007EA6  63                 	db	99	;'c'
   518  007EA7  0A                 	db	10
   519  007EA8  00                 	db	0
   520  007EA9                     STR_16:
   521  007EA9  0D                 	db	13
   522  007EAA  44                 	db	68	;'D'
   523  007EAB  69                 	db	105	;'i'
   524  007EAC  72                 	db	114	;'r'
   525  007EAD  65                 	db	101	;'e'
   526  007EAE  63                 	db	99	;'c'
   527  007EAF  63                 	db	99	;'c'
   528  007EB0  69                 	db	105	;'i'
   529  007EB1  6F                 	db	111	;'o'
   530  007EB2  6E                 	db	110	;'n'
   531  007EB3  20                 	db	32
   532  007EB4  45                 	db	69	;'E'
   533  007EB5  6C                 	db	108	;'l'
   534  007EB6  65                 	db	101	;'e'
   535  007EB7  67                 	db	103	;'g'
   536  007EB8  69                 	db	105	;'i'
   537  007EB9  64                 	db	100	;'d'
   538  007EBA  61                 	db	97	;'a'
   539  007EBB  3A                 	db	58	;':'
   540  007EBC  20                 	db	32
   541  007EBD  49                 	db	73	;'I'
   542  007EBE  5A                 	db	90	;'Z'
   543  007EBF  51                 	db	81	;'Q'
   544  007EC0  55                 	db	85	;'U'
   545  007EC1  49                 	db	73	;'I'
   546  007EC2  45                 	db	69	;'E'
   547  007EC3  52                 	db	82	;'R'
   548  007EC4  44                 	db	68	;'D'
   549  007EC5  41                 	db	65	;'A'
   550  007EC6  0A                 	db	10
   551  007EC7  0A                 	db	10
   552  007EC8  0D                 	db	13
   553  007EC9  00                 	db	0
   554  007ECA                     STR_11:
   555  007ECA  0D                 	db	13
   556  007ECB  4D                 	db	77	;'M'
   557  007ECC  6F                 	db	111	;'o'
   558  007ECD  76                 	db	118	;'v'
   559  007ECE  69                 	db	105	;'i'
   560  007ECF  6D                 	db	109	;'m'
   561  007ED0  69                 	db	105	;'i'
   562  007ED1  65                 	db	101	;'e'
   563  007ED2  6E                 	db	110	;'n'
   564  007ED3  74                 	db	116	;'t'
   565  007ED4  6F                 	db	111	;'o'
   566  007ED5  73                 	db	115	;'s'
   567  007ED6  20                 	db	32
   568  007ED7  52                 	db	82	;'R'
   569  007ED8  65                 	db	101	;'e'
   570  007ED9  61                 	db	97	;'a'
   571  007EDA  6C                 	db	108	;'l'
   572  007EDB  69                 	db	105	;'i'
   573  007EDC  7A                 	db	122	;'z'
   574  007EDD  61                 	db	97	;'a'
   575  007EDE  64                 	db	100	;'d'
   576  007EDF  6F                 	db	111	;'o'
   577  007EE0  73                 	db	115	;'s'
   578  007EE1  20                 	db	32
   579  007EE2  3D                 	db	61	;'='
   580  007EE3  20                 	db	32
   581  007EE4  25                 	db	37
   582  007EE5  64                 	db	100	;'d'
   583  007EE6  0D                 	db	13
   584  007EE7  0A                 	db	10
   585  007EE8  0A                 	db	10
   586  007EE9  00                 	db	0
   587  007EEA                     STR_15:
   588  007EEA  0D                 	db	13
   589  007EEB  44                 	db	68	;'D'
   590  007EEC  69                 	db	105	;'i'
   591  007EED  72                 	db	114	;'r'
   592  007EEE  65                 	db	101	;'e'
   593  007EEF  63                 	db	99	;'c'
   594  007EF0  63                 	db	99	;'c'
   595  007EF1  69                 	db	105	;'i'
   596  007EF2  6F                 	db	111	;'o'
   597  007EF3  6E                 	db	110	;'n'
   598  007EF4  20                 	db	32
   599  007EF5  45                 	db	69	;'E'
   600  007EF6  6C                 	db	108	;'l'
   601  007EF7  65                 	db	101	;'e'
   602  007EF8  67                 	db	103	;'g'
   603  007EF9  69                 	db	105	;'i'
   604  007EFA  64                 	db	100	;'d'
   605  007EFB  61                 	db	97	;'a'
   606  007EFC  3A                 	db	58	;':'
   607  007EFD  20                 	db	32
   608  007EFE  45                 	db	69	;'E'
   609  007EFF  4E                 	db	78	;'N'
   610  007F00  46                 	db	70	;'F'
   611  007F01  52                 	db	82	;'R'
   612  007F02  45                 	db	69	;'E'
   613  007F03  4E                 	db	78	;'N'
   614  007F04  54                 	db	84	;'T'
   615  007F05  45                 	db	69	;'E'
   616  007F06  0A                 	db	10
   617  007F07  0A                 	db	10
   618  007F08  0D                 	db	13
   619  007F09  00                 	db	0
   620  007F0A                     STR_18:
   621  007F0A  0D                 	db	13
   622  007F0B  44                 	db	68	;'D'
   623  007F0C  69                 	db	105	;'i'
   624  007F0D  72                 	db	114	;'r'
   625  007F0E  65                 	db	101	;'e'
   626  007F0F  63                 	db	99	;'c'
   627  007F10  63                 	db	99	;'c'
   628  007F11  69                 	db	105	;'i'
   629  007F12  6F                 	db	111	;'o'
   630  007F13  6E                 	db	110	;'n'
   631  007F14  20                 	db	32
   632  007F15  45                 	db	69	;'E'
   633  007F16  6C                 	db	108	;'l'
   634  007F17  65                 	db	101	;'e'
   635  007F18  67                 	db	103	;'g'
   636  007F19  69                 	db	105	;'i'
   637  007F1A  64                 	db	100	;'d'
   638  007F1B  61                 	db	97	;'a'
   639  007F1C  3A                 	db	58	;':'
   640  007F1D  20                 	db	32
   641  007F1E  43                 	db	67	;'C'
   642  007F1F  41                 	db	65	;'A'
   643  007F20  4C                 	db	76	;'L'
   644  007F21  4C                 	db	76	;'L'
   645  007F22  45                 	db	69	;'E'
   646  007F23  4A                 	db	74	;'J'
   647  007F24  4F                 	db	79	;'O'
   648  007F25  4E                 	db	78	;'N'
   649  007F26  0A                 	db	10
   650  007F27  0A                 	db	10
   651  007F28  0D                 	db	13
   652  007F29  00                 	db	0
   653  007F2A                     STR_17:
   654  007F2A  0D                 	db	13
   655  007F2B  44                 	db	68	;'D'
   656  007F2C  69                 	db	105	;'i'
   657  007F2D  72                 	db	114	;'r'
   658  007F2E  65                 	db	101	;'e'
   659  007F2F  63                 	db	99	;'c'
   660  007F30  63                 	db	99	;'c'
   661  007F31  69                 	db	105	;'i'
   662  007F32  6F                 	db	111	;'o'
   663  007F33  6E                 	db	110	;'n'
   664  007F34  20                 	db	32
   665  007F35  45                 	db	69	;'E'
   666  007F36  6C                 	db	108	;'l'
   667  007F37  65                 	db	101	;'e'
   668  007F38  67                 	db	103	;'g'
   669  007F39  69                 	db	105	;'i'
   670  007F3A  64                 	db	100	;'d'
   671  007F3B  61                 	db	97	;'a'
   672  007F3C  3A                 	db	58	;':'
   673  007F3D  20                 	db	32
   674  007F3E  44                 	db	68	;'D'
   675  007F3F  45                 	db	69	;'E'
   676  007F40  52                 	db	82	;'R'
   677  007F41  45                 	db	69	;'E'
   678  007F42  43                 	db	67	;'C'
   679  007F43  48                 	db	72	;'H'
   680  007F44  41                 	db	65	;'A'
   681  007F45  0A                 	db	10
   682  007F46  0A                 	db	10
   683  007F47  0D                 	db	13
   684  007F48  00                 	db	0
   685  007F49  0D                 	db	13
   686  007F4A  44                 	db	68	;'D'
   687  007F4B  65                 	db	101	;'e'
   688  007F4C  73                 	db	115	;'s'
   689  007F4D  74                 	db	116	;'t'
   690  007F4E  69                 	db	105	;'i'
   691  007F4F  6E                 	db	110	;'n'
   692  007F50  6F                 	db	111	;'o'
   693  007F51  20                 	db	32
   694  007F52  6E                 	db	110	;'n'
   695  007F53  6F                 	db	111	;'o'
   696  007F54  20                 	db	32
   697  007F55  64                 	db	100	;'d'
   698  007F56  65                 	db	101	;'e'
   699  007F57  74                 	db	116	;'t'
   700  007F58  65                 	db	101	;'e'
   701  007F59  63                 	db	99	;'c'
   702  007F5A  74                 	db	116	;'t'
   703  007F5B  61                 	db	97	;'a'
   704  007F5C  64                 	db	100	;'d'
   705  007F5D  6F                 	db	111	;'o'
   706  007F5E  20                 	db	32
   707  007F5F  0D                 	db	13
   708  007F60  0A                 	db	10
   709  007F61  00                 	db	0
   710  007F62  0D                 	db	13
   711  007F63  53                 	db	83	;'S'
   712  007F64  65                 	db	101	;'e'
   713  007F65  20                 	db	32
   714  007F66  6C                 	db	108	;'l'
   715  007F67  6C                 	db	108	;'l'
   716  007F68  65                 	db	101	;'e'
   717  007F69  67                 	db	103	;'g'
   718  007F6A  6F                 	db	111	;'o'
   719  007F6B  20                 	db	32
   720  007F6C  61                 	db	97	;'a'
   721  007F6D  6C                 	db	108	;'l'
   722  007F6E  20                 	db	32
   723  007F6F  64                 	db	100	;'d'
   724  007F70  65                 	db	101	;'e'
   725  007F71  73                 	db	115	;'s'
   726  007F72  74                 	db	116	;'t'
   727  007F73  69                 	db	105	;'i'
   728  007F74  6E                 	db	110	;'n'
   729  007F75  6F                 	db	111	;'o'
   730  007F76  20                 	db	32
   731  007F77  0D                 	db	13
   732  007F78  0A                 	db	10
   733  007F79  00                 	db	0
   734  007F7A                     STR_14:
   735  007F7A  0D                 	db	13
   736  007F7B  53                 	db	83	;'S'
   737  007F7C  65                 	db	101	;'e'
   738  007F7D  20                 	db	32
   739  007F7E  6C                 	db	108	;'l'
   740  007F7F  6C                 	db	108	;'l'
   741  007F80  65                 	db	101	;'e'
   742  007F81  67                 	db	103	;'g'
   743  007F82  6F                 	db	111	;'o'
   744  007F83  20                 	db	32
   745  007F84  41                 	db	65	;'A'
   746  007F85  6C                 	db	108	;'l'
   747  007F86  20                 	db	32
   748  007F87  64                 	db	100	;'d'
   749  007F88  65                 	db	101	;'e'
   750  007F89  73                 	db	115	;'s'
   751  007F8A  74                 	db	116	;'t'
   752  007F8B  69                 	db	105	;'i'
   753  007F8C  6E                 	db	110	;'n'
   754  007F8D  6F                 	db	111	;'o'
   755  007F8E  0D                 	db	13
   756  007F8F  0A                 	db	10
   757  007F90  00                 	db	0
   758  007F91  0D                 	db	13
   759  007F92  49                 	db	73	;'I'
   760  007F93  7A                 	db	122	;'z'
   761  007F94  71                 	db	113	;'q'
   762  007F95  75                 	db	117	;'u'
   763  007F96  69                 	db	105	;'i'
   764  007F97  65                 	db	101	;'e'
   765  007F98  72                 	db	114	;'r'
   766  007F99  64                 	db	100	;'d'
   767  007F9A  61                 	db	97	;'a'
   768  007F9B  3A                 	db	58	;':'
   769  007F9C  20                 	db	32
   770  007F9D  25                 	db	37
   771  007F9E  2E                 	db	46
   772  007F9F  32                 	db	50	;'2'
   773  007FA0  66                 	db	102	;'f'
   774  007FA1  0D                 	db	13
   775  007FA2  0A                 	db	10
   776  007FA3  00                 	db	0
   777  007FA4  0D                 	db	13
   778  007FA5  45                 	db	69	;'E'
   779  007FA6  6E                 	db	110	;'n'
   780  007FA7  66                 	db	102	;'f'
   781  007FA8  72                 	db	114	;'r'
   782  007FA9  65                 	db	101	;'e'
   783  007FAA  6E                 	db	110	;'n'
   784  007FAB  74                 	db	116	;'t'
   785  007FAC  65                 	db	101	;'e'
   786  007FAD  3A                 	db	58	;':'
   787  007FAE  20                 	db	32
   788  007FAF  25                 	db	37
   789  007FB0  2E                 	db	46
   790  007FB1  32                 	db	50	;'2'
   791  007FB2  66                 	db	102	;'f'
   792  007FB3  0D                 	db	13
   793  007FB4  0A                 	db	10
   794  007FB5  00                 	db	0
   795  007FB6  0D                 	db	13
   796  007FB7  44                 	db	68	;'D'
   797  007FB8  65                 	db	101	;'e'
   798  007FB9  72                 	db	114	;'r'
   799  007FBA  65                 	db	101	;'e'
   800  007FBB  63                 	db	99	;'c'
   801  007FBC  68                 	db	104	;'h'
   802  007FBD  61                 	db	97	;'a'
   803  007FBE  3A                 	db	58	;':'
   804  007FBF  20                 	db	32
   805  007FC0  25                 	db	37
   806  007FC1  2E                 	db	46
   807  007FC2  32                 	db	50	;'2'
   808  007FC3  66                 	db	102	;'f'
   809  007FC4  0D                 	db	13
   810  007FC5  0A                 	db	10
   811  007FC6  00                 	db	0
   812  007FC7                     STR_8:
   813  007FC7  49                 	db	73	;'I'
   814  007FC8  7A                 	db	122	;'z'
   815  007FC9  71                 	db	113	;'q'
   816  007FCA  75                 	db	117	;'u'
   817  007FCB  69                 	db	105	;'i'
   818  007FCC  65                 	db	101	;'e'
   819  007FCD  72                 	db	114	;'r'
   820  007FCE  64                 	db	100	;'d'
   821  007FCF  61                 	db	97	;'a'
   822  007FD0  0A                 	db	10
   823  007FD1  00                 	db	0
   824  007FD2                     STR_7:
   825  007FD2  45                 	db	69	;'E'
   826  007FD3  6E                 	db	110	;'n'
   827  007FD4  66                 	db	102	;'f'
   828  007FD5  72                 	db	114	;'r'
   829  007FD6  65                 	db	101	;'e'
   830  007FD7  6E                 	db	110	;'n'
   831  007FD8  74                 	db	116	;'t'
   832  007FD9  65                 	db	101	;'e'
   833  007FDA  0A                 	db	10
   834  007FDB  00                 	db	0
   835  007FDC                     STR_9:
   836  007FDC  44                 	db	68	;'D'
   837  007FDD  65                 	db	101	;'e'
   838  007FDE  72                 	db	114	;'r'
   839  007FDF  65                 	db	101	;'e'
   840  007FE0  63                 	db	99	;'c'
   841  007FE1  68                 	db	104	;'h'
   842  007FE2  61                 	db	97	;'a'
   843  007FE3  0A                 	db	10
   844  007FE4  00                 	db	0
   845  007FE5                     STR_10:
   846  007FE5  41                 	db	65	;'A'
   847  007FE6  6C                 	db	108	;'l'
   848  007FE7  74                 	db	116	;'t'
   849  007FE8  6F                 	db	111	;'o'
   850  007FE9  0A                 	db	10
   851  007FEA  00                 	db	0
   852  007FEB                     STR_23:
   853  007FEB  49                 	db	73	;'I'
   854  007FEC  4E                 	db	78	;'N'
   855  007FED  46                 	db	70	;'F'
   856  007FEE  00                 	db	0
   857  007FEF                     STR_27:
   858  007FEF  4E                 	db	78	;'N'
   859  007FF0  41                 	db	65	;'A'
   860  007FF1  4E                 	db	78	;'N'
   861  007FF2  00                 	db	0
   862  007FF3                     STR_24:
   863  007FF3  69                 	db	105	;'i'
   864  007FF4  6E                 	db	110	;'n'
   865  007FF5  66                 	db	102	;'f'
   866  007FF6  00                 	db	0
   867  007FF7                     STR_28:
   868  007FF7  6E                 	db	110	;'n'
   869  007FF8  61                 	db	97	;'a'
   870  007FF9  6E                 	db	110	;'n'
   871  007FFA  00                 	db	0
   872  007FFB                     STR_31:
   873  007FFB  6C                 	db	108	;'l'
   874  007FFC  66                 	db	102	;'f'
   875  007FFD  00                 	db	0
   876  0000                     
   877                           ; #config settings
   878  007FFE  00                 	db	0	; dummy byte at the end
   879  0000                     
   880                           	psect	cinit
   881  005320                     __pcinit:
   882                           	opt callstack 0
   883  005320                     start_initialization:
   884                           	opt callstack 0
   885  005320                     __initialization:
   886                           	opt callstack 0
   887                           
   888                           ; Initialize objects allocated to BANK1 (5 bytes)
   889                           ; load TBLPTR registers with __pidataBANK1
   890  005320  0E7A               	movlw	low __pidataBANK1
   891  005322  6EF6               	movwf	tblptrl,c
   892  005324  0E59               	movlw	high __pidataBANK1
   893  005326  6EF7               	movwf	tblptrh,c
   894  005328  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   895  00532A  6EF8               	movwf	tblptru,c
   896  00532C  EE01  F0FA         	lfsr	0,__pdataBANK1
   897  005330  EE10 F005          	lfsr	1,5
   898  005334                     copy_data0:
   899  005334  0009               	tblrd		*+
   900  005336  CFF5 FFEE          	movff	tablat,postinc0
   901  00533A  50E5               	movf	postdec1,w,c
   902  00533C  50E1               	movf	fsr1l,w,c
   903  00533E  E1FA               	bnz	copy_data0
   904                           
   905                           ; Clear objects allocated to BANK2 (200 bytes)
   906  005340  EE02  F000         	lfsr	0,__pbssBANK2
   907  005344  0EC8               	movlw	200
   908  005346                     clear_0:
   909  005346  6AEE               	clrf	postinc0,c
   910  005348  06E8               	decf	wreg,f,c
   911  00534A  E1FD               	bnz	clear_0
   912                           
   913                           ; Clear objects allocated to BANK1 (230 bytes)
   914  00534C  EE01  F000         	lfsr	0,__pbssBANK1
   915  005350  0EE6               	movlw	230
   916  005352                     clear_1:
   917  005352  6AEE               	clrf	postinc0,c
   918  005354  06E8               	decf	wreg,f,c
   919  005356  E1FD               	bnz	clear_1
   920                           
   921                           ; Clear objects allocated to BANK0 (1 bytes)
   922  005358  0100               	movlb	0
   923  00535A  6BFF               	clrf	__pbssBANK0& (0+255),b
   924                           
   925                           ; Clear objects allocated to COMRAM (5 bytes)
   926  00535C  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   927  00535E  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   928  005360  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   929  005362  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   930  005364  6A55               	clrf	__pbssCOMRAM& (0+255),c
   931  005366                     end_of_initialization:
   932                           	opt callstack 0
   933  005366                     __end_of__initialization:
   934                           	opt callstack 0
   935  005366  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   936  005368  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   937  00536A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   938  00536C  6EF8               	movwf	tblptru,c
   939  00536E  0100               	movlb	0
   940  005370  EF03  F027         	goto	_main	;jump to C main() function
   941                           
   942                           	psect	bssCOMRAM
   943  000055                     __pbssCOMRAM:
   944                           	opt callstack 0
   945  000055                     _sensorEnfrente:
   946                           	opt callstack 0
   947  000055                     	ds	4
   948  000059                     _caminoEncontrado:
   949                           	opt callstack 0
   950  000059                     	ds	1
   951                           
   952                           	psect	bssBANK0
   953  0000FF                     __pbssBANK0:
   954                           	opt callstack 0
   955  0000FF                     _llegoDestino:
   956                           	opt callstack 0
   957  0000FF                     	ds	1
   958                           
   959                           	psect	bssBANK1
   960  000100                     __pbssBANK1:
   961                           	opt callstack 0
   962  000100                     roundf@F525:
   963                           	opt callstack 0
   964  000100                     	ds	4
   965  000104                     floorf@F524:
   966                           	opt callstack 0
   967  000104                     	ds	4
   968  000108                     ___fpclassifyf@F463:
   969                           	opt callstack 0
   970  000108                     	ds	4
   971  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   972                           	opt callstack 0
   973  00010C                     	ds	4
   974  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   975                           	opt callstack 0
   976  000110                     	ds	4
   977  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   978                           	opt callstack 0
   979  000114                     	ds	4
   980  000118                     _oldSensorEnfrente:
   981                           	opt callstack 0
   982  000118                     	ds	4
   983  00011C                     _oldSensorIzquierda:
   984                           	opt callstack 0
   985  00011C                     	ds	4
   986  000120                     _oldSensorDerecha:
   987                           	opt callstack 0
   988  000120                     	ds	4
   989  000124                     _sensorIzquierda:
   990                           	opt callstack 0
   991  000124                     	ds	4
   992  000128                     _sensorDerecha:
   993                           	opt callstack 0
   994  000128                     	ds	4
   995  00012C                     _nout:
   996                           	opt callstack 0
   997  00012C                     	ds	2
   998  00012E                     _width:
   999                           	opt callstack 0
  1000  00012E                     	ds	2
  1001  000130                     _prec:
  1002                           	opt callstack 0
  1003  000130                     	ds	2
  1004  000132                     _flags:
  1005                           	opt callstack 0
  1006  000132                     	ds	2
  1007  000134                     PID@difAnt:
  1008                           	opt callstack 0
  1009  000134                     	ds	2
  1010  000136                     _mouse:
  1011                           	opt callstack 0
  1012  000136                     	ds	2
  1013  000138                     comportamientoBasico@espejearCarroY:
  1014                           	opt callstack 0
  1015  000138                     	ds	1
  1016  000139                     _paredIzquierda:
  1017                           	opt callstack 0
  1018  000139                     	ds	1
  1019  00013A                     _paredDerecha:
  1020                           	opt callstack 0
  1021  00013A                     	ds	1
  1022  00013B                     _paredEnfrente:
  1023                           	opt callstack 0
  1024  00013B                     	ds	1
  1025  00013C                     _posicionDestinoY:
  1026                           	opt callstack 0
  1027  00013C                     	ds	1
  1028  00013D                     _posicionDestinoX:
  1029                           	opt callstack 0
  1030  00013D                     	ds	1
  1031  00013E                     _posicionCarroY:
  1032                           	opt callstack 0
  1033  00013E                     	ds	1
  1034  00013F                     _posicionCarroX:
  1035                           	opt callstack 0
  1036  00013F                     	ds	1
  1037  000140                     _crucesRecorridos:
  1038                           	opt callstack 0
  1039  000140                     	ds	1
  1040  000141                     _numMovimientosTotales:
  1041                           	opt callstack 0
  1042  000141                     	ds	1
  1043  000142                     _dbuf:
  1044                           	opt callstack 0
  1045  000142                     	ds	80
  1046  000192                     _buffer:
  1047                           	opt callstack 0
  1048  000192                     	ds	50
  1049  0001C4                     comportamientoBasico@caminoFinal:
  1050                           	opt callstack 0
  1051  0001C4                     	ds	20
  1052  0001D8                     comportamientoBasico@caminosRecorrer:
  1053                           	opt callstack 0
  1054  0001D8                     	ds	3
  1055  0001DB                     comportamientoBasico@numMovimientos:
  1056                           	opt callstack 0
  1057  0001DB                     	ds	2
  1058  0001DD                     comportamientoBasico@avanceRectoLargo:
  1059                           	opt callstack 0
  1060  0001DD                     	ds	1
  1061  0001DE                     comportamientoBasico@cambioOrientacionCarro:
  1062                           	opt callstack 0
  1063  0001DE                     	ds	1
  1064  0001DF                     comportamientoBasico@caminoActual:
  1065                           	opt callstack 0
  1066  0001DF                     	ds	1
  1067  0001E0                     comportamientoBasico@contCaminosRecorridos:
  1068                           	opt callstack 0
  1069  0001E0                     	ds	1
  1070  0001E1                     comportamientoBasico@posicionInvCruce:
  1071                           	opt callstack 0
  1072  0001E1                     	ds	1
  1073  0001E2                     comportamientoBasico@investigandoCruce:
  1074                           	opt callstack 0
  1075  0001E2                     	ds	1
  1076  0001E3                     comportamientoBasico@cruceDetectado:
  1077                           	opt callstack 0
  1078  0001E3                     	ds	1
  1079  0001E4                     comportamientoBasico@mapear:
  1080                           	opt callstack 0
  1081  0001E4                     	ds	1
  1082  0001E5                     comportamientoBasico@carroEspejeado:
  1083                           	opt callstack 0
  1084  0001E5                     	ds	1
  1085                           
  1086                           	psect	dataBANK1
  1087  0001FA                     __pdataBANK1:
  1088                           	opt callstack 0
  1089  0001FA                     _ida:
  1090                           	opt callstack 0
  1091  0001FA                     	ds	1
  1092  0001FB                     _pausa:
  1093                           	opt callstack 0
  1094  0001FB                     	ds	1
  1095  0001FC                     _SENSOR_PRIORIDAD_BAJA:
  1096                           	opt callstack 0
  1097  0001FC                     	ds	1
  1098  0001FD                     _SENSOR_PRIORIDAD_MEDIA:
  1099                           	opt callstack 0
  1100  0001FD                     	ds	1
  1101  0001FE                     _SENSOR_PRIORIDAD_ALTA:
  1102                           	opt callstack 0
  1103  0001FE                     	ds	1
  1104                           
  1105                           	psect	bssBANK2
  1106  000200                     __pbssBANK2:
  1107                           	opt callstack 0
  1108  000200                     comportamientoBasico@movimientosRealizados:
  1109                           	opt callstack 0
  1110  000200                     	ds	200
  1111                           
  1112                           	psect	cstackBANK2
  1113  0002C8                     __pcstackBANK2:
  1114                           	opt callstack 0
  1115  0002C8                     ??_comportamientoBasico:
  1116                           
  1117                           ; 1 bytes @ 0x0
  1118  0002C8                     	ds	4
  1119  0002CC                     main@iniciado:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 1 bytes @ 0x4
  1123  0002CC                     	ds	1
  1124                           
  1125                           	psect	cstackBANK1
  1126  0001E6                     __pcstackBANK1:
  1127                           	opt callstack 0
  1128  0001E6                     decidirDireccion@caminosRecorrer:
  1129                           	opt callstack 0
  1130  0001E6                     probarMapeoDireccionCruces@caminoFinal:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x0
  1134  0001E6                     	ds	2
  1135  0001E8                     probarMapeoDireccionCruces@caminoActual:
  1136                           	opt callstack 0
  1137  0001E8                     decidirDireccion@investigandoCruce:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x2
  1141  0001E8                     	ds	1
  1142  0001E9                     probarMapeoDireccionCruces@investigandoCruce:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x3
  1146  0001E9                     	ds	1
  1147  0001EA                     decidirDireccion@posicionInvCruce:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x4
  1151  0001EA                     	ds	1
  1152  0001EB                     probarMapeoDireccionCruces@posicionInvCruce:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x5
  1156  0001EB                     	ds	1
  1157  0001EC                     decidirDireccion@contCaminosRecorridos:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x6
  1161  0001EC                     	ds	1
  1162  0001ED                     probarMapeoDireccionCruces@mapear:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x7
  1166  0001ED                     	ds	1
  1167  0001EE                     decidirDireccion@caminoActual:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x8
  1171  0001EE                     	ds	1
  1172  0001EF                     probarMapeoDireccionCruces@cruceDetectado:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x9
  1176  0001EF                     	ds	1
  1177  0001F0                     decidirDireccion@cambioOrientacionCarro:
  1178                           	opt callstack 0
  1179                           
  1180                           ; 2 bytes @ 0xA
  1181  0001F0                     	ds	1
  1182  0001F1                     probarMapeoDireccionCruces@contCaminosRecorridos:
  1183                           	opt callstack 0
  1184                           
  1185                           ; 2 bytes @ 0xB
  1186  0001F1                     	ds	1
  1187  0001F2                     decidirDireccion@mapear:
  1188                           	opt callstack 0
  1189                           
  1190                           ; 2 bytes @ 0xC
  1191  0001F2                     	ds	1
  1192  0001F3                     probarMapeoDireccionCruces@cambioOrientacionCarro:
  1193                           	opt callstack 0
  1194                           
  1195                           ; 2 bytes @ 0xD
  1196  0001F3                     	ds	1
  1197  0001F4                     decidirDireccion@cruceDetectado:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 2 bytes @ 0xE
  1201  0001F4                     	ds	2
  1202  0001F6                     decidirDireccion@avanceRectoLargo:
  1203                           	opt callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x10
  1206  0001F6                     	ds	2
  1207  0001F8                     decidirDireccion@caminoFinal:
  1208                           	opt callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x12
  1211  0001F8                     	ds	2
  1212                           
  1213                           	psect	cstackBANK0
  1214  000060                     __pcstackBANK0:
  1215                           	opt callstack 0
  1216  000060                     ___fldiv@rem:
  1217                           	opt callstack 0
  1218  000060                     _roundf$1833:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x0
  1222  000060                     	ds	4
  1223  000064                     ___fldiv@sign:
  1224                           	opt callstack 0
  1225  000064                     roundf@e:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x4
  1229  000064                     	ds	1
  1230  000065                     ___fldiv@new_exp:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x5
  1234  000065                     	ds	1
  1235  000066                     _roundf$1832:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 4 bytes @ 0x6
  1239  000066                     	ds	1
  1240  000067                     ___fldiv@grs:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x7
  1244  000067                     	ds	3
  1245  00006A                     roundf@u:
  1246                           	opt callstack 0
  1247                           
  1248                           ; 4 bytes @ 0xA
  1249  00006A                     	ds	1
  1250  00006B                     ___fldiv@bexp:
  1251                           	opt callstack 0
  1252                           
  1253                           ; 1 bytes @ 0xB
  1254  00006B                     	ds	1
  1255  00006C                     ___fldiv@aexp:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 1 bytes @ 0xC
  1259  00006C                     	ds	1
  1260  00006D                     ??_floorf:
  1261                           
  1262                           ; 1 bytes @ 0xD
  1263  00006D                     	ds	1
  1264  00006E                     roundf@y:
  1265                           	opt callstack 0
  1266                           
  1267                           ; 4 bytes @ 0xE
  1268  00006E                     	ds	4
  1269  000072                     ?___fltol:
  1270                           	opt callstack 0
  1271  000072                     ___fltol@f1:
  1272                           	opt callstack 0
  1273                           
  1274                           ; 4 bytes @ 0x12
  1275  000072                     	ds	1
  1276  000073                     floorf@m:
  1277                           	opt callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x13
  1280  000073                     	ds	3
  1281  000076                     ??___fltol:
  1282                           
  1283                           ; 1 bytes @ 0x16
  1284  000076                     	ds	1
  1285  000077                     floorf@e:
  1286                           	opt callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x17
  1289  000077                     	ds	2
  1290  000079                     floorf@u:
  1291                           	opt callstack 0
  1292                           
  1293                           ; 4 bytes @ 0x19
  1294  000079                     	ds	1
  1295  00007A                     ___fltol@sign1:
  1296                           	opt callstack 0
  1297                           
  1298                           ; 1 bytes @ 0x1A
  1299  00007A                     	ds	1
  1300  00007B                     ___fltol@exp1:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x1B
  1304  00007B                     	ds	1
  1305  00007C                     pwmDuty@cicloTrabajo:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x1C
  1309  00007C                     	ds	1
  1310  00007D                     ?_efgtoa:
  1311                           	opt callstack 0
  1312  00007D                     efgtoa@fp:
  1313                           	opt callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x1D
  1316  00007D                     	ds	1
  1317  00007E                     pwmDuty@channel:
  1318                           	opt callstack 0
  1319                           
  1320                           ; 1 bytes @ 0x1E
  1321  00007E                     	ds	1
  1322  00007F                     ??_pwmDuty:
  1323  00007F                     efgtoa@f:
  1324                           	opt callstack 0
  1325                           
  1326                           ; 4 bytes @ 0x1F
  1327  00007F                     	ds	4
  1328  000083                     efgtoa@c:
  1329                           	opt callstack 0
  1330                           
  1331                           ; 1 bytes @ 0x23
  1332  000083                     	ds	1
  1333  000084                     ??_efgtoa:
  1334  000084                     pwmDuty@duty:
  1335                           	opt callstack 0
  1336                           
  1337                           ; 4 bytes @ 0x24
  1338  000084                     	ds	4
  1339  000088                     ??_PID:
  1340  000088                     moverCarrito@carroEspejeado:
  1341                           	opt callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x28
  1344  000088                     	ds	1
  1345  000089                     efgtoa@ou:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 4 bytes @ 0x29
  1349  000089                     	ds	1
  1350  00008A                     moverCarrito@avanceRectoLargo:
  1351                           	opt callstack 0
  1352  00008A                     _PID$1831:
  1353                           	opt callstack 0
  1354                           
  1355                           ; 4 bytes @ 0x2A
  1356  00008A                     	ds	2
  1357  00008C                     ??_moverCarrito:
  1358                           
  1359                           ; 1 bytes @ 0x2C
  1360  00008C                     	ds	1
  1361  00008D                     _efgtoa$928:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x2D
  1365  00008D                     	ds	1
  1366  00008E                     moverCarrito@espejearCarroY:
  1367                           	opt callstack 0
  1368  00008E                     PID@velocidadIzquierda:
  1369                           	opt callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x2E
  1372  00008E                     	ds	1
  1373  00008F                     _efgtoa$929:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x2F
  1377  00008F                     	ds	1
  1378  000090                     _PID$742:
  1379                           	opt callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x30
  1382  000090                     	ds	1
  1383  000091                     _efgtoa$933:
  1384                           	opt callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x31
  1387  000091                     	ds	1
  1388  000092                     PID@velocidadDerecha:
  1389                           	opt callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x32
  1392  000092                     	ds	1
  1393  000093                     _efgtoa$937:
  1394                           	opt callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x33
  1397  000093                     	ds	1
  1398  000094                     _PID$744:
  1399                           	opt callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x34
  1402  000094                     	ds	1
  1403  000095                     _efgtoa$938:
  1404                           	opt callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x35
  1407  000095                     	ds	1
  1408  000096                     PID@dif:
  1409                           	opt callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x36
  1412  000096                     	ds	1
  1413  000097                     _efgtoa$939:
  1414                           	opt callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x37
  1417  000097                     	ds	1
  1418  000098                     PID@error:
  1419                           	opt callstack 0
  1420                           
  1421                           ; 2 bytes @ 0x38
  1422  000098                     	ds	1
  1423  000099                     efgtoa@t:
  1424                           	opt callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x39
  1427  000099                     	ds	1
  1428  00009A                     regresarAlCruce@movimientos:
  1429                           	opt callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x3A
  1432  00009A                     	ds	1
  1433  00009B                     efgtoa@pp:
  1434                           	opt callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x3B
  1437  00009B                     	ds	1
  1438  00009C                     regresarAlCruce@numMovimientos:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x3C
  1442  00009C                     	ds	1
  1443  00009D                     efgtoa@m:
  1444                           	opt callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x3D
  1447  00009D                     	ds	1
  1448  00009E                     regresarAlCruce@i:
  1449                           	opt callstack 0
  1450                           
  1451                           ; 2 bytes @ 0x3E
  1452  00009E                     	ds	1
  1453  00009F                     efgtoa@ne:
  1454                           	opt callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x3F
  1457  00009F                     	ds	2
  1458  0000A1                     efgtoa@d:
  1459                           	opt callstack 0
  1460                           
  1461                           ; 2 bytes @ 0x41
  1462  0000A1                     	ds	2
  1463  0000A3                     efgtoa@sign:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x43
  1467  0000A3                     	ds	2
  1468  0000A5                     efgtoa@p:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x45
  1472  0000A5                     	ds	2
  1473  0000A7                     efgtoa@nmode:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x47
  1477  0000A7                     	ds	1
  1478  0000A8                     efgtoa@w:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 2 bytes @ 0x48
  1482  0000A8                     	ds	2
  1483  0000AA                     efgtoa@mode:
  1484                           	opt callstack 0
  1485                           
  1486                           ; 1 bytes @ 0x4A
  1487  0000AA                     	ds	1
  1488  0000AB                     efgtoa@h:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 4 bytes @ 0x4B
  1492  0000AB                     	ds	4
  1493  0000AF                     efgtoa@l:
  1494                           	opt callstack 0
  1495                           
  1496                           ; 4 bytes @ 0x4F
  1497  0000AF                     	ds	4
  1498  0000B3                     efgtoa@i:
  1499                           	opt callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x53
  1502  0000B3                     	ds	2
  1503  0000B5                     efgtoa@g:
  1504                           	opt callstack 0
  1505                           
  1506                           ; 4 bytes @ 0x55
  1507  0000B5                     	ds	4
  1508  0000B9                     efgtoa@e:
  1509                           	opt callstack 0
  1510                           
  1511                           ; 2 bytes @ 0x59
  1512  0000B9                     	ds	2
  1513  0000BB                     efgtoa@n:
  1514                           	opt callstack 0
  1515                           
  1516                           ; 2 bytes @ 0x5B
  1517  0000BB                     	ds	2
  1518  0000BD                     efgtoa@u:
  1519                           	opt callstack 0
  1520                           
  1521                           ; 4 bytes @ 0x5D
  1522  0000BD                     	ds	4
  1523  0000C1                     ?_vfpfcnvrt:
  1524                           	opt callstack 0
  1525  0000C1                     vfpfcnvrt@fp:
  1526                           	opt callstack 0
  1527                           
  1528                           ; 2 bytes @ 0x61
  1529  0000C1                     	ds	2
  1530  0000C3                     vfpfcnvrt@fmt:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 2 bytes @ 0x63
  1534  0000C3                     	ds	2
  1535  0000C5                     vfpfcnvrt@ap:
  1536                           	opt callstack 0
  1537                           
  1538                           ; 2 bytes @ 0x65
  1539  0000C5                     	ds	2
  1540  0000C7                     ??_vfpfcnvrt:
  1541                           
  1542                           ; 1 bytes @ 0x67
  1543  0000C7                     	ds	4
  1544  0000CB                     vfpfcnvrt@ll:
  1545                           	opt callstack 0
  1546                           
  1547                           ; 8 bytes @ 0x6B
  1548  0000CB                     	ds	8
  1549  0000D3                     _vfpfcnvrt$953:
  1550                           	opt callstack 0
  1551                           
  1552                           ; 2 bytes @ 0x73
  1553  0000D3                     	ds	2
  1554  0000D5                     _vfpfcnvrt$959:
  1555                           	opt callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x75
  1558  0000D5                     	ds	2
  1559  0000D7                     vfpfcnvrt@f:
  1560                           	opt callstack 0
  1561                           
  1562                           ; 4 bytes @ 0x77
  1563  0000D7                     	ds	4
  1564  0000DB                     vfpfcnvrt@ct:
  1565                           	opt callstack 0
  1566                           
  1567                           ; 3 bytes @ 0x7B
  1568  0000DB                     	ds	3
  1569  0000DE                     vfpfcnvrt@c:
  1570                           	opt callstack 0
  1571                           
  1572                           ; 1 bytes @ 0x7E
  1573  0000DE                     	ds	1
  1574  0000DF                     ?_vfprintf:
  1575                           	opt callstack 0
  1576  0000DF                     vfprintf@fp:
  1577                           	opt callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x7F
  1580  0000DF                     	ds	2
  1581  0000E1                     vfprintf@fmt:
  1582                           	opt callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x81
  1585  0000E1                     	ds	2
  1586  0000E3                     vfprintf@ap:
  1587                           	opt callstack 0
  1588                           
  1589                           ; 2 bytes @ 0x83
  1590  0000E3                     	ds	2
  1591  0000E5                     vfprintf@cfmt:
  1592                           	opt callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x85
  1595  0000E5                     	ds	2
  1596  0000E7                     ?_sprintf:
  1597                           	opt callstack 0
  1598  0000E7                     sprintf@s:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x87
  1602  0000E7                     	ds	2
  1603  0000E9                     sprintf@fmt:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x89
  1607  0000E9                     	ds	10
  1608  0000F3                     sprintf@ap:
  1609                           	opt callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x93
  1612  0000F3                     	ds	2
  1613  0000F5                     sprintf@f:
  1614                           	opt callstack 0
  1615                           
  1616                           ; 6 bytes @ 0x95
  1617  0000F5                     	ds	6
  1618  0000FB                     ??_decidirDireccion:
  1619  0000FB                     ??_probarMapeoDireccionCruces:
  1620  0000FB                     visualizarPasosRealizados@numMovimientos:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x9B
  1624  0000FB                     	ds	2
  1625  0000FD                     ??_visualizarPasosRealizados:
  1626                           
  1627                           ; 1 bytes @ 0x9D
  1628  0000FD                     	ds	1
  1629  0000FE                     comportamientoBasico@direccionElegida:
  1630                           	opt callstack 0
  1631                           
  1632                           ; 1 bytes @ 0x9E
  1633  0000FE                     	ds	1
  1634                           
  1635                           	psect	cstackCOMRAM
  1636  000001                     __pcstackCOMRAM:
  1637                           	opt callstack 0
  1638  000001                     ??_antiRebote:
  1639  000001                     
  1640                           ; 1 bytes @ 0x0
  1641  000001                     	ds	2
  1642  000003                     antiRebote@pin:
  1643                           	opt callstack 0
  1644                           
  1645                           ; 1 bytes @ 0x2
  1646  000003                     	ds	1
  1647  000004                     ??_boton:
  1648                           
  1649                           ; 1 bytes @ 0x3
  1650  000004                     	ds	2
  1651  000006                     ??_forzarParoAuto:
  1652  000006                     ??_configPwm:
  1653  000006                     ??_forzarReversa:
  1654  000006                     ??_forzarAvanceRecto:
  1655  000006                     ??_forzarGiroIzquierda:
  1656  000006                     ??_forzarGiroDerecha:
  1657  000006                     ?_strlen:
  1658                           	opt callstack 0
  1659  000006                     ?___fpclassifyf:
  1660                           	opt callstack 0
  1661  000006                     ?_isupper:
  1662                           	opt callstack 0
  1663  000006                     ?_isdigit:
  1664                           	opt callstack 0
  1665  000006                     ?_strncmp:
  1666                           	opt callstack 0
  1667  000006                     ?_isspace:
  1668                           	opt callstack 0
  1669  000006                     ?_dameLecturaAdc:
  1670                           	opt callstack 0
  1671  000006                     ?___wmul:
  1672                           	opt callstack 0
  1673  000006                     ?___awdiv:
  1674                           	opt callstack 0
  1675  000006                     ?___awmod:
  1676                           	opt callstack 0
  1677  000006                     ?___lwdiv:
  1678                           	opt callstack 0
  1679  000006                     ?___lmul:
  1680                           	opt callstack 0
  1681  000006                     ?___flneg:
  1682                           	opt callstack 0
  1683  000006                     ?___aodiv:
  1684                           	opt callstack 0
  1685  000006                     ?___aomod:
  1686                           	opt callstack 0
  1687  000006                     UART_write@dato:
  1688                           	opt callstack 0
  1689  000006                     limpiarMovimientos@movimientos:
  1690                           	opt callstack 0
  1691  000006                     ___wmul@multiplier:
  1692                           	opt callstack 0
  1693  000006                     ___awdiv@dividend:
  1694                           	opt callstack 0
  1695  000006                     ___awmod@dividend:
  1696                           	opt callstack 0
  1697  000006                     ___lwdiv@dividend:
  1698                           	opt callstack 0
  1699  000006                     isdigit@c:
  1700                           	opt callstack 0
  1701  000006                     isspace@c:
  1702                           	opt callstack 0
  1703  000006                     isupper@c:
  1704                           	opt callstack 0
  1705  000006                     fputc@c:
  1706                           	opt callstack 0
  1707  000006                     strcpy@dest:
  1708                           	opt callstack 0
  1709  000006                     strlen@s:
  1710                           	opt callstack 0
  1711  000006                     strncmp@_l:
  1712                           	opt callstack 0
  1713  000006                     ___lmul@multiplier:
  1714                           	opt callstack 0
  1715  000006                     ___fleq@ff1:
  1716                           	opt callstack 0
  1717  000006                     ___flneg@f1:
  1718                           	opt callstack 0
  1719  000006                     ___fpclassifyf@x:
  1720                           	opt callstack 0
  1721  000006                     ___aodiv@dividend:
  1722                           	opt callstack 0
  1723  000006                     ___aomod@dividend:
  1724                           	opt callstack 0
  1725                           
  1726                           ; 8 bytes @ 0x5
  1727  000006                     	ds	1
  1728  000007                     UART_printf@cadena:
  1729                           	opt callstack 0
  1730                           
  1731                           ; 2 bytes @ 0x6
  1732  000007                     	ds	1
  1733  000008                     ??_mover:
  1734  000008                     ??_isupper:
  1735  000008                     ??_isdigit:
  1736  000008                     ??_isspace:
  1737  000008                     ??_dameLecturaAdc:
  1738  000008                     configPwm@channel:
  1739                           	opt callstack 0
  1740  000008                     limpiarMovimientos@numMovimientos:
  1741                           	opt callstack 0
  1742  000008                     ___wmul@multiplicand:
  1743                           	opt callstack 0
  1744  000008                     ___awdiv@divisor:
  1745                           	opt callstack 0
  1746  000008                     ___awmod@divisor:
  1747                           	opt callstack 0
  1748  000008                     ___lwdiv@divisor:
  1749                           	opt callstack 0
  1750  000008                     fputc@fp:
  1751                           	opt callstack 0
  1752  000008                     strcpy@src:
  1753                           	opt callstack 0
  1754  000008                     strlen@a:
  1755                           	opt callstack 0
  1756  000008                     strncmp@_r:
  1757                           	opt callstack 0
  1758                           
  1759                           ; 2 bytes @ 0x7
  1760  000008                     	ds	1
  1761  000009                     ??_mostrarDireccionElegida:
  1762                           
  1763                           ; 1 bytes @ 0x8
  1764  000009                     	ds	1
  1765  00000A                     ??_fputc:
  1766  00000A                     ??___fpclassifyf:
  1767  00000A                     ??_strcpy:
  1768  00000A                     dameLecturaAdc@canalLeer:
  1769                           	opt callstack 0
  1770  00000A                     ___awdiv@counter:
  1771                           	opt callstack 0
  1772  00000A                     ___awmod@counter:
  1773                           	opt callstack 0
  1774  00000A                     ___lwdiv@counter:
  1775                           	opt callstack 0
  1776  00000A                     ___wmul@product:
  1777                           	opt callstack 0
  1778  00000A                     strncmp@n:
  1779                           	opt callstack 0
  1780  00000A                     ___lmul@multiplicand:
  1781                           	opt callstack 0
  1782  00000A                     ___fleq@ff2:
  1783                           	opt callstack 0
  1784                           
  1785                           ; 4 bytes @ 0x9
  1786  00000A                     	ds	1
  1787  00000B                     seLlegoAlDestino@llegoDestino:
  1788                           	opt callstack 0
  1789  00000B                     mostrarDireccionElegida@direccionElegida:
  1790                           	opt callstack 0
  1791  00000B                     ___awdiv@sign:
  1792                           	opt callstack 0
  1793  00000B                     ___awmod@sign:
  1794                           	opt callstack 0
  1795  00000B                     ___lwdiv@quotient:
  1796                           	opt callstack 0
  1797                           
  1798                           ; 2 bytes @ 0xA
  1799  00000B                     	ds	1
  1800  00000C                     ??_strncmp:
  1801  00000C                     ?_tolower:
  1802                           	opt callstack 0
  1803  00000C                     _isspace$1463:
  1804                           	opt callstack 0
  1805  00000C                     limpiarMovimientos@i:
  1806                           	opt callstack 0
  1807  00000C                     ___awdiv@quotient:
  1808                           	opt callstack 0
  1809  00000C                     strcpy@s:
  1810                           	opt callstack 0
  1811  00000C                     tolower@c:
  1812                           	opt callstack 0
  1813                           
  1814                           ; 2 bytes @ 0xB
  1815  00000C                     	ds	1
  1816  00000D                     ?_atoi:
  1817                           	opt callstack 0
  1818  00000D                     ?___xxtofl:
  1819                           	opt callstack 0
  1820  00000D                     atoi@s:
  1821                           	opt callstack 0
  1822  00000D                     strncmp@l:
  1823                           	opt callstack 0
  1824  00000D                     ___xxtofl@val:
  1825                           	opt callstack 0
  1826                           
  1827                           ; 4 bytes @ 0xC
  1828  00000D                     	ds	1
  1829  00000E                     ??_tolower:
  1830  00000E                     ??___fleq:
  1831  00000E                     ___fpclassifyf@e:
  1832                           	opt callstack 0
  1833  00000E                     strcpy@d:
  1834                           	opt callstack 0
  1835  00000E                     ___lmul@product:
  1836                           	opt callstack 0
  1837  00000E                     ___aodiv@divisor:
  1838                           	opt callstack 0
  1839  00000E                     ___aomod@divisor:
  1840                           	opt callstack 0
  1841                           
  1842                           ; 8 bytes @ 0xD
  1843  00000E                     	ds	1
  1844  00000F                     ??_atoi:
  1845  00000F                     fputs@s:
  1846                           	opt callstack 0
  1847  00000F                     strncmp@r:
  1848                           	opt callstack 0
  1849                           
  1850                           ; 2 bytes @ 0xE
  1851  00000F                     	ds	1
  1852  000010                     ___fpclassifyf@u:
  1853                           	opt callstack 0
  1854                           
  1855                           ; 4 bytes @ 0xF
  1856  000010                     	ds	1
  1857  000011                     ??___xxtofl:
  1858  000011                     fputs@fp:
  1859                           	opt callstack 0
  1860                           
  1861                           ; 2 bytes @ 0x10
  1862  000011                     	ds	1
  1863  000012                     ?___aldiv:
  1864                           	opt callstack 0
  1865  000012                     _tolower$1562:
  1866                           	opt callstack 0
  1867  000012                     ___aldiv@dividend:
  1868                           	opt callstack 0
  1869                           
  1870                           ; 4 bytes @ 0x11
  1871  000012                     	ds	1
  1872  000013                     fputs@c:
  1873                           	opt callstack 0
  1874  000013                     atoi@neg:
  1875                           	opt callstack 0
  1876                           
  1877                           ; 2 bytes @ 0x12
  1878  000013                     	ds	1
  1879  000014                     fputs@i:
  1880                           	opt callstack 0
  1881                           
  1882                           ; 2 bytes @ 0x13
  1883  000014                     	ds	1
  1884  000015                     ___xxtofl@sign:
  1885                           	opt callstack 0
  1886  000015                     _atoi$1432:
  1887                           	opt callstack 0
  1888                           
  1889                           ; 2 bytes @ 0x14
  1890  000015                     	ds	1
  1891  000016                     ?_pad:
  1892                           	opt callstack 0
  1893  000016                     ___aodiv@counter:
  1894                           	opt callstack 0
  1895  000016                     ___aomod@counter:
  1896                           	opt callstack 0
  1897  000016                     ___xxtofl@exp:
  1898                           	opt callstack 0
  1899  000016                     pad@fp:
  1900                           	opt callstack 0
  1901  000016                     ___aldiv@divisor:
  1902                           	opt callstack 0
  1903                           
  1904                           ; 4 bytes @ 0x15
  1905  000016                     	ds	1
  1906  000017                     ___aodiv@sign:
  1907                           	opt callstack 0
  1908  000017                     ___aomod@sign:
  1909                           	opt callstack 0
  1910  000017                     _atoi$1434:
  1911                           	opt callstack 0
  1912  000017                     ___xxtofl@arg:
  1913                           	opt callstack 0
  1914                           
  1915                           ; 4 bytes @ 0x16
  1916  000017                     	ds	1
  1917  000018                     ?_abs:
  1918                           	opt callstack 0
  1919  000018                     pad@buf:
  1920                           	opt callstack 0
  1921  000018                     abs@a:
  1922                           	opt callstack 0
  1923  000018                     ___aodiv@quotient:
  1924                           	opt callstack 0
  1925                           
  1926                           ; 8 bytes @ 0x17
  1927  000018                     	ds	1
  1928  000019                     _atoi$1433:
  1929                           	opt callstack 0
  1930                           
  1931                           ; 1 bytes @ 0x18
  1932  000019                     	ds	1
  1933  00001A                     ??_abs:
  1934  00001A                     ___aldiv@counter:
  1935                           	opt callstack 0
  1936  00001A                     pad@p:
  1937                           	opt callstack 0
  1938  00001A                     atoi@n:
  1939                           	opt callstack 0
  1940                           
  1941                           ; 2 bytes @ 0x19
  1942  00001A                     	ds	1
  1943  00001B                     ?___flmul:
  1944                           	opt callstack 0
  1945  00001B                     ?_dameDistancia:
  1946                           	opt callstack 0
  1947  00001B                     ___aldiv@sign:
  1948                           	opt callstack 0
  1949  00001B                     ___flmul@b:
  1950                           	opt callstack 0
  1951                           
  1952                           ; 4 bytes @ 0x1A
  1953  00001B                     	ds	1
  1954  00001C                     ??_pad:
  1955  00001C                     ___aldiv@quotient:
  1956                           	opt callstack 0
  1957                           
  1958                           ; 4 bytes @ 0x1B
  1959  00001C                     	ds	1
  1960  00001D                     pad@i:
  1961                           	opt callstack 0
  1962                           
  1963                           ; 2 bytes @ 0x1C
  1964  00001D                     	ds	2
  1965  00001F                     ??_dameDistancia:
  1966  00001F                     pad@w:
  1967                           	opt callstack 0
  1968  00001F                     ___flmul@a:
  1969                           	opt callstack 0
  1970                           
  1971                           ; 4 bytes @ 0x1E
  1972  00001F                     	ds	1
  1973  000020                     ?_map:
  1974                           	opt callstack 0
  1975  000020                     map@x:
  1976                           	opt callstack 0
  1977  000020                     UART_init@BAUD:
  1978                           	opt callstack 0
  1979                           
  1980                           ; 4 bytes @ 0x1F
  1981  000020                     	ds	1
  1982  000021                     ?_ctoa:
  1983                           	opt callstack 0
  1984  000021                     ?_dtoa:
  1985                           	opt callstack 0
  1986  000021                     dameDistancia@numeroSensor:
  1987                           	opt callstack 0
  1988  000021                     ctoa@fp:
  1989                           	opt callstack 0
  1990  000021                     dtoa@fp:
  1991                           	opt callstack 0
  1992                           
  1993                           ; 2 bytes @ 0x20
  1994  000021                     	ds	1
  1995  000022                     dameDistancia@distancia:
  1996                           	opt callstack 0
  1997                           
  1998                           ; 4 bytes @ 0x21
  1999  000022                     	ds	1
  2000  000023                     ??___flmul:
  2001  000023                     ctoa@c:
  2002                           	opt callstack 0
  2003  000023                     dtoa@d:
  2004                           	opt callstack 0
  2005                           
  2006                           ; 8 bytes @ 0x22
  2007  000023                     	ds	1
  2008  000024                     ctoa@w:
  2009                           	opt callstack 0
  2010  000024                     map@in_min:
  2011                           	opt callstack 0
  2012                           
  2013                           ; 4 bytes @ 0x23
  2014  000024                     	ds	2
  2015  000026                     dameDistancia@conteo:
  2016                           	opt callstack 0
  2017                           
  2018                           ; 2 bytes @ 0x25
  2019  000026                     	ds	1
  2020  000027                     ___flmul@sign:
  2021                           	opt callstack 0
  2022                           
  2023                           ; 1 bytes @ 0x26
  2024  000027                     	ds	1
  2025  000028                     ___flmul@aexp:
  2026                           	opt callstack 0
  2027  000028                     map@in_max:
  2028                           	opt callstack 0
  2029  000028                     _UART_init$1830:
  2030                           	opt callstack 0
  2031                           
  2032                           ; 4 bytes @ 0x27
  2033  000028                     	ds	1
  2034  000029                     ___flmul@grs:
  2035                           	opt callstack 0
  2036                           
  2037                           ; 4 bytes @ 0x28
  2038  000029                     	ds	2
  2039  00002B                     ??_dtoa:
  2040                           
  2041                           ; 1 bytes @ 0x2A
  2042  00002B                     	ds	1
  2043  00002C                     map@out_min:
  2044                           	opt callstack 0
  2045                           
  2046                           ; 4 bytes @ 0x2B
  2047  00002C                     	ds	1
  2048  00002D                     ___flmul@bexp:
  2049                           	opt callstack 0
  2050                           
  2051                           ; 1 bytes @ 0x2C
  2052  00002D                     	ds	1
  2053  00002E                     ___flmul@prod:
  2054                           	opt callstack 0
  2055                           
  2056                           ; 4 bytes @ 0x2D
  2057  00002E                     	ds	2
  2058  000030                     map@out_max:
  2059                           	opt callstack 0
  2060                           
  2061                           ; 4 bytes @ 0x2F
  2062  000030                     	ds	2
  2063  000032                     ___flmul@temp:
  2064                           	opt callstack 0
  2065                           
  2066                           ; 2 bytes @ 0x31
  2067  000032                     	ds	1
  2068  000033                     _dtoa$905:
  2069                           	opt callstack 0
  2070                           
  2071                           ; 2 bytes @ 0x32
  2072  000033                     	ds	1
  2073  000034                     ?___fladd:
  2074                           	opt callstack 0
  2075  000034                     ___flge@ff1:
  2076                           	opt callstack 0
  2077  000034                     ___fladd@b:
  2078                           	opt callstack 0
  2079                           
  2080                           ; 4 bytes @ 0x33
  2081  000034                     	ds	1
  2082  000035                     dtoa@p:
  2083                           	opt callstack 0
  2084                           
  2085                           ; 2 bytes @ 0x34
  2086  000035                     	ds	2
  2087  000037                     dtoa@w:
  2088                           	opt callstack 0
  2089                           
  2090                           ; 2 bytes @ 0x36
  2091  000037                     	ds	1
  2092  000038                     ___flge@ff2:
  2093                           	opt callstack 0
  2094  000038                     ___fladd@a:
  2095                           	opt callstack 0
  2096                           
  2097                           ; 4 bytes @ 0x37
  2098  000038                     	ds	1
  2099  000039                     dtoa@s:
  2100                           	opt callstack 0
  2101                           
  2102                           ; 2 bytes @ 0x38
  2103  000039                     	ds	2
  2104  00003B                     dtoa@n:
  2105                           	opt callstack 0
  2106                           
  2107                           ; 8 bytes @ 0x3A
  2108  00003B                     	ds	1
  2109  00003C                     ??___fladd:
  2110  00003C                     ??___flge:
  2111                           
  2112                           ; 1 bytes @ 0x3B
  2113  00003C                     	ds	4
  2114  000040                     ___fladd@signs:
  2115                           	opt callstack 0
  2116  000040                     hayCruce@caminosRecorrer:
  2117                           	opt callstack 0
  2118                           
  2119                           ; 2 bytes @ 0x3F
  2120  000040                     	ds	1
  2121  000041                     ___fladd@aexp:
  2122                           	opt callstack 0
  2123                           
  2124                           ; 1 bytes @ 0x40
  2125  000041                     	ds	1
  2126  000042                     hayCruce@investigandoCruce:
  2127                           	opt callstack 0
  2128  000042                     ___fladd@bexp:
  2129                           	opt callstack 0
  2130                           
  2131                           ; 1 bytes @ 0x41
  2132  000042                     	ds	1
  2133  000043                     hayCruce@contCaminos:
  2134                           	opt callstack 0
  2135  000043                     ___fladd@grs:
  2136                           	opt callstack 0
  2137  000043                     dtoa@i:
  2138                           	opt callstack 0
  2139                           
  2140                           ; 2 bytes @ 0x42
  2141  000043                     	ds	1
  2142  000044                     ?___fldiv:
  2143                           	opt callstack 0
  2144  000044                     ?___flsub:
  2145                           	opt callstack 0
  2146  000044                     ___flsub@b:
  2147                           	opt callstack 0
  2148  000044                     ___fldiv@b:
  2149                           	opt callstack 0
  2150                           
  2151                           ; 4 bytes @ 0x43
  2152  000044                     	ds	4
  2153  000048                     ___flsub@a:
  2154                           	opt callstack 0
  2155  000048                     ___fldiv@a:
  2156                           	opt callstack 0
  2157                           
  2158                           ; 4 bytes @ 0x47
  2159  000048                     	ds	4
  2160  00004C                     ??___fldiv:
  2161  00004C                     ?_roundf:
  2162                           	opt callstack 0
  2163  00004C                     roundf@x:
  2164                           	opt callstack 0
  2165                           
  2166                           ; 4 bytes @ 0x4B
  2167  00004C                     	ds	4
  2168  000050                     ??_roundf:
  2169  000050                     ?_floorf:
  2170                           	opt callstack 0
  2171  000050                     floorf@x:
  2172                           	opt callstack 0
  2173                           
  2174                           ; 4 bytes @ 0x4F
  2175  000050                     	ds	4
  2176  000054                     ??_alinearDespuesCallejon:
  2177  000054                     ??_forzarEspejeoIzquierda:
  2178  000054                     ??_forzarEspejeoDerecha:
  2179  000054                     decidirDireccion@direccionElegida:
  2180                           	opt callstack 0
  2181                           
  2182                           ; 1 bytes @ 0x53
  2183  000054                     	ds	1
  2184  000055                     
  2185                           ; 1 bytes @ 0x54
  2186 ;;
  2187 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2188 ;;
  2189 ;; *************** function _main *****************
  2190 ;; Defined at:
  2191 ;;		line 1399 in file "main.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  numMovimient    2    0        int 
  2196 ;;  iniciado        1    4[BANK2 ] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0
  2207 ;;      Locals:         0       0       0       3       0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2209 ;;      Totals:         0       0       0       3       0       0       0       0       0
  2210 ;;Total ram usage:        3 bytes
  2211 ;; Hardware stack levels required when called:   12
  2212 ;; This function calls:
  2213 ;;		_UART_init
  2214 ;;		_comportamientoBasico
  2215 ;;		_configPwm
  2216 ;;		_configurarAdc
  2217 ;;		_forzarParoAuto
  2218 ;;		_inicializarComportamientoBasico
  2219 ;;		_visualizarPasosRealizados
  2220 ;; This function is called by:
  2221 ;;		Startup code after reset
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text0
  2226  004E06                     __ptext0:
  2227                           	opt callstack 0
  2228  004E06                     _main:
  2229                           	opt callstack 19
  2230  004E06                     
  2231                           ;main.c: 1401:     T_BOOL iniciado = 0;
  2232  004E06  0E00               	movlw	0
  2233  004E08  0102               	movlb	2	; () banked
  2234  004E0A  6FCC               	movwf	main@iniciado& (0+255),b
  2235  004E0C                     
  2236                           ; BSR set to: 2
  2237                           ;main.c: 1405:     INTCONbits.GIE = 1;
  2238  004E0C  8EF2               	bsf	242,7,c	;volatile
  2239  004E0E                     
  2240                           ; BSR set to: 2
  2241                           ;main.c: 1406:     INTCONbits.INT0IE = 1;
  2242  004E0E  88F2               	bsf	242,4,c	;volatile
  2243  004E10                     
  2244                           ; BSR set to: 2
  2245                           ;main.c: 1407:     INTCON2bits.INTEDG0 = 1;
  2246  004E10  8CF1               	bsf	241,6,c	;volatile
  2247  004E12                     
  2248                           ; BSR set to: 2
  2249                           ;main.c: 1409:     TRISD3 = 0;
  2250  004E12  9695               	bcf	3989,3,c	;volatile
  2251  004E14                     
  2252                           ; BSR set to: 2
  2253                           ;main.c: 1410:     TRISB1 = 1;
  2254  004E14  8293               	bsf	3987,1,c	;volatile
  2255  004E16                     
  2256                           ; BSR set to: 2
  2257                           ;main.c: 1411:     TRISB2 = 1;
  2258  004E16  8493               	bsf	3987,2,c	;volatile
  2259  004E18                     
  2260                           ; BSR set to: 2
  2261                           ;main.c: 1412:     TRISB3 = 1;
  2262  004E18  8693               	bsf	3987,3,c	;volatile
  2263  004E1A                     
  2264                           ; BSR set to: 2
  2265                           ;main.c: 1414:     TRISB4 = 0;
  2266  004E1A  9893               	bcf	3987,4,c	;volatile
  2267  004E1C                     
  2268                           ; BSR set to: 2
  2269                           ;main.c: 1415:     TRISB5 = 0;
  2270  004E1C  9A93               	bcf	3987,5,c	;volatile
  2271  004E1E                     
  2272                           ; BSR set to: 2
  2273                           ;main.c: 1416:     TRISB6 = 0;
  2274  004E1E  9C93               	bcf	3987,6,c	;volatile
  2275  004E20                     
  2276                           ; BSR set to: 2
  2277                           ;main.c: 1417:     TRISB7 = 0;
  2278  004E20  9E93               	bcf	3987,7,c	;volatile
  2279  004E22                     
  2280                           ; BSR set to: 2
  2281                           ;main.c: 1419:     TRISDbits.RD2 = 0;
  2282  004E22  9495               	bcf	149,2,c	;volatile
  2283  004E24                     
  2284                           ; BSR set to: 2
  2285                           ;main.c: 1420:     TRISB0 = 1;
  2286  004E24  8093               	bsf	3987,0,c	;volatile
  2287  004E26                     
  2288                           ; BSR set to: 2
  2289                           ;main.c: 1422:     LATD3 = 0;
  2290  004E26  968C               	bcf	3980,3,c	;volatile
  2291  004E28                     
  2292                           ; BSR set to: 2
  2293                           ;main.c: 1423:     LATB4 = 0;
  2294  004E28  988A               	bcf	3978,4,c	;volatile
  2295  004E2A                     
  2296                           ; BSR set to: 2
  2297                           ;main.c: 1424:     LATB5 = 0;
  2298  004E2A  9A8A               	bcf	3978,5,c	;volatile
  2299  004E2C                     
  2300                           ; BSR set to: 2
  2301                           ;main.c: 1425:     LATB6 = 0;
  2302  004E2C  9C8A               	bcf	3978,6,c	;volatile
  2303  004E2E                     
  2304                           ; BSR set to: 2
  2305                           ;main.c: 1426:     LATB7 = 0;
  2306  004E2E  9E8A               	bcf	3978,7,c	;volatile
  2307  004E30                     
  2308                           ; BSR set to: 2
  2309                           ;main.c: 1427:     LATD2 = 0;
  2310  004E30  948C               	bcf	3980,2,c	;volatile
  2311                           
  2312                           ;main.c: 1430:     T1CON = 0b00000000;
  2313  004E32  0E00               	movlw	0
  2314  004E34  6ECD               	movwf	205,c	;volatile
  2315  004E36                     
  2316                           ; BSR set to: 2
  2317                           ;main.c: 1432:     configPwm(1);
  2318  004E36  0E01               	movlw	1
  2319  004E38  EC36  F02A         	call	_configPwm
  2320  004E3C                     
  2321                           ;main.c: 1433:     configPwm(2);
  2322  004E3C  0E02               	movlw	2
  2323  004E3E  EC36  F02A         	call	_configPwm
  2324  004E42                     
  2325                           ;main.c: 1434:     configurarAdc();
  2326  004E42  ECB8  F02C         	call	_configurarAdc	;wreg free
  2327  004E46                     
  2328                           ;main.c: 1436:     UART_init(9600);
  2329  004E46  0E80               	movlw	128
  2330  004E48  6E20               	movwf	UART_init@BAUD^0,c
  2331  004E4A  0E25               	movlw	37
  2332  004E4C  6E21               	movwf	(UART_init@BAUD+1)^0,c
  2333  004E4E  0E00               	movlw	0
  2334  004E50  6E22               	movwf	(UART_init@BAUD+2)^0,c
  2335  004E52  0E00               	movlw	0
  2336  004E54  6E23               	movwf	(UART_init@BAUD+3)^0,c
  2337  004E56  EC08  F028         	call	_UART_init	;wreg free
  2338  004E5A                     l11020:
  2339                           
  2340                           ;main.c: 1441:         if (!pausa) {
  2341  004E5A  0101               	movlb	1	; () banked
  2342  004E5C  51FB               	movf	_pausa& (0+255),w,b
  2343  004E5E  A4D8               	btfss	status,2,c
  2344  004E60  EF34  F027         	goto	u12201
  2345  004E64  EF36  F027         	goto	u12200
  2346  004E68                     u12201:
  2347  004E68  EF49  F027         	goto	l11036
  2348  004E6C                     u12200:
  2349  004E6C                     
  2350                           ; BSR set to: 1
  2351                           ;main.c: 1443:             if (!iniciado) {
  2352  004E6C  0102               	movlb	2	; () banked
  2353  004E6E  51CC               	movf	main@iniciado& (0+255),w,b
  2354  004E70  A4D8               	btfss	status,2,c
  2355  004E72  EF3D  F027         	goto	u12211
  2356  004E76  EF3F  F027         	goto	u12210
  2357  004E7A                     u12211:
  2358  004E7A  EF43  F027         	goto	l11032
  2359  004E7E                     u12210:
  2360  004E7E                     
  2361                           ; BSR set to: 2
  2362                           ;main.c: 1444:                 iniciado = 1;
  2363  004E7E  0E01               	movlw	1
  2364  004E80  6FCC               	movwf	main@iniciado& (0+255),b
  2365  004E82                     
  2366                           ; BSR set to: 2
  2367                           ;main.c: 1445:                 inicializarComportamientoBasico();
  2368  004E82  EC86  F02A         	call	_inicializarComportamientoBasico	;wreg free
  2369  004E86                     l11032:
  2370                           
  2371                           ;main.c: 1456:             comportamientoBasico();
  2372  004E86  ECD7  F010         	call	_comportamientoBasico	;wreg free
  2373  004E8A                     
  2374                           ;main.c: 1457:             forzarParoAuto();
  2375  004E8A  ECA0  F02C         	call	_forzarParoAuto	;wreg free
  2376                           
  2377                           ;main.c: 1459:         } else {
  2378  004E8E  EF2D  F027         	goto	l11020
  2379  004E92                     l11036:
  2380                           
  2381                           ; BSR set to: 1
  2382                           ;main.c: 1461:             iniciado = 0;
  2383  004E92  0E00               	movlw	0
  2384  004E94  0102               	movlb	2	; () banked
  2385  004E96  6FCC               	movwf	main@iniciado& (0+255),b
  2386  004E98  EF2D  F027         	goto	l11020
  2387  004E9C  EF07  F000         	goto	start
  2388  004EA0                     __end_of_main:
  2389                           	opt callstack 0
  2390                           
  2391 ;; *************** function _visualizarPasosRealizados *****************
  2392 ;; Defined at:
  2393 ;;		line 195 in file "main.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  numMovimient    2  155[BANK0 ] unsigned int 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2407 ;;      Params:         0       2       0       0       0       0       0       0       0
  2408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2409 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2410 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2411 ;;Total ram usage:        4 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:   10
  2414 ;; This function calls:
  2415 ;;		_UART_printf
  2416 ;;		_sprintf
  2417 ;; This function is called by:
  2418 ;;		_main
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text1
  2423  004C12                     __ptext1:
  2424                           	opt callstack 0
  2425  004C12                     _visualizarPasosRealizados:
  2426                           	opt callstack 20
  2427  004C12                     
  2428                           ;main.c: 197:     switch (mouse.curr_state) {
  2429  004C12  EF2B  F026         	goto	l10652
  2430  004C16                     l10642:
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;main.c: 199:             UART_printf("Enfrente\n");
  2434  004C16  0ED2               	movlw	low STR_7
  2435  004C18  6E07               	movwf	UART_printf@cadena^0,c
  2436  004C1A  0E7F               	movlw	high STR_7
  2437  004C1C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2438  004C1E  ECDA  F028         	call	_UART_printf	;wreg free
  2439                           
  2440                           ;main.c: 200:             break;
  2441  004C22  EF4A  F026         	goto	l10654
  2442  004C26                     l10644:
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;main.c: 203:             UART_printf("Izquierda\n");
  2446  004C26  0EC7               	movlw	low STR_8
  2447  004C28  6E07               	movwf	UART_printf@cadena^0,c
  2448  004C2A  0E7F               	movlw	high STR_8
  2449  004C2C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2450  004C2E  ECDA  F028         	call	_UART_printf	;wreg free
  2451                           
  2452                           ;main.c: 204:             break;
  2453  004C32  EF4A  F026         	goto	l10654
  2454  004C36                     l10646:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;main.c: 207:             UART_printf("Derecha\n");
  2458  004C36  0EDC               	movlw	low STR_9
  2459  004C38  6E07               	movwf	UART_printf@cadena^0,c
  2460  004C3A  0E7F               	movlw	high STR_9
  2461  004C3C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2462  004C3E  ECDA  F028         	call	_UART_printf	;wreg free
  2463                           
  2464                           ;main.c: 208:             break;
  2465  004C42  EF4A  F026         	goto	l10654
  2466  004C46                     l10648:
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;main.c: 211:             UART_printf("Alto\n");
  2470  004C46  0EE5               	movlw	low STR_10
  2471  004C48  6E07               	movwf	UART_printf@cadena^0,c
  2472  004C4A  0E7F               	movlw	high STR_10
  2473  004C4C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2474  004C4E  ECDA  F028         	call	_UART_printf	;wreg free
  2475                           
  2476                           ;main.c: 212:             break;
  2477  004C52  EF4A  F026         	goto	l10654
  2478  004C56                     l10652:
  2479  004C56  0101               	movlb	1	; () banked
  2480  004C58  5136               	movf	_mouse& (0+255),w,b
  2481  004C5A  0100               	movlb	0	; () banked
  2482  004C5C  6FFD               	movwf	??_visualizarPasosRealizados& (0+255),b
  2483  004C5E  6BFE               	clrf	(??_visualizarPasosRealizados+1)& (0+255),b
  2484                           
  2485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2486                           ; Switch size 1, requested type "simple"
  2487                           ; Number of cases is 1, Range of values is 0 to 0
  2488                           ; switch strategies available:
  2489                           ; Name         Instructions Cycles
  2490                           ; simple_byte            4     3 (average)
  2491                           ;	Chosen strategy is simple_byte
  2492  004C60  51FE               	movf	(??_visualizarPasosRealizados+1)& (0+255),w,b
  2493  004C62  0A00               	xorlw	0	; case 0
  2494  004C64  B4D8               	btfsc	status,2,c
  2495  004C66  EF37  F026         	goto	l11378
  2496  004C6A  EF4A  F026         	goto	l10654
  2497  004C6E                     l11378:
  2498                           
  2499                           ; BSR set to: 0
  2500                           ; Switch size 1, requested type "simple"
  2501                           ; Number of cases is 4, Range of values is 1 to 4
  2502                           ; switch strategies available:
  2503                           ; Name         Instructions Cycles
  2504                           ; simple_byte           13     7 (average)
  2505                           ;	Chosen strategy is simple_byte
  2506  004C6E  51FD               	movf	??_visualizarPasosRealizados& (0+255),w,b
  2507  004C70  0A01               	xorlw	1	; case 1
  2508  004C72  B4D8               	btfsc	status,2,c
  2509  004C74  EF0B  F026         	goto	l10642
  2510  004C78  0A03               	xorlw	3	; case 2
  2511  004C7A  B4D8               	btfsc	status,2,c
  2512  004C7C  EF13  F026         	goto	l10644
  2513  004C80  0A01               	xorlw	1	; case 3
  2514  004C82  B4D8               	btfsc	status,2,c
  2515  004C84  EF1B  F026         	goto	l10646
  2516  004C88  0A07               	xorlw	7	; case 4
  2517  004C8A  B4D8               	btfsc	status,2,c
  2518  004C8C  EF23  F026         	goto	l10648
  2519  004C90  EF4A  F026         	goto	l10654
  2520  004C94                     l10654:
  2521                           
  2522                           ;main.c: 215:     sprintf(buffer, "\rMovimientos Realizados = %d\r\n\n", numMovimientos)
      +                          ;
  2523  004C94  0E92               	movlw	low _buffer
  2524  004C96  0100               	movlb	0	; () banked
  2525  004C98  6FE7               	movwf	sprintf@s& (0+255),b
  2526  004C9A  0E01               	movlw	high _buffer
  2527  004C9C  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  2528  004C9E  0ECA               	movlw	low STR_11
  2529  004CA0  6FE9               	movwf	sprintf@fmt& (0+255),b
  2530  004CA2  0E7E               	movlw	high STR_11
  2531  004CA4  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  2532  004CA6  C0FB  F0EB         	movff	visualizarPasosRealizados@numMovimientos,?_sprintf+4
  2533  004CAA  C0FC  F0EC         	movff	visualizarPasosRealizados@numMovimientos+1,?_sprintf+5
  2534  004CAE  ECE4  F029         	call	_sprintf	;wreg free
  2535  004CB2                     
  2536                           ;main.c: 216:     UART_printf(buffer);
  2537  004CB2  0E92               	movlw	low _buffer
  2538  004CB4  6E07               	movwf	UART_printf@cadena^0,c
  2539  004CB6  0E01               	movlw	high _buffer
  2540  004CB8  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2541  004CBA  ECDA  F028         	call	_UART_printf	;wreg free
  2542  004CBE  0012               	return		;funcret
  2543  004CC0                     __end_of_visualizarPasosRealizados:
  2544                           	opt callstack 0
  2545                           
  2546 ;; *************** function _inicializarComportamientoBasico *****************
  2547 ;; Defined at:
  2548 ;;		line 234 in file "main.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    6
  2569 ;; This function calls:
  2570 ;;		_dameDistancia
  2571 ;;		_velocidadEstandar
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text2
  2578  00550C                     __ptext2:
  2579                           	opt callstack 0
  2580  00550C                     _inicializarComportamientoBasico:
  2581                           	opt callstack 24
  2582  00550C                     
  2583                           ;main.c: 236:     mouse.curr_state = ENFRENTE;
  2584  00550C  0E01               	movlw	1
  2585  00550E  0101               	movlb	1	; () banked
  2586  005510  6F36               	movwf	_mouse& (0+255),b
  2587  005512                     
  2588                           ; BSR set to: 1
  2589                           ;main.c: 238:     oldSensorDerecha = dameDistancia(DERECHA);
  2590  005512  0E03               	movlw	3
  2591  005514  EC93  F01F         	call	_dameDistancia
  2592  005518  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
  2593  00551C  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  2594  005520  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  2595  005524  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  2596  005528                     
  2597                           ;main.c: 239:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  2598  005528  0E02               	movlw	2
  2599  00552A  EC93  F01F         	call	_dameDistancia
  2600  00552E  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  2601  005532  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  2602  005536  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  2603  00553A  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  2604  00553E                     
  2605                           ;main.c: 240:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  2606  00553E  0E01               	movlw	1
  2607  005540  EC93  F01F         	call	_dameDistancia
  2608  005544  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  2609  005548  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  2610  00554C  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  2611  005550  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  2612  005554                     
  2613                           ;main.c: 242:     velocidadEstandar();
  2614  005554  EC25  F02C         	call	_velocidadEstandar	;wreg free
  2615  005558  0012               	return		;funcret
  2616  00555A                     __end_of_inicializarComportamientoBasico:
  2617                           	opt callstack 0
  2618                           
  2619 ;; *************** function _configurarAdc *****************
  2620 ;; Defined at:
  2621 ;;		line 7 in file "./adc.h"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, status,2
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2635 ;;      Params:         0       0       0       0       0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2638 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2639 ;;Total ram usage:        0 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    2
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_main
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text3
  2650  005970                     __ptext3:
  2651                           	opt callstack 0
  2652  005970                     _configurarAdc:
  2653                           	opt callstack 28
  2654  005970                     
  2655                           ;./adc.h: 8:     ADCON1 = 0b00001110;
  2656  005970  0E0E               	movlw	14
  2657  005972  6EC1               	movwf	193,c	;volatile
  2658                           
  2659                           ;./adc.h: 9:     ADCON2 = 0b10100101;
  2660  005974  0EA5               	movlw	165
  2661  005976  6EC0               	movwf	192,c	;volatile
  2662  005978  0012               	return		;funcret
  2663  00597A                     __end_of_configurarAdc:
  2664                           	opt callstack 0
  2665                           
  2666 ;; *************** function _configPwm *****************
  2667 ;; Defined at:
  2668 ;;		line 47 in file "./pwm.h"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  channel         1    wreg     unsigned char 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  channel         1    7[COMRAM] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2682 ;;      Params:         0       0       0       0       0       0       0       0       0
  2683 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2684 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2685 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2686 ;;Total ram usage:        3 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    2
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_main
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text4
  2697  00546C                     __ptext4:
  2698                           	opt callstack 0
  2699  00546C                     _configPwm:
  2700                           	opt callstack 28
  2701                           
  2702                           ;incstack = 0
  2703                           ;configPwm@channel stored from wreg
  2704  00546C  6E08               	movwf	configPwm@channel^0,c
  2705  00546E                     
  2706                           ;./pwm.h: 56:         T2CKPS0 = 1;
  2707  00546E  80CA               	bsf	4042,0,c	;volatile
  2708                           
  2709                           ;./pwm.h: 57:         T2CKPS1 = 1;
  2710  005470  82CA               	bsf	4042,1,c	;volatile
  2711  005472                     
  2712                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
  2713  005472  0E7C               	movlw	124
  2714  005474  6ECB               	movwf	203,c	;volatile
  2715                           
  2716                           ;./pwm.h: 63:     switch (channel) {
  2717  005476  EF47  F02A         	goto	l10608
  2718  00547A                     l159:
  2719                           
  2720                           ;./pwm.h: 66:             TRISC2 = 0;
  2721  00547A  9494               	bcf	3988,2,c	;volatile
  2722                           
  2723                           ;./pwm.h: 67:             CCP1M3 = 1;
  2724  00547C  86BD               	bsf	4029,3,c	;volatile
  2725                           
  2726                           ;./pwm.h: 68:             CCP1M2 = 1;
  2727  00547E  84BD               	bsf	4029,2,c	;volatile
  2728                           
  2729                           ;./pwm.h: 71:             break;
  2730  005480  EF5C  F02A         	goto	l160
  2731  005484                     l161:
  2732                           
  2733                           ;./pwm.h: 74:             TRISC1 = 0;
  2734  005484  9294               	bcf	3988,1,c	;volatile
  2735                           
  2736                           ;./pwm.h: 75:             CCP2M3 = 1;
  2737  005486  86BA               	bsf	4026,3,c	;volatile
  2738                           
  2739                           ;./pwm.h: 76:             CCP2M2 = 1;
  2740  005488  84BA               	bsf	4026,2,c	;volatile
  2741                           
  2742                           ;./pwm.h: 77:             break;
  2743  00548A  EF5C  F02A         	goto	l160
  2744  00548E                     l10608:
  2745  00548E  5008               	movf	configPwm@channel^0,w,c
  2746  005490  6E06               	movwf	??_configPwm^0,c
  2747  005492  6A07               	clrf	(??_configPwm+1)^0,c
  2748                           
  2749                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2750                           ; Switch size 1, requested type "simple"
  2751                           ; Number of cases is 1, Range of values is 0 to 0
  2752                           ; switch strategies available:
  2753                           ; Name         Instructions Cycles
  2754                           ; simple_byte            4     3 (average)
  2755                           ;	Chosen strategy is simple_byte
  2756  005494  5007               	movf	(??_configPwm+1)^0,w,c
  2757  005496  0A00               	xorlw	0	; case 0
  2758  005498  B4D8               	btfsc	status,2,c
  2759  00549A  EF51  F02A         	goto	l11380
  2760  00549E  EF5C  F02A         	goto	l160
  2761  0054A2                     l11380:
  2762                           
  2763                           ; Switch size 1, requested type "simple"
  2764                           ; Number of cases is 2, Range of values is 1 to 2
  2765                           ; switch strategies available:
  2766                           ; Name         Instructions Cycles
  2767                           ; simple_byte            7     4 (average)
  2768                           ;	Chosen strategy is simple_byte
  2769  0054A2  5006               	movf	??_configPwm^0,w,c
  2770  0054A4  0A01               	xorlw	1	; case 1
  2771  0054A6  B4D8               	btfsc	status,2,c
  2772  0054A8  EF3D  F02A         	goto	l159
  2773  0054AC  0A03               	xorlw	3	; case 2
  2774  0054AE  B4D8               	btfsc	status,2,c
  2775  0054B0  EF42  F02A         	goto	l161
  2776  0054B4  EF5C  F02A         	goto	l160
  2777  0054B8                     l160:
  2778                           
  2779                           ;./pwm.h: 81:     TMR2ON = 1;
  2780  0054B8  84CA               	bsf	4042,2,c	;volatile
  2781  0054BA  0012               	return		;funcret
  2782  0054BC                     __end_of_configPwm:
  2783                           	opt callstack 0
  2784                           
  2785 ;; *************** function _comportamientoBasico *****************
  2786 ;; Defined at:
  2787 ;;		line 246 in file "main.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  direccionEle    1  158[BANK0 ] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0
  2802 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2803 ;;      Temps:          0       0       0       2       0       0       0       0       0
  2804 ;;      Totals:         0       1       0       2       0       0       0       0       0
  2805 ;;Total ram usage:        3 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:   11
  2808 ;; This function calls:
  2809 ;;		_PID
  2810 ;;		_UART_printf
  2811 ;;		_alinearDespuesCallejon
  2812 ;;		_decidirDireccion
  2813 ;;		_forzarParoAuto
  2814 ;;		_leerSensores
  2815 ;;		_limpiarMovimientos
  2816 ;;		_moverCarrito
  2817 ;;		_probarMapeoDireccionCruces
  2818 ;;		_regresarAlCruce
  2819 ;;		_velocidadBaja
  2820 ;;		_velocidadEstandar
  2821 ;; This function is called by:
  2822 ;;		_main
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text5
  2827  0021AE                     __ptext5:
  2828                           	opt callstack 0
  2829  0021AE                     _comportamientoBasico:
  2830                           	opt callstack 19
  2831  0021AE                     
  2832                           ;main.c: 248:     static T_UBYTE espejearCarroY = 0;;main.c: 249:     static T_UBYTE car
      +                          roEspejeado = 0;;main.c: 250:     static T_UBYTE movimientosRealizados[200];;main.c: 251
      +                          :     static T_UBYTE caminoFinal[20];;main.c: 252:     static T_UINT numMovimientos = 0;
      +                          ;main.c: 253:     static T_UBYTE mapear = 0;;main.c: 254:     static T_UBYTE cruceDetect
      +                          ado = 0;;main.c: 255:     static T_UBYTE caminosRecorrer[3];;main.c: 256:     static T_U
      +                          BYTE investigandoCruce = 0;;main.c: 257:     static T_UBYTE posicionInvCruce = 0;
  2833  0021AE  0E00               	movlw	0
  2834  0021B0  0100               	movlb	0	; () banked
  2835  0021B2  6FFE               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  2836  0021B4                     
  2837                           ; BSR set to: 0
  2838                           ;main.c: 265:     moverCarrito(espejearCarroY, &carroEspejeado, &avanceRectoLargo);
  2839  0021B4  0EE5               	movlw	low comportamientoBasico@carroEspejeado
  2840  0021B6  6F88               	movwf	moverCarrito@carroEspejeado& (0+255),b
  2841  0021B8  0E01               	movlw	high comportamientoBasico@carroEspejeado
  2842  0021BA  6F89               	movwf	(moverCarrito@carroEspejeado+1)& (0+255),b
  2843  0021BC  0EDD               	movlw	low comportamientoBasico@avanceRectoLargo
  2844  0021BE  6F8A               	movwf	moverCarrito@avanceRectoLargo& (0+255),b
  2845  0021C0  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  2846  0021C2  6F8B               	movwf	(moverCarrito@avanceRectoLargo+1)& (0+255),b
  2847  0021C4  0101               	movlb	1	; () banked
  2848  0021C6  5138               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  2849  0021C8  ECCA  F020         	call	_moverCarrito
  2850  0021CC                     
  2851                           ;main.c: 267:     if (!llegoDestino) {
  2852  0021CC  0100               	movlb	0	; () banked
  2853  0021CE  51FF               	movf	_llegoDestino& (0+255),w,b
  2854  0021D0  A4D8               	btfss	status,2,c
  2855  0021D2  EFED  F010         	goto	u11891
  2856  0021D6  EFEF  F010         	goto	u11890
  2857  0021DA                     u11891:
  2858  0021DA  EFA9  F012         	goto	l10810
  2859  0021DE                     u11890:
  2860  0021DE                     
  2861                           ; BSR set to: 0
  2862                           ;main.c: 269:         if (!caminoEncontrado) {
  2863  0021DE  5059               	movf	_caminoEncontrado^0,w,c
  2864  0021E0  A4D8               	btfss	status,2,c
  2865  0021E2  EFF5  F010         	goto	u11901
  2866  0021E6  EFF7  F010         	goto	u11900
  2867  0021EA                     u11901:
  2868  0021EA  EF22  F011         	goto	l10694
  2869  0021EE                     u11900:
  2870  0021EE                     
  2871                           ; BSR set to: 0
  2872                           ;main.c: 273:             if (mapear)
  2873  0021EE  0101               	movlb	1	; () banked
  2874  0021F0  51E4               	movf	comportamientoBasico@mapear& (0+255),w,b
  2875  0021F2  B4D8               	btfsc	status,2,c
  2876  0021F4  EFFE  F010         	goto	u11911
  2877  0021F8  EF00  F011         	goto	u11910
  2878  0021FC                     u11911:
  2879  0021FC  EF22  F011         	goto	l10694
  2880  002200                     u11910:
  2881  002200                     
  2882                           ; BSR set to: 1
  2883                           ;main.c: 274:             {;main.c: 275:                 if (numMovimientos < 200)
  2884  002200  51DC               	movf	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2885  002202  E107               	bnz	u11921
  2886  002204  0EC8               	movlw	200
  2887  002206  5DDB               	subwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2888  002208  B0D8               	btfsc	status,0,c
  2889  00220A  EF09  F011         	goto	u11921
  2890  00220E  EF0B  F011         	goto	u11920
  2891  002212                     u11921:
  2892  002212  EF17  F011         	goto	l10688
  2893  002216                     u11920:
  2894  002216                     
  2895                           ; BSR set to: 1
  2896                           ;main.c: 276:                     movimientosRealizados[numMovimientos++] = mouse.curr_s
      +                          tate;
  2897  002216  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  2898  002218  25DB               	addwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2899  00221A  6ED9               	movwf	fsr2l,c
  2900  00221C  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  2901  00221E  21DC               	addwfc	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2902  002220  6EDA               	movwf	fsr2h,c
  2903  002222  C136  FFDF         	movff	_mouse,indf2
  2904  002226                     
  2905                           ; BSR set to: 1
  2906  002226  4BDB               	infsnz	comportamientoBasico@numMovimientos& (0+255),f,b
  2907  002228  2BDC               	incf	(comportamientoBasico@numMovimientos+1)& (0+255),f,b
  2908  00222A  EF22  F011         	goto	l10694
  2909  00222E                     l10688:
  2910                           
  2911                           ; BSR set to: 1
  2912                           ;main.c: 278:                     UART_printf("\n\nOVERFLOW en el mapeo de pasos Realiza
      +                          dos para cruce\n\n");
  2913  00222E  0E7B               	movlw	low STR_12
  2914  002230  6E07               	movwf	UART_printf@cadena^0,c
  2915  002232  0E7D               	movlw	high STR_12
  2916  002234  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2917  002236  ECDA  F028         	call	_UART_printf	;wreg free
  2918  00223A                     
  2919                           ;main.c: 279:                     forzarParoAuto();
  2920  00223A  ECA0  F02C         	call	_forzarParoAuto	;wreg free
  2921  00223E                     
  2922                           ;main.c: 280:                     pausa = 1;
  2923  00223E  0E01               	movlw	1
  2924  002240  0101               	movlb	1	; () banked
  2925  002242  6FFB               	movwf	_pausa& (0+255),b
  2926  002244                     l10694:
  2927                           
  2928                           ;main.c: 308:         leerSensores();
  2929  002244  EC23  F01E         	call	_leerSensores	;wreg free
  2930  002248                     
  2931                           ;main.c: 310:         direccionElegida = decidirDireccion(caminosRecorrer, &investigando
      +                          Cruce,
  2932  002248  0ED8               	movlw	low comportamientoBasico@caminosRecorrer
  2933  00224A  0101               	movlb	1	; () banked
  2934  00224C  6FE6               	movwf	decidirDireccion@caminosRecorrer& (0+255),b
  2935  00224E  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  2936  002250  6FE7               	movwf	(decidirDireccion@caminosRecorrer+1)& (0+255),b
  2937  002252  0EE2               	movlw	low comportamientoBasico@investigandoCruce
  2938  002254  6FE8               	movwf	decidirDireccion@investigandoCruce& (0+255),b
  2939  002256  0E01               	movlw	high comportamientoBasico@investigandoCruce
  2940  002258  6FE9               	movwf	(decidirDireccion@investigandoCruce+1)& (0+255),b
  2941  00225A  0EE1               	movlw	low comportamientoBasico@posicionInvCruce
  2942  00225C  6FEA               	movwf	decidirDireccion@posicionInvCruce& (0+255),b
  2943  00225E  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  2944  002260  6FEB               	movwf	(decidirDireccion@posicionInvCruce+1)& (0+255),b
  2945  002262  0EE0               	movlw	low comportamientoBasico@contCaminosRecorridos
  2946  002264  6FEC               	movwf	decidirDireccion@contCaminosRecorridos& (0+255),b
  2947  002266  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  2948  002268  6FED               	movwf	(decidirDireccion@contCaminosRecorridos+1)& (0+255),b
  2949  00226A  0EDF               	movlw	low comportamientoBasico@caminoActual
  2950  00226C  6FEE               	movwf	decidirDireccion@caminoActual& (0+255),b
  2951  00226E  0E01               	movlw	high comportamientoBasico@caminoActual
  2952  002270  6FEF               	movwf	(decidirDireccion@caminoActual+1)& (0+255),b
  2953  002272  0EDE               	movlw	low comportamientoBasico@cambioOrientacionCarro
  2954  002274  6FF0               	movwf	decidirDireccion@cambioOrientacionCarro& (0+255),b
  2955  002276  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  2956  002278  6FF1               	movwf	(decidirDireccion@cambioOrientacionCarro+1)& (0+255),b
  2957  00227A  0EE4               	movlw	low comportamientoBasico@mapear
  2958  00227C  6FF2               	movwf	decidirDireccion@mapear& (0+255),b
  2959  00227E  0E01               	movlw	high comportamientoBasico@mapear
  2960  002280  6FF3               	movwf	(decidirDireccion@mapear+1)& (0+255),b
  2961  002282  0EE3               	movlw	low comportamientoBasico@cruceDetectado
  2962  002284  6FF4               	movwf	decidirDireccion@cruceDetectado& (0+255),b
  2963  002286  0E01               	movlw	high comportamientoBasico@cruceDetectado
  2964  002288  6FF5               	movwf	(decidirDireccion@cruceDetectado+1)& (0+255),b
  2965  00228A  0EDD               	movlw	low comportamientoBasico@avanceRectoLargo
  2966  00228C  6FF6               	movwf	decidirDireccion@avanceRectoLargo& (0+255),b
  2967  00228E  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  2968  002290  6FF7               	movwf	(decidirDireccion@avanceRectoLargo+1)& (0+255),b
  2969  002292  0EC4               	movlw	low comportamientoBasico@caminoFinal
  2970  002294  6FF8               	movwf	decidirDireccion@caminoFinal& (0+255),b
  2971  002296  0E01               	movlw	high comportamientoBasico@caminoFinal
  2972  002298  6FF9               	movwf	(decidirDireccion@caminoFinal+1)& (0+255),b
  2973  00229A  ECEC  F005         	call	_decidirDireccion	;wreg free
  2974  00229E  0100               	movlb	0	; () banked
  2975  0022A0  6FFE               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  2976  0022A2  EFA9  F012         	goto	l10810
  2977  0022A6                     l10698:
  2978                           
  2979                           ; BSR set to: 2
  2980                           ;main.c: 324:                     mapear = 0;
  2981  0022A6  0E00               	movlw	0
  2982  0022A8  0101               	movlb	1	; () banked
  2983  0022AA  6FE4               	movwf	comportamientoBasico@mapear& (0+255),b
  2984                           
  2985                           ;main.c: 325:                     espejearCarroY = 1;
  2986  0022AC  0E01               	movlw	1
  2987  0022AE  6F38               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  2988                           
  2989                           ;main.c: 326:                     mouse.Next_state = IZQUIERDA;
  2990  0022B0  0E02               	movlw	2
  2991  0022B2  6F37               	movwf	(_mouse+1)& (0+255),b
  2992                           
  2993                           ;main.c: 327:                     break;
  2994  0022B4  EFC8  F012         	goto	l380
  2995  0022B8                     l10700:
  2996                           
  2997                           ; BSR set to: 2
  2998                           ;main.c: 331:                     if (!paredEnfrente && !investigandoCruce)
  2999  0022B8  0101               	movlb	1	; () banked
  3000  0022BA  513B               	movf	_paredEnfrente& (0+255),w,b
  3001  0022BC  A4D8               	btfss	status,2,c
  3002  0022BE  EF63  F011         	goto	u11931
  3003  0022C2  EF65  F011         	goto	u11930
  3004  0022C6                     u11931:
  3005  0022C6  EF71  F011         	goto	l10706
  3006  0022CA                     u11930:
  3007  0022CA                     
  3008                           ; BSR set to: 1
  3009  0022CA  51E2               	movf	comportamientoBasico@investigandoCruce& (0+255),w,b
  3010  0022CC  A4D8               	btfss	status,2,c
  3011  0022CE  EF6B  F011         	goto	u11941
  3012  0022D2  EF6D  F011         	goto	u11940
  3013  0022D6                     u11941:
  3014  0022D6  EF71  F011         	goto	l10706
  3015  0022DA                     u11940:
  3016  0022DA                     
  3017                           ; BSR set to: 1
  3018                           ;main.c: 332:                         velocidadBaja();
  3019  0022DA  EC38  F02C         	call	_velocidadBaja	;wreg free
  3020  0022DE  EF73  F011         	goto	l10708
  3021  0022E2                     l10706:
  3022                           
  3023                           ; BSR set to: 1
  3024                           ;main.c: 334:                         PID();
  3025  0022E2  ECE3  F017         	call	_PID	;wreg free
  3026  0022E6                     l10708:
  3027                           
  3028                           ;main.c: 336:                     mouse.Next_state = ENFRENTE;
  3029  0022E6  0E01               	movlw	1
  3030  0022E8  0101               	movlb	1	; () banked
  3031  0022EA  6F37               	movwf	(_mouse+1)& (0+255),b
  3032                           
  3033                           ;main.c: 337:                     break;
  3034  0022EC  EFC8  F012         	goto	l380
  3035  0022F0                     l10710:
  3036                           
  3037                           ; BSR set to: 2
  3038                           ;main.c: 340:                     velocidadEstandar();
  3039  0022F0  EC25  F02C         	call	_velocidadEstandar	;wreg free
  3040  0022F4                     l10712:
  3041                           
  3042                           ;main.c: 341:                     mouse.Next_state = IZQUIERDA;
  3043  0022F4  0E02               	movlw	2
  3044  0022F6  0101               	movlb	1	; () banked
  3045  0022F8  6F37               	movwf	(_mouse+1)& (0+255),b
  3046                           
  3047                           ;main.c: 342:                     break;
  3048  0022FA  EFC8  F012         	goto	l380
  3049  0022FE                     l10714:
  3050                           
  3051                           ; BSR set to: 2
  3052                           ;main.c: 345:                     velocidadEstandar();
  3053  0022FE  EC25  F02C         	call	_velocidadEstandar	;wreg free
  3054  002302                     
  3055                           ;main.c: 346:                     mouse.Next_state = DERECHA;
  3056  002302  0E03               	movlw	3
  3057  002304  0101               	movlb	1	; () banked
  3058  002306  6F37               	movwf	(_mouse+1)& (0+255),b
  3059                           
  3060                           ;main.c: 347:                     break;
  3061  002308  EFC8  F012         	goto	l380
  3062  00230C                     l10718:
  3063                           
  3064                           ;main.c: 351:                     mouse.Next_state = ALTO;
  3065  00230C  0E04               	movlw	4
  3066  00230E  0101               	movlb	1	; () banked
  3067  002310  6F37               	movwf	(_mouse+1)& (0+255),b
  3068                           
  3069                           ;main.c: 352:                     break;
  3070  002312  EFC8  F012         	goto	l380
  3071  002316                     l10722:
  3072                           
  3073                           ; BSR set to: 2
  3074  002316  0100               	movlb	0	; () banked
  3075  002318  51FE               	movf	comportamientoBasico@direccionElegida& (0+255),w,b
  3076  00231A  0102               	movlb	2	; () banked
  3077  00231C  6FC8               	movwf	??_comportamientoBasico& (0+255),b
  3078  00231E  6BC9               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3079                           
  3080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3081                           ; Switch size 1, requested type "simple"
  3082                           ; Number of cases is 1, Range of values is 0 to 0
  3083                           ; switch strategies available:
  3084                           ; Name         Instructions Cycles
  3085                           ; simple_byte            4     3 (average)
  3086                           ;	Chosen strategy is simple_byte
  3087  002320  51C9               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3088  002322  0A00               	xorlw	0	; case 0
  3089  002324  B4D8               	btfsc	status,2,c
  3090  002326  EF97  F011         	goto	l11382
  3091  00232A  EFC8  F012         	goto	l380
  3092  00232E                     l11382:
  3093                           
  3094                           ; BSR set to: 2
  3095                           ; Switch size 1, requested type "simple"
  3096                           ; Number of cases is 5, Range of values is 0 to 4
  3097                           ; switch strategies available:
  3098                           ; Name         Instructions Cycles
  3099                           ; simple_byte           16     9 (average)
  3100                           ;	Chosen strategy is simple_byte
  3101  00232E  51C8               	movf	??_comportamientoBasico& (0+255),w,b
  3102  002330  0A00               	xorlw	0	; case 0
  3103  002332  B4D8               	btfsc	status,2,c
  3104  002334  EF53  F011         	goto	l10698
  3105  002338  0A01               	xorlw	1	; case 1
  3106  00233A  B4D8               	btfsc	status,2,c
  3107  00233C  EF5C  F011         	goto	l10700
  3108  002340  0A03               	xorlw	3	; case 2
  3109  002342  B4D8               	btfsc	status,2,c
  3110  002344  EF78  F011         	goto	l10710
  3111  002348  0A01               	xorlw	1	; case 3
  3112  00234A  B4D8               	btfsc	status,2,c
  3113  00234C  EF7F  F011         	goto	l10714
  3114  002350  0A07               	xorlw	7	; case 4
  3115  002352  B4D8               	btfsc	status,2,c
  3116  002354  EF86  F011         	goto	l10718
  3117  002358  EFC8  F012         	goto	l380
  3118  00235C                     l10724:
  3119                           
  3120                           ; BSR set to: 2
  3121                           ;main.c: 360:             if (carroEspejeado && espejearCarroY && !llegoDestino) {
  3122  00235C  0101               	movlb	1	; () banked
  3123  00235E  51E5               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3124  002360  B4D8               	btfsc	status,2,c
  3125  002362  EFB5  F011         	goto	u11951
  3126  002366  EFB7  F011         	goto	u11950
  3127  00236A                     u11951:
  3128  00236A  EFEC  F011         	goto	l10746
  3129  00236E                     u11950:
  3130  00236E                     
  3131                           ; BSR set to: 1
  3132  00236E  5138               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3133  002370  B4D8               	btfsc	status,2,c
  3134  002372  EFBD  F011         	goto	u11961
  3135  002376  EFBF  F011         	goto	u11960
  3136  00237A                     u11961:
  3137  00237A  EFEC  F011         	goto	l10746
  3138  00237E                     u11960:
  3139  00237E                     
  3140                           ; BSR set to: 1
  3141  00237E  0100               	movlb	0	; () banked
  3142  002380  51FF               	movf	_llegoDestino& (0+255),w,b
  3143  002382  A4D8               	btfss	status,2,c
  3144  002384  EFC6  F011         	goto	u11971
  3145  002388  EFC8  F011         	goto	u11970
  3146  00238C                     u11971:
  3147  00238C  EFEC  F011         	goto	l10746
  3148  002390                     u11970:
  3149  002390                     
  3150                           ; BSR set to: 0
  3151                           ;main.c: 362:                 espejearCarroY = 0;
  3152  002390  0E00               	movlw	0
  3153  002392  0101               	movlb	1	; () banked
  3154  002394  6F38               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3155                           
  3156                           ;main.c: 363:                 carroEspejeado = 0;
  3157  002396  0E00               	movlw	0
  3158  002398  6FE5               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  3159  00239A                     
  3160                           ; BSR set to: 1
  3161                           ;main.c: 365:                 alinearDespuesCallejon();
  3162  00239A  EC51  F023         	call	_alinearDespuesCallejon	;wreg free
  3163  00239E                     
  3164                           ;main.c: 366:                 regresarAlCruce(movimientosRealizados, numMovimientos);
  3165  00239E  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3166  0023A0  0100               	movlb	0	; () banked
  3167  0023A2  6F9A               	movwf	regresarAlCruce@movimientos& (0+255),b
  3168  0023A4  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3169  0023A6  6F9B               	movwf	(regresarAlCruce@movimientos+1)& (0+255),b
  3170  0023A8  C1DB  F09C         	movff	comportamientoBasico@numMovimientos,regresarAlCruce@numMovimientos
  3171  0023AC  C1DC  F09D         	movff	comportamientoBasico@numMovimientos+1,regresarAlCruce@numMovimientos+1
  3172  0023B0  EC58  F025         	call	_regresarAlCruce	;wreg free
  3173  0023B4                     
  3174                           ;main.c: 367:                 limpiarMovimientos(movimientosRealizados, &numMovimientos)
      +                          ;
  3175  0023B4  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3176  0023B6  6E06               	movwf	limpiarMovimientos@movimientos^0,c
  3177  0023B8  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3178  0023BA  6E07               	movwf	(limpiarMovimientos@movimientos+1)^0,c
  3179  0023BC  0EDB               	movlw	low comportamientoBasico@numMovimientos
  3180  0023BE  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
  3181  0023C0  0E01               	movlw	high comportamientoBasico@numMovimientos
  3182  0023C2  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
  3183  0023C4  EC5E  F02A         	call	_limpiarMovimientos	;wreg free
  3184  0023C8                     
  3185                           ;main.c: 369:                 cruceDetectado = 0;
  3186  0023C8  0E00               	movlw	0
  3187  0023CA  0101               	movlb	1	; () banked
  3188  0023CC  6FE3               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  3189  0023CE                     
  3190                           ; BSR set to: 1
  3191                           ;main.c: 370:                 posicionInvCruce = 1;
  3192  0023CE  0E01               	movlw	1
  3193  0023D0  6FE1               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  3194  0023D2                     
  3195                           ; BSR set to: 1
  3196                           ;main.c: 371:                 contCaminosRecorridos++;
  3197  0023D2  2BE0               	incf	comportamientoBasico@contCaminosRecorridos& (0+255),f,b
  3198  0023D4  EF86  F011         	goto	l10718
  3199  0023D8                     l10746:
  3200  0023D8  0101               	movlb	1	; () banked
  3201  0023DA  5138               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3202  0023DC  B4D8               	btfsc	status,2,c
  3203  0023DE  EFF3  F011         	goto	u11981
  3204  0023E2  EFF5  F011         	goto	u11980
  3205  0023E6                     u11981:
  3206  0023E6  EF73  F011         	goto	l10708
  3207  0023EA                     u11980:
  3208  0023EA                     
  3209                           ; BSR set to: 1
  3210  0023EA  51E5               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3211  0023EC  B4D8               	btfsc	status,2,c
  3212  0023EE  EFFB  F011         	goto	u11991
  3213  0023F2  EFFD  F011         	goto	u11990
  3214  0023F6                     u11991:
  3215  0023F6  EF73  F011         	goto	l10708
  3216  0023FA                     u11990:
  3217  0023FA                     
  3218                           ; BSR set to: 1
  3219  0023FA  0100               	movlb	0	; () banked
  3220  0023FC  51FF               	movf	_llegoDestino& (0+255),w,b
  3221  0023FE  B4D8               	btfsc	status,2,c
  3222  002400  EF04  F012         	goto	u12001
  3223  002404  EF06  F012         	goto	u12000
  3224  002408                     u12001:
  3225  002408  EF73  F011         	goto	l10708
  3226  00240C                     u12000:
  3227  00240C                     
  3228                           ; BSR set to: 0
  3229                           ;main.c: 374:                 alinearDespuesCallejon();
  3230  00240C  EC51  F023         	call	_alinearDespuesCallejon	;wreg free
  3231  002410                     
  3232                           ;main.c: 375:                 espejearCarroY = 0;
  3233  002410  0E00               	movlw	0
  3234  002412  0101               	movlb	1	; () banked
  3235  002414  6F38               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3236  002416  EF86  F011         	goto	l10718
  3237  00241A                     l10762:
  3238                           
  3239                           ; BSR set to: 2
  3240                           ;main.c: 390:             if (llegoDestino && carroEspejeado) {
  3241  00241A  0100               	movlb	0	; () banked
  3242  00241C  51FF               	movf	_llegoDestino& (0+255),w,b
  3243  00241E  B4D8               	btfsc	status,2,c
  3244  002420  EF14  F012         	goto	u12011
  3245  002424  EF16  F012         	goto	u12010
  3246  002428                     u12011:
  3247  002428  EF46  F012         	goto	l10786
  3248  00242C                     u12010:
  3249  00242C                     
  3250                           ; BSR set to: 0
  3251  00242C  0101               	movlb	1	; () banked
  3252  00242E  51E5               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3253  002430  B4D8               	btfsc	status,2,c
  3254  002432  EF1D  F012         	goto	u12021
  3255  002436  EF1F  F012         	goto	u12020
  3256  00243A                     u12021:
  3257  00243A  EF46  F012         	goto	l10786
  3258  00243E                     u12020:
  3259  00243E                     
  3260                           ; BSR set to: 1
  3261                           ;main.c: 392:                 carroEspejeado = 0;
  3262  00243E  0E00               	movlw	0
  3263  002440  6FE5               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  3264                           
  3265                           ;main.c: 393:                 llegoDestino = 0;
  3266  002442  0E00               	movlw	0
  3267  002444  0100               	movlb	0	; () banked
  3268  002446  6FFF               	movwf	_llegoDestino& (0+255),b
  3269                           
  3270                           ;main.c: 394:                 caminoEncontrado = 1;
  3271  002448  0E01               	movlw	1
  3272  00244A  6E59               	movwf	_caminoEncontrado^0,c
  3273  00244C                     
  3274                           ; BSR set to: 0
  3275                           ;main.c: 396:                 forzarParoAuto();
  3276  00244C  ECA0  F02C         	call	_forzarParoAuto	;wreg free
  3277  002450                     
  3278                           ;main.c: 397:                 pausa = 1;
  3279  002450  0E01               	movlw	1
  3280  002452  0101               	movlb	1	; () banked
  3281  002454  6FFB               	movwf	_pausa& (0+255),b
  3282  002456                     
  3283                           ; BSR set to: 1
  3284                           ;main.c: 399:                 if (ida) {
  3285  002456  51FA               	movf	_ida& (0+255),w,b
  3286  002458  B4D8               	btfsc	status,2,c
  3287  00245A  EF31  F012         	goto	u12031
  3288  00245E  EF33  F012         	goto	u12030
  3289  002462                     u12031:
  3290  002462  EF39  F012         	goto	l10778
  3291  002466                     u12030:
  3292  002466                     
  3293                           ; BSR set to: 1
  3294                           ;main.c: 400:                     crucesRecorridos = numMovimientosTotales;
  3295  002466  C141  F140         	movff	_numMovimientosTotales,_crucesRecorridos
  3296  00246A                     
  3297                           ; BSR set to: 1
  3298                           ;main.c: 401:                     ida = 0;
  3299  00246A  0E00               	movlw	0
  3300  00246C  6FFA               	movwf	_ida& (0+255),b
  3301                           
  3302                           ;main.c: 402:                 } else {
  3303  00246E  EF73  F011         	goto	l10708
  3304  002472                     l10778:
  3305                           
  3306                           ; BSR set to: 1
  3307                           ;main.c: 403:                     crucesRecorridos = 1;
  3308  002472  0E01               	movlw	1
  3309  002474  6F40               	movwf	_crucesRecorridos& (0+255),b
  3310  002476                     
  3311                           ; BSR set to: 1
  3312                           ;main.c: 404:                     UART_printf("\rSe regreso al punto de partida\r\n");
  3313  002476  0E65               	movlw	low STR_13
  3314  002478  6E07               	movwf	UART_printf@cadena^0,c
  3315  00247A  0E7E               	movlw	high STR_13
  3316  00247C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3317  00247E  ECDA  F028         	call	_UART_printf	;wreg free
  3318  002482                     
  3319                           ;main.c: 405:                     ida = 1;
  3320  002482  0E01               	movlw	1
  3321  002484  0101               	movlb	1	; () banked
  3322  002486  6FFA               	movwf	_ida& (0+255),b
  3323  002488  EF73  F011         	goto	l10708
  3324  00248C                     l10786:
  3325  00248C  0100               	movlb	0	; () banked
  3326  00248E  51FF               	movf	_llegoDestino& (0+255),w,b
  3327  002490  B4D8               	btfsc	status,2,c
  3328  002492  EF4D  F012         	goto	u12041
  3329  002496  EF4F  F012         	goto	u12040
  3330  00249A                     u12041:
  3331  00249A  EF90  F012         	goto	l10800
  3332  00249E                     u12040:
  3333  00249E                     
  3334                           ; BSR set to: 0
  3335  00249E  0101               	movlb	1	; () banked
  3336  0024A0  51E5               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3337  0024A2  A4D8               	btfss	status,2,c
  3338  0024A4  EF56  F012         	goto	u12051
  3339  0024A8  EF58  F012         	goto	u12050
  3340  0024AC                     u12051:
  3341  0024AC  EF90  F012         	goto	l10800
  3342  0024B0                     u12050:
  3343  0024B0                     
  3344                           ; BSR set to: 1
  3345                           ;main.c: 412:                 probarMapeoDireccionCruces(caminoFinal, caminoActual, &inv
      +                          estigandoCruce,
  3346  0024B0  0EC4               	movlw	low comportamientoBasico@caminoFinal
  3347  0024B2  6FE6               	movwf	probarMapeoDireccionCruces@caminoFinal& (0+255),b
  3348  0024B4  0E01               	movlw	high comportamientoBasico@caminoFinal
  3349  0024B6  6FE7               	movwf	(probarMapeoDireccionCruces@caminoFinal+1)& (0+255),b
  3350  0024B8  C1DF  F1E8         	movff	comportamientoBasico@caminoActual,probarMapeoDireccionCruces@caminoActual
  3351  0024BC  0EE2               	movlw	low comportamientoBasico@investigandoCruce
  3352  0024BE  6FE9               	movwf	probarMapeoDireccionCruces@investigandoCruce& (0+255),b
  3353  0024C0  0E01               	movlw	high comportamientoBasico@investigandoCruce
  3354  0024C2  6FEA               	movwf	(probarMapeoDireccionCruces@investigandoCruce+1)& (0+255),b
  3355  0024C4  0EE1               	movlw	low comportamientoBasico@posicionInvCruce
  3356  0024C6  6FEB               	movwf	probarMapeoDireccionCruces@posicionInvCruce& (0+255),b
  3357  0024C8  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  3358  0024CA  6FEC               	movwf	(probarMapeoDireccionCruces@posicionInvCruce+1)& (0+255),b
  3359  0024CC  0EE4               	movlw	low comportamientoBasico@mapear
  3360  0024CE  6FED               	movwf	probarMapeoDireccionCruces@mapear& (0+255),b
  3361  0024D0  0E01               	movlw	high comportamientoBasico@mapear
  3362  0024D2  6FEE               	movwf	(probarMapeoDireccionCruces@mapear+1)& (0+255),b
  3363  0024D4  0EE3               	movlw	low comportamientoBasico@cruceDetectado
  3364  0024D6  6FEF               	movwf	probarMapeoDireccionCruces@cruceDetectado& (0+255),b
  3365  0024D8  0E01               	movlw	high comportamientoBasico@cruceDetectado
  3366  0024DA  6FF0               	movwf	(probarMapeoDireccionCruces@cruceDetectado+1)& (0+255),b
  3367  0024DC  0EE0               	movlw	low comportamientoBasico@contCaminosRecorridos
  3368  0024DE  6FF1               	movwf	probarMapeoDireccionCruces@contCaminosRecorridos& (0+255),b
  3369  0024E0  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  3370  0024E2  6FF2               	movwf	(probarMapeoDireccionCruces@contCaminosRecorridos+1)& (0+255),b
  3371  0024E4  0EDE               	movlw	low comportamientoBasico@cambioOrientacionCarro
  3372  0024E6  6FF3               	movwf	probarMapeoDireccionCruces@cambioOrientacionCarro& (0+255),b
  3373  0024E8  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  3374  0024EA  6FF4               	movwf	(probarMapeoDireccionCruces@cambioOrientacionCarro+1)& (0+255),b
  3375  0024EC  ECD4  F022         	call	_probarMapeoDireccionCruces	;wreg free
  3376  0024F0                     
  3377                           ;main.c: 416:                 espejearCarroY = 1;
  3378  0024F0  0E01               	movlw	1
  3379  0024F2  0101               	movlb	1	; () banked
  3380  0024F4  6F38               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3381  0024F6                     
  3382                           ; BSR set to: 1
  3383                           ;main.c: 417:                 UART_printf("\rSe llego Al destino\r\n");
  3384  0024F6  0E7A               	movlw	low STR_14
  3385  0024F8  6E07               	movwf	UART_printf@cadena^0,c
  3386  0024FA  0E7F               	movlw	high STR_14
  3387  0024FC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3388  0024FE  ECDA  F028         	call	_UART_printf	;wreg free
  3389  002502                     
  3390                           ;main.c: 418:                 _delay((unsigned long)((3000)*(4000000/4000.0)));
  3391  002502  0E10               	movlw	16
  3392  002504  0102               	movlb	2	; () banked
  3393  002506  6FC9               	movwf	(??_comportamientoBasico+1)& (0+255),b
  3394  002508  0E39               	movlw	57
  3395  00250A  6FC8               	movwf	??_comportamientoBasico& (0+255),b
  3396  00250C  0E0D               	movlw	13
  3397  00250E                     u12227:
  3398  00250E  2EE8               	decfsz	wreg,f,c
  3399  002510  D7FE               	bra	u12227
  3400  002512  2FC8               	decfsz	??_comportamientoBasico& (0+255),f,b
  3401  002514  D7FC               	bra	u12227
  3402  002516  2FC9               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  3403  002518  D7FA               	bra	u12227
  3404  00251A  D000               	nop2	
  3405  00251C  EF7A  F011         	goto	l10712
  3406  002520                     l10800:
  3407                           
  3408                           ;main.c: 422:                 if (direccionElegida == IZQUIERDA || direccionElegida == D
      +                          ERECHA)
  3409  002520  0E02               	movlw	2
  3410  002522  0100               	movlb	0	; () banked
  3411  002524  19FE               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3412  002526  B4D8               	btfsc	status,2,c
  3413  002528  EF98  F012         	goto	u12061
  3414  00252C  EF9A  F012         	goto	u12060
  3415  002530                     u12061:
  3416  002530  EFA3  F012         	goto	l10804
  3417  002534                     u12060:
  3418  002534                     
  3419                           ; BSR set to: 0
  3420  002534  0E03               	movlw	3
  3421  002536  19FE               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3422  002538  A4D8               	btfss	status,2,c
  3423  00253A  EFA1  F012         	goto	u12071
  3424  00253E  EFA3  F012         	goto	u12070
  3425  002542                     u12071:
  3426  002542  EFA5  F012         	goto	l10806
  3427  002546                     u12070:
  3428  002546                     l10804:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;main.c: 423:                     velocidadEstandar();
  3432  002546  EC25  F02C         	call	_velocidadEstandar	;wreg free
  3433  00254A                     l10806:
  3434                           
  3435                           ;main.c: 425:                 mouse.Next_state = direccionElegida;
  3436  00254A  C0FE  F137         	movff	comportamientoBasico@direccionElegida,_mouse+1
  3437  00254E  EFC8  F012         	goto	l380
  3438  002552                     l10810:
  3439                           
  3440                           ; BSR set to: 0
  3441  002552  0101               	movlb	1	; () banked
  3442  002554  5136               	movf	_mouse& (0+255),w,b
  3443  002556  0102               	movlb	2	; () banked
  3444  002558  6FC8               	movwf	??_comportamientoBasico& (0+255),b
  3445  00255A  6BC9               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3446                           
  3447                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3448                           ; Switch size 1, requested type "simple"
  3449                           ; Number of cases is 1, Range of values is 0 to 0
  3450                           ; switch strategies available:
  3451                           ; Name         Instructions Cycles
  3452                           ; simple_byte            4     3 (average)
  3453                           ;	Chosen strategy is simple_byte
  3454  00255C  51C9               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3455  00255E  0A00               	xorlw	0	; case 0
  3456  002560  B4D8               	btfsc	status,2,c
  3457  002562  EFB5  F012         	goto	l11384
  3458  002566  EFC8  F012         	goto	l380
  3459  00256A                     l11384:
  3460                           
  3461                           ; BSR set to: 2
  3462                           ; Switch size 1, requested type "simple"
  3463                           ; Number of cases is 4, Range of values is 1 to 4
  3464                           ; switch strategies available:
  3465                           ; Name         Instructions Cycles
  3466                           ; simple_byte           13     7 (average)
  3467                           ;	Chosen strategy is simple_byte
  3468  00256A  51C8               	movf	??_comportamientoBasico& (0+255),w,b
  3469  00256C  0A01               	xorlw	1	; case 1
  3470  00256E  B4D8               	btfsc	status,2,c
  3471  002570  EF8B  F011         	goto	l10722
  3472  002574  0A03               	xorlw	3	; case 2
  3473  002576  B4D8               	btfsc	status,2,c
  3474  002578  EFAE  F011         	goto	l10724
  3475  00257C  0A01               	xorlw	1	; case 3
  3476  00257E  B4D8               	btfsc	status,2,c
  3477  002580  EF73  F011         	goto	l10708
  3478  002584  0A07               	xorlw	7	; case 4
  3479  002586  B4D8               	btfsc	status,2,c
  3480  002588  EF0D  F012         	goto	l10762
  3481  00258C  EFC8  F012         	goto	l380
  3482  002590                     l380:
  3483                           
  3484                           ;main.c: 431:     mouse.curr_state = mouse.Next_state;
  3485  002590  C137  F136         	movff	_mouse+1,_mouse
  3486  002594  0012               	return		;funcret
  3487  002596                     __end_of_comportamientoBasico:
  3488                           	opt callstack 0
  3489                           
  3490 ;; *************** function _regresarAlCruce *****************
  3491 ;; Defined at:
  3492 ;;		line 679 in file "main.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  3495 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  3496 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  i               2   62[BANK0 ] int 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      void 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3508 ;;      Params:         0       4       0       0       0       0       0       0       0
  3509 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3510 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3511 ;;      Totals:         1       6       0       0       0       0       0       0       0
  3512 ;;Total ram usage:        7 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    6
  3515 ;; This function calls:
  3516 ;;		_PID
  3517 ;;		_mover
  3518 ;;		_velocidadEstandar
  3519 ;; This function is called by:
  3520 ;;		_comportamientoBasico
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text6
  3525  004AB0                     __ptext6:
  3526                           	opt callstack 0
  3527  004AB0                     _regresarAlCruce:
  3528                           	opt callstack 23
  3529  004AB0                     
  3530                           ;main.c: 681:     movimientos[1] = ENFRENTE;
  3531  004AB0  0100               	movlb	0	; () banked
  3532  004AB2  EE20 F001          	lfsr	2,1
  3533  004AB6  519A               	movf	regresarAlCruce@movimientos& (0+255),w,b
  3534  004AB8  26D9               	addwf	fsr2l,f,c
  3535  004ABA  519B               	movf	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3536  004ABC  22DA               	addwfc	fsr2h,f,c
  3537  004ABE  0E01               	movlw	1
  3538  004AC0  6EDF               	movwf	indf2,c
  3539  004AC2                     
  3540                           ; BSR set to: 0
  3541                           ;main.c: 683:     for (T_INT i = numMovimientos - 1; i >= 0; i--) {
  3542  004AC2  0EFF               	movlw	255
  3543  004AC4  259C               	addwf	regresarAlCruce@numMovimientos& (0+255),w,b
  3544  004AC6  6F9E               	movwf	regresarAlCruce@i& (0+255),b
  3545  004AC8  0EFF               	movlw	255
  3546  004ACA  219D               	addwfc	(regresarAlCruce@numMovimientos+1)& (0+255),w,b
  3547  004ACC  6F9F               	movwf	(regresarAlCruce@i+1)& (0+255),b
  3548  004ACE                     l10538:
  3549                           
  3550                           ; BSR set to: 0
  3551  004ACE  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  3552  004AD0  EF6E  F025         	goto	u11840
  3553  004AD4  EF6C  F025         	goto	u11841
  3554  004AD8                     u11841:
  3555  004AD8  EF70  F025         	goto	l10542
  3556  004ADC                     u11840:
  3557  004ADC  EFB0  F025         	goto	l470
  3558  004AE0                     l10542:
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;main.c: 687:         if (movimientos[i] == IZQUIERDA) {
  3562  004AE0  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3563  004AE2  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3564  004AE4  6ED9               	movwf	fsr2l,c
  3565  004AE6  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3566  004AE8  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3567  004AEA  6EDA               	movwf	fsr2h,c
  3568  004AEC  0E02               	movlw	2
  3569  004AEE  18DE               	xorwf	postinc2,w,c
  3570  004AF0  A4D8               	btfss	status,2,c
  3571  004AF2  EF7D  F025         	goto	u11851
  3572  004AF6  EF7F  F025         	goto	u11850
  3573  004AFA                     u11851:
  3574  004AFA  EF86  F025         	goto	l10548
  3575  004AFE                     u11850:
  3576  004AFE                     
  3577                           ; BSR set to: 0
  3578                           ;main.c: 688:             velocidadEstandar();
  3579  004AFE  EC25  F02C         	call	_velocidadEstandar	;wreg free
  3580  004B02                     
  3581                           ;main.c: 689:             mouse.curr_state = DERECHA;
  3582  004B02  0E03               	movlw	3
  3583  004B04  0101               	movlb	1	; () banked
  3584  004B06  6F36               	movwf	_mouse& (0+255),b
  3585                           
  3586                           ;main.c: 690:         } else if (movimientos[i] == DERECHA) {
  3587  004B08  EFA8  F025         	goto	l10558
  3588  004B0C                     l10548:
  3589                           
  3590                           ; BSR set to: 0
  3591  004B0C  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3592  004B0E  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3593  004B10  6ED9               	movwf	fsr2l,c
  3594  004B12  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3595  004B14  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3596  004B16  6EDA               	movwf	fsr2h,c
  3597  004B18  0E03               	movlw	3
  3598  004B1A  18DE               	xorwf	postinc2,w,c
  3599  004B1C  A4D8               	btfss	status,2,c
  3600  004B1E  EF93  F025         	goto	u11861
  3601  004B22  EF95  F025         	goto	u11860
  3602  004B26                     u11861:
  3603  004B26  EF9C  F025         	goto	l10554
  3604  004B2A                     u11860:
  3605  004B2A                     
  3606                           ; BSR set to: 0
  3607                           ;main.c: 691:             velocidadEstandar();
  3608  004B2A  EC25  F02C         	call	_velocidadEstandar	;wreg free
  3609  004B2E                     
  3610                           ;main.c: 692:             mouse.curr_state = IZQUIERDA;
  3611  004B2E  0E02               	movlw	2
  3612  004B30  0101               	movlb	1	; () banked
  3613  004B32  6F36               	movwf	_mouse& (0+255),b
  3614                           
  3615                           ;main.c: 693:         } else {
  3616  004B34  EFA8  F025         	goto	l10558
  3617  004B38                     l10554:
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;main.c: 695:             PID();
  3621  004B38  ECE3  F017         	call	_PID	;wreg free
  3622  004B3C                     
  3623                           ;main.c: 696:             mouse.curr_state = movimientos[i];
  3624  004B3C  0100               	movlb	0	; () banked
  3625  004B3E  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3626  004B40  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3627  004B42  6ED9               	movwf	fsr2l,c
  3628  004B44  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3629  004B46  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3630  004B48  6EDA               	movwf	fsr2h,c
  3631  004B4A  50DF               	movf	indf2,w,c
  3632  004B4C  0101               	movlb	1	; () banked
  3633  004B4E  6F36               	movwf	_mouse& (0+255),b
  3634  004B50                     l10558:
  3635                           
  3636                           ; BSR set to: 1
  3637                           ;main.c: 699:         mover();
  3638  004B50  ECB5  F026         	call	_mover	;wreg free
  3639  004B54                     
  3640                           ;main.c: 700:     }
  3641  004B54  0100               	movlb	0	; () banked
  3642  004B56  079E               	decf	regresarAlCruce@i& (0+255),f,b
  3643  004B58  A0D8               	btfss	status,0,c
  3644  004B5A  079F               	decf	(regresarAlCruce@i+1)& (0+255),f,b
  3645  004B5C  EF67  F025         	goto	l10538
  3646  004B60                     l470:
  3647                           
  3648                           ; BSR set to: 0
  3649  004B60  0012               	return		;funcret
  3650  004B62                     __end_of_regresarAlCruce:
  3651                           	opt callstack 0
  3652                           
  3653 ;; *************** function _mover *****************
  3654 ;; Defined at:
  3655 ;;		line 624 in file "main.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      void 
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3669 ;;      Params:         0       0       0       0       0       0       0       0       0
  3670 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3671 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3672 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3673 ;;Total ram usage:        2 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    3
  3676 ;; This function calls:
  3677 ;;		_forzarAvanceRecto
  3678 ;; This function is called by:
  3679 ;;		_regresarAlCruce
  3680 ;;		_probarGirosAuto
  3681 ;;		_probarPID
  3682 ;;		_probarCruceT
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text7
  3687  004D6A                     __ptext7:
  3688                           	opt callstack 0
  3689  004D6A                     _mover:
  3690                           	opt callstack 25
  3691  004D6A                     
  3692                           ;main.c: 626:     switch (mouse.curr_state) {
  3693  004D6A  EFE4  F026         	goto	l9980
  3694  004D6E                     l455:
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;main.c: 630:             LATB4 = 1;
  3698  004D6E  888A               	bsf	3978,4,c	;volatile
  3699                           
  3700                           ;main.c: 631:             LATB5 = 0;
  3701  004D70  9A8A               	bcf	3978,5,c	;volatile
  3702                           
  3703                           ;main.c: 632:             LATB6 = 1;
  3704  004D72  8C8A               	bsf	3978,6,c	;volatile
  3705                           
  3706                           ;main.c: 635:             if (!0)
  3707  004D74  9E8A               	bcf	3978,7,c	;volatile
  3708  004D76                     
  3709                           ; BSR set to: 1
  3710                           ;main.c: 636:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  3711  004D76  0E48               	movlw	72
  3712  004D78  6E08               	movwf	??_mover^0,c
  3713  004D7A  0E6C               	movlw	108
  3714  004D7C                     u12237:
  3715  004D7C  2EE8               	decfsz	wreg,f,c
  3716  004D7E  D7FE               	bra	u12237
  3717  004D80  2E08               	decfsz	??_mover^0,f,c
  3718  004D82  D7FC               	bra	u12237
  3719  004D84  D000               	nop2	
  3720  004D86  EF02  F027         	goto	l461
  3721  004D8A                     l458:
  3722                           
  3723                           ; BSR set to: 1
  3724                           ;main.c: 642:             LATB4 = 0;
  3725  004D8A  988A               	bcf	3978,4,c	;volatile
  3726                           
  3727                           ;main.c: 643:             LATB5 = 0;
  3728  004D8C  9A8A               	bcf	3978,5,c	;volatile
  3729                           
  3730                           ;main.c: 644:             LATB6 = 1;
  3731  004D8E  8C8A               	bsf	3978,6,c	;volatile
  3732                           
  3733                           ;main.c: 645:             LATB7 = 0;
  3734  004D90  9E8A               	bcf	3978,7,c	;volatile
  3735  004D92                     l9970:
  3736                           
  3737                           ; BSR set to: 1
  3738                           ;main.c: 647:             _delay((unsigned long)((410)*(4000000/4000.0)));
  3739  004D92  0E03               	movlw	3
  3740  004D94  6E09               	movwf	(??_mover+1)^0,c
  3741  004D96  0E15               	movlw	21
  3742  004D98  6E08               	movwf	??_mover^0,c
  3743  004D9A  0E74               	movlw	116
  3744  004D9C                     u12247:
  3745  004D9C  2EE8               	decfsz	wreg,f,c
  3746  004D9E  D7FE               	bra	u12247
  3747  004DA0  2E08               	decfsz	??_mover^0,f,c
  3748  004DA2  D7FC               	bra	u12247
  3749  004DA4  2E09               	decfsz	(??_mover+1)^0,f,c
  3750  004DA6  D7FA               	bra	u12247
  3751  004DA8                     
  3752                           ;main.c: 649:             forzarAvanceRecto();
  3753  004DA8  EC6F  F02C         	call	_forzarAvanceRecto	;wreg free
  3754                           
  3755                           ;main.c: 651:             break;
  3756  004DAC  EF02  F027         	goto	l461
  3757  004DB0                     l459:
  3758                           
  3759                           ; BSR set to: 1
  3760                           ;main.c: 655:             LATB4 = 1;
  3761  004DB0  888A               	bsf	3978,4,c	;volatile
  3762                           
  3763                           ;main.c: 656:             LATB5 = 0;
  3764  004DB2  9A8A               	bcf	3978,5,c	;volatile
  3765                           
  3766                           ;main.c: 657:             LATB6 = 0;
  3767  004DB4  9C8A               	bcf	3978,6,c	;volatile
  3768                           
  3769                           ;main.c: 658:             LATB7 = 0;
  3770  004DB6  9E8A               	bcf	3978,7,c	;volatile
  3771  004DB8  EFC9  F026         	goto	l9970
  3772  004DBC                     l460:
  3773                           
  3774                           ; BSR set to: 1
  3775                           ;main.c: 668:             LATB4 = 0;
  3776  004DBC  988A               	bcf	3978,4,c	;volatile
  3777                           
  3778                           ;main.c: 669:             LATB5 = 0;
  3779  004DBE  9A8A               	bcf	3978,5,c	;volatile
  3780                           
  3781                           ;main.c: 670:             LATB6 = 0;
  3782  004DC0  9C8A               	bcf	3978,6,c	;volatile
  3783                           
  3784                           ;main.c: 671:             LATB7 = 0;
  3785  004DC2  9E8A               	bcf	3978,7,c	;volatile
  3786                           
  3787                           ;main.c: 673:             break;
  3788  004DC4  EF02  F027         	goto	l461
  3789  004DC8                     l9980:
  3790  004DC8  0101               	movlb	1	; () banked
  3791  004DCA  5136               	movf	_mouse& (0+255),w,b
  3792  004DCC  6E08               	movwf	??_mover^0,c
  3793  004DCE  6A09               	clrf	(??_mover+1)^0,c
  3794                           
  3795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3796                           ; Switch size 1, requested type "simple"
  3797                           ; Number of cases is 1, Range of values is 0 to 0
  3798                           ; switch strategies available:
  3799                           ; Name         Instructions Cycles
  3800                           ; simple_byte            4     3 (average)
  3801                           ;	Chosen strategy is simple_byte
  3802  004DD0  5009               	movf	(??_mover+1)^0,w,c
  3803  004DD2  0A00               	xorlw	0	; case 0
  3804  004DD4  B4D8               	btfsc	status,2,c
  3805  004DD6  EFEF  F026         	goto	l11386
  3806  004DDA  EF02  F027         	goto	l461
  3807  004DDE                     l11386:
  3808                           
  3809                           ; BSR set to: 1
  3810                           ; Switch size 1, requested type "simple"
  3811                           ; Number of cases is 4, Range of values is 1 to 4
  3812                           ; switch strategies available:
  3813                           ; Name         Instructions Cycles
  3814                           ; simple_byte           13     7 (average)
  3815                           ;	Chosen strategy is simple_byte
  3816  004DDE  5008               	movf	??_mover^0,w,c
  3817  004DE0  0A01               	xorlw	1	; case 1
  3818  004DE2  B4D8               	btfsc	status,2,c
  3819  004DE4  EFB7  F026         	goto	l455
  3820  004DE8  0A03               	xorlw	3	; case 2
  3821  004DEA  B4D8               	btfsc	status,2,c
  3822  004DEC  EFC5  F026         	goto	l458
  3823  004DF0  0A01               	xorlw	1	; case 3
  3824  004DF2  B4D8               	btfsc	status,2,c
  3825  004DF4  EFD8  F026         	goto	l459
  3826  004DF8  0A07               	xorlw	7	; case 4
  3827  004DFA  B4D8               	btfsc	status,2,c
  3828  004DFC  EFDE  F026         	goto	l460
  3829  004E00  EF02  F027         	goto	l461
  3830  004E04                     l461:
  3831  004E04  0012               	return		;funcret
  3832  004E06                     __end_of_mover:
  3833                           	opt callstack 0
  3834                           
  3835 ;; *************** function _PID *****************
  3836 ;; Defined at:
  3837 ;;		line 1270 in file "main.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  error           2   56[BANK0 ] int 
  3842 ;;  dif             2   54[BANK0 ] int 
  3843 ;;  velocidadDer    2   50[BANK0 ] int 
  3844 ;;  velocidadIzq    2   46[BANK0 ] int 
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  1    wreg      void 
  3847 ;; Registers used:
  3848 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3854 ;;      Params:         0       0       0       0       0       0       0       0       0
  3855 ;;      Locals:         0      16       0       0       0       0       0       0       0
  3856 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3857 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3858 ;;Total ram usage:       18 bytes
  3859 ;; Hardware stack levels used:    1
  3860 ;; Hardware stack levels required when called:    5
  3861 ;; This function calls:
  3862 ;;		___fladd
  3863 ;;		___flmul
  3864 ;;		___flsub
  3865 ;;		___fltol
  3866 ;;		___xxtofl
  3867 ;;		_pwmDuty
  3868 ;;		_roundf
  3869 ;; This function is called by:
  3870 ;;		_comportamientoBasico
  3871 ;;		_regresarAlCruce
  3872 ;;		_probarPID
  3873 ;;		_probarCruceT
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text8
  3878  002FC6                     __ptext8:
  3879                           	opt callstack 0
  3880  002FC6                     _PID:
  3881                           	opt callstack 23
  3882  002FC6                     
  3883                           ;main.c: 1273:     T_INT error = 0;
  3884  002FC6  0E00               	movlw	0
  3885  002FC8  0100               	movlb	0	; () banked
  3886  002FCA  6F99               	movwf	(PID@error+1)& (0+255),b
  3887  002FCC  0E00               	movlw	0
  3888  002FCE  6F98               	movwf	PID@error& (0+255),b
  3889  002FD0                     
  3890                           ; BSR set to: 0
  3891                           ;main.c: 1274:     static T_INT difAnt = 0;;main.c: 1277:     dif = sensorIzquierda - se
      +                          nsorDerecha;
  3892  002FD0  C128  F048         	movff	_sensorDerecha,___flsub@a
  3893  002FD4  C129  F049         	movff	_sensorDerecha+1,___flsub@a+1
  3894  002FD8  C12A  F04A         	movff	_sensorDerecha+2,___flsub@a+2
  3895  002FDC  C12B  F04B         	movff	_sensorDerecha+3,___flsub@a+3
  3896  002FE0  C124  F044         	movff	_sensorIzquierda,___flsub@b
  3897  002FE4  C125  F045         	movff	_sensorIzquierda+1,___flsub@b+1
  3898  002FE8  C126  F046         	movff	_sensorIzquierda+2,___flsub@b+2
  3899  002FEC  C127  F047         	movff	_sensorIzquierda+3,___flsub@b+3
  3900  002FF0  ECF5  F02A         	call	___flsub	;wreg free
  3901  002FF4  C044  F072         	movff	?___flsub,___fltol@f1
  3902  002FF8  C045  F073         	movff	?___flsub+1,___fltol@f1+1
  3903  002FFC  C046  F074         	movff	?___flsub+2,___fltol@f1+2
  3904  003000  C047  F075         	movff	?___flsub+3,___fltol@f1+3
  3905  003004  EC4F  F021         	call	___fltol	;wreg free
  3906  003008  C072  F096         	movff	?___fltol,PID@dif
  3907  00300C  C073  F097         	movff	?___fltol+1,PID@dif+1
  3908  003010                     
  3909                           ;main.c: 1279:     error = roundf(1.5 * (dif) + 0.1 * (difAnt - dif));
  3910  003010  0ECD               	movlw	205
  3911  003012  6E1F               	movwf	___flmul@a^0,c
  3912  003014  0ECC               	movlw	204
  3913  003016  6E20               	movwf	(___flmul@a+1)^0,c
  3914  003018  0ECC               	movlw	204
  3915  00301A  6E21               	movwf	(___flmul@a+2)^0,c
  3916  00301C  0E3D               	movlw	61
  3917  00301E  6E22               	movwf	(___flmul@a+3)^0,c
  3918  003020  0100               	movlb	0	; () banked
  3919  003022  5196               	movf	PID@dif& (0+255),w,b
  3920  003024  0101               	movlb	1	; () banked
  3921  003026  5D34               	subwf	PID@difAnt& (0+255),w,b
  3922  003028  0100               	movlb	0	; () banked
  3923  00302A  6F88               	movwf	??_PID& (0+255),b
  3924  00302C  5197               	movf	(PID@dif+1)& (0+255),w,b
  3925  00302E  0101               	movlb	1	; () banked
  3926  003030  5935               	subwfb	(PID@difAnt+1)& (0+255),w,b
  3927  003032  0100               	movlb	0	; () banked
  3928  003034  6F89               	movwf	(??_PID+1)& (0+255),b
  3929  003036  C088  F00D         	movff	??_PID,___xxtofl@val
  3930  00303A  C089  F00E         	movff	??_PID+1,___xxtofl@val+1
  3931  00303E  0E00               	movlw	0
  3932  003040  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  3933  003042  0EFF               	movlw	-1
  3934  003044  6E0F               	movwf	(___xxtofl@val+2)^0,c
  3935  003046  6E10               	movwf	(___xxtofl@val+3)^0,c
  3936  003048  0E01               	movlw	1
  3937  00304A  ECF5  F01A         	call	___xxtofl
  3938  00304E  C00D  F01B         	movff	?___xxtofl,___flmul@b
  3939  003052  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  3940  003056  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  3941  00305A  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  3942  00305E  ECC2  F00E         	call	___flmul	;wreg free
  3943  003062  C01B  F038         	movff	?___flmul,___fladd@a
  3944  003066  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  3945  00306A  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  3946  00306E  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  3947  003072  0E00               	movlw	0
  3948  003074  6E1F               	movwf	___flmul@a^0,c
  3949  003076  0E00               	movlw	0
  3950  003078  6E20               	movwf	(___flmul@a+1)^0,c
  3951  00307A  0EC0               	movlw	192
  3952  00307C  6E21               	movwf	(___flmul@a+2)^0,c
  3953  00307E  0E3F               	movlw	63
  3954  003080  6E22               	movwf	(___flmul@a+3)^0,c
  3955  003082  C096  F00D         	movff	PID@dif,___xxtofl@val
  3956  003086  C097  F00E         	movff	PID@dif+1,___xxtofl@val+1
  3957  00308A  0E00               	movlw	0
  3958  00308C  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  3959  00308E  0EFF               	movlw	-1
  3960  003090  6E0F               	movwf	(___xxtofl@val+2)^0,c
  3961  003092  6E10               	movwf	(___xxtofl@val+3)^0,c
  3962  003094  0E01               	movlw	1
  3963  003096  ECF5  F01A         	call	___xxtofl
  3964  00309A  C00D  F01B         	movff	?___xxtofl,___flmul@b
  3965  00309E  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  3966  0030A2  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  3967  0030A6  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  3968  0030AA  ECC2  F00E         	call	___flmul	;wreg free
  3969  0030AE  C01B  F034         	movff	?___flmul,___fladd@b
  3970  0030B2  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  3971  0030B6  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  3972  0030BA  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  3973  0030BE  EC62  F00C         	call	___fladd	;wreg free
  3974  0030C2  C034  F08A         	movff	?___fladd,_PID$1831
  3975  0030C6  C035  F08B         	movff	?___fladd+1,_PID$1831+1
  3976  0030CA  C036  F08C         	movff	?___fladd+2,_PID$1831+2
  3977  0030CE  C037  F08D         	movff	?___fladd+3,_PID$1831+3
  3978  0030D2                     
  3979                           ;main.c: 1279:     error = roundf(1.5 * (dif) + 0.1 * (difAnt - dif));
  3980  0030D2  C08A  F04C         	movff	_PID$1831,roundf@x
  3981  0030D6  C08B  F04D         	movff	_PID$1831+1,roundf@x+1
  3982  0030DA  C08C  F04E         	movff	_PID$1831+2,roundf@x+2
  3983  0030DE  C08D  F04F         	movff	_PID$1831+3,roundf@x+3
  3984  0030E2  ECCB  F012         	call	_roundf	;wreg free
  3985  0030E6  C04C  F072         	movff	?_roundf,___fltol@f1
  3986  0030EA  C04D  F073         	movff	?_roundf+1,___fltol@f1+1
  3987  0030EE  C04E  F074         	movff	?_roundf+2,___fltol@f1+2
  3988  0030F2  C04F  F075         	movff	?_roundf+3,___fltol@f1+3
  3989  0030F6  EC4F  F021         	call	___fltol	;wreg free
  3990  0030FA  C072  F098         	movff	?___fltol,PID@error
  3991  0030FE  C073  F099         	movff	?___fltol+1,PID@error+1
  3992  003102                     
  3993                           ;main.c: 1281:     difAnt = dif;
  3994  003102  C096  F134         	movff	PID@dif,PID@difAnt
  3995  003106  C097  F135         	movff	PID@dif+1,PID@difAnt+1
  3996  00310A                     
  3997                           ;main.c: 1283:     T_INT velocidadIzquierda = ((100 - error)<(0)?(0):((100 - error)>(100
      +                          )?(100):(100 - error)));
  3998  00310A  0E64               	movlw	100
  3999  00310C  0100               	movlb	0	; () banked
  4000  00310E  6F88               	movwf	??_PID& (0+255),b
  4001  003110  0E00               	movlw	0
  4002  003112  6F89               	movwf	(??_PID+1)& (0+255),b
  4003  003114  5198               	movf	PID@error& (0+255),w,b
  4004  003116  5D88               	subwf	??_PID& (0+255),w,b
  4005  003118  5199               	movf	(PID@error+1)& (0+255),w,b
  4006  00311A  5989               	subwfb	(??_PID+1)& (0+255),w,b
  4007  00311C  0B80               	andlw	128
  4008  00311E  A4D8               	btfss	status,2,c
  4009  003120  EF94  F018         	goto	u11281
  4010  003124  EF96  F018         	goto	u11280
  4011  003128                     u11281:
  4012  003128  EFC0  F018         	goto	l10010
  4013  00312C                     u11280:
  4014  00312C                     
  4015                           ; BSR set to: 0
  4016  00312C  0E64               	movlw	100
  4017  00312E  6F88               	movwf	??_PID& (0+255),b
  4018  003130  0E00               	movlw	0
  4019  003132  6F89               	movwf	(??_PID+1)& (0+255),b
  4020  003134  5198               	movf	PID@error& (0+255),w,b
  4021  003136  5F88               	subwf	??_PID& (0+255),f,b
  4022  003138  5199               	movf	(PID@error+1)& (0+255),w,b
  4023  00313A  5B89               	subwfb	(??_PID+1)& (0+255),f,b
  4024  00313C  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  4025  00313E  EFAC  F018         	goto	u11290
  4026  003142  5189               	movf	(??_PID+1)& (0+255),w,b
  4027  003144  E107               	bnz	u11291
  4028  003146  0E65               	movlw	101
  4029  003148  5D88               	subwf	??_PID& (0+255),w,b
  4030  00314A  B0D8               	btfsc	status,0,c
  4031  00314C  EFAA  F018         	goto	u11291
  4032  003150  EFAC  F018         	goto	u11290
  4033  003154                     u11291:
  4034  003154  EFB6  F018         	goto	l10006
  4035  003158                     u11290:
  4036  003158                     
  4037                           ; BSR set to: 0
  4038  003158  5198               	movf	PID@error& (0+255),w,b
  4039  00315A  0864               	sublw	100
  4040  00315C  6F90               	movwf	_PID$742& (0+255),b
  4041  00315E  5199               	movf	(PID@error+1)& (0+255),w,b
  4042  003160  A0D8               	btfss	status,0,c
  4043  003162  2AE8               	incf	wreg,f,c
  4044  003164  0800               	sublw	0
  4045  003166  6F91               	movwf	(_PID$742+1)& (0+255),b
  4046  003168  EFBA  F018         	goto	l10008
  4047  00316C                     l10006:
  4048                           
  4049                           ; BSR set to: 0
  4050  00316C  0E00               	movlw	0
  4051  00316E  6F91               	movwf	(_PID$742+1)& (0+255),b
  4052  003170  0E64               	movlw	100
  4053  003172  6F90               	movwf	_PID$742& (0+255),b
  4054  003174                     l10008:
  4055                           
  4056                           ; BSR set to: 0
  4057  003174  C090  F08E         	movff	_PID$742,PID@velocidadIzquierda
  4058  003178  C091  F08F         	movff	_PID$742+1,PID@velocidadIzquierda+1
  4059  00317C  EFC4  F018         	goto	l10012
  4060  003180                     l10010:
  4061                           
  4062                           ; BSR set to: 0
  4063  003180  0E00               	movlw	0
  4064  003182  6F8F               	movwf	(PID@velocidadIzquierda+1)& (0+255),b
  4065  003184  0E00               	movlw	0
  4066  003186  6F8E               	movwf	PID@velocidadIzquierda& (0+255),b
  4067  003188                     l10012:
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;main.c: 1284:     T_INT velocidadDerecha = ((100 + error)<(0)?(0):((100 + error)>(100)?
      +                          (100):(100 + error)));
  4071  003188  0E64               	movlw	100
  4072  00318A  2598               	addwf	PID@error& (0+255),w,b
  4073  00318C  0E00               	movlw	0
  4074  00318E  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4075  003190  0B80               	andlw	128
  4076  003192  A4D8               	btfss	status,2,c
  4077  003194  EFCE  F018         	goto	u11301
  4078  003198  EFD0  F018         	goto	u11300
  4079  00319C                     u11301:
  4080  00319C  EFF6  F018         	goto	l10022
  4081  0031A0                     u11300:
  4082  0031A0                     
  4083                           ; BSR set to: 0
  4084  0031A0  0E64               	movlw	100
  4085  0031A2  2598               	addwf	PID@error& (0+255),w,b
  4086  0031A4  6F88               	movwf	??_PID& (0+255),b
  4087  0031A6  0E00               	movlw	0
  4088  0031A8  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4089  0031AA  6F89               	movwf	(??_PID+1)& (0+255),b
  4090  0031AC  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  4091  0031AE  EFE4  F018         	goto	u11310
  4092  0031B2  5189               	movf	(??_PID+1)& (0+255),w,b
  4093  0031B4  E107               	bnz	u11311
  4094  0031B6  0E65               	movlw	101
  4095  0031B8  5D88               	subwf	??_PID& (0+255),w,b
  4096  0031BA  B0D8               	btfsc	status,0,c
  4097  0031BC  EFE2  F018         	goto	u11311
  4098  0031C0  EFE4  F018         	goto	u11310
  4099  0031C4                     u11311:
  4100  0031C4  EFEC  F018         	goto	l10018
  4101  0031C8                     u11310:
  4102  0031C8                     
  4103                           ; BSR set to: 0
  4104  0031C8  0E64               	movlw	100
  4105  0031CA  2598               	addwf	PID@error& (0+255),w,b
  4106  0031CC  6F94               	movwf	_PID$744& (0+255),b
  4107  0031CE  0E00               	movlw	0
  4108  0031D0  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4109  0031D2  6F95               	movwf	(_PID$744+1)& (0+255),b
  4110  0031D4  EFF0  F018         	goto	l10020
  4111  0031D8                     l10018:
  4112                           
  4113                           ; BSR set to: 0
  4114  0031D8  0E00               	movlw	0
  4115  0031DA  6F95               	movwf	(_PID$744+1)& (0+255),b
  4116  0031DC  0E64               	movlw	100
  4117  0031DE  6F94               	movwf	_PID$744& (0+255),b
  4118  0031E0                     l10020:
  4119                           
  4120                           ; BSR set to: 0
  4121  0031E0  C094  F092         	movff	_PID$744,PID@velocidadDerecha
  4122  0031E4  C095  F093         	movff	_PID$744+1,PID@velocidadDerecha+1
  4123  0031E8  EFFA  F018         	goto	l10024
  4124  0031EC                     l10022:
  4125                           
  4126                           ; BSR set to: 0
  4127  0031EC  0E00               	movlw	0
  4128  0031EE  6F93               	movwf	(PID@velocidadDerecha+1)& (0+255),b
  4129  0031F0  0E00               	movlw	0
  4130  0031F2  6F92               	movwf	PID@velocidadDerecha& (0+255),b
  4131  0031F4                     l10024:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;main.c: 1286:     pwmDuty(velocidadIzquierda, 1);
  4135  0031F4  C08E  F07C         	movff	PID@velocidadIzquierda,pwmDuty@cicloTrabajo
  4136  0031F8  C08F  F07D         	movff	PID@velocidadIzquierda+1,pwmDuty@cicloTrabajo+1
  4137  0031FC  0E01               	movlw	1
  4138  0031FE  6F7E               	movwf	pwmDuty@channel& (0+255),b
  4139  003200  EC17  F01A         	call	_pwmDuty	;wreg free
  4140  003204                     
  4141                           ;main.c: 1287:     pwmDuty(velocidadDerecha, 2);
  4142  003204  C092  F07C         	movff	PID@velocidadDerecha,pwmDuty@cicloTrabajo
  4143  003208  C093  F07D         	movff	PID@velocidadDerecha+1,pwmDuty@cicloTrabajo+1
  4144  00320C  0E02               	movlw	2
  4145  00320E  0100               	movlb	0	; () banked
  4146  003210  6F7E               	movwf	pwmDuty@channel& (0+255),b
  4147  003212  EC17  F01A         	call	_pwmDuty	;wreg free
  4148  003216  0012               	return		;funcret
  4149  003218                     __end_of_PID:
  4150                           	opt callstack 0
  4151                           
  4152 ;; *************** function _roundf *****************
  4153 ;; Defined at:
  4154 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  x               4   75[COMRAM] float 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  y               4   14[BANK0 ] float 
  4159 ;;  u               4   10[BANK0 ] struct .
  4160 ;;  e               2    4[BANK0 ] int 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  4   75[COMRAM] float 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4170 ;;      Params:         4       0       0       0       0       0       0       0       0
  4171 ;;      Locals:         0      18       0       0       0       0       0       0       0
  4172 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4173 ;;      Totals:         8      18       0       0       0       0       0       0       0
  4174 ;;Total ram usage:       26 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    4
  4177 ;; This function calls:
  4178 ;;		___fladd
  4179 ;;		___flge
  4180 ;;		___flmul
  4181 ;;		___flneg
  4182 ;;		___flsub
  4183 ;; This function is called by:
  4184 ;;		_PID
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text9
  4189  002596                     __ptext9:
  4190                           	opt callstack 0
  4191  002596                     _roundf:
  4192                           	opt callstack 23
  4193  002596  C100  F06A         	movff	roundf@F525,roundf@u
  4194  00259A  C101  F06B         	movff	roundf@F525+1,roundf@u+1
  4195  00259E  C102  F06C         	movff	roundf@F525+2,roundf@u+2
  4196  0025A2  C103  F06D         	movff	roundf@F525+3,roundf@u+3
  4197  0025A6  C04C  F06A         	movff	roundf@x,roundf@u
  4198  0025AA  C04D  F06B         	movff	roundf@x+1,roundf@u+1
  4199  0025AE  C04E  F06C         	movff	roundf@x+2,roundf@u+2
  4200  0025B2  C04F  F06D         	movff	roundf@x+3,roundf@u+3
  4201  0025B6  C06A  F050         	movff	roundf@u,??_roundf
  4202  0025BA  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4203  0025BE  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4204  0025C2  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4205  0025C6  0E18               	movlw	24
  4206  0025C8  EFEB  F012         	goto	u11180
  4207  0025CC                     u11185:
  4208  0025CC  90D8               	bcf	status,0,c
  4209  0025CE  3253               	rrcf	(??_roundf+3)^0,f,c
  4210  0025D0  3252               	rrcf	(??_roundf+2)^0,f,c
  4211  0025D2  3251               	rrcf	(??_roundf+1)^0,f,c
  4212  0025D4  3250               	rrcf	??_roundf^0,f,c
  4213  0025D6                     u11180:
  4214  0025D6  2EE8               	decfsz	wreg,f,c
  4215  0025D8  EFE6  F012         	goto	u11185
  4216  0025DC  5050               	movf	??_roundf^0,w,c
  4217  0025DE  0100               	movlb	0	; () banked
  4218  0025E0  6F64               	movwf	roundf@e& (0+255),b
  4219  0025E2  6B65               	clrf	(roundf@e+1)& (0+255),b
  4220  0025E4  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4221  0025E6  EFFE  F012         	goto	u11191
  4222  0025EA  5165               	movf	(roundf@e+1)& (0+255),w,b
  4223  0025EC  E109               	bnz	u11190
  4224  0025EE  0E96               	movlw	150
  4225  0025F0  5D64               	subwf	roundf@e& (0+255),w,b
  4226  0025F2  A0D8               	btfss	status,0,c
  4227  0025F4  EFFE  F012         	goto	u11191
  4228  0025F8  EF00  F013         	goto	u11190
  4229  0025FC                     u11191:
  4230  0025FC  EF0A  F013         	goto	l9918
  4231  002600                     u11190:
  4232  002600                     
  4233                           ; BSR set to: 0
  4234  002600  C04C  F04C         	movff	roundf@x,?_roundf
  4235  002604  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  4236  002608  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  4237  00260C  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  4238  002610  EFA3  F014         	goto	l1753
  4239  002614                     l9918:
  4240                           
  4241                           ; BSR set to: 0
  4242  002614  C06A  F050         	movff	roundf@u,??_roundf
  4243  002618  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4244  00261C  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4245  002620  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4246  002624  0E20               	movlw	32
  4247  002626  EF1A  F013         	goto	u11200
  4248  00262A                     u11205:
  4249  00262A  90D8               	bcf	status,0,c
  4250  00262C  3253               	rrcf	(??_roundf+3)^0,f,c
  4251  00262E  3252               	rrcf	(??_roundf+2)^0,f,c
  4252  002630  3251               	rrcf	(??_roundf+1)^0,f,c
  4253  002632  3250               	rrcf	??_roundf^0,f,c
  4254  002634                     u11200:
  4255  002634  2EE8               	decfsz	wreg,f,c
  4256  002636  EF15  F013         	goto	u11205
  4257  00263A  5050               	movf	??_roundf^0,w,c
  4258  00263C  1051               	iorwf	(??_roundf+1)^0,w,c
  4259  00263E  1052               	iorwf	(??_roundf+2)^0,w,c
  4260  002640  1053               	iorwf	(??_roundf+3)^0,w,c
  4261  002642  B4D8               	btfsc	status,2,c
  4262  002644  EF26  F013         	goto	u11211
  4263  002648  EF28  F013         	goto	u11210
  4264  00264C                     u11211:
  4265  00264C  EF3A  F013         	goto	l9922
  4266  002650                     u11210:
  4267  002650                     
  4268                           ; BSR set to: 0
  4269  002650  C04C  F006         	movff	roundf@x,___flneg@f1
  4270  002654  C04D  F007         	movff	roundf@x+1,___flneg@f1+1
  4271  002658  C04E  F008         	movff	roundf@x+2,___flneg@f1+2
  4272  00265C  C04F  F009         	movff	roundf@x+3,___flneg@f1+3
  4273  002660  ECBB  F02B         	call	___flneg	;wreg free
  4274  002664  C006  F04C         	movff	?___flneg,roundf@x
  4275  002668  C007  F04D         	movff	?___flneg+1,roundf@x+1
  4276  00266C  C008  F04E         	movff	?___flneg+2,roundf@x+2
  4277  002670  C009  F04F         	movff	?___flneg+3,roundf@x+3
  4278  002674                     l9922:
  4279  002674  0100               	movlb	0	; () banked
  4280  002676  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4281  002678  EF49  F013         	goto	u11220
  4282  00267C  5165               	movf	(roundf@e+1)& (0+255),w,b
  4283  00267E  E107               	bnz	u11221
  4284  002680  0E7E               	movlw	126
  4285  002682  5D64               	subwf	roundf@e& (0+255),w,b
  4286  002684  B0D8               	btfsc	status,0,c
  4287  002686  EF47  F013         	goto	u11221
  4288  00268A  EF49  F013         	goto	u11220
  4289  00268E                     u11221:
  4290  00268E  EF65  F013         	goto	l9928
  4291  002692                     u11220:
  4292  002692                     
  4293                           ; BSR set to: 0
  4294  002692  C06A  F01B         	movff	roundf@u,___flmul@b
  4295  002696  C06B  F01C         	movff	roundf@u+1,___flmul@b+1
  4296  00269A  C06C  F01D         	movff	roundf@u+2,___flmul@b+2
  4297  00269E  C06D  F01E         	movff	roundf@u+3,___flmul@b+3
  4298  0026A2  0E00               	movlw	0
  4299  0026A4  6E1F               	movwf	___flmul@a^0,c
  4300  0026A6  0E00               	movlw	0
  4301  0026A8  6E20               	movwf	(___flmul@a+1)^0,c
  4302  0026AA  0E00               	movlw	0
  4303  0026AC  6E21               	movwf	(___flmul@a+2)^0,c
  4304  0026AE  0E00               	movlw	0
  4305  0026B0  6E22               	movwf	(___flmul@a+3)^0,c
  4306  0026B2  ECC2  F00E         	call	___flmul	;wreg free
  4307  0026B6  C01B  F04C         	movff	?___flmul,?_roundf
  4308  0026BA  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  4309  0026BE  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  4310  0026C2  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  4311  0026C6  EFA3  F014         	goto	l1753
  4312  0026CA                     l9928:
  4313                           
  4314                           ; BSR set to: 0
  4315  0026CA  0E00               	movlw	0
  4316  0026CC  6E38               	movwf	___fladd@a^0,c
  4317  0026CE  0E00               	movlw	0
  4318  0026D0  6E39               	movwf	(___fladd@a+1)^0,c
  4319  0026D2  0E00               	movlw	0
  4320  0026D4  6E3A               	movwf	(___fladd@a+2)^0,c
  4321  0026D6  0E4B               	movlw	75
  4322  0026D8  6E3B               	movwf	(___fladd@a+3)^0,c
  4323  0026DA  C04C  F034         	movff	roundf@x,___fladd@b
  4324  0026DE  C04D  F035         	movff	roundf@x+1,___fladd@b+1
  4325  0026E2  C04E  F036         	movff	roundf@x+2,___fladd@b+2
  4326  0026E6  C04F  F037         	movff	roundf@x+3,___fladd@b+3
  4327  0026EA  EC62  F00C         	call	___fladd	;wreg free
  4328  0026EE  C034  F066         	movff	?___fladd,_roundf$1832
  4329  0026F2  C035  F067         	movff	?___fladd+1,_roundf$1832+1
  4330  0026F6  C036  F068         	movff	?___fladd+2,_roundf$1832+2
  4331  0026FA  C037  F069         	movff	?___fladd+3,_roundf$1832+3
  4332  0026FE  0E00               	movlw	0
  4333  002700  6E38               	movwf	___fladd@a^0,c
  4334  002702  0E00               	movlw	0
  4335  002704  6E39               	movwf	(___fladd@a+1)^0,c
  4336  002706  0E00               	movlw	0
  4337  002708  6E3A               	movwf	(___fladd@a+2)^0,c
  4338  00270A  0ECB               	movlw	203
  4339  00270C  6E3B               	movwf	(___fladd@a+3)^0,c
  4340  00270E  C066  F034         	movff	_roundf$1832,___fladd@b
  4341  002712  C067  F035         	movff	_roundf$1832+1,___fladd@b+1
  4342  002716  C068  F036         	movff	_roundf$1832+2,___fladd@b+2
  4343  00271A  C069  F037         	movff	_roundf$1832+3,___fladd@b+3
  4344  00271E  EC62  F00C         	call	___fladd	;wreg free
  4345  002722  C034  F060         	movff	?___fladd,_roundf$1833
  4346  002726  C035  F061         	movff	?___fladd+1,_roundf$1833+1
  4347  00272A  C036  F062         	movff	?___fladd+2,_roundf$1833+2
  4348  00272E  C037  F063         	movff	?___fladd+3,_roundf$1833+3
  4349  002732  C060  F044         	movff	_roundf$1833,___flsub@b
  4350  002736  C061  F045         	movff	_roundf$1833+1,___flsub@b+1
  4351  00273A  C062  F046         	movff	_roundf$1833+2,___flsub@b+2
  4352  00273E  C063  F047         	movff	_roundf$1833+3,___flsub@b+3
  4353  002742  C04C  F048         	movff	roundf@x,___flsub@a
  4354  002746  C04D  F049         	movff	roundf@x+1,___flsub@a+1
  4355  00274A  C04E  F04A         	movff	roundf@x+2,___flsub@a+2
  4356  00274E  C04F  F04B         	movff	roundf@x+3,___flsub@a+3
  4357  002752  ECF5  F02A         	call	___flsub	;wreg free
  4358  002756  C044  F06E         	movff	?___flsub,roundf@y
  4359  00275A  C045  F06F         	movff	?___flsub+1,roundf@y+1
  4360  00275E  C046  F070         	movff	?___flsub+2,roundf@y+2
  4361  002762  C047  F071         	movff	?___flsub+3,roundf@y+3
  4362  002766  0E00               	movlw	0
  4363  002768  6E34               	movwf	___flge@ff1^0,c
  4364  00276A  0E00               	movlw	0
  4365  00276C  6E35               	movwf	(___flge@ff1+1)^0,c
  4366  00276E  0E00               	movlw	0
  4367  002770  6E36               	movwf	(___flge@ff1+2)^0,c
  4368  002772  0E3F               	movlw	63
  4369  002774  6E37               	movwf	(___flge@ff1+3)^0,c
  4370  002776  C06E  F038         	movff	roundf@y,___flge@ff2
  4371  00277A  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  4372  00277E  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  4373  002782  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  4374  002786  ECD3  F021         	call	___flge	;wreg free
  4375  00278A  B0D8               	btfsc	status,0,c
  4376  00278C  EFCA  F013         	goto	u11231
  4377  002790  EFCC  F013         	goto	u11230
  4378  002794                     u11231:
  4379  002794  EF02  F014         	goto	l9932
  4380  002798                     u11230:
  4381  002798  C04C  F038         	movff	roundf@x,___fladd@a
  4382  00279C  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4383  0027A0  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4384  0027A4  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4385  0027A8  C06E  F034         	movff	roundf@y,___fladd@b
  4386  0027AC  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4387  0027B0  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4388  0027B4  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4389  0027B8  EC62  F00C         	call	___fladd	;wreg free
  4390  0027BC  C034  F066         	movff	?___fladd,_roundf$1832
  4391  0027C0  C035  F067         	movff	?___fladd+1,_roundf$1832+1
  4392  0027C4  C036  F068         	movff	?___fladd+2,_roundf$1832+2
  4393  0027C8  C037  F069         	movff	?___fladd+3,_roundf$1832+3
  4394  0027CC  C066  F034         	movff	_roundf$1832,___fladd@b
  4395  0027D0  C067  F035         	movff	_roundf$1832+1,___fladd@b+1
  4396  0027D4  C068  F036         	movff	_roundf$1832+2,___fladd@b+2
  4397  0027D8  C069  F037         	movff	_roundf$1832+3,___fladd@b+3
  4398  0027DC  0E00               	movlw	0
  4399  0027DE  6E38               	movwf	___fladd@a^0,c
  4400  0027E0  0E00               	movlw	0
  4401  0027E2  6E39               	movwf	(___fladd@a+1)^0,c
  4402  0027E4  0E80               	movlw	128
  4403  0027E6  6E3A               	movwf	(___fladd@a+2)^0,c
  4404  0027E8  0EBF               	movlw	191
  4405  0027EA  6E3B               	movwf	(___fladd@a+3)^0,c
  4406  0027EC  EC62  F00C         	call	___fladd	;wreg free
  4407  0027F0  C034  F06E         	movff	?___fladd,roundf@y
  4408  0027F4  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4409  0027F8  C036  F070         	movff	?___fladd+2,roundf@y+2
  4410  0027FC  C037  F071         	movff	?___fladd+3,roundf@y+3
  4411  002800  EF6B  F014         	goto	l9938
  4412  002804                     l9932:
  4413  002804  0E00               	movlw	0
  4414  002806  6E34               	movwf	___flge@ff1^0,c
  4415  002808  0E00               	movlw	0
  4416  00280A  6E35               	movwf	(___flge@ff1+1)^0,c
  4417  00280C  0E00               	movlw	0
  4418  00280E  6E36               	movwf	(___flge@ff1+2)^0,c
  4419  002810  0EBF               	movlw	191
  4420  002812  6E37               	movwf	(___flge@ff1+3)^0,c
  4421  002814  C06E  F038         	movff	roundf@y,___flge@ff2
  4422  002818  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  4423  00281C  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  4424  002820  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  4425  002824  ECD3  F021         	call	___flge	;wreg free
  4426  002828  A0D8               	btfss	status,0,c
  4427  00282A  EF19  F014         	goto	u11241
  4428  00282E  EF1B  F014         	goto	u11240
  4429  002832                     u11241:
  4430  002832  EF51  F014         	goto	l9936
  4431  002836                     u11240:
  4432  002836  C04C  F038         	movff	roundf@x,___fladd@a
  4433  00283A  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4434  00283E  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4435  002842  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4436  002846  C06E  F034         	movff	roundf@y,___fladd@b
  4437  00284A  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4438  00284E  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4439  002852  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4440  002856  EC62  F00C         	call	___fladd	;wreg free
  4441  00285A  C034  F066         	movff	?___fladd,_roundf$1832
  4442  00285E  C035  F067         	movff	?___fladd+1,_roundf$1832+1
  4443  002862  C036  F068         	movff	?___fladd+2,_roundf$1832+2
  4444  002866  C037  F069         	movff	?___fladd+3,_roundf$1832+3
  4445  00286A  C066  F034         	movff	_roundf$1832,___fladd@b
  4446  00286E  C067  F035         	movff	_roundf$1832+1,___fladd@b+1
  4447  002872  C068  F036         	movff	_roundf$1832+2,___fladd@b+2
  4448  002876  C069  F037         	movff	_roundf$1832+3,___fladd@b+3
  4449  00287A  0E00               	movlw	0
  4450  00287C  6E38               	movwf	___fladd@a^0,c
  4451  00287E  0E00               	movlw	0
  4452  002880  6E39               	movwf	(___fladd@a+1)^0,c
  4453  002882  0E80               	movlw	128
  4454  002884  6E3A               	movwf	(___fladd@a+2)^0,c
  4455  002886  0E3F               	movlw	63
  4456  002888  6E3B               	movwf	(___fladd@a+3)^0,c
  4457  00288A  EC62  F00C         	call	___fladd	;wreg free
  4458  00288E  C034  F06E         	movff	?___fladd,roundf@y
  4459  002892  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4460  002896  C036  F070         	movff	?___fladd+2,roundf@y+2
  4461  00289A  C037  F071         	movff	?___fladd+3,roundf@y+3
  4462  00289E  EF6B  F014         	goto	l9938
  4463  0028A2                     l9936:
  4464  0028A2  C06E  F034         	movff	roundf@y,___fladd@b
  4465  0028A6  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4466  0028AA  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4467  0028AE  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4468  0028B2  C04C  F038         	movff	roundf@x,___fladd@a
  4469  0028B6  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4470  0028BA  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4471  0028BE  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4472  0028C2  EC62  F00C         	call	___fladd	;wreg free
  4473  0028C6  C034  F06E         	movff	?___fladd,roundf@y
  4474  0028CA  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4475  0028CE  C036  F070         	movff	?___fladd+2,roundf@y+2
  4476  0028D2  C037  F071         	movff	?___fladd+3,roundf@y+3
  4477  0028D6                     l9938:
  4478  0028D6  C06A  F050         	movff	roundf@u,??_roundf
  4479  0028DA  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4480  0028DE  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4481  0028E2  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4482  0028E6  0E20               	movlw	32
  4483  0028E8  EF7B  F014         	goto	u11250
  4484  0028EC                     u11255:
  4485  0028EC  90D8               	bcf	status,0,c
  4486  0028EE  3253               	rrcf	(??_roundf+3)^0,f,c
  4487  0028F0  3252               	rrcf	(??_roundf+2)^0,f,c
  4488  0028F2  3251               	rrcf	(??_roundf+1)^0,f,c
  4489  0028F4  3250               	rrcf	??_roundf^0,f,c
  4490  0028F6                     u11250:
  4491  0028F6  2EE8               	decfsz	wreg,f,c
  4492  0028F8  EF76  F014         	goto	u11255
  4493  0028FC  5050               	movf	??_roundf^0,w,c
  4494  0028FE  1051               	iorwf	(??_roundf+1)^0,w,c
  4495  002900  1052               	iorwf	(??_roundf+2)^0,w,c
  4496  002902  1053               	iorwf	(??_roundf+3)^0,w,c
  4497  002904  B4D8               	btfsc	status,2,c
  4498  002906  EF87  F014         	goto	u11261
  4499  00290A  EF89  F014         	goto	u11260
  4500  00290E                     u11261:
  4501  00290E  EF9B  F014         	goto	l9942
  4502  002912                     u11260:
  4503  002912  C06E  F006         	movff	roundf@y,___flneg@f1
  4504  002916  C06F  F007         	movff	roundf@y+1,___flneg@f1+1
  4505  00291A  C070  F008         	movff	roundf@y+2,___flneg@f1+2
  4506  00291E  C071  F009         	movff	roundf@y+3,___flneg@f1+3
  4507  002922  ECBB  F02B         	call	___flneg	;wreg free
  4508  002926  C006  F06E         	movff	?___flneg,roundf@y
  4509  00292A  C007  F06F         	movff	?___flneg+1,roundf@y+1
  4510  00292E  C008  F070         	movff	?___flneg+2,roundf@y+2
  4511  002932  C009  F071         	movff	?___flneg+3,roundf@y+3
  4512  002936                     l9942:
  4513  002936  C06E  F04C         	movff	roundf@y,?_roundf
  4514  00293A  C06F  F04D         	movff	roundf@y+1,?_roundf+1
  4515  00293E  C070  F04E         	movff	roundf@y+2,?_roundf+2
  4516  002942  C071  F04F         	movff	roundf@y+3,?_roundf+3
  4517  002946                     l1753:
  4518  002946  0012               	return		;funcret
  4519  002948                     __end_of_roundf:
  4520                           	opt callstack 0
  4521                           
  4522 ;; *************** function _probarMapeoDireccionCruces *****************
  4523 ;; Defined at:
  4524 ;;		line 1364 in file "main.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  caminoFinal     2    0[BANK1 ] PTR unsigned char 
  4527 ;;		 -> comportamientoBasico@caminoFinal(20), 
  4528 ;;  caminoActual    1    2[BANK1 ] unsigned char 
  4529 ;;  investigando    2    3[BANK1 ] PTR unsigned char 
  4530 ;;		 -> comportamientoBasico@investigandoCruce(1), 
  4531 ;;  posicionInvC    2    5[BANK1 ] PTR unsigned char 
  4532 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
  4533 ;;  mapear          2    7[BANK1 ] PTR unsigned char 
  4534 ;;		 -> comportamientoBasico@mapear(1), 
  4535 ;;  cruceDetecta    2    9[BANK1 ] PTR unsigned char 
  4536 ;;		 -> comportamientoBasico@cruceDetectado(1), 
  4537 ;;  contCaminosR    2   11[BANK1 ] PTR unsigned char 
  4538 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
  4539 ;;  cambioOrient    2   13[BANK1 ] PTR unsigned char 
  4540 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4552 ;;      Params:         0       0      15       0       0       0       0       0       0
  4553 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4554 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4555 ;;      Totals:         0       2      15       0       0       0       0       0       0
  4556 ;;Total ram usage:       17 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; Hardware stack levels required when called:   10
  4559 ;; This function calls:
  4560 ;;		_UART_printf
  4561 ;;		_sprintf
  4562 ;; This function is called by:
  4563 ;;		_comportamientoBasico
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text10
  4568  0045A8                     __ptext10:
  4569                           	opt callstack 0
  4570  0045A8                     _probarMapeoDireccionCruces:
  4571                           	opt callstack 19
  4572  0045A8                     
  4573                           ;main.c: 1364: void probarMapeoDireccionCruces(T_UBYTE* caminoFinal, T_UBYTE caminoActua
      +                          l, T_UBYTE* investigandoCruce,;main.c: 1365:         T_UBYTE* posicionInvCruce, T_UBYTE*
      +                           mapear, T_UBYTE* cruceDetectado, T_UBYTE* contCaminosRecorridos,;main.c: 1366:         
      +                          T_UBYTE* cambioOrientacionCarro) {;main.c: 1368:     *investigandoCruce = 0;
  4574  0045A8  C1E9  FFD9         	movff	probarMapeoDireccionCruces@investigandoCruce,fsr2l
  4575  0045AC  C1EA  FFDA         	movff	probarMapeoDireccionCruces@investigandoCruce+1,fsr2h
  4576  0045B0  0E00               	movlw	0
  4577  0045B2  6EDF               	movwf	indf2,c
  4578                           
  4579                           ;main.c: 1369:     *posicionInvCruce = 0;
  4580  0045B4  C1EB  FFD9         	movff	probarMapeoDireccionCruces@posicionInvCruce,fsr2l
  4581  0045B8  C1EC  FFDA         	movff	probarMapeoDireccionCruces@posicionInvCruce+1,fsr2h
  4582  0045BC  0E00               	movlw	0
  4583  0045BE  6EDF               	movwf	indf2,c
  4584                           
  4585                           ;main.c: 1370:     *mapear = 0;
  4586  0045C0  C1ED  FFD9         	movff	probarMapeoDireccionCruces@mapear,fsr2l
  4587  0045C4  C1EE  FFDA         	movff	probarMapeoDireccionCruces@mapear+1,fsr2h
  4588  0045C8  0E00               	movlw	0
  4589  0045CA  6EDF               	movwf	indf2,c
  4590                           
  4591                           ;main.c: 1371:     *cruceDetectado = 0;
  4592  0045CC  C1EF  FFD9         	movff	probarMapeoDireccionCruces@cruceDetectado,fsr2l
  4593  0045D0  C1F0  FFDA         	movff	probarMapeoDireccionCruces@cruceDetectado+1,fsr2h
  4594  0045D4  0E00               	movlw	0
  4595  0045D6  6EDF               	movwf	indf2,c
  4596                           
  4597                           ;main.c: 1373:     *contCaminosRecorridos = 0;
  4598  0045D8  C1F1  FFD9         	movff	probarMapeoDireccionCruces@contCaminosRecorridos,fsr2l
  4599  0045DC  C1F2  FFDA         	movff	probarMapeoDireccionCruces@contCaminosRecorridos+1,fsr2h
  4600  0045E0  0E00               	movlw	0
  4601  0045E2  6EDF               	movwf	indf2,c
  4602                           
  4603                           ;main.c: 1374:     *cambioOrientacionCarro = 0;
  4604  0045E4  C1F3  FFD9         	movff	probarMapeoDireccionCruces@cambioOrientacionCarro,fsr2l
  4605  0045E8  C1F4  FFDA         	movff	probarMapeoDireccionCruces@cambioOrientacionCarro+1,fsr2h
  4606  0045EC  0E00               	movlw	0
  4607  0045EE  6EDF               	movwf	indf2,c
  4608  0045F0                     
  4609                           ;main.c: 1376:     if (!caminoEncontrado) {
  4610  0045F0  5059               	movf	_caminoEncontrado^0,w,c
  4611  0045F2  A4D8               	btfss	status,2,c
  4612  0045F4  EFFE  F022         	goto	u11881
  4613  0045F8  EF00  F023         	goto	u11880
  4614  0045FC                     u11881:
  4615  0045FC  EF50  F023         	goto	l740
  4616  004600                     u11880:
  4617  004600                     
  4618                           ;main.c: 1378:         caminoFinal[numMovimientosTotales++] = caminoActual;
  4619  004600  0101               	movlb	1	; () banked
  4620  004602  5141               	movf	_numMovimientosTotales& (0+255),w,b
  4621  004604  25E6               	addwf	probarMapeoDireccionCruces@caminoFinal& (0+255),w,b
  4622  004606  6ED9               	movwf	fsr2l,c
  4623  004608  0E00               	movlw	0
  4624  00460A  21E7               	addwfc	(probarMapeoDireccionCruces@caminoFinal+1)& (0+255),w,b
  4625  00460C  6EDA               	movwf	fsr2h,c
  4626  00460E  C1E8  FFDF         	movff	probarMapeoDireccionCruces@caminoActual,indf2
  4627  004612                     
  4628                           ; BSR set to: 1
  4629  004612  2B41               	incf	_numMovimientosTotales& (0+255),f,b
  4630                           
  4631                           ;main.c: 1380:         switch (caminoActual) {
  4632  004614  EF30  F023         	goto	l10590
  4633  004618                     l10582:
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;main.c: 1382:                 sprintf(buffer, "\r\nEl camino ENFRENTE se acerca mas al 
      +                          destino\r\n");
  4637  004618  0E92               	movlw	low _buffer
  4638  00461A  6FE7               	movwf	sprintf@s& (0+255),b
  4639  00461C  0E01               	movlw	high _buffer
  4640  00461E  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  4641  004620  0EE4               	movlw	low STR_20
  4642  004622  6FE9               	movwf	sprintf@fmt& (0+255),b
  4643  004624  0E7D               	movlw	high STR_20
  4644  004626  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  4645  004628  ECE4  F029         	call	_sprintf	;wreg free
  4646                           
  4647                           ;main.c: 1383:                 break;
  4648  00462C  EF4A  F023         	goto	l10592
  4649  004630                     l10584:
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;main.c: 1386:                 sprintf(buffer, "\r\nEl camino IZQUIERDA se acerca mas al
      +                           destino\r\n");
  4653  004630  0E92               	movlw	low _buffer
  4654  004632  6FE7               	movwf	sprintf@s& (0+255),b
  4655  004634  0E01               	movlw	high _buffer
  4656  004636  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  4657  004638  0EB3               	movlw	low STR_21
  4658  00463A  6FE9               	movwf	sprintf@fmt& (0+255),b
  4659  00463C  0E7D               	movlw	high STR_21
  4660  00463E  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  4661  004640  ECE4  F029         	call	_sprintf	;wreg free
  4662                           
  4663                           ;main.c: 1387:                 break;
  4664  004644  EF4A  F023         	goto	l10592
  4665  004648                     l10586:
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;main.c: 1390:                 sprintf(buffer, "\r\nEl camino DERECHA se acerca mas al d
      +                          estino\r\n");
  4669  004648  0E92               	movlw	low _buffer
  4670  00464A  6FE7               	movwf	sprintf@s& (0+255),b
  4671  00464C  0E01               	movlw	high _buffer
  4672  00464E  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  4673  004650  0E14               	movlw	low STR_22
  4674  004652  6FE9               	movwf	sprintf@fmt& (0+255),b
  4675  004654  0E7E               	movlw	high STR_22
  4676  004656  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  4677  004658  ECE4  F029         	call	_sprintf	;wreg free
  4678                           
  4679                           ;main.c: 1391:                 break;
  4680  00465C  EF4A  F023         	goto	l10592
  4681  004660                     l10590:
  4682                           
  4683                           ; BSR set to: 1
  4684  004660  51E8               	movf	probarMapeoDireccionCruces@caminoActual& (0+255),w,b
  4685  004662  0100               	movlb	0	; () banked
  4686  004664  6FFB               	movwf	??_probarMapeoDireccionCruces& (0+255),b
  4687  004666  6BFC               	clrf	(??_probarMapeoDireccionCruces+1)& (0+255),b
  4688                           
  4689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4690                           ; Switch size 1, requested type "simple"
  4691                           ; Number of cases is 1, Range of values is 0 to 0
  4692                           ; switch strategies available:
  4693                           ; Name         Instructions Cycles
  4694                           ; simple_byte            4     3 (average)
  4695                           ;	Chosen strategy is simple_byte
  4696  004668  51FC               	movf	(??_probarMapeoDireccionCruces+1)& (0+255),w,b
  4697  00466A  0A00               	xorlw	0	; case 0
  4698  00466C  B4D8               	btfsc	status,2,c
  4699  00466E  EF3B  F023         	goto	l11388
  4700  004672  EF4A  F023         	goto	l10592
  4701  004676                     l11388:
  4702                           
  4703                           ; BSR set to: 0
  4704                           ; Switch size 1, requested type "simple"
  4705                           ; Number of cases is 3, Range of values is 1 to 3
  4706                           ; switch strategies available:
  4707                           ; Name         Instructions Cycles
  4708                           ; simple_byte           10     6 (average)
  4709                           ;	Chosen strategy is simple_byte
  4710  004676  51FB               	movf	??_probarMapeoDireccionCruces& (0+255),w,b
  4711  004678  0A01               	xorlw	1	; case 1
  4712  00467A  B4D8               	btfsc	status,2,c
  4713  00467C  EF0C  F023         	goto	l10582
  4714  004680  0A03               	xorlw	3	; case 2
  4715  004682  B4D8               	btfsc	status,2,c
  4716  004684  EF18  F023         	goto	l10584
  4717  004688  0A01               	xorlw	1	; case 3
  4718  00468A  B4D8               	btfsc	status,2,c
  4719  00468C  EF24  F023         	goto	l10586
  4720  004690  EF4A  F023         	goto	l10592
  4721  004694                     l10592:
  4722                           
  4723                           ;main.c: 1394:         UART_printf(buffer);
  4724  004694  0E92               	movlw	low _buffer
  4725  004696  6E07               	movwf	UART_printf@cadena^0,c
  4726  004698  0E01               	movlw	high _buffer
  4727  00469A  6E08               	movwf	(UART_printf@cadena+1)^0,c
  4728  00469C  ECDA  F028         	call	_UART_printf	;wreg free
  4729  0046A0                     l740:
  4730  0046A0  0012               	return		;funcret
  4731  0046A2                     __end_of_probarMapeoDireccionCruces:
  4732                           	opt callstack 0
  4733                           
  4734 ;; *************** function _moverCarrito *****************
  4735 ;; Defined at:
  4736 ;;		line 561 in file "main.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  espejearCarr    1    wreg     unsigned char 
  4739 ;;  carroEspejea    2   40[BANK0 ] PTR unsigned char 
  4740 ;;		 -> comportamientoBasico@carroEspejeado(1), 
  4741 ;;  avanceRectoL    2   42[BANK0 ] PTR unsigned char 
  4742 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  espejearCarr    1   46[BANK0 ] unsigned char 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1    wreg      void 
  4747 ;; Registers used:
  4748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4754 ;;      Params:         0       4       0       0       0       0       0       0       0
  4755 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4756 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4757 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4758 ;;Total ram usage:        7 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    8
  4761 ;; This function calls:
  4762 ;;		_forzarAvanceRecto
  4763 ;;		_forzarEspejeo
  4764 ;; This function is called by:
  4765 ;;		_comportamientoBasico
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text11
  4770  004194                     __ptext11:
  4771                           	opt callstack 0
  4772  004194                     _moverCarrito:
  4773                           	opt callstack 21
  4774                           
  4775                           ;incstack = 0
  4776                           ;moverCarrito@espejearCarroY stored from wreg
  4777  004194  0100               	movlb	0	; () banked
  4778  004196  6F8E               	movwf	moverCarrito@espejearCarroY& (0+255),b
  4779  004198                     
  4780                           ;main.c: 563:     switch (mouse.curr_state) {
  4781  004198  EF2F  F021         	goto	l10176
  4782  00419C                     l442:
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;main.c: 567:             LATB4 = 1;
  4786  00419C  888A               	bsf	3978,4,c	;volatile
  4787                           
  4788                           ;main.c: 568:             LATB5 = 0;
  4789  00419E  9A8A               	bcf	3978,5,c	;volatile
  4790                           
  4791                           ;main.c: 569:             LATB6 = 1;
  4792  0041A0  8C8A               	bsf	3978,6,c	;volatile
  4793                           
  4794                           ;main.c: 570:             LATB7 = 0;
  4795  0041A2  9E8A               	bcf	3978,7,c	;volatile
  4796  0041A4                     
  4797                           ; BSR set to: 0
  4798                           ;main.c: 572:             if (*avanceRectoLargo) {
  4799  0041A4  C08A  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4800  0041A8  C08B  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4801  0041AC  50DF               	movf	indf2,w,c
  4802  0041AE  B4D8               	btfsc	status,2,c
  4803  0041B0  EFDC  F020         	goto	u11431
  4804  0041B4  EFDE  F020         	goto	u11430
  4805  0041B8                     u11431:
  4806  0041B8  EFF1  F020         	goto	l10158
  4807  0041BC                     u11430:
  4808  0041BC                     
  4809                           ; BSR set to: 0
  4810                           ;main.c: 573:                 *avanceRectoLargo = 0;
  4811  0041BC  C08A  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4812  0041C0  C08B  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4813  0041C4  0E00               	movlw	0
  4814  0041C6  6EDF               	movwf	indf2,c
  4815  0041C8                     
  4816                           ; BSR set to: 0
  4817                           ;main.c: 574:                 _delay((unsigned long)((410 * 2)*(4000000/4000.0)));
  4818  0041C8  0E05               	movlw	5
  4819  0041CA  0100               	movlb	0	; () banked
  4820  0041CC  6F8D               	movwf	(??_moverCarrito+1)& (0+255),b
  4821  0041CE  0E29               	movlw	41
  4822  0041D0  6F8C               	movwf	??_moverCarrito& (0+255),b
  4823  0041D2  0EEA               	movlw	234
  4824  0041D4                     u12257:
  4825  0041D4  2EE8               	decfsz	wreg,f,c
  4826  0041D6  D7FE               	bra	u12257
  4827  0041D8  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4828  0041DA  D7FC               	bra	u12257
  4829  0041DC  2F8D               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4830  0041DE  D7FA               	bra	u12257
  4831  0041E0  F000               	nop	
  4832  0041E2                     l10158:
  4833                           
  4834                           ;main.c: 578:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  4835  0041E2  0E48               	movlw	72
  4836  0041E4  0100               	movlb	0	; () banked
  4837  0041E6  6F8C               	movwf	??_moverCarrito& (0+255),b
  4838  0041E8  0E6C               	movlw	108
  4839  0041EA                     u12267:
  4840  0041EA  2EE8               	decfsz	wreg,f,c
  4841  0041EC  D7FE               	bra	u12267
  4842  0041EE  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4843  0041F0  D7FC               	bra	u12267
  4844  0041F2  F000               	nop	
  4845  0041F4  EF4E  F021         	goto	l451
  4846  0041F8                     l10160:
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;main.c: 584:             if (espejearCarroY) {
  4850  0041F8  518E               	movf	moverCarrito@espejearCarroY& (0+255),w,b
  4851  0041FA  B4D8               	btfsc	status,2,c
  4852  0041FC  EF02  F021         	goto	u11441
  4853  004200  EF04  F021         	goto	u11440
  4854  004204                     u11441:
  4855  004204  EF0E  F021         	goto	l447
  4856  004208                     u11440:
  4857  004208                     
  4858                           ; BSR set to: 0
  4859                           ;main.c: 585:                 forzarEspejeo();
  4860  004208  EC3B  F02B         	call	_forzarEspejeo	;wreg free
  4861  00420C                     
  4862                           ;main.c: 586:                 *carroEspejeado = 1;
  4863  00420C  C088  FFD9         	movff	moverCarrito@carroEspejeado,fsr2l
  4864  004210  C089  FFDA         	movff	moverCarrito@carroEspejeado+1,fsr2h
  4865  004214  0E01               	movlw	1
  4866  004216  6EDF               	movwf	indf2,c
  4867                           
  4868                           ;main.c: 587:             } else {
  4869  004218  EF4E  F021         	goto	l451
  4870  00421C                     l447:
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;main.c: 588:                 LATB4 = 0;
  4874  00421C  988A               	bcf	3978,4,c	;volatile
  4875                           
  4876                           ;main.c: 589:                 LATB5 = 0;
  4877  00421E  9A8A               	bcf	3978,5,c	;volatile
  4878                           
  4879                           ;main.c: 590:                 LATB6 = 1;
  4880  004220  8C8A               	bsf	3978,6,c	;volatile
  4881                           
  4882                           ;main.c: 591:                 LATB7 = 0;
  4883  004222  9E8A               	bcf	3978,7,c	;volatile
  4884  004224                     l10166:
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;main.c: 592:                 _delay((unsigned long)((410)*(4000000/4000.0)));
  4888  004224  0E03               	movlw	3
  4889  004226  0100               	movlb	0	; () banked
  4890  004228  6F8D               	movwf	(??_moverCarrito+1)& (0+255),b
  4891  00422A  0E15               	movlw	21
  4892  00422C  6F8C               	movwf	??_moverCarrito& (0+255),b
  4893  00422E  0E73               	movlw	115
  4894  004230                     u12277:
  4895  004230  2EE8               	decfsz	wreg,f,c
  4896  004232  D7FE               	bra	u12277
  4897  004234  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4898  004236  D7FC               	bra	u12277
  4899  004238  2F8D               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4900  00423A  D7FA               	bra	u12277
  4901  00423C  D000               	nop2	
  4902  00423E                     
  4903                           ;main.c: 593:                 forzarAvanceRecto();
  4904  00423E  EC6F  F02C         	call	_forzarAvanceRecto	;wreg free
  4905  004242  EF4E  F021         	goto	l451
  4906  004246                     l449:
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;main.c: 601:             LATB4 = 1;
  4910  004246  888A               	bsf	3978,4,c	;volatile
  4911                           
  4912                           ;main.c: 602:             LATB5 = 0;
  4913  004248  9A8A               	bcf	3978,5,c	;volatile
  4914                           
  4915                           ;main.c: 603:             LATB6 = 0;
  4916  00424A  9C8A               	bcf	3978,6,c	;volatile
  4917                           
  4918                           ;main.c: 604:             LATB7 = 0;
  4919  00424C  9E8A               	bcf	3978,7,c	;volatile
  4920  00424E  EF12  F021         	goto	l10166
  4921  004252                     l450:
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;main.c: 613:             LATB4 = 0;
  4925  004252  988A               	bcf	3978,4,c	;volatile
  4926                           
  4927                           ;main.c: 614:             LATB5 = 0;
  4928  004254  9A8A               	bcf	3978,5,c	;volatile
  4929                           
  4930                           ;main.c: 615:             LATB6 = 0;
  4931  004256  9C8A               	bcf	3978,6,c	;volatile
  4932                           
  4933                           ;main.c: 616:             LATB7 = 0;
  4934  004258  9E8A               	bcf	3978,7,c	;volatile
  4935                           
  4936                           ;main.c: 618:             break;
  4937  00425A  EF4E  F021         	goto	l451
  4938  00425E                     l10176:
  4939  00425E  0101               	movlb	1	; () banked
  4940  004260  5136               	movf	_mouse& (0+255),w,b
  4941  004262  0100               	movlb	0	; () banked
  4942  004264  6F8C               	movwf	??_moverCarrito& (0+255),b
  4943  004266  6B8D               	clrf	(??_moverCarrito+1)& (0+255),b
  4944                           
  4945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4946                           ; Switch size 1, requested type "simple"
  4947                           ; Number of cases is 1, Range of values is 0 to 0
  4948                           ; switch strategies available:
  4949                           ; Name         Instructions Cycles
  4950                           ; simple_byte            4     3 (average)
  4951                           ;	Chosen strategy is simple_byte
  4952  004268  518D               	movf	(??_moverCarrito+1)& (0+255),w,b
  4953  00426A  0A00               	xorlw	0	; case 0
  4954  00426C  B4D8               	btfsc	status,2,c
  4955  00426E  EF3B  F021         	goto	l11390
  4956  004272  EF4E  F021         	goto	l451
  4957  004276                     l11390:
  4958                           
  4959                           ; BSR set to: 0
  4960                           ; Switch size 1, requested type "simple"
  4961                           ; Number of cases is 4, Range of values is 1 to 4
  4962                           ; switch strategies available:
  4963                           ; Name         Instructions Cycles
  4964                           ; simple_byte           13     7 (average)
  4965                           ;	Chosen strategy is simple_byte
  4966  004276  518C               	movf	??_moverCarrito& (0+255),w,b
  4967  004278  0A01               	xorlw	1	; case 1
  4968  00427A  B4D8               	btfsc	status,2,c
  4969  00427C  EFCE  F020         	goto	l442
  4970  004280  0A03               	xorlw	3	; case 2
  4971  004282  B4D8               	btfsc	status,2,c
  4972  004284  EFFC  F020         	goto	l10160
  4973  004288  0A01               	xorlw	1	; case 3
  4974  00428A  B4D8               	btfsc	status,2,c
  4975  00428C  EF23  F021         	goto	l449
  4976  004290  0A07               	xorlw	7	; case 4
  4977  004292  B4D8               	btfsc	status,2,c
  4978  004294  EF29  F021         	goto	l450
  4979  004298  EF4E  F021         	goto	l451
  4980  00429C                     l451:
  4981  00429C  0012               	return		;funcret
  4982  00429E                     __end_of_moverCarrito:
  4983                           	opt callstack 0
  4984                           
  4985 ;; *************** function _forzarEspejeo *****************
  4986 ;; Defined at:
  4987 ;;		line 519 in file "main.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;		None
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      void 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5001 ;;      Params:         0       0       0       0       0       0       0       0       0
  5002 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5004 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5005 ;;Total ram usage:        0 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    7
  5008 ;; This function calls:
  5009 ;;		___flge
  5010 ;;		_alinearDespuesCallejon
  5011 ;;		_forzarEspejeoDerecha
  5012 ;;		_forzarEspejeoIzquierda
  5013 ;; This function is called by:
  5014 ;;		_moverCarrito
  5015 ;;		_finalizarRecorrido
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	text12
  5020  005676                     __ptext12:
  5021                           	opt callstack 0
  5022  005676                     _forzarEspejeo:
  5023                           	opt callstack 21
  5024  005676                     
  5025                           ;main.c: 521:     if (sensorIzquierda > sensorDerecha)
  5026  005676  C128  F034         	movff	_sensorDerecha,___flge@ff1
  5027  00567A  C129  F035         	movff	_sensorDerecha+1,___flge@ff1+1
  5028  00567E  C12A  F036         	movff	_sensorDerecha+2,___flge@ff1+2
  5029  005682  C12B  F037         	movff	_sensorDerecha+3,___flge@ff1+3
  5030  005686  C124  F038         	movff	_sensorIzquierda,___flge@ff2
  5031  00568A  C125  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
  5032  00568E  C126  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
  5033  005692  C127  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
  5034  005696  ECD3  F021         	call	___flge	;wreg free
  5035  00569A  B0D8               	btfsc	status,0,c
  5036  00569C  EF52  F02B         	goto	u11321
  5037  0056A0  EF54  F02B         	goto	u11320
  5038  0056A4                     u11321:
  5039  0056A4  EF58  F02B         	goto	l10032
  5040  0056A8                     u11320:
  5041  0056A8                     
  5042                           ;main.c: 522:         forzarEspejeoIzquierda();
  5043  0056A8  ECAD  F02A         	call	_forzarEspejeoIzquierda	;wreg free
  5044  0056AC  EF5A  F02B         	goto	l426
  5045  0056B0                     l10032:
  5046                           
  5047                           ;main.c: 524:         forzarEspejeoDerecha();
  5048  0056B0  ECD1  F02A         	call	_forzarEspejeoDerecha	;wreg free
  5049  0056B4                     l426:
  5050                           
  5051                           ;main.c: 526:     alinearDespuesCallejon();
  5052  0056B4  EC51  F023         	call	_alinearDespuesCallejon	;wreg free
  5053  0056B8  0012               	return		;funcret
  5054  0056BA                     __end_of_forzarEspejeo:
  5055                           	opt callstack 0
  5056                           
  5057 ;; *************** function _forzarEspejeoIzquierda *****************
  5058 ;; Defined at:
  5059 ;;		line 491 in file "main.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5075 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5076 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5077 ;;Total ram usage:        1 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    6
  5080 ;; This function calls:
  5081 ;;		_forzarGiroIzquierda
  5082 ;;		_forzarParoAuto
  5083 ;;		_forzarReversa
  5084 ;;		_velocidadEstandar
  5085 ;; This function is called by:
  5086 ;;		_forzarEspejeo
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text13
  5091  00555A                     __ptext13:
  5092                           	opt callstack 0
  5093  00555A                     _forzarEspejeoIzquierda:
  5094                           	opt callstack 21
  5095  00555A                     
  5096                           ;main.c: 493:     forzarParoAuto();
  5097  00555A  ECA0  F02C         	call	_forzarParoAuto	;wreg free
  5098  00555E                     
  5099                           ;main.c: 494:     velocidadEstandar();
  5100  00555E  EC25  F02C         	call	_velocidadEstandar	;wreg free
  5101  005562                     
  5102                           ;main.c: 495:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5103  005562  0E82               	movlw	130
  5104  005564  6E54               	movwf	??_forzarEspejeoIzquierda^0,c
  5105  005566  0EDE               	movlw	222
  5106  005568                     u12287:
  5107  005568  2EE8               	decfsz	wreg,f,c
  5108  00556A  D7FE               	bra	u12287
  5109  00556C  2E54               	decfsz	??_forzarEspejeoIzquierda^0,f,c
  5110  00556E  D7FC               	bra	u12287
  5111  005570                     
  5112                           ;main.c: 496:     forzarGiroIzquierda();
  5113  005570  EC80  F02C         	call	_forzarGiroIzquierda	;wreg free
  5114  005574                     
  5115                           ;main.c: 497:     forzarParoAuto();
  5116  005574  ECA0  F02C         	call	_forzarParoAuto	;wreg free
  5117  005578                     
  5118                           ;main.c: 498:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5119  005578  0E82               	movlw	130
  5120  00557A  6E54               	movwf	??_forzarEspejeoIzquierda^0,c
  5121  00557C  0EDE               	movlw	222
  5122  00557E                     u12297:
  5123  00557E  2EE8               	decfsz	wreg,f,c
  5124  005580  D7FE               	bra	u12297
  5125  005582  2E54               	decfsz	??_forzarEspejeoIzquierda^0,f,c
  5126  005584  D7FC               	bra	u12297
  5127  005586                     
  5128                           ;main.c: 499:     forzarReversa();
  5129  005586  EC5E  F02C         	call	_forzarReversa	;wreg free
  5130  00558A                     
  5131                           ;main.c: 500:     forzarParoAuto();
  5132  00558A  ECA0  F02C         	call	_forzarParoAuto	;wreg free
  5133  00558E                     
  5134                           ;main.c: 501:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5135  00558E  0E82               	movlw	130
  5136  005590  6E54               	movwf	??_forzarEspejeoIzquierda^0,c
  5137  005592  0EDE               	movlw	222
  5138  005594                     u12307:
  5139  005594  2EE8               	decfsz	wreg,f,c
  5140  005596  D7FE               	bra	u12307
  5141  005598  2E54               	decfsz	??_forzarEspejeoIzquierda^0,f,c
  5142  00559A  D7FC               	bra	u12307
  5143  00559C                     
  5144                           ;main.c: 502:     forzarGiroIzquierda();
  5145  00559C  EC80  F02C         	call	_forzarGiroIzquierda	;wreg free
  5146  0055A0  0012               	return		;funcret
  5147  0055A2                     __end_of_forzarEspejeoIzquierda:
  5148                           	opt callstack 0
  5149                           
  5150 ;; *************** function _forzarGiroIzquierda *****************
  5151 ;; Defined at:
  5152 ;;		line 473 in file "main.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		wreg
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5166 ;;      Params:         0       0       0       0       0       0       0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5168 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5169 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5170 ;;Total ram usage:        2 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    2
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_forzarEspejeoIzquierda
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text14
  5181  005900                     __ptext14:
  5182                           	opt callstack 0
  5183  005900                     _forzarGiroIzquierda:
  5184                           	opt callstack 24
  5185  005900                     
  5186                           ;main.c: 474:     LATB4 = 0;
  5187  005900  988A               	bcf	3978,4,c	;volatile
  5188                           
  5189                           ;main.c: 475:     LATB5 = 0;
  5190  005902  9A8A               	bcf	3978,5,c	;volatile
  5191                           
  5192                           ;main.c: 476:     LATB6 = 1;
  5193  005904  8C8A               	bsf	3978,6,c	;volatile
  5194                           
  5195                           ;main.c: 477:     LATB7 = 0;
  5196  005906  9E8A               	bcf	3978,7,c	;volatile
  5197  005908                     
  5198                           ;main.c: 478:     _delay((unsigned long)((410)*(4000000/4000.0)));
  5199  005908  0E03               	movlw	3
  5200  00590A  6E07               	movwf	(??_forzarGiroIzquierda+1)^0,c
  5201  00590C  0E15               	movlw	21
  5202  00590E  6E06               	movwf	??_forzarGiroIzquierda^0,c
  5203  005910  0E74               	movlw	116
  5204  005912                     u12317:
  5205  005912  2EE8               	decfsz	wreg,f,c
  5206  005914  D7FE               	bra	u12317
  5207  005916  2E06               	decfsz	??_forzarGiroIzquierda^0,f,c
  5208  005918  D7FC               	bra	u12317
  5209  00591A  2E07               	decfsz	(??_forzarGiroIzquierda+1)^0,f,c
  5210  00591C  D7FA               	bra	u12317
  5211  00591E  0012               	return		;funcret
  5212  005920                     __end_of_forzarGiroIzquierda:
  5213                           	opt callstack 0
  5214                           
  5215 ;; *************** function _forzarEspejeoDerecha *****************
  5216 ;; Defined at:
  5217 ;;		line 505 in file "main.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;		None
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      void 
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5231 ;;      Params:         0       0       0       0       0       0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5233 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5234 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5235 ;;Total ram usage:        1 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    6
  5238 ;; This function calls:
  5239 ;;		_forzarGiroDerecha
  5240 ;;		_forzarParoAuto
  5241 ;;		_forzarReversa
  5242 ;;		_velocidadEstandar
  5243 ;; This function is called by:
  5244 ;;		_forzarEspejeo
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text15
  5249  0055A2                     __ptext15:
  5250                           	opt callstack 0
  5251  0055A2                     _forzarEspejeoDerecha:
  5252                           	opt callstack 21
  5253  0055A2                     
  5254                           ;main.c: 507:     forzarParoAuto();
  5255  0055A2  ECA0  F02C         	call	_forzarParoAuto	;wreg free
  5256  0055A6                     
  5257                           ;main.c: 508:     velocidadEstandar();
  5258  0055A6  EC25  F02C         	call	_velocidadEstandar	;wreg free
  5259  0055AA                     
  5260                           ;main.c: 509:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5261  0055AA  0E82               	movlw	130
  5262  0055AC  6E54               	movwf	??_forzarEspejeoDerecha^0,c
  5263  0055AE  0EDE               	movlw	222
  5264  0055B0                     u12327:
  5265  0055B0  2EE8               	decfsz	wreg,f,c
  5266  0055B2  D7FE               	bra	u12327
  5267  0055B4  2E54               	decfsz	??_forzarEspejeoDerecha^0,f,c
  5268  0055B6  D7FC               	bra	u12327
  5269  0055B8                     
  5270                           ;main.c: 510:     forzarGiroDerecha();
  5271  0055B8  EC90  F02C         	call	_forzarGiroDerecha	;wreg free
  5272  0055BC                     
  5273                           ;main.c: 511:     forzarParoAuto();
  5274  0055BC  ECA0  F02C         	call	_forzarParoAuto	;wreg free
  5275  0055C0                     
  5276                           ;main.c: 512:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5277  0055C0  0E82               	movlw	130
  5278  0055C2  6E54               	movwf	??_forzarEspejeoDerecha^0,c
  5279  0055C4  0EDE               	movlw	222
  5280  0055C6                     u12337:
  5281  0055C6  2EE8               	decfsz	wreg,f,c
  5282  0055C8  D7FE               	bra	u12337
  5283  0055CA  2E54               	decfsz	??_forzarEspejeoDerecha^0,f,c
  5284  0055CC  D7FC               	bra	u12337
  5285  0055CE                     
  5286                           ;main.c: 513:     forzarReversa();
  5287  0055CE  EC5E  F02C         	call	_forzarReversa	;wreg free
  5288  0055D2                     
  5289                           ;main.c: 514:     forzarParoAuto();
  5290  0055D2  ECA0  F02C         	call	_forzarParoAuto	;wreg free
  5291  0055D6                     
  5292                           ;main.c: 515:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5293  0055D6  0E82               	movlw	130
  5294  0055D8  6E54               	movwf	??_forzarEspejeoDerecha^0,c
  5295  0055DA  0EDE               	movlw	222
  5296  0055DC                     u12347:
  5297  0055DC  2EE8               	decfsz	wreg,f,c
  5298  0055DE  D7FE               	bra	u12347
  5299  0055E0  2E54               	decfsz	??_forzarEspejeoDerecha^0,f,c
  5300  0055E2  D7FC               	bra	u12347
  5301  0055E4                     
  5302                           ;main.c: 516:     forzarGiroDerecha();
  5303  0055E4  EC90  F02C         	call	_forzarGiroDerecha	;wreg free
  5304  0055E8  0012               	return		;funcret
  5305  0055EA                     __end_of_forzarEspejeoDerecha:
  5306                           	opt callstack 0
  5307                           
  5308 ;; *************** function _forzarReversa *****************
  5309 ;; Defined at:
  5310 ;;		line 453 in file "main.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;		None
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  1    wreg      void 
  5317 ;; Registers used:
  5318 ;;		wreg
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5324 ;;      Params:         0       0       0       0       0       0       0       0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5326 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5327 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5328 ;;Total ram usage:        2 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:    2
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_forzarEspejeoIzquierda
  5335 ;;		_forzarEspejeoDerecha
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text16
  5340  0058BC                     __ptext16:
  5341                           	opt callstack 0
  5342  0058BC                     _forzarReversa:
  5343                           	opt callstack 24
  5344  0058BC                     
  5345                           ;main.c: 454:     LATB4 = 0;
  5346  0058BC  988A               	bcf	3978,4,c	;volatile
  5347                           
  5348                           ;main.c: 455:     LATB5 = 1;
  5349  0058BE  8A8A               	bsf	3978,5,c	;volatile
  5350                           
  5351                           ;main.c: 456:     LATB6 = 0;
  5352  0058C0  9C8A               	bcf	3978,6,c	;volatile
  5353                           
  5354                           ;main.c: 457:     LATB7 = 1;
  5355  0058C2  8E8A               	bsf	3978,7,c	;volatile
  5356  0058C4                     
  5357                           ;main.c: 459:     _delay((unsigned long)((400)*(4000000/4000.0)));
  5358  0058C4  0E03               	movlw	3
  5359  0058C6  6E07               	movwf	(??_forzarReversa+1)^0,c
  5360  0058C8  0E08               	movlw	8
  5361  0058CA  6E06               	movwf	??_forzarReversa^0,c
  5362  0058CC  0E77               	movlw	119
  5363  0058CE                     u12357:
  5364  0058CE  2EE8               	decfsz	wreg,f,c
  5365  0058D0  D7FE               	bra	u12357
  5366  0058D2  2E06               	decfsz	??_forzarReversa^0,f,c
  5367  0058D4  D7FC               	bra	u12357
  5368  0058D6  2E07               	decfsz	(??_forzarReversa+1)^0,f,c
  5369  0058D8  D7FA               	bra	u12357
  5370  0058DA  F000               	nop	
  5371  0058DC  0012               	return		;funcret
  5372  0058DE                     __end_of_forzarReversa:
  5373                           	opt callstack 0
  5374                           
  5375 ;; *************** function _forzarGiroDerecha *****************
  5376 ;; Defined at:
  5377 ;;		line 482 in file "main.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;		None
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;		None
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5391 ;;      Params:         0       0       0       0       0       0       0       0       0
  5392 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5393 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5394 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5395 ;;Total ram usage:        2 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:    2
  5398 ;; This function calls:
  5399 ;;		Nothing
  5400 ;; This function is called by:
  5401 ;;		_forzarEspejeoDerecha
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text17
  5406  005920                     __ptext17:
  5407                           	opt callstack 0
  5408  005920                     _forzarGiroDerecha:
  5409                           	opt callstack 24
  5410  005920                     
  5411                           ;main.c: 483:     LATB4 = 1;
  5412  005920  888A               	bsf	3978,4,c	;volatile
  5413                           
  5414                           ;main.c: 484:     LATB5 = 0;
  5415  005922  9A8A               	bcf	3978,5,c	;volatile
  5416                           
  5417                           ;main.c: 485:     LATB6 = 0;
  5418  005924  9C8A               	bcf	3978,6,c	;volatile
  5419                           
  5420                           ;main.c: 486:     LATB7 = 0;
  5421  005926  9E8A               	bcf	3978,7,c	;volatile
  5422  005928                     
  5423                           ;main.c: 487:     _delay((unsigned long)((410)*(4000000/4000.0)));
  5424  005928  0E03               	movlw	3
  5425  00592A  6E07               	movwf	(??_forzarGiroDerecha+1)^0,c
  5426  00592C  0E15               	movlw	21
  5427  00592E  6E06               	movwf	??_forzarGiroDerecha^0,c
  5428  005930  0E74               	movlw	116
  5429  005932                     u12367:
  5430  005932  2EE8               	decfsz	wreg,f,c
  5431  005934  D7FE               	bra	u12367
  5432  005936  2E06               	decfsz	??_forzarGiroDerecha^0,f,c
  5433  005938  D7FC               	bra	u12367
  5434  00593A  2E07               	decfsz	(??_forzarGiroDerecha+1)^0,f,c
  5435  00593C  D7FA               	bra	u12367
  5436  00593E  0012               	return		;funcret
  5437  005940                     __end_of_forzarGiroDerecha:
  5438                           	opt callstack 0
  5439                           
  5440 ;; *************** function _alinearDespuesCallejon *****************
  5441 ;; Defined at:
  5442 ;;		line 529 in file "main.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;		None
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;		None
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  1    wreg      void 
  5449 ;; Registers used:
  5450 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5456 ;;      Params:         0       0       0       0       0       0       0       0       0
  5457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5458 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5459 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5460 ;;Total ram usage:        1 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    6
  5463 ;; This function calls:
  5464 ;;		___flge
  5465 ;;		_forzarParoAuto
  5466 ;;		_leerSensores
  5467 ;;		_velocidadEstandar
  5468 ;; This function is called by:
  5469 ;;		_comportamientoBasico
  5470 ;;		_forzarEspejeo
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text18
  5475  0046A2                     __ptext18:
  5476                           	opt callstack 0
  5477  0046A2                     _alinearDespuesCallejon:
  5478                           	opt callstack 21
  5479  0046A2                     
  5480                           ;main.c: 531:     forzarParoAuto();
  5481  0046A2  ECA0  F02C         	call	_forzarParoAuto	;wreg free
  5482  0046A6                     
  5483                           ;main.c: 532:     velocidadEstandar();
  5484  0046A6  EC25  F02C         	call	_velocidadEstandar	;wreg free
  5485  0046AA                     
  5486                           ;main.c: 533:     leerSensores();
  5487  0046AA  EC23  F01E         	call	_leerSensores	;wreg free
  5488  0046AE                     
  5489                           ;main.c: 535:     if (sensorIzquierda > sensorDerecha) {
  5490  0046AE  C128  F034         	movff	_sensorDerecha,___flge@ff1
  5491  0046B2  C129  F035         	movff	_sensorDerecha+1,___flge@ff1+1
  5492  0046B6  C12A  F036         	movff	_sensorDerecha+2,___flge@ff1+2
  5493  0046BA  C12B  F037         	movff	_sensorDerecha+3,___flge@ff1+3
  5494  0046BE  C124  F038         	movff	_sensorIzquierda,___flge@ff2
  5495  0046C2  C125  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
  5496  0046C6  C126  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
  5497  0046CA  C127  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
  5498  0046CE  ECD3  F021         	call	___flge	;wreg free
  5499  0046D2  B0D8               	btfsc	status,0,c
  5500  0046D4  EF6E  F023         	goto	u11151
  5501  0046D8  EF70  F023         	goto	u11150
  5502  0046DC                     u11151:
  5503  0046DC  EFA7  F023         	goto	l9864
  5504  0046E0                     u11150:
  5505  0046E0  EF7F  F023         	goto	l9858
  5506  0046E4                     l432:
  5507                           
  5508                           ;main.c: 537:             LATB4 = 0;
  5509  0046E4  988A               	bcf	3978,4,c	;volatile
  5510                           
  5511                           ;main.c: 538:             LATB5 = 0;
  5512  0046E6  9A8A               	bcf	3978,5,c	;volatile
  5513                           
  5514                           ;main.c: 539:             LATB6 = 1;
  5515  0046E8  8C8A               	bsf	3978,6,c	;volatile
  5516                           
  5517                           ;main.c: 540:             LATB7 = 0;
  5518  0046EA  9E8A               	bcf	3978,7,c	;volatile
  5519  0046EC                     
  5520                           ;main.c: 541:             _delay((unsigned long)((15)*(4000000/4000.0)));
  5521  0046EC  0E14               	movlw	20
  5522  0046EE  6E54               	movwf	??_alinearDespuesCallejon^0,c
  5523  0046F0  0E7A               	movlw	122
  5524  0046F2                     u12377:
  5525  0046F2  2EE8               	decfsz	wreg,f,c
  5526  0046F4  D7FE               	bra	u12377
  5527  0046F6  2E54               	decfsz	??_alinearDespuesCallejon^0,f,c
  5528  0046F8  D7FC               	bra	u12377
  5529  0046FA                     
  5530                           ;main.c: 542:             leerSensores();
  5531  0046FA  EC23  F01E         	call	_leerSensores	;wreg free
  5532  0046FE                     l9858:
  5533                           
  5534                           ;main.c: 536:         while (sensorEnfrente < 35) {
  5535  0046FE  C055  F034         	movff	_sensorEnfrente,___flge@ff1
  5536  004702  C056  F035         	movff	_sensorEnfrente+1,___flge@ff1+1
  5537  004706  C057  F036         	movff	_sensorEnfrente+2,___flge@ff1+2
  5538  00470A  C058  F037         	movff	_sensorEnfrente+3,___flge@ff1+3
  5539  00470E  0E00               	movlw	0
  5540  004710  6E38               	movwf	___flge@ff2^0,c
  5541  004712  0E00               	movlw	0
  5542  004714  6E39               	movwf	(___flge@ff2+1)^0,c
  5543  004716  0E0C               	movlw	12
  5544  004718  6E3A               	movwf	(___flge@ff2+2)^0,c
  5545  00471A  0E42               	movlw	66
  5546  00471C  6E3B               	movwf	(___flge@ff2+3)^0,c
  5547  00471E  ECD3  F021         	call	___flge	;wreg free
  5548  004722  A0D8               	btfss	status,0,c
  5549  004724  EF96  F023         	goto	u11161
  5550  004728  EF98  F023         	goto	u11160
  5551  00472C                     u11161:
  5552  00472C  EF72  F023         	goto	l432
  5553  004730                     u11160:
  5554  004730  EFC0  F023         	goto	l9866
  5555  004734                     l436:
  5556                           
  5557                           ;main.c: 548:             LATB4 = 1;
  5558  004734  888A               	bsf	3978,4,c	;volatile
  5559                           
  5560                           ;main.c: 549:             LATB5 = 0;
  5561  004736  9A8A               	bcf	3978,5,c	;volatile
  5562                           
  5563                           ;main.c: 550:             LATB6 = 0;
  5564  004738  9C8A               	bcf	3978,6,c	;volatile
  5565                           
  5566                           ;main.c: 551:             LATB7 = 0;
  5567  00473A  9E8A               	bcf	3978,7,c	;volatile
  5568  00473C                     
  5569                           ;main.c: 552:             _delay((unsigned long)((15)*(4000000/4000.0)));
  5570  00473C  0E14               	movlw	20
  5571  00473E  6E54               	movwf	??_alinearDespuesCallejon^0,c
  5572  004740  0E7A               	movlw	122
  5573  004742                     u12387:
  5574  004742  2EE8               	decfsz	wreg,f,c
  5575  004744  D7FE               	bra	u12387
  5576  004746  2E54               	decfsz	??_alinearDespuesCallejon^0,f,c
  5577  004748  D7FC               	bra	u12387
  5578  00474A                     
  5579                           ;main.c: 553:             leerSensores();
  5580  00474A  EC23  F01E         	call	_leerSensores	;wreg free
  5581  00474E                     l9864:
  5582                           
  5583                           ;main.c: 547:         while (sensorEnfrente < 35) {
  5584  00474E  C055  F034         	movff	_sensorEnfrente,___flge@ff1
  5585  004752  C056  F035         	movff	_sensorEnfrente+1,___flge@ff1+1
  5586  004756  C057  F036         	movff	_sensorEnfrente+2,___flge@ff1+2
  5587  00475A  C058  F037         	movff	_sensorEnfrente+3,___flge@ff1+3
  5588  00475E  0E00               	movlw	0
  5589  004760  6E38               	movwf	___flge@ff2^0,c
  5590  004762  0E00               	movlw	0
  5591  004764  6E39               	movwf	(___flge@ff2+1)^0,c
  5592  004766  0E0C               	movlw	12
  5593  004768  6E3A               	movwf	(___flge@ff2+2)^0,c
  5594  00476A  0E42               	movlw	66
  5595  00476C  6E3B               	movwf	(___flge@ff2+3)^0,c
  5596  00476E  ECD3  F021         	call	___flge	;wreg free
  5597  004772  A0D8               	btfss	status,0,c
  5598  004774  EFBE  F023         	goto	u11171
  5599  004778  EFC0  F023         	goto	u11170
  5600  00477C                     u11171:
  5601  00477C  EF9A  F023         	goto	l436
  5602  004780                     u11170:
  5603  004780                     l9866:
  5604                           
  5605                           ;main.c: 558:     forzarParoAuto();
  5606  004780  ECA0  F02C         	call	_forzarParoAuto	;wreg free
  5607  004784  0012               	return		;funcret
  5608  004786                     __end_of_alinearDespuesCallejon:
  5609                           	opt callstack 0
  5610                           
  5611 ;; *************** function _velocidadEstandar *****************
  5612 ;; Defined at:
  5613 ;;		line 1350 in file "main.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;		None
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;		None
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5627 ;;      Params:         0       0       0       0       0       0       0       0       0
  5628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5630 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5631 ;;Total ram usage:        0 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    5
  5634 ;; This function calls:
  5635 ;;		_pwmDuty
  5636 ;; This function is called by:
  5637 ;;		_inicializarComportamientoBasico
  5638 ;;		_comportamientoBasico
  5639 ;;		_forzarEspejeoIzquierda
  5640 ;;		_forzarEspejeoDerecha
  5641 ;;		_alinearDespuesCallejon
  5642 ;;		_regresarAlCruce
  5643 ;;		_probarCruceT
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text19
  5648  00584A                     __ptext19:
  5649                           	opt callstack 0
  5650  00584A                     _velocidadEstandar:
  5651                           	opt callstack 24
  5652  00584A                     
  5653                           ;main.c: 1352:     pwmDuty(100, 1);
  5654  00584A  0E00               	movlw	0
  5655  00584C  0100               	movlb	0	; () banked
  5656  00584E  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  5657  005850  0E64               	movlw	100
  5658  005852  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  5659  005854  0E01               	movlw	1
  5660  005856  6F7E               	movwf	pwmDuty@channel& (0+255),b
  5661  005858  EC17  F01A         	call	_pwmDuty	;wreg free
  5662                           
  5663                           ;main.c: 1353:     pwmDuty(100, 2);
  5664  00585C  0E00               	movlw	0
  5665  00585E  0100               	movlb	0	; () banked
  5666  005860  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  5667  005862  0E64               	movlw	100
  5668  005864  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  5669  005866  0E02               	movlw	2
  5670  005868  6F7E               	movwf	pwmDuty@channel& (0+255),b
  5671  00586A  EC17  F01A         	call	_pwmDuty	;wreg free
  5672  00586E  0012               	return		;funcret
  5673  005870                     __end_of_velocidadEstandar:
  5674                           	opt callstack 0
  5675                           
  5676 ;; *************** function _leerSensores *****************
  5677 ;; Defined at:
  5678 ;;		line 1237 in file "main.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;		None
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;		None
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      void 
  5685 ;; Registers used:
  5686 ;;		wreg, status,2, status,0, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5692 ;;      Params:         0       0       0       0       0       0       0       0       0
  5693 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5694 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5695 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5696 ;;Total ram usage:        0 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; Hardware stack levels required when called:    4
  5699 ;; This function calls:
  5700 ;;		___fladd
  5701 ;;		___fldiv
  5702 ;;		_dameDistancia
  5703 ;; This function is called by:
  5704 ;;		_comportamientoBasico
  5705 ;;		_alinearDespuesCallejon
  5706 ;;		_probarSensores
  5707 ;;		_probarPID
  5708 ;;		_probarCruceT
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	text20
  5713  003C46                     __ptext20:
  5714                           	opt callstack 0
  5715  003C46                     _leerSensores:
  5716                           	opt callstack 22
  5717  003C46                     
  5718                           ;main.c: 1239:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  5719  003C46  C120  F038         	movff	_oldSensorDerecha,___fladd@a
  5720  003C4A  C121  F039         	movff	_oldSensorDerecha+1,___fladd@a+1
  5721  003C4E  C122  F03A         	movff	_oldSensorDerecha+2,___fladd@a+2
  5722  003C52  C123  F03B         	movff	_oldSensorDerecha+3,___fladd@a+3
  5723  003C56  0E03               	movlw	3
  5724  003C58  EC93  F01F         	call	_dameDistancia
  5725  003C5C  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5726  003C60  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5727  003C64  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5728  003C68  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5729  003C6C  EC62  F00C         	call	___fladd	;wreg free
  5730  003C70  C034  F044         	movff	?___fladd,___fldiv@b
  5731  003C74  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5732  003C78  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5733  003C7C  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5734  003C80  0E00               	movlw	0
  5735  003C82  6E48               	movwf	___fldiv@a^0,c
  5736  003C84  0E00               	movlw	0
  5737  003C86  6E49               	movwf	(___fldiv@a+1)^0,c
  5738  003C88  0E00               	movlw	0
  5739  003C8A  6E4A               	movwf	(___fldiv@a+2)^0,c
  5740  003C8C  0E40               	movlw	64
  5741  003C8E  6E4B               	movwf	(___fldiv@a+3)^0,c
  5742  003C90  ECA4  F014         	call	___fldiv	;wreg free
  5743  003C94  C044  F128         	movff	?___fldiv,_sensorDerecha
  5744  003C98  C045  F129         	movff	?___fldiv+1,_sensorDerecha+1
  5745  003C9C  C046  F12A         	movff	?___fldiv+2,_sensorDerecha+2
  5746  003CA0  C047  F12B         	movff	?___fldiv+3,_sensorDerecha+3
  5747                           
  5748                           ;main.c: 1240:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
  5749  003CA4  C11C  F038         	movff	_oldSensorIzquierda,___fladd@a
  5750  003CA8  C11D  F039         	movff	_oldSensorIzquierda+1,___fladd@a+1
  5751  003CAC  C11E  F03A         	movff	_oldSensorIzquierda+2,___fladd@a+2
  5752  003CB0  C11F  F03B         	movff	_oldSensorIzquierda+3,___fladd@a+3
  5753  003CB4  0E02               	movlw	2
  5754  003CB6  EC93  F01F         	call	_dameDistancia
  5755  003CBA  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5756  003CBE  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5757  003CC2  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5758  003CC6  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5759  003CCA  EC62  F00C         	call	___fladd	;wreg free
  5760  003CCE  C034  F044         	movff	?___fladd,___fldiv@b
  5761  003CD2  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5762  003CD6  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5763  003CDA  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5764  003CDE  0E00               	movlw	0
  5765  003CE0  6E48               	movwf	___fldiv@a^0,c
  5766  003CE2  0E00               	movlw	0
  5767  003CE4  6E49               	movwf	(___fldiv@a+1)^0,c
  5768  003CE6  0E00               	movlw	0
  5769  003CE8  6E4A               	movwf	(___fldiv@a+2)^0,c
  5770  003CEA  0E40               	movlw	64
  5771  003CEC  6E4B               	movwf	(___fldiv@a+3)^0,c
  5772  003CEE  ECA4  F014         	call	___fldiv	;wreg free
  5773  003CF2  C044  F124         	movff	?___fldiv,_sensorIzquierda
  5774  003CF6  C045  F125         	movff	?___fldiv+1,_sensorIzquierda+1
  5775  003CFA  C046  F126         	movff	?___fldiv+2,_sensorIzquierda+2
  5776  003CFE  C047  F127         	movff	?___fldiv+3,_sensorIzquierda+3
  5777                           
  5778                           ;main.c: 1241:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  5779  003D02  C118  F038         	movff	_oldSensorEnfrente,___fladd@a
  5780  003D06  C119  F039         	movff	_oldSensorEnfrente+1,___fladd@a+1
  5781  003D0A  C11A  F03A         	movff	_oldSensorEnfrente+2,___fladd@a+2
  5782  003D0E  C11B  F03B         	movff	_oldSensorEnfrente+3,___fladd@a+3
  5783  003D12  0E01               	movlw	1
  5784  003D14  EC93  F01F         	call	_dameDistancia
  5785  003D18  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5786  003D1C  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5787  003D20  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5788  003D24  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5789  003D28  EC62  F00C         	call	___fladd	;wreg free
  5790  003D2C  C034  F044         	movff	?___fladd,___fldiv@b
  5791  003D30  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5792  003D34  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5793  003D38  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5794  003D3C  0E00               	movlw	0
  5795  003D3E  6E48               	movwf	___fldiv@a^0,c
  5796  003D40  0E00               	movlw	0
  5797  003D42  6E49               	movwf	(___fldiv@a+1)^0,c
  5798  003D44  0E00               	movlw	0
  5799  003D46  6E4A               	movwf	(___fldiv@a+2)^0,c
  5800  003D48  0E40               	movlw	64
  5801  003D4A  6E4B               	movwf	(___fldiv@a+3)^0,c
  5802  003D4C  ECA4  F014         	call	___fldiv	;wreg free
  5803  003D50  C044  F055         	movff	?___fldiv,_sensorEnfrente
  5804  003D54  C045  F056         	movff	?___fldiv+1,_sensorEnfrente+1
  5805  003D58  C046  F057         	movff	?___fldiv+2,_sensorEnfrente+2
  5806  003D5C  C047  F058         	movff	?___fldiv+3,_sensorEnfrente+3
  5807  003D60                     
  5808                           ;main.c: 1243:     oldSensorDerecha = sensorDerecha;
  5809  003D60  C128  F120         	movff	_sensorDerecha,_oldSensorDerecha
  5810  003D64  C129  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
  5811  003D68  C12A  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
  5812  003D6C  C12B  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
  5813  003D70                     
  5814                           ;main.c: 1244:     oldSensorIzquierda = sensorIzquierda;
  5815  003D70  C124  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
  5816  003D74  C125  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
  5817  003D78  C126  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
  5818  003D7C  C127  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
  5819  003D80                     
  5820                           ;main.c: 1245:     oldSensorEnfrente = sensorEnfrente;
  5821  003D80  C055  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
  5822  003D84  C056  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
  5823  003D88  C057  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
  5824  003D8C  C058  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
  5825  003D90                     
  5826                           ;main.c: 1250:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
  5827  003D90  C128  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
  5828  003D94  C129  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
  5829  003D98  C12A  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
  5830  003D9C  C12B  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
  5831  003DA0                     
  5832                           ;main.c: 1259:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
  5833  003DA0  C124  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
  5834  003DA4  C125  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
  5835  003DA8  C126  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
  5836  003DAC  C127  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
  5837  003DB0                     
  5838                           ;main.c: 1262:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
  5839  003DB0  C055  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
  5840  003DB4  C056  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
  5841  003DB8  C057  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
  5842  003DBC  C058  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
  5843  003DC0  0012               	return		;funcret
  5844  003DC2                     __end_of_leerSensores:
  5845                           	opt callstack 0
  5846                           
  5847 ;; *************** function _dameDistancia *****************
  5848 ;; Defined at:
  5849 ;;		line 26 in file "./ultrasonico.h"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  numeroSensor    1    wreg     unsigned char 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  numeroSensor    1   32[COMRAM] unsigned char 
  5854 ;;  distancia       4   33[COMRAM] float 
  5855 ;;  conteo          2   37[COMRAM] unsigned int 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  4   26[COMRAM] float 
  5858 ;; Registers used:
  5859 ;;		wreg, status,2, status,0, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5865 ;;      Params:         4       0       0       0       0       0       0       0       0
  5866 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5867 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5868 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5869 ;;Total ram usage:       13 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    3
  5872 ;; This function calls:
  5873 ;;		___lwdiv
  5874 ;;		___xxtofl
  5875 ;; This function is called by:
  5876 ;;		_inicializarComportamientoBasico
  5877 ;;		_leerSensores
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text21
  5882  003F26                     __ptext21:
  5883                           	opt callstack 0
  5884  003F26                     _dameDistancia:
  5885                           	opt callstack 26
  5886                           
  5887                           ;incstack = 0
  5888                           ;dameDistancia@numeroSensor stored from wreg
  5889  003F26  6E21               	movwf	dameDistancia@numeroSensor^0,c
  5890  003F28                     
  5891                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
  5892  003F28  0E00               	movlw	0
  5893  003F2A  6ECF               	movwf	207,c	;volatile
  5894                           
  5895                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
  5896  003F2C  0E00               	movlw	0
  5897  003F2E  6ECE               	movwf	206,c	;volatile
  5898                           
  5899                           ;./ultrasonico.h: 33:     conteo = 0;
  5900  003F30  0E00               	movlw	0
  5901  003F32  6E27               	movwf	(dameDistancia@conteo+1)^0,c
  5902  003F34  0E00               	movlw	0
  5903  003F36  6E26               	movwf	dameDistancia@conteo^0,c
  5904  003F38                     
  5905                           ;./ultrasonico.h: 34:     LATD3 = 1;
  5906  003F38  868C               	bsf	3980,3,c	;volatile
  5907  003F3A                     
  5908                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
  5909  003F3A  0E04               	movlw	4
  5910  003F3C                     u12397:
  5911  003F3C  2EE8               	decfsz	wreg,f,c
  5912  003F3E  D7FE               	bra	u12397
  5913  003F40                     
  5914                           ;./ultrasonico.h: 36:     LATD3 = 0;
  5915  003F40  968C               	bcf	3980,3,c	;volatile
  5916                           
  5917                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
  5918  003F42  EFEB  F01F         	goto	l9224
  5919  003F46                     l179:
  5920  003F46  A281               	btfss	129,1,c	;volatile
  5921  003F48  EFA8  F01F         	goto	u10031
  5922  003F4C  EFAA  F01F         	goto	u10030
  5923  003F50                     u10031:
  5924  003F50  EFA3  F01F         	goto	l179
  5925  003F54                     u10030:
  5926  003F54                     
  5927                           ;./ultrasonico.h: 43:             TMR1ON = 1;
  5928  003F54  80CD               	bsf	4045,0,c	;volatile
  5929  003F56                     l182:
  5930  003F56  A281               	btfss	129,1,c	;volatile
  5931  003F58  EFB0  F01F         	goto	u10041
  5932  003F5C  EFB2  F01F         	goto	u10040
  5933  003F60                     u10041:
  5934  003F60  EF04  F020         	goto	l187
  5935  003F64                     u10040:
  5936  003F64  A09E               	btfss	3998,0,c	;volatile
  5937  003F66  EFB7  F01F         	goto	u10051
  5938  003F6A  EFB9  F01F         	goto	u10050
  5939  003F6E                     u10051:
  5940  003F6E  EFAB  F01F         	goto	l182
  5941  003F72                     u10050:
  5942  003F72  EF04  F020         	goto	l187
  5943  003F76                     l189:
  5944  003F76  A481               	btfss	129,2,c	;volatile
  5945  003F78  EFC0  F01F         	goto	u10061
  5946  003F7C  EFC2  F01F         	goto	u10060
  5947  003F80                     u10061:
  5948  003F80  EFBB  F01F         	goto	l189
  5949  003F84                     u10060:
  5950  003F84                     
  5951                           ;./ultrasonico.h: 51:             TMR1ON = 1;
  5952  003F84  80CD               	bsf	4045,0,c	;volatile
  5953  003F86                     l192:
  5954  003F86  A481               	btfss	129,2,c	;volatile
  5955  003F88  EFC8  F01F         	goto	u10071
  5956  003F8C  EFCA  F01F         	goto	u10070
  5957  003F90                     u10071:
  5958  003F90  EF04  F020         	goto	l187
  5959  003F94                     u10070:
  5960  003F94  A09E               	btfss	3998,0,c	;volatile
  5961  003F96  EFCF  F01F         	goto	u10081
  5962  003F9A  EFD1  F01F         	goto	u10080
  5963  003F9E                     u10081:
  5964  003F9E  EFC3  F01F         	goto	l192
  5965  003FA2                     u10080:
  5966  003FA2  EF04  F020         	goto	l187
  5967  003FA6                     l198:
  5968  003FA6  A681               	btfss	129,3,c	;volatile
  5969  003FA8  EFD8  F01F         	goto	u10091
  5970  003FAC  EFDA  F01F         	goto	u10090
  5971  003FB0                     u10091:
  5972  003FB0  EFD3  F01F         	goto	l198
  5973  003FB4                     u10090:
  5974  003FB4                     
  5975                           ;./ultrasonico.h: 59:             TMR1ON = 1;
  5976  003FB4  80CD               	bsf	4045,0,c	;volatile
  5977  003FB6                     l201:
  5978  003FB6  A681               	btfss	129,3,c	;volatile
  5979  003FB8  EFE0  F01F         	goto	u10101
  5980  003FBC  EFE2  F01F         	goto	u10100
  5981  003FC0                     u10101:
  5982  003FC0  EF04  F020         	goto	l187
  5983  003FC4                     u10100:
  5984  003FC4  A09E               	btfss	3998,0,c	;volatile
  5985  003FC6  EFE7  F01F         	goto	u10111
  5986  003FCA  EFE9  F01F         	goto	u10110
  5987  003FCE                     u10111:
  5988  003FCE  EFDB  F01F         	goto	l201
  5989  003FD2                     u10110:
  5990  003FD2  EF04  F020         	goto	l187
  5991  003FD6                     l9224:
  5992  003FD6  5021               	movf	dameDistancia@numeroSensor^0,w,c
  5993  003FD8  6E1F               	movwf	??_dameDistancia^0,c
  5994  003FDA  6A20               	clrf	(??_dameDistancia+1)^0,c
  5995                           
  5996                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5997                           ; Switch size 1, requested type "simple"
  5998                           ; Number of cases is 1, Range of values is 0 to 0
  5999                           ; switch strategies available:
  6000                           ; Name         Instructions Cycles
  6001                           ; simple_byte            4     3 (average)
  6002                           ;	Chosen strategy is simple_byte
  6003  003FDC  5020               	movf	(??_dameDistancia+1)^0,w,c
  6004  003FDE  0A00               	xorlw	0	; case 0
  6005  003FE0  B4D8               	btfsc	status,2,c
  6006  003FE2  EFF5  F01F         	goto	l11392
  6007  003FE6  EF04  F020         	goto	l187
  6008  003FEA                     l11392:
  6009                           
  6010                           ; Switch size 1, requested type "simple"
  6011                           ; Number of cases is 3, Range of values is 1 to 3
  6012                           ; switch strategies available:
  6013                           ; Name         Instructions Cycles
  6014                           ; simple_byte           10     6 (average)
  6015                           ;	Chosen strategy is simple_byte
  6016  003FEA  501F               	movf	??_dameDistancia^0,w,c
  6017  003FEC  0A01               	xorlw	1	; case 1
  6018  003FEE  B4D8               	btfsc	status,2,c
  6019  003FF0  EFA3  F01F         	goto	l179
  6020  003FF4  0A03               	xorlw	3	; case 2
  6021  003FF6  B4D8               	btfsc	status,2,c
  6022  003FF8  EFBB  F01F         	goto	l189
  6023  003FFC  0A01               	xorlw	1	; case 3
  6024  003FFE  B4D8               	btfsc	status,2,c
  6025  004000  EFD3  F01F         	goto	l198
  6026  004004  EF04  F020         	goto	l187
  6027  004008                     l187:
  6028                           
  6029                           ;./ultrasonico.h: 66:     TMR1ON = 0;
  6030  004008  90CD               	bcf	4045,0,c	;volatile
  6031                           
  6032                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
  6033  00400A  B09E               	btfsc	3998,0,c	;volatile
  6034  00400C  EF0A  F020         	goto	u10121
  6035  004010  EF0C  F020         	goto	u10120
  6036  004014                     u10121:
  6037  004014  EF32  F020         	goto	l9230
  6038  004018                     u10120:
  6039  004018                     
  6040                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
  6041  004018  50CF               	movf	207,w,c	;volatile
  6042  00401A  6E20               	movwf	(??_dameDistancia+1)^0,c
  6043  00401C  6A1F               	clrf	??_dameDistancia^0,c
  6044  00401E  501F               	movf	??_dameDistancia^0,w,c
  6045  004020  1226               	iorwf	dameDistancia@conteo^0,f,c
  6046  004022  5020               	movf	(??_dameDistancia+1)^0,w,c
  6047  004024  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
  6048                           
  6049                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
  6050  004026  50CE               	movf	206,w,c	;volatile
  6051  004028  1226               	iorwf	dameDistancia@conteo^0,f,c
  6052  00402A                     
  6053                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
  6054  00402A  0E00               	movlw	0
  6055  00402C  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  6056  00402E  0E3A               	movlw	58
  6057  004030  6E08               	movwf	___lwdiv@divisor^0,c
  6058  004032  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
  6059  004036  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
  6060  00403A  ECCE  F027         	call	___lwdiv	;wreg free
  6061  00403E  C006  F00D         	movff	?___lwdiv,___xxtofl@val
  6062  004042  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
  6063  004046  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6064  004048  6A10               	clrf	(___xxtofl@val+3)^0,c
  6065  00404A  0E00               	movlw	0
  6066  00404C  ECF5  F01A         	call	___xxtofl
  6067  004050  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
  6068  004054  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
  6069  004058  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
  6070  00405C  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
  6071                           
  6072                           ;./ultrasonico.h: 73:     } else {
  6073  004060  EF3B  F020         	goto	l9234
  6074  004064                     l9230:
  6075  004064                     
  6076                           ;./ultrasonico.h: 75:         TMR1IF = 0;
  6077  004064  909E               	bcf	3998,0,c	;volatile
  6078                           
  6079                           ;./ultrasonico.h: 76:         distancia = 0;
  6080  004066  0E00               	movlw	0
  6081  004068  6E22               	movwf	dameDistancia@distancia^0,c
  6082  00406A  0E00               	movlw	0
  6083  00406C  6E23               	movwf	(dameDistancia@distancia+1)^0,c
  6084  00406E  0E00               	movlw	0
  6085  004070  6E24               	movwf	(dameDistancia@distancia+2)^0,c
  6086  004072  0E00               	movlw	0
  6087  004074  6E25               	movwf	(dameDistancia@distancia+3)^0,c
  6088  004076                     l9234:
  6089                           
  6090                           ;./ultrasonico.h: 80:     return distancia;
  6091  004076  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
  6092  00407A  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
  6093  00407E  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
  6094  004082  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
  6095  004086  0012               	return		;funcret
  6096  004088                     __end_of_dameDistancia:
  6097                           	opt callstack 0
  6098                           
  6099 ;; *************** function ___lwdiv *****************
  6100 ;; Defined at:
  6101 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  dividend        2    5[COMRAM] unsigned int 
  6104 ;;  divisor         2    7[COMRAM] unsigned int 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  quotient        2   10[COMRAM] unsigned int 
  6107 ;;  counter         1    9[COMRAM] unsigned char 
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  2    5[COMRAM] unsigned int 
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6117 ;;      Params:         4       0       0       0       0       0       0       0       0
  6118 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6120 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6121 ;;Total ram usage:        7 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    2
  6124 ;; This function calls:
  6125 ;;		Nothing
  6126 ;; This function is called by:
  6127 ;;		_dameDistancia
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text22
  6132  004F9C                     __ptext22:
  6133                           	opt callstack 0
  6134  004F9C                     ___lwdiv:
  6135                           	opt callstack 26
  6136  004F9C  0E00               	movlw	0
  6137  004F9E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  6138  004FA0  0E00               	movlw	0
  6139  004FA2  6E0B               	movwf	___lwdiv@quotient^0,c
  6140  004FA4  5008               	movf	___lwdiv@divisor^0,w,c
  6141  004FA6  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6142  004FA8  B4D8               	btfsc	status,2,c
  6143  004FAA  EFD9  F027         	goto	u9851
  6144  004FAE  EFDB  F027         	goto	u9850
  6145  004FB2                     u9851:
  6146  004FB2  EF03  F028         	goto	l1453
  6147  004FB6                     u9850:
  6148  004FB6  0E01               	movlw	1
  6149  004FB8  6E0A               	movwf	___lwdiv@counter^0,c
  6150  004FBA  EFE3  F027         	goto	l9118
  6151  004FBE                     l9116:
  6152  004FBE  90D8               	bcf	status,0,c
  6153  004FC0  3608               	rlcf	___lwdiv@divisor^0,f,c
  6154  004FC2  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6155  004FC4  2A0A               	incf	___lwdiv@counter^0,f,c
  6156  004FC6                     l9118:
  6157  004FC6  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  6158  004FC8  EFE8  F027         	goto	u9861
  6159  004FCC  EFEA  F027         	goto	u9860
  6160  004FD0                     u9861:
  6161  004FD0  EFDF  F027         	goto	l9116
  6162  004FD4                     u9860:
  6163  004FD4                     l9120:
  6164  004FD4  90D8               	bcf	status,0,c
  6165  004FD6  360B               	rlcf	___lwdiv@quotient^0,f,c
  6166  004FD8  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6167  004FDA  5008               	movf	___lwdiv@divisor^0,w,c
  6168  004FDC  5C06               	subwf	___lwdiv@dividend^0,w,c
  6169  004FDE  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6170  004FE0  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6171  004FE2  A0D8               	btfss	status,0,c
  6172  004FE4  EFF6  F027         	goto	u9871
  6173  004FE8  EFF8  F027         	goto	u9870
  6174  004FEC                     u9871:
  6175  004FEC  EFFD  F027         	goto	l9128
  6176  004FF0                     u9870:
  6177  004FF0  5008               	movf	___lwdiv@divisor^0,w,c
  6178  004FF2  5E06               	subwf	___lwdiv@dividend^0,f,c
  6179  004FF4  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6180  004FF6  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6181  004FF8  800B               	bsf	___lwdiv@quotient^0,0,c
  6182  004FFA                     l9128:
  6183  004FFA  90D8               	bcf	status,0,c
  6184  004FFC  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6185  004FFE  3208               	rrcf	___lwdiv@divisor^0,f,c
  6186  005000  2E0A               	decfsz	___lwdiv@counter^0,f,c
  6187  005002  EFEA  F027         	goto	l9120
  6188  005006                     l1453:
  6189  005006  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  6190  00500A  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6191  00500E  0012               	return		;funcret
  6192  005010                     __end_of___lwdiv:
  6193                           	opt callstack 0
  6194                           
  6195 ;; *************** function _forzarParoAuto *****************
  6196 ;; Defined at:
  6197 ;;		line 442 in file "main.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;		None
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;		None
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  1    wreg      void 
  6204 ;; Registers used:
  6205 ;;		wreg
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6211 ;;      Params:         0       0       0       0       0       0       0       0       0
  6212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6213 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6214 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6215 ;;Total ram usage:        1 bytes
  6216 ;; Hardware stack levels used:    1
  6217 ;; Hardware stack levels required when called:    2
  6218 ;; This function calls:
  6219 ;;		Nothing
  6220 ;; This function is called by:
  6221 ;;		_comportamientoBasico
  6222 ;;		_forzarEspejeoIzquierda
  6223 ;;		_forzarEspejeoDerecha
  6224 ;;		_alinearDespuesCallejon
  6225 ;;		_main
  6226 ;;		_finalizarRecorrido
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text23
  6231  005940                     __ptext23:
  6232                           	opt callstack 0
  6233  005940                     _forzarParoAuto:
  6234                           	opt callstack 28
  6235  005940                     
  6236                           ;main.c: 444:     LATB4 = 0;
  6237  005940  988A               	bcf	3978,4,c	;volatile
  6238                           
  6239                           ;main.c: 445:     LATB5 = 0;
  6240  005942  9A8A               	bcf	3978,5,c	;volatile
  6241                           
  6242                           ;main.c: 446:     LATB6 = 0;
  6243  005944  9C8A               	bcf	3978,6,c	;volatile
  6244                           
  6245                           ;main.c: 449:     if (!0)
  6246  005946  9E8A               	bcf	3978,7,c	;volatile
  6247  005948                     
  6248                           ;main.c: 450:         _delay((unsigned long)((30)*(4000000/4000.0)));
  6249  005948  0E27               	movlw	39
  6250  00594A  6E06               	movwf	??_forzarParoAuto^0,c
  6251  00594C  0EF5               	movlw	245
  6252  00594E                     u12407:
  6253  00594E  2EE8               	decfsz	wreg,f,c
  6254  005950  D7FE               	bra	u12407
  6255  005952  2E06               	decfsz	??_forzarParoAuto^0,f,c
  6256  005954  D7FC               	bra	u12407
  6257  005956  F000               	nop	
  6258  005958  0012               	return		;funcret
  6259  00595A                     __end_of_forzarParoAuto:
  6260                           	opt callstack 0
  6261                           
  6262 ;; *************** function _forzarAvanceRecto *****************
  6263 ;; Defined at:
  6264 ;;		line 463 in file "main.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;		None
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;		None
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  1    wreg      void 
  6271 ;; Registers used:
  6272 ;;		wreg
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6278 ;;      Params:         0       0       0       0       0       0       0       0       0
  6279 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6280 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6281 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6282 ;;Total ram usage:        2 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; Hardware stack levels required when called:    2
  6285 ;; This function calls:
  6286 ;;		Nothing
  6287 ;; This function is called by:
  6288 ;;		_moverCarrito
  6289 ;;		_mover
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text24
  6294  0058DE                     __ptext24:
  6295                           	opt callstack 0
  6296  0058DE                     _forzarAvanceRecto:
  6297                           	opt callstack 25
  6298  0058DE                     
  6299                           ;main.c: 464:     LATB4 = 1;
  6300  0058DE  888A               	bsf	3978,4,c	;volatile
  6301                           
  6302                           ;main.c: 465:     LATB5 = 0;
  6303  0058E0  9A8A               	bcf	3978,5,c	;volatile
  6304                           
  6305                           ;main.c: 466:     LATB6 = 1;
  6306  0058E2  8C8A               	bsf	3978,6,c	;volatile
  6307                           
  6308                           ;main.c: 467:     LATB7 = 0;
  6309  0058E4  9E8A               	bcf	3978,7,c	;volatile
  6310  0058E6                     
  6311                           ;main.c: 469:     _delay((unsigned long)((550)*(4000000/4000.0)));
  6312  0058E6  0E03               	movlw	3
  6313  0058E8  6E07               	movwf	(??_forzarAvanceRecto+1)^0,c
  6314  0058EA  0ECB               	movlw	203
  6315  0058EC  6E06               	movwf	??_forzarAvanceRecto^0,c
  6316  0058EE  0E45               	movlw	69
  6317  0058F0                     u12417:
  6318  0058F0  2EE8               	decfsz	wreg,f,c
  6319  0058F2  D7FE               	bra	u12417
  6320  0058F4  2E06               	decfsz	??_forzarAvanceRecto^0,f,c
  6321  0058F6  D7FC               	bra	u12417
  6322  0058F8  2E07               	decfsz	(??_forzarAvanceRecto+1)^0,f,c
  6323  0058FA  D7FA               	bra	u12417
  6324  0058FC  F000               	nop	
  6325  0058FE  0012               	return		;funcret
  6326  005900                     __end_of_forzarAvanceRecto:
  6327                           	opt callstack 0
  6328                           
  6329 ;; *************** function _limpiarMovimientos *****************
  6330 ;; Defined at:
  6331 ;;		line 831 in file "main.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
  6334 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  6335 ;;  numMovimient    2    7[COMRAM] PTR unsigned int 
  6336 ;;		 -> comportamientoBasico@numMovimientos(2), 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  i               2   11[COMRAM] int 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1    wreg      void 
  6341 ;; Registers used:
  6342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6348 ;;      Params:         4       0       0       0       0       0       0       0       0
  6349 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6350 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6351 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6352 ;;Total ram usage:        8 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:    2
  6355 ;; This function calls:
  6356 ;;		Nothing
  6357 ;; This function is called by:
  6358 ;;		_comportamientoBasico
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text25
  6363  0054BC                     __ptext25:
  6364                           	opt callstack 0
  6365  0054BC                     _limpiarMovimientos:
  6366                           	opt callstack 27
  6367  0054BC                     
  6368                           ;main.c: 833:     for (T_INT i = 0; i < *numMovimientos; i++)
  6369  0054BC  0E00               	movlw	0
  6370  0054BE  6E0D               	movwf	(limpiarMovimientos@i+1)^0,c
  6371  0054C0  0E00               	movlw	0
  6372  0054C2  6E0C               	movwf	limpiarMovimientos@i^0,c
  6373  0054C4  EF6E  F02A         	goto	l10570
  6374  0054C8                     l10566:
  6375                           
  6376                           ;main.c: 834:         movimientos[i] = 0;
  6377  0054C8  500C               	movf	limpiarMovimientos@i^0,w,c
  6378  0054CA  2406               	addwf	limpiarMovimientos@movimientos^0,w,c
  6379  0054CC  6ED9               	movwf	fsr2l,c
  6380  0054CE  500D               	movf	(limpiarMovimientos@i+1)^0,w,c
  6381  0054D0  2007               	addwfc	(limpiarMovimientos@movimientos+1)^0,w,c
  6382  0054D2  6EDA               	movwf	fsr2h,c
  6383  0054D4  0E00               	movlw	0
  6384  0054D6  6EDF               	movwf	indf2,c
  6385  0054D8  4A0C               	infsnz	limpiarMovimientos@i^0,f,c
  6386  0054DA  2A0D               	incf	(limpiarMovimientos@i+1)^0,f,c
  6387  0054DC                     l10570:
  6388  0054DC  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
  6389  0054E0  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
  6390  0054E4  50DE               	movf	postinc2,w,c
  6391  0054E6  5C0C               	subwf	limpiarMovimientos@i^0,w,c
  6392  0054E8  50DE               	movf	postinc2,w,c
  6393  0054EA  580D               	subwfb	(limpiarMovimientos@i+1)^0,w,c
  6394  0054EC  A0D8               	btfss	status,0,c
  6395  0054EE  EF7B  F02A         	goto	u11871
  6396  0054F2  EF7D  F02A         	goto	u11870
  6397  0054F6                     u11871:
  6398  0054F6  EF64  F02A         	goto	l10566
  6399  0054FA                     u11870:
  6400  0054FA                     
  6401                           ;main.c: 836:     *numMovimientos = 0;
  6402  0054FA  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
  6403  0054FE  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
  6404  005502  0E00               	movlw	0
  6405  005504  6EDE               	movwf	postinc2,c
  6406  005506  0E00               	movlw	0
  6407  005508  6EDD               	movwf	postdec2,c
  6408  00550A  0012               	return		;funcret
  6409  00550C                     __end_of_limpiarMovimientos:
  6410                           	opt callstack 0
  6411                           
  6412 ;; *************** function _decidirDireccion *****************
  6413 ;; Defined at:
  6414 ;;		line 876 in file "main.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  caminosRecor    2    0[BANK1 ] PTR unsigned char 
  6417 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
  6418 ;;  investigando    2    2[BANK1 ] PTR unsigned char 
  6419 ;;		 -> comportamientoBasico@investigandoCruce(1), 
  6420 ;;  posicionInvC    2    4[BANK1 ] PTR unsigned char 
  6421 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
  6422 ;;  contCaminosR    2    6[BANK1 ] PTR unsigned char 
  6423 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
  6424 ;;  caminoActual    2    8[BANK1 ] PTR unsigned char 
  6425 ;;		 -> comportamientoBasico@caminoActual(1), 
  6426 ;;  cambioOrient    2   10[BANK1 ] PTR unsigned char 
  6427 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
  6428 ;;  mapear          2   12[BANK1 ] PTR unsigned char 
  6429 ;;		 -> comportamientoBasico@mapear(1), 
  6430 ;;  cruceDetecta    2   14[BANK1 ] PTR unsigned char 
  6431 ;;		 -> comportamientoBasico@cruceDetectado(1), 
  6432 ;;  avanceRectoL    2   16[BANK1 ] PTR unsigned char 
  6433 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  6434 ;;  caminoFinal     2   18[BANK1 ] PTR unsigned char 
  6435 ;;		 -> comportamientoBasico@caminoFinal(20), 
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;  direccionEle    1   83[COMRAM] unsigned char 
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  1    wreg      unsigned char 
  6440 ;; Registers used:
  6441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6447 ;;      Params:         0       0      20       0       0       0       0       0       0
  6448 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6449 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6450 ;;      Totals:         1       3      20       0       0       0       0       0       0
  6451 ;;Total ram usage:       24 bytes
  6452 ;; Hardware stack levels used:    1
  6453 ;; Hardware stack levels required when called:   10
  6454 ;; This function calls:
  6455 ;;		_UART_printf
  6456 ;;		___flge
  6457 ;;		_hayCruce
  6458 ;;		_mostrarDireccionElegida
  6459 ;;		_seLlegoAlDestino
  6460 ;;		_sprintf
  6461 ;;		_velocidadBaja
  6462 ;; This function is called by:
  6463 ;;		_comportamientoBasico
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text26
  6468  000BD8                     __ptext26:
  6469                           	opt callstack 0
  6470  000BD8                     _decidirDireccion:
  6471                           	opt callstack 19
  6472  000BD8                     
  6473                           ;main.c: 876: T_UBYTE decidirDireccion(T_UBYTE* caminosRecorrer, T_UBYTE* investigandoCr
      +                          uce, T_UBYTE* posicionInvCruce,;main.c: 877:         T_UBYTE* contCaminosRecorridos, T_U
      +                          BYTE* caminoActual, T_BOOL* cambioOrientacionCarro,;main.c: 878:         T_UBYTE* mapear
      +                          , T_UBYTE* cruceDetectado, T_BOOL* avanceRectoLargo, T_UBYTE* caminoFinal) {;main.c: 880
      +                          :     T_UBYTE direccionElegida;;main.c: 881:     llegoDestino = seLlegoAlDestino();
  6474  000BD8  EC0E  F02C         	call	_seLlegoAlDestino	;wreg free
  6475  000BDC  0100               	movlb	0	; () banked
  6476  000BDE  6FFF               	movwf	_llegoDestino& (0+255),b
  6477  000BE0                     
  6478                           ; BSR set to: 0
  6479                           ;main.c: 884:     if (*posicionInvCruce && *investigandoCruce && !caminoEncontrado) {
  6480  000BE0  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6481  000BE4  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6482  000BE8  50DF               	movf	indf2,w,c
  6483  000BEA  B4D8               	btfsc	status,2,c
  6484  000BEC  EFFA  F005         	goto	u11451
  6485  000BF0  EFFC  F005         	goto	u11450
  6486  000BF4                     u11451:
  6487  000BF4  EFD7  F007         	goto	l10442
  6488  000BF8                     u11450:
  6489  000BF8                     
  6490                           ; BSR set to: 0
  6491  000BF8  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6492  000BFC  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6493  000C00  50DF               	movf	indf2,w,c
  6494  000C02  B4D8               	btfsc	status,2,c
  6495  000C04  EF06  F006         	goto	u11461
  6496  000C08  EF08  F006         	goto	u11460
  6497  000C0C                     u11461:
  6498  000C0C  EFD7  F007         	goto	l10442
  6499  000C10                     u11460:
  6500  000C10                     
  6501                           ; BSR set to: 0
  6502  000C10  5059               	movf	_caminoEncontrado^0,w,c
  6503  000C12  A4D8               	btfss	status,2,c
  6504  000C14  EF0E  F006         	goto	u11471
  6505  000C18  EF10  F006         	goto	u11470
  6506  000C1C                     u11471:
  6507  000C1C  EFD7  F007         	goto	l10442
  6508  000C20                     u11470:
  6509  000C20                     
  6510                           ; BSR set to: 0
  6511                           ;main.c: 886:         if (*posicionInvCruce)
  6512  000C20  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6513  000C24  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6514  000C28  50DF               	movf	indf2,w,c
  6515  000C2A  B4D8               	btfsc	status,2,c
  6516  000C2C  EF1A  F006         	goto	u11481
  6517  000C30  EF1C  F006         	goto	u11480
  6518  000C34                     u11481:
  6519  000C34  EF22  F006         	goto	l10196
  6520  000C38                     u11480:
  6521  000C38                     
  6522                           ; BSR set to: 0
  6523                           ;main.c: 887:             *posicionInvCruce = 0;
  6524  000C38  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6525  000C3C  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6526  000C40  0E00               	movlw	0
  6527  000C42  6EDF               	movwf	indf2,c
  6528  000C44                     l10196:
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;main.c: 889:         if (llegoDestino) {
  6532  000C44  51FF               	movf	_llegoDestino& (0+255),w,b
  6533  000C46  B4D8               	btfsc	status,2,c
  6534  000C48  EF28  F006         	goto	u11491
  6535  000C4C  EF2A  F006         	goto	u11490
  6536  000C50                     u11491:
  6537  000C50  EF8B  F006         	goto	l10220
  6538  000C54                     u11490:
  6539  000C54                     
  6540                           ; BSR set to: 0
  6541                           ;main.c: 890:             direccionElegida = ALTO;
  6542  000C54  0E04               	movlw	4
  6543  000C56  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6544                           
  6545                           ;main.c: 892:         } else {
  6546  000C58  EFA8  F006         	goto	l10222
  6547  000C5C                     l10200:
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;main.c: 896:                     if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1'
      +                          )
  6551  000C5C  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6552  000C60  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6553  000C64  0E31               	movlw	49
  6554  000C66  18DE               	xorwf	postinc2,w,c
  6555  000C68  A4D8               	btfss	status,2,c
  6556  000C6A  EF39  F006         	goto	u11501
  6557  000C6E  EF3B  F006         	goto	u11500
  6558  000C72                     u11501:
  6559  000C72  EF43  F006         	goto	l10204
  6560  000C76                     u11500:
  6561  000C76                     
  6562                           ; BSR set to: 0
  6563                           ;main.c: 897:                         caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] = 'X';
  6564  000C76  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6565  000C7A  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6566  000C7E  0E58               	movlw	88
  6567  000C80  6EDF               	movwf	indf2,c
  6568  000C82  EFA8  F006         	goto	l10222
  6569  000C86                     l10204:
  6570                           
  6571                           ; BSR set to: 0
  6572  000C86  0101               	movlb	1	; () banked
  6573  000C88  EE20 F001          	lfsr	2,1
  6574  000C8C  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6575  000C8E  26D9               	addwf	fsr2l,f,c
  6576  000C90  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6577  000C92  22DA               	addwfc	fsr2h,f,c
  6578  000C94  0E31               	movlw	49
  6579  000C96  18DE               	xorwf	postinc2,w,c
  6580  000C98  A4D8               	btfss	status,2,c
  6581  000C9A  EF51  F006         	goto	u11511
  6582  000C9E  EF53  F006         	goto	u11510
  6583  000CA2                     u11511:
  6584  000CA2  EFA8  F006         	goto	l551
  6585  000CA6                     u11510:
  6586  000CA6                     l10206:
  6587                           
  6588                           ; BSR set to: 1
  6589  000CA6  EE20 F001          	lfsr	2,1
  6590  000CAA  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6591  000CAC  26D9               	addwf	fsr2l,f,c
  6592  000CAE  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6593  000CB0  22DA               	addwfc	fsr2h,f,c
  6594  000CB2  0E58               	movlw	88
  6595  000CB4  6EDF               	movwf	indf2,c
  6596  000CB6  EFA8  F006         	goto	l10222
  6597  000CBA                     l10208:
  6598                           
  6599                           ; BSR set to: 0
  6600  000CBA  0101               	movlb	1	; () banked
  6601  000CBC  EE20 F001          	lfsr	2,1
  6602  000CC0  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6603  000CC2  26D9               	addwf	fsr2l,f,c
  6604  000CC4  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6605  000CC6  22DA               	addwfc	fsr2h,f,c
  6606  000CC8  0E31               	movlw	49
  6607  000CCA  18DE               	xorwf	postinc2,w,c
  6608  000CCC  A4D8               	btfss	status,2,c
  6609  000CCE  EF6B  F006         	goto	u11521
  6610  000CD2  EF6D  F006         	goto	u11520
  6611  000CD6                     u11521:
  6612  000CD6  EF6F  F006         	goto	l10212
  6613  000CDA                     u11520:
  6614  000CDA  EF53  F006         	goto	l10206
  6615  000CDE                     l10212:
  6616                           
  6617                           ; BSR set to: 1
  6618  000CDE  EE20 F002          	lfsr	2,2
  6619  000CE2  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6620  000CE4  26D9               	addwf	fsr2l,f,c
  6621  000CE6  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6622  000CE8  22DA               	addwfc	fsr2h,f,c
  6623  000CEA  0E58               	movlw	88
  6624  000CEC  6EDF               	movwf	indf2,c
  6625  000CEE  EFA8  F006         	goto	l10222
  6626  000CF2                     l10214:
  6627                           
  6628                           ; BSR set to: 0
  6629  000CF2  0101               	movlb	1	; () banked
  6630  000CF4  EE20 F002          	lfsr	2,2
  6631  000CF8  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6632  000CFA  26D9               	addwf	fsr2l,f,c
  6633  000CFC  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6634  000CFE  22DA               	addwfc	fsr2h,f,c
  6635  000D00  0E31               	movlw	49
  6636  000D02  18DE               	xorwf	postinc2,w,c
  6637  000D04  A4D8               	btfss	status,2,c
  6638  000D06  EF87  F006         	goto	u11531
  6639  000D0A  EF89  F006         	goto	u11530
  6640  000D0E                     u11531:
  6641  000D0E  EFA8  F006         	goto	l10222
  6642  000D12                     u11530:
  6643  000D12  EF6F  F006         	goto	l10212
  6644  000D16                     l10220:
  6645                           
  6646                           ; BSR set to: 0
  6647  000D16  C1EC  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6648  000D1A  C1ED  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6649  000D1E  50DF               	movf	indf2,w,c
  6650  000D20  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6651  000D22  6BFC               	clrf	(??_decidirDireccion+1)& (0+255),b
  6652                           
  6653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6654                           ; Switch size 1, requested type "simple"
  6655                           ; Number of cases is 1, Range of values is 0 to 0
  6656                           ; switch strategies available:
  6657                           ; Name         Instructions Cycles
  6658                           ; simple_byte            4     3 (average)
  6659                           ;	Chosen strategy is simple_byte
  6660  000D24  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6661  000D26  0A00               	xorlw	0	; case 0
  6662  000D28  B4D8               	btfsc	status,2,c
  6663  000D2A  EF99  F006         	goto	l11394
  6664  000D2E  EFA8  F006         	goto	l10222
  6665  000D32                     l11394:
  6666                           
  6667                           ; BSR set to: 0
  6668                           ; Switch size 1, requested type "simple"
  6669                           ; Number of cases is 3, Range of values is 1 to 3
  6670                           ; switch strategies available:
  6671                           ; Name         Instructions Cycles
  6672                           ; simple_byte           10     6 (average)
  6673                           ;	Chosen strategy is simple_byte
  6674  000D32  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6675  000D34  0A01               	xorlw	1	; case 1
  6676  000D36  B4D8               	btfsc	status,2,c
  6677  000D38  EF2E  F006         	goto	l10200
  6678  000D3C  0A03               	xorlw	3	; case 2
  6679  000D3E  B4D8               	btfsc	status,2,c
  6680  000D40  EF5D  F006         	goto	l10208
  6681  000D44  0A01               	xorlw	1	; case 3
  6682  000D46  B4D8               	btfsc	status,2,c
  6683  000D48  EF79  F006         	goto	l10214
  6684  000D4C  EFA8  F006         	goto	l10222
  6685  000D50                     l551:
  6686  000D50                     l10222:
  6687                           
  6688                           ;main.c: 925:         if (!(*cambioOrientacionCarro)) {
  6689  000D50  C1F0  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6690  000D54  C1F1  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6691  000D58  50DF               	movf	indf2,w,c
  6692  000D5A  A4D8               	btfss	status,2,c
  6693  000D5C  EFB2  F006         	goto	u11541
  6694  000D60  EFB4  F006         	goto	u11540
  6695  000D64                     u11541:
  6696  000D64  EFA4  F007         	goto	l10432
  6697  000D68                     u11540:
  6698  000D68                     
  6699                           ;main.c: 927:             if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1')
  6700  000D68  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6701  000D6C  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6702  000D70  0E31               	movlw	49
  6703  000D72  18DE               	xorwf	postinc2,w,c
  6704  000D74  A4D8               	btfss	status,2,c
  6705  000D76  EFBF  F006         	goto	u11551
  6706  000D7A  EFC1  F006         	goto	u11550
  6707  000D7E                     u11551:
  6708  000D7E  EFC5  F006         	goto	l10228
  6709  000D82                     u11550:
  6710  000D82  0E01               	movlw	1
  6711  000D84  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6712  000D86  EFEA  F006         	goto	l10236
  6713  000D8A                     l10228:
  6714  000D8A  0101               	movlb	1	; () banked
  6715  000D8C  EE20 F001          	lfsr	2,1
  6716  000D90  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6717  000D92  26D9               	addwf	fsr2l,f,c
  6718  000D94  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6719  000D96  22DA               	addwfc	fsr2h,f,c
  6720  000D98  0E31               	movlw	49
  6721  000D9A  18DE               	xorwf	postinc2,w,c
  6722  000D9C  A4D8               	btfss	status,2,c
  6723  000D9E  EFD3  F006         	goto	u11561
  6724  000DA2  EFD5  F006         	goto	u11560
  6725  000DA6                     u11561:
  6726  000DA6  EFD9  F006         	goto	l10232
  6727  000DAA                     u11560:
  6728  000DAA                     
  6729                           ; BSR set to: 1
  6730  000DAA  0E02               	movlw	2
  6731  000DAC  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6732  000DAE  EFEA  F006         	goto	l10236
  6733  000DB2                     l10232:
  6734                           
  6735                           ; BSR set to: 1
  6736  000DB2  EE20 F002          	lfsr	2,2
  6737  000DB6  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6738  000DB8  26D9               	addwf	fsr2l,f,c
  6739  000DBA  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6740  000DBC  22DA               	addwfc	fsr2h,f,c
  6741  000DBE  0E31               	movlw	49
  6742  000DC0  18DE               	xorwf	postinc2,w,c
  6743  000DC2  A4D8               	btfss	status,2,c
  6744  000DC4  EFE6  F006         	goto	u11571
  6745  000DC8  EFE8  F006         	goto	u11570
  6746  000DCC                     u11571:
  6747  000DCC  EFEA  F006         	goto	l10236
  6748  000DD0                     u11570:
  6749  000DD0                     
  6750                           ; BSR set to: 1
  6751  000DD0  0E03               	movlw	3
  6752  000DD2  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6753  000DD4                     l10236:
  6754                           
  6755                           ;main.c: 935:             *caminoActual = direccionElegida;
  6756  000DD4  C1EE  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6757  000DD8  C1EF  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6758  000DDC  C054  FFDF         	movff	decidirDireccion@direccionElegida,indf2
  6759  000DE0                     
  6760                           ;main.c: 936:             *cambioOrientacionCarro = 1;
  6761  000DE0  C1F0  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6762  000DE4  C1F1  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6763  000DE8  0E01               	movlw	1
  6764  000DEA  6EDF               	movwf	indf2,c
  6765                           
  6766                           ;main.c: 938:         } else {
  6767  000DEC  EFC2  F007         	goto	l10434
  6768  000DF0                     l581:
  6769                           
  6770                           ; BSR set to: 1
  6771  000DF0  EF3C  F007         	goto	l10336
  6772  000DF4                     l10294:
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;main.c: 992:                         if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] ==
      +                           'X') {
  6776  000DF4  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6777  000DF8  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6778  000DFC  0E58               	movlw	88
  6779  000DFE  18DE               	xorwf	postinc2,w,c
  6780  000E00  A4D8               	btfss	status,2,c
  6781  000E02  EF05  F007         	goto	u11581
  6782  000E06  EF07  F007         	goto	u11580
  6783  000E0A                     u11581:
  6784  000E0A  EF3C  F007         	goto	l10336
  6785  000E0E                     u11580:
  6786  000E0E                     
  6787                           ; BSR set to: 0
  6788  000E0E  0101               	movlb	1	; () banked
  6789  000E10  EE20 F001          	lfsr	2,1
  6790  000E14  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6791  000E16  26D9               	addwf	fsr2l,f,c
  6792  000E18  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6793  000E1A  22DA               	addwfc	fsr2h,f,c
  6794  000E1C  0E31               	movlw	49
  6795  000E1E  18DE               	xorwf	postinc2,w,c
  6796  000E20  A4D8               	btfss	status,2,c
  6797  000E22  EF15  F007         	goto	u11591
  6798  000E26  EF17  F007         	goto	u11590
  6799  000E2A                     u11591:
  6800  000E2A  EF21  F007         	goto	l10314
  6801  000E2E                     u11590:
  6802  000E2E                     
  6803                           ; BSR set to: 1
  6804                           ;main.c: 995:                                     caminosRecorrer[SENSOR_PRIORIDAD_MEDIA
      +                           - 1] == '1') {;main.c: 996:                                 *caminoActual = IZQUIERDA;
  6805  000E2E  C1EE  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6806  000E32  C1EF  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6807  000E36  0E02               	movlw	2
  6808  000E38  6EDF               	movwf	indf2,c
  6809  000E3A                     
  6810                           ; BSR set to: 1
  6811                           ;main.c: 997:                                 direccionElegida = DERECHA;
  6812  000E3A  0E03               	movlw	3
  6813  000E3C  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6814                           
  6815                           ;main.c: 998:                             } else if (SENSOR_PRIORIDAD_MEDIA == DERECHA &
      +                          &
  6816  000E3E  EF3C  F007         	goto	l10336
  6817  000E42                     l10314:
  6818                           
  6819                           ; BSR set to: 1
  6820  000E42  EE20 F002          	lfsr	2,2
  6821  000E46  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6822  000E48  26D9               	addwf	fsr2l,f,c
  6823  000E4A  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6824  000E4C  22DA               	addwfc	fsr2h,f,c
  6825  000E4E  0E31               	movlw	49
  6826  000E50  18DE               	xorwf	postinc2,w,c
  6827  000E52  A4D8               	btfss	status,2,c
  6828  000E54  EF2E  F007         	goto	u11601
  6829  000E58  EF30  F007         	goto	u11600
  6830  000E5C                     u11601:
  6831  000E5C  EFF8  F006         	goto	l581
  6832  000E60                     u11600:
  6833  000E60                     
  6834                           ; BSR set to: 1
  6835                           ;main.c: 1007:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1008:                                 *caminoActual = DERECHA;
  6836  000E60  C1EE  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6837  000E64  C1EF  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6838  000E68  0E03               	movlw	3
  6839  000E6A  6EDF               	movwf	indf2,c
  6840  000E6C                     
  6841                           ; BSR set to: 1
  6842                           ;main.c: 1009:                                 direccionElegida = IZQUIERDA;
  6843  000E6C  0E02               	movlw	2
  6844  000E6E  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6845  000E70  EF3C  F007         	goto	l10336
  6846  000E74                     l598:
  6847                           
  6848                           ; BSR set to: 1
  6849  000E74  EFC2  F007         	goto	l10434
  6850  000E78                     l10336:
  6851  000E78  0101               	movlb	1	; () banked
  6852  000E7A  EE20 F001          	lfsr	2,1
  6853  000E7E  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6854  000E80  26D9               	addwf	fsr2l,f,c
  6855  000E82  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6856  000E84  22DA               	addwfc	fsr2h,f,c
  6857  000E86  0E58               	movlw	88
  6858  000E88  18DE               	xorwf	postinc2,w,c
  6859  000E8A  A4D8               	btfss	status,2,c
  6860  000E8C  EF4A  F007         	goto	u11611
  6861  000E90  EF4C  F007         	goto	u11610
  6862  000E94                     u11611:
  6863  000E94  EFC2  F007         	goto	l10434
  6864  000E98                     u11610:
  6865  000E98                     
  6866                           ; BSR set to: 1
  6867  000E98  EE20 F002          	lfsr	2,2
  6868  000E9C  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6869  000E9E  26D9               	addwf	fsr2l,f,c
  6870  000EA0  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6871  000EA2  22DA               	addwfc	fsr2h,f,c
  6872  000EA4  0E31               	movlw	49
  6873  000EA6  18DE               	xorwf	postinc2,w,c
  6874  000EA8  A4D8               	btfss	status,2,c
  6875  000EAA  EF59  F007         	goto	u11621
  6876  000EAE  EF5B  F007         	goto	u11620
  6877  000EB2                     u11621:
  6878  000EB2  EF3A  F007         	goto	l598
  6879  000EB6                     u11620:
  6880  000EB6                     l10340:
  6881                           
  6882                           ; BSR set to: 1
  6883                           ;main.c: 1037:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1038:                                 *caminoActual = DERECHA;
  6884  000EB6  C1EE  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6885  000EBA  C1EF  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6886  000EBE  0E03               	movlw	3
  6887  000EC0  6EDF               	movwf	indf2,c
  6888  000EC2                     
  6889                           ; BSR set to: 1
  6890                           ;main.c: 1039:                                 direccionElegida = ENFRENTE;
  6891  000EC2  0E01               	movlw	1
  6892  000EC4  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6893                           
  6894                           ;main.c: 1040:                             } else if (SENSOR_PRIORIDAD_BAJA == ENFRENTE 
      +                          &&
  6895  000EC6  EFC2  F007         	goto	l10434
  6896  000ECA                     l10382:
  6897                           
  6898                           ; BSR set to: 0
  6899  000ECA  0101               	movlb	1	; () banked
  6900  000ECC  EE20 F001          	lfsr	2,1
  6901  000ED0  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6902  000ED2  26D9               	addwf	fsr2l,f,c
  6903  000ED4  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6904  000ED6  22DA               	addwfc	fsr2h,f,c
  6905  000ED8  0E58               	movlw	88
  6906  000EDA  18DE               	xorwf	postinc2,w,c
  6907  000EDC  A4D8               	btfss	status,2,c
  6908  000EDE  EF73  F007         	goto	u11631
  6909  000EE2  EF75  F007         	goto	u11630
  6910  000EE6                     u11631:
  6911  000EE6  EFC2  F007         	goto	l10434
  6912  000EEA                     u11630:
  6913  000EEA                     
  6914                           ; BSR set to: 1
  6915  000EEA  EE20 F002          	lfsr	2,2
  6916  000EEE  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6917  000EF0  26D9               	addwf	fsr2l,f,c
  6918  000EF2  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6919  000EF4  22DA               	addwfc	fsr2h,f,c
  6920  000EF6  0E31               	movlw	49
  6921  000EF8  18DE               	xorwf	postinc2,w,c
  6922  000EFA  A4D8               	btfss	status,2,c
  6923  000EFC  EF82  F007         	goto	u11641
  6924  000F00  EF84  F007         	goto	u11640
  6925  000F04                     u11641:
  6926  000F04  EF86  F007         	goto	l10396
  6927  000F08                     u11640:
  6928  000F08  EF5B  F007         	goto	l10340
  6929  000F0C                     l10396:
  6930                           
  6931                           ; BSR set to: 1
  6932                           ;main.c: 1100:                                 *contCaminosRecorridos = 3;
  6933  000F0C  C1EC  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6934  000F10  C1ED  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6935  000F14  0E03               	movlw	3
  6936  000F16  6EDF               	movwf	indf2,c
  6937  000F18  EFC2  F007         	goto	l10434
  6938  000F1C                     l10426:
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;main.c: 1139:                     *cambioOrientacionCarro = 0;
  6942  000F1C  C1F0  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6943  000F20  C1F1  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6944  000F24  0E00               	movlw	0
  6945  000F26  6EDF               	movwf	indf2,c
  6946                           
  6947                           ;main.c: 1140:                     *contCaminosRecorridos = 0;
  6948  000F28  C1EC  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6949  000F2C  C1ED  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6950  000F30  0E00               	movlw	0
  6951  000F32  6EDF               	movwf	indf2,c
  6952                           
  6953                           ;main.c: 1141:                     *investigandoCruce = 0;
  6954  000F34  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6955  000F38  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6956  000F3C  0E00               	movlw	0
  6957  000F3E  6EDF               	movwf	indf2,c
  6958  000F40                     
  6959                           ; BSR set to: 0
  6960                           ;main.c: 1142:                     direccionElegida = ALTO;
  6961  000F40  0E04               	movlw	4
  6962  000F42  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6963                           
  6964                           ;main.c: 1144:                     break;
  6965  000F44  EFC2  F007         	goto	l10434
  6966  000F48                     l10432:
  6967  000F48  C1EC  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6968  000F4C  C1ED  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6969  000F50  50DF               	movf	indf2,w,c
  6970  000F52  0100               	movlb	0	; () banked
  6971  000F54  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6972  000F56  6BFC               	clrf	(??_decidirDireccion+1)& (0+255),b
  6973                           
  6974                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6975                           ; Switch size 1, requested type "simple"
  6976                           ; Number of cases is 1, Range of values is 0 to 0
  6977                           ; switch strategies available:
  6978                           ; Name         Instructions Cycles
  6979                           ; simple_byte            4     3 (average)
  6980                           ;	Chosen strategy is simple_byte
  6981  000F58  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6982  000F5A  0A00               	xorlw	0	; case 0
  6983  000F5C  B4D8               	btfsc	status,2,c
  6984  000F5E  EFB3  F007         	goto	l11396
  6985  000F62  EFC2  F007         	goto	l10434
  6986  000F66                     l11396:
  6987                           
  6988                           ; BSR set to: 0
  6989                           ; Switch size 1, requested type "simple"
  6990                           ; Number of cases is 3, Range of values is 1 to 3
  6991                           ; switch strategies available:
  6992                           ; Name         Instructions Cycles
  6993                           ; simple_byte           10     6 (average)
  6994                           ;	Chosen strategy is simple_byte
  6995  000F66  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6996  000F68  0A01               	xorlw	1	; case 1
  6997  000F6A  B4D8               	btfsc	status,2,c
  6998  000F6C  EFFA  F006         	goto	l10294
  6999  000F70  0A03               	xorlw	3	; case 2
  7000  000F72  B4D8               	btfsc	status,2,c
  7001  000F74  EF65  F007         	goto	l10382
  7002  000F78  0A01               	xorlw	1	; case 3
  7003  000F7A  B4D8               	btfsc	status,2,c
  7004  000F7C  EF8E  F007         	goto	l10426
  7005  000F80  EFC2  F007         	goto	l10434
  7006  000F84                     l10434:
  7007                           
  7008                           ;main.c: 1148:         if (direccionElegida == ENFRENTE) {
  7009  000F84  0454               	decf	decidirDireccion@direccionElegida^0,w,c
  7010  000F86  A4D8               	btfss	status,2,c
  7011  000F88  EFC8  F007         	goto	u11651
  7012  000F8C  EFCA  F007         	goto	u11650
  7013  000F90                     u11651:
  7014  000F90  EFD2  F007         	goto	l10440
  7015  000F94                     u11650:
  7016  000F94                     
  7017                           ;main.c: 1149:             *avanceRectoLargo = 1;
  7018  000F94  C1F6  FFD9         	movff	decidirDireccion@avanceRectoLargo,fsr2l
  7019  000F98  C1F7  FFDA         	movff	decidirDireccion@avanceRectoLargo+1,fsr2h
  7020  000F9C  0E01               	movlw	1
  7021  000F9E  6EDF               	movwf	indf2,c
  7022  000FA0                     
  7023                           ;main.c: 1150:             velocidadBaja();
  7024  000FA0  EC38  F02C         	call	_velocidadBaja	;wreg free
  7025  000FA4                     l10440:
  7026                           
  7027                           ;main.c: 1153:         mostrarDireccionElegida(direccionElegida);
  7028  000FA4  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  7029  000FA6  EC50  F027         	call	_mostrarDireccionElegida
  7030                           
  7031                           ;main.c: 1155:     } else if (*posicionInvCruce && *investigandoCruce && caminoEncontrad
      +                          o) {
  7032  000FAA  EF8C  F009         	goto	l645
  7033  000FAE                     l10442:
  7034                           
  7035                           ; BSR set to: 0
  7036  000FAE  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  7037  000FB2  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  7038  000FB6  50DF               	movf	indf2,w,c
  7039  000FB8  B4D8               	btfsc	status,2,c
  7040  000FBA  EFE1  F007         	goto	u11661
  7041  000FBE  EFE3  F007         	goto	u11660
  7042  000FC2                     u11661:
  7043  000FC2  EF89  F008         	goto	l10478
  7044  000FC6                     u11660:
  7045  000FC6                     
  7046                           ; BSR set to: 0
  7047  000FC6  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  7048  000FCA  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  7049  000FCE  50DF               	movf	indf2,w,c
  7050  000FD0  B4D8               	btfsc	status,2,c
  7051  000FD2  EFED  F007         	goto	u11671
  7052  000FD6  EFEF  F007         	goto	u11670
  7053  000FDA                     u11671:
  7054  000FDA  EF89  F008         	goto	l10478
  7055  000FDE                     u11670:
  7056  000FDE                     
  7057                           ; BSR set to: 0
  7058  000FDE  5059               	movf	_caminoEncontrado^0,w,c
  7059  000FE0  B4D8               	btfsc	status,2,c
  7060  000FE2  EFF5  F007         	goto	u11681
  7061  000FE6  EFF7  F007         	goto	u11680
  7062  000FEA                     u11681:
  7063  000FEA  EF89  F008         	goto	l10478
  7064  000FEE                     u11680:
  7065  000FEE                     
  7066                           ; BSR set to: 0
  7067                           ;main.c: 1157:         if (*posicionInvCruce)
  7068  000FEE  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  7069  000FF2  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  7070  000FF6  50DF               	movf	indf2,w,c
  7071  000FF8  B4D8               	btfsc	status,2,c
  7072  000FFA  EF01  F008         	goto	u11691
  7073  000FFE  EF03  F008         	goto	u11690
  7074  001002                     u11691:
  7075  001002  EF09  F008         	goto	l10452
  7076  001006                     u11690:
  7077  001006                     
  7078                           ; BSR set to: 0
  7079                           ;main.c: 1158:             *posicionInvCruce = 0;
  7080  001006  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  7081  00100A  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  7082  00100E  0E00               	movlw	0
  7083  001010  6EDF               	movwf	indf2,c
  7084  001012                     l10452:
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;main.c: 1160:         if (ida) {
  7088  001012  0101               	movlb	1	; () banked
  7089  001014  51FA               	movf	_ida& (0+255),w,b
  7090  001016  B4D8               	btfsc	status,2,c
  7091  001018  EF10  F008         	goto	u11701
  7092  00101C  EF12  F008         	goto	u11700
  7093  001020                     u11701:
  7094  001020  EF27  F008         	goto	l10458
  7095  001024                     u11700:
  7096  001024                     
  7097                           ; BSR set to: 1
  7098                           ;main.c: 1161:             direccionElegida = caminoFinal[crucesRecorridos - 1];
  7099  001024  5140               	movf	_crucesRecorridos& (0+255),w,b
  7100  001026  25F8               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  7101  001028  0100               	movlb	0	; () banked
  7102  00102A  6FFB               	movwf	??_decidirDireccion& (0+255),b
  7103  00102C  0E00               	movlw	0
  7104  00102E  0101               	movlb	1	; () banked
  7105  001030  21F9               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  7106  001032  0100               	movlb	0	; () banked
  7107  001034  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  7108  001036  0EFF               	movlw	255
  7109  001038  25FB               	addwf	??_decidirDireccion& (0+255),w,b
  7110  00103A  6ED9               	movwf	fsr2l,c
  7111  00103C  0EFF               	movlw	255
  7112  00103E  21FC               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  7113  001040  6EDA               	movwf	fsr2h,c
  7114  001042  50DF               	movf	indf2,w,c
  7115  001044  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7116  001046                     
  7117                           ; BSR set to: 0
  7118                           ;main.c: 1162:             crucesRecorridos++;
  7119  001046  0101               	movlb	1	; () banked
  7120  001048  2B40               	incf	_crucesRecorridos& (0+255),f,b
  7121                           
  7122                           ;main.c: 1163:         } else {
  7123  00104A  EF84  F008         	goto	l10476
  7124  00104E                     l10458:
  7125                           
  7126                           ; BSR set to: 1
  7127                           ;main.c: 1165:             if (caminoFinal[crucesRecorridos - 1] == IZQUIERDA)
  7128  00104E  5140               	movf	_crucesRecorridos& (0+255),w,b
  7129  001050  25F8               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  7130  001052  0100               	movlb	0	; () banked
  7131  001054  6FFB               	movwf	??_decidirDireccion& (0+255),b
  7132  001056  0E00               	movlw	0
  7133  001058  0101               	movlb	1	; () banked
  7134  00105A  21F9               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  7135  00105C  0100               	movlb	0	; () banked
  7136  00105E  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  7137  001060  0EFF               	movlw	255
  7138  001062  25FB               	addwf	??_decidirDireccion& (0+255),w,b
  7139  001064  6ED9               	movwf	fsr2l,c
  7140  001066  0EFF               	movlw	255
  7141  001068  21FC               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  7142  00106A  6EDA               	movwf	fsr2h,c
  7143  00106C  0E02               	movlw	2
  7144  00106E  18DE               	xorwf	postinc2,w,c
  7145  001070  A4D8               	btfss	status,2,c
  7146  001072  EF3D  F008         	goto	u11711
  7147  001076  EF3F  F008         	goto	u11710
  7148  00107A                     u11711:
  7149  00107A  EF43  F008         	goto	l10462
  7150  00107E                     u11710:
  7151  00107E                     
  7152                           ; BSR set to: 0
  7153                           ;main.c: 1166:                 direccionElegida = DERECHA;
  7154  00107E  0E03               	movlw	3
  7155  001080  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7156  001082  EF72  F008         	goto	l10468
  7157  001086                     l10462:
  7158                           
  7159                           ; BSR set to: 0
  7160  001086  0101               	movlb	1	; () banked
  7161  001088  5140               	movf	_crucesRecorridos& (0+255),w,b
  7162  00108A  25F8               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  7163  00108C  0100               	movlb	0	; () banked
  7164  00108E  6FFB               	movwf	??_decidirDireccion& (0+255),b
  7165  001090  0E00               	movlw	0
  7166  001092  0101               	movlb	1	; () banked
  7167  001094  21F9               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  7168  001096  0100               	movlb	0	; () banked
  7169  001098  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  7170  00109A  0EFF               	movlw	255
  7171  00109C  25FB               	addwf	??_decidirDireccion& (0+255),w,b
  7172  00109E  6ED9               	movwf	fsr2l,c
  7173  0010A0  0EFF               	movlw	255
  7174  0010A2  21FC               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  7175  0010A4  6EDA               	movwf	fsr2h,c
  7176  0010A6  0E03               	movlw	3
  7177  0010A8  18DE               	xorwf	postinc2,w,c
  7178  0010AA  A4D8               	btfss	status,2,c
  7179  0010AC  EF5A  F008         	goto	u11721
  7180  0010B0  EF5C  F008         	goto	u11720
  7181  0010B4                     u11721:
  7182  0010B4  EF60  F008         	goto	l10466
  7183  0010B8                     u11720:
  7184  0010B8                     
  7185                           ; BSR set to: 0
  7186                           ;main.c: 1168:                 direccionElegida = IZQUIERDA;
  7187  0010B8  0E02               	movlw	2
  7188  0010BA  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7189  0010BC  EF72  F008         	goto	l10468
  7190  0010C0                     l10466:
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;main.c: 1170:                 direccionElegida = caminoFinal[crucesRecorridos - 1];
  7194  0010C0  0101               	movlb	1	; () banked
  7195  0010C2  5140               	movf	_crucesRecorridos& (0+255),w,b
  7196  0010C4  25F8               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  7197  0010C6  0100               	movlb	0	; () banked
  7198  0010C8  6FFB               	movwf	??_decidirDireccion& (0+255),b
  7199  0010CA  0E00               	movlw	0
  7200  0010CC  0101               	movlb	1	; () banked
  7201  0010CE  21F9               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  7202  0010D0  0100               	movlb	0	; () banked
  7203  0010D2  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  7204  0010D4  0EFF               	movlw	255
  7205  0010D6  25FB               	addwf	??_decidirDireccion& (0+255),w,b
  7206  0010D8  6ED9               	movwf	fsr2l,c
  7207  0010DA  0EFF               	movlw	255
  7208  0010DC  21FC               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  7209  0010DE  6EDA               	movwf	fsr2h,c
  7210  0010E0  50DF               	movf	indf2,w,c
  7211  0010E2  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7212  0010E4                     l10468:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;main.c: 1172:             crucesRecorridos--;
  7216  0010E4  0101               	movlb	1	; () banked
  7217  0010E6  0740               	decf	_crucesRecorridos& (0+255),f,b
  7218  0010E8                     
  7219                           ; BSR set to: 1
  7220                           ;main.c: 1174:             if (direccionElegida == ENFRENTE) {
  7221  0010E8  0454               	decf	decidirDireccion@direccionElegida^0,w,c
  7222  0010EA  A4D8               	btfss	status,2,c
  7223  0010EC  EF7A  F008         	goto	u11731
  7224  0010F0  EF7C  F008         	goto	u11730
  7225  0010F4                     u11731:
  7226  0010F4  EF84  F008         	goto	l10476
  7227  0010F8                     u11730:
  7228  0010F8                     
  7229                           ; BSR set to: 1
  7230                           ;main.c: 1175:                 *avanceRectoLargo = 1;
  7231  0010F8  C1F6  FFD9         	movff	decidirDireccion@avanceRectoLargo,fsr2l
  7232  0010FC  C1F7  FFDA         	movff	decidirDireccion@avanceRectoLargo+1,fsr2h
  7233  001100  0E01               	movlw	1
  7234  001102  6EDF               	movwf	indf2,c
  7235  001104                     
  7236                           ; BSR set to: 1
  7237                           ;main.c: 1176:                 velocidadBaja();
  7238  001104  EC38  F02C         	call	_velocidadBaja	;wreg free
  7239  001108                     l10476:
  7240                           
  7241                           ;main.c: 1180:         mostrarDireccionElegida(direccionElegida);
  7242  001108  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  7243  00110A  EC50  F027         	call	_mostrarDireccionElegida
  7244                           
  7245                           ;main.c: 1183:     } else {
  7246  00110E  EF8C  F009         	goto	l645
  7247  001112                     l10478:
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;main.c: 1185:         if (llegoDestino) {
  7251  001112  51FF               	movf	_llegoDestino& (0+255),w,b
  7252  001114  B4D8               	btfsc	status,2,c
  7253  001116  EF8F  F008         	goto	u11741
  7254  00111A  EF91  F008         	goto	u11740
  7255  00111E                     u11741:
  7256  00111E  EF95  F008         	goto	l10482
  7257  001122                     u11740:
  7258  001122                     
  7259                           ; BSR set to: 0
  7260                           ;main.c: 1186:             direccionElegida = ALTO;
  7261  001122  0E04               	movlw	4
  7262  001124  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7263                           
  7264                           ;main.c: 1188:         } else {
  7265  001126  EF8C  F009         	goto	l645
  7266  00112A                     l10482:
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;main.c: 1190:             if (hayCruce(caminosRecorrer, *investigandoCruce)) {
  7270  00112A  C1E6  F040         	movff	decidirDireccion@caminosRecorrer,hayCruce@caminosRecorrer
  7271  00112E  C1E7  F041         	movff	decidirDireccion@caminosRecorrer+1,hayCruce@caminosRecorrer+1
  7272  001132  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  7273  001136  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  7274  00113A  50DF               	movf	indf2,w,c
  7275  00113C  6E42               	movwf	hayCruce@investigandoCruce^0,c
  7276  00113E  EC97  F01C         	call	_hayCruce	;wreg free
  7277  001142  0900               	iorlw	0
  7278  001144  B4D8               	btfsc	status,2,c
  7279  001146  EFA7  F008         	goto	u11751
  7280  00114A  EFA9  F008         	goto	u11750
  7281  00114E                     u11751:
  7282  00114E  EF13  F009         	goto	l10498
  7283  001152                     u11750:
  7284  001152                     
  7285                           ;main.c: 1192:                 velocidadBaja();
  7286  001152  EC38  F02C         	call	_velocidadBaja	;wreg free
  7287  001156                     
  7288                           ;main.c: 1194:                 if (!(*cruceDetectado)) {
  7289  001156  C1F4  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  7290  00115A  C1F5  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  7291  00115E  50DF               	movf	indf2,w,c
  7292  001160  A4D8               	btfss	status,2,c
  7293  001162  EFB5  F008         	goto	u11761
  7294  001166  EFB7  F008         	goto	u11760
  7295  00116A                     u11761:
  7296  00116A  EF8C  F009         	goto	l645
  7297  00116E                     u11760:
  7298  00116E                     
  7299                           ;main.c: 1196:                     if (!(*investigandoCruce))
  7300  00116E  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  7301  001172  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  7302  001176  50DF               	movf	indf2,w,c
  7303  001178  A4D8               	btfss	status,2,c
  7304  00117A  EFC1  F008         	goto	u11771
  7305  00117E  EFC3  F008         	goto	u11770
  7306  001182                     u11771:
  7307  001182  EFC9  F008         	goto	l660
  7308  001186                     u11770:
  7309  001186                     
  7310                           ;main.c: 1197:                         *posicionInvCruce = 1;
  7311  001186  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  7312  00118A  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  7313  00118E  0E01               	movlw	1
  7314  001190  6EDF               	movwf	indf2,c
  7315  001192                     l660:
  7316                           
  7317                           ;main.c: 1200:                     *mapear = 1;
  7318  001192  C1F2  FFD9         	movff	decidirDireccion@mapear,fsr2l
  7319  001196  C1F3  FFDA         	movff	decidirDireccion@mapear+1,fsr2h
  7320  00119A  0E01               	movlw	1
  7321  00119C  6EDF               	movwf	indf2,c
  7322                           
  7323                           ;main.c: 1201:                     *cruceDetectado = 1;
  7324  00119E  C1F4  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  7325  0011A2  C1F5  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  7326  0011A6  0E01               	movlw	1
  7327  0011A8  6EDF               	movwf	indf2,c
  7328                           
  7329                           ;main.c: 1202:                     *investigandoCruce = 1;
  7330  0011AA  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  7331  0011AE  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  7332  0011B2  0E01               	movlw	1
  7333  0011B4  6EDF               	movwf	indf2,c
  7334  0011B6                     
  7335                           ;main.c: 1203:                     direccionElegida = ALTO;
  7336  0011B6  0E04               	movlw	4
  7337  0011B8  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7338  0011BA                     
  7339                           ;main.c: 1205:                     sprintf(buffer, "Investigando Cruce: %c | %c | %c\n",
  7340  0011BA  0E92               	movlw	low _buffer
  7341  0011BC  0100               	movlb	0	; () banked
  7342  0011BE  6FE7               	movwf	sprintf@s& (0+255),b
  7343  0011C0  0E01               	movlw	high _buffer
  7344  0011C2  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  7345  0011C4  0E87               	movlw	low STR_19
  7346  0011C6  6FE9               	movwf	sprintf@fmt& (0+255),b
  7347  0011C8  0E7E               	movlw	high STR_19
  7348  0011CA  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  7349  0011CC  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  7350  0011D0  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  7351  0011D4  50DF               	movf	indf2,w,c
  7352  0011D6  6FFB               	movwf	??_decidirDireccion& (0+255),b
  7353  0011D8  51FB               	movf	??_decidirDireccion& (0+255),w,b
  7354  0011DA  6FEB               	movwf	(?_sprintf+4)& (0+255),b
  7355  0011DC  6BEC               	clrf	(?_sprintf+5)& (0+255),b
  7356  0011DE  0101               	movlb	1	; () banked
  7357  0011E0  EE20 F001          	lfsr	2,1
  7358  0011E4  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  7359  0011E6  26D9               	addwf	fsr2l,f,c
  7360  0011E8  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  7361  0011EA  22DA               	addwfc	fsr2h,f,c
  7362  0011EC  50DF               	movf	indf2,w,c
  7363  0011EE  0100               	movlb	0	; () banked
  7364  0011F0  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  7365  0011F2  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  7366  0011F4  6FED               	movwf	(?_sprintf+6)& (0+255),b
  7367  0011F6  6BEE               	clrf	(?_sprintf+7)& (0+255),b
  7368  0011F8  0101               	movlb	1	; () banked
  7369  0011FA  EE20 F002          	lfsr	2,2
  7370  0011FE  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  7371  001200  26D9               	addwf	fsr2l,f,c
  7372  001202  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  7373  001204  22DA               	addwfc	fsr2h,f,c
  7374  001206  50DF               	movf	indf2,w,c
  7375  001208  0100               	movlb	0	; () banked
  7376  00120A  6FFD               	movwf	(??_decidirDireccion+2)& (0+255),b
  7377  00120C  51FD               	movf	(??_decidirDireccion+2)& (0+255),w,b
  7378  00120E  6FEF               	movwf	(?_sprintf+8)& (0+255),b
  7379  001210  6BF0               	clrf	(?_sprintf+9)& (0+255),b
  7380  001212  ECE4  F029         	call	_sprintf	;wreg free
  7381  001216                     
  7382                           ;main.c: 1207:                     UART_printf(buffer);
  7383  001216  0E92               	movlw	low _buffer
  7384  001218  6E07               	movwf	UART_printf@cadena^0,c
  7385  00121A  0E01               	movlw	high _buffer
  7386  00121C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  7387  00121E  ECDA  F028         	call	_UART_printf	;wreg free
  7388  001222  EF8C  F009         	goto	l645
  7389  001226                     l10498:
  7390                           
  7391                           ;main.c: 1213:                 if (DISTANCIA_PRIORIDAD_ALTA > 14)
  7392  001226  0E00               	movlw	0
  7393  001228  6E34               	movwf	___flge@ff1^0,c
  7394  00122A  0E00               	movlw	0
  7395  00122C  6E35               	movwf	(___flge@ff1+1)^0,c
  7396  00122E  0E60               	movlw	96
  7397  001230  6E36               	movwf	(___flge@ff1+2)^0,c
  7398  001232  0E41               	movlw	65
  7399  001234  6E37               	movwf	(___flge@ff1+3)^0,c
  7400  001236  C114  F038         	movff	_DISTANCIA_PRIORIDAD_ALTA,___flge@ff2
  7401  00123A  C115  F039         	movff	_DISTANCIA_PRIORIDAD_ALTA+1,___flge@ff2+1
  7402  00123E  C116  F03A         	movff	_DISTANCIA_PRIORIDAD_ALTA+2,___flge@ff2+2
  7403  001242  C117  F03B         	movff	_DISTANCIA_PRIORIDAD_ALTA+3,___flge@ff2+3
  7404  001246  ECD3  F021         	call	___flge	;wreg free
  7405  00124A  B0D8               	btfsc	status,0,c
  7406  00124C  EF2A  F009         	goto	u11781
  7407  001250  EF2C  F009         	goto	u11780
  7408  001254                     u11781:
  7409  001254  EF30  F009         	goto	l10502
  7410  001258                     u11780:
  7411  001258  0E01               	movlw	1
  7412  00125A  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7413  00125C  EF8C  F009         	goto	l645
  7414  001260                     l10502:
  7415  001260  0E00               	movlw	0
  7416  001262  6E34               	movwf	___flge@ff1^0,c
  7417  001264  0E00               	movlw	0
  7418  001266  6E35               	movwf	(___flge@ff1+1)^0,c
  7419  001268  0EF0               	movlw	240
  7420  00126A  6E36               	movwf	(___flge@ff1+2)^0,c
  7421  00126C  0E41               	movlw	65
  7422  00126E  6E37               	movwf	(___flge@ff1+3)^0,c
  7423  001270  C110  F038         	movff	_DISTANCIA_PRIORIDAD_MEDIA,___flge@ff2
  7424  001274  C111  F039         	movff	_DISTANCIA_PRIORIDAD_MEDIA+1,___flge@ff2+1
  7425  001278  C112  F03A         	movff	_DISTANCIA_PRIORIDAD_MEDIA+2,___flge@ff2+2
  7426  00127C  C113  F03B         	movff	_DISTANCIA_PRIORIDAD_MEDIA+3,___flge@ff2+3
  7427  001280  ECD3  F021         	call	___flge	;wreg free
  7428  001284  B0D8               	btfsc	status,0,c
  7429  001286  EF47  F009         	goto	u11791
  7430  00128A  EF49  F009         	goto	u11790
  7431  00128E                     u11791:
  7432  00128E  EF4D  F009         	goto	l10506
  7433  001292                     u11790:
  7434  001292  0E02               	movlw	2
  7435  001294  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7436  001296  EF8C  F009         	goto	l645
  7437  00129A                     l10506:
  7438  00129A  0E00               	movlw	0
  7439  00129C  6E34               	movwf	___flge@ff1^0,c
  7440  00129E  0E00               	movlw	0
  7441  0012A0  6E35               	movwf	(___flge@ff1+1)^0,c
  7442  0012A2  0EF0               	movlw	240
  7443  0012A4  6E36               	movwf	(___flge@ff1+2)^0,c
  7444  0012A6  0E41               	movlw	65
  7445  0012A8  6E37               	movwf	(___flge@ff1+3)^0,c
  7446  0012AA  C10C  F038         	movff	_DISTANCIA_PRIORIDAD_BAJA,___flge@ff2
  7447  0012AE  C10D  F039         	movff	_DISTANCIA_PRIORIDAD_BAJA+1,___flge@ff2+1
  7448  0012B2  C10E  F03A         	movff	_DISTANCIA_PRIORIDAD_BAJA+2,___flge@ff2+2
  7449  0012B6  C10F  F03B         	movff	_DISTANCIA_PRIORIDAD_BAJA+3,___flge@ff2+3
  7450  0012BA  ECD3  F021         	call	___flge	;wreg free
  7451  0012BE  B0D8               	btfsc	status,0,c
  7452  0012C0  EF64  F009         	goto	u11801
  7453  0012C4  EF66  F009         	goto	u11800
  7454  0012C8                     u11801:
  7455  0012C8  EF6A  F009         	goto	l10510
  7456  0012CC                     u11800:
  7457  0012CC  0E03               	movlw	3
  7458  0012CE  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7459  0012D0  EF8C  F009         	goto	l645
  7460  0012D4                     l10510:
  7461                           
  7462                           ;main.c: 1220:                     if (!crucesRecorridos && caminoEncontrado && !ida) {
  7463  0012D4  0101               	movlb	1	; () banked
  7464  0012D6  5140               	movf	_crucesRecorridos& (0+255),w,b
  7465  0012D8  A4D8               	btfss	status,2,c
  7466  0012DA  EF71  F009         	goto	u11811
  7467  0012DE  EF73  F009         	goto	u11810
  7468  0012E2                     u11811:
  7469  0012E2  EF8A  F009         	goto	l10518
  7470  0012E6                     u11810:
  7471  0012E6                     
  7472                           ; BSR set to: 1
  7473  0012E6  5059               	movf	_caminoEncontrado^0,w,c
  7474  0012E8  B4D8               	btfsc	status,2,c
  7475  0012EA  EF79  F009         	goto	u11821
  7476  0012EE  EF7B  F009         	goto	u11820
  7477  0012F2                     u11821:
  7478  0012F2  EF8A  F009         	goto	l10518
  7479  0012F6                     u11820:
  7480  0012F6                     
  7481                           ; BSR set to: 1
  7482  0012F6  51FA               	movf	_ida& (0+255),w,b
  7483  0012F8  A4D8               	btfss	status,2,c
  7484  0012FA  EF81  F009         	goto	u11831
  7485  0012FE  EF83  F009         	goto	u11830
  7486  001302                     u11831:
  7487  001302  EF8A  F009         	goto	l10518
  7488  001306                     u11830:
  7489  001306                     
  7490                           ; BSR set to: 1
  7491                           ;main.c: 1221:                         llegoDestino = 1;
  7492  001306  0E01               	movlw	1
  7493  001308  0100               	movlb	0	; () banked
  7494  00130A  6FFF               	movwf	_llegoDestino& (0+255),b
  7495                           
  7496                           ;main.c: 1222:                         direccionElegida = ALTO;
  7497  00130C  0E04               	movlw	4
  7498  00130E  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7499                           
  7500                           ;main.c: 1223:                     } else
  7501  001310  EF8C  F009         	goto	l645
  7502  001314                     l10518:
  7503                           
  7504                           ; BSR set to: 1
  7505                           ;main.c: 1224:                         direccionElegida = 0;
  7506  001314  0E00               	movlw	0
  7507  001316  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7508  001318                     l645:
  7509                           
  7510                           ;main.c: 1234:     return direccionElegida;
  7511  001318  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  7512  00131A  0012               	return		;funcret
  7513  00131C                     __end_of_decidirDireccion:
  7514                           	opt callstack 0
  7515                           
  7516 ;; *************** function _velocidadBaja *****************
  7517 ;; Defined at:
  7518 ;;		line 1357 in file "main.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;		None
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;		None
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  1    wreg      void 
  7525 ;; Registers used:
  7526 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7532 ;;      Params:         0       0       0       0       0       0       0       0       0
  7533 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7534 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7535 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7536 ;;Total ram usage:        0 bytes
  7537 ;; Hardware stack levels used:    1
  7538 ;; Hardware stack levels required when called:    5
  7539 ;; This function calls:
  7540 ;;		_pwmDuty
  7541 ;; This function is called by:
  7542 ;;		_comportamientoBasico
  7543 ;;		_decidirDireccion
  7544 ;;		_probarCruceT
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text27
  7549  005870                     __ptext27:
  7550                           	opt callstack 0
  7551  005870                     _velocidadBaja:
  7552                           	opt callstack 24
  7553  005870                     
  7554                           ;main.c: 1359:     pwmDuty(70, 1);
  7555  005870  0E00               	movlw	0
  7556  005872  0100               	movlb	0	; () banked
  7557  005874  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7558  005876  0E46               	movlw	70
  7559  005878  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7560  00587A  0E01               	movlw	1
  7561  00587C  6F7E               	movwf	pwmDuty@channel& (0+255),b
  7562  00587E  EC17  F01A         	call	_pwmDuty	;wreg free
  7563                           
  7564                           ;main.c: 1360:     pwmDuty(70, 2);
  7565  005882  0E00               	movlw	0
  7566  005884  0100               	movlb	0	; () banked
  7567  005886  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7568  005888  0E46               	movlw	70
  7569  00588A  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7570  00588C  0E02               	movlw	2
  7571  00588E  6F7E               	movwf	pwmDuty@channel& (0+255),b
  7572  005890  EC17  F01A         	call	_pwmDuty	;wreg free
  7573  005894  0012               	return		;funcret
  7574  005896                     __end_of_velocidadBaja:
  7575                           	opt callstack 0
  7576                           
  7577 ;; *************** function _pwmDuty *****************
  7578 ;; Defined at:
  7579 ;;		line 20 in file "./pwm.h"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  cicloTrabajo    2   28[BANK0 ] unsigned int 
  7582 ;;  channel         1   30[BANK0 ] unsigned char 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  duty            4   36[BANK0 ] long 
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      void 
  7587 ;; Registers used:
  7588 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7594 ;;      Params:         0       3       0       0       0       0       0       0       0
  7595 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7596 ;;      Temps:          0       5       0       0       0       0       0       0       0
  7597 ;;      Totals:         0      12       0       0       0       0       0       0       0
  7598 ;;Total ram usage:       12 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; Hardware stack levels required when called:    4
  7601 ;; This function calls:
  7602 ;;		___fldiv
  7603 ;;		___flmul
  7604 ;;		___fltol
  7605 ;;		___xxtofl
  7606 ;;		_map
  7607 ;; This function is called by:
  7608 ;;		_PID
  7609 ;;		_velocidadEstandar
  7610 ;;		_velocidadBaja
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           	psect	text28
  7615  00342E                     __ptext28:
  7616                           	opt callstack 0
  7617  00342E                     _pwmDuty:
  7618                           	opt callstack 24
  7619  00342E                     
  7620                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
  7621  00342E  C07C  F020         	movff	pwmDuty@cicloTrabajo,map@x
  7622  003432  C07D  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
  7623  003436  6A22               	clrf	(map@x+2)^0,c
  7624  003438  6A23               	clrf	(map@x+3)^0,c
  7625  00343A  0E00               	movlw	0
  7626  00343C  6E24               	movwf	map@in_min^0,c
  7627  00343E  0E00               	movlw	0
  7628  003440  6E25               	movwf	(map@in_min+1)^0,c
  7629  003442  0E00               	movlw	0
  7630  003444  6E26               	movwf	(map@in_min+2)^0,c
  7631  003446  0E00               	movlw	0
  7632  003448  6E27               	movwf	(map@in_min+3)^0,c
  7633  00344A  0E64               	movlw	100
  7634  00344C  6E28               	movwf	map@in_max^0,c
  7635  00344E  0E00               	movlw	0
  7636  003450  6E29               	movwf	(map@in_max+1)^0,c
  7637  003452  0E00               	movlw	0
  7638  003454  6E2A               	movwf	(map@in_max+2)^0,c
  7639  003456  0E00               	movlw	0
  7640  003458  6E2B               	movwf	(map@in_max+3)^0,c
  7641  00345A  0E00               	movlw	0
  7642  00345C  6E2C               	movwf	map@out_min^0,c
  7643  00345E  0E00               	movlw	0
  7644  003460  6E2D               	movwf	(map@out_min+1)^0,c
  7645  003462  0E00               	movlw	0
  7646  003464  6E2E               	movwf	(map@out_min+2)^0,c
  7647  003466  0E00               	movlw	0
  7648  003468  6E2F               	movwf	(map@out_min+3)^0,c
  7649  00346A  0EFF               	movlw	255
  7650  00346C  6E30               	movwf	map@out_max^0,c
  7651  00346E  0E03               	movlw	3
  7652  003470  6E31               	movwf	(map@out_max+1)^0,c
  7653  003472  0E00               	movlw	0
  7654  003474  6E32               	movwf	(map@out_max+2)^0,c
  7655  003476  0E00               	movlw	0
  7656  003478  6E33               	movwf	(map@out_max+3)^0,c
  7657  00347A  EC91  F027         	call	_map	;wreg free
  7658  00347E  C020  F084         	movff	?_map,pwmDuty@duty
  7659  003482  C021  F085         	movff	?_map+1,pwmDuty@duty+1
  7660  003486  C022  F086         	movff	?_map+2,pwmDuty@duty+2
  7661  00348A  C023  F087         	movff	?_map+3,pwmDuty@duty+3
  7662  00348E                     
  7663                           ;./pwm.h: 24:     if (duty < 1024) {
  7664  00348E  0100               	movlb	0	; () banked
  7665  003490  BF87               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
  7666  003492  EF57  F01A         	goto	u10000
  7667  003496  5187               	movf	(pwmDuty@duty+3)& (0+255),w,b
  7668  003498  1186               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
  7669  00349A  E107               	bnz	u10001
  7670  00349C  0E04               	movlw	4
  7671  00349E  5D85               	subwf	(pwmDuty@duty+1)& (0+255),w,b
  7672  0034A0  B0D8               	btfsc	status,0,c
  7673  0034A2  EF55  F01A         	goto	u10001
  7674  0034A6  EF57  F01A         	goto	u10000
  7675  0034AA                     u10001:
  7676  0034AA  EFF4  F01A         	goto	l151
  7677  0034AE                     u10000:
  7678  0034AE                     
  7679                           ; BSR set to: 0
  7680                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
  7681  0034AE  0E00               	movlw	0
  7682  0034B0  6E1F               	movwf	___flmul@a^0,c
  7683  0034B2  0E00               	movlw	0
  7684  0034B4  6E20               	movwf	(___flmul@a+1)^0,c
  7685  0034B6  0EFA               	movlw	250
  7686  0034B8  6E21               	movwf	(___flmul@a+2)^0,c
  7687  0034BA  0E43               	movlw	67
  7688  0034BC  6E22               	movwf	(___flmul@a+3)^0,c
  7689  0034BE  0E00               	movlw	0
  7690  0034C0  6E48               	movwf	___fldiv@a^0,c
  7691  0034C2  0EC0               	movlw	192
  7692  0034C4  6E49               	movwf	(___fldiv@a+1)^0,c
  7693  0034C6  0E7F               	movlw	127
  7694  0034C8  6E4A               	movwf	(___fldiv@a+2)^0,c
  7695  0034CA  0E44               	movlw	68
  7696  0034CC  6E4B               	movwf	(___fldiv@a+3)^0,c
  7697  0034CE  C084  F00D         	movff	pwmDuty@duty,___xxtofl@val
  7698  0034D2  C085  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
  7699  0034D6  C086  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
  7700  0034DA  C087  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
  7701  0034DE  0E01               	movlw	1
  7702  0034E0  ECF5  F01A         	call	___xxtofl
  7703  0034E4  C00D  F044         	movff	?___xxtofl,___fldiv@b
  7704  0034E8  C00E  F045         	movff	?___xxtofl+1,___fldiv@b+1
  7705  0034EC  C00F  F046         	movff	?___xxtofl+2,___fldiv@b+2
  7706  0034F0  C010  F047         	movff	?___xxtofl+3,___fldiv@b+3
  7707  0034F4  ECA4  F014         	call	___fldiv	;wreg free
  7708  0034F8  C044  F01B         	movff	?___fldiv,___flmul@b
  7709  0034FC  C045  F01C         	movff	?___fldiv+1,___flmul@b+1
  7710  003500  C046  F01D         	movff	?___fldiv+2,___flmul@b+2
  7711  003504  C047  F01E         	movff	?___fldiv+3,___flmul@b+3
  7712  003508  ECC2  F00E         	call	___flmul	;wreg free
  7713  00350C  C01B  F072         	movff	?___flmul,___fltol@f1
  7714  003510  C01C  F073         	movff	?___flmul+1,___fltol@f1+1
  7715  003514  C01D  F074         	movff	?___flmul+2,___fltol@f1+2
  7716  003518  C01E  F075         	movff	?___flmul+3,___fltol@f1+3
  7717  00351C  EC4F  F021         	call	___fltol	;wreg free
  7718  003520  C072  F084         	movff	?___fltol,pwmDuty@duty
  7719  003524  C073  F085         	movff	?___fltol+1,pwmDuty@duty+1
  7720  003528  C074  F086         	movff	?___fltol+2,pwmDuty@duty+2
  7721  00352C  C075  F087         	movff	?___fltol+3,pwmDuty@duty+3
  7722                           
  7723                           ;./pwm.h: 28:         switch (channel) {
  7724  003530  EFDE  F01A         	goto	l9202
  7725  003534                     l9196:
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
  7729  003534  0E02               	movlw	2
  7730  003536  6F7F               	movwf	??_pwmDuty& (0+255),b
  7731  003538  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
  7732  00353C  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7733  003540  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7734  003544  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7735  003548                     u10015:
  7736  003548  677F               	tstfsz	??_pwmDuty& (0+255),b
  7737  00354A  EFA9  F01A         	goto	u10016
  7738  00354E  EFB1  F01A         	goto	u10017
  7739  003552                     u10016:
  7740  003552  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7741  003554  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7742  003556  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7743  003558  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7744  00355A  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7745  00355C  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
  7746  00355E  EFA4  F01A         	goto	u10015
  7747  003562                     u10017:
  7748  003562  0100               	movlb	0	; () banked
  7749  003564  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7750  003566  6EBE               	movwf	190,c	;volatile
  7751                           
  7752                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
  7753  003568  0ECF               	movlw	207
  7754  00356A  16BD               	andwf	189,f,c	;volatile
  7755                           
  7756                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
  7757  00356C  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7758  00356E  0BF0               	andlw	240
  7759  003570  0B30               	andlw	48
  7760  003572  12BD               	iorwf	189,f,c	;volatile
  7761                           
  7762                           ;./pwm.h: 34:                 break;
  7763  003574  EFF4  F01A         	goto	l151
  7764  003578                     l9198:
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
  7768  003578  0E02               	movlw	2
  7769  00357A  6F7F               	movwf	??_pwmDuty& (0+255),b
  7770  00357C  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
  7771  003580  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7772  003584  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7773  003588  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7774  00358C                     u10025:
  7775  00358C  677F               	tstfsz	??_pwmDuty& (0+255),b
  7776  00358E  EFCB  F01A         	goto	u10026
  7777  003592  EFD3  F01A         	goto	u10027
  7778  003596                     u10026:
  7779  003596  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7780  003598  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7781  00359A  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7782  00359C  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7783  00359E  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7784  0035A0  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
  7785  0035A2  EFC6  F01A         	goto	u10025
  7786  0035A6                     u10027:
  7787  0035A6  0100               	movlb	0	; () banked
  7788  0035A8  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7789  0035AA  6EBB               	movwf	187,c	;volatile
  7790                           
  7791                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
  7792  0035AC  0ECF               	movlw	207
  7793  0035AE  16BA               	andwf	186,f,c	;volatile
  7794                           
  7795                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
  7796  0035B0  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7797  0035B2  0BF0               	andlw	240
  7798  0035B4  0B30               	andlw	48
  7799  0035B6  12BA               	iorwf	186,f,c	;volatile
  7800                           
  7801                           ;./pwm.h: 40:                 break;
  7802  0035B8  EFF4  F01A         	goto	l151
  7803  0035BC                     l9202:
  7804  0035BC  0100               	movlb	0	; () banked
  7805  0035BE  517E               	movf	pwmDuty@channel& (0+255),w,b
  7806  0035C0  6F7F               	movwf	??_pwmDuty& (0+255),b
  7807  0035C2  6B80               	clrf	(??_pwmDuty+1)& (0+255),b
  7808                           
  7809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7810                           ; Switch size 1, requested type "simple"
  7811                           ; Number of cases is 1, Range of values is 0 to 0
  7812                           ; switch strategies available:
  7813                           ; Name         Instructions Cycles
  7814                           ; simple_byte            4     3 (average)
  7815                           ;	Chosen strategy is simple_byte
  7816  0035C4  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7817  0035C6  0A00               	xorlw	0	; case 0
  7818  0035C8  B4D8               	btfsc	status,2,c
  7819  0035CA  EFE9  F01A         	goto	l11398
  7820  0035CE  EFF4  F01A         	goto	l151
  7821  0035D2                     l11398:
  7822                           
  7823                           ; BSR set to: 0
  7824                           ; Switch size 1, requested type "simple"
  7825                           ; Number of cases is 2, Range of values is 1 to 2
  7826                           ; switch strategies available:
  7827                           ; Name         Instructions Cycles
  7828                           ; simple_byte            7     4 (average)
  7829                           ;	Chosen strategy is simple_byte
  7830  0035D2  517F               	movf	??_pwmDuty& (0+255),w,b
  7831  0035D4  0A01               	xorlw	1	; case 1
  7832  0035D6  B4D8               	btfsc	status,2,c
  7833  0035D8  EF9A  F01A         	goto	l9196
  7834  0035DC  0A03               	xorlw	3	; case 2
  7835  0035DE  B4D8               	btfsc	status,2,c
  7836  0035E0  EFBC  F01A         	goto	l9198
  7837  0035E4  EFF4  F01A         	goto	l151
  7838  0035E8                     l151:
  7839                           
  7840                           ; BSR set to: 0
  7841  0035E8  0012               	return		;funcret
  7842  0035EA                     __end_of_pwmDuty:
  7843                           	opt callstack 0
  7844                           
  7845 ;; *************** function _map *****************
  7846 ;; Defined at:
  7847 ;;		line 16 in file "./pwm.h"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;  x               4   31[COMRAM] long 
  7850 ;;  in_min          4   35[COMRAM] long 
  7851 ;;  in_max          4   39[COMRAM] long 
  7852 ;;  out_min         4   43[COMRAM] long 
  7853 ;;  out_max         4   47[COMRAM] long 
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;		None
  7856 ;; Return value:  Size  Location     Type
  7857 ;;                  4   31[COMRAM] long 
  7858 ;; Registers used:
  7859 ;;		wreg, status,2, status,0, cstack
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7865 ;;      Params:        20       0       0       0       0       0       0       0       0
  7866 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7868 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7869 ;;Total ram usage:       20 bytes
  7870 ;; Hardware stack levels used:    1
  7871 ;; Hardware stack levels required when called:    3
  7872 ;; This function calls:
  7873 ;;		___aldiv
  7874 ;;		___lmul
  7875 ;; This function is called by:
  7876 ;;		_pwmDuty
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880                           	psect	text29
  7881  004F22                     __ptext29:
  7882                           	opt callstack 0
  7883  004F22                     _map:
  7884                           	opt callstack 24
  7885  004F22                     
  7886                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  7887  004F22  5024               	movf	map@in_min^0,w,c
  7888  004F24  5C20               	subwf	map@x^0,w,c
  7889  004F26  6E06               	movwf	___lmul@multiplier^0,c
  7890  004F28  5025               	movf	(map@in_min+1)^0,w,c
  7891  004F2A  5821               	subwfb	(map@x+1)^0,w,c
  7892  004F2C  6E07               	movwf	(___lmul@multiplier+1)^0,c
  7893  004F2E  5026               	movf	(map@in_min+2)^0,w,c
  7894  004F30  5822               	subwfb	(map@x+2)^0,w,c
  7895  004F32  6E08               	movwf	(___lmul@multiplier+2)^0,c
  7896  004F34  5027               	movf	(map@in_min+3)^0,w,c
  7897  004F36  5823               	subwfb	(map@x+3)^0,w,c
  7898  004F38  6E09               	movwf	(___lmul@multiplier+3)^0,c
  7899  004F3A  502C               	movf	map@out_min^0,w,c
  7900  004F3C  5C30               	subwf	map@out_max^0,w,c
  7901  004F3E  6E0A               	movwf	___lmul@multiplicand^0,c
  7902  004F40  502D               	movf	(map@out_min+1)^0,w,c
  7903  004F42  5831               	subwfb	(map@out_max+1)^0,w,c
  7904  004F44  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  7905  004F46  502E               	movf	(map@out_min+2)^0,w,c
  7906  004F48  5832               	subwfb	(map@out_max+2)^0,w,c
  7907  004F4A  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  7908  004F4C  502F               	movf	(map@out_min+3)^0,w,c
  7909  004F4E  5833               	subwfb	(map@out_max+3)^0,w,c
  7910  004F50  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  7911  004F52  EC40  F028         	call	___lmul	;wreg free
  7912  004F56  C006  F012         	movff	?___lmul,___aldiv@dividend
  7913  004F5A  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
  7914  004F5E  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
  7915  004F62  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
  7916  004F66  5024               	movf	map@in_min^0,w,c
  7917  004F68  5C28               	subwf	map@in_max^0,w,c
  7918  004F6A  6E16               	movwf	___aldiv@divisor^0,c
  7919  004F6C  5025               	movf	(map@in_min+1)^0,w,c
  7920  004F6E  5829               	subwfb	(map@in_max+1)^0,w,c
  7921  004F70  6E17               	movwf	(___aldiv@divisor+1)^0,c
  7922  004F72  5026               	movf	(map@in_min+2)^0,w,c
  7923  004F74  582A               	subwfb	(map@in_max+2)^0,w,c
  7924  004F76  6E18               	movwf	(___aldiv@divisor+2)^0,c
  7925  004F78  5027               	movf	(map@in_min+3)^0,w,c
  7926  004F7A  582B               	subwfb	(map@in_max+3)^0,w,c
  7927  004F7C  6E19               	movwf	(___aldiv@divisor+3)^0,c
  7928  004F7E  EC44  F020         	call	___aldiv	;wreg free
  7929  004F82  502C               	movf	map@out_min^0,w,c
  7930  004F84  2412               	addwf	?___aldiv^0,w,c
  7931  004F86  6E20               	movwf	?_map^0,c
  7932  004F88  502D               	movf	(map@out_min+1)^0,w,c
  7933  004F8A  2013               	addwfc	(?___aldiv+1)^0,w,c
  7934  004F8C  6E21               	movwf	(?_map+1)^0,c
  7935  004F8E  502E               	movf	(map@out_min+2)^0,w,c
  7936  004F90  2014               	addwfc	(?___aldiv+2)^0,w,c
  7937  004F92  6E22               	movwf	(?_map+2)^0,c
  7938  004F94  502F               	movf	(map@out_min+3)^0,w,c
  7939  004F96  2015               	addwfc	(?___aldiv+3)^0,w,c
  7940  004F98  6E23               	movwf	(?_map+3)^0,c
  7941  004F9A  0012               	return		;funcret
  7942  004F9C                     __end_of_map:
  7943                           	opt callstack 0
  7944                           
  7945 ;; *************** function ___lmul *****************
  7946 ;; Defined at:
  7947 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  multiplier      4    5[COMRAM] unsigned long 
  7950 ;;  multiplicand    4    9[COMRAM] unsigned long 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  product         4   13[COMRAM] unsigned long 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  4    5[COMRAM] unsigned long 
  7955 ;; Registers used:
  7956 ;;		wreg, status,2, status,0
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7962 ;;      Params:         8       0       0       0       0       0       0       0       0
  7963 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7964 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7965 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7966 ;;Total ram usage:       12 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; Hardware stack levels required when called:    2
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_map
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text30
  7977  005080                     __ptext30:
  7978                           	opt callstack 0
  7979  005080                     ___lmul:
  7980                           	opt callstack 24
  7981  005080  0E00               	movlw	0
  7982  005082  6E0E               	movwf	___lmul@product^0,c
  7983  005084  0E00               	movlw	0
  7984  005086  6E0F               	movwf	(___lmul@product+1)^0,c
  7985  005088  0E00               	movlw	0
  7986  00508A  6E10               	movwf	(___lmul@product+2)^0,c
  7987  00508C  0E00               	movlw	0
  7988  00508E  6E11               	movwf	(___lmul@product+3)^0,c
  7989  005090                     l8228:
  7990  005090  A006               	btfss	___lmul@multiplier^0,0,c
  7991  005092  EF4D  F028         	goto	u8261
  7992  005096  EF4F  F028         	goto	u8260
  7993  00509A                     u8261:
  7994  00509A  EF57  F028         	goto	l8232
  7995  00509E                     u8260:
  7996  00509E  500A               	movf	___lmul@multiplicand^0,w,c
  7997  0050A0  260E               	addwf	___lmul@product^0,f,c
  7998  0050A2  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  7999  0050A4  220F               	addwfc	(___lmul@product+1)^0,f,c
  8000  0050A6  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  8001  0050A8  2210               	addwfc	(___lmul@product+2)^0,f,c
  8002  0050AA  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  8003  0050AC  2211               	addwfc	(___lmul@product+3)^0,f,c
  8004  0050AE                     l8232:
  8005  0050AE  90D8               	bcf	status,0,c
  8006  0050B0  360A               	rlcf	___lmul@multiplicand^0,f,c
  8007  0050B2  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8008  0050B4  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8009  0050B6  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8010  0050B8  90D8               	bcf	status,0,c
  8011  0050BA  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  8012  0050BC  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  8013  0050BE  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  8014  0050C0  3206               	rrcf	___lmul@multiplier^0,f,c
  8015  0050C2  5006               	movf	___lmul@multiplier^0,w,c
  8016  0050C4  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  8017  0050C6  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  8018  0050C8  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  8019  0050CA  A4D8               	btfss	status,2,c
  8020  0050CC  EF6A  F028         	goto	u8271
  8021  0050D0  EF6C  F028         	goto	u8270
  8022  0050D4                     u8271:
  8023  0050D4  EF48  F028         	goto	l8228
  8024  0050D8                     u8270:
  8025  0050D8  C00E  F006         	movff	___lmul@product,?___lmul
  8026  0050DC  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  8027  0050E0  C010  F008         	movff	___lmul@product+2,?___lmul+2
  8028  0050E4  C011  F009         	movff	___lmul@product+3,?___lmul+3
  8029  0050E8  0012               	return		;funcret
  8030  0050EA                     __end_of___lmul:
  8031                           	opt callstack 0
  8032                           
  8033 ;; *************** function ___xxtofl *****************
  8034 ;; Defined at:
  8035 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  sign            1    wreg     unsigned char 
  8038 ;;  val             4   12[COMRAM] long 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  sign            1   20[COMRAM] unsigned char 
  8041 ;;  arg             4   22[COMRAM] unsigned long 
  8042 ;;  exp             1   21[COMRAM] unsigned char 
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  4   12[COMRAM] unsigned char 
  8045 ;; Registers used:
  8046 ;;		wreg, status,2, status,0
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8052 ;;      Params:         4       0       0       0       0       0       0       0       0
  8053 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8054 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8055 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8056 ;;Total ram usage:       14 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:    2
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		_pwmDuty
  8063 ;;		_dameDistancia
  8064 ;;		_PID
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           	psect	text31
  8069  0035EA                     __ptext31:
  8070                           	opt callstack 0
  8071  0035EA                     ___xxtofl:
  8072                           	opt callstack 25
  8073                           
  8074                           ;incstack = 0
  8075                           ;___xxtofl@sign stored from wreg
  8076  0035EA  6E15               	movwf	___xxtofl@sign^0,c
  8077  0035EC  5015               	movf	___xxtofl@sign^0,w,c
  8078  0035EE  B4D8               	btfsc	status,2,c
  8079  0035F0  EFFC  F01A         	goto	u9881
  8080  0035F4  EFFE  F01A         	goto	u9880
  8081  0035F8                     u9881:
  8082  0035F8  EF20  F01B         	goto	l1617
  8083  0035FC                     u9880:
  8084  0035FC  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  8085  0035FE  EF05  F01B         	goto	u9890
  8086  003602  EF03  F01B         	goto	u9891
  8087  003606                     u9891:
  8088  003606  EF20  F01B         	goto	l1617
  8089  00360A                     u9890:
  8090  00360A  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  8091  00360E  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  8092  003612  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  8093  003616  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  8094  00361A  1E11               	comf	??___xxtofl^0,f,c
  8095  00361C  1E12               	comf	(??___xxtofl+1)^0,f,c
  8096  00361E  1E13               	comf	(??___xxtofl+2)^0,f,c
  8097  003620  1E14               	comf	(??___xxtofl+3)^0,f,c
  8098  003622  2A11               	incf	??___xxtofl^0,f,c
  8099  003624  0E00               	movlw	0
  8100  003626  2212               	addwfc	(??___xxtofl+1)^0,f,c
  8101  003628  2213               	addwfc	(??___xxtofl+2)^0,f,c
  8102  00362A  2214               	addwfc	(??___xxtofl+3)^0,f,c
  8103  00362C  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  8104  003630  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  8105  003634  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  8106  003638  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  8107  00363C  EF28  F01B         	goto	l9138
  8108  003640                     l1617:
  8109  003640  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  8110  003644  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8111  003648  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8112  00364C  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8113  003650                     l9138:
  8114  003650  500D               	movf	___xxtofl@val^0,w,c
  8115  003652  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  8116  003654  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  8117  003656  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  8118  003658  A4D8               	btfss	status,2,c
  8119  00365A  EF31  F01B         	goto	u9901
  8120  00365E  EF33  F01B         	goto	u9900
  8121  003662                     u9901:
  8122  003662  EF3D  F01B         	goto	l9144
  8123  003666                     u9900:
  8124  003666  0E00               	movlw	0
  8125  003668  6E0D               	movwf	?___xxtofl^0,c
  8126  00366A  0E00               	movlw	0
  8127  00366C  6E0E               	movwf	(?___xxtofl+1)^0,c
  8128  00366E  0E00               	movlw	0
  8129  003670  6E0F               	movwf	(?___xxtofl+2)^0,c
  8130  003672  0E00               	movlw	0
  8131  003674  6E10               	movwf	(?___xxtofl+3)^0,c
  8132  003676  EFCE  F01B         	goto	l1620
  8133  00367A                     l9144:
  8134  00367A  0E96               	movlw	150
  8135  00367C  6E16               	movwf	___xxtofl@exp^0,c
  8136  00367E  EF47  F01B         	goto	l9148
  8137  003682                     l9146:
  8138  003682  2A16               	incf	___xxtofl@exp^0,f,c
  8139  003684  90D8               	bcf	status,0,c
  8140  003686  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  8141  003688  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  8142  00368A  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  8143  00368C  3217               	rrcf	___xxtofl@arg^0,f,c
  8144  00368E                     l9148:
  8145  00368E  0E00               	movlw	0
  8146  003690  1417               	andwf	___xxtofl@arg^0,w,c
  8147  003692  6E11               	movwf	??___xxtofl^0,c
  8148  003694  0E00               	movlw	0
  8149  003696  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  8150  003698  6E12               	movwf	(??___xxtofl+1)^0,c
  8151  00369A  0E00               	movlw	0
  8152  00369C  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  8153  00369E  6E13               	movwf	(??___xxtofl+2)^0,c
  8154  0036A0  0EFE               	movlw	254
  8155  0036A2  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  8156  0036A4  6E14               	movwf	(??___xxtofl+3)^0,c
  8157  0036A6  5011               	movf	??___xxtofl^0,w,c
  8158  0036A8  1012               	iorwf	(??___xxtofl+1)^0,w,c
  8159  0036AA  1013               	iorwf	(??___xxtofl+2)^0,w,c
  8160  0036AC  1014               	iorwf	(??___xxtofl+3)^0,w,c
  8161  0036AE  A4D8               	btfss	status,2,c
  8162  0036B0  EF5C  F01B         	goto	u9911
  8163  0036B4  EF5E  F01B         	goto	u9910
  8164  0036B8                     u9911:
  8165  0036B8  EF41  F01B         	goto	l9146
  8166  0036BC                     u9910:
  8167  0036BC  EF6C  F01B         	goto	l1624
  8168  0036C0                     l9150:
  8169  0036C0  2A16               	incf	___xxtofl@exp^0,f,c
  8170  0036C2  0E01               	movlw	1
  8171  0036C4  2617               	addwf	___xxtofl@arg^0,f,c
  8172  0036C6  0E00               	movlw	0
  8173  0036C8  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  8174  0036CA  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  8175  0036CC  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  8176  0036CE  90D8               	bcf	status,0,c
  8177  0036D0  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  8178  0036D2  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  8179  0036D4  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  8180  0036D6  3217               	rrcf	___xxtofl@arg^0,f,c
  8181  0036D8                     l1624:
  8182  0036D8  0E00               	movlw	0
  8183  0036DA  1417               	andwf	___xxtofl@arg^0,w,c
  8184  0036DC  6E11               	movwf	??___xxtofl^0,c
  8185  0036DE  0E00               	movlw	0
  8186  0036E0  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  8187  0036E2  6E12               	movwf	(??___xxtofl+1)^0,c
  8188  0036E4  0E00               	movlw	0
  8189  0036E6  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  8190  0036E8  6E13               	movwf	(??___xxtofl+2)^0,c
  8191  0036EA  0EFF               	movlw	255
  8192  0036EC  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  8193  0036EE  6E14               	movwf	(??___xxtofl+3)^0,c
  8194  0036F0  5011               	movf	??___xxtofl^0,w,c
  8195  0036F2  1012               	iorwf	(??___xxtofl+1)^0,w,c
  8196  0036F4  1013               	iorwf	(??___xxtofl+2)^0,w,c
  8197  0036F6  1014               	iorwf	(??___xxtofl+3)^0,w,c
  8198  0036F8  A4D8               	btfss	status,2,c
  8199  0036FA  EF81  F01B         	goto	u9921
  8200  0036FE  EF83  F01B         	goto	u9920
  8201  003702                     u9921:
  8202  003702  EF60  F01B         	goto	l9150
  8203  003706                     u9920:
  8204  003706  EF8B  F01B         	goto	l9158
  8205  00370A                     l9156:
  8206  00370A  0616               	decf	___xxtofl@exp^0,f,c
  8207  00370C  90D8               	bcf	status,0,c
  8208  00370E  3617               	rlcf	___xxtofl@arg^0,f,c
  8209  003710  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  8210  003712  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  8211  003714  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  8212  003716                     l9158:
  8213  003716  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  8214  003718  EF90  F01B         	goto	u9931
  8215  00371C  EF92  F01B         	goto	u9930
  8216  003720                     u9931:
  8217  003720  EF9A  F01B         	goto	l1631
  8218  003724                     u9930:
  8219  003724  0E02               	movlw	2
  8220  003726  6016               	cpfslt	___xxtofl@exp^0,c
  8221  003728  EF98  F01B         	goto	u9941
  8222  00372C  EF9A  F01B         	goto	u9940
  8223  003730                     u9941:
  8224  003730  EF85  F01B         	goto	l9156
  8225  003734                     u9940:
  8226  003734                     l1631:
  8227  003734  B016               	btfsc	___xxtofl@exp^0,0,c
  8228  003736  EF9F  F01B         	goto	u9951
  8229  00373A  EFA1  F01B         	goto	u9950
  8230  00373E                     u9951:
  8231  00373E  EFA2  F01B         	goto	l9164
  8232  003742                     u9950:
  8233  003742  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  8234  003744                     l9164:
  8235  003744  90D8               	bcf	status,0,c
  8236  003746  3216               	rrcf	___xxtofl@exp^0,f,c
  8237  003748  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  8238  00374C  6A12               	clrf	(??___xxtofl+1)^0,c
  8239  00374E  6A13               	clrf	(??___xxtofl+2)^0,c
  8240  003750  6A14               	clrf	(??___xxtofl+3)^0,c
  8241  003752  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  8242  003756  6A13               	clrf	(??___xxtofl+2)^0,c
  8243  003758  6A12               	clrf	(??___xxtofl+1)^0,c
  8244  00375A  6A11               	clrf	??___xxtofl^0,c
  8245  00375C  5011               	movf	??___xxtofl^0,w,c
  8246  00375E  1217               	iorwf	___xxtofl@arg^0,f,c
  8247  003760  5012               	movf	(??___xxtofl+1)^0,w,c
  8248  003762  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  8249  003764  5013               	movf	(??___xxtofl+2)^0,w,c
  8250  003766  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  8251  003768  5014               	movf	(??___xxtofl+3)^0,w,c
  8252  00376A  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  8253  00376C  5015               	movf	___xxtofl@sign^0,w,c
  8254  00376E  B4D8               	btfsc	status,2,c
  8255  003770  EFBC  F01B         	goto	u9961
  8256  003774  EFBE  F01B         	goto	u9960
  8257  003778                     u9961:
  8258  003778  EFC6  F01B         	goto	l9174
  8259  00377C                     u9960:
  8260  00377C  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  8261  00377E  EFC5  F01B         	goto	u9970
  8262  003782  EFC3  F01B         	goto	u9971
  8263  003786                     u9971:
  8264  003786  EFC6  F01B         	goto	l9174
  8265  00378A                     u9970:
  8266  00378A  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  8267  00378C                     l9174:
  8268  00378C  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  8269  003790  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  8270  003794  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  8271  003798  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  8272  00379C                     l1620:
  8273  00379C  0012               	return		;funcret
  8274  00379E                     __end_of___xxtofl:
  8275                           	opt callstack 0
  8276                           
  8277 ;; *************** function _sprintf *****************
  8278 ;; Defined at:
  8279 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  s               2  135[BANK0 ] PTR unsigned char 
  8282 ;;		 -> buffer(50), 
  8283 ;;  fmt             2  137[BANK0 ] PTR const unsigned char 
  8284 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
  8285 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  8286 ;;		 -> STR_3(34), 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;  f               6  149[BANK0 ] struct _IO_FILE
  8289 ;;  ap              2  147[BANK0 ] PTR void [1]
  8290 ;;		 -> ?_sprintf(2), 
  8291 ;;  ret             2    0        int 
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  2  135[BANK0 ] int 
  8294 ;; Registers used:
  8295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8301 ;;      Params:         0      10       0       0       0       0       0       0       0
  8302 ;;      Locals:         0      10       0       0       0       0       0       0       0
  8303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8304 ;;      Totals:         0      20       0       0       0       0       0       0       0
  8305 ;;Total ram usage:       20 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; Hardware stack levels required when called:    9
  8308 ;; This function calls:
  8309 ;;		_vfprintf
  8310 ;; This function is called by:
  8311 ;;		_visualizarPasosRealizados
  8312 ;;		_decidirDireccion
  8313 ;;		_probarMapeoDireccionCruces
  8314 ;;		_probarSensores
  8315 ;;		_probarUltrasonico
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           	psect	text32
  8320  0053C8                     __ptext32:
  8321                           	opt callstack 0
  8322  0053C8                     _sprintf:
  8323                           	opt callstack 20
  8324  0053C8  0EEB               	movlw	low (?_sprintf+4)
  8325  0053CA  0100               	movlb	0	; () banked
  8326  0053CC  6FF3               	movwf	sprintf@ap& (0+255),b
  8327  0053CE  0E00               	movlw	high (?_sprintf+4)
  8328  0053D0  6FF4               	movwf	(sprintf@ap+1)& (0+255),b
  8329  0053D2  C0E7  F0F5         	movff	sprintf@s,sprintf@f
  8330  0053D6  C0E8  F0F6         	movff	sprintf@s+1,sprintf@f+1
  8331  0053DA                     
  8332                           ; BSR set to: 0
  8333  0053DA  0E00               	movlw	0
  8334  0053DC  6FF8               	movwf	(sprintf@f+3)& (0+255),b
  8335  0053DE  0E00               	movlw	0
  8336  0053E0  6FF7               	movwf	(sprintf@f+2)& (0+255),b
  8337  0053E2                     
  8338                           ; BSR set to: 0
  8339  0053E2  0E00               	movlw	0
  8340  0053E4  6FFA               	movwf	(sprintf@f+5)& (0+255),b
  8341  0053E6  0E00               	movlw	0
  8342  0053E8  6FF9               	movwf	(sprintf@f+4)& (0+255),b
  8343  0053EA                     
  8344                           ; BSR set to: 0
  8345  0053EA  0EF5               	movlw	low sprintf@f
  8346  0053EC  6FDF               	movwf	vfprintf@fp& (0+255),b
  8347  0053EE  0E00               	movlw	high sprintf@f
  8348  0053F0  6FE0               	movwf	(vfprintf@fp+1)& (0+255),b
  8349  0053F2  C0E9  F0E1         	movff	sprintf@fmt,vfprintf@fmt
  8350  0053F6  C0EA  F0E2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8351  0053FA  0EF3               	movlw	low sprintf@ap
  8352  0053FC  6FE3               	movwf	vfprintf@ap& (0+255),b
  8353  0053FE  0E00               	movlw	high sprintf@ap
  8354  005400  6FE4               	movwf	(vfprintf@ap+1)& (0+255),b
  8355  005402  EC75  F028         	call	_vfprintf	;wreg free
  8356  005406  0100               	movlb	0	; () banked
  8357  005408  51F7               	movf	(sprintf@f+2)& (0+255),w,b
  8358  00540A  25E7               	addwf	sprintf@s& (0+255),w,b
  8359  00540C  6ED9               	movwf	fsr2l,c
  8360  00540E  51F8               	movf	(sprintf@f+3)& (0+255),w,b
  8361  005410  21E8               	addwfc	(sprintf@s+1)& (0+255),w,b
  8362  005412  6EDA               	movwf	fsr2h,c
  8363  005414  0E00               	movlw	0
  8364  005416  6EDF               	movwf	indf2,c
  8365  005418                     
  8366                           ; BSR set to: 0
  8367  005418  0012               	return		;funcret
  8368  00541A                     __end_of_sprintf:
  8369                           	opt callstack 0
  8370                           
  8371 ;; *************** function _vfprintf *****************
  8372 ;; Defined at:
  8373 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;  fp              2  127[BANK0 ] PTR struct _IO_FILE
  8376 ;;		 -> sprintf@f(6), 
  8377 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  8378 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
  8379 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  8380 ;;		 -> STR_3(34), 
  8381 ;;  ap              2  131[BANK0 ] PTR PTR void 
  8382 ;;		 -> sprintf@ap(2), 
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;  cfmt            2  133[BANK0 ] PTR unsigned char 
  8385 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
  8386 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  8387 ;;		 -> STR_3(34), 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  2  127[BANK0 ] int 
  8390 ;; Registers used:
  8391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8397 ;;      Params:         0       6       0       0       0       0       0       0       0
  8398 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8400 ;;      Totals:         0       8       0       0       0       0       0       0       0
  8401 ;;Total ram usage:        8 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    8
  8404 ;; This function calls:
  8405 ;;		_vfpfcnvrt
  8406 ;; This function is called by:
  8407 ;;		_sprintf
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text33
  8412  0050EA                     __ptext33:
  8413                           	opt callstack 0
  8414  0050EA                     _vfprintf:
  8415                           	opt callstack 20
  8416  0050EA                     
  8417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8418  0050EA  C0E1  F0E5         	movff	vfprintf@fmt,vfprintf@cfmt
  8419  0050EE  C0E2  F0E6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8420  0050F2                     
  8421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8422  0050F2  0E00               	movlw	0
  8423  0050F4  0101               	movlb	1	; () banked
  8424  0050F6  6F2D               	movwf	(_nout+1)& (0+255),b
  8425  0050F8  0E00               	movlw	0
  8426  0050FA  6F2C               	movwf	_nout& (0+255),b
  8427                           
  8428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8429  0050FC  EF97  F028         	goto	l9952
  8430  005100                     l9950:
  8431                           
  8432                           ; BSR set to: 1
  8433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8434  005100  C0DF  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  8435  005104  C0E0  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8436  005108  0EE5               	movlw	low vfprintf@cfmt
  8437  00510A  0100               	movlb	0	; () banked
  8438  00510C  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  8439  00510E  0E00               	movlw	high vfprintf@cfmt
  8440  005110  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8441  005112  C0E3  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  8442  005116  C0E4  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8443  00511A  EC8E  F009         	call	_vfpfcnvrt	;wreg free
  8444  00511E  0100               	movlb	0	; () banked
  8445  005120  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  8446  005122  0101               	movlb	1	; () banked
  8447  005124  272C               	addwf	_nout& (0+255),f,b
  8448  005126  0100               	movlb	0	; () banked
  8449  005128  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8450  00512A  0101               	movlb	1	; () banked
  8451  00512C  232D               	addwfc	(_nout+1)& (0+255),f,b
  8452  00512E                     l9952:
  8453                           
  8454                           ; BSR set to: 1
  8455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8456  00512E  C0E5  FFF6         	movff	vfprintf@cfmt,tblptrl
  8457  005132  C0E6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8458  005136                     	if	0	;tblptru may be non-zero
  8459  005136                     	endif
  8460  005136                     	if	0	;tblptru may be non-zero
  8461  005136                     	endif
  8462  005136  0008               	tblrd		*
  8463  005138  50F5               	movf	tablat,w,c
  8464  00513A  0900               	iorlw	0
  8465  00513C  A4D8               	btfss	status,2,c
  8466  00513E  EFA3  F028         	goto	u11271
  8467  005142  EFA5  F028         	goto	u11270
  8468  005146                     u11271:
  8469  005146  EF80  F028         	goto	l9950
  8470  00514A                     u11270:
  8471  00514A                     
  8472                           ; BSR set to: 1
  8473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8474  00514A  C12C  F0DF         	movff	_nout,?_vfprintf
  8475  00514E  C12D  F0E0         	movff	_nout+1,?_vfprintf+1
  8476  005152                     
  8477                           ; BSR set to: 1
  8478  005152  0012               	return		;funcret
  8479  005154                     __end_of_vfprintf:
  8480                           	opt callstack 0
  8481                           
  8482 ;; *************** function _vfpfcnvrt *****************
  8483 ;; Defined at:
  8484 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  8487 ;;		 -> sprintf@f(6), 
  8488 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  8489 ;;		 -> vfprintf@cfmt(2), 
  8490 ;;  ap              2  101[BANK0 ] PTR PTR void 
  8491 ;;		 -> sprintf@ap(2), 
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;  ll              8  107[BANK0 ] long long 
  8494 ;;  llu             8    0        unsigned long long 
  8495 ;;  f               4  119[BANK0 ] unsigned long long 
  8496 ;;  ct              3  123[BANK0 ] unsigned char [3]
  8497 ;;  vp              3    0        PTR void 
  8498 ;;  cp              3    0        PTR unsigned char 
  8499 ;;  i               2    0        int 
  8500 ;;  done            2    0        int 
  8501 ;;  c               1  126[BANK0 ] unsigned char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  2   97[BANK0 ] int 
  8504 ;; Registers used:
  8505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8511 ;;      Params:         0       6       0       0       0       0       0       0       0
  8512 ;;      Locals:         0      20       0       0       0       0       0       0       0
  8513 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8514 ;;      Totals:         0      30       0       0       0       0       0       0       0
  8515 ;;Total ram usage:       30 bytes
  8516 ;; Hardware stack levels used:    1
  8517 ;; Hardware stack levels required when called:    7
  8518 ;; This function calls:
  8519 ;;		_atoi
  8520 ;;		_ctoa
  8521 ;;		_dtoa
  8522 ;;		_efgtoa
  8523 ;;		_fputc
  8524 ;;		_isdigit
  8525 ;;		_isupper
  8526 ;;		_strncmp
  8527 ;;		_tolower
  8528 ;; This function is called by:
  8529 ;;		_vfprintf
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           	psect	text34
  8534  00131C                     __ptext34:
  8535                           	opt callstack 0
  8536  00131C                     _vfpfcnvrt:
  8537                           	opt callstack 20
  8538  00131C                     
  8539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8540  00131C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8541  001320  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8542  001324  CFDE FFF6          	movff	postinc2,tblptrl
  8543  001328  CFDD FFF7          	movff	postdec2,tblptrh
  8544  00132C                     	if	0	;tblptru may be non-zero
  8545  00132C                     	endif
  8546  00132C                     	if	0	;tblptru may be non-zero
  8547  00132C                     	endif
  8548  00132C  0008               	tblrd		*
  8549  00132E  50F5               	movf	tablat,w,c
  8550  001330  0A25               	xorlw	37
  8551  001332  A4D8               	btfss	status,2,c
  8552  001334  EF9E  F009         	goto	u10941
  8553  001338  EFA0  F009         	goto	u10940
  8554  00133C                     u10941:
  8555  00133C  EF46  F00C         	goto	l9814
  8556  001340                     u10940:
  8557  001340                     
  8558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8559  001340  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8560  001344  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8561  001348  2ADE               	incf	postinc2,f,c
  8562  00134A  0E00               	movlw	0
  8563  00134C  22DD               	addwfc	postdec2,f,c
  8564  00134E                     
  8565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8566  00134E  0E00               	movlw	0
  8567  001350  0101               	movlb	1	; () banked
  8568  001352  6F2F               	movwf	(_width+1)& (0+255),b
  8569  001354  0E00               	movlw	0
  8570  001356  6F2E               	movwf	_width& (0+255),b
  8571  001358  C12E  F132         	movff	_width,_flags
  8572  00135C  C12F  F133         	movff	_width+1,_flags+1
  8573  001360                     
  8574                           ; BSR set to: 1
  8575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8576  001360  6930               	setf	_prec& (0+255),b
  8577  001362  6931               	setf	(_prec+1)& (0+255),b
  8578  001364                     
  8579                           ; BSR set to: 1
  8580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  8581  001364  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8582  001368  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8583  00136C  CFDE FFF6          	movff	postinc2,tblptrl
  8584  001370  CFDD FFF7          	movff	postdec2,tblptrh
  8585  001374                     	if	0	;tblptru may be non-zero
  8586  001374                     	endif
  8587  001374                     	if	0	;tblptru may be non-zero
  8588  001374                     	endif
  8589  001374  0008               	tblrd		*
  8590  001376  50F5               	movf	tablat,w,c
  8591  001378  0A2E               	xorlw	46
  8592  00137A  A4D8               	btfss	status,2,c
  8593  00137C  EFC2  F009         	goto	u10951
  8594  001380  EFC4  F009         	goto	u10950
  8595  001384                     u10951:
  8596  001384  EF42  F00A         	goto	l9742
  8597  001388                     u10950:
  8598  001388                     
  8599                           ; BSR set to: 1
  8600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  8601  001388  0E00               	movlw	0
  8602  00138A  6F31               	movwf	(_prec+1)& (0+255),b
  8603  00138C  0E00               	movlw	0
  8604  00138E  6F30               	movwf	_prec& (0+255),b
  8605  001390                     
  8606                           ; BSR set to: 1
  8607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  8608  001390  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8609  001394  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8610  001398  2ADE               	incf	postinc2,f,c
  8611  00139A  0E00               	movlw	0
  8612  00139C  22DD               	addwfc	postdec2,f,c
  8613  00139E                     
  8614                           ; BSR set to: 1
  8615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  8616  00139E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8617  0013A2  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8618  0013A6  CFDE FFF6          	movff	postinc2,tblptrl
  8619  0013AA  CFDD FFF7          	movff	postdec2,tblptrh
  8620  0013AE                     	if	0	;tblptru may be non-zero
  8621  0013AE                     	endif
  8622  0013AE                     	if	0	;tblptru may be non-zero
  8623  0013AE                     	endif
  8624  0013AE  0008               	tblrd		*
  8625  0013B0  50F5               	movf	tablat,w,c
  8626  0013B2  0A2A               	xorlw	42
  8627  0013B4  A4D8               	btfss	status,2,c
  8628  0013B6  EFDF  F009         	goto	u10961
  8629  0013BA  EFE1  F009         	goto	u10960
  8630  0013BE                     u10961:
  8631  0013BE  EFFE  F009         	goto	l9732
  8632  0013C2                     u10960:
  8633  0013C2                     
  8634                           ; BSR set to: 1
  8635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  8636  0013C2  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8637  0013C6  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8638  0013CA  2ADE               	incf	postinc2,f,c
  8639  0013CC  0E00               	movlw	0
  8640  0013CE  22DD               	addwfc	postdec2,f,c
  8641                           
  8642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  8643  0013D0  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8644  0013D4  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8645  0013D8  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8646  0013DC  0E02               	movlw	2
  8647  0013DE  26DE               	addwf	postinc2,f,c
  8648  0013E0  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8649  0013E4  0E00               	movlw	0
  8650  0013E6  22DD               	addwfc	postdec2,f,c
  8651  0013E8  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8652  0013EC  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8653  0013F0  CFDE F130          	movff	postinc2,_prec
  8654  0013F4  CFDD F131          	movff	postdec2,_prec+1
  8655                           
  8656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  8657  0013F8  EF42  F00A         	goto	l9742
  8658  0013FC                     l9732:
  8659                           
  8660                           ; BSR set to: 1
  8661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  8662  0013FC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8663  001400  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8664  001404  CFDE F00D          	movff	postinc2,atoi@s
  8665  001408  CFDD F00E          	movff	postdec2,atoi@s+1
  8666  00140C  ECCF  F01B         	call	_atoi	;wreg free
  8667  001410  C00D  F130         	movff	?_atoi,_prec
  8668  001414  C00E  F131         	movff	?_atoi+1,_prec+1
  8669                           
  8670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8671  001418  EF15  F00A         	goto	l9736
  8672  00141C                     l9734:
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  8676  00141C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8677  001420  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8678  001424  2ADE               	incf	postinc2,f,c
  8679  001426  0E00               	movlw	0
  8680  001428  22DD               	addwfc	postdec2,f,c
  8681  00142A                     l9736:
  8682  00142A  0ED0               	movlw	208
  8683  00142C  0100               	movlb	0	; () banked
  8684  00142E  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  8685  001430  0EFF               	movlw	255
  8686  001432  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8687  001434  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8688  001438  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8689  00143C  CFDE FFF6          	movff	postinc2,tblptrl
  8690  001440  CFDD FFF7          	movff	postdec2,tblptrh
  8691  001444                     	if	0	;tblptru may be non-zero
  8692  001444                     	endif
  8693  001444                     	if	0	;tblptru may be non-zero
  8694  001444                     	endif
  8695  001444  0008               	tblrd		*
  8696  001446  50F5               	movf	tablat,w,c
  8697  001448  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8698  00144A  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8699  00144C  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  8700  00144E  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8701  001450  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8702  001452  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8703  001454  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8704  001456  E10A               	bnz	u10970
  8705  001458  0E0A               	movlw	10
  8706  00145A  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8707  00145C  A0D8               	btfss	status,0,c
  8708  00145E  EF33  F00A         	goto	u10971
  8709  001462  EF36  F00A         	goto	u10970
  8710  001466                     u10971:
  8711  001466  0E01               	movlw	1
  8712  001468  EF37  F00A         	goto	u10980
  8713  00146C                     u10970:
  8714  00146C  0E00               	movlw	0
  8715  00146E                     u10980:
  8716  00146E  6FD3               	movwf	_vfpfcnvrt$953& (0+255),b
  8717  001470  6BD4               	clrf	(_vfpfcnvrt$953+1)& (0+255),b
  8718  001472                     
  8719                           ; BSR set to: 0
  8720  001472  51D3               	movf	_vfpfcnvrt$953& (0+255),w,b
  8721  001474  11D4               	iorwf	(_vfpfcnvrt$953+1)& (0+255),w,b
  8722  001476  A4D8               	btfss	status,2,c
  8723  001478  EF40  F00A         	goto	u10991
  8724  00147C  EF42  F00A         	goto	u10990
  8725  001480                     u10991:
  8726  001480  EF0E  F00A         	goto	l9734
  8727  001484                     u10990:
  8728  001484                     l9742:
  8729                           
  8730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  8731  001484  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8732  001488  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8733  00148C  CFDE FFF6          	movff	postinc2,tblptrl
  8734  001490  CFDD FFF7          	movff	postdec2,tblptrh
  8735  001494                     	if	0	;tblptru may be non-zero
  8736  001494                     	endif
  8737  001494                     	if	0	;tblptru may be non-zero
  8738  001494                     	endif
  8739  001494  0008               	tblrd		*
  8740  001496  50F5               	movf	tablat,w,c
  8741  001498  6E0C               	movwf	tolower@c^0,c
  8742  00149A  6A0D               	clrf	(tolower@c+1)^0,c
  8743  00149C  ECAA  F028         	call	_tolower	;wreg free
  8744  0014A0  500C               	movf	?_tolower^0,w,c
  8745  0014A2  0100               	movlb	0	; () banked
  8746  0014A4  6FDB               	movwf	vfpfcnvrt@ct& (0+255),b
  8747  0014A6                     
  8748                           ; BSR set to: 0
  8749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  8750  0014A6  51DB               	movf	vfpfcnvrt@ct& (0+255),w,b
  8751  0014A8  B4D8               	btfsc	status,2,c
  8752  0014AA  EF59  F00A         	goto	u11001
  8753  0014AE  EF5B  F00A         	goto	u11000
  8754  0014B2                     u11001:
  8755  0014B2  EF95  F00A         	goto	l9752
  8756  0014B6                     u11000:
  8757  0014B6                     
  8758                           ; BSR set to: 0
  8759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  8760  0014B6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8761  0014BA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8762  0014BE  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8763  0014C2  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8764  0014C6  0E01               	movlw	1
  8765  0014C8  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8766  0014CA  0E00               	movlw	0
  8767  0014CC  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8768  0014CE  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8769  0014D2  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8770  0014D6                     	if	0	;tblptru may be non-zero
  8771  0014D6                     	endif
  8772  0014D6                     	if	0	;tblptru may be non-zero
  8773  0014D6                     	endif
  8774  0014D6  0008               	tblrd		*
  8775  0014D8  50F5               	movf	tablat,w,c
  8776  0014DA  6E0C               	movwf	tolower@c^0,c
  8777  0014DC  6A0D               	clrf	(tolower@c+1)^0,c
  8778  0014DE  ECAA  F028         	call	_tolower	;wreg free
  8779  0014E2  500C               	movf	?_tolower^0,w,c
  8780  0014E4  0100               	movlb	0	; () banked
  8781  0014E6  6FDC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  8782  0014E8                     
  8783                           ; BSR set to: 0
  8784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  8785  0014E8  51DC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  8786  0014EA  B4D8               	btfsc	status,2,c
  8787  0014EC  EF7A  F00A         	goto	u11011
  8788  0014F0  EF7C  F00A         	goto	u11010
  8789  0014F4                     u11011:
  8790  0014F4  EF95  F00A         	goto	l9752
  8791  0014F8                     u11010:
  8792  0014F8                     
  8793                           ; BSR set to: 0
  8794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  8795  0014F8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8796  0014FC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8797  001500  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8798  001504  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8799  001508  0E02               	movlw	2
  8800  00150A  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8801  00150C  0E00               	movlw	0
  8802  00150E  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8803  001510  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8804  001514  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8805  001518                     	if	0	;tblptru may be non-zero
  8806  001518                     	endif
  8807  001518                     	if	0	;tblptru may be non-zero
  8808  001518                     	endif
  8809  001518  0008               	tblrd		*
  8810  00151A  50F5               	movf	tablat,w,c
  8811  00151C  6E0C               	movwf	tolower@c^0,c
  8812  00151E  6A0D               	clrf	(tolower@c+1)^0,c
  8813  001520  ECAA  F028         	call	_tolower	;wreg free
  8814  001524  500C               	movf	?_tolower^0,w,c
  8815  001526  0100               	movlb	0	; () banked
  8816  001528  6FDD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  8817  00152A                     l9752:
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8821  00152A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8822  00152E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8823  001532  CFDE FFF6          	movff	postinc2,tblptrl
  8824  001536  CFDD FFF7          	movff	postdec2,tblptrh
  8825  00153A                     	if	0	;tblptru may be non-zero
  8826  00153A                     	endif
  8827  00153A                     	if	0	;tblptru may be non-zero
  8828  00153A                     	endif
  8829  00153A  0008               	tblrd		*
  8830  00153C  50F5               	movf	tablat,w,c
  8831  00153E  0A63               	xorlw	99
  8832  001540  A4D8               	btfss	status,2,c
  8833  001542  EFA5  F00A         	goto	u11021
  8834  001546  EFA7  F00A         	goto	u11020
  8835  00154A                     u11021:
  8836  00154A  EFCE  F00A         	goto	l9760
  8837  00154E                     u11020:
  8838  00154E                     
  8839                           ; BSR set to: 0
  8840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  8841  00154E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8842  001552  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8843  001556  2ADE               	incf	postinc2,f,c
  8844  001558  0E00               	movlw	0
  8845  00155A  22DD               	addwfc	postdec2,f,c
  8846                           
  8847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8848  00155C  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8849  001560  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8850  001564  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8851  001568  0E02               	movlw	2
  8852  00156A  26DE               	addwf	postinc2,f,c
  8853  00156C  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8854  001570  0E00               	movlw	0
  8855  001572  22DD               	addwfc	postdec2,f,c
  8856  001574  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8857  001578  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8858  00157C  50DF               	movf	indf2,w,c
  8859  00157E  6FDE               	movwf	vfpfcnvrt@c& (0+255),b
  8860  001580                     
  8861                           ; BSR set to: 0
  8862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  8863  001580  C0C1  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  8864  001584  C0C2  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8865  001588  C0DE  F023         	movff	vfpfcnvrt@c,ctoa@c
  8866  00158C  EC37  F029         	call	_ctoa	;wreg free
  8867  001590  C021  F0C1         	movff	?_ctoa,?_vfpfcnvrt
  8868  001594  C022  F0C2         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8869  001598  EF61  F00C         	goto	l941
  8870  00159C                     l9760:
  8871                           
  8872                           ; BSR set to: 0
  8873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8874  00159C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8875  0015A0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8876  0015A4  CFDE FFF6          	movff	postinc2,tblptrl
  8877  0015A8  CFDD FFF7          	movff	postdec2,tblptrh
  8878  0015AC                     	if	0	;tblptru may be non-zero
  8879  0015AC                     	endif
  8880  0015AC                     	if	0	;tblptru may be non-zero
  8881  0015AC                     	endif
  8882  0015AC  0008               	tblrd		*
  8883  0015AE  50F5               	movf	tablat,w,c
  8884  0015B0  0A64               	xorlw	100
  8885  0015B2  B4D8               	btfsc	status,2,c
  8886  0015B4  EFDE  F00A         	goto	u11031
  8887  0015B8  EFE0  F00A         	goto	u11030
  8888  0015BC                     u11031:
  8889  0015BC  EFF2  F00A         	goto	l9764
  8890  0015C0                     u11030:
  8891  0015C0                     
  8892                           ; BSR set to: 0
  8893  0015C0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8894  0015C4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8895  0015C8  CFDE FFF6          	movff	postinc2,tblptrl
  8896  0015CC  CFDD FFF7          	movff	postdec2,tblptrh
  8897  0015D0                     	if	0	;tblptru may be non-zero
  8898  0015D0                     	endif
  8899  0015D0                     	if	0	;tblptru may be non-zero
  8900  0015D0                     	endif
  8901  0015D0  0008               	tblrd		*
  8902  0015D2  50F5               	movf	tablat,w,c
  8903  0015D4  0A69               	xorlw	105
  8904  0015D6  A4D8               	btfss	status,2,c
  8905  0015D8  EFF0  F00A         	goto	u11041
  8906  0015DC  EFF2  F00A         	goto	u11040
  8907  0015E0                     u11041:
  8908  0015E0  EF32  F00B         	goto	l9770
  8909  0015E4                     u11040:
  8910  0015E4                     l9764:
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8914  0015E4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8915  0015E8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8916  0015EC  2ADE               	incf	postinc2,f,c
  8917  0015EE  0E00               	movlw	0
  8918  0015F0  22DD               	addwfc	postdec2,f,c
  8919                           
  8920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8921  0015F2  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8922  0015F6  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8923  0015FA  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8924  0015FE  0E02               	movlw	2
  8925  001600  26DE               	addwf	postinc2,f,c
  8926  001602  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8927  001606  0E00               	movlw	0
  8928  001608  22DD               	addwfc	postdec2,f,c
  8929  00160A  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8930  00160E  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8931  001612  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  8932  001616  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  8933  00161A  0E00               	movlw	0
  8934  00161C  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8935  00161E  0EFF               	movlw	-1
  8936  001620  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8937  001622  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8938  001624  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8939  001626  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8940  001628  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8941  00162A  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8942  00162C                     
  8943                           ; BSR set to: 0
  8944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8945  00162C  C0C1  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  8946  001630  C0C2  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8947  001634  C0CB  F023         	movff	vfpfcnvrt@ll,dtoa@d
  8948  001638  C0CC  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8949  00163C  C0CD  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8950  001640  C0CE  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8951  001644  C0CF  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8952  001648  C0D0  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8953  00164C  C0D1  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8954  001650  C0D2  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8955  001654  EC72  F016         	call	_dtoa	;wreg free
  8956  001658  C021  F0C1         	movff	?_dtoa,?_vfpfcnvrt
  8957  00165C  C022  F0C2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8958  001660  EF61  F00C         	goto	l941
  8959  001664                     l9770:
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  8963  001664  0E66               	movlw	102
  8964  001666  19DB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  8965  001668  A4D8               	btfss	status,2,c
  8966  00166A  EF39  F00B         	goto	u11051
  8967  00166E  EF3B  F00B         	goto	u11050
  8968  001672                     u11051:
  8969  001672  EF7B  F00B         	goto	l9782
  8970  001676                     u11050:
  8971  001676                     
  8972                           ; BSR set to: 0
  8973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  8974  001676  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8975  00167A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8976  00167E  CFDE FFF6          	movff	postinc2,tblptrl
  8977  001682  CFDD FFF7          	movff	postdec2,tblptrh
  8978  001686                     	if	0	;tblptru may be non-zero
  8979  001686                     	endif
  8980  001686                     	if	0	;tblptru may be non-zero
  8981  001686                     	endif
  8982  001686  0008               	tblrd		*
  8983  001688  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  8984  00168C                     
  8985                           ; BSR set to: 0
  8986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  8987  00168C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8988  001690  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8989  001694  2ADE               	incf	postinc2,f,c
  8990  001696  0E00               	movlw	0
  8991  001698  22DD               	addwfc	postdec2,f,c
  8992  00169A                     
  8993                           ; BSR set to: 0
  8994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8995  00169A  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8996  00169E  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8997  0016A2  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8998  0016A6  0E04               	movlw	4
  8999  0016A8  26DE               	addwf	postinc2,f,c
  9000  0016AA  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  9001  0016AE  0E00               	movlw	0
  9002  0016B0  22DD               	addwfc	postdec2,f,c
  9003  0016B2  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9004  0016B6  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9005  0016BA  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  9006  0016BE  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  9007  0016C2  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  9008  0016C6  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  9009  0016CA                     l9778:
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  9013  0016CA  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  9014  0016CE  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  9015  0016D2  C0D7  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  9016  0016D6  C0D8  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  9017  0016DA  C0D9  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  9018  0016DE  C0DA  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  9019  0016E2  C0DE  F083         	movff	vfpfcnvrt@c,efgtoa@c
  9020  0016E6  EC09  F000         	call	_efgtoa	;wreg free
  9021  0016EA  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  9022  0016EE  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  9023  0016F2  EF61  F00C         	goto	l941
  9024  0016F6                     l9782:
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9028  0016F6  0EDB               	movlw	low vfpfcnvrt@ct
  9029  0016F8  6E06               	movwf	strncmp@_l^0,c
  9030  0016FA  0E00               	movlw	high vfpfcnvrt@ct
  9031  0016FC  6E07               	movwf	(strncmp@_l+1)^0,c
  9032  0016FE  0EFB               	movlw	low STR_31
  9033  001700  6E08               	movwf	strncmp@_r^0,c
  9034  001702  0E7F               	movlw	high STR_31
  9035  001704  6E09               	movwf	(strncmp@_r+1)^0,c
  9036  001706  0E00               	movlw	0
  9037  001708  6E0B               	movwf	(strncmp@n+1)^0,c
  9038  00170A  0E02               	movlw	2
  9039  00170C  6E0A               	movwf	strncmp@n^0,c
  9040  00170E  ECC3  F023         	call	_strncmp	;wreg free
  9041  001712  5006               	movf	?_strncmp^0,w,c
  9042  001714  1007               	iorwf	(?_strncmp+1)^0,w,c
  9043  001716  A4D8               	btfss	status,2,c
  9044  001718  EF90  F00B         	goto	u11061
  9045  00171C  EF92  F00B         	goto	u11060
  9046  001720                     u11061:
  9047  001720  EF0E  F00C         	goto	l9798
  9048  001724                     u11060:
  9049  001724                     
  9050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9051  001724  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9052  001728  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9053  00172C  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  9054  001730  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  9055  001734  0E01               	movlw	1
  9056  001736  0100               	movlb	0	; () banked
  9057  001738  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  9058  00173A  0E00               	movlw	0
  9059  00173C  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  9060  00173E  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  9061  001742  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  9062  001746                     	if	0	;tblptru may be non-zero
  9063  001746                     	endif
  9064  001746                     	if	0	;tblptru may be non-zero
  9065  001746                     	endif
  9066  001746  0008               	tblrd		*
  9067  001748  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  9068  00174C  0EBF               	movlw	191
  9069  00174E  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  9070  001750  0EFF               	movlw	255
  9071  001752  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  9072  001754  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9073  001758  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9074  00175C  CFDE FFF6          	movff	postinc2,tblptrl
  9075  001760  CFDD FFF7          	movff	postdec2,tblptrh
  9076  001764                     	if	0	;tblptru may be non-zero
  9077  001764                     	endif
  9078  001764                     	if	0	;tblptru may be non-zero
  9079  001764                     	endif
  9080  001764  0008               	tblrd		*
  9081  001766  50F5               	movf	tablat,w,c
  9082  001768  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  9083  00176A  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  9084  00176C  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  9085  00176E  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  9086  001770  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9087  001772  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  9088  001774  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  9089  001776  E10A               	bnz	u11070
  9090  001778  0E1A               	movlw	26
  9091  00177A  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  9092  00177C  A0D8               	btfss	status,0,c
  9093  00177E  EFC3  F00B         	goto	u11071
  9094  001782  EFC6  F00B         	goto	u11070
  9095  001786                     u11071:
  9096  001786  0E01               	movlw	1
  9097  001788  EFC7  F00B         	goto	u11080
  9098  00178C                     u11070:
  9099  00178C  0E00               	movlw	0
  9100  00178E                     u11080:
  9101  00178E  6FD5               	movwf	_vfpfcnvrt$959& (0+255),b
  9102  001790  6BD6               	clrf	(_vfpfcnvrt$959+1)& (0+255),b
  9103  001792                     
  9104                           ; BSR set to: 0
  9105  001792  51D5               	movf	_vfpfcnvrt$959& (0+255),w,b
  9106  001794  11D6               	iorwf	(_vfpfcnvrt$959+1)& (0+255),w,b
  9107  001796  B4D8               	btfsc	status,2,c
  9108  001798  EFD0  F00B         	goto	u11091
  9109  00179C  EFD2  F00B         	goto	u11090
  9110  0017A0                     u11091:
  9111  0017A0  EFEC  F00B         	goto	l9792
  9112  0017A4                     u11090:
  9113  0017A4                     
  9114                           ; BSR set to: 0
  9115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  9116  0017A4  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9117  0017A8  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9118  0017AC  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  9119  0017B0  0E04               	movlw	4
  9120  0017B2  26DE               	addwf	postinc2,f,c
  9121  0017B4  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  9122  0017B8  0E00               	movlw	0
  9123  0017BA  22DD               	addwfc	postdec2,f,c
  9124  0017BC  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9125  0017C0  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9126  0017C4  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  9127  0017C8  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  9128  0017CC  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  9129  0017D0  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  9130                           
  9131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  9132  0017D4  EF04  F00C         	goto	l952
  9133  0017D8                     l9792:
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9137  0017D8  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9138  0017DC  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9139  0017E0  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  9140  0017E4  0E04               	movlw	4
  9141  0017E6  26DE               	addwf	postinc2,f,c
  9142  0017E8  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  9143  0017EC  0E00               	movlw	0
  9144  0017EE  22DD               	addwfc	postdec2,f,c
  9145  0017F0  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9146  0017F4  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9147  0017F8  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  9148  0017FC  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  9149  001800  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  9150  001804  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  9151  001808                     l952:
  9152                           
  9153                           ; BSR set to: 0
  9154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  9155  001808  0E02               	movlw	2
  9156  00180A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9157  00180E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9158  001812  26DE               	addwf	postinc2,f,c
  9159  001814  0E00               	movlw	0
  9160  001816  22DD               	addwfc	postdec2,f,c
  9161  001818  EF65  F00B         	goto	l9778
  9162  00181C                     l9798:
  9163                           
  9164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9165  00181C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9166  001820  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9167  001824  CFDE FFF6          	movff	postinc2,tblptrl
  9168  001828  CFDD FFF7          	movff	postdec2,tblptrh
  9169  00182C                     	if	0	;tblptru may be non-zero
  9170  00182C                     	endif
  9171  00182C                     	if	0	;tblptru may be non-zero
  9172  00182C                     	endif
  9173  00182C  0008               	tblrd		*
  9174  00182E  50F5               	movf	tablat,w,c
  9175  001830  0A25               	xorlw	37
  9176  001832  A4D8               	btfss	status,2,c
  9177  001834  EF1E  F00C         	goto	u11101
  9178  001838  EF20  F00C         	goto	u11100
  9179  00183C                     u11101:
  9180  00183C  EF38  F00C         	goto	l9808
  9181  001840                     u11100:
  9182  001840                     
  9183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9184  001840  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9185  001844  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9186  001848  2ADE               	incf	postinc2,f,c
  9187  00184A  0E00               	movlw	0
  9188  00184C  22DD               	addwfc	postdec2,f,c
  9189  00184E                     
  9190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9191  00184E  0E00               	movlw	0
  9192  001850  6E07               	movwf	(fputc@c+1)^0,c
  9193  001852  0E25               	movlw	37
  9194  001854  6E06               	movwf	fputc@c^0,c
  9195  001856  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  9196  00185A  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9197  00185E  EC2E  F024         	call	_fputc	;wreg free
  9198  001862                     l9804:
  9199                           
  9200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9201  001862  0E00               	movlw	0
  9202  001864  0100               	movlb	0	; () banked
  9203  001866  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9204  001868  0E01               	movlw	1
  9205  00186A  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  9206  00186C  EF61  F00C         	goto	l941
  9207  001870                     l9808:
  9208                           
  9209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9210  001870  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9211  001874  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9212  001878  2ADE               	incf	postinc2,f,c
  9213  00187A  0E00               	movlw	0
  9214  00187C  22DD               	addwfc	postdec2,f,c
  9215  00187E                     
  9216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9217  00187E  0E00               	movlw	0
  9218  001880  0100               	movlb	0	; () banked
  9219  001882  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9220  001884  0E00               	movlw	0
  9221  001886  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  9222  001888  EF61  F00C         	goto	l941
  9223  00188C                     l9814:
  9224                           
  9225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9226  00188C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9227  001890  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9228  001894  CFDE FFF6          	movff	postinc2,tblptrl
  9229  001898  CFDD FFF7          	movff	postdec2,tblptrh
  9230  00189C                     	if	0	;tblptru may be non-zero
  9231  00189C                     	endif
  9232  00189C                     	if	0	;tblptru may be non-zero
  9233  00189C                     	endif
  9234  00189C  0008               	tblrd		*
  9235  00189E  50F5               	movf	tablat,w,c
  9236  0018A0  6E06               	movwf	fputc@c^0,c
  9237  0018A2  6A07               	clrf	(fputc@c+1)^0,c
  9238  0018A4  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  9239  0018A8  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9240  0018AC  EC2E  F024         	call	_fputc	;wreg free
  9241  0018B0                     
  9242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9243  0018B0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9244  0018B4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9245  0018B8  2ADE               	incf	postinc2,f,c
  9246  0018BA  0E00               	movlw	0
  9247  0018BC  22DD               	addwfc	postdec2,f,c
  9248  0018BE  EF31  F00C         	goto	l9804
  9249  0018C2                     l941:
  9250  0018C2  0012               	return		;funcret
  9251  0018C4                     __end_of_vfpfcnvrt:
  9252                           	opt callstack 0
  9253                           
  9254 ;; *************** function _strncmp *****************
  9255 ;; Defined at:
  9256 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  9259 ;;		 -> vfpfcnvrt@ct(3), 
  9260 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  9261 ;;		 -> STR_33(3), 
  9262 ;;  n               2    9[COMRAM] unsigned int 
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;  r               2   14[COMRAM] PTR const unsigned char 
  9265 ;;		 -> STR_33(3), 
  9266 ;;  l               2   12[COMRAM] PTR const unsigned char 
  9267 ;;		 -> vfpfcnvrt@ct(3), 
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  2    5[COMRAM] int 
  9270 ;; Registers used:
  9271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9277 ;;      Params:         6       0       0       0       0       0       0       0       0
  9278 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9279 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9280 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9281 ;;Total ram usage:       11 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    2
  9284 ;; This function calls:
  9285 ;;		Nothing
  9286 ;; This function is called by:
  9287 ;;		_vfpfcnvrt
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text35
  9292  004786                     __ptext35:
  9293                           	opt callstack 0
  9294  004786                     _strncmp:
  9295                           	opt callstack 24
  9296  004786  C006  F00D         	movff	strncmp@_l,strncmp@l
  9297  00478A  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  9298  00478E  C008  F00F         	movff	strncmp@_r,strncmp@r
  9299  004792  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  9300  004796  060A               	decf	strncmp@n^0,f,c
  9301  004798  A0D8               	btfss	status,0,c
  9302  00479A  060B               	decf	(strncmp@n+1)^0,f,c
  9303  00479C  280A               	incf	strncmp@n^0,w,c
  9304  00479E  E106               	bnz	u10881
  9305  0047A0  280B               	incf	(strncmp@n+1)^0,w,c
  9306  0047A2  A4D8               	btfss	status,2,c
  9307  0047A4  EFD6  F023         	goto	u10881
  9308  0047A8  EFD8  F023         	goto	u10880
  9309  0047AC                     u10881:
  9310  0047AC  EFE5  F023         	goto	l9666
  9311  0047B0                     u10880:
  9312  0047B0  0E00               	movlw	0
  9313  0047B2  6E07               	movwf	(?_strncmp+1)^0,c
  9314  0047B4  0E00               	movlw	0
  9315  0047B6  6E06               	movwf	?_strncmp^0,c
  9316  0047B8  EF2D  F024         	goto	l1776
  9317  0047BC                     l9664:
  9318  0047BC  4A0D               	infsnz	strncmp@l^0,f,c
  9319  0047BE  2A0E               	incf	(strncmp@l+1)^0,f,c
  9320  0047C0  4A0F               	infsnz	strncmp@r^0,f,c
  9321  0047C2  2A10               	incf	(strncmp@r+1)^0,f,c
  9322  0047C4  060A               	decf	strncmp@n^0,f,c
  9323  0047C6  A0D8               	btfss	status,0,c
  9324  0047C8  060B               	decf	(strncmp@n+1)^0,f,c
  9325  0047CA                     l9666:
  9326  0047CA  C00D  FFD9         	movff	strncmp@l,fsr2l
  9327  0047CE  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  9328  0047D2  50DF               	movf	indf2,w,c
  9329  0047D4  B4D8               	btfsc	status,2,c
  9330  0047D6  EFEF  F023         	goto	u10891
  9331  0047DA  EFF1  F023         	goto	u10890
  9332  0047DE                     u10891:
  9333  0047DE  EF1C  F024         	goto	l9674
  9334  0047E2                     u10890:
  9335  0047E2  C00F  FFF6         	movff	strncmp@r,tblptrl
  9336  0047E6  C010  FFF7         	movff	strncmp@r+1,tblptrh
  9337  0047EA                     	if	0	;tblptru may be non-zero
  9338  0047EA                     	endif
  9339  0047EA                     	if	0	;tblptru may be non-zero
  9340  0047EA                     	endif
  9341  0047EA  0008               	tblrd		*
  9342  0047EC  50F5               	movf	tablat,w,c
  9343  0047EE  0900               	iorlw	0
  9344  0047F0  B4D8               	btfsc	status,2,c
  9345  0047F2  EFFD  F023         	goto	u10901
  9346  0047F6  EFFF  F023         	goto	u10900
  9347  0047FA                     u10901:
  9348  0047FA  EF1C  F024         	goto	l9674
  9349  0047FE                     u10900:
  9350  0047FE  500A               	movf	strncmp@n^0,w,c
  9351  004800  100B               	iorwf	(strncmp@n+1)^0,w,c
  9352  004802  B4D8               	btfsc	status,2,c
  9353  004804  EF06  F024         	goto	u10911
  9354  004808  EF08  F024         	goto	u10910
  9355  00480C                     u10911:
  9356  00480C  EF1C  F024         	goto	l9674
  9357  004810                     u10910:
  9358  004810  C00D  FFD9         	movff	strncmp@l,fsr2l
  9359  004814  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  9360  004818  50DF               	movf	indf2,w,c
  9361  00481A  6E0C               	movwf	??_strncmp^0,c
  9362  00481C  C00F  FFF6         	movff	strncmp@r,tblptrl
  9363  004820  C010  FFF7         	movff	strncmp@r+1,tblptrh
  9364  004824                     	if	0	;tblptru may be non-zero
  9365  004824                     	endif
  9366  004824                     	if	0	;tblptru may be non-zero
  9367  004824                     	endif
  9368  004824  0008               	tblrd		*
  9369  004826  50F5               	movf	tablat,w,c
  9370  004828  180C               	xorwf	??_strncmp^0,w,c
  9371  00482A  B4D8               	btfsc	status,2,c
  9372  00482C  EF1A  F024         	goto	u10921
  9373  004830  EF1C  F024         	goto	u10920
  9374  004834                     u10921:
  9375  004834  EFDE  F023         	goto	l9664
  9376  004838                     u10920:
  9377  004838                     l9674:
  9378  004838  C00D  FFD9         	movff	strncmp@l,fsr2l
  9379  00483C  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  9380  004840  50DF               	movf	indf2,w,c
  9381  004842  6E0C               	movwf	??_strncmp^0,c
  9382  004844  C00F  FFF6         	movff	strncmp@r,tblptrl
  9383  004848  C010  FFF7         	movff	strncmp@r+1,tblptrh
  9384  00484C                     	if	0	;tblptru may be non-zero
  9385  00484C                     	endif
  9386  00484C                     	if	0	;tblptru may be non-zero
  9387  00484C                     	endif
  9388  00484C  0008               	tblrd		*
  9389  00484E  50F5               	movf	tablat,w,c
  9390  004850  5C0C               	subwf	??_strncmp^0,w,c
  9391  004852  6E06               	movwf	?_strncmp^0,c
  9392  004854  6A07               	clrf	(?_strncmp+1)^0,c
  9393  004856  A0D8               	btfss	status,0,c
  9394  004858  0607               	decf	(?_strncmp+1)^0,f,c
  9395  00485A                     l1776:
  9396  00485A  0012               	return		;funcret
  9397  00485C                     __end_of_strncmp:
  9398                           	opt callstack 0
  9399                           
  9400 ;; *************** function _efgtoa *****************
  9401 ;; Defined at:
  9402 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  9405 ;;		 -> sprintf@f(6), 
  9406 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  9407 ;;  c               1   35[BANK0 ] unsigned char 
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;  u               4   93[BANK0 ] unsigned char 
  9410 ;;  g               4   85[BANK0 ] unsigned char 
  9411 ;;  l               4   79[BANK0 ] unsigned char 
  9412 ;;  h               4   75[BANK0 ] unsigned char 
  9413 ;;  ou              4   41[BANK0 ] unsigned char 
  9414 ;;  n               2   91[BANK0 ] int 
  9415 ;;  e               2   89[BANK0 ] int 
  9416 ;;  i               2   83[BANK0 ] int 
  9417 ;;  w               2   72[BANK0 ] int 
  9418 ;;  p               2   69[BANK0 ] int 
  9419 ;;  sign            2   67[BANK0 ] int 
  9420 ;;  d               2   65[BANK0 ] int 
  9421 ;;  ne              2   63[BANK0 ] int 
  9422 ;;  m               2   61[BANK0 ] int 
  9423 ;;  pp              2   59[BANK0 ] int 
  9424 ;;  t               2   57[BANK0 ] int 
  9425 ;;  mode            1   74[BANK0 ] unsigned char 
  9426 ;;  nmode           1   71[BANK0 ] unsigned char 
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  2   29[BANK0 ] int 
  9429 ;; Registers used:
  9430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/0
  9433 ;;		On exit  : 0/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9436 ;;      Params:         0       7       0       0       0       0       0       0       0
  9437 ;;      Locals:         0      56       0       0       0       0       0       0       0
  9438 ;;      Temps:          0       5       0       0       0       0       0       0       0
  9439 ;;      Totals:         0      68       0       0       0       0       0       0       0
  9440 ;;Total ram usage:       68 bytes
  9441 ;; Hardware stack levels used:    1
  9442 ;; Hardware stack levels required when called:    6
  9443 ;; This function calls:
  9444 ;;		___awdiv
  9445 ;;		___awmod
  9446 ;;		___fladd
  9447 ;;		___fldiv
  9448 ;;		___fleq
  9449 ;;		___flge
  9450 ;;		___flmul
  9451 ;;		___flneg
  9452 ;;		___flsub
  9453 ;;		___fltol
  9454 ;;		___fpclassifyf
  9455 ;;		_floorf
  9456 ;;		_isupper
  9457 ;;		_pad
  9458 ;;		_strcpy
  9459 ;;		_tolower
  9460 ;; This function is called by:
  9461 ;;		_vfpfcnvrt
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text36
  9466  000012                     __ptext36:
  9467                           	opt callstack 0
  9468  000012                     _efgtoa:
  9469                           	opt callstack 20
  9470  000012                     
  9471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  9472  000012  0E00               	movlw	0
  9473  000014  0100               	movlb	0	; () banked
  9474  000016  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  9475  000018  0E00               	movlw	0
  9476  00001A  6FA3               	movwf	efgtoa@sign& (0+255),b
  9477  00001C                     
  9478                           ; BSR set to: 0
  9479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  9480  00001C  C07F  F0B5         	movff	efgtoa@f,efgtoa@g
  9481  000020  C080  F0B6         	movff	efgtoa@f+1,efgtoa@g+1
  9482  000024  C081  F0B7         	movff	efgtoa@f+2,efgtoa@g+2
  9483  000028  C082  F0B8         	movff	efgtoa@f+3,efgtoa@g+3
  9484  00002C                     
  9485                           ; BSR set to: 0
  9486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  9487  00002C  BFB8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9488  00002E  EF1D  F000         	goto	u10290
  9489  000032  EF1B  F000         	goto	u10291
  9490  000036                     u10291:
  9491  000036  EF33  F000         	goto	l9328
  9492  00003A                     u10290:
  9493  00003A                     
  9494                           ; BSR set to: 0
  9495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  9496  00003A  0E00               	movlw	0
  9497  00003C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  9498  00003E  0E01               	movlw	1
  9499  000040  6FA3               	movwf	efgtoa@sign& (0+255),b
  9500  000042                     
  9501                           ; BSR set to: 0
  9502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  9503  000042  C0B5  F006         	movff	efgtoa@g,___flneg@f1
  9504  000046  C0B6  F007         	movff	efgtoa@g+1,___flneg@f1+1
  9505  00004A  C0B7  F008         	movff	efgtoa@g+2,___flneg@f1+2
  9506  00004E  C0B8  F009         	movff	efgtoa@g+3,___flneg@f1+3
  9507  000052  ECBB  F02B         	call	___flneg	;wreg free
  9508  000056  C006  F0B5         	movff	?___flneg,efgtoa@g
  9509  00005A  C007  F0B6         	movff	?___flneg+1,efgtoa@g+1
  9510  00005E  C008  F0B7         	movff	?___flneg+2,efgtoa@g+2
  9511  000062  C009  F0B8         	movff	?___flneg+3,efgtoa@g+3
  9512  000066                     l9328:
  9513                           
  9514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  9515  000066  0E00               	movlw	0
  9516  000068  0100               	movlb	0	; () banked
  9517  00006A  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  9518  00006C  0E00               	movlw	0
  9519  00006E  6FBB               	movwf	efgtoa@n& (0+255),b
  9520  000070                     
  9521                           ; BSR set to: 0
  9522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  9523  000070  C12E  F0A8         	movff	_width,efgtoa@w
  9524  000074  C12F  F0A9         	movff	_width+1,efgtoa@w+1
  9525  000078                     
  9526                           ; BSR set to: 0
  9527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9528  000078  51A3               	movf	efgtoa@sign& (0+255),w,b
  9529  00007A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9530  00007C  A4D8               	btfss	status,2,c
  9531  00007E  EF43  F000         	goto	u10301
  9532  000082  EF45  F000         	goto	u10300
  9533  000086                     u10301:
  9534  000086  EF4D  F000         	goto	l9336
  9535  00008A                     u10300:
  9536  00008A                     
  9537                           ; BSR set to: 0
  9538  00008A  0101               	movlb	1	; () banked
  9539  00008C  A532               	btfss	_flags& (0+255),2,b
  9540  00008E  EF4B  F000         	goto	u10311
  9541  000092  EF4D  F000         	goto	u10310
  9542  000096                     u10311:
  9543  000096  EF68  F000         	goto	l9348
  9544  00009A                     u10310:
  9545  00009A                     l9336:
  9546                           
  9547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9548  00009A  0100               	movlb	0	; () banked
  9549  00009C  51A3               	movf	efgtoa@sign& (0+255),w,b
  9550  00009E  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9551  0000A0  A4D8               	btfss	status,2,c
  9552  0000A2  EF55  F000         	goto	u10321
  9553  0000A6  EF57  F000         	goto	u10320
  9554  0000AA                     u10321:
  9555  0000AA  EF5D  F000         	goto	l9340
  9556  0000AE                     u10320:
  9557  0000AE                     
  9558                           ; BSR set to: 0
  9559  0000AE  0E00               	movlw	0
  9560  0000B0  6F8E               	movwf	(_efgtoa$928+1)& (0+255),b
  9561  0000B2  0E2B               	movlw	43
  9562  0000B4  6F8D               	movwf	_efgtoa$928& (0+255),b
  9563  0000B6  EF61  F000         	goto	l9342
  9564  0000BA                     l9340:
  9565                           
  9566                           ; BSR set to: 0
  9567  0000BA  0E00               	movlw	0
  9568  0000BC  6F8E               	movwf	(_efgtoa$928+1)& (0+255),b
  9569  0000BE  0E2D               	movlw	45
  9570  0000C0  6F8D               	movwf	_efgtoa$928& (0+255),b
  9571  0000C2                     l9342:
  9572                           
  9573                           ; BSR set to: 0
  9574  0000C2  C08D  F142         	movff	_efgtoa$928,_dbuf
  9575  0000C6                     
  9576                           ; BSR set to: 0
  9577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9578  0000C6  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  9579  0000C8  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  9580  0000CA                     
  9581                           ; BSR set to: 0
  9582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9583  0000CA  07A8               	decf	efgtoa@w& (0+255),f,b
  9584  0000CC  A0D8               	btfss	status,0,c
  9585  0000CE  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  9586  0000D0                     l9348:
  9587                           
  9588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9589  0000D0  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  9590  0000D4  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9591  0000D8  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9592  0000DC  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9593  0000E0  EC55  F022         	call	___fpclassifyf	;wreg free
  9594  0000E4  0406               	decf	?___fpclassifyf^0,w,c
  9595  0000E6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9596  0000E8  A4D8               	btfss	status,2,c
  9597  0000EA  EF79  F000         	goto	u10331
  9598  0000EE  EF7B  F000         	goto	u10330
  9599  0000F2                     u10331:
  9600  0000F2  EFD2  F000         	goto	l9366
  9601  0000F6                     u10330:
  9602  0000F6  0EBF               	movlw	191
  9603  0000F8  0100               	movlb	0	; () banked
  9604  0000FA  6F84               	movwf	??_efgtoa& (0+255),b
  9605  0000FC  0EFF               	movlw	255
  9606  0000FE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9607  000100  5183               	movf	efgtoa@c& (0+255),w,b
  9608  000102  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  9609  000104  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  9610  000106  5184               	movf	??_efgtoa& (0+255),w,b
  9611  000108  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9612  00010A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9613  00010C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9614  00010E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9615  000110  E10A               	bnz	u10340
  9616  000112  0E1A               	movlw	26
  9617  000114  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9618  000116  A0D8               	btfss	status,0,c
  9619  000118  EF90  F000         	goto	u10341
  9620  00011C  EF93  F000         	goto	u10340
  9621  000120                     u10341:
  9622  000120  0E01               	movlw	1
  9623  000122  EF94  F000         	goto	u10350
  9624  000126                     u10340:
  9625  000126  0E00               	movlw	0
  9626  000128                     u10350:
  9627  000128  6F8F               	movwf	_efgtoa$929& (0+255),b
  9628  00012A  6B90               	clrf	(_efgtoa$929+1)& (0+255),b
  9629  00012C                     
  9630                           ; BSR set to: 0
  9631  00012C  518F               	movf	_efgtoa$929& (0+255),w,b
  9632  00012E  1190               	iorwf	(_efgtoa$929+1)& (0+255),w,b
  9633  000130  B4D8               	btfsc	status,2,c
  9634  000132  EF9D  F000         	goto	u10361
  9635  000136  EF9F  F000         	goto	u10360
  9636  00013A                     u10361:
  9637  00013A  EFAD  F000         	goto	l9358
  9638  00013E                     u10360:
  9639  00013E                     
  9640                           ; BSR set to: 0
  9641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  9642  00013E  0E42               	movlw	low _dbuf
  9643  000140  25BB               	addwf	efgtoa@n& (0+255),w,b
  9644  000142  6E06               	movwf	strcpy@dest^0,c
  9645  000144  0E01               	movlw	high _dbuf
  9646  000146  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9647  000148  6E07               	movwf	(strcpy@dest+1)^0,c
  9648  00014A  0EEB               	movlw	low STR_23
  9649  00014C  6E08               	movwf	strcpy@src^0,c
  9650  00014E  0E7F               	movlw	high STR_23
  9651  000150  6E09               	movwf	(strcpy@src+1)^0,c
  9652  000152  EC09  F029         	call	_strcpy	;wreg free
  9653                           
  9654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9655  000156  EFB9  F000         	goto	l9360
  9656  00015A                     l9358:
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9660  00015A  0E42               	movlw	low _dbuf
  9661  00015C  25BB               	addwf	efgtoa@n& (0+255),w,b
  9662  00015E  6E06               	movwf	strcpy@dest^0,c
  9663  000160  0E01               	movlw	high _dbuf
  9664  000162  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9665  000164  6E07               	movwf	(strcpy@dest+1)^0,c
  9666  000166  0EF3               	movlw	low STR_24
  9667  000168  6E08               	movwf	strcpy@src^0,c
  9668  00016A  0E7F               	movlw	high STR_24
  9669  00016C  6E09               	movwf	(strcpy@src+1)^0,c
  9670  00016E  EC09  F029         	call	_strcpy	;wreg free
  9671  000172                     l9360:
  9672                           
  9673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9674  000172  0100               	movlb	0	; () banked
  9675  000174  0EFD               	movlw	253
  9676  000176  27A8               	addwf	efgtoa@w& (0+255),f,b
  9677  000178  0EFF               	movlw	255
  9678  00017A  23A9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9679  00017C                     l9362:
  9680                           
  9681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9682  00017C  C07D  F016         	movff	efgtoa@fp,pad@fp
  9683  000180  C07E  F017         	movff	efgtoa@fp+1,pad@fp+1
  9684  000184  0E42               	movlw	low _dbuf
  9685  000186  6E18               	movwf	pad@buf^0,c
  9686  000188  0E01               	movlw	high _dbuf
  9687  00018A  6E19               	movwf	(pad@buf+1)^0,c
  9688  00018C  C0A8  F01A         	movff	efgtoa@w,pad@p
  9689  000190  C0A9  F01B         	movff	efgtoa@w+1,pad@p+1
  9690  000194  EC93  F024         	call	_pad	;wreg free
  9691  000198  C016  F07D         	movff	?_pad,?_efgtoa
  9692  00019C  C017  F07E         	movff	?_pad+1,?_efgtoa+1
  9693  0001A0  EFEB  F005         	goto	l851
  9694  0001A4                     l9366:
  9695                           
  9696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9697  0001A4  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  9698  0001A8  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9699  0001AC  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9700  0001B0  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9701  0001B4  EC55  F022         	call	___fpclassifyf	;wreg free
  9702  0001B8  5006               	movf	?___fpclassifyf^0,w,c
  9703  0001BA  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9704  0001BC  A4D8               	btfss	status,2,c
  9705  0001BE  EFE3  F000         	goto	u10371
  9706  0001C2  EFE5  F000         	goto	u10370
  9707  0001C6                     u10371:
  9708  0001C6  EF25  F001         	goto	l9384
  9709  0001CA                     u10370:
  9710  0001CA  0EBF               	movlw	191
  9711  0001CC  0100               	movlb	0	; () banked
  9712  0001CE  6F84               	movwf	??_efgtoa& (0+255),b
  9713  0001D0  0EFF               	movlw	255
  9714  0001D2  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9715  0001D4  5183               	movf	efgtoa@c& (0+255),w,b
  9716  0001D6  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  9717  0001D8  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  9718  0001DA  5184               	movf	??_efgtoa& (0+255),w,b
  9719  0001DC  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9720  0001DE  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9721  0001E0  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9722  0001E2  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9723  0001E4  E10A               	bnz	u10380
  9724  0001E6  0E1A               	movlw	26
  9725  0001E8  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9726  0001EA  A0D8               	btfss	status,0,c
  9727  0001EC  EFFA  F000         	goto	u10381
  9728  0001F0  EFFD  F000         	goto	u10380
  9729  0001F4                     u10381:
  9730  0001F4  0E01               	movlw	1
  9731  0001F6  EFFE  F000         	goto	u10390
  9732  0001FA                     u10380:
  9733  0001FA  0E00               	movlw	0
  9734  0001FC                     u10390:
  9735  0001FC  6F91               	movwf	_efgtoa$933& (0+255),b
  9736  0001FE  6B92               	clrf	(_efgtoa$933+1)& (0+255),b
  9737  000200                     
  9738                           ; BSR set to: 0
  9739  000200  5191               	movf	_efgtoa$933& (0+255),w,b
  9740  000202  1192               	iorwf	(_efgtoa$933+1)& (0+255),w,b
  9741  000204  B4D8               	btfsc	status,2,c
  9742  000206  EF07  F001         	goto	u10401
  9743  00020A  EF09  F001         	goto	u10400
  9744  00020E                     u10401:
  9745  00020E  EF17  F001         	goto	l9376
  9746  000212                     u10400:
  9747  000212                     
  9748                           ; BSR set to: 0
  9749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9750  000212  0E42               	movlw	low _dbuf
  9751  000214  25BB               	addwf	efgtoa@n& (0+255),w,b
  9752  000216  6E06               	movwf	strcpy@dest^0,c
  9753  000218  0E01               	movlw	high _dbuf
  9754  00021A  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9755  00021C  6E07               	movwf	(strcpy@dest+1)^0,c
  9756  00021E  0EEF               	movlw	low STR_27
  9757  000220  6E08               	movwf	strcpy@src^0,c
  9758  000222  0E7F               	movlw	high STR_27
  9759  000224  6E09               	movwf	(strcpy@src+1)^0,c
  9760  000226  EC09  F029         	call	_strcpy	;wreg free
  9761                           
  9762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9763  00022A  EFB9  F000         	goto	l9360
  9764  00022E                     l9376:
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9768  00022E  0E42               	movlw	low _dbuf
  9769  000230  25BB               	addwf	efgtoa@n& (0+255),w,b
  9770  000232  6E06               	movwf	strcpy@dest^0,c
  9771  000234  0E01               	movlw	high _dbuf
  9772  000236  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9773  000238  6E07               	movwf	(strcpy@dest+1)^0,c
  9774  00023A  0EF7               	movlw	low STR_28
  9775  00023C  6E08               	movwf	strcpy@src^0,c
  9776  00023E  0E7F               	movlw	high STR_28
  9777  000240  6E09               	movwf	(strcpy@src+1)^0,c
  9778  000242  EC09  F029         	call	_strcpy	;wreg free
  9779  000246  EFB9  F000         	goto	l9360
  9780  00024A                     l9384:
  9781                           
  9782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9783  00024A  0E00               	movlw	0
  9784  00024C  0100               	movlb	0	; () banked
  9785  00024E  6FBD               	movwf	efgtoa@u& (0+255),b
  9786  000250  0E00               	movlw	0
  9787  000252  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  9788  000254  0E80               	movlw	128
  9789  000256  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  9790  000258  0E3F               	movlw	63
  9791  00025A  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  9792                           
  9793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9794  00025C  0E00               	movlw	0
  9795  00025E  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  9796  000260  0E00               	movlw	0
  9797  000262  6FB9               	movwf	efgtoa@e& (0+255),b
  9798  000264                     
  9799                           ; BSR set to: 0
  9800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9801  000264  C0B5  F006         	movff	efgtoa@g,___fleq@ff1
  9802  000268  C0B6  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  9803  00026C  C0B7  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  9804  000270  C0B8  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  9805  000274  0E00               	movlw	0
  9806  000276  6E0A               	movwf	___fleq@ff2^0,c
  9807  000278  0E00               	movlw	0
  9808  00027A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  9809  00027C  0E00               	movlw	0
  9810  00027E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  9811  000280  0E00               	movlw	0
  9812  000282  6E0D               	movwf	(___fleq@ff2+3)^0,c
  9813  000284  EC60  F026         	call	___fleq	;wreg free
  9814  000288  B0D8               	btfsc	status,0,c
  9815  00028A  EF49  F001         	goto	u10411
  9816  00028E  EF4B  F001         	goto	u10410
  9817  000292                     u10411:
  9818  000292  EFCE  F001         	goto	l9402
  9819  000296                     u10410:
  9820  000296  EF6A  F001         	goto	l9394
  9821  00029A                     l9390:
  9822                           
  9823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9824  00029A  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9825  00029E  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9826  0002A2  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9827  0002A6  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9828  0002AA  0E00               	movlw	0
  9829  0002AC  6E1F               	movwf	___flmul@a^0,c
  9830  0002AE  0E00               	movlw	0
  9831  0002B0  6E20               	movwf	(___flmul@a+1)^0,c
  9832  0002B2  0E20               	movlw	32
  9833  0002B4  6E21               	movwf	(___flmul@a+2)^0,c
  9834  0002B6  0E41               	movlw	65
  9835  0002B8  6E22               	movwf	(___flmul@a+3)^0,c
  9836  0002BA  ECC2  F00E         	call	___flmul	;wreg free
  9837  0002BE  C01B  F0BD         	movff	?___flmul,efgtoa@u
  9838  0002C2  C01C  F0BE         	movff	?___flmul+1,efgtoa@u+1
  9839  0002C6  C01D  F0BF         	movff	?___flmul+2,efgtoa@u+2
  9840  0002CA  C01E  F0C0         	movff	?___flmul+3,efgtoa@u+3
  9841  0002CE                     
  9842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9843  0002CE  0100               	movlb	0	; () banked
  9844  0002D0  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  9845  0002D2  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  9846  0002D4                     l9394:
  9847                           
  9848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9849  0002D4  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  9850  0002D8  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  9851  0002DC  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  9852  0002E0  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  9853  0002E4  0E00               	movlw	0
  9854  0002E6  6E1F               	movwf	___flmul@a^0,c
  9855  0002E8  0E00               	movlw	0
  9856  0002EA  6E20               	movwf	(___flmul@a+1)^0,c
  9857  0002EC  0E20               	movlw	32
  9858  0002EE  6E21               	movwf	(___flmul@a+2)^0,c
  9859  0002F0  0E41               	movlw	65
  9860  0002F2  6E22               	movwf	(___flmul@a+3)^0,c
  9861  0002F4  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9862  0002F8  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9863  0002FC  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9864  000300  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9865  000304  ECC2  F00E         	call	___flmul	;wreg free
  9866  000308  C01B  F038         	movff	?___flmul,___flge@ff2
  9867  00030C  C01C  F039         	movff	?___flmul+1,___flge@ff2+1
  9868  000310  C01D  F03A         	movff	?___flmul+2,___flge@ff2+2
  9869  000314  C01E  F03B         	movff	?___flmul+3,___flge@ff2+3
  9870  000318  ECD3  F021         	call	___flge	;wreg free
  9871  00031C  B0D8               	btfsc	status,0,c
  9872  00031E  EF93  F001         	goto	u10421
  9873  000322  EF95  F001         	goto	u10420
  9874  000326                     u10421:
  9875  000326  EF4D  F001         	goto	l9390
  9876  00032A                     u10420:
  9877  00032A  EFB5  F001         	goto	l9400
  9878  00032E                     l9396:
  9879                           
  9880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9881  00032E  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  9882  000332  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  9883  000336  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  9884  00033A  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  9885  00033E  0E00               	movlw	0
  9886  000340  6E48               	movwf	___fldiv@a^0,c
  9887  000342  0E00               	movlw	0
  9888  000344  6E49               	movwf	(___fldiv@a+1)^0,c
  9889  000346  0E20               	movlw	32
  9890  000348  6E4A               	movwf	(___fldiv@a+2)^0,c
  9891  00034A  0E41               	movlw	65
  9892  00034C  6E4B               	movwf	(___fldiv@a+3)^0,c
  9893  00034E  ECA4  F014         	call	___fldiv	;wreg free
  9894  000352  C044  F0BD         	movff	?___fldiv,efgtoa@u
  9895  000356  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  9896  00035A  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  9897  00035E  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  9898  000362                     
  9899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9900  000362  0100               	movlb	0	; () banked
  9901  000364  07B9               	decf	efgtoa@e& (0+255),f,b
  9902  000366  A0D8               	btfss	status,0,c
  9903  000368  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  9904  00036A                     l9400:
  9905                           
  9906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9907  00036A  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  9908  00036E  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  9909  000372  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  9910  000376  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  9911  00037A  C0BD  F038         	movff	efgtoa@u,___flge@ff2
  9912  00037E  C0BE  F039         	movff	efgtoa@u+1,___flge@ff2+1
  9913  000382  C0BF  F03A         	movff	efgtoa@u+2,___flge@ff2+2
  9914  000386  C0C0  F03B         	movff	efgtoa@u+3,___flge@ff2+3
  9915  00038A  ECD3  F021         	call	___flge	;wreg free
  9916  00038E  A0D8               	btfss	status,0,c
  9917  000390  EFCC  F001         	goto	u10431
  9918  000394  EFCE  F001         	goto	u10430
  9919  000398                     u10431:
  9920  000398  EF97  F001         	goto	l9396
  9921  00039C                     u10430:
  9922  00039C                     l9402:
  9923                           
  9924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9925  00039C  C083  F00C         	movff	efgtoa@c,tolower@c
  9926  0003A0  6A0D               	clrf	(tolower@c+1)^0,c
  9927  0003A2  ECAA  F028         	call	_tolower	;wreg free
  9928  0003A6  500C               	movf	?_tolower^0,w,c
  9929  0003A8  0100               	movlb	0	; () banked
  9930  0003AA  6FAA               	movwf	efgtoa@mode& (0+255),b
  9931  0003AC                     
  9932                           ; BSR set to: 0
  9933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9934  0003AC  C0AA  F0A7         	movff	efgtoa@mode,efgtoa@nmode
  9935  0003B0                     
  9936                           ; BSR set to: 0
  9937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9938  0003B0  0E67               	movlw	103
  9939  0003B2  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9940  0003B4  A4D8               	btfss	status,2,c
  9941  0003B6  EFDF  F001         	goto	u10441
  9942  0003BA  EFE1  F001         	goto	u10440
  9943  0003BE                     u10441:
  9944  0003BE  EF09  F002         	goto	l9416
  9945  0003C2                     u10440:
  9946  0003C2                     
  9947                           ; BSR set to: 0
  9948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9949  0003C2  0101               	movlb	1	; () banked
  9950  0003C4  5130               	movf	_prec& (0+255),w,b
  9951  0003C6  1131               	iorwf	(_prec+1)& (0+255),w,b
  9952  0003C8  A4D8               	btfss	status,2,c
  9953  0003CA  EFE9  F001         	goto	u10451
  9954  0003CE  EFEB  F001         	goto	u10450
  9955  0003D2                     u10451:
  9956  0003D2  EFEF  F001         	goto	l9412
  9957  0003D6                     u10450:
  9958  0003D6                     
  9959                           ; BSR set to: 1
  9960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9961  0003D6  0E00               	movlw	0
  9962  0003D8  6F31               	movwf	(_prec+1)& (0+255),b
  9963  0003DA  0E01               	movlw	1
  9964  0003DC  6F30               	movwf	_prec& (0+255),b
  9965  0003DE                     l9412:
  9966                           
  9967                           ; BSR set to: 1
  9968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9969  0003DE  BF31               	btfsc	(_prec+1)& (0+255),7,b
  9970  0003E0  EFFC  F001         	goto	u10460
  9971  0003E4  5131               	movf	(_prec+1)& (0+255),w,b
  9972  0003E6  E106               	bnz	u10461
  9973  0003E8  0530               	decf	_prec& (0+255),w,b
  9974  0003EA  B0D8               	btfsc	status,0,c
  9975  0003EC  EFFA  F001         	goto	u10461
  9976  0003F0  EFFC  F001         	goto	u10460
  9977  0003F4                     u10461:
  9978  0003F4  EF03  F002         	goto	l869
  9979  0003F8                     u10460:
  9980  0003F8                     l9414:
  9981                           
  9982                           ; BSR set to: 1
  9983  0003F8  0E00               	movlw	0
  9984  0003FA  0100               	movlb	0	; () banked
  9985  0003FC  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  9986  0003FE  0E06               	movlw	6
  9987  000400  6FA5               	movwf	efgtoa@p& (0+255),b
  9988  000402  EF13  F002         	goto	l9422
  9989  000406                     l869:
  9990                           
  9991                           ; BSR set to: 1
  9992  000406  C130  F0A5         	movff	_prec,efgtoa@p
  9993  00040A  C131  F0A6         	movff	_prec+1,efgtoa@p+1
  9994  00040E  EF13  F002         	goto	l9422
  9995  000412                     l9416:
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9999  000412  0101               	movlb	1	; () banked
 10000  000414  BF31               	btfsc	(_prec+1)& (0+255),7,b
 10001  000416  EF0F  F002         	goto	u10471
 10002  00041A  EF11  F002         	goto	u10470
 10003  00041E                     u10471:
 10004  00041E  EFFC  F001         	goto	l9414
 10005  000422                     u10470:
 10006  000422  EF03  F002         	goto	l869
 10007  000426                     l9422:
 10008                           
 10009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
 10010  000426  0E67               	movlw	103
 10011  000428  0100               	movlb	0	; () banked
 10012  00042A  19AA               	xorwf	efgtoa@mode& (0+255),w,b
 10013  00042C  A4D8               	btfss	status,2,c
 10014  00042E  EF1B  F002         	goto	u10481
 10015  000432  EF1D  F002         	goto	u10480
 10016  000436                     u10481:
 10017  000436  EF4C  F002         	goto	l9432
 10018  00043A                     u10480:
 10019  00043A                     
 10020                           ; BSR set to: 0
 10021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
 10022  00043A  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
 10023  00043C  EF2B  F002         	goto	u10490
 10024  000440  0EFC               	movlw	252
 10025  000442  5DB9               	subwf	efgtoa@e& (0+255),w,b
 10026  000444  0EFF               	movlw	255
 10027  000446  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
 10028  000448  A0D8               	btfss	status,0,c
 10029  00044A  EF29  F002         	goto	u10491
 10030  00044E  EF2B  F002         	goto	u10490
 10031  000452                     u10491:
 10032  000452  EF4A  F002         	goto	l9430
 10033  000456                     u10490:
 10034  000456                     
 10035                           ; BSR set to: 0
 10036  000456  0EFF               	movlw	255
 10037  000458  6F84               	movwf	??_efgtoa& (0+255),b
 10038  00045A  0EFF               	movlw	255
 10039  00045C  6F85               	movwf	(??_efgtoa+1)& (0+255),b
 10040  00045E  C0A5  F086         	movff	efgtoa@p,??_efgtoa+2
 10041  000462  C0A6  F087         	movff	efgtoa@p+1,??_efgtoa+3
 10042  000466  5184               	movf	??_efgtoa& (0+255),w,b
 10043  000468  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
 10044  00046A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
 10045  00046C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10046  00046E  51B9               	movf	efgtoa@e& (0+255),w,b
 10047  000470  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
 10048  000472  5187               	movf	(??_efgtoa+3)& (0+255),w,b
 10049  000474  0A80               	xorlw	128
 10050  000476  6F88               	movwf	(??_efgtoa+4)& (0+255),b
 10051  000478  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
 10052  00047A  0A80               	xorlw	128
 10053  00047C  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
 10054  00047E  A0D8               	btfss	status,0,c
 10055  000480  EF44  F002         	goto	u10501
 10056  000484  EF46  F002         	goto	u10500
 10057  000488                     u10501:
 10058  000488  EF4A  F002         	goto	l9430
 10059  00048C                     u10500:
 10060  00048C                     
 10061                           ; BSR set to: 0
 10062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
 10063  00048C  0E66               	movlw	102
 10064  00048E  6FA7               	movwf	efgtoa@nmode& (0+255),b
 10065                           
 10066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
 10067  000490  EF4C  F002         	goto	l9432
 10068  000494                     l9430:
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
 10072  000494  0E65               	movlw	101
 10073  000496  6FA7               	movwf	efgtoa@nmode& (0+255),b
 10074  000498                     l9432:
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
 10078  000498  C0A5  F09D         	movff	efgtoa@p,efgtoa@m
 10079  00049C  C0A6  F09E         	movff	efgtoa@p+1,efgtoa@m+1
 10080  0004A0                     
 10081                           ; BSR set to: 0
 10082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
 10083  0004A0  0E67               	movlw	103
 10084  0004A2  19AA               	xorwf	efgtoa@mode& (0+255),w,b
 10085  0004A4  A4D8               	btfss	status,2,c
 10086  0004A6  EF57  F002         	goto	u10511
 10087  0004AA  EF59  F002         	goto	u10510
 10088  0004AE                     u10511:
 10089  0004AE  EF69  F002         	goto	l9440
 10090  0004B2                     u10510:
 10091  0004B2                     
 10092                           ; BSR set to: 0
 10093  0004B2  0E66               	movlw	102
 10094  0004B4  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
 10095  0004B6  A4D8               	btfss	status,2,c
 10096  0004B8  EF60  F002         	goto	u10521
 10097  0004BC  EF62  F002         	goto	u10520
 10098  0004C0                     u10521:
 10099  0004C0  EF6B  F002         	goto	l9442
 10100  0004C4                     u10520:
 10101  0004C4                     
 10102                           ; BSR set to: 0
 10103  0004C4  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10104  0004C6  EF69  F002         	goto	u10530
 10105  0004CA  EF67  F002         	goto	u10531
 10106  0004CE                     u10531:
 10107  0004CE  EF6B  F002         	goto	l9442
 10108  0004D2                     u10530:
 10109  0004D2                     l9440:
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
 10113  0004D2  4B9D               	infsnz	efgtoa@m& (0+255),f,b
 10114  0004D4  2B9E               	incf	(efgtoa@m+1)& (0+255),f,b
 10115  0004D6                     l9442:
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
 10119  0004D6  0E66               	movlw	102
 10120  0004D8  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
 10121  0004DA  A4D8               	btfss	status,2,c
 10122  0004DC  EF72  F002         	goto	u10541
 10123  0004E0  EF74  F002         	goto	u10540
 10124  0004E4                     u10541:
 10125  0004E4  EF94  F002         	goto	l9452
 10126  0004E8                     u10540:
 10127  0004E8                     
 10128                           ; BSR set to: 0
 10129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
 10130  0004E8  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10131  0004EA  EF7B  F002         	goto	u10550
 10132  0004EE  EF79  F002         	goto	u10551
 10133  0004F2                     u10551:
 10134  0004F2  EF87  F002         	goto	l9448
 10135  0004F6                     u10550:
 10136  0004F6                     
 10137                           ; BSR set to: 0
 10138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
 10139  0004F6  0E00               	movlw	0
 10140  0004F8  6FBD               	movwf	efgtoa@u& (0+255),b
 10141  0004FA  0E00               	movlw	0
 10142  0004FC  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
 10143  0004FE  0E80               	movlw	128
 10144  000500  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
 10145  000502  0E3F               	movlw	63
 10146  000504  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
 10147                           
 10148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
 10149  000506  0E00               	movlw	0
 10150  000508  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
 10151  00050A  0E00               	movlw	0
 10152  00050C  6FB9               	movwf	efgtoa@e& (0+255),b
 10153  00050E                     l9448:
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
 10157  00050E  0E67               	movlw	103
 10158  000510  19AA               	xorwf	efgtoa@mode& (0+255),w,b
 10159  000512  B4D8               	btfsc	status,2,c
 10160  000514  EF8E  F002         	goto	u10561
 10161  000518  EF90  F002         	goto	u10560
 10162  00051C                     u10561:
 10163  00051C  EF94  F002         	goto	l9452
 10164  000520                     u10560:
 10165  000520                     
 10166                           ; BSR set to: 0
 10167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
 10168  000520  51B9               	movf	efgtoa@e& (0+255),w,b
 10169  000522  279D               	addwf	efgtoa@m& (0+255),f,b
 10170  000524  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
 10171  000526  239E               	addwfc	(efgtoa@m+1)& (0+255),f,b
 10172  000528                     l9452:
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
 10176  000528  0E00               	movlw	0
 10177  00052A  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
 10178  00052C  0E00               	movlw	0
 10179  00052E  6FB3               	movwf	efgtoa@i& (0+255),b
 10180  000530                     
 10181                           ; BSR set to: 0
 10182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
 10183  000530  C0B5  F0AB         	movff	efgtoa@g,efgtoa@h
 10184  000534  C0B6  F0AC         	movff	efgtoa@g+1,efgtoa@h+1
 10185  000538  C0B7  F0AD         	movff	efgtoa@g+2,efgtoa@h+2
 10186  00053C  C0B8  F0AE         	movff	efgtoa@g+3,efgtoa@h+3
 10187  000540                     
 10188                           ; BSR set to: 0
 10189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
 10190  000540  C0BD  F089         	movff	efgtoa@u,efgtoa@ou
 10191  000544  C0BE  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
 10192  000548  C0BF  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
 10193  00054C  C0C0  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
 10194                           
 10195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10196  000550  EF25  F003         	goto	l9466
 10197  000554                     l9458:
 10198                           
 10199                           ; BSR set to: 0
 10200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
 10201  000554  C0AB  F044         	movff	efgtoa@h,___fldiv@b
 10202  000558  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
 10203  00055C  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
 10204  000560  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
 10205  000564  C0BD  F048         	movff	efgtoa@u,___fldiv@a
 10206  000568  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
 10207  00056C  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
 10208  000570  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
 10209  000574  ECA4  F014         	call	___fldiv	;wreg free
 10210  000578  C044  F050         	movff	?___fldiv,floorf@x
 10211  00057C  C045  F051         	movff	?___fldiv+1,floorf@x+1
 10212  000580  C046  F052         	movff	?___fldiv+2,floorf@x+2
 10213  000584  C047  F053         	movff	?___fldiv+3,floorf@x+3
 10214  000588  EC0C  F019         	call	_floorf	;wreg free
 10215  00058C  C050  F0AF         	movff	?_floorf,efgtoa@l
 10216  000590  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
 10217  000594  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
 10218  000598  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
 10219                           
 10220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 10221  00059C  C0AF  F072         	movff	efgtoa@l,___fltol@f1
 10222  0005A0  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
 10223  0005A4  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
 10224  0005A8  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
 10225  0005AC  EC4F  F021         	call	___fltol	;wreg free
 10226  0005B0  C072  F0A1         	movff	?___fltol,efgtoa@d
 10227  0005B4  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
 10228  0005B8                     
 10229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 10230  0005B8  C0AB  F044         	movff	efgtoa@h,___flsub@b
 10231  0005BC  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
 10232  0005C0  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
 10233  0005C4  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
 10234  0005C8  C0BD  F01F         	movff	efgtoa@u,___flmul@a
 10235  0005CC  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
 10236  0005D0  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
 10237  0005D4  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
 10238  0005D8  C0AF  F01B         	movff	efgtoa@l,___flmul@b
 10239  0005DC  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
 10240  0005E0  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
 10241  0005E4  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
 10242  0005E8  ECC2  F00E         	call	___flmul	;wreg free
 10243  0005EC  C01B  F048         	movff	?___flmul,___flsub@a
 10244  0005F0  C01C  F049         	movff	?___flmul+1,___flsub@a+1
 10245  0005F4  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
 10246  0005F8  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
 10247  0005FC  ECF5  F02A         	call	___flsub	;wreg free
 10248  000600  C044  F0AB         	movff	?___flsub,efgtoa@h
 10249  000604  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
 10250  000608  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
 10251  00060C  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
 10252  000610                     
 10253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 10254  000610  C0BD  F044         	movff	efgtoa@u,___fldiv@b
 10255  000614  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
 10256  000618  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
 10257  00061C  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
 10258  000620  0E00               	movlw	0
 10259  000622  6E48               	movwf	___fldiv@a^0,c
 10260  000624  0E00               	movlw	0
 10261  000626  6E49               	movwf	(___fldiv@a+1)^0,c
 10262  000628  0E20               	movlw	32
 10263  00062A  6E4A               	movwf	(___fldiv@a+2)^0,c
 10264  00062C  0E41               	movlw	65
 10265  00062E  6E4B               	movwf	(___fldiv@a+3)^0,c
 10266  000630  ECA4  F014         	call	___fldiv	;wreg free
 10267  000634  C044  F0BD         	movff	?___fldiv,efgtoa@u
 10268  000638  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
 10269  00063C  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
 10270  000640  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
 10271  000644                     
 10272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 10273  000644  0100               	movlb	0	; () banked
 10274  000646  4BB3               	infsnz	efgtoa@i& (0+255),f,b
 10275  000648  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
 10276  00064A                     l9466:
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10280  00064A  519D               	movf	efgtoa@m& (0+255),w,b
 10281  00064C  5DB3               	subwf	efgtoa@i& (0+255),w,b
 10282  00064E  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
 10283  000650  0A80               	xorlw	128
 10284  000652  6F84               	movwf	??_efgtoa& (0+255),b
 10285  000654  519E               	movf	(efgtoa@m+1)& (0+255),w,b
 10286  000656  0A80               	xorlw	128
 10287  000658  5984               	subwfb	??_efgtoa& (0+255),w,b
 10288  00065A  A0D8               	btfss	status,0,c
 10289  00065C  EF32  F003         	goto	u10571
 10290  000660  EF34  F003         	goto	u10570
 10291  000664                     u10571:
 10292  000664  EFAA  F002         	goto	l9458
 10293  000668                     u10570:
 10294  000668                     
 10295                           ; BSR set to: 0
 10296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 10297  000668  C0BD  F01B         	movff	efgtoa@u,___flmul@b
 10298  00066C  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
 10299  000670  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
 10300  000674  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
 10301  000678  0E00               	movlw	0
 10302  00067A  6E1F               	movwf	___flmul@a^0,c
 10303  00067C  0E00               	movlw	0
 10304  00067E  6E20               	movwf	(___flmul@a+1)^0,c
 10305  000680  0EA0               	movlw	160
 10306  000682  6E21               	movwf	(___flmul@a+2)^0,c
 10307  000684  0E40               	movlw	64
 10308  000686  6E22               	movwf	(___flmul@a+3)^0,c
 10309  000688  ECC2  F00E         	call	___flmul	;wreg free
 10310  00068C  C01B  F0AF         	movff	?___flmul,efgtoa@l
 10311  000690  C01C  F0B0         	movff	?___flmul+1,efgtoa@l+1
 10312  000694  C01D  F0B1         	movff	?___flmul+2,efgtoa@l+2
 10313  000698  C01E  F0B2         	movff	?___flmul+3,efgtoa@l+3
 10314  00069C                     
 10315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 10316  00069C  C0AB  F034         	movff	efgtoa@h,___flge@ff1
 10317  0006A0  C0AC  F035         	movff	efgtoa@h+1,___flge@ff1+1
 10318  0006A4  C0AD  F036         	movff	efgtoa@h+2,___flge@ff1+2
 10319  0006A8  C0AE  F037         	movff	efgtoa@h+3,___flge@ff1+3
 10320  0006AC  C0AF  F038         	movff	efgtoa@l,___flge@ff2
 10321  0006B0  C0B0  F039         	movff	efgtoa@l+1,___flge@ff2+1
 10322  0006B4  C0B1  F03A         	movff	efgtoa@l+2,___flge@ff2+2
 10323  0006B8  C0B2  F03B         	movff	efgtoa@l+3,___flge@ff2+3
 10324  0006BC  ECD3  F021         	call	___flge	;wreg free
 10325  0006C0  B0D8               	btfsc	status,0,c
 10326  0006C2  EF65  F003         	goto	u10581
 10327  0006C6  EF67  F003         	goto	u10580
 10328  0006CA                     u10581:
 10329  0006CA  EF72  F003         	goto	l9474
 10330  0006CE                     u10580:
 10331  0006CE                     
 10332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 10333  0006CE  0E00               	movlw	0
 10334  0006D0  0100               	movlb	0	; () banked
 10335  0006D2  6FAF               	movwf	efgtoa@l& (0+255),b
 10336  0006D4  0E00               	movlw	0
 10337  0006D6  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
 10338  0006D8  0E00               	movlw	0
 10339  0006DA  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
 10340  0006DC  0E00               	movlw	0
 10341  0006DE  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
 10342                           
 10343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
 10344  0006E0  EF9B  F003         	goto	l9480
 10345  0006E4                     l9474:
 10346                           
 10347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 10348  0006E4  C0AB  F006         	movff	efgtoa@h,___fleq@ff1
 10349  0006E8  C0AC  F007         	movff	efgtoa@h+1,___fleq@ff1+1
 10350  0006EC  C0AD  F008         	movff	efgtoa@h+2,___fleq@ff1+2
 10351  0006F0  C0AE  F009         	movff	efgtoa@h+3,___fleq@ff1+3
 10352  0006F4  C0AF  F00A         	movff	efgtoa@l,___fleq@ff2
 10353  0006F8  C0B0  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
 10354  0006FC  C0B1  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
 10355  000700  C0B2  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
 10356  000704  EC60  F026         	call	___fleq	;wreg free
 10357  000708  A0D8               	btfss	status,0,c
 10358  00070A  EF89  F003         	goto	u10591
 10359  00070E  EF8B  F003         	goto	u10590
 10360  000712                     u10591:
 10361  000712  EF9B  F003         	goto	l9480
 10362  000716                     u10590:
 10363  000716  0100               	movlb	0	; () banked
 10364  000718  B1A1               	btfsc	efgtoa@d& (0+255),0,b
 10365  00071A  EF91  F003         	goto	u10601
 10366  00071E  EF93  F003         	goto	u10600
 10367  000722                     u10601:
 10368  000722  EF9B  F003         	goto	l9480
 10369  000726                     u10600:
 10370  000726                     
 10371                           ; BSR set to: 0
 10372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 10373  000726  0E00               	movlw	0
 10374  000728  6FAF               	movwf	efgtoa@l& (0+255),b
 10375  00072A  0E00               	movlw	0
 10376  00072C  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
 10377  00072E  0E00               	movlw	0
 10378  000730  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
 10379  000732  0E00               	movlw	0
 10380  000734  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
 10381  000736                     l9480:
 10382                           
 10383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 10384  000736  C0B5  F034         	movff	efgtoa@g,___fladd@b
 10385  00073A  C0B6  F035         	movff	efgtoa@g+1,___fladd@b+1
 10386  00073E  C0B7  F036         	movff	efgtoa@g+2,___fladd@b+2
 10387  000742  C0B8  F037         	movff	efgtoa@g+3,___fladd@b+3
 10388  000746  C0AF  F038         	movff	efgtoa@l,___fladd@a
 10389  00074A  C0B0  F039         	movff	efgtoa@l+1,___fladd@a+1
 10390  00074E  C0B1  F03A         	movff	efgtoa@l+2,___fladd@a+2
 10391  000752  C0B2  F03B         	movff	efgtoa@l+3,___fladd@a+3
 10392  000756  EC62  F00C         	call	___fladd	;wreg free
 10393  00075A  C034  F0AB         	movff	?___fladd,efgtoa@h
 10394  00075E  C035  F0AC         	movff	?___fladd+1,efgtoa@h+1
 10395  000762  C036  F0AD         	movff	?___fladd+2,efgtoa@h+2
 10396  000766  C037  F0AE         	movff	?___fladd+3,efgtoa@h+3
 10397  00076A                     
 10398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 10399  00076A  C089  F0BD         	movff	efgtoa@ou,efgtoa@u
 10400  00076E  C08A  F0BE         	movff	efgtoa@ou+1,efgtoa@u+1
 10401  000772  C08B  F0BF         	movff	efgtoa@ou+2,efgtoa@u+2
 10402  000776  C08C  F0C0         	movff	efgtoa@ou+3,efgtoa@u+3
 10403  00077A                     
 10404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 10405  00077A  0E65               	movlw	101
 10406  00077C  0100               	movlb	0	; () banked
 10407  00077E  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
 10408  000780  B4D8               	btfsc	status,2,c
 10409  000782  EFC5  F003         	goto	u10611
 10410  000786  EFC7  F003         	goto	u10610
 10411  00078A                     u10611:
 10412  00078A  EFCD  F003         	goto	l9488
 10413  00078E                     u10610:
 10414  00078E                     
 10415                           ; BSR set to: 0
 10416  00078E  C0B9  F09F         	movff	efgtoa@e,efgtoa@ne
 10417  000792  C0BA  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
 10418  000796  EFD1  F003         	goto	l895
 10419  00079A                     l9488:
 10420                           
 10421                           ; BSR set to: 0
 10422  00079A  0E00               	movlw	0
 10423  00079C  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
 10424  00079E  0E00               	movlw	0
 10425  0007A0  6F9F               	movwf	efgtoa@ne& (0+255),b
 10426  0007A2                     l895:
 10427                           
 10428                           ; BSR set to: 0
 10429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 10430  0007A2  0E00               	movlw	0
 10431  0007A4  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
 10432  0007A6  0E00               	movlw	0
 10433  0007A8  6F9B               	movwf	efgtoa@pp& (0+255),b
 10434                           
 10435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 10436  0007AA  0E00               	movlw	0
 10437  0007AC  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
 10438  0007AE  0E00               	movlw	0
 10439  0007B0  6F99               	movwf	efgtoa@t& (0+255),b
 10440                           
 10441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 10442  0007B2  0E00               	movlw	0
 10443  0007B4  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
 10444  0007B6  0E00               	movlw	0
 10445  0007B8  6FB3               	movwf	efgtoa@i& (0+255),b
 10446                           
 10447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10448  0007BA  EFCE  F004         	goto	l9538
 10449  0007BE                     l9490:
 10450                           
 10451                           ; BSR set to: 0
 10452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 10453  0007BE  C0AB  F044         	movff	efgtoa@h,___fldiv@b
 10454  0007C2  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
 10455  0007C6  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
 10456  0007CA  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
 10457  0007CE  C0BD  F048         	movff	efgtoa@u,___fldiv@a
 10458  0007D2  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
 10459  0007D6  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
 10460  0007DA  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
 10461  0007DE  ECA4  F014         	call	___fldiv	;wreg free
 10462  0007E2  C044  F050         	movff	?___fldiv,floorf@x
 10463  0007E6  C045  F051         	movff	?___fldiv+1,floorf@x+1
 10464  0007EA  C046  F052         	movff	?___fldiv+2,floorf@x+2
 10465  0007EE  C047  F053         	movff	?___fldiv+3,floorf@x+3
 10466  0007F2  EC0C  F019         	call	_floorf	;wreg free
 10467  0007F6  C050  F0AF         	movff	?_floorf,efgtoa@l
 10468  0007FA  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
 10469  0007FE  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
 10470  000802  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
 10471                           
 10472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 10473  000806  C0AF  F072         	movff	efgtoa@l,___fltol@f1
 10474  00080A  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
 10475  00080E  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
 10476  000812  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
 10477  000816  EC4F  F021         	call	___fltol	;wreg free
 10478  00081A  C072  F0A1         	movff	?___fltol,efgtoa@d
 10479  00081E  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
 10480  000822                     
 10481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10482  000822  0101               	movlb	1	; () banked
 10483  000824  B932               	btfsc	_flags& (0+255),4,b
 10484  000826  EF17  F004         	goto	u10621
 10485  00082A  EF19  F004         	goto	u10620
 10486  00082E                     u10621:
 10487  00082E  EF37  F004         	goto	l9502
 10488  000832                     u10620:
 10489  000832                     
 10490                           ; BSR set to: 1
 10491  000832  0100               	movlb	0	; () banked
 10492  000834  51A1               	movf	efgtoa@d& (0+255),w,b
 10493  000836  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
 10494  000838  A4D8               	btfss	status,2,c
 10495  00083A  EF21  F004         	goto	u10631
 10496  00083E  EF23  F004         	goto	u10630
 10497  000842                     u10631:
 10498  000842  EF37  F004         	goto	l9502
 10499  000846                     u10630:
 10500  000846                     
 10501                           ; BSR set to: 0
 10502  000846  0E67               	movlw	103
 10503  000848  19AA               	xorwf	efgtoa@mode& (0+255),w,b
 10504  00084A  A4D8               	btfss	status,2,c
 10505  00084C  EF2A  F004         	goto	u10641
 10506  000850  EF2C  F004         	goto	u10640
 10507  000854                     u10641:
 10508  000854  EF37  F004         	goto	l9502
 10509  000858                     u10640:
 10510  000858                     
 10511                           ; BSR set to: 0
 10512  000858  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10513  00085A  EF33  F004         	goto	u10650
 10514  00085E  EF31  F004         	goto	u10651
 10515  000862                     u10651:
 10516  000862  EF37  F004         	goto	l9502
 10517  000866                     u10650:
 10518  000866                     
 10519                           ; BSR set to: 0
 10520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 10521  000866  4B99               	infsnz	efgtoa@t& (0+255),f,b
 10522  000868  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
 10523                           
 10524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 10525  00086A  EF82  F004         	goto	l9530
 10526  00086E                     l9502:
 10527                           
 10528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 10529  00086E  0100               	movlb	0	; () banked
 10530  000870  519B               	movf	efgtoa@pp& (0+255),w,b
 10531  000872  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10532  000874  A4D8               	btfss	status,2,c
 10533  000876  EF3F  F004         	goto	u10661
 10534  00087A  EF41  F004         	goto	u10660
 10535  00087E                     u10661:
 10536  00087E  EF6B  F004         	goto	l9522
 10537  000882                     u10660:
 10538  000882                     
 10539                           ; BSR set to: 0
 10540  000882  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10541  000884  EF48  F004         	goto	u10670
 10542  000888  EF46  F004         	goto	u10671
 10543  00088C                     u10671:
 10544  00088C  EF6B  F004         	goto	l9522
 10545  000890                     u10670:
 10546  000890                     
 10547                           ; BSR set to: 0
 10548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 10549  000890  0E42               	movlw	low _dbuf
 10550  000892  25BB               	addwf	efgtoa@n& (0+255),w,b
 10551  000894  6ED9               	movwf	fsr2l,c
 10552  000896  0E01               	movlw	high _dbuf
 10553  000898  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10554  00089A  6EDA               	movwf	fsr2h,c
 10555  00089C  0E2E               	movlw	46
 10556  00089E  6EDF               	movwf	indf2,c
 10557  0008A0                     
 10558                           ; BSR set to: 0
 10559  0008A0  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10560  0008A2  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10561  0008A4                     
 10562                           ; BSR set to: 0
 10563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 10564  0008A4  07A8               	decf	efgtoa@w& (0+255),f,b
 10565  0008A6  A0D8               	btfss	status,0,c
 10566  0008A8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10567  0008AA                     
 10568                           ; BSR set to: 0
 10569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 10570  0008AA  0E00               	movlw	0
 10571  0008AC  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
 10572  0008AE  0E01               	movlw	1
 10573  0008B0  6F9B               	movwf	efgtoa@pp& (0+255),b
 10574  0008B2  EF6B  F004         	goto	l9522
 10575  0008B6                     l9514:
 10576                           
 10577                           ; BSR set to: 0
 10578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 10579  0008B6  0E42               	movlw	low _dbuf
 10580  0008B8  25BB               	addwf	efgtoa@n& (0+255),w,b
 10581  0008BA  6ED9               	movwf	fsr2l,c
 10582  0008BC  0E01               	movlw	high _dbuf
 10583  0008BE  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10584  0008C0  6EDA               	movwf	fsr2h,c
 10585  0008C2  0E30               	movlw	48
 10586  0008C4  6EDF               	movwf	indf2,c
 10587  0008C6                     
 10588                           ; BSR set to: 0
 10589  0008C6  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10590  0008C8  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10591  0008CA                     
 10592                           ; BSR set to: 0
 10593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 10594  0008CA  07A8               	decf	efgtoa@w& (0+255),f,b
 10595  0008CC  A0D8               	btfss	status,0,c
 10596  0008CE  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10597  0008D0                     
 10598                           ; BSR set to: 0
 10599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 10600  0008D0  0799               	decf	efgtoa@t& (0+255),f,b
 10601  0008D2  A0D8               	btfss	status,0,c
 10602  0008D4  079A               	decf	(efgtoa@t+1)& (0+255),f,b
 10603  0008D6                     l9522:
 10604                           
 10605                           ; BSR set to: 0
 10606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 10607  0008D6  5199               	movf	efgtoa@t& (0+255),w,b
 10608  0008D8  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10609  0008DA  A4D8               	btfss	status,2,c
 10610  0008DC  EF72  F004         	goto	u10681
 10611  0008E0  EF74  F004         	goto	u10680
 10612  0008E4                     u10681:
 10613  0008E4  EF5B  F004         	goto	l9514
 10614  0008E8                     u10680:
 10615  0008E8                     
 10616                           ; BSR set to: 0
 10617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 10618  0008E8  0E42               	movlw	low _dbuf
 10619  0008EA  25BB               	addwf	efgtoa@n& (0+255),w,b
 10620  0008EC  6ED9               	movwf	fsr2l,c
 10621  0008EE  0E01               	movlw	high _dbuf
 10622  0008F0  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10623  0008F2  6EDA               	movwf	fsr2h,c
 10624  0008F4  51A1               	movf	efgtoa@d& (0+255),w,b
 10625  0008F6  0F30               	addlw	48
 10626  0008F8  6EDF               	movwf	indf2,c
 10627  0008FA                     
 10628                           ; BSR set to: 0
 10629  0008FA  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10630  0008FC  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10631  0008FE                     
 10632                           ; BSR set to: 0
 10633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 10634  0008FE  07A8               	decf	efgtoa@w& (0+255),f,b
 10635  000900  A0D8               	btfss	status,0,c
 10636  000902  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10637  000904                     l9530:
 10638                           
 10639                           ; BSR set to: 0
 10640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 10641  000904  C0AB  F044         	movff	efgtoa@h,___flsub@b
 10642  000908  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
 10643  00090C  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
 10644  000910  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
 10645  000914  C0BD  F01F         	movff	efgtoa@u,___flmul@a
 10646  000918  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
 10647  00091C  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
 10648  000920  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
 10649  000924  C0AF  F01B         	movff	efgtoa@l,___flmul@b
 10650  000928  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
 10651  00092C  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
 10652  000930  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
 10653  000934  ECC2  F00E         	call	___flmul	;wreg free
 10654  000938  C01B  F048         	movff	?___flmul,___flsub@a
 10655  00093C  C01C  F049         	movff	?___flmul+1,___flsub@a+1
 10656  000940  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
 10657  000944  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
 10658  000948  ECF5  F02A         	call	___flsub	;wreg free
 10659  00094C  C044  F0AB         	movff	?___flsub,efgtoa@h
 10660  000950  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
 10661  000954  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
 10662  000958  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
 10663  00095C                     
 10664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 10665  00095C  C0BD  F044         	movff	efgtoa@u,___fldiv@b
 10666  000960  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
 10667  000964  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
 10668  000968  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
 10669  00096C  0E00               	movlw	0
 10670  00096E  6E48               	movwf	___fldiv@a^0,c
 10671  000970  0E00               	movlw	0
 10672  000972  6E49               	movwf	(___fldiv@a+1)^0,c
 10673  000974  0E20               	movlw	32
 10674  000976  6E4A               	movwf	(___fldiv@a+2)^0,c
 10675  000978  0E41               	movlw	65
 10676  00097A  6E4B               	movwf	(___fldiv@a+3)^0,c
 10677  00097C  ECA4  F014         	call	___fldiv	;wreg free
 10678  000980  C044  F0BD         	movff	?___fldiv,efgtoa@u
 10679  000984  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
 10680  000988  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
 10681  00098C  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
 10682  000990                     
 10683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 10684  000990  0100               	movlb	0	; () banked
 10685  000992  079F               	decf	efgtoa@ne& (0+255),f,b
 10686  000994  A0D8               	btfss	status,0,c
 10687  000996  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
 10688  000998                     
 10689                           ; BSR set to: 0
 10690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 10691  000998  4BB3               	infsnz	efgtoa@i& (0+255),f,b
 10692  00099A  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
 10693  00099C                     l9538:
 10694                           
 10695                           ; BSR set to: 0
 10696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10697  00099C  519D               	movf	efgtoa@m& (0+255),w,b
 10698  00099E  5DB3               	subwf	efgtoa@i& (0+255),w,b
 10699  0009A0  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
 10700  0009A2  0A80               	xorlw	128
 10701  0009A4  6F84               	movwf	??_efgtoa& (0+255),b
 10702  0009A6  519E               	movf	(efgtoa@m+1)& (0+255),w,b
 10703  0009A8  0A80               	xorlw	128
 10704  0009AA  5984               	subwfb	??_efgtoa& (0+255),w,b
 10705  0009AC  B0D8               	btfsc	status,0,c
 10706  0009AE  EFDB  F004         	goto	u10691
 10707  0009B2  EFDD  F004         	goto	u10690
 10708  0009B6                     u10691:
 10709  0009B6  EFEB  F004         	goto	l9542
 10710  0009BA                     u10690:
 10711  0009BA                     
 10712                           ; BSR set to: 0
 10713  0009BA  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10714  0009BC  EFE9  F004         	goto	u10701
 10715  0009C0  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
 10716  0009C2  E109               	bnz	u10700
 10717  0009C4  0E4B               	movlw	75
 10718  0009C6  5DBB               	subwf	efgtoa@n& (0+255),w,b
 10719  0009C8  A0D8               	btfss	status,0,c
 10720  0009CA  EFE9  F004         	goto	u10701
 10721  0009CE  EFEB  F004         	goto	u10700
 10722  0009D2                     u10701:
 10723  0009D2  EFDF  F003         	goto	l9490
 10724  0009D6                     u10700:
 10725  0009D6                     l9542:
 10726                           
 10727                           ; BSR set to: 0
 10728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 10729  0009D6  519B               	movf	efgtoa@pp& (0+255),w,b
 10730  0009D8  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10731  0009DA  A4D8               	btfss	status,2,c
 10732  0009DC  EFF2  F004         	goto	u10711
 10733  0009E0  EFF4  F004         	goto	u10710
 10734  0009E4                     u10711:
 10735  0009E4  EF07  F005         	goto	l9550
 10736  0009E8                     u10710:
 10737  0009E8                     
 10738                           ; BSR set to: 0
 10739  0009E8  0101               	movlb	1	; () banked
 10740  0009EA  A932               	btfss	_flags& (0+255),4,b
 10741  0009EC  EFFA  F004         	goto	u10721
 10742  0009F0  EFFC  F004         	goto	u10720
 10743  0009F4                     u10721:
 10744  0009F4  EF07  F005         	goto	l9550
 10745  0009F8                     u10720:
 10746  0009F8                     
 10747                           ; BSR set to: 1
 10748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 10749  0009F8  0E42               	movlw	low _dbuf
 10750  0009FA  0100               	movlb	0	; () banked
 10751  0009FC  25BB               	addwf	efgtoa@n& (0+255),w,b
 10752  0009FE  6ED9               	movwf	fsr2l,c
 10753  000A00  0E01               	movlw	high _dbuf
 10754  000A02  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10755  000A04  6EDA               	movwf	fsr2h,c
 10756  000A06  0E2E               	movlw	46
 10757  000A08  6EDF               	movwf	indf2,c
 10758  000A0A                     
 10759                           ; BSR set to: 0
 10760  000A0A  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10761  000A0C  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10762  000A0E                     l9550:
 10763                           
 10764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 10765  000A0E  0E42               	movlw	low _dbuf
 10766  000A10  0100               	movlb	0	; () banked
 10767  000A12  25BB               	addwf	efgtoa@n& (0+255),w,b
 10768  000A14  6ED9               	movwf	fsr2l,c
 10769  000A16  0E01               	movlw	high _dbuf
 10770  000A18  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10771  000A1A  6EDA               	movwf	fsr2h,c
 10772  000A1C  0E00               	movlw	0
 10773  000A1E  6EDF               	movwf	indf2,c
 10774  000A20                     
 10775                           ; BSR set to: 0
 10776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 10777  000A20  0E65               	movlw	101
 10778  000A22  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
 10779  000A24  A4D8               	btfss	status,2,c
 10780  000A26  EF17  F005         	goto	u10731
 10781  000A2A  EF19  F005         	goto	u10730
 10782  000A2E                     u10731:
 10783  000A2E  EFBE  F000         	goto	l9362
 10784  000A32                     u10730:
 10785  000A32                     
 10786                           ; BSR set to: 0
 10787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10788  000A32  0E00               	movlw	0
 10789  000A34  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
 10790  000A36  0E4F               	movlw	79
 10791  000A38  6FB3               	movwf	efgtoa@i& (0+255),b
 10792  000A3A                     
 10793                           ; BSR set to: 0
 10794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10795  000A3A  0E42               	movlw	low _dbuf
 10796  000A3C  25B3               	addwf	efgtoa@i& (0+255),w,b
 10797  000A3E  6ED9               	movwf	fsr2l,c
 10798  000A40  0E01               	movlw	high _dbuf
 10799  000A42  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10800  000A44  6EDA               	movwf	fsr2h,c
 10801  000A46  0E00               	movlw	0
 10802  000A48  6EDF               	movwf	indf2,c
 10803  000A4A                     
 10804                           ; BSR set to: 0
 10805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10806  000A4A  0E00               	movlw	0
 10807  000A4C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
 10808  000A4E  0E00               	movlw	0
 10809  000A50  6FA3               	movwf	efgtoa@sign& (0+255),b
 10810  000A52                     
 10811                           ; BSR set to: 0
 10812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10813  000A52  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10814  000A54  EF30  F005         	goto	u10740
 10815  000A58  EF2E  F005         	goto	u10741
 10816  000A5C                     u10741:
 10817  000A5C  EF38  F005         	goto	l9566
 10818  000A60                     u10740:
 10819  000A60                     
 10820                           ; BSR set to: 0
 10821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10822  000A60  0E00               	movlw	0
 10823  000A62  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
 10824  000A64  0E01               	movlw	1
 10825  000A66  6FA3               	movwf	efgtoa@sign& (0+255),b
 10826  000A68                     
 10827                           ; BSR set to: 0
 10828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10829  000A68  6DB9               	negf	efgtoa@e& (0+255),b
 10830  000A6A  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
 10831  000A6C  B0D8               	btfsc	status,0,c
 10832  000A6E  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
 10833  000A70                     l9566:
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10837  000A70  0E00               	movlw	0
 10838  000A72  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
 10839  000A74  0E02               	movlw	2
 10840  000A76  6FA5               	movwf	efgtoa@p& (0+255),b
 10841                           
 10842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10843  000A78  EF69  F005         	goto	l9578
 10844  000A7C                     l9568:
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10848  000A7C  07B3               	decf	efgtoa@i& (0+255),f,b
 10849  000A7E  A0D8               	btfss	status,0,c
 10850  000A80  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10851  000A82                     
 10852                           ; BSR set to: 0
 10853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10854  000A82  0E42               	movlw	low _dbuf
 10855  000A84  25B3               	addwf	efgtoa@i& (0+255),w,b
 10856  000A86  6ED9               	movwf	fsr2l,c
 10857  000A88  0E01               	movlw	high _dbuf
 10858  000A8A  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10859  000A8C  6EDA               	movwf	fsr2h,c
 10860  000A8E  C0B9  F006         	movff	efgtoa@e,___awmod@dividend
 10861  000A92  C0BA  F007         	movff	efgtoa@e+1,___awmod@dividend+1
 10862  000A96  0E00               	movlw	0
 10863  000A98  6E09               	movwf	(___awmod@divisor+1)^0,c
 10864  000A9A  0E0A               	movlw	10
 10865  000A9C  6E08               	movwf	___awmod@divisor^0,c
 10866  000A9E  ECB1  F025         	call	___awmod	;wreg free
 10867  000AA2  5006               	movf	?___awmod^0,w,c
 10868  000AA4  0F30               	addlw	48
 10869  000AA6  6EDF               	movwf	indf2,c
 10870  000AA8                     
 10871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10872  000AA8  C0B9  F006         	movff	efgtoa@e,___awdiv@dividend
 10873  000AAC  C0BA  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
 10874  000AB0  0E00               	movlw	0
 10875  000AB2  6E09               	movwf	(___awdiv@divisor+1)^0,c
 10876  000AB4  0E0A               	movlw	10
 10877  000AB6  6E08               	movwf	___awdiv@divisor^0,c
 10878  000AB8  ECF6  F024         	call	___awdiv	;wreg free
 10879  000ABC  C006  F0B9         	movff	?___awdiv,efgtoa@e
 10880  000AC0  C007  F0BA         	movff	?___awdiv+1,efgtoa@e+1
 10881  000AC4                     
 10882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10883  000AC4  0100               	movlb	0	; () banked
 10884  000AC6  07A5               	decf	efgtoa@p& (0+255),f,b
 10885  000AC8  A0D8               	btfss	status,0,c
 10886  000ACA  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
 10887  000ACC                     
 10888                           ; BSR set to: 0
 10889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10890  000ACC  07A8               	decf	efgtoa@w& (0+255),f,b
 10891  000ACE  A0D8               	btfss	status,0,c
 10892  000AD0  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10893  000AD2                     l9578:
 10894                           
 10895                           ; BSR set to: 0
 10896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10897  000AD2  51B9               	movf	efgtoa@e& (0+255),w,b
 10898  000AD4  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10899  000AD6  A4D8               	btfss	status,2,c
 10900  000AD8  EF70  F005         	goto	u10751
 10901  000ADC  EF72  F005         	goto	u10750
 10902  000AE0                     u10751:
 10903  000AE0  EF3E  F005         	goto	l9568
 10904  000AE4                     u10750:
 10905  000AE4                     
 10906                           ; BSR set to: 0
 10907  000AE4  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10908  000AE6  EF7F  F005         	goto	u10760
 10909  000AEA  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
 10910  000AEC  E106               	bnz	u10761
 10911  000AEE  05A5               	decf	efgtoa@p& (0+255),w,b
 10912  000AF0  B0D8               	btfsc	status,0,c
 10913  000AF2  EF7D  F005         	goto	u10761
 10914  000AF6  EF7F  F005         	goto	u10760
 10915  000AFA                     u10761:
 10916  000AFA  EF3E  F005         	goto	l9568
 10917  000AFE                     u10760:
 10918  000AFE                     
 10919                           ; BSR set to: 0
 10920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10921  000AFE  07B3               	decf	efgtoa@i& (0+255),f,b
 10922  000B00  A0D8               	btfss	status,0,c
 10923  000B02  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10924  000B04                     
 10925                           ; BSR set to: 0
 10926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10927  000B04  51A3               	movf	efgtoa@sign& (0+255),w,b
 10928  000B06  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10929  000B08  A4D8               	btfss	status,2,c
 10930  000B0A  EF89  F005         	goto	u10771
 10931  000B0E  EF8B  F005         	goto	u10770
 10932  000B12                     u10771:
 10933  000B12  EF91  F005         	goto	l9588
 10934  000B16                     u10770:
 10935  000B16                     
 10936                           ; BSR set to: 0
 10937  000B16  0E00               	movlw	0
 10938  000B18  6F94               	movwf	(_efgtoa$937+1)& (0+255),b
 10939  000B1A  0E2B               	movlw	43
 10940  000B1C  6F93               	movwf	_efgtoa$937& (0+255),b
 10941  000B1E  EF95  F005         	goto	l9590
 10942  000B22                     l9588:
 10943                           
 10944                           ; BSR set to: 0
 10945  000B22  0E00               	movlw	0
 10946  000B24  6F94               	movwf	(_efgtoa$937+1)& (0+255),b
 10947  000B26  0E2D               	movlw	45
 10948  000B28  6F93               	movwf	_efgtoa$937& (0+255),b
 10949  000B2A                     l9590:
 10950                           
 10951                           ; BSR set to: 0
 10952  000B2A  0E42               	movlw	low _dbuf
 10953  000B2C  25B3               	addwf	efgtoa@i& (0+255),w,b
 10954  000B2E  6ED9               	movwf	fsr2l,c
 10955  000B30  0E01               	movlw	high _dbuf
 10956  000B32  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10957  000B34  6EDA               	movwf	fsr2h,c
 10958  000B36  C093  FFDF         	movff	_efgtoa$937,indf2
 10959  000B3A                     
 10960                           ; BSR set to: 0
 10961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10962  000B3A  07A8               	decf	efgtoa@w& (0+255),f,b
 10963  000B3C  A0D8               	btfss	status,0,c
 10964  000B3E  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10965  000B40                     
 10966                           ; BSR set to: 0
 10967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10968  000B40  07B3               	decf	efgtoa@i& (0+255),f,b
 10969  000B42  A0D8               	btfss	status,0,c
 10970  000B44  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10971  000B46                     
 10972                           ; BSR set to: 0
 10973  000B46  0EBF               	movlw	191
 10974  000B48  6F84               	movwf	??_efgtoa& (0+255),b
 10975  000B4A  0EFF               	movlw	255
 10976  000B4C  6F85               	movwf	(??_efgtoa+1)& (0+255),b
 10977  000B4E  5183               	movf	efgtoa@c& (0+255),w,b
 10978  000B50  6F86               	movwf	(??_efgtoa+2)& (0+255),b
 10979  000B52  6B87               	clrf	(??_efgtoa+3)& (0+255),b
 10980  000B54  5184               	movf	??_efgtoa& (0+255),w,b
 10981  000B56  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
 10982  000B58  5185               	movf	(??_efgtoa+1)& (0+255),w,b
 10983  000B5A  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10984  000B5C  5187               	movf	(??_efgtoa+3)& (0+255),w,b
 10985  000B5E  E10A               	bnz	u10780
 10986  000B60  0E1A               	movlw	26
 10987  000B62  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
 10988  000B64  A0D8               	btfss	status,0,c
 10989  000B66  EFB7  F005         	goto	u10781
 10990  000B6A  EFBA  F005         	goto	u10780
 10991  000B6E                     u10781:
 10992  000B6E  0E01               	movlw	1
 10993  000B70  EFBB  F005         	goto	u10790
 10994  000B74                     u10780:
 10995  000B74  0E00               	movlw	0
 10996  000B76                     u10790:
 10997  000B76  6F97               	movwf	_efgtoa$939& (0+255),b
 10998  000B78  6B98               	clrf	(_efgtoa$939+1)& (0+255),b
 10999  000B7A                     
 11000                           ; BSR set to: 0
 11001  000B7A  5197               	movf	_efgtoa$939& (0+255),w,b
 11002  000B7C  1198               	iorwf	(_efgtoa$939+1)& (0+255),w,b
 11003  000B7E  A4D8               	btfss	status,2,c
 11004  000B80  EFC4  F005         	goto	u10801
 11005  000B84  EFC6  F005         	goto	u10800
 11006  000B88                     u10801:
 11007  000B88  EFCC  F005         	goto	l9604
 11008  000B8C                     u10800:
 11009  000B8C                     
 11010                           ; BSR set to: 0
 11011  000B8C  0E00               	movlw	0
 11012  000B8E  6F96               	movwf	(_efgtoa$938+1)& (0+255),b
 11013  000B90  0E65               	movlw	101
 11014  000B92  6F95               	movwf	_efgtoa$938& (0+255),b
 11015  000B94  EFD0  F005         	goto	l9606
 11016  000B98                     l9604:
 11017                           
 11018                           ; BSR set to: 0
 11019  000B98  0E00               	movlw	0
 11020  000B9A  6F96               	movwf	(_efgtoa$938+1)& (0+255),b
 11021  000B9C  0E45               	movlw	69
 11022  000B9E  6F95               	movwf	_efgtoa$938& (0+255),b
 11023  000BA0                     l9606:
 11024                           
 11025                           ; BSR set to: 0
 11026  000BA0  0E42               	movlw	low _dbuf
 11027  000BA2  25B3               	addwf	efgtoa@i& (0+255),w,b
 11028  000BA4  6ED9               	movwf	fsr2l,c
 11029  000BA6  0E01               	movlw	high _dbuf
 11030  000BA8  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11031  000BAA  6EDA               	movwf	fsr2h,c
 11032  000BAC  C095  FFDF         	movff	_efgtoa$938,indf2
 11033  000BB0                     
 11034                           ; BSR set to: 0
 11035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 11036  000BB0  07A8               	decf	efgtoa@w& (0+255),f,b
 11037  000BB2  A0D8               	btfss	status,0,c
 11038  000BB4  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 11039  000BB6                     
 11040                           ; BSR set to: 0
 11041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 11042  000BB6  0E42               	movlw	low _dbuf
 11043  000BB8  25BB               	addwf	efgtoa@n& (0+255),w,b
 11044  000BBA  6E06               	movwf	strcpy@dest^0,c
 11045  000BBC  0E01               	movlw	high _dbuf
 11046  000BBE  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11047  000BC0  6E07               	movwf	(strcpy@dest+1)^0,c
 11048  000BC2  0E42               	movlw	low _dbuf
 11049  000BC4  25B3               	addwf	efgtoa@i& (0+255),w,b
 11050  000BC6  6E08               	movwf	strcpy@src^0,c
 11051  000BC8  0E01               	movlw	high _dbuf
 11052  000BCA  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11053  000BCC  6E09               	movwf	(strcpy@src+1)^0,c
 11054  000BCE  EC09  F029         	call	_strcpy	;wreg free
 11055  000BD2  EFBE  F000         	goto	l9362
 11056  000BD6                     l851:
 11057  000BD6  0012               	return		;funcret
 11058  000BD8                     __end_of_efgtoa:
 11059                           	opt callstack 0
 11060                           
 11061 ;; *************** function _tolower *****************
 11062 ;; Defined at:
 11063 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;  c               2   11[COMRAM] int 
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;		None
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  2   11[COMRAM] int 
 11070 ;; Registers used:
 11071 ;;		wreg, status,2, status,0
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11077 ;;      Params:         2       0       0       0       0       0       0       0       0
 11078 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11079 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11080 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11081 ;;Total ram usage:        8 bytes
 11082 ;; Hardware stack levels used:    1
 11083 ;; Hardware stack levels required when called:    3
 11084 ;; This function calls:
 11085 ;;		_isupper
 11086 ;; This function is called by:
 11087 ;;		_efgtoa
 11088 ;;		_vfpfcnvrt
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           	psect	text37
 11093  005154                     __ptext37:
 11094                           	opt callstack 0
 11095  005154                     _tolower:
 11096                           	opt callstack 23
 11097  005154  0EBF               	movlw	191
 11098  005156  6E0E               	movwf	??_tolower^0,c
 11099  005158  0EFF               	movlw	255
 11100  00515A  6E0F               	movwf	(??_tolower+1)^0,c
 11101  00515C  C00C  F010         	movff	tolower@c,??_tolower+2
 11102  005160  C00D  F011         	movff	tolower@c+1,??_tolower+3
 11103  005164  500E               	movf	??_tolower^0,w,c
 11104  005166  2610               	addwf	(??_tolower+2)^0,f,c
 11105  005168  500F               	movf	(??_tolower+1)^0,w,c
 11106  00516A  2211               	addwfc	(??_tolower+3)^0,f,c
 11107  00516C  5011               	movf	(??_tolower+3)^0,w,c
 11108  00516E  E10A               	bnz	u8870
 11109  005170  0E1A               	movlw	26
 11110  005172  5C10               	subwf	(??_tolower+2)^0,w,c
 11111  005174  A0D8               	btfss	status,0,c
 11112  005176  EFBF  F028         	goto	u8871
 11113  00517A  EFC2  F028         	goto	u8870
 11114  00517E                     u8871:
 11115  00517E  0E01               	movlw	1
 11116  005180  EFC3  F028         	goto	u8880
 11117  005184                     u8870:
 11118  005184  0E00               	movlw	0
 11119  005186                     u8880:
 11120  005186  6E12               	movwf	_tolower$1562^0,c
 11121  005188  6A13               	clrf	(_tolower$1562+1)^0,c
 11122  00518A  5012               	movf	_tolower$1562^0,w,c
 11123  00518C  1013               	iorwf	(_tolower$1562+1)^0,w,c
 11124  00518E  B4D8               	btfsc	status,2,c
 11125  005190  EFCC  F028         	goto	u8891
 11126  005194  EFCE  F028         	goto	u8890
 11127  005198                     u8891:
 11128  005198  EFD5  F028         	goto	l1786
 11129  00519C                     u8890:
 11130  00519C  0E20               	movlw	32
 11131  00519E  100C               	iorwf	tolower@c^0,w,c
 11132  0051A0  6E0C               	movwf	?_tolower^0,c
 11133  0051A2  500D               	movf	(tolower@c+1)^0,w,c
 11134  0051A4  6E0D               	movwf	(?_tolower+1)^0,c
 11135  0051A6  EFD9  F028         	goto	l1791
 11136  0051AA                     l1786:
 11137  0051AA  C00C  F00C         	movff	tolower@c,?_tolower
 11138  0051AE  C00D  F00D         	movff	tolower@c+1,?_tolower+1
 11139  0051B2                     l1791:
 11140  0051B2  0012               	return		;funcret
 11141  0051B4                     __end_of_tolower:
 11142                           	opt callstack 0
 11143                           
 11144 ;; *************** function _isupper *****************
 11145 ;; Defined at:
 11146 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  c               2    5[COMRAM] int 
 11149 ;; Auto vars:     Size  Location     Type
 11150 ;;		None
 11151 ;; Return value:  Size  Location     Type
 11152 ;;                  2    5[COMRAM] int 
 11153 ;; Registers used:
 11154 ;;		wreg, status,2, status,0
 11155 ;; Tracked objects:
 11156 ;;		On entry : 0/0
 11157 ;;		On exit  : 0/0
 11158 ;;		Unchanged: 0/0
 11159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11160 ;;      Params:         2       0       0       0       0       0       0       0       0
 11161 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11162 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11163 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11164 ;;Total ram usage:        6 bytes
 11165 ;; Hardware stack levels used:    1
 11166 ;; Hardware stack levels required when called:    2
 11167 ;; This function calls:
 11168 ;;		Nothing
 11169 ;; This function is called by:
 11170 ;;		_efgtoa
 11171 ;;		_vfpfcnvrt
 11172 ;;		_tolower
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           	psect	text38
 11177  00573E                     __ptext38:
 11178                           	opt callstack 0
 11179  00573E                     _isupper:
 11180                           	opt callstack 23
 11181  00573E  0EBF               	movlw	191
 11182  005740  6E08               	movwf	??_isupper^0,c
 11183  005742  0EFF               	movlw	255
 11184  005744  6E09               	movwf	(??_isupper+1)^0,c
 11185  005746  C006  F00A         	movff	isupper@c,??_isupper+2
 11186  00574A  C007  F00B         	movff	isupper@c+1,??_isupper+3
 11187  00574E  5008               	movf	??_isupper^0,w,c
 11188  005750  260A               	addwf	(??_isupper+2)^0,f,c
 11189  005752  5009               	movf	(??_isupper+1)^0,w,c
 11190  005754  220B               	addwfc	(??_isupper+3)^0,f,c
 11191  005756  500B               	movf	(??_isupper+3)^0,w,c
 11192  005758  E10A               	bnz	u8240
 11193  00575A  0E1A               	movlw	26
 11194  00575C  5C0A               	subwf	(??_isupper+2)^0,w,c
 11195  00575E  A0D8               	btfss	status,0,c
 11196  005760  EFB4  F02B         	goto	u8241
 11197  005764  EFB7  F02B         	goto	u8240
 11198  005768                     u8241:
 11199  005768  0E01               	movlw	1
 11200  00576A  EFB8  F02B         	goto	u8250
 11201  00576E                     u8240:
 11202  00576E  0E00               	movlw	0
 11203  005770                     u8250:
 11204  005770  6E06               	movwf	?_isupper^0,c
 11205  005772  6A07               	clrf	(?_isupper+1)^0,c
 11206  005774  0012               	return		;funcret
 11207  005776                     __end_of_isupper:
 11208                           	opt callstack 0
 11209                           
 11210 ;; *************** function _strcpy *****************
 11211 ;; Defined at:
 11212 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 11213 ;; Parameters:    Size  Location     Type
 11214 ;;  dest            2    5[COMRAM] PTR unsigned char 
 11215 ;;		 -> dbuf(80), 
 11216 ;;  src             2    7[COMRAM] PTR const unsigned char 
 11217 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
 11218 ;;		 -> dbuf(80), 
 11219 ;; Auto vars:     Size  Location     Type
 11220 ;;  d               2   13[COMRAM] PTR unsigned char 
 11221 ;;		 -> dbuf(80), 
 11222 ;;  s               2   11[COMRAM] PTR const unsigned char 
 11223 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
 11224 ;;		 -> dbuf(80), 
 11225 ;; Return value:  Size  Location     Type
 11226 ;;                  2    5[COMRAM] PTR unsigned char 
 11227 ;; Registers used:
 11228 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11229 ;; Tracked objects:
 11230 ;;		On entry : 0/0
 11231 ;;		On exit  : 0/0
 11232 ;;		Unchanged: 0/0
 11233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11234 ;;      Params:         4       0       0       0       0       0       0       0       0
 11235 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11236 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11237 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11238 ;;Total ram usage:       10 bytes
 11239 ;; Hardware stack levels used:    1
 11240 ;; Hardware stack levels required when called:    2
 11241 ;; This function calls:
 11242 ;;		Nothing
 11243 ;; This function is called by:
 11244 ;;		_efgtoa
 11245 ;; This function uses a non-reentrant model
 11246 ;;
 11247                           
 11248                           	psect	text39
 11249  005212                     __ptext39:
 11250                           	opt callstack 0
 11251  005212                     _strcpy:
 11252                           	opt callstack 23
 11253  005212  C008  F00C         	movff	strcpy@src,strcpy@s
 11254  005216  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
 11255  00521A  C006  F00E         	movff	strcpy@dest,strcpy@d
 11256  00521E  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
 11257  005222                     l8536:
 11258  005222  500C               	movf	strcpy@s^0,w,c
 11259  005224  6E0A               	movwf	??_strcpy^0,c
 11260  005226  500D               	movf	(strcpy@s+1)^0,w,c
 11261  005228  6E0B               	movwf	(??_strcpy+1)^0,c
 11262  00522A  4A0C               	infsnz	strcpy@s^0,f,c
 11263  00522C  2A0D               	incf	(strcpy@s+1)^0,f,c
 11264  00522E  C00A  FFF6         	movff	??_strcpy,tblptrl
 11265  005232  C00B  FFF7         	movff	??_strcpy+1,tblptrh
 11266  005236  6AF8               	clrf	tblptru,c
 11267  005238  C00E  FFD9         	movff	strcpy@d,fsr2l
 11268  00523C  C00F  FFDA         	movff	strcpy@d+1,fsr2h
 11269  005240  4A0E               	infsnz	strcpy@d^0,f,c
 11270  005242  2A0F               	incf	(strcpy@d+1)^0,f,c
 11271  005244  0E07               	movlw	(high __ramtop+-1)
 11272  005246  64F7               	cpfsgt	tblptrh,c
 11273  005248  D003               	bra	u8857
 11274  00524A  0008               	tblrd		*
 11275  00524C  50F5               	movf	tablat,w,c
 11276  00524E  D005               	bra	u8850
 11277  005250                     u8857:
 11278  005250  CFF6 FFE9          	movff	tblptrl,fsr0l
 11279  005254  CFF7 FFEA          	movff	tblptrh,fsr0h
 11280  005258  50EF               	movf	indf0,w,c
 11281  00525A                     u8850:
 11282  00525A  6EDF               	movwf	indf2,c
 11283  00525C  50DF               	movf	indf2,w,c
 11284  00525E  A4D8               	btfss	status,2,c
 11285  005260  EF34  F029         	goto	u8861
 11286  005264  EF36  F029         	goto	u8860
 11287  005268                     u8861:
 11288  005268  EF11  F029         	goto	l8536
 11289  00526C                     u8860:
 11290  00526C  0012               	return		;funcret
 11291  00526E                     __end_of_strcpy:
 11292                           	opt callstack 0
 11293                           
 11294 ;; *************** function _floorf *****************
 11295 ;; Defined at:
 11296 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 11297 ;; Parameters:    Size  Location     Type
 11298 ;;  x               4   79[COMRAM] float 
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;  u               4   25[BANK0 ] struct .
 11301 ;;  m               4   19[BANK0 ] unsigned long 
 11302 ;;  e               2   23[BANK0 ] int 
 11303 ;; Return value:  Size  Location     Type
 11304 ;;                  4   79[COMRAM] float 
 11305 ;; Registers used:
 11306 ;;		wreg, status,2, status,0
 11307 ;; Tracked objects:
 11308 ;;		On entry : 0/0
 11309 ;;		On exit  : 0/0
 11310 ;;		Unchanged: 0/0
 11311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11312 ;;      Params:         4       0       0       0       0       0       0       0       0
 11313 ;;      Locals:         0      10       0       0       0       0       0       0       0
 11314 ;;      Temps:          0       6       0       0       0       0       0       0       0
 11315 ;;      Totals:         4      16       0       0       0       0       0       0       0
 11316 ;;Total ram usage:       20 bytes
 11317 ;; Hardware stack levels used:    1
 11318 ;; Hardware stack levels required when called:    2
 11319 ;; This function calls:
 11320 ;;		Nothing
 11321 ;; This function is called by:
 11322 ;;		_efgtoa
 11323 ;; This function uses a non-reentrant model
 11324 ;;
 11325                           
 11326                           	psect	text40
 11327  003218                     __ptext40:
 11328                           	opt callstack 0
 11329  003218                     _floorf:
 11330                           	opt callstack 23
 11331  003218  C104  F079         	movff	floorf@F524,floorf@u
 11332  00321C  C105  F07A         	movff	floorf@F524+1,floorf@u+1
 11333  003220  C106  F07B         	movff	floorf@F524+2,floorf@u+2
 11334  003224  C107  F07C         	movff	floorf@F524+3,floorf@u+3
 11335  003228  C050  F079         	movff	floorf@x,floorf@u
 11336  00322C  C051  F07A         	movff	floorf@x+1,floorf@u+1
 11337  003230  C052  F07B         	movff	floorf@x+2,floorf@u+2
 11338  003234  C053  F07C         	movff	floorf@x+3,floorf@u+3
 11339  003238  0E81               	movlw	129
 11340  00323A  0100               	movlb	0	; () banked
 11341  00323C  6F6D               	movwf	??_floorf& (0+255),b
 11342  00323E  0EFF               	movlw	255
 11343  003240  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11344  003242  C079  F06F         	movff	floorf@u,??_floorf+2
 11345  003246  C07A  F070         	movff	floorf@u+1,??_floorf+3
 11346  00324A  C07B  F071         	movff	floorf@u+2,??_floorf+4
 11347  00324E  C07C  F072         	movff	floorf@u+3,??_floorf+5
 11348  003252  0E18               	movlw	24
 11349  003254  EF31  F019         	goto	u8900
 11350  003258                     u8905:
 11351  003258  90D8               	bcf	status,0,c
 11352  00325A  3372               	rrcf	(??_floorf+5)& (0+255),f,b
 11353  00325C  3371               	rrcf	(??_floorf+4)& (0+255),f,b
 11354  00325E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11355  003260  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11356  003262                     u8900:
 11357  003262  2EE8               	decfsz	wreg,f,c
 11358  003264  EF2C  F019         	goto	u8905
 11359  003268  516F               	movf	(??_floorf+2)& (0+255),w,b
 11360  00326A  256D               	addwf	??_floorf& (0+255),w,b
 11361  00326C  6F77               	movwf	floorf@e& (0+255),b
 11362  00326E  0E00               	movlw	0
 11363  003270  216E               	addwfc	(??_floorf+1)& (0+255),w,b
 11364  003272  6F78               	movwf	(floorf@e+1)& (0+255),b
 11365  003274  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
 11366  003276  EF46  F019         	goto	u8911
 11367  00327A  5178               	movf	(floorf@e+1)& (0+255),w,b
 11368  00327C  E109               	bnz	u8910
 11369  00327E  0E17               	movlw	23
 11370  003280  5D77               	subwf	floorf@e& (0+255),w,b
 11371  003282  A0D8               	btfss	status,0,c
 11372  003284  EF46  F019         	goto	u8911
 11373  003288  EF48  F019         	goto	u8910
 11374  00328C                     u8911:
 11375  00328C  EF52  F019         	goto	l8554
 11376  003290                     u8910:
 11377  003290                     l8552:
 11378                           
 11379                           ; BSR set to: 0
 11380  003290  C050  F050         	movff	floorf@x,?_floorf
 11381  003294  C051  F051         	movff	floorf@x+1,?_floorf+1
 11382  003298  C052  F052         	movff	floorf@x+2,?_floorf+2
 11383  00329C  C053  F053         	movff	floorf@x+3,?_floorf+3
 11384  0032A0  EF16  F01A         	goto	l1688
 11385  0032A4                     l8554:
 11386                           
 11387                           ; BSR set to: 0
 11388  0032A4  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
 11389  0032A6  EF57  F019         	goto	u8921
 11390  0032AA  EF59  F019         	goto	u8920
 11391  0032AE                     u8921:
 11392  0032AE  EFCA  F019         	goto	l8564
 11393  0032B2                     u8920:
 11394  0032B2                     
 11395                           ; BSR set to: 0
 11396  0032B2  C077  F06D         	movff	floorf@e,??_floorf
 11397  0032B6  0EFF               	movlw	255
 11398  0032B8  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11399  0032BA  0EFF               	movlw	255
 11400  0032BC  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11401  0032BE  0E7F               	movlw	127
 11402  0032C0  6F70               	movwf	(??_floorf+3)& (0+255),b
 11403  0032C2  0E00               	movlw	0
 11404  0032C4  6F71               	movwf	(??_floorf+4)& (0+255),b
 11405  0032C6                     u8935:
 11406  0032C6  676D               	tstfsz	??_floorf& (0+255),b
 11407  0032C8  EF68  F019         	goto	u8936
 11408  0032CC  EF70  F019         	goto	u8937
 11409  0032D0                     u8936:
 11410  0032D0  3571               	rlcf	(??_floorf+4)& (0+255),w,b
 11411  0032D2  3371               	rrcf	(??_floorf+4)& (0+255),f,b
 11412  0032D4  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11413  0032D6  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11414  0032D8  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 11415  0032DA  2F6D               	decfsz	??_floorf& (0+255),f,b
 11416  0032DC  EF63  F019         	goto	u8935
 11417  0032E0                     u8937:
 11418  0032E0  C06E  F073         	movff	??_floorf+1,floorf@m
 11419  0032E4  C06F  F074         	movff	??_floorf+2,floorf@m+1
 11420  0032E8  C070  F075         	movff	??_floorf+3,floorf@m+2
 11421  0032EC  C071  F076         	movff	??_floorf+4,floorf@m+3
 11422  0032F0  0100               	movlb	0	; () banked
 11423  0032F2  5173               	movf	floorf@m& (0+255),w,b
 11424  0032F4  1579               	andwf	floorf@u& (0+255),w,b
 11425  0032F6  6F6D               	movwf	??_floorf& (0+255),b
 11426  0032F8  5174               	movf	(floorf@m+1)& (0+255),w,b
 11427  0032FA  157A               	andwf	(floorf@u+1)& (0+255),w,b
 11428  0032FC  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11429  0032FE  5175               	movf	(floorf@m+2)& (0+255),w,b
 11430  003300  157B               	andwf	(floorf@u+2)& (0+255),w,b
 11431  003302  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11432  003304  5176               	movf	(floorf@m+3)& (0+255),w,b
 11433  003306  157C               	andwf	(floorf@u+3)& (0+255),w,b
 11434  003308  6F70               	movwf	(??_floorf+3)& (0+255),b
 11435  00330A  516D               	movf	??_floorf& (0+255),w,b
 11436  00330C  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11437  00330E  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11438  003310  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11439  003312  A4D8               	btfss	status,2,c
 11440  003314  EF8E  F019         	goto	u8941
 11441  003318  EF90  F019         	goto	u8940
 11442  00331C                     u8941:
 11443  00331C  EF92  F019         	goto	l8560
 11444  003320                     u8940:
 11445  003320  EF48  F019         	goto	l8552
 11446  003324                     l8560:
 11447                           
 11448                           ; BSR set to: 0
 11449  003324  C079  F06D         	movff	floorf@u,??_floorf
 11450  003328  C07A  F06E         	movff	floorf@u+1,??_floorf+1
 11451  00332C  C07B  F06F         	movff	floorf@u+2,??_floorf+2
 11452  003330  C07C  F070         	movff	floorf@u+3,??_floorf+3
 11453  003334  0E20               	movlw	32
 11454  003336  EFA2  F019         	goto	u8950
 11455  00333A                     u8955:
 11456  00333A  90D8               	bcf	status,0,c
 11457  00333C  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11458  00333E  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11459  003340  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 11460  003342  336D               	rrcf	??_floorf& (0+255),f,b
 11461  003344                     u8950:
 11462  003344  2EE8               	decfsz	wreg,f,c
 11463  003346  EF9D  F019         	goto	u8955
 11464  00334A  516D               	movf	??_floorf& (0+255),w,b
 11465  00334C  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11466  00334E  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11467  003350  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11468  003352  B4D8               	btfsc	status,2,c
 11469  003354  EFAE  F019         	goto	u8961
 11470  003358  EFB0  F019         	goto	u8960
 11471  00335C                     u8961:
 11472  00335C  EFB8  F019         	goto	l1691
 11473  003360                     u8960:
 11474  003360                     
 11475                           ; BSR set to: 0
 11476  003360  5173               	movf	floorf@m& (0+255),w,b
 11477  003362  2779               	addwf	floorf@u& (0+255),f,b
 11478  003364  5174               	movf	(floorf@m+1)& (0+255),w,b
 11479  003366  237A               	addwfc	(floorf@u+1)& (0+255),f,b
 11480  003368  5175               	movf	(floorf@m+2)& (0+255),w,b
 11481  00336A  237B               	addwfc	(floorf@u+2)& (0+255),f,b
 11482  00336C  5176               	movf	(floorf@m+3)& (0+255),w,b
 11483  00336E  237C               	addwfc	(floorf@u+3)& (0+255),f,b
 11484  003370                     l1691:
 11485                           
 11486                           ; BSR set to: 0
 11487  003370  1D73               	comf	floorf@m& (0+255),w,b
 11488  003372  6F6D               	movwf	??_floorf& (0+255),b
 11489  003374  1D74               	comf	(floorf@m+1)& (0+255),w,b
 11490  003376  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11491  003378  1D75               	comf	(floorf@m+2)& (0+255),w,b
 11492  00337A  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11493  00337C  1D76               	comf	(floorf@m+3)& (0+255),w,b
 11494  00337E  6F70               	movwf	(??_floorf+3)& (0+255),b
 11495  003380  516D               	movf	??_floorf& (0+255),w,b
 11496  003382  1779               	andwf	floorf@u& (0+255),f,b
 11497  003384  516E               	movf	(??_floorf+1)& (0+255),w,b
 11498  003386  177A               	andwf	(floorf@u+1)& (0+255),f,b
 11499  003388  516F               	movf	(??_floorf+2)& (0+255),w,b
 11500  00338A  177B               	andwf	(floorf@u+2)& (0+255),f,b
 11501  00338C  5170               	movf	(??_floorf+3)& (0+255),w,b
 11502  00338E  177C               	andwf	(floorf@u+3)& (0+255),f,b
 11503  003390  EF0E  F01A         	goto	l8572
 11504  003394                     l8564:
 11505                           
 11506                           ; BSR set to: 0
 11507  003394  C079  F06D         	movff	floorf@u,??_floorf
 11508  003398  C07A  F06E         	movff	floorf@u+1,??_floorf+1
 11509  00339C  C07B  F06F         	movff	floorf@u+2,??_floorf+2
 11510  0033A0  C07C  F070         	movff	floorf@u+3,??_floorf+3
 11511  0033A4  0E20               	movlw	32
 11512  0033A6  EFDA  F019         	goto	u8970
 11513  0033AA                     u8975:
 11514  0033AA  90D8               	bcf	status,0,c
 11515  0033AC  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11516  0033AE  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11517  0033B0  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 11518  0033B2  336D               	rrcf	??_floorf& (0+255),f,b
 11519  0033B4                     u8970:
 11520  0033B4  2EE8               	decfsz	wreg,f,c
 11521  0033B6  EFD5  F019         	goto	u8975
 11522  0033BA  516D               	movf	??_floorf& (0+255),w,b
 11523  0033BC  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11524  0033BE  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11525  0033C0  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11526  0033C2  A4D8               	btfss	status,2,c
 11527  0033C4  EFE6  F019         	goto	u8981
 11528  0033C8  EFE8  F019         	goto	u8980
 11529  0033CC                     u8981:
 11530  0033CC  EFF2  F019         	goto	l8568
 11531  0033D0                     u8980:
 11532  0033D0                     
 11533                           ; BSR set to: 0
 11534  0033D0  0E00               	movlw	0
 11535  0033D2  6F79               	movwf	floorf@u& (0+255),b
 11536  0033D4  0E00               	movlw	0
 11537  0033D6  6F7A               	movwf	(floorf@u+1)& (0+255),b
 11538  0033D8  0E00               	movlw	0
 11539  0033DA  6F7B               	movwf	(floorf@u+2)& (0+255),b
 11540  0033DC  0E00               	movlw	0
 11541  0033DE  6F7C               	movwf	(floorf@u+3)& (0+255),b
 11542  0033E0  EF0E  F01A         	goto	l8572
 11543  0033E4                     l8568:
 11544                           
 11545                           ; BSR set to: 0
 11546  0033E4  90D8               	bcf	status,0,c
 11547  0033E6  3579               	rlcf	floorf@u& (0+255),w,b
 11548  0033E8  6F6D               	movwf	??_floorf& (0+255),b
 11549  0033EA  357A               	rlcf	(floorf@u+1)& (0+255),w,b
 11550  0033EC  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11551  0033EE  357B               	rlcf	(floorf@u+2)& (0+255),w,b
 11552  0033F0  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11553  0033F2  357C               	rlcf	(floorf@u+3)& (0+255),w,b
 11554  0033F4  6F70               	movwf	(??_floorf+3)& (0+255),b
 11555  0033F6  516D               	movf	??_floorf& (0+255),w,b
 11556  0033F8  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11557  0033FA  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11558  0033FC  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11559  0033FE  B4D8               	btfsc	status,2,c
 11560  003400  EF04  F01A         	goto	u8991
 11561  003404  EF06  F01A         	goto	u8990
 11562  003408                     u8991:
 11563  003408  EF0E  F01A         	goto	l8572
 11564  00340C                     u8990:
 11565  00340C                     
 11566                           ; BSR set to: 0
 11567  00340C  0E00               	movlw	0
 11568  00340E  6F79               	movwf	floorf@u& (0+255),b
 11569  003410  0E00               	movlw	0
 11570  003412  6F7A               	movwf	(floorf@u+1)& (0+255),b
 11571  003414  0E80               	movlw	128
 11572  003416  6F7B               	movwf	(floorf@u+2)& (0+255),b
 11573  003418  0EBF               	movlw	191
 11574  00341A  6F7C               	movwf	(floorf@u+3)& (0+255),b
 11575  00341C                     l8572:
 11576                           
 11577                           ; BSR set to: 0
 11578  00341C  C079  F050         	movff	floorf@u,?_floorf
 11579  003420  C07A  F051         	movff	floorf@u+1,?_floorf+1
 11580  003424  C07B  F052         	movff	floorf@u+2,?_floorf+2
 11581  003428  C07C  F053         	movff	floorf@u+3,?_floorf+3
 11582  00342C                     l1688:
 11583                           
 11584                           ; BSR set to: 0
 11585  00342C  0012               	return		;funcret
 11586  00342E                     __end_of_floorf:
 11587                           	opt callstack 0
 11588                           
 11589 ;; *************** function ___fpclassifyf *****************
 11590 ;; Defined at:
 11591 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;  x               4    5[COMRAM] float 
 11594 ;; Auto vars:     Size  Location     Type
 11595 ;;  u               4   15[COMRAM] struct .
 11596 ;;  e               2   13[COMRAM] int 
 11597 ;; Return value:  Size  Location     Type
 11598 ;;                  2    5[COMRAM] int 
 11599 ;; Registers used:
 11600 ;;		wreg, status,2, status,0
 11601 ;; Tracked objects:
 11602 ;;		On entry : 0/0
 11603 ;;		On exit  : 0/0
 11604 ;;		Unchanged: 0/0
 11605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11606 ;;      Params:         4       0       0       0       0       0       0       0       0
 11607 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11608 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11609 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11610 ;;Total ram usage:       14 bytes
 11611 ;; Hardware stack levels used:    1
 11612 ;; Hardware stack levels required when called:    2
 11613 ;; This function calls:
 11614 ;;		Nothing
 11615 ;; This function is called by:
 11616 ;;		_efgtoa
 11617 ;; This function uses a non-reentrant model
 11618 ;;
 11619                           
 11620                           	psect	text41
 11621  0044AA                     __ptext41:
 11622                           	opt callstack 0
 11623  0044AA                     ___fpclassifyf:
 11624                           	opt callstack 23
 11625  0044AA  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
 11626  0044AE  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 11627  0044B2  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 11628  0044B6  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 11629  0044BA  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11630  0044BE  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11631  0044C2  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11632  0044C6  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11633  0044CA  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11634  0044CE  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11635  0044D2  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11636  0044D6  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11637  0044DA  0E18               	movlw	24
 11638  0044DC  EF75  F022         	goto	u8780
 11639  0044E0                     u8785:
 11640  0044E0  90D8               	bcf	status,0,c
 11641  0044E2  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11642  0044E4  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11643  0044E6  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11644  0044E8  320A               	rrcf	??___fpclassifyf^0,f,c
 11645  0044EA                     u8780:
 11646  0044EA  2EE8               	decfsz	wreg,f,c
 11647  0044EC  EF70  F022         	goto	u8785
 11648  0044F0  500A               	movf	??___fpclassifyf^0,w,c
 11649  0044F2  6E0E               	movwf	___fpclassifyf@e^0,c
 11650  0044F4  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11651  0044F6  500E               	movf	___fpclassifyf@e^0,w,c
 11652  0044F8  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11653  0044FA  A4D8               	btfss	status,2,c
 11654  0044FC  EF82  F022         	goto	u8791
 11655  004500  EF84  F022         	goto	u8790
 11656  004504                     u8791:
 11657  004504  EFA4  F022         	goto	l8524
 11658  004508                     u8790:
 11659  004508  90D8               	bcf	status,0,c
 11660  00450A  3410               	rlcf	___fpclassifyf@u^0,w,c
 11661  00450C  6E0A               	movwf	??___fpclassifyf^0,c
 11662  00450E  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11663  004510  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11664  004512  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11665  004514  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11666  004516  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11667  004518  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11668  00451A  500A               	movf	??___fpclassifyf^0,w,c
 11669  00451C  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11670  00451E  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11671  004520  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11672  004522  A4D8               	btfss	status,2,c
 11673  004524  EF96  F022         	goto	u8801
 11674  004528  EF98  F022         	goto	u8800
 11675  00452C                     u8801:
 11676  00452C  EF9E  F022         	goto	l8520
 11677  004530                     u8800:
 11678  004530  0E00               	movlw	0
 11679  004532  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11680  004534  0E02               	movlw	2
 11681  004536  6E06               	movwf	?___fpclassifyf^0,c
 11682  004538  EFD3  F022         	goto	l1643
 11683  00453C                     l8520:
 11684  00453C  0E00               	movlw	0
 11685  00453E  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11686  004540  0E03               	movlw	3
 11687  004542  6E06               	movwf	?___fpclassifyf^0,c
 11688  004544  EFD3  F022         	goto	l1643
 11689  004548                     l8524:
 11690  004548  280E               	incf	___fpclassifyf@e^0,w,c
 11691  00454A  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11692  00454C  A4D8               	btfss	status,2,c
 11693  00454E  EFAB  F022         	goto	u8811
 11694  004552  EFAD  F022         	goto	u8810
 11695  004556                     u8811:
 11696  004556  EFCF  F022         	goto	l8530
 11697  00455A                     u8810:
 11698  00455A  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11699  00455E  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11700  004562  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11701  004566  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11702  00456A  0E09               	movlw	9
 11703  00456C                     u8825:
 11704  00456C  90D8               	bcf	status,0,c
 11705  00456E  360A               	rlcf	??___fpclassifyf^0,f,c
 11706  004570  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11707  004572  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11708  004574  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11709  004576  2EE8               	decfsz	wreg,f,c
 11710  004578  EFB6  F022         	goto	u8825
 11711  00457C  500A               	movf	??___fpclassifyf^0,w,c
 11712  00457E  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11713  004580  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11714  004582  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11715  004584  B4D8               	btfsc	status,2,c
 11716  004586  EFC7  F022         	goto	u8831
 11717  00458A  EFCA  F022         	goto	u8830
 11718  00458E                     u8831:
 11719  00458E  0E01               	movlw	1
 11720  004590  EFCB  F022         	goto	u8840
 11721  004594                     u8830:
 11722  004594  0E00               	movlw	0
 11723  004596                     u8840:
 11724  004596  6E06               	movwf	?___fpclassifyf^0,c
 11725  004598  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11726  00459A  EFD3  F022         	goto	l1643
 11727  00459E                     l8530:
 11728  00459E  0E00               	movlw	0
 11729  0045A0  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11730  0045A2  0E04               	movlw	4
 11731  0045A4  6E06               	movwf	?___fpclassifyf^0,c
 11732  0045A6                     l1643:
 11733  0045A6  0012               	return		;funcret
 11734  0045A8                     __end_of___fpclassifyf:
 11735                           	opt callstack 0
 11736                           
 11737 ;; *************** function ___fltol *****************
 11738 ;; Defined at:
 11739 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11740 ;; Parameters:    Size  Location     Type
 11741 ;;  f1              4   18[BANK0 ] int 
 11742 ;; Auto vars:     Size  Location     Type
 11743 ;;  exp1            1   27[BANK0 ] unsigned char 
 11744 ;;  sign1           1   26[BANK0 ] unsigned char 
 11745 ;; Return value:  Size  Location     Type
 11746 ;;                  4   18[BANK0 ] long 
 11747 ;; Registers used:
 11748 ;;		wreg, status,2, status,0
 11749 ;; Tracked objects:
 11750 ;;		On entry : 0/0
 11751 ;;		On exit  : 0/0
 11752 ;;		Unchanged: 0/0
 11753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11754 ;;      Params:         0       4       0       0       0       0       0       0       0
 11755 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11756 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11757 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11758 ;;Total ram usage:       10 bytes
 11759 ;; Hardware stack levels used:    1
 11760 ;; Hardware stack levels required when called:    2
 11761 ;; This function calls:
 11762 ;;		Nothing
 11763 ;; This function is called by:
 11764 ;;		_pwmDuty
 11765 ;;		_PID
 11766 ;;		_efgtoa
 11767 ;; This function uses a non-reentrant model
 11768 ;;
 11769                           
 11770                           	psect	text42
 11771  00429E                     __ptext42:
 11772                           	opt callstack 0
 11773  00429E                     ___fltol:
 11774                           	opt callstack 23
 11775  00429E  0100               	movlb	0	; () banked
 11776  0042A0  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11777  0042A2  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11778  0042A4  6F7B               	movwf	___fltol@exp1& (0+255),b
 11779  0042A6  517B               	movf	___fltol@exp1& (0+255),w,b
 11780  0042A8  A4D8               	btfss	status,2,c
 11781  0042AA  EF59  F021         	goto	u9781
 11782  0042AE  EF5B  F021         	goto	u9780
 11783  0042B2                     u9781:
 11784  0042B2  EF65  F021         	goto	l9072
 11785  0042B6                     u9780:
 11786  0042B6                     l9068:
 11787                           
 11788                           ; BSR set to: 0
 11789  0042B6  0E00               	movlw	0
 11790  0042B8  6F72               	movwf	?___fltol& (0+255),b
 11791  0042BA  0E00               	movlw	0
 11792  0042BC  6F73               	movwf	(?___fltol+1)& (0+255),b
 11793  0042BE  0E00               	movlw	0
 11794  0042C0  6F74               	movwf	(?___fltol+2)& (0+255),b
 11795  0042C2  0E00               	movlw	0
 11796  0042C4  6F75               	movwf	(?___fltol+3)& (0+255),b
 11797  0042C6  EFD2  F021         	goto	l1259
 11798  0042CA                     l9072:
 11799                           
 11800                           ; BSR set to: 0
 11801  0042CA  C072  F076         	movff	___fltol@f1,??___fltol
 11802  0042CE  C073  F077         	movff	___fltol@f1+1,??___fltol+1
 11803  0042D2  C074  F078         	movff	___fltol@f1+2,??___fltol+2
 11804  0042D6  C075  F079         	movff	___fltol@f1+3,??___fltol+3
 11805  0042DA  0E20               	movlw	32
 11806  0042DC  EF75  F021         	goto	u9790
 11807  0042E0                     u9795:
 11808  0042E0  90D8               	bcf	status,0,c
 11809  0042E2  3379               	rrcf	(??___fltol+3)& (0+255),f,b
 11810  0042E4  3378               	rrcf	(??___fltol+2)& (0+255),f,b
 11811  0042E6  3377               	rrcf	(??___fltol+1)& (0+255),f,b
 11812  0042E8  3376               	rrcf	??___fltol& (0+255),f,b
 11813  0042EA                     u9790:
 11814  0042EA  2EE8               	decfsz	wreg,f,c
 11815  0042EC  EF70  F021         	goto	u9795
 11816  0042F0  5176               	movf	??___fltol& (0+255),w,b
 11817  0042F2  6F7A               	movwf	___fltol@sign1& (0+255),b
 11818  0042F4                     
 11819                           ; BSR set to: 0
 11820  0042F4  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
 11821  0042F6                     
 11822                           ; BSR set to: 0
 11823  0042F6  0EFF               	movlw	255
 11824  0042F8  1772               	andwf	___fltol@f1& (0+255),f,b
 11825  0042FA  0EFF               	movlw	255
 11826  0042FC  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
 11827  0042FE  0EFF               	movlw	255
 11828  004300  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
 11829  004302  0E00               	movlw	0
 11830  004304  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
 11831  004306                     
 11832                           ; BSR set to: 0
 11833  004306  0E96               	movlw	150
 11834  004308  5F7B               	subwf	___fltol@exp1& (0+255),f,b
 11835  00430A                     
 11836                           ; BSR set to: 0
 11837  00430A  BF7B               	btfsc	___fltol@exp1& (0+255),7,b
 11838  00430C  EF8C  F021         	goto	u9800
 11839  004310  EF8A  F021         	goto	u9801
 11840  004314                     u9801:
 11841  004314  EFA2  F021         	goto	l9092
 11842  004318                     u9800:
 11843  004318                     
 11844                           ; BSR set to: 0
 11845  004318  517B               	movf	___fltol@exp1& (0+255),w,b
 11846  00431A  0A80               	xorlw	128
 11847  00431C  0F97               	addlw	151
 11848  00431E  B0D8               	btfsc	status,0,c
 11849  004320  EF94  F021         	goto	u9811
 11850  004324  EF96  F021         	goto	u9810
 11851  004328                     u9811:
 11852  004328  EF98  F021         	goto	l9088
 11853  00432C                     u9810:
 11854  00432C  EF5B  F021         	goto	l9068
 11855  004330                     l9088:
 11856                           
 11857                           ; BSR set to: 0
 11858  004330  90D8               	bcf	status,0,c
 11859  004332  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11860  004334  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11861  004336  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11862  004338  3372               	rrcf	___fltol@f1& (0+255),f,b
 11863  00433A                     
 11864                           ; BSR set to: 0
 11865  00433A  3F7B               	incfsz	___fltol@exp1& (0+255),f,b
 11866  00433C  EF98  F021         	goto	l9088
 11867  004340  EFBA  F021         	goto	l9102
 11868  004344                     l9092:
 11869                           
 11870                           ; BSR set to: 0
 11871  004344  0E1F               	movlw	31
 11872  004346  657B               	cpfsgt	___fltol@exp1& (0+255),b
 11873  004348  EFA8  F021         	goto	u9821
 11874  00434C  EFAA  F021         	goto	u9820
 11875  004350                     u9821:
 11876  004350  EFB2  F021         	goto	l9100
 11877  004354                     u9820:
 11878  004354  EF5B  F021         	goto	l9068
 11879  004358                     l9098:
 11880                           
 11881                           ; BSR set to: 0
 11882  004358  90D8               	bcf	status,0,c
 11883  00435A  3772               	rlcf	___fltol@f1& (0+255),f,b
 11884  00435C  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11885  00435E  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11886  004360  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11887  004362  077B               	decf	___fltol@exp1& (0+255),f,b
 11888  004364                     l9100:
 11889                           
 11890                           ; BSR set to: 0
 11891  004364  517B               	movf	___fltol@exp1& (0+255),w,b
 11892  004366  A4D8               	btfss	status,2,c
 11893  004368  EFB8  F021         	goto	u9831
 11894  00436C  EFBA  F021         	goto	u9830
 11895  004370                     u9831:
 11896  004370  EFAC  F021         	goto	l9098
 11897  004374                     u9830:
 11898  004374                     l9102:
 11899                           
 11900                           ; BSR set to: 0
 11901  004374  517A               	movf	___fltol@sign1& (0+255),w,b
 11902  004376  B4D8               	btfsc	status,2,c
 11903  004378  EFC0  F021         	goto	u9841
 11904  00437C  EFC2  F021         	goto	u9840
 11905  004380                     u9841:
 11906  004380  EFCA  F021         	goto	l9106
 11907  004384                     u9840:
 11908  004384                     
 11909                           ; BSR set to: 0
 11910  004384  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
 11911  004386  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
 11912  004388  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
 11913  00438A  6D72               	negf	___fltol@f1& (0+255),b
 11914  00438C  0E00               	movlw	0
 11915  00438E  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11916  004390  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11917  004392  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11918  004394                     l9106:
 11919                           
 11920                           ; BSR set to: 0
 11921  004394  C072  F072         	movff	___fltol@f1,?___fltol
 11922  004398  C073  F073         	movff	___fltol@f1+1,?___fltol+1
 11923  00439C  C074  F074         	movff	___fltol@f1+2,?___fltol+2
 11924  0043A0  C075  F075         	movff	___fltol@f1+3,?___fltol+3
 11925  0043A4                     l1259:
 11926                           
 11927                           ; BSR set to: 0
 11928  0043A4  0012               	return		;funcret
 11929  0043A6                     __end_of___fltol:
 11930                           	opt callstack 0
 11931                           
 11932 ;; *************** function ___flsub *****************
 11933 ;; Defined at:
 11934 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11935 ;; Parameters:    Size  Location     Type
 11936 ;;  b               4   67[COMRAM] long 
 11937 ;;  a               4   71[COMRAM] long 
 11938 ;; Auto vars:     Size  Location     Type
 11939 ;;		None
 11940 ;; Return value:  Size  Location     Type
 11941 ;;                  4   67[COMRAM] long 
 11942 ;; Registers used:
 11943 ;;		wreg, status,2, status,0, cstack
 11944 ;; Tracked objects:
 11945 ;;		On entry : 0/0
 11946 ;;		On exit  : 0/0
 11947 ;;		Unchanged: 0/0
 11948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11949 ;;      Params:         8       0       0       0       0       0       0       0       0
 11950 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11951 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11952 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11953 ;;Total ram usage:        8 bytes
 11954 ;; Hardware stack levels used:    1
 11955 ;; Hardware stack levels required when called:    3
 11956 ;; This function calls:
 11957 ;;		___fladd
 11958 ;; This function is called by:
 11959 ;;		_PID
 11960 ;;		_efgtoa
 11961 ;;		_roundf
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           	psect	text43
 11966  0055EA                     __ptext43:
 11967                           	opt callstack 0
 11968  0055EA                     ___flsub:
 11969                           	opt callstack 22
 11970  0055EA  0E00               	movlw	0
 11971  0055EC  1A48               	xorwf	___flsub@a^0,f,c
 11972  0055EE  0E00               	movlw	0
 11973  0055F0  1A49               	xorwf	(___flsub@a+1)^0,f,c
 11974  0055F2  0E00               	movlw	0
 11975  0055F4  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 11976  0055F6  0E80               	movlw	128
 11977  0055F8  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 11978  0055FA  C044  F034         	movff	___flsub@b,___fladd@b
 11979  0055FE  C045  F035         	movff	___flsub@b+1,___fladd@b+1
 11980  005602  C046  F036         	movff	___flsub@b+2,___fladd@b+2
 11981  005606  C047  F037         	movff	___flsub@b+3,___fladd@b+3
 11982  00560A  C048  F038         	movff	___flsub@a,___fladd@a
 11983  00560E  C049  F039         	movff	___flsub@a+1,___fladd@a+1
 11984  005612  C04A  F03A         	movff	___flsub@a+2,___fladd@a+2
 11985  005616  C04B  F03B         	movff	___flsub@a+3,___fladd@a+3
 11986  00561A  EC62  F00C         	call	___fladd	;wreg free
 11987  00561E  C034  F044         	movff	?___fladd,?___flsub
 11988  005622  C035  F045         	movff	?___fladd+1,?___flsub+1
 11989  005626  C036  F046         	movff	?___fladd+2,?___flsub+2
 11990  00562A  C037  F047         	movff	?___fladd+3,?___flsub+3
 11991  00562E  0012               	return		;funcret
 11992  005630                     __end_of___flsub:
 11993                           	opt callstack 0
 11994                           
 11995 ;; *************** function ___fladd *****************
 11996 ;; Defined at:
 11997 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11998 ;; Parameters:    Size  Location     Type
 11999 ;;  b               4   51[COMRAM] long 
 12000 ;;  a               4   55[COMRAM] long 
 12001 ;; Auto vars:     Size  Location     Type
 12002 ;;  grs             1   66[COMRAM] unsigned char 
 12003 ;;  bexp            1   65[COMRAM] unsigned char 
 12004 ;;  aexp            1   64[COMRAM] unsigned char 
 12005 ;;  signs           1   63[COMRAM] unsigned char 
 12006 ;; Return value:  Size  Location     Type
 12007 ;;                  4   51[COMRAM] unsigned char 
 12008 ;; Registers used:
 12009 ;;		wreg, status,2, status,0
 12010 ;; Tracked objects:
 12011 ;;		On entry : 0/0
 12012 ;;		On exit  : 0/0
 12013 ;;		Unchanged: 0/0
 12014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12015 ;;      Params:         8       0       0       0       0       0       0       0       0
 12016 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12017 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12018 ;;      Totals:        16       0       0       0       0       0       0       0       0
 12019 ;;Total ram usage:       16 bytes
 12020 ;; Hardware stack levels used:    1
 12021 ;; Hardware stack levels required when called:    2
 12022 ;; This function calls:
 12023 ;;		Nothing
 12024 ;; This function is called by:
 12025 ;;		_leerSensores
 12026 ;;		_PID
 12027 ;;		_efgtoa
 12028 ;;		___flsub
 12029 ;;		_roundf
 12030 ;; This function uses a non-reentrant model
 12031 ;;
 12032                           
 12033                           	psect	text44
 12034  0018C4                     __ptext44:
 12035                           	opt callstack 0
 12036  0018C4                     ___fladd:
 12037                           	opt callstack 22
 12038  0018C4  5037               	movf	(___fladd@b+3)^0,w,c
 12039  0018C6  0B80               	andlw	128
 12040  0018C8  6E40               	movwf	___fladd@signs^0,c
 12041  0018CA  5037               	movf	(___fladd@b+3)^0,w,c
 12042  0018CC  2437               	addwf	(___fladd@b+3)^0,w,c
 12043  0018CE  6E42               	movwf	___fladd@bexp^0,c
 12044  0018D0  AE36               	btfss	(___fladd@b+2)^0,7,c
 12045  0018D2  EF6D  F00C         	goto	u8341
 12046  0018D6  EF6F  F00C         	goto	u8340
 12047  0018DA                     u8341:
 12048  0018DA  EF70  F00C         	goto	l8286
 12049  0018DE                     u8340:
 12050  0018DE  8042               	bsf	___fladd@bexp^0,0,c
 12051  0018E0                     l8286:
 12052  0018E0  5042               	movf	___fladd@bexp^0,w,c
 12053  0018E2  B4D8               	btfsc	status,2,c
 12054  0018E4  EF76  F00C         	goto	u8351
 12055  0018E8  EF78  F00C         	goto	u8350
 12056  0018EC                     u8351:
 12057  0018EC  EF8D  F00C         	goto	l8296
 12058  0018F0                     u8350:
 12059  0018F0  2842               	incf	___fladd@bexp^0,w,c
 12060  0018F2  A4D8               	btfss	status,2,c
 12061  0018F4  EF7E  F00C         	goto	u8361
 12062  0018F8  EF80  F00C         	goto	u8360
 12063  0018FC                     u8361:
 12064  0018FC  EF88  F00C         	goto	l8292
 12065  001900                     u8360:
 12066  001900  0E00               	movlw	0
 12067  001902  6E34               	movwf	___fladd@b^0,c
 12068  001904  0E00               	movlw	0
 12069  001906  6E35               	movwf	(___fladd@b+1)^0,c
 12070  001908  0E00               	movlw	0
 12071  00190A  6E36               	movwf	(___fladd@b+2)^0,c
 12072  00190C  0E00               	movlw	0
 12073  00190E  6E37               	movwf	(___fladd@b+3)^0,c
 12074  001910                     l8292:
 12075  001910  8E36               	bsf	(___fladd@b+2)^0,7,c
 12076  001912  0E00               	movlw	0
 12077  001914  6E37               	movwf	(___fladd@b+3)^0,c
 12078  001916  EF95  F00C         	goto	l8298
 12079  00191A                     l8296:
 12080  00191A  0E00               	movlw	0
 12081  00191C  6E34               	movwf	___fladd@b^0,c
 12082  00191E  0E00               	movlw	0
 12083  001920  6E35               	movwf	(___fladd@b+1)^0,c
 12084  001922  0E00               	movlw	0
 12085  001924  6E36               	movwf	(___fladd@b+2)^0,c
 12086  001926  0E00               	movlw	0
 12087  001928  6E37               	movwf	(___fladd@b+3)^0,c
 12088  00192A                     l8298:
 12089  00192A  503B               	movf	(___fladd@a+3)^0,w,c
 12090  00192C  0B80               	andlw	128
 12091  00192E  6E41               	movwf	___fladd@aexp^0,c
 12092  001930  5040               	movf	___fladd@signs^0,w,c
 12093  001932  1841               	xorwf	___fladd@aexp^0,w,c
 12094  001934  B4D8               	btfsc	status,2,c
 12095  001936  EF9F  F00C         	goto	u8371
 12096  00193A  EFA1  F00C         	goto	u8370
 12097  00193E                     u8371:
 12098  00193E  EFA2  F00C         	goto	l8304
 12099  001942                     u8370:
 12100  001942  8C40               	bsf	___fladd@signs^0,6,c
 12101  001944                     l8304:
 12102  001944  503B               	movf	(___fladd@a+3)^0,w,c
 12103  001946  243B               	addwf	(___fladd@a+3)^0,w,c
 12104  001948  6E41               	movwf	___fladd@aexp^0,c
 12105  00194A  AE3A               	btfss	(___fladd@a+2)^0,7,c
 12106  00194C  EFAA  F00C         	goto	u8381
 12107  001950  EFAC  F00C         	goto	u8380
 12108  001954                     u8381:
 12109  001954  EFAD  F00C         	goto	l8310
 12110  001958                     u8380:
 12111  001958  8041               	bsf	___fladd@aexp^0,0,c
 12112  00195A                     l8310:
 12113  00195A  5041               	movf	___fladd@aexp^0,w,c
 12114  00195C  B4D8               	btfsc	status,2,c
 12115  00195E  EFB3  F00C         	goto	u8391
 12116  001962  EFB5  F00C         	goto	u8390
 12117  001966                     u8391:
 12118  001966  EFCA  F00C         	goto	l8320
 12119  00196A                     u8390:
 12120  00196A  2841               	incf	___fladd@aexp^0,w,c
 12121  00196C  A4D8               	btfss	status,2,c
 12122  00196E  EFBB  F00C         	goto	u8401
 12123  001972  EFBD  F00C         	goto	u8400
 12124  001976                     u8401:
 12125  001976  EFC5  F00C         	goto	l8316
 12126  00197A                     u8400:
 12127  00197A  0E00               	movlw	0
 12128  00197C  6E38               	movwf	___fladd@a^0,c
 12129  00197E  0E00               	movlw	0
 12130  001980  6E39               	movwf	(___fladd@a+1)^0,c
 12131  001982  0E00               	movlw	0
 12132  001984  6E3A               	movwf	(___fladd@a+2)^0,c
 12133  001986  0E00               	movlw	0
 12134  001988  6E3B               	movwf	(___fladd@a+3)^0,c
 12135  00198A                     l8316:
 12136  00198A  8E3A               	bsf	(___fladd@a+2)^0,7,c
 12137  00198C  0E00               	movlw	0
 12138  00198E  6E3B               	movwf	(___fladd@a+3)^0,c
 12139  001990  EFD2  F00C         	goto	l8322
 12140  001994                     l8320:
 12141  001994  0E00               	movlw	0
 12142  001996  6E38               	movwf	___fladd@a^0,c
 12143  001998  0E00               	movlw	0
 12144  00199A  6E39               	movwf	(___fladd@a+1)^0,c
 12145  00199C  0E00               	movlw	0
 12146  00199E  6E3A               	movwf	(___fladd@a+2)^0,c
 12147  0019A0  0E00               	movlw	0
 12148  0019A2  6E3B               	movwf	(___fladd@a+3)^0,c
 12149  0019A4                     l8322:
 12150  0019A4  5042               	movf	___fladd@bexp^0,w,c
 12151  0019A6  5C41               	subwf	___fladd@aexp^0,w,c
 12152  0019A8  B0D8               	btfsc	status,0,c
 12153  0019AA  EFD9  F00C         	goto	u8411
 12154  0019AE  EFDB  F00C         	goto	u8410
 12155  0019B2                     u8411:
 12156  0019B2  EF02  F00D         	goto	l8358
 12157  0019B6                     u8410:
 12158  0019B6  AC40               	btfss	___fladd@signs^0,6,c
 12159  0019B8  EFE0  F00C         	goto	u8421
 12160  0019BC  EFE2  F00C         	goto	u8420
 12161  0019C0                     u8421:
 12162  0019C0  EFE4  F00C         	goto	l8328
 12163  0019C4                     u8420:
 12164  0019C4  0E80               	movlw	128
 12165  0019C6  1A40               	xorwf	___fladd@signs^0,f,c
 12166  0019C8                     l8328:
 12167  0019C8  C042  F043         	movff	___fladd@bexp,___fladd@grs
 12168  0019CC  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 12169  0019D0  C043  F041         	movff	___fladd@grs,___fladd@aexp
 12170  0019D4  C034  F043         	movff	___fladd@b,___fladd@grs
 12171  0019D8  C038  F034         	movff	___fladd@a,___fladd@b
 12172  0019DC  C043  F038         	movff	___fladd@grs,___fladd@a
 12173  0019E0  C035  F043         	movff	___fladd@b+1,___fladd@grs
 12174  0019E4  C039  F035         	movff	___fladd@a+1,___fladd@b+1
 12175  0019E8  C043  F039         	movff	___fladd@grs,___fladd@a+1
 12176  0019EC  C036  F043         	movff	___fladd@b+2,___fladd@grs
 12177  0019F0  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
 12178  0019F4  C043  F03A         	movff	___fladd@grs,___fladd@a+2
 12179  0019F8  C037  F043         	movff	___fladd@b+3,___fladd@grs
 12180  0019FC  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
 12181  001A00  C043  F03B         	movff	___fladd@grs,___fladd@a+3
 12182  001A04                     l8358:
 12183  001A04  0E00               	movlw	0
 12184  001A06  6E43               	movwf	___fladd@grs^0,c
 12185  001A08  5042               	movf	___fladd@bexp^0,w,c
 12186  001A0A  C041  F03C         	movff	___fladd@aexp,??___fladd
 12187  001A0E  6A3D               	clrf	(??___fladd+1)^0,c
 12188  001A10  5E3C               	subwf	??___fladd^0,f,c
 12189  001A12  0E00               	movlw	0
 12190  001A14  5A3D               	subwfb	(??___fladd+1)^0,f,c
 12191  001A16  BE3D               	btfsc	(??___fladd+1)^0,7,c
 12192  001A18  EF17  F00D         	goto	u8431
 12193  001A1C  503D               	movf	(??___fladd+1)^0,w,c
 12194  001A1E  E109               	bnz	u8430
 12195  001A20  0E1A               	movlw	26
 12196  001A22  5C3C               	subwf	??___fladd^0,w,c
 12197  001A24  A0D8               	btfss	status,0,c
 12198  001A26  EF17  F00D         	goto	u8431
 12199  001A2A  EF19  F00D         	goto	u8430
 12200  001A2E                     u8431:
 12201  001A2E  EF50  F00D         	goto	l1491
 12202  001A32                     u8430:
 12203  001A32  5034               	movf	___fladd@b^0,w,c
 12204  001A34  1035               	iorwf	(___fladd@b+1)^0,w,c
 12205  001A36  1036               	iorwf	(___fladd@b+2)^0,w,c
 12206  001A38  1037               	iorwf	(___fladd@b+3)^0,w,c
 12207  001A3A  A4D8               	btfss	status,2,c
 12208  001A3C  EF22  F00D         	goto	u8441
 12209  001A40  EF25  F00D         	goto	u8440
 12210  001A44                     u8441:
 12211  001A44  0E01               	movlw	1
 12212  001A46  EF26  F00D         	goto	u8450
 12213  001A4A                     u8440:
 12214  001A4A  0E00               	movlw	0
 12215  001A4C                     u8450:
 12216  001A4C  6E43               	movwf	___fladd@grs^0,c
 12217  001A4E  0E00               	movlw	0
 12218  001A50  6E34               	movwf	___fladd@b^0,c
 12219  001A52  0E00               	movlw	0
 12220  001A54  6E35               	movwf	(___fladd@b+1)^0,c
 12221  001A56  0E00               	movlw	0
 12222  001A58  6E36               	movwf	(___fladd@b+2)^0,c
 12223  001A5A  0E00               	movlw	0
 12224  001A5C  6E37               	movwf	(___fladd@b+3)^0,c
 12225  001A5E  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 12226  001A62  EF59  F00D         	goto	l1490
 12227  001A66                     l1492:
 12228  001A66  A043               	btfss	___fladd@grs^0,0,c
 12229  001A68  EF38  F00D         	goto	u8461
 12230  001A6C  EF3A  F00D         	goto	u8460
 12231  001A70                     u8461:
 12232  001A70  EF40  F00D         	goto	l8370
 12233  001A74                     u8460:
 12234  001A74  90D8               	bcf	status,0,c
 12235  001A76  3043               	rrcf	___fladd@grs^0,w,c
 12236  001A78  0901               	iorlw	1
 12237  001A7A  6E43               	movwf	___fladd@grs^0,c
 12238  001A7C  EF42  F00D         	goto	l8372
 12239  001A80                     l8370:
 12240  001A80  90D8               	bcf	status,0,c
 12241  001A82  3243               	rrcf	___fladd@grs^0,f,c
 12242  001A84                     l8372:
 12243  001A84  A034               	btfss	___fladd@b^0,0,c
 12244  001A86  EF47  F00D         	goto	u8471
 12245  001A8A  EF49  F00D         	goto	u8470
 12246  001A8E                     u8471:
 12247  001A8E  EF4A  F00D         	goto	l8376
 12248  001A92                     u8470:
 12249  001A92  8E43               	bsf	___fladd@grs^0,7,c
 12250  001A94                     l8376:
 12251  001A94  3437               	rlcf	(___fladd@b+3)^0,w,c
 12252  001A96  3237               	rrcf	(___fladd@b+3)^0,f,c
 12253  001A98  3236               	rrcf	(___fladd@b+2)^0,f,c
 12254  001A9A  3235               	rrcf	(___fladd@b+1)^0,f,c
 12255  001A9C  3234               	rrcf	___fladd@b^0,f,c
 12256  001A9E  2A42               	incf	___fladd@bexp^0,f,c
 12257  001AA0                     l1491:
 12258  001AA0  5041               	movf	___fladd@aexp^0,w,c
 12259  001AA2  5C42               	subwf	___fladd@bexp^0,w,c
 12260  001AA4  A0D8               	btfss	status,0,c
 12261  001AA6  EF57  F00D         	goto	u8481
 12262  001AAA  EF59  F00D         	goto	u8480
 12263  001AAE                     u8481:
 12264  001AAE  EF33  F00D         	goto	l1492
 12265  001AB2                     u8480:
 12266  001AB2                     l1490:
 12267  001AB2  BC40               	btfsc	___fladd@signs^0,6,c
 12268  001AB4  EF5E  F00D         	goto	u8491
 12269  001AB8  EF60  F00D         	goto	u8490
 12270  001ABC                     u8491:
 12271  001ABC  EFA0  F00D         	goto	l8404
 12272  001AC0                     u8490:
 12273  001AC0  5042               	movf	___fladd@bexp^0,w,c
 12274  001AC2  A4D8               	btfss	status,2,c
 12275  001AC4  EF66  F00D         	goto	u8501
 12276  001AC8  EF68  F00D         	goto	u8500
 12277  001ACC                     u8501:
 12278  001ACC  EF72  F00D         	goto	l8386
 12279  001AD0                     u8500:
 12280  001AD0  0E00               	movlw	0
 12281  001AD2  6E34               	movwf	?___fladd^0,c
 12282  001AD4  0E00               	movlw	0
 12283  001AD6  6E35               	movwf	(?___fladd+1)^0,c
 12284  001AD8  0E00               	movlw	0
 12285  001ADA  6E36               	movwf	(?___fladd+2)^0,c
 12286  001ADC  0E00               	movlw	0
 12287  001ADE  6E37               	movwf	(?___fladd+3)^0,c
 12288  001AE0  EFC1  F00E         	goto	l1499
 12289  001AE4                     l8386:
 12290  001AE4  5038               	movf	___fladd@a^0,w,c
 12291  001AE6  2634               	addwf	___fladd@b^0,f,c
 12292  001AE8  5039               	movf	(___fladd@a+1)^0,w,c
 12293  001AEA  2235               	addwfc	(___fladd@b+1)^0,f,c
 12294  001AEC  503A               	movf	(___fladd@a+2)^0,w,c
 12295  001AEE  2236               	addwfc	(___fladd@b+2)^0,f,c
 12296  001AF0  503B               	movf	(___fladd@a+3)^0,w,c
 12297  001AF2  2237               	addwfc	(___fladd@b+3)^0,f,c
 12298  001AF4  A037               	btfss	(___fladd@b+3)^0,0,c
 12299  001AF6  EF7F  F00D         	goto	u8511
 12300  001AFA  EF81  F00D         	goto	u8510
 12301  001AFE                     u8511:
 12302  001AFE  EF2D  F00E         	goto	l8440
 12303  001B02                     u8510:
 12304  001B02  A043               	btfss	___fladd@grs^0,0,c
 12305  001B04  EF86  F00D         	goto	u8521
 12306  001B08  EF88  F00D         	goto	u8520
 12307  001B0C                     u8521:
 12308  001B0C  EF8E  F00D         	goto	l8394
 12309  001B10                     u8520:
 12310  001B10  90D8               	bcf	status,0,c
 12311  001B12  3043               	rrcf	___fladd@grs^0,w,c
 12312  001B14  0901               	iorlw	1
 12313  001B16  6E43               	movwf	___fladd@grs^0,c
 12314  001B18  EF90  F00D         	goto	l8396
 12315  001B1C                     l8394:
 12316  001B1C  90D8               	bcf	status,0,c
 12317  001B1E  3243               	rrcf	___fladd@grs^0,f,c
 12318  001B20                     l8396:
 12319  001B20  A034               	btfss	___fladd@b^0,0,c
 12320  001B22  EF95  F00D         	goto	u8531
 12321  001B26  EF97  F00D         	goto	u8530
 12322  001B2A                     u8531:
 12323  001B2A  EF98  F00D         	goto	l8400
 12324  001B2E                     u8530:
 12325  001B2E  8E43               	bsf	___fladd@grs^0,7,c
 12326  001B30                     l8400:
 12327  001B30  3437               	rlcf	(___fladd@b+3)^0,w,c
 12328  001B32  3237               	rrcf	(___fladd@b+3)^0,f,c
 12329  001B34  3236               	rrcf	(___fladd@b+2)^0,f,c
 12330  001B36  3235               	rrcf	(___fladd@b+1)^0,f,c
 12331  001B38  3234               	rrcf	___fladd@b^0,f,c
 12332  001B3A  2A42               	incf	___fladd@bexp^0,f,c
 12333  001B3C  EF2D  F00E         	goto	l8440
 12334  001B40                     l8404:
 12335  001B40  5038               	movf	___fladd@a^0,w,c
 12336  001B42  5C34               	subwf	___fladd@b^0,w,c
 12337  001B44  5039               	movf	(___fladd@a+1)^0,w,c
 12338  001B46  5835               	subwfb	(___fladd@b+1)^0,w,c
 12339  001B48  503A               	movf	(___fladd@a+2)^0,w,c
 12340  001B4A  5836               	subwfb	(___fladd@b+2)^0,w,c
 12341  001B4C  5037               	movf	(___fladd@b+3)^0,w,c
 12342  001B4E  0A80               	xorlw	128
 12343  001B50  6E3C               	movwf	??___fladd^0,c
 12344  001B52  503B               	movf	(___fladd@a+3)^0,w,c
 12345  001B54  0A80               	xorlw	128
 12346  001B56  583C               	subwfb	??___fladd^0,w,c
 12347  001B58  B0D8               	btfsc	status,0,c
 12348  001B5A  EFB1  F00D         	goto	u8541
 12349  001B5E  EFB3  F00D         	goto	u8540
 12350  001B62                     u8541:
 12351  001B62  EFDE  F00D         	goto	l8414
 12352  001B66                     u8540:
 12353  001B66  5034               	movf	___fladd@b^0,w,c
 12354  001B68  5C38               	subwf	___fladd@a^0,w,c
 12355  001B6A  6E3C               	movwf	??___fladd^0,c
 12356  001B6C  5035               	movf	(___fladd@b+1)^0,w,c
 12357  001B6E  5839               	subwfb	(___fladd@a+1)^0,w,c
 12358  001B70  6E3D               	movwf	(??___fladd+1)^0,c
 12359  001B72  5036               	movf	(___fladd@b+2)^0,w,c
 12360  001B74  583A               	subwfb	(___fladd@a+2)^0,w,c
 12361  001B76  6E3E               	movwf	(??___fladd+2)^0,c
 12362  001B78  5037               	movf	(___fladd@b+3)^0,w,c
 12363  001B7A  583B               	subwfb	(___fladd@a+3)^0,w,c
 12364  001B7C  6E3F               	movwf	(??___fladd+3)^0,c
 12365  001B7E  0EFF               	movlw	255
 12366  001B80  243C               	addwf	??___fladd^0,w,c
 12367  001B82  6E34               	movwf	___fladd@b^0,c
 12368  001B84  0EFF               	movlw	255
 12369  001B86  203D               	addwfc	(??___fladd+1)^0,w,c
 12370  001B88  6E35               	movwf	(___fladd@b+1)^0,c
 12371  001B8A  0EFF               	movlw	255
 12372  001B8C  203E               	addwfc	(??___fladd+2)^0,w,c
 12373  001B8E  6E36               	movwf	(___fladd@b+2)^0,c
 12374  001B90  0EFF               	movlw	255
 12375  001B92  203F               	addwfc	(??___fladd+3)^0,w,c
 12376  001B94  6E37               	movwf	(___fladd@b+3)^0,c
 12377  001B96  0E80               	movlw	128
 12378  001B98  1A40               	xorwf	___fladd@signs^0,f,c
 12379  001B9A  6C43               	negf	___fladd@grs^0,c
 12380  001B9C  5043               	movf	___fladd@grs^0,w,c
 12381  001B9E  A4D8               	btfss	status,2,c
 12382  001BA0  EFD4  F00D         	goto	u8551
 12383  001BA4  EFD6  F00D         	goto	u8550
 12384  001BA8                     u8551:
 12385  001BA8  EFE6  F00D         	goto	l1507
 12386  001BAC                     u8550:
 12387  001BAC  0E01               	movlw	1
 12388  001BAE  2634               	addwf	___fladd@b^0,f,c
 12389  001BB0  0E00               	movlw	0
 12390  001BB2  2235               	addwfc	(___fladd@b+1)^0,f,c
 12391  001BB4  2236               	addwfc	(___fladd@b+2)^0,f,c
 12392  001BB6  2237               	addwfc	(___fladd@b+3)^0,f,c
 12393  001BB8  EFE6  F00D         	goto	l1507
 12394  001BBC                     l8414:
 12395  001BBC  5038               	movf	___fladd@a^0,w,c
 12396  001BBE  5E34               	subwf	___fladd@b^0,f,c
 12397  001BC0  5039               	movf	(___fladd@a+1)^0,w,c
 12398  001BC2  5A35               	subwfb	(___fladd@b+1)^0,f,c
 12399  001BC4  503A               	movf	(___fladd@a+2)^0,w,c
 12400  001BC6  5A36               	subwfb	(___fladd@b+2)^0,f,c
 12401  001BC8  503B               	movf	(___fladd@a+3)^0,w,c
 12402  001BCA  5A37               	subwfb	(___fladd@b+3)^0,f,c
 12403  001BCC                     l1507:
 12404  001BCC  5034               	movf	___fladd@b^0,w,c
 12405  001BCE  1035               	iorwf	(___fladd@b+1)^0,w,c
 12406  001BD0  1036               	iorwf	(___fladd@b+2)^0,w,c
 12407  001BD2  1037               	iorwf	(___fladd@b+3)^0,w,c
 12408  001BD4  A4D8               	btfss	status,2,c
 12409  001BD6  EFEF  F00D         	goto	u8561
 12410  001BDA  EFF1  F00D         	goto	u8560
 12411  001BDE                     u8561:
 12412  001BDE  EF26  F00E         	goto	l8438
 12413  001BE2                     u8560:
 12414  001BE2  5043               	movf	___fladd@grs^0,w,c
 12415  001BE4  A4D8               	btfss	status,2,c
 12416  001BE6  EFF7  F00D         	goto	u8571
 12417  001BEA  EFF9  F00D         	goto	u8570
 12418  001BEE                     u8571:
 12419  001BEE  EF26  F00E         	goto	l8438
 12420  001BF2                     u8570:
 12421  001BF2  0E00               	movlw	0
 12422  001BF4  6E34               	movwf	?___fladd^0,c
 12423  001BF6  0E00               	movlw	0
 12424  001BF8  6E35               	movwf	(?___fladd+1)^0,c
 12425  001BFA  0E00               	movlw	0
 12426  001BFC  6E36               	movwf	(?___fladd+2)^0,c
 12427  001BFE  0E00               	movlw	0
 12428  001C00  6E37               	movwf	(?___fladd+3)^0,c
 12429  001C02  EFC1  F00E         	goto	l1499
 12430  001C06                     l8422:
 12431  001C06  90D8               	bcf	status,0,c
 12432  001C08  3634               	rlcf	___fladd@b^0,f,c
 12433  001C0A  3635               	rlcf	(___fladd@b+1)^0,f,c
 12434  001C0C  3636               	rlcf	(___fladd@b+2)^0,f,c
 12435  001C0E  3637               	rlcf	(___fladd@b+3)^0,f,c
 12436  001C10  AE43               	btfss	___fladd@grs^0,7,c
 12437  001C12  EF0D  F00E         	goto	u8581
 12438  001C16  EF0F  F00E         	goto	u8580
 12439  001C1A                     u8581:
 12440  001C1A  EF10  F00E         	goto	l8428
 12441  001C1E                     u8580:
 12442  001C1E  8034               	bsf	___fladd@b^0,0,c
 12443  001C20                     l8428:
 12444  001C20  A043               	btfss	___fladd@grs^0,0,c
 12445  001C22  EF15  F00E         	goto	u8591
 12446  001C26  EF17  F00E         	goto	u8590
 12447  001C2A                     u8591:
 12448  001C2A  EF1B  F00E         	goto	l8432
 12449  001C2E                     u8590:
 12450  001C2E  80D8               	bsf	status,0,c
 12451  001C30  3643               	rlcf	___fladd@grs^0,f,c
 12452  001C32  EF1D  F00E         	goto	l8434
 12453  001C36                     l8432:
 12454  001C36  90D8               	bcf	status,0,c
 12455  001C38  3643               	rlcf	___fladd@grs^0,f,c
 12456  001C3A                     l8434:
 12457  001C3A  5042               	movf	___fladd@bexp^0,w,c
 12458  001C3C  B4D8               	btfsc	status,2,c
 12459  001C3E  EF23  F00E         	goto	u8601
 12460  001C42  EF25  F00E         	goto	u8600
 12461  001C46                     u8601:
 12462  001C46  EF26  F00E         	goto	l8438
 12463  001C4A                     u8600:
 12464  001C4A  0642               	decf	___fladd@bexp^0,f,c
 12465  001C4C                     l8438:
 12466  001C4C  AE36               	btfss	(___fladd@b+2)^0,7,c
 12467  001C4E  EF2B  F00E         	goto	u8611
 12468  001C52  EF2D  F00E         	goto	u8610
 12469  001C56                     u8611:
 12470  001C56  EF03  F00E         	goto	l8422
 12471  001C5A                     u8610:
 12472  001C5A                     l8440:
 12473  001C5A  0E00               	movlw	0
 12474  001C5C  6E41               	movwf	___fladd@aexp^0,c
 12475  001C5E  AE43               	btfss	___fladd@grs^0,7,c
 12476  001C60  EF34  F00E         	goto	u8621
 12477  001C64  EF36  F00E         	goto	u8620
 12478  001C68                     u8621:
 12479  001C68  EF4E  F00E         	goto	l1516
 12480  001C6C                     u8620:
 12481  001C6C  C043  F03C         	movff	___fladd@grs,??___fladd
 12482  001C70  0E7F               	movlw	127
 12483  001C72  163C               	andwf	??___fladd^0,f,c
 12484  001C74  B4D8               	btfsc	status,2,c
 12485  001C76  EF3F  F00E         	goto	u8631
 12486  001C7A  EF41  F00E         	goto	u8630
 12487  001C7E                     u8631:
 12488  001C7E  EF45  F00E         	goto	l1517
 12489  001C82                     u8630:
 12490  001C82                     l8446:
 12491  001C82  0E01               	movlw	1
 12492  001C84  6E41               	movwf	___fladd@aexp^0,c
 12493  001C86  EF4E  F00E         	goto	l1516
 12494  001C8A                     l1517:
 12495  001C8A  A034               	btfss	___fladd@b^0,0,c
 12496  001C8C  EF4A  F00E         	goto	u8641
 12497  001C90  EF4C  F00E         	goto	u8640
 12498  001C94                     u8641:
 12499  001C94  EF4E  F00E         	goto	l1516
 12500  001C98                     u8640:
 12501  001C98  EF41  F00E         	goto	l8446
 12502  001C9C                     l1516:
 12503  001C9C  5041               	movf	___fladd@aexp^0,w,c
 12504  001C9E  B4D8               	btfsc	status,2,c
 12505  001CA0  EF54  F00E         	goto	u8651
 12506  001CA4  EF56  F00E         	goto	u8650
 12507  001CA8                     u8651:
 12508  001CA8  EF81  F00E         	goto	l8458
 12509  001CAC                     u8650:
 12510  001CAC  0E01               	movlw	1
 12511  001CAE  2634               	addwf	___fladd@b^0,f,c
 12512  001CB0  0E00               	movlw	0
 12513  001CB2  2235               	addwfc	(___fladd@b+1)^0,f,c
 12514  001CB4  2236               	addwfc	(___fladd@b+2)^0,f,c
 12515  001CB6  2237               	addwfc	(___fladd@b+3)^0,f,c
 12516  001CB8  A037               	btfss	(___fladd@b+3)^0,0,c
 12517  001CBA  EF61  F00E         	goto	u8661
 12518  001CBE  EF63  F00E         	goto	u8660
 12519  001CC2                     u8661:
 12520  001CC2  EF81  F00E         	goto	l8458
 12521  001CC6                     u8660:
 12522  001CC6  C034  F03C         	movff	___fladd@b,??___fladd
 12523  001CCA  C035  F03D         	movff	___fladd@b+1,??___fladd+1
 12524  001CCE  C036  F03E         	movff	___fladd@b+2,??___fladd+2
 12525  001CD2  C037  F03F         	movff	___fladd@b+3,??___fladd+3
 12526  001CD6  343F               	rlcf	(??___fladd+3)^0,w,c
 12527  001CD8  323F               	rrcf	(??___fladd+3)^0,f,c
 12528  001CDA  323E               	rrcf	(??___fladd+2)^0,f,c
 12529  001CDC  323D               	rrcf	(??___fladd+1)^0,f,c
 12530  001CDE  323C               	rrcf	??___fladd^0,f,c
 12531  001CE0  C03C  F034         	movff	??___fladd,___fladd@b
 12532  001CE4  C03D  F035         	movff	??___fladd+1,___fladd@b+1
 12533  001CE8  C03E  F036         	movff	??___fladd+2,___fladd@b+2
 12534  001CEC  C03F  F037         	movff	??___fladd+3,___fladd@b+3
 12535  001CF0  2842               	incf	___fladd@bexp^0,w,c
 12536  001CF2  B4D8               	btfsc	status,2,c
 12537  001CF4  EF7E  F00E         	goto	u8671
 12538  001CF8  EF80  F00E         	goto	u8670
 12539  001CFC                     u8671:
 12540  001CFC  EF81  F00E         	goto	l8458
 12541  001D00                     u8670:
 12542  001D00  2A42               	incf	___fladd@bexp^0,f,c
 12543  001D02                     l8458:
 12544  001D02  2842               	incf	___fladd@bexp^0,w,c
 12545  001D04  B4D8               	btfsc	status,2,c
 12546  001D06  EF87  F00E         	goto	u8681
 12547  001D0A  EF89  F00E         	goto	u8680
 12548  001D0E                     u8681:
 12549  001D0E  EF91  F00E         	goto	l8462
 12550  001D12                     u8680:
 12551  001D12  5042               	movf	___fladd@bexp^0,w,c
 12552  001D14  A4D8               	btfss	status,2,c
 12553  001D16  EF8F  F00E         	goto	u8691
 12554  001D1A  EF91  F00E         	goto	u8690
 12555  001D1E                     u8691:
 12556  001D1E  EFA3  F00E         	goto	l8466
 12557  001D22                     u8690:
 12558  001D22                     l8462:
 12559  001D22  0E00               	movlw	0
 12560  001D24  6E34               	movwf	___fladd@b^0,c
 12561  001D26  0E00               	movlw	0
 12562  001D28  6E35               	movwf	(___fladd@b+1)^0,c
 12563  001D2A  0E00               	movlw	0
 12564  001D2C  6E36               	movwf	(___fladd@b+2)^0,c
 12565  001D2E  0E00               	movlw	0
 12566  001D30  6E37               	movwf	(___fladd@b+3)^0,c
 12567  001D32  5042               	movf	___fladd@bexp^0,w,c
 12568  001D34  A4D8               	btfss	status,2,c
 12569  001D36  EF9F  F00E         	goto	u8701
 12570  001D3A  EFA1  F00E         	goto	u8700
 12571  001D3E                     u8701:
 12572  001D3E  EFA3  F00E         	goto	l8466
 12573  001D42                     u8700:
 12574  001D42  0E00               	movlw	0
 12575  001D44  6E40               	movwf	___fladd@signs^0,c
 12576  001D46                     l8466:
 12577  001D46  A042               	btfss	___fladd@bexp^0,0,c
 12578  001D48  EFA8  F00E         	goto	u8711
 12579  001D4C  EFAA  F00E         	goto	u8710
 12580  001D50                     u8711:
 12581  001D50  EFAD  F00E         	goto	l8470
 12582  001D54                     u8710:
 12583  001D54  8E36               	bsf	(___fladd@b+2)^0,7,c
 12584  001D56  EFAE  F00E         	goto	l8472
 12585  001D5A                     l8470:
 12586  001D5A  9E36               	bcf	(___fladd@b+2)^0,7,c
 12587  001D5C                     l8472:
 12588  001D5C  90D8               	bcf	status,0,c
 12589  001D5E  3042               	rrcf	___fladd@bexp^0,w,c
 12590  001D60  6E37               	movwf	(___fladd@b+3)^0,c
 12591  001D62  AE40               	btfss	___fladd@signs^0,7,c
 12592  001D64  EFB6  F00E         	goto	u8721
 12593  001D68  EFB8  F00E         	goto	u8720
 12594  001D6C                     u8721:
 12595  001D6C  EFB9  F00E         	goto	l8478
 12596  001D70                     u8720:
 12597  001D70  8E37               	bsf	(___fladd@b+3)^0,7,c
 12598  001D72                     l8478:
 12599  001D72  C034  F034         	movff	___fladd@b,?___fladd
 12600  001D76  C035  F035         	movff	___fladd@b+1,?___fladd+1
 12601  001D7A  C036  F036         	movff	___fladd@b+2,?___fladd+2
 12602  001D7E  C037  F037         	movff	___fladd@b+3,?___fladd+3
 12603  001D82                     l1499:
 12604  001D82  0012               	return		;funcret
 12605  001D84                     __end_of___fladd:
 12606                           	opt callstack 0
 12607                           
 12608 ;; *************** function ___flneg *****************
 12609 ;; Defined at:
 12610 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 12611 ;; Parameters:    Size  Location     Type
 12612 ;;  f1              4    5[COMRAM] unsigned char 
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;		None
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  4    5[COMRAM] unsigned char 
 12617 ;; Registers used:
 12618 ;;		wreg, status,2, status,0
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12624 ;;      Params:         4       0       0       0       0       0       0       0       0
 12625 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12626 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12627 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12628 ;;Total ram usage:        4 bytes
 12629 ;; Hardware stack levels used:    1
 12630 ;; Hardware stack levels required when called:    2
 12631 ;; This function calls:
 12632 ;;		Nothing
 12633 ;; This function is called by:
 12634 ;;		_efgtoa
 12635 ;;		_roundf
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text45
 12640  005776                     __ptext45:
 12641                           	opt callstack 0
 12642  005776                     ___flneg:
 12643                           	opt callstack 23
 12644  005776  5006               	movf	___flneg@f1^0,w,c
 12645  005778  1007               	iorwf	(___flneg@f1+1)^0,w,c
 12646  00577A  1008               	iorwf	(___flneg@f1+2)^0,w,c
 12647  00577C  1009               	iorwf	(___flneg@f1+3)^0,w,c
 12648  00577E  B4D8               	btfsc	status,2,c
 12649  005780  EFC4  F02B         	goto	u9771
 12650  005784  EFC6  F02B         	goto	u9770
 12651  005788                     u9771:
 12652  005788  EFCE  F02B         	goto	l9062
 12653  00578C                     u9770:
 12654  00578C  0E00               	movlw	0
 12655  00578E  1A06               	xorwf	___flneg@f1^0,f,c
 12656  005790  0E00               	movlw	0
 12657  005792  1A07               	xorwf	(___flneg@f1+1)^0,f,c
 12658  005794  0E00               	movlw	0
 12659  005796  1A08               	xorwf	(___flneg@f1+2)^0,f,c
 12660  005798  0E80               	movlw	128
 12661  00579A  1A09               	xorwf	(___flneg@f1+3)^0,f,c
 12662  00579C                     l9062:
 12663  00579C  C006  F006         	movff	___flneg@f1,?___flneg
 12664  0057A0  C007  F007         	movff	___flneg@f1+1,?___flneg+1
 12665  0057A4  C008  F008         	movff	___flneg@f1+2,?___flneg+2
 12666  0057A8  C009  F009         	movff	___flneg@f1+3,?___flneg+3
 12667  0057AC  0012               	return		;funcret
 12668  0057AE                     __end_of___flneg:
 12669                           	opt callstack 0
 12670                           
 12671 ;; *************** function ___flmul *****************
 12672 ;; Defined at:
 12673 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 12674 ;; Parameters:    Size  Location     Type
 12675 ;;  b               4   26[COMRAM] unsigned char 
 12676 ;;  a               4   30[COMRAM] unsigned char 
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;  prod            4   45[COMRAM] struct .
 12679 ;;  grs             4   40[COMRAM] unsigned long 
 12680 ;;  temp            2   49[COMRAM] struct .
 12681 ;;  bexp            1   44[COMRAM] unsigned char 
 12682 ;;  aexp            1   39[COMRAM] unsigned char 
 12683 ;;  sign            1   38[COMRAM] unsigned char 
 12684 ;; Return value:  Size  Location     Type
 12685 ;;                  4   26[COMRAM] unsigned char 
 12686 ;; Registers used:
 12687 ;;		wreg, status,2, status,0, prodl, prodh
 12688 ;; Tracked objects:
 12689 ;;		On entry : 0/0
 12690 ;;		On exit  : 0/0
 12691 ;;		Unchanged: 0/0
 12692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12693 ;;      Params:         8       0       0       0       0       0       0       0       0
 12694 ;;      Locals:        13       0       0       0       0       0       0       0       0
 12695 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12696 ;;      Totals:        25       0       0       0       0       0       0       0       0
 12697 ;;Total ram usage:       25 bytes
 12698 ;; Hardware stack levels used:    1
 12699 ;; Hardware stack levels required when called:    2
 12700 ;; This function calls:
 12701 ;;		Nothing
 12702 ;; This function is called by:
 12703 ;;		_pwmDuty
 12704 ;;		_PID
 12705 ;;		_efgtoa
 12706 ;;		_roundf
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text46
 12711  001D84                     __ptext46:
 12712                           	opt callstack 0
 12713  001D84                     ___flmul:
 12714                           	opt callstack 23
 12715  001D84  501E               	movf	(___flmul@b+3)^0,w,c
 12716  001D86  0B80               	andlw	128
 12717  001D88  6E27               	movwf	___flmul@sign^0,c
 12718  001D8A  501E               	movf	(___flmul@b+3)^0,w,c
 12719  001D8C  241E               	addwf	(___flmul@b+3)^0,w,c
 12720  001D8E  6E2D               	movwf	___flmul@bexp^0,c
 12721  001D90  AE1D               	btfss	(___flmul@b+2)^0,7,c
 12722  001D92  EFCD  F00E         	goto	u9381
 12723  001D96  EFCF  F00E         	goto	u9380
 12724  001D9A                     u9381:
 12725  001D9A  EFD0  F00E         	goto	l8810
 12726  001D9E                     u9380:
 12727  001D9E  802D               	bsf	___flmul@bexp^0,0,c
 12728  001DA0                     l8810:
 12729  001DA0  502D               	movf	___flmul@bexp^0,w,c
 12730  001DA2  B4D8               	btfsc	status,2,c
 12731  001DA4  EFD6  F00E         	goto	u9391
 12732  001DA8  EFD8  F00E         	goto	u9390
 12733  001DAC                     u9391:
 12734  001DAC  EFEB  F00E         	goto	l8818
 12735  001DB0                     u9390:
 12736  001DB0  282D               	incf	___flmul@bexp^0,w,c
 12737  001DB2  A4D8               	btfss	status,2,c
 12738  001DB4  EFDE  F00E         	goto	u9401
 12739  001DB8  EFE0  F00E         	goto	u9400
 12740  001DBC                     u9401:
 12741  001DBC  EFE8  F00E         	goto	l8816
 12742  001DC0                     u9400:
 12743  001DC0  0E00               	movlw	0
 12744  001DC2  6E1B               	movwf	___flmul@b^0,c
 12745  001DC4  0E00               	movlw	0
 12746  001DC6  6E1C               	movwf	(___flmul@b+1)^0,c
 12747  001DC8  0E00               	movlw	0
 12748  001DCA  6E1D               	movwf	(___flmul@b+2)^0,c
 12749  001DCC  0E00               	movlw	0
 12750  001DCE  6E1E               	movwf	(___flmul@b+3)^0,c
 12751  001DD0                     l8816:
 12752  001DD0  8E1D               	bsf	(___flmul@b+2)^0,7,c
 12753  001DD2  EFF3  F00E         	goto	l8820
 12754  001DD6                     l8818:
 12755  001DD6  0E00               	movlw	0
 12756  001DD8  6E1B               	movwf	___flmul@b^0,c
 12757  001DDA  0E00               	movlw	0
 12758  001DDC  6E1C               	movwf	(___flmul@b+1)^0,c
 12759  001DDE  0E00               	movlw	0
 12760  001DE0  6E1D               	movwf	(___flmul@b+2)^0,c
 12761  001DE2  0E00               	movlw	0
 12762  001DE4  6E1E               	movwf	(___flmul@b+3)^0,c
 12763  001DE6                     l8820:
 12764  001DE6  5022               	movf	(___flmul@a+3)^0,w,c
 12765  001DE8  0B80               	andlw	128
 12766  001DEA  1A27               	xorwf	___flmul@sign^0,f,c
 12767  001DEC  5022               	movf	(___flmul@a+3)^0,w,c
 12768  001DEE  2422               	addwf	(___flmul@a+3)^0,w,c
 12769  001DF0  6E28               	movwf	___flmul@aexp^0,c
 12770  001DF2  AE21               	btfss	(___flmul@a+2)^0,7,c
 12771  001DF4  EFFE  F00E         	goto	u9411
 12772  001DF8  EF00  F00F         	goto	u9410
 12773  001DFC                     u9411:
 12774  001DFC  EF01  F00F         	goto	l8828
 12775  001E00                     u9410:
 12776  001E00  8028               	bsf	___flmul@aexp^0,0,c
 12777  001E02                     l8828:
 12778  001E02  5028               	movf	___flmul@aexp^0,w,c
 12779  001E04  B4D8               	btfsc	status,2,c
 12780  001E06  EF07  F00F         	goto	u9421
 12781  001E0A  EF09  F00F         	goto	u9420
 12782  001E0E                     u9421:
 12783  001E0E  EF1C  F00F         	goto	l8836
 12784  001E12                     u9420:
 12785  001E12  2828               	incf	___flmul@aexp^0,w,c
 12786  001E14  A4D8               	btfss	status,2,c
 12787  001E16  EF0F  F00F         	goto	u9431
 12788  001E1A  EF11  F00F         	goto	u9430
 12789  001E1E                     u9431:
 12790  001E1E  EF19  F00F         	goto	l8834
 12791  001E22                     u9430:
 12792  001E22  0E00               	movlw	0
 12793  001E24  6E1F               	movwf	___flmul@a^0,c
 12794  001E26  0E00               	movlw	0
 12795  001E28  6E20               	movwf	(___flmul@a+1)^0,c
 12796  001E2A  0E00               	movlw	0
 12797  001E2C  6E21               	movwf	(___flmul@a+2)^0,c
 12798  001E2E  0E00               	movlw	0
 12799  001E30  6E22               	movwf	(___flmul@a+3)^0,c
 12800  001E32                     l8834:
 12801  001E32  8E21               	bsf	(___flmul@a+2)^0,7,c
 12802  001E34  EF24  F00F         	goto	l1576
 12803  001E38                     l8836:
 12804  001E38  0E00               	movlw	0
 12805  001E3A  6E1F               	movwf	___flmul@a^0,c
 12806  001E3C  0E00               	movlw	0
 12807  001E3E  6E20               	movwf	(___flmul@a+1)^0,c
 12808  001E40  0E00               	movlw	0
 12809  001E42  6E21               	movwf	(___flmul@a+2)^0,c
 12810  001E44  0E00               	movlw	0
 12811  001E46  6E22               	movwf	(___flmul@a+3)^0,c
 12812  001E48                     l1576:
 12813  001E48  5028               	movf	___flmul@aexp^0,w,c
 12814  001E4A  B4D8               	btfsc	status,2,c
 12815  001E4C  EF2A  F00F         	goto	u9441
 12816  001E50  EF2C  F00F         	goto	u9440
 12817  001E54                     u9441:
 12818  001E54  EF34  F00F         	goto	l8840
 12819  001E58                     u9440:
 12820  001E58  502D               	movf	___flmul@bexp^0,w,c
 12821  001E5A  A4D8               	btfss	status,2,c
 12822  001E5C  EF32  F00F         	goto	u9451
 12823  001E60  EF34  F00F         	goto	u9450
 12824  001E64                     u9451:
 12825  001E64  EF3E  F00F         	goto	l8844
 12826  001E68                     u9450:
 12827  001E68                     l8840:
 12828  001E68  0E00               	movlw	0
 12829  001E6A  6E1B               	movwf	?___flmul^0,c
 12830  001E6C  0E00               	movlw	0
 12831  001E6E  6E1C               	movwf	(?___flmul+1)^0,c
 12832  001E70  0E00               	movlw	0
 12833  001E72  6E1D               	movwf	(?___flmul+2)^0,c
 12834  001E74  0E00               	movlw	0
 12835  001E76  6E1E               	movwf	(?___flmul+3)^0,c
 12836  001E78  EFD6  F010         	goto	l1580
 12837  001E7C                     l8844:
 12838  001E7C  5021               	movf	(___flmul@a+2)^0,w,c
 12839  001E7E  021B               	mulwf	___flmul@b^0,c
 12840  001E80  CFF3 F032          	movff	prodl,___flmul@temp
 12841  001E84  CFF4 F033          	movff	prodh,___flmul@temp+1
 12842  001E88  5032               	movf	___flmul@temp^0,w,c
 12843  001E8A  6E29               	movwf	___flmul@grs^0,c
 12844  001E8C  6A2A               	clrf	(___flmul@grs+1)^0,c
 12845  001E8E  6A2B               	clrf	(___flmul@grs+2)^0,c
 12846  001E90  6A2C               	clrf	(___flmul@grs+3)^0,c
 12847  001E92  5033               	movf	(___flmul@temp+1)^0,w,c
 12848  001E94  6E2E               	movwf	___flmul@prod^0,c
 12849  001E96  6A2F               	clrf	(___flmul@prod+1)^0,c
 12850  001E98  6A30               	clrf	(___flmul@prod+2)^0,c
 12851  001E9A  6A31               	clrf	(___flmul@prod+3)^0,c
 12852  001E9C  5020               	movf	(___flmul@a+1)^0,w,c
 12853  001E9E  021C               	mulwf	(___flmul@b+1)^0,c
 12854  001EA0  CFF3 F032          	movff	prodl,___flmul@temp
 12855  001EA4  CFF4 F033          	movff	prodh,___flmul@temp+1
 12856  001EA8  5032               	movf	___flmul@temp^0,w,c
 12857  001EAA  2629               	addwf	___flmul@grs^0,f,c
 12858  001EAC  0E00               	movlw	0
 12859  001EAE  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12860  001EB0  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12861  001EB2  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12862  001EB4  5033               	movf	(___flmul@temp+1)^0,w,c
 12863  001EB6  262E               	addwf	___flmul@prod^0,f,c
 12864  001EB8  0E00               	movlw	0
 12865  001EBA  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12866  001EBC  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12867  001EBE  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12868  001EC0  501F               	movf	___flmul@a^0,w,c
 12869  001EC2  021D               	mulwf	(___flmul@b+2)^0,c
 12870  001EC4  CFF3 F032          	movff	prodl,___flmul@temp
 12871  001EC8  CFF4 F033          	movff	prodh,___flmul@temp+1
 12872  001ECC  5032               	movf	___flmul@temp^0,w,c
 12873  001ECE  2629               	addwf	___flmul@grs^0,f,c
 12874  001ED0  0E00               	movlw	0
 12875  001ED2  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12876  001ED4  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12877  001ED6  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12878  001ED8  5033               	movf	(___flmul@temp+1)^0,w,c
 12879  001EDA  262E               	addwf	___flmul@prod^0,f,c
 12880  001EDC  0E00               	movlw	0
 12881  001EDE  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12882  001EE0  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12883  001EE2  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12884  001EE4  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12885  001EE8  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12886  001EEC  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12887  001EF0  6A29               	clrf	___flmul@grs^0,c
 12888  001EF2  501F               	movf	___flmul@a^0,w,c
 12889  001EF4  021C               	mulwf	(___flmul@b+1)^0,c
 12890  001EF6  CFF3 F032          	movff	prodl,___flmul@temp
 12891  001EFA  CFF4 F033          	movff	prodh,___flmul@temp+1
 12892  001EFE  5032               	movf	___flmul@temp^0,w,c
 12893  001F00  2629               	addwf	___flmul@grs^0,f,c
 12894  001F02  5033               	movf	(___flmul@temp+1)^0,w,c
 12895  001F04  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12896  001F06  0E00               	movlw	0
 12897  001F08  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12898  001F0A  0E00               	movlw	0
 12899  001F0C  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12900  001F0E  5020               	movf	(___flmul@a+1)^0,w,c
 12901  001F10  021B               	mulwf	___flmul@b^0,c
 12902  001F12  CFF3 F032          	movff	prodl,___flmul@temp
 12903  001F16  CFF4 F033          	movff	prodh,___flmul@temp+1
 12904  001F1A  5032               	movf	___flmul@temp^0,w,c
 12905  001F1C  2629               	addwf	___flmul@grs^0,f,c
 12906  001F1E  5033               	movf	(___flmul@temp+1)^0,w,c
 12907  001F20  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12908  001F22  0E00               	movlw	0
 12909  001F24  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12910  001F26  0E00               	movlw	0
 12911  001F28  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12912  001F2A  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12913  001F2E  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12914  001F32  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12915  001F36  6A29               	clrf	___flmul@grs^0,c
 12916  001F38  501F               	movf	___flmul@a^0,w,c
 12917  001F3A  021B               	mulwf	___flmul@b^0,c
 12918  001F3C  CFF3 F032          	movff	prodl,___flmul@temp
 12919  001F40  CFF4 F033          	movff	prodh,___flmul@temp+1
 12920  001F44  5032               	movf	___flmul@temp^0,w,c
 12921  001F46  2629               	addwf	___flmul@grs^0,f,c
 12922  001F48  5033               	movf	(___flmul@temp+1)^0,w,c
 12923  001F4A  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12924  001F4C  0E00               	movlw	0
 12925  001F4E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12926  001F50  0E00               	movlw	0
 12927  001F52  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12928  001F54  5021               	movf	(___flmul@a+2)^0,w,c
 12929  001F56  021C               	mulwf	(___flmul@b+1)^0,c
 12930  001F58  CFF3 F032          	movff	prodl,___flmul@temp
 12931  001F5C  CFF4 F033          	movff	prodh,___flmul@temp+1
 12932  001F60  5032               	movf	___flmul@temp^0,w,c
 12933  001F62  262E               	addwf	___flmul@prod^0,f,c
 12934  001F64  5033               	movf	(___flmul@temp+1)^0,w,c
 12935  001F66  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12936  001F68  0E00               	movlw	0
 12937  001F6A  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12938  001F6C  0E00               	movlw	0
 12939  001F6E  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12940  001F70  5020               	movf	(___flmul@a+1)^0,w,c
 12941  001F72  021D               	mulwf	(___flmul@b+2)^0,c
 12942  001F74  CFF3 F032          	movff	prodl,___flmul@temp
 12943  001F78  CFF4 F033          	movff	prodh,___flmul@temp+1
 12944  001F7C  5032               	movf	___flmul@temp^0,w,c
 12945  001F7E  262E               	addwf	___flmul@prod^0,f,c
 12946  001F80  5033               	movf	(___flmul@temp+1)^0,w,c
 12947  001F82  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12948  001F84  0E00               	movlw	0
 12949  001F86  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12950  001F88  0E00               	movlw	0
 12951  001F8A  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12952  001F8C  5021               	movf	(___flmul@a+2)^0,w,c
 12953  001F8E  021D               	mulwf	(___flmul@b+2)^0,c
 12954  001F90  CFF3 F032          	movff	prodl,___flmul@temp
 12955  001F94  CFF4 F033          	movff	prodh,___flmul@temp+1
 12956  001F98  5032               	movf	___flmul@temp^0,w,c
 12957  001F9A  6E23               	movwf	??___flmul^0,c
 12958  001F9C  5033               	movf	(___flmul@temp+1)^0,w,c
 12959  001F9E  6E24               	movwf	(??___flmul+1)^0,c
 12960  001FA0  6A25               	clrf	(??___flmul+2)^0,c
 12961  001FA2  6A26               	clrf	(??___flmul+3)^0,c
 12962  001FA4  C025  F026         	movff	??___flmul+2,??___flmul+3
 12963  001FA8  C024  F025         	movff	??___flmul+1,??___flmul+2
 12964  001FAC  C023  F024         	movff	??___flmul,??___flmul+1
 12965  001FB0  6A23               	clrf	??___flmul^0,c
 12966  001FB2  5023               	movf	??___flmul^0,w,c
 12967  001FB4  262E               	addwf	___flmul@prod^0,f,c
 12968  001FB6  5024               	movf	(??___flmul+1)^0,w,c
 12969  001FB8  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12970  001FBA  5025               	movf	(??___flmul+2)^0,w,c
 12971  001FBC  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12972  001FBE  5026               	movf	(??___flmul+3)^0,w,c
 12973  001FC0  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12974  001FC2  C029  F023         	movff	___flmul@grs,??___flmul
 12975  001FC6  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
 12976  001FCA  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
 12977  001FCE  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
 12978  001FD2  0E19               	movlw	25
 12979  001FD4  EFF1  F00F         	goto	u9460
 12980  001FD8                     u9465:
 12981  001FD8  90D8               	bcf	status,0,c
 12982  001FDA  3226               	rrcf	(??___flmul+3)^0,f,c
 12983  001FDC  3225               	rrcf	(??___flmul+2)^0,f,c
 12984  001FDE  3224               	rrcf	(??___flmul+1)^0,f,c
 12985  001FE0  3223               	rrcf	??___flmul^0,f,c
 12986  001FE2                     u9460:
 12987  001FE2  2EE8               	decfsz	wreg,f,c
 12988  001FE4  EFEC  F00F         	goto	u9465
 12989  001FE8  5023               	movf	??___flmul^0,w,c
 12990  001FEA  262E               	addwf	___flmul@prod^0,f,c
 12991  001FEC  5024               	movf	(??___flmul+1)^0,w,c
 12992  001FEE  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12993  001FF0  5025               	movf	(??___flmul+2)^0,w,c
 12994  001FF2  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12995  001FF4  5026               	movf	(??___flmul+3)^0,w,c
 12996  001FF6  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12997  001FF8  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12998  001FFC  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12999  002000  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13000  002004  6A29               	clrf	___flmul@grs^0,c
 13001  002006  5028               	movf	___flmul@aexp^0,w,c
 13002  002008  C02D  F023         	movff	___flmul@bexp,??___flmul
 13003  00200C  6A24               	clrf	(??___flmul+1)^0,c
 13004  00200E  2623               	addwf	??___flmul^0,f,c
 13005  002010  0E00               	movlw	0
 13006  002012  2224               	addwfc	(??___flmul+1)^0,f,c
 13007  002014  0E82               	movlw	130
 13008  002016  2423               	addwf	??___flmul^0,w,c
 13009  002018  6E32               	movwf	___flmul@temp^0,c
 13010  00201A  0EFF               	movlw	255
 13011  00201C  2024               	addwfc	(??___flmul+1)^0,w,c
 13012  00201E  6E33               	movwf	(___flmul@temp+1)^0,c
 13013  002020  EF27  F010         	goto	l8892
 13014  002024                     l8886:
 13015  002024  90D8               	bcf	status,0,c
 13016  002026  362E               	rlcf	___flmul@prod^0,f,c
 13017  002028  362F               	rlcf	(___flmul@prod+1)^0,f,c
 13018  00202A  3630               	rlcf	(___flmul@prod+2)^0,f,c
 13019  00202C  3631               	rlcf	(___flmul@prod+3)^0,f,c
 13020  00202E  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 13021  002030  EF1C  F010         	goto	u9471
 13022  002034  EF1E  F010         	goto	u9470
 13023  002038                     u9471:
 13024  002038  EF1F  F010         	goto	l1583
 13025  00203C                     u9470:
 13026  00203C  802E               	bsf	___flmul@prod^0,0,c
 13027  00203E                     l1583:
 13028  00203E  90D8               	bcf	status,0,c
 13029  002040  3629               	rlcf	___flmul@grs^0,f,c
 13030  002042  362A               	rlcf	(___flmul@grs+1)^0,f,c
 13031  002044  362B               	rlcf	(___flmul@grs+2)^0,f,c
 13032  002046  362C               	rlcf	(___flmul@grs+3)^0,f,c
 13033  002048  0632               	decf	___flmul@temp^0,f,c
 13034  00204A  A0D8               	btfss	status,0,c
 13035  00204C  0633               	decf	(___flmul@temp+1)^0,f,c
 13036  00204E                     l8892:
 13037  00204E  AE30               	btfss	(___flmul@prod+2)^0,7,c
 13038  002050  EF2C  F010         	goto	u9481
 13039  002054  EF2E  F010         	goto	u9480
 13040  002058                     u9481:
 13041  002058  EF12  F010         	goto	l8886
 13042  00205C                     u9480:
 13043  00205C  0E00               	movlw	0
 13044  00205E  6E28               	movwf	___flmul@aexp^0,c
 13045  002060  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 13046  002062  EF35  F010         	goto	u9491
 13047  002066  EF37  F010         	goto	u9490
 13048  00206A                     u9491:
 13049  00206A  EF5B  F010         	goto	l1585
 13050  00206E                     u9490:
 13051  00206E  0EFF               	movlw	255
 13052  002070  1429               	andwf	___flmul@grs^0,w,c
 13053  002072  6E23               	movwf	??___flmul^0,c
 13054  002074  0EFF               	movlw	255
 13055  002076  142A               	andwf	(___flmul@grs+1)^0,w,c
 13056  002078  6E24               	movwf	(??___flmul+1)^0,c
 13057  00207A  0EFF               	movlw	255
 13058  00207C  142B               	andwf	(___flmul@grs+2)^0,w,c
 13059  00207E  6E25               	movwf	(??___flmul+2)^0,c
 13060  002080  0E7F               	movlw	127
 13061  002082  142C               	andwf	(___flmul@grs+3)^0,w,c
 13062  002084  6E26               	movwf	(??___flmul+3)^0,c
 13063  002086  5023               	movf	??___flmul^0,w,c
 13064  002088  1024               	iorwf	(??___flmul+1)^0,w,c
 13065  00208A  1025               	iorwf	(??___flmul+2)^0,w,c
 13066  00208C  1026               	iorwf	(??___flmul+3)^0,w,c
 13067  00208E  B4D8               	btfsc	status,2,c
 13068  002090  EF4C  F010         	goto	u9501
 13069  002094  EF4E  F010         	goto	u9500
 13070  002098                     u9501:
 13071  002098  EF52  F010         	goto	l1586
 13072  00209C                     u9500:
 13073  00209C                     l8900:
 13074  00209C  0E01               	movlw	1
 13075  00209E  6E28               	movwf	___flmul@aexp^0,c
 13076  0020A0  EF5B  F010         	goto	l1585
 13077  0020A4                     l1586:
 13078  0020A4  A02E               	btfss	___flmul@prod^0,0,c
 13079  0020A6  EF57  F010         	goto	u9511
 13080  0020AA  EF59  F010         	goto	u9510
 13081  0020AE                     u9511:
 13082  0020AE  EF5B  F010         	goto	l1585
 13083  0020B2                     u9510:
 13084  0020B2  EF4E  F010         	goto	l8900
 13085  0020B6                     l1585:
 13086  0020B6  5028               	movf	___flmul@aexp^0,w,c
 13087  0020B8  B4D8               	btfsc	status,2,c
 13088  0020BA  EF61  F010         	goto	u9521
 13089  0020BE  EF63  F010         	goto	u9520
 13090  0020C2                     u9521:
 13091  0020C2  EF87  F010         	goto	l8912
 13092  0020C6                     u9520:
 13093  0020C6  0E01               	movlw	1
 13094  0020C8  262E               	addwf	___flmul@prod^0,f,c
 13095  0020CA  0E00               	movlw	0
 13096  0020CC  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13097  0020CE  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13098  0020D0  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13099  0020D2  A031               	btfss	(___flmul@prod+3)^0,0,c
 13100  0020D4  EF6E  F010         	goto	u9531
 13101  0020D8  EF70  F010         	goto	u9530
 13102  0020DC                     u9531:
 13103  0020DC  EF87  F010         	goto	l8912
 13104  0020E0                     u9530:
 13105  0020E0  C02E  F023         	movff	___flmul@prod,??___flmul
 13106  0020E4  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
 13107  0020E8  C030  F025         	movff	___flmul@prod+2,??___flmul+2
 13108  0020EC  C031  F026         	movff	___flmul@prod+3,??___flmul+3
 13109  0020F0  3426               	rlcf	(??___flmul+3)^0,w,c
 13110  0020F2  3226               	rrcf	(??___flmul+3)^0,f,c
 13111  0020F4  3225               	rrcf	(??___flmul+2)^0,f,c
 13112  0020F6  3224               	rrcf	(??___flmul+1)^0,f,c
 13113  0020F8  3223               	rrcf	??___flmul^0,f,c
 13114  0020FA  C023  F02E         	movff	??___flmul,___flmul@prod
 13115  0020FE  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
 13116  002102  C025  F030         	movff	??___flmul+2,___flmul@prod+2
 13117  002106  C026  F031         	movff	??___flmul+3,___flmul@prod+3
 13118  00210A  4A32               	infsnz	___flmul@temp^0,f,c
 13119  00210C  2A33               	incf	(___flmul@temp+1)^0,f,c
 13120  00210E                     l8912:
 13121  00210E  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 13122  002110  EF92  F010         	goto	u9541
 13123  002114  5033               	movf	(___flmul@temp+1)^0,w,c
 13124  002116  E108               	bnz	u9540
 13125  002118  2832               	incf	___flmul@temp^0,w,c
 13126  00211A  A0D8               	btfss	status,0,c
 13127  00211C  EF92  F010         	goto	u9541
 13128  002120  EF94  F010         	goto	u9540
 13129  002124                     u9541:
 13130  002124  EF9E  F010         	goto	l8916
 13131  002128                     u9540:
 13132  002128  0E00               	movlw	0
 13133  00212A  6E2E               	movwf	___flmul@prod^0,c
 13134  00212C  0E00               	movlw	0
 13135  00212E  6E2F               	movwf	(___flmul@prod+1)^0,c
 13136  002130  0E80               	movlw	128
 13137  002132  6E30               	movwf	(___flmul@prod+2)^0,c
 13138  002134  0E7F               	movlw	127
 13139  002136  6E31               	movwf	(___flmul@prod+3)^0,c
 13140  002138  EFCC  F010         	goto	l8928
 13141  00213C                     l8916:
 13142  00213C  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 13143  00213E  EFAB  F010         	goto	u9550
 13144  002142  5033               	movf	(___flmul@temp+1)^0,w,c
 13145  002144  E106               	bnz	u9551
 13146  002146  0432               	decf	___flmul@temp^0,w,c
 13147  002148  B0D8               	btfsc	status,0,c
 13148  00214A  EFA9  F010         	goto	u9551
 13149  00214E  EFAB  F010         	goto	u9550
 13150  002152                     u9551:
 13151  002152  EFB7  F010         	goto	l1593
 13152  002156                     u9550:
 13153  002156  0E00               	movlw	0
 13154  002158  6E2E               	movwf	___flmul@prod^0,c
 13155  00215A  0E00               	movlw	0
 13156  00215C  6E2F               	movwf	(___flmul@prod+1)^0,c
 13157  00215E  0E00               	movlw	0
 13158  002160  6E30               	movwf	(___flmul@prod+2)^0,c
 13159  002162  0E00               	movlw	0
 13160  002164  6E31               	movwf	(___flmul@prod+3)^0,c
 13161  002166  0E00               	movlw	0
 13162  002168  6E27               	movwf	___flmul@sign^0,c
 13163  00216A  EFCC  F010         	goto	l8928
 13164  00216E                     l1593:
 13165  00216E  C032  F02D         	movff	___flmul@temp,___flmul@bexp
 13166  002172  0EFF               	movlw	255
 13167  002174  162E               	andwf	___flmul@prod^0,f,c
 13168  002176  0EFF               	movlw	255
 13169  002178  162F               	andwf	(___flmul@prod+1)^0,f,c
 13170  00217A  0E7F               	movlw	127
 13171  00217C  1630               	andwf	(___flmul@prod+2)^0,f,c
 13172  00217E  0E00               	movlw	0
 13173  002180  1631               	andwf	(___flmul@prod+3)^0,f,c
 13174  002182  A02D               	btfss	___flmul@bexp^0,0,c
 13175  002184  EFC6  F010         	goto	u9561
 13176  002188  EFC8  F010         	goto	u9560
 13177  00218C                     u9561:
 13178  00218C  EFC9  F010         	goto	l8926
 13179  002190                     u9560:
 13180  002190  8E30               	bsf	(___flmul@prod+2)^0,7,c
 13181  002192                     l8926:
 13182  002192  90D8               	bcf	status,0,c
 13183  002194  302D               	rrcf	___flmul@bexp^0,w,c
 13184  002196  6E31               	movwf	(___flmul@prod+3)^0,c
 13185  002198                     l8928:
 13186  002198  5027               	movf	___flmul@sign^0,w,c
 13187  00219A  1231               	iorwf	(___flmul@prod+3)^0,f,c
 13188  00219C  C02E  F01B         	movff	___flmul@prod,?___flmul
 13189  0021A0  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
 13190  0021A4  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
 13191  0021A8  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
 13192  0021AC                     l1580:
 13193  0021AC  0012               	return		;funcret
 13194  0021AE                     __end_of___flmul:
 13195                           	opt callstack 0
 13196                           
 13197 ;; *************** function ___fleq *****************
 13198 ;; Defined at:
 13199 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 13200 ;; Parameters:    Size  Location     Type
 13201 ;;  ff1             4    5[COMRAM] unsigned char 
 13202 ;;  ff2             4    9[COMRAM] unsigned char 
 13203 ;; Auto vars:     Size  Location     Type
 13204 ;;		None
 13205 ;; Return value:  Size  Location     Type
 13206 ;;		None               void
 13207 ;; Registers used:
 13208 ;;		wreg, status,2, status,0
 13209 ;; Tracked objects:
 13210 ;;		On entry : 0/0
 13211 ;;		On exit  : 0/0
 13212 ;;		Unchanged: 0/0
 13213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13214 ;;      Params:         8       0       0       0       0       0       0       0       0
 13215 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13216 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13217 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13218 ;;Total ram usage:       12 bytes
 13219 ;; Hardware stack levels used:    1
 13220 ;; Hardware stack levels required when called:    2
 13221 ;; This function calls:
 13222 ;;		Nothing
 13223 ;; This function is called by:
 13224 ;;		_efgtoa
 13225 ;; This function uses a non-reentrant model
 13226 ;;
 13227                           
 13228                           	psect	text47
 13229  004CC0                     __ptext47:
 13230                           	opt callstack 0
 13231  004CC0                     ___fleq:
 13232                           	opt callstack 23
 13233  004CC0  0E00               	movlw	0
 13234  004CC2  1406               	andwf	___fleq@ff1^0,w,c
 13235  004CC4  6E0E               	movwf	??___fleq^0,c
 13236  004CC6  0E00               	movlw	0
 13237  004CC8  1407               	andwf	(___fleq@ff1+1)^0,w,c
 13238  004CCA  6E0F               	movwf	(??___fleq+1)^0,c
 13239  004CCC  0E80               	movlw	128
 13240  004CCE  1408               	andwf	(___fleq@ff1+2)^0,w,c
 13241  004CD0  6E10               	movwf	(??___fleq+2)^0,c
 13242  004CD2  0E7F               	movlw	127
 13243  004CD4  1409               	andwf	(___fleq@ff1+3)^0,w,c
 13244  004CD6  6E11               	movwf	(??___fleq+3)^0,c
 13245  004CD8  500E               	movf	??___fleq^0,w,c
 13246  004CDA  100F               	iorwf	(??___fleq+1)^0,w,c
 13247  004CDC  1010               	iorwf	(??___fleq+2)^0,w,c
 13248  004CDE  1011               	iorwf	(??___fleq+3)^0,w,c
 13249  004CE0  A4D8               	btfss	status,2,c
 13250  004CE2  EF75  F026         	goto	u9691
 13251  004CE6  EF77  F026         	goto	u9690
 13252  004CEA                     u9691:
 13253  004CEA  EF7F  F026         	goto	l9024
 13254  004CEE                     u9690:
 13255  004CEE  0E00               	movlw	0
 13256  004CF0  6E06               	movwf	___fleq@ff1^0,c
 13257  004CF2  0E00               	movlw	0
 13258  004CF4  6E07               	movwf	(___fleq@ff1+1)^0,c
 13259  004CF6  0E00               	movlw	0
 13260  004CF8  6E08               	movwf	(___fleq@ff1+2)^0,c
 13261  004CFA  0E00               	movlw	0
 13262  004CFC  6E09               	movwf	(___fleq@ff1+3)^0,c
 13263  004CFE                     l9024:
 13264  004CFE  0E00               	movlw	0
 13265  004D00  140A               	andwf	___fleq@ff2^0,w,c
 13266  004D02  6E0E               	movwf	??___fleq^0,c
 13267  004D04  0E00               	movlw	0
 13268  004D06  140B               	andwf	(___fleq@ff2+1)^0,w,c
 13269  004D08  6E0F               	movwf	(??___fleq+1)^0,c
 13270  004D0A  0E80               	movlw	128
 13271  004D0C  140C               	andwf	(___fleq@ff2+2)^0,w,c
 13272  004D0E  6E10               	movwf	(??___fleq+2)^0,c
 13273  004D10  0E7F               	movlw	127
 13274  004D12  140D               	andwf	(___fleq@ff2+3)^0,w,c
 13275  004D14  6E11               	movwf	(??___fleq+3)^0,c
 13276  004D16  500E               	movf	??___fleq^0,w,c
 13277  004D18  100F               	iorwf	(??___fleq+1)^0,w,c
 13278  004D1A  1010               	iorwf	(??___fleq+2)^0,w,c
 13279  004D1C  1011               	iorwf	(??___fleq+3)^0,w,c
 13280  004D1E  A4D8               	btfss	status,2,c
 13281  004D20  EF94  F026         	goto	u9701
 13282  004D24  EF96  F026         	goto	u9700
 13283  004D28                     u9701:
 13284  004D28  EF9E  F026         	goto	l9028
 13285  004D2C                     u9700:
 13286  004D2C  0E00               	movlw	0
 13287  004D2E  6E0A               	movwf	___fleq@ff2^0,c
 13288  004D30  0E00               	movlw	0
 13289  004D32  6E0B               	movwf	(___fleq@ff2+1)^0,c
 13290  004D34  0E00               	movlw	0
 13291  004D36  6E0C               	movwf	(___fleq@ff2+2)^0,c
 13292  004D38  0E00               	movlw	0
 13293  004D3A  6E0D               	movwf	(___fleq@ff2+3)^0,c
 13294  004D3C                     l9028:
 13295  004D3C  500A               	movf	___fleq@ff2^0,w,c
 13296  004D3E  1806               	xorwf	___fleq@ff1^0,w,c
 13297  004D40  E10F               	bnz	u9710
 13298  004D42  500B               	movf	(___fleq@ff2+1)^0,w,c
 13299  004D44  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 13300  004D46  E10C               	bnz	u9710
 13301  004D48  500C               	movf	(___fleq@ff2+2)^0,w,c
 13302  004D4A  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 13303  004D4C  E109               	bnz	u9710
 13304  004D4E  500D               	movf	(___fleq@ff2+3)^0,w,c
 13305  004D50  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 13306  004D52  B4D8               	btfsc	status,2,c
 13307  004D54  EFAE  F026         	goto	u9711
 13308  004D58  EFB0  F026         	goto	u9710
 13309  004D5C                     u9711:
 13310  004D5C  EFB3  F026         	goto	l9032
 13311  004D60                     u9710:
 13312  004D60  90D8               	bcf	status,0,c
 13313  004D62  EFB4  F026         	goto	l1221
 13314  004D66                     l9032:
 13315  004D66  80D8               	bsf	status,0,c
 13316  004D68                     l1221:
 13317  004D68  0012               	return		;funcret
 13318  004D6A                     __end_of___fleq:
 13319                           	opt callstack 0
 13320                           
 13321 ;; *************** function ___fldiv *****************
 13322 ;; Defined at:
 13323 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 13324 ;; Parameters:    Size  Location     Type
 13325 ;;  b               4   67[COMRAM] unsigned char 
 13326 ;;  a               4   71[COMRAM] unsigned char 
 13327 ;; Auto vars:     Size  Location     Type
 13328 ;;  grs             4    7[BANK0 ] unsigned long 
 13329 ;;  rem             4    0[BANK0 ] unsigned long 
 13330 ;;  new_exp         2    5[BANK0 ] short 
 13331 ;;  aexp            1   12[BANK0 ] unsigned char 
 13332 ;;  bexp            1   11[BANK0 ] unsigned char 
 13333 ;;  sign            1    4[BANK0 ] unsigned char 
 13334 ;; Return value:  Size  Location     Type
 13335 ;;                  4   67[COMRAM] unsigned char 
 13336 ;; Registers used:
 13337 ;;		wreg, status,2, status,0
 13338 ;; Tracked objects:
 13339 ;;		On entry : 0/0
 13340 ;;		On exit  : 0/0
 13341 ;;		Unchanged: 0/0
 13342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13343 ;;      Params:         8       0       0       0       0       0       0       0       0
 13344 ;;      Locals:         0      13       0       0       0       0       0       0       0
 13345 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13346 ;;      Totals:        12      13       0       0       0       0       0       0       0
 13347 ;;Total ram usage:       25 bytes
 13348 ;; Hardware stack levels used:    1
 13349 ;; Hardware stack levels required when called:    2
 13350 ;; This function calls:
 13351 ;;		Nothing
 13352 ;; This function is called by:
 13353 ;;		_pwmDuty
 13354 ;;		_leerSensores
 13355 ;;		_efgtoa
 13356 ;; This function uses a non-reentrant model
 13357 ;;
 13358                           
 13359                           	psect	text48
 13360  002948                     __ptext48:
 13361                           	opt callstack 0
 13362  002948                     ___fldiv:
 13363                           	opt callstack 23
 13364  002948  5047               	movf	(___fldiv@b+3)^0,w,c
 13365  00294A  0B80               	andlw	128
 13366  00294C  0100               	movlb	0	; () banked
 13367  00294E  6F64               	movwf	___fldiv@sign& (0+255),b
 13368  002950  5047               	movf	(___fldiv@b+3)^0,w,c
 13369  002952  2447               	addwf	(___fldiv@b+3)^0,w,c
 13370  002954  6F6B               	movwf	___fldiv@bexp& (0+255),b
 13371  002956                     
 13372                           ; BSR set to: 0
 13373  002956  AE46               	btfss	(___fldiv@b+2)^0,7,c
 13374  002958  EFB0  F014         	goto	u9151
 13375  00295C  EFB2  F014         	goto	u9150
 13376  002960                     u9151:
 13377  002960  EFB3  F014         	goto	l8672
 13378  002964                     u9150:
 13379  002964                     
 13380                           ; BSR set to: 0
 13381  002964  816B               	bsf	___fldiv@bexp& (0+255),0,b
 13382  002966                     l8672:
 13383                           
 13384                           ; BSR set to: 0
 13385  002966  516B               	movf	___fldiv@bexp& (0+255),w,b
 13386  002968  B4D8               	btfsc	status,2,c
 13387  00296A  EFB9  F014         	goto	u9161
 13388  00296E  EFBB  F014         	goto	u9160
 13389  002972                     u9161:
 13390  002972  EFD0  F014         	goto	l8682
 13391  002976                     u9160:
 13392  002976                     
 13393                           ; BSR set to: 0
 13394  002976  296B               	incf	___fldiv@bexp& (0+255),w,b
 13395  002978  A4D8               	btfss	status,2,c
 13396  00297A  EFC1  F014         	goto	u9171
 13397  00297E  EFC3  F014         	goto	u9170
 13398  002982                     u9171:
 13399  002982  EFCB  F014         	goto	l8678
 13400  002986                     u9170:
 13401  002986                     
 13402                           ; BSR set to: 0
 13403  002986  0E00               	movlw	0
 13404  002988  6E44               	movwf	___fldiv@b^0,c
 13405  00298A  0E00               	movlw	0
 13406  00298C  6E45               	movwf	(___fldiv@b+1)^0,c
 13407  00298E  0E00               	movlw	0
 13408  002990  6E46               	movwf	(___fldiv@b+2)^0,c
 13409  002992  0E00               	movlw	0
 13410  002994  6E47               	movwf	(___fldiv@b+3)^0,c
 13411  002996                     l8678:
 13412                           
 13413                           ; BSR set to: 0
 13414  002996  8E46               	bsf	(___fldiv@b+2)^0,7,c
 13415  002998                     
 13416                           ; BSR set to: 0
 13417  002998  0E00               	movlw	0
 13418  00299A  6E47               	movwf	(___fldiv@b+3)^0,c
 13419  00299C  EFD8  F014         	goto	l8684
 13420  0029A0                     l8682:
 13421                           
 13422                           ; BSR set to: 0
 13423  0029A0  0E00               	movlw	0
 13424  0029A2  6E44               	movwf	___fldiv@b^0,c
 13425  0029A4  0E00               	movlw	0
 13426  0029A6  6E45               	movwf	(___fldiv@b+1)^0,c
 13427  0029A8  0E00               	movlw	0
 13428  0029AA  6E46               	movwf	(___fldiv@b+2)^0,c
 13429  0029AC  0E00               	movlw	0
 13430  0029AE  6E47               	movwf	(___fldiv@b+3)^0,c
 13431  0029B0                     l8684:
 13432                           
 13433                           ; BSR set to: 0
 13434  0029B0  504B               	movf	(___fldiv@a+3)^0,w,c
 13435  0029B2  0B80               	andlw	128
 13436  0029B4  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 13437  0029B6                     
 13438                           ; BSR set to: 0
 13439  0029B6  504B               	movf	(___fldiv@a+3)^0,w,c
 13440  0029B8  244B               	addwf	(___fldiv@a+3)^0,w,c
 13441  0029BA  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13442  0029BC                     
 13443                           ; BSR set to: 0
 13444  0029BC  AE4A               	btfss	(___fldiv@a+2)^0,7,c
 13445  0029BE  EFE3  F014         	goto	u9181
 13446  0029C2  EFE5  F014         	goto	u9180
 13447  0029C6                     u9181:
 13448  0029C6  EFE6  F014         	goto	l8692
 13449  0029CA                     u9180:
 13450  0029CA                     
 13451                           ; BSR set to: 0
 13452  0029CA  816C               	bsf	___fldiv@aexp& (0+255),0,b
 13453  0029CC                     l8692:
 13454                           
 13455                           ; BSR set to: 0
 13456  0029CC  516C               	movf	___fldiv@aexp& (0+255),w,b
 13457  0029CE  B4D8               	btfsc	status,2,c
 13458  0029D0  EFEC  F014         	goto	u9191
 13459  0029D4  EFEE  F014         	goto	u9190
 13460  0029D8                     u9191:
 13461  0029D8  EF03  F015         	goto	l8702
 13462  0029DC                     u9190:
 13463  0029DC                     
 13464                           ; BSR set to: 0
 13465  0029DC  296C               	incf	___fldiv@aexp& (0+255),w,b
 13466  0029DE  A4D8               	btfss	status,2,c
 13467  0029E0  EFF4  F014         	goto	u9201
 13468  0029E4  EFF6  F014         	goto	u9200
 13469  0029E8                     u9201:
 13470  0029E8  EFFE  F014         	goto	l8698
 13471  0029EC                     u9200:
 13472  0029EC                     
 13473                           ; BSR set to: 0
 13474  0029EC  0E00               	movlw	0
 13475  0029EE  6E48               	movwf	___fldiv@a^0,c
 13476  0029F0  0E00               	movlw	0
 13477  0029F2  6E49               	movwf	(___fldiv@a+1)^0,c
 13478  0029F4  0E00               	movlw	0
 13479  0029F6  6E4A               	movwf	(___fldiv@a+2)^0,c
 13480  0029F8  0E00               	movlw	0
 13481  0029FA  6E4B               	movwf	(___fldiv@a+3)^0,c
 13482  0029FC                     l8698:
 13483                           
 13484                           ; BSR set to: 0
 13485  0029FC  8E4A               	bsf	(___fldiv@a+2)^0,7,c
 13486  0029FE                     
 13487                           ; BSR set to: 0
 13488  0029FE  0E00               	movlw	0
 13489  002A00  6E4B               	movwf	(___fldiv@a+3)^0,c
 13490  002A02  EF0B  F015         	goto	l8704
 13491  002A06                     l8702:
 13492                           
 13493                           ; BSR set to: 0
 13494  002A06  0E00               	movlw	0
 13495  002A08  6E48               	movwf	___fldiv@a^0,c
 13496  002A0A  0E00               	movlw	0
 13497  002A0C  6E49               	movwf	(___fldiv@a+1)^0,c
 13498  002A0E  0E00               	movlw	0
 13499  002A10  6E4A               	movwf	(___fldiv@a+2)^0,c
 13500  002A12  0E00               	movlw	0
 13501  002A14  6E4B               	movwf	(___fldiv@a+3)^0,c
 13502  002A16                     l8704:
 13503                           
 13504                           ; BSR set to: 0
 13505  002A16  5048               	movf	___fldiv@a^0,w,c
 13506  002A18  1049               	iorwf	(___fldiv@a+1)^0,w,c
 13507  002A1A  104A               	iorwf	(___fldiv@a+2)^0,w,c
 13508  002A1C  104B               	iorwf	(___fldiv@a+3)^0,w,c
 13509  002A1E  A4D8               	btfss	status,2,c
 13510  002A20  EF14  F015         	goto	u9211
 13511  002A24  EF16  F015         	goto	u9210
 13512  002A28                     u9211:
 13513  002A28  EF2E  F015         	goto	l8716
 13514  002A2C                     u9210:
 13515  002A2C                     
 13516                           ; BSR set to: 0
 13517  002A2C  0E00               	movlw	0
 13518  002A2E  6E44               	movwf	___fldiv@b^0,c
 13519  002A30  0E00               	movlw	0
 13520  002A32  6E45               	movwf	(___fldiv@b+1)^0,c
 13521  002A34  0E00               	movlw	0
 13522  002A36  6E46               	movwf	(___fldiv@b+2)^0,c
 13523  002A38  0E00               	movlw	0
 13524  002A3A  6E47               	movwf	(___fldiv@b+3)^0,c
 13525  002A3C                     
 13526                           ; BSR set to: 0
 13527  002A3C  0E80               	movlw	128
 13528  002A3E  1246               	iorwf	(___fldiv@b+2)^0,f,c
 13529  002A40  0E7F               	movlw	127
 13530  002A42  1247               	iorwf	(___fldiv@b+3)^0,f,c
 13531  002A44                     l8710:
 13532                           
 13533                           ; BSR set to: 0
 13534  002A44  5164               	movf	___fldiv@sign& (0+255),w,b
 13535  002A46  1247               	iorwf	(___fldiv@b+3)^0,f,c
 13536  002A48                     
 13537                           ; BSR set to: 0
 13538  002A48  C044  F044         	movff	___fldiv@b,?___fldiv
 13539  002A4C  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
 13540  002A50  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
 13541  002A54  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
 13542  002A58  EF71  F016         	goto	l1544
 13543  002A5C                     l8716:
 13544                           
 13545                           ; BSR set to: 0
 13546  002A5C  516B               	movf	___fldiv@bexp& (0+255),w,b
 13547  002A5E  A4D8               	btfss	status,2,c
 13548  002A60  EF34  F015         	goto	u9221
 13549  002A64  EF36  F015         	goto	u9220
 13550  002A68                     u9221:
 13551  002A68  EF40  F015         	goto	l8724
 13552  002A6C                     u9220:
 13553  002A6C                     
 13554                           ; BSR set to: 0
 13555  002A6C  0E00               	movlw	0
 13556  002A6E  6E44               	movwf	?___fldiv^0,c
 13557  002A70  0E00               	movlw	0
 13558  002A72  6E45               	movwf	(?___fldiv+1)^0,c
 13559  002A74  0E00               	movlw	0
 13560  002A76  6E46               	movwf	(?___fldiv+2)^0,c
 13561  002A78  0E00               	movlw	0
 13562  002A7A  6E47               	movwf	(?___fldiv+3)^0,c
 13563  002A7C  EF71  F016         	goto	l1544
 13564  002A80                     l8724:
 13565                           
 13566                           ; BSR set to: 0
 13567  002A80  516C               	movf	___fldiv@aexp& (0+255),w,b
 13568  002A82  C06B  F04C         	movff	___fldiv@bexp,??___fldiv
 13569  002A86  6A4D               	clrf	(??___fldiv+1)^0,c
 13570  002A88  5E4C               	subwf	??___fldiv^0,f,c
 13571  002A8A  0E00               	movlw	0
 13572  002A8C  5A4D               	subwfb	(??___fldiv+1)^0,f,c
 13573  002A8E  0E7F               	movlw	127
 13574  002A90  244C               	addwf	??___fldiv^0,w,c
 13575  002A92  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13576  002A94  0E00               	movlw	0
 13577  002A96  204D               	addwfc	(??___fldiv+1)^0,w,c
 13578  002A98  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13579  002A9A                     
 13580                           ; BSR set to: 0
 13581  002A9A  C044  F060         	movff	___fldiv@b,___fldiv@rem
 13582  002A9E  C045  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 13583  002AA2  C046  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 13584  002AA6  C047  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 13585  002AAA                     
 13586                           ; BSR set to: 0
 13587  002AAA  0E00               	movlw	0
 13588  002AAC  6E44               	movwf	___fldiv@b^0,c
 13589  002AAE  0E00               	movlw	0
 13590  002AB0  6E45               	movwf	(___fldiv@b+1)^0,c
 13591  002AB2  0E00               	movlw	0
 13592  002AB4  6E46               	movwf	(___fldiv@b+2)^0,c
 13593  002AB6  0E00               	movlw	0
 13594  002AB8  6E47               	movwf	(___fldiv@b+3)^0,c
 13595  002ABA                     
 13596                           ; BSR set to: 0
 13597  002ABA  0E00               	movlw	0
 13598  002ABC  6F67               	movwf	___fldiv@grs& (0+255),b
 13599  002ABE  0E00               	movlw	0
 13600  002AC0  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 13601  002AC2  0E00               	movlw	0
 13602  002AC4  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 13603  002AC6  0E00               	movlw	0
 13604  002AC8  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 13605  002ACA                     
 13606                           ; BSR set to: 0
 13607  002ACA  0E00               	movlw	0
 13608  002ACC  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13609  002ACE  EFA1  F015         	goto	l1546
 13610  002AD2                     l8734:
 13611                           
 13612                           ; BSR set to: 0
 13613  002AD2  516C               	movf	___fldiv@aexp& (0+255),w,b
 13614  002AD4  B4D8               	btfsc	status,2,c
 13615  002AD6  EF6F  F015         	goto	u9231
 13616  002ADA  EF71  F015         	goto	u9230
 13617  002ADE                     u9231:
 13618  002ADE  EF88  F015         	goto	l8742
 13619  002AE2                     u9230:
 13620  002AE2                     
 13621                           ; BSR set to: 0
 13622  002AE2  90D8               	bcf	status,0,c
 13623  002AE4  3760               	rlcf	___fldiv@rem& (0+255),f,b
 13624  002AE6  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13625  002AE8  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13626  002AEA  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13627  002AEC  90D8               	bcf	status,0,c
 13628  002AEE  3644               	rlcf	___fldiv@b^0,f,c
 13629  002AF0  3645               	rlcf	(___fldiv@b+1)^0,f,c
 13630  002AF2  3646               	rlcf	(___fldiv@b+2)^0,f,c
 13631  002AF4  3647               	rlcf	(___fldiv@b+3)^0,f,c
 13632  002AF6                     
 13633                           ; BSR set to: 0
 13634  002AF6  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13635  002AF8  EF80  F015         	goto	u9241
 13636  002AFC  EF82  F015         	goto	u9240
 13637  002B00                     u9241:
 13638  002B00  EF83  F015         	goto	l1549
 13639  002B04                     u9240:
 13640  002B04                     
 13641                           ; BSR set to: 0
 13642  002B04  8044               	bsf	___fldiv@b^0,0,c
 13643  002B06                     l1549:
 13644                           
 13645                           ; BSR set to: 0
 13646  002B06  90D8               	bcf	status,0,c
 13647  002B08  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13648  002B0A  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13649  002B0C  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13650  002B0E  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13651  002B10                     l8742:
 13652                           
 13653                           ; BSR set to: 0
 13654  002B10  5048               	movf	___fldiv@a^0,w,c
 13655  002B12  5D60               	subwf	___fldiv@rem& (0+255),w,b
 13656  002B14  5049               	movf	(___fldiv@a+1)^0,w,c
 13657  002B16  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13658  002B18  504A               	movf	(___fldiv@a+2)^0,w,c
 13659  002B1A  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13660  002B1C  504B               	movf	(___fldiv@a+3)^0,w,c
 13661  002B1E  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13662  002B20  A0D8               	btfss	status,0,c
 13663  002B22  EF95  F015         	goto	u9251
 13664  002B26  EF97  F015         	goto	u9250
 13665  002B2A                     u9251:
 13666  002B2A  EFA0  F015         	goto	l8748
 13667  002B2E                     u9250:
 13668  002B2E                     
 13669                           ; BSR set to: 0
 13670  002B2E  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13671  002B30                     
 13672                           ; BSR set to: 0
 13673  002B30  5048               	movf	___fldiv@a^0,w,c
 13674  002B32  5F60               	subwf	___fldiv@rem& (0+255),f,b
 13675  002B34  5049               	movf	(___fldiv@a+1)^0,w,c
 13676  002B36  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13677  002B38  504A               	movf	(___fldiv@a+2)^0,w,c
 13678  002B3A  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13679  002B3C  504B               	movf	(___fldiv@a+3)^0,w,c
 13680  002B3E  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13681  002B40                     l8748:
 13682                           
 13683                           ; BSR set to: 0
 13684  002B40  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 13685  002B42                     l1546:
 13686                           
 13687                           ; BSR set to: 0
 13688  002B42  0E19               	movlw	25
 13689  002B44  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 13690  002B46  EFA7  F015         	goto	u9261
 13691  002B4A  EFA9  F015         	goto	u9260
 13692  002B4E                     u9261:
 13693  002B4E  EF69  F015         	goto	l8734
 13694  002B52                     u9260:
 13695  002B52                     
 13696                           ; BSR set to: 0
 13697  002B52  5160               	movf	___fldiv@rem& (0+255),w,b
 13698  002B54  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13699  002B56  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13700  002B58  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13701  002B5A  B4D8               	btfsc	status,2,c
 13702  002B5C  EFB2  F015         	goto	u9271
 13703  002B60  EFB4  F015         	goto	u9270
 13704  002B64                     u9271:
 13705  002B64  EFCC  F015         	goto	l8760
 13706  002B68                     u9270:
 13707  002B68                     
 13708                           ; BSR set to: 0
 13709  002B68  8167               	bsf	___fldiv@grs& (0+255),0,b
 13710  002B6A  EFCC  F015         	goto	l8760
 13711  002B6E                     l8754:
 13712                           
 13713                           ; BSR set to: 0
 13714  002B6E  90D8               	bcf	status,0,c
 13715  002B70  3644               	rlcf	___fldiv@b^0,f,c
 13716  002B72  3645               	rlcf	(___fldiv@b+1)^0,f,c
 13717  002B74  3646               	rlcf	(___fldiv@b+2)^0,f,c
 13718  002B76  3647               	rlcf	(___fldiv@b+3)^0,f,c
 13719  002B78                     
 13720                           ; BSR set to: 0
 13721  002B78  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13722  002B7A  EFC1  F015         	goto	u9281
 13723  002B7E  EFC3  F015         	goto	u9280
 13724  002B82                     u9281:
 13725  002B82  EFC4  F015         	goto	l1555
 13726  002B86                     u9280:
 13727  002B86                     
 13728                           ; BSR set to: 0
 13729  002B86  8044               	bsf	___fldiv@b^0,0,c
 13730  002B88                     l1555:
 13731                           
 13732                           ; BSR set to: 0
 13733  002B88  90D8               	bcf	status,0,c
 13734  002B8A  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13735  002B8C  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13736  002B8E  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13737  002B90  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13738  002B92  0765               	decf	___fldiv@new_exp& (0+255),f,b
 13739  002B94  A0D8               	btfss	status,0,c
 13740  002B96  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13741  002B98                     l8760:
 13742                           
 13743                           ; BSR set to: 0
 13744  002B98  AE46               	btfss	(___fldiv@b+2)^0,7,c
 13745  002B9A  EFD1  F015         	goto	u9291
 13746  002B9E  EFD3  F015         	goto	u9290
 13747  002BA2                     u9291:
 13748  002BA2  EFB7  F015         	goto	l8754
 13749  002BA6                     u9290:
 13750  002BA6                     
 13751                           ; BSR set to: 0
 13752  002BA6  0E00               	movlw	0
 13753  002BA8  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13754  002BAA                     
 13755                           ; BSR set to: 0
 13756  002BAA  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13757  002BAC  EFDA  F015         	goto	u9301
 13758  002BB0  EFDC  F015         	goto	u9300
 13759  002BB4                     u9301:
 13760  002BB4  EF00  F016         	goto	l1557
 13761  002BB8                     u9300:
 13762  002BB8                     
 13763                           ; BSR set to: 0
 13764  002BB8  0EFF               	movlw	255
 13765  002BBA  1567               	andwf	___fldiv@grs& (0+255),w,b
 13766  002BBC  6E4C               	movwf	??___fldiv^0,c
 13767  002BBE  0EFF               	movlw	255
 13768  002BC0  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13769  002BC2  6E4D               	movwf	(??___fldiv+1)^0,c
 13770  002BC4  0EFF               	movlw	255
 13771  002BC6  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13772  002BC8  6E4E               	movwf	(??___fldiv+2)^0,c
 13773  002BCA  0E7F               	movlw	127
 13774  002BCC  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13775  002BCE  6E4F               	movwf	(??___fldiv+3)^0,c
 13776  002BD0  504C               	movf	??___fldiv^0,w,c
 13777  002BD2  104D               	iorwf	(??___fldiv+1)^0,w,c
 13778  002BD4  104E               	iorwf	(??___fldiv+2)^0,w,c
 13779  002BD6  104F               	iorwf	(??___fldiv+3)^0,w,c
 13780  002BD8  B4D8               	btfsc	status,2,c
 13781  002BDA  EFF1  F015         	goto	u9311
 13782  002BDE  EFF3  F015         	goto	u9310
 13783  002BE2                     u9311:
 13784  002BE2  EFF7  F015         	goto	l1558
 13785  002BE6                     u9310:
 13786  002BE6                     l8768:
 13787                           
 13788                           ; BSR set to: 0
 13789  002BE6  0E01               	movlw	1
 13790  002BE8  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13791  002BEA  EF00  F016         	goto	l1557
 13792  002BEE                     l1558:
 13793                           
 13794                           ; BSR set to: 0
 13795  002BEE  A044               	btfss	___fldiv@b^0,0,c
 13796  002BF0  EFFC  F015         	goto	u9321
 13797  002BF4  EFFE  F015         	goto	u9320
 13798  002BF8                     u9321:
 13799  002BF8  EF00  F016         	goto	l1557
 13800  002BFC                     u9320:
 13801  002BFC  EFF3  F015         	goto	l8768
 13802  002C00                     l1557:
 13803                           
 13804                           ; BSR set to: 0
 13805  002C00  516C               	movf	___fldiv@aexp& (0+255),w,b
 13806  002C02  B4D8               	btfsc	status,2,c
 13807  002C04  EF06  F016         	goto	u9331
 13808  002C08  EF08  F016         	goto	u9330
 13809  002C0C                     u9331:
 13810  002C0C  EF2C  F016         	goto	l8780
 13811  002C10                     u9330:
 13812  002C10                     
 13813                           ; BSR set to: 0
 13814  002C10  0E01               	movlw	1
 13815  002C12  2644               	addwf	___fldiv@b^0,f,c
 13816  002C14  0E00               	movlw	0
 13817  002C16  2245               	addwfc	(___fldiv@b+1)^0,f,c
 13818  002C18  2246               	addwfc	(___fldiv@b+2)^0,f,c
 13819  002C1A  2247               	addwfc	(___fldiv@b+3)^0,f,c
 13820  002C1C                     
 13821                           ; BSR set to: 0
 13822  002C1C  A047               	btfss	(___fldiv@b+3)^0,0,c
 13823  002C1E  EF13  F016         	goto	u9341
 13824  002C22  EF15  F016         	goto	u9340
 13825  002C26                     u9341:
 13826  002C26  EF2C  F016         	goto	l8780
 13827  002C2A                     u9340:
 13828  002C2A                     
 13829                           ; BSR set to: 0
 13830  002C2A  C044  F04C         	movff	___fldiv@b,??___fldiv
 13831  002C2E  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
 13832  002C32  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
 13833  002C36  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
 13834  002C3A  344F               	rlcf	(??___fldiv+3)^0,w,c
 13835  002C3C  324F               	rrcf	(??___fldiv+3)^0,f,c
 13836  002C3E  324E               	rrcf	(??___fldiv+2)^0,f,c
 13837  002C40  324D               	rrcf	(??___fldiv+1)^0,f,c
 13838  002C42  324C               	rrcf	??___fldiv^0,f,c
 13839  002C44  C04C  F044         	movff	??___fldiv,___fldiv@b
 13840  002C48  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
 13841  002C4C  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
 13842  002C50  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
 13843  002C54                     
 13844                           ; BSR set to: 0
 13845  002C54  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 13846  002C56  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13847  002C58                     l8780:
 13848                           
 13849                           ; BSR set to: 0
 13850  002C58  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13851  002C5A  EF37  F016         	goto	u9351
 13852  002C5E  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13853  002C60  E108               	bnz	u9350
 13854  002C62  2965               	incf	___fldiv@new_exp& (0+255),w,b
 13855  002C64  A0D8               	btfss	status,0,c
 13856  002C66  EF37  F016         	goto	u9351
 13857  002C6A  EF39  F016         	goto	u9350
 13858  002C6E                     u9351:
 13859  002C6E  EF44  F016         	goto	l8784
 13860  002C72                     u9350:
 13861  002C72                     
 13862                           ; BSR set to: 0
 13863  002C72  0E00               	movlw	0
 13864  002C74  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13865  002C76  6965               	setf	___fldiv@new_exp& (0+255),b
 13866  002C78  0E00               	movlw	0
 13867  002C7A  6E44               	movwf	___fldiv@b^0,c
 13868  002C7C  0E00               	movlw	0
 13869  002C7E  6E45               	movwf	(___fldiv@b+1)^0,c
 13870  002C80  0E00               	movlw	0
 13871  002C82  6E46               	movwf	(___fldiv@b+2)^0,c
 13872  002C84  0E00               	movlw	0
 13873  002C86  6E47               	movwf	(___fldiv@b+3)^0,c
 13874  002C88                     l8784:
 13875                           
 13876                           ; BSR set to: 0
 13877  002C88  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13878  002C8A  EF51  F016         	goto	u9360
 13879  002C8E  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13880  002C90  E106               	bnz	u9361
 13881  002C92  0565               	decf	___fldiv@new_exp& (0+255),w,b
 13882  002C94  B0D8               	btfsc	status,0,c
 13883  002C96  EF4F  F016         	goto	u9361
 13884  002C9A  EF51  F016         	goto	u9360
 13885  002C9E                     u9361:
 13886  002C9E  EF5F  F016         	goto	l8788
 13887  002CA2                     u9360:
 13888  002CA2                     
 13889                           ; BSR set to: 0
 13890  002CA2  0E00               	movlw	0
 13891  002CA4  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13892  002CA6  0E00               	movlw	0
 13893  002CA8  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13894  002CAA  0E00               	movlw	0
 13895  002CAC  6E44               	movwf	___fldiv@b^0,c
 13896  002CAE  0E00               	movlw	0
 13897  002CB0  6E45               	movwf	(___fldiv@b+1)^0,c
 13898  002CB2  0E00               	movlw	0
 13899  002CB4  6E46               	movwf	(___fldiv@b+2)^0,c
 13900  002CB6  0E00               	movlw	0
 13901  002CB8  6E47               	movwf	(___fldiv@b+3)^0,c
 13902  002CBA  0E00               	movlw	0
 13903  002CBC  6F64               	movwf	___fldiv@sign& (0+255),b
 13904  002CBE                     l8788:
 13905                           
 13906                           ; BSR set to: 0
 13907  002CBE  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 13908  002CC2                     
 13909                           ; BSR set to: 0
 13910  002CC2  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 13911  002CC4  EF66  F016         	goto	u9371
 13912  002CC8  EF68  F016         	goto	u9370
 13913  002CCC                     u9371:
 13914  002CCC  EF6B  F016         	goto	l8794
 13915  002CD0                     u9370:
 13916  002CD0                     
 13917                           ; BSR set to: 0
 13918  002CD0  8E46               	bsf	(___fldiv@b+2)^0,7,c
 13919  002CD2  EF6C  F016         	goto	l8796
 13920  002CD6                     l8794:
 13921                           
 13922                           ; BSR set to: 0
 13923  002CD6  9E46               	bcf	(___fldiv@b+2)^0,7,c
 13924  002CD8                     l8796:
 13925                           
 13926                           ; BSR set to: 0
 13927  002CD8  90D8               	bcf	status,0,c
 13928  002CDA  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 13929  002CDC  6E47               	movwf	(___fldiv@b+3)^0,c
 13930  002CDE  EF22  F015         	goto	l8710
 13931  002CE2                     l1544:
 13932                           
 13933                           ; BSR set to: 0
 13934  002CE2  0012               	return		;funcret
 13935  002CE4                     __end_of___fldiv:
 13936                           	opt callstack 0
 13937                           
 13938 ;; *************** function ___awmod *****************
 13939 ;; Defined at:
 13940 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13941 ;; Parameters:    Size  Location     Type
 13942 ;;  dividend        2    5[COMRAM] int 
 13943 ;;  divisor         2    7[COMRAM] int 
 13944 ;; Auto vars:     Size  Location     Type
 13945 ;;  sign            1   10[COMRAM] unsigned char 
 13946 ;;  counter         1    9[COMRAM] unsigned char 
 13947 ;; Return value:  Size  Location     Type
 13948 ;;                  2    5[COMRAM] int 
 13949 ;; Registers used:
 13950 ;;		wreg, status,2, status,0
 13951 ;; Tracked objects:
 13952 ;;		On entry : 0/0
 13953 ;;		On exit  : 0/0
 13954 ;;		Unchanged: 0/0
 13955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13956 ;;      Params:         4       0       0       0       0       0       0       0       0
 13957 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13958 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13959 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13960 ;;Total ram usage:        6 bytes
 13961 ;; Hardware stack levels used:    1
 13962 ;; Hardware stack levels required when called:    2
 13963 ;; This function calls:
 13964 ;;		Nothing
 13965 ;; This function is called by:
 13966 ;;		_efgtoa
 13967 ;; This function uses a non-reentrant model
 13968 ;;
 13969                           
 13970                           	psect	text49
 13971  004B62                     __ptext49:
 13972                           	opt callstack 0
 13973  004B62                     ___awmod:
 13974                           	opt callstack 23
 13975  004B62  0E00               	movlw	0
 13976  004B64  6E0B               	movwf	___awmod@sign^0,c
 13977  004B66  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 13978  004B68  EFBA  F025         	goto	u9630
 13979  004B6C  EFB8  F025         	goto	u9631
 13980  004B70                     u9631:
 13981  004B70  EFC0  F025         	goto	l8992
 13982  004B74                     u9630:
 13983  004B74  6C06               	negf	___awmod@dividend^0,c
 13984  004B76  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13985  004B78  B0D8               	btfsc	status,0,c
 13986  004B7A  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13987  004B7C  0E01               	movlw	1
 13988  004B7E  6E0B               	movwf	___awmod@sign^0,c
 13989  004B80                     l8992:
 13990  004B80  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 13991  004B82  EFC7  F025         	goto	u9640
 13992  004B86  EFC5  F025         	goto	u9641
 13993  004B8A                     u9641:
 13994  004B8A  EFCB  F025         	goto	l8996
 13995  004B8E                     u9640:
 13996  004B8E  6C08               	negf	___awmod@divisor^0,c
 13997  004B90  1E09               	comf	(___awmod@divisor+1)^0,f,c
 13998  004B92  B0D8               	btfsc	status,0,c
 13999  004B94  2A09               	incf	(___awmod@divisor+1)^0,f,c
 14000  004B96                     l8996:
 14001  004B96  5008               	movf	___awmod@divisor^0,w,c
 14002  004B98  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 14003  004B9A  B4D8               	btfsc	status,2,c
 14004  004B9C  EFD2  F025         	goto	u9651
 14005  004BA0  EFD4  F025         	goto	u9650
 14006  004BA4                     u9651:
 14007  004BA4  EFF8  F025         	goto	l9012
 14008  004BA8                     u9650:
 14009  004BA8  0E01               	movlw	1
 14010  004BAA  6E0A               	movwf	___awmod@counter^0,c
 14011  004BAC  EFDC  F025         	goto	l9002
 14012  004BB0                     l9000:
 14013  004BB0  90D8               	bcf	status,0,c
 14014  004BB2  3608               	rlcf	___awmod@divisor^0,f,c
 14015  004BB4  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 14016  004BB6  2A0A               	incf	___awmod@counter^0,f,c
 14017  004BB8                     l9002:
 14018  004BB8  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 14019  004BBA  EFE1  F025         	goto	u9661
 14020  004BBE  EFE3  F025         	goto	u9660
 14021  004BC2                     u9661:
 14022  004BC2  EFD8  F025         	goto	l9000
 14023  004BC6                     u9660:
 14024  004BC6                     l9004:
 14025  004BC6  5008               	movf	___awmod@divisor^0,w,c
 14026  004BC8  5C06               	subwf	___awmod@dividend^0,w,c
 14027  004BCA  5009               	movf	(___awmod@divisor+1)^0,w,c
 14028  004BCC  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 14029  004BCE  A0D8               	btfss	status,0,c
 14030  004BD0  EFEC  F025         	goto	u9671
 14031  004BD4  EFEE  F025         	goto	u9670
 14032  004BD8                     u9671:
 14033  004BD8  EFF2  F025         	goto	l9008
 14034  004BDC                     u9670:
 14035  004BDC  5008               	movf	___awmod@divisor^0,w,c
 14036  004BDE  5E06               	subwf	___awmod@dividend^0,f,c
 14037  004BE0  5009               	movf	(___awmod@divisor+1)^0,w,c
 14038  004BE2  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 14039  004BE4                     l9008:
 14040  004BE4  90D8               	bcf	status,0,c
 14041  004BE6  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 14042  004BE8  3208               	rrcf	___awmod@divisor^0,f,c
 14043  004BEA  2E0A               	decfsz	___awmod@counter^0,f,c
 14044  004BEC  EFE3  F025         	goto	l9004
 14045  004BF0                     l9012:
 14046  004BF0  500B               	movf	___awmod@sign^0,w,c
 14047  004BF2  B4D8               	btfsc	status,2,c
 14048  004BF4  EFFE  F025         	goto	u9681
 14049  004BF8  EF00  F026         	goto	u9680
 14050  004BFC                     u9681:
 14051  004BFC  EF04  F026         	goto	l9016
 14052  004C00                     u9680:
 14053  004C00  6C06               	negf	___awmod@dividend^0,c
 14054  004C02  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14055  004C04  B0D8               	btfsc	status,0,c
 14056  004C06  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14057  004C08                     l9016:
 14058  004C08  C006  F006         	movff	___awmod@dividend,?___awmod
 14059  004C0C  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 14060  004C10  0012               	return		;funcret
 14061  004C12                     __end_of___awmod:
 14062                           	opt callstack 0
 14063                           
 14064 ;; *************** function ___awdiv *****************
 14065 ;; Defined at:
 14066 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 14067 ;; Parameters:    Size  Location     Type
 14068 ;;  dividend        2    5[COMRAM] int 
 14069 ;;  divisor         2    7[COMRAM] int 
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;  quotient        2   11[COMRAM] int 
 14072 ;;  sign            1   10[COMRAM] unsigned char 
 14073 ;;  counter         1    9[COMRAM] unsigned char 
 14074 ;; Return value:  Size  Location     Type
 14075 ;;                  2    5[COMRAM] int 
 14076 ;; Registers used:
 14077 ;;		wreg, status,2, status,0
 14078 ;; Tracked objects:
 14079 ;;		On entry : 0/0
 14080 ;;		On exit  : 0/0
 14081 ;;		Unchanged: 0/0
 14082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14083 ;;      Params:         4       0       0       0       0       0       0       0       0
 14084 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14085 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14086 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14087 ;;Total ram usage:        8 bytes
 14088 ;; Hardware stack levels used:    1
 14089 ;; Hardware stack levels required when called:    2
 14090 ;; This function calls:
 14091 ;;		Nothing
 14092 ;; This function is called by:
 14093 ;;		_efgtoa
 14094 ;; This function uses a non-reentrant model
 14095 ;;
 14096                           
 14097                           	psect	text50
 14098  0049EC                     __ptext50:
 14099                           	opt callstack 0
 14100  0049EC                     ___awdiv:
 14101                           	opt callstack 23
 14102  0049EC  0E00               	movlw	0
 14103  0049EE  6E0B               	movwf	___awdiv@sign^0,c
 14104  0049F0  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 14105  0049F2  EFFF  F024         	goto	u9570
 14106  0049F6  EFFD  F024         	goto	u9571
 14107  0049FA                     u9571:
 14108  0049FA  EF05  F025         	goto	l8948
 14109  0049FE                     u9570:
 14110  0049FE  6C08               	negf	___awdiv@divisor^0,c
 14111  004A00  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 14112  004A02  B0D8               	btfsc	status,0,c
 14113  004A04  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 14114  004A06  0E01               	movlw	1
 14115  004A08  6E0B               	movwf	___awdiv@sign^0,c
 14116  004A0A                     l8948:
 14117  004A0A  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 14118  004A0C  EF0C  F025         	goto	u9580
 14119  004A10  EF0A  F025         	goto	u9581
 14120  004A14                     u9581:
 14121  004A14  EF12  F025         	goto	l8954
 14122  004A18                     u9580:
 14123  004A18  6C06               	negf	___awdiv@dividend^0,c
 14124  004A1A  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 14125  004A1C  B0D8               	btfsc	status,0,c
 14126  004A1E  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 14127  004A20  0E01               	movlw	1
 14128  004A22  1A0B               	xorwf	___awdiv@sign^0,f,c
 14129  004A24                     l8954:
 14130  004A24  0E00               	movlw	0
 14131  004A26  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 14132  004A28  0E00               	movlw	0
 14133  004A2A  6E0C               	movwf	___awdiv@quotient^0,c
 14134  004A2C  5008               	movf	___awdiv@divisor^0,w,c
 14135  004A2E  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 14136  004A30  B4D8               	btfsc	status,2,c
 14137  004A32  EF1D  F025         	goto	u9591
 14138  004A36  EF1F  F025         	goto	u9590
 14139  004A3A                     u9591:
 14140  004A3A  EF47  F025         	goto	l8976
 14141  004A3E                     u9590:
 14142  004A3E  0E01               	movlw	1
 14143  004A40  6E0A               	movwf	___awdiv@counter^0,c
 14144  004A42  EF27  F025         	goto	l8962
 14145  004A46                     l8960:
 14146  004A46  90D8               	bcf	status,0,c
 14147  004A48  3608               	rlcf	___awdiv@divisor^0,f,c
 14148  004A4A  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 14149  004A4C  2A0A               	incf	___awdiv@counter^0,f,c
 14150  004A4E                     l8962:
 14151  004A4E  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 14152  004A50  EF2C  F025         	goto	u9601
 14153  004A54  EF2E  F025         	goto	u9600
 14154  004A58                     u9601:
 14155  004A58  EF23  F025         	goto	l8960
 14156  004A5C                     u9600:
 14157  004A5C                     l8964:
 14158  004A5C  90D8               	bcf	status,0,c
 14159  004A5E  360C               	rlcf	___awdiv@quotient^0,f,c
 14160  004A60  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 14161  004A62  5008               	movf	___awdiv@divisor^0,w,c
 14162  004A64  5C06               	subwf	___awdiv@dividend^0,w,c
 14163  004A66  5009               	movf	(___awdiv@divisor+1)^0,w,c
 14164  004A68  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 14165  004A6A  A0D8               	btfss	status,0,c
 14166  004A6C  EF3A  F025         	goto	u9611
 14167  004A70  EF3C  F025         	goto	u9610
 14168  004A74                     u9611:
 14169  004A74  EF41  F025         	goto	l8972
 14170  004A78                     u9610:
 14171  004A78  5008               	movf	___awdiv@divisor^0,w,c
 14172  004A7A  5E06               	subwf	___awdiv@dividend^0,f,c
 14173  004A7C  5009               	movf	(___awdiv@divisor+1)^0,w,c
 14174  004A7E  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 14175  004A80  800C               	bsf	___awdiv@quotient^0,0,c
 14176  004A82                     l8972:
 14177  004A82  90D8               	bcf	status,0,c
 14178  004A84  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 14179  004A86  3208               	rrcf	___awdiv@divisor^0,f,c
 14180  004A88  2E0A               	decfsz	___awdiv@counter^0,f,c
 14181  004A8A  EF2E  F025         	goto	l8964
 14182  004A8E                     l8976:
 14183  004A8E  500B               	movf	___awdiv@sign^0,w,c
 14184  004A90  B4D8               	btfsc	status,2,c
 14185  004A92  EF4D  F025         	goto	u9621
 14186  004A96  EF4F  F025         	goto	u9620
 14187  004A9A                     u9621:
 14188  004A9A  EF53  F025         	goto	l8980
 14189  004A9E                     u9620:
 14190  004A9E  6C0C               	negf	___awdiv@quotient^0,c
 14191  004AA0  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 14192  004AA2  B0D8               	btfsc	status,0,c
 14193  004AA4  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 14194  004AA6                     l8980:
 14195  004AA6  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 14196  004AAA  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 14197  004AAE  0012               	return		;funcret
 14198  004AB0                     __end_of___awdiv:
 14199                           	opt callstack 0
 14200                           
 14201 ;; *************** function _dtoa *****************
 14202 ;; Defined at:
 14203 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14204 ;; Parameters:    Size  Location     Type
 14205 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 14206 ;;		 -> sprintf@f(6), 
 14207 ;;  d               8   34[COMRAM] long long 
 14208 ;; Auto vars:     Size  Location     Type
 14209 ;;  n               8   58[COMRAM] long long 
 14210 ;;  i               2   66[COMRAM] int 
 14211 ;;  s               2   56[COMRAM] int 
 14212 ;;  w               2   54[COMRAM] int 
 14213 ;;  p               2   52[COMRAM] int 
 14214 ;; Return value:  Size  Location     Type
 14215 ;;                  2   32[COMRAM] int 
 14216 ;; Registers used:
 14217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14218 ;; Tracked objects:
 14219 ;;		On entry : 0/0
 14220 ;;		On exit  : 0/0
 14221 ;;		Unchanged: 0/0
 14222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14223 ;;      Params:        10       0       0       0       0       0       0       0       0
 14224 ;;      Locals:        18       0       0       0       0       0       0       0       0
 14225 ;;      Temps:          8       0       0       0       0       0       0       0       0
 14226 ;;      Totals:        36       0       0       0       0       0       0       0       0
 14227 ;;Total ram usage:       36 bytes
 14228 ;; Hardware stack levels used:    1
 14229 ;; Hardware stack levels required when called:    6
 14230 ;; This function calls:
 14231 ;;		___aodiv
 14232 ;;		___aomod
 14233 ;;		_abs
 14234 ;;		_pad
 14235 ;; This function is called by:
 14236 ;;		_vfpfcnvrt
 14237 ;; This function uses a non-reentrant model
 14238 ;;
 14239                           
 14240                           	psect	text51
 14241  002CE4                     __ptext51:
 14242                           	opt callstack 0
 14243  002CE4                     _dtoa:
 14244                           	opt callstack 20
 14245  002CE4                     
 14246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 14247  002CE4  C023  F03B         	movff	dtoa@d,dtoa@n
 14248  002CE8  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
 14249  002CEC  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
 14250  002CF0  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
 14251  002CF4  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
 14252  002CF8  C028  F040         	movff	dtoa@d+5,dtoa@n+5
 14253  002CFC  C029  F041         	movff	dtoa@d+6,dtoa@n+6
 14254  002D00  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
 14255  002D04                     
 14256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 14257  002D04  BE42               	btfsc	(dtoa@n+7)^0,7,c
 14258  002D06  EF87  F016         	goto	u10141
 14259  002D0A  EF8A  F016         	goto	u10140
 14260  002D0E                     u10141:
 14261  002D0E  0E01               	movlw	1
 14262  002D10  EF8B  F016         	goto	u10150
 14263  002D14                     u10140:
 14264  002D14  0E00               	movlw	0
 14265  002D16                     u10150:
 14266  002D16  6E39               	movwf	dtoa@s^0,c
 14267  002D18  6A3A               	clrf	(dtoa@s+1)^0,c
 14268                           
 14269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 14270  002D1A  5039               	movf	dtoa@s^0,w,c
 14271  002D1C  103A               	iorwf	(dtoa@s+1)^0,w,c
 14272  002D1E  B4D8               	btfsc	status,2,c
 14273  002D20  EF94  F016         	goto	u10161
 14274  002D24  EF96  F016         	goto	u10160
 14275  002D28                     u10161:
 14276  002D28  EFA6  F016         	goto	l9262
 14277  002D2C                     u10160:
 14278  002D2C                     
 14279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 14280  002D2C  1E42               	comf	(dtoa@n+7)^0,f,c
 14281  002D2E  1E41               	comf	(dtoa@n+6)^0,f,c
 14282  002D30  1E40               	comf	(dtoa@n+5)^0,f,c
 14283  002D32  1E3F               	comf	(dtoa@n+4)^0,f,c
 14284  002D34  1E3E               	comf	(dtoa@n+3)^0,f,c
 14285  002D36  1E3D               	comf	(dtoa@n+2)^0,f,c
 14286  002D38  1E3C               	comf	(dtoa@n+1)^0,f,c
 14287  002D3A  6C3B               	negf	dtoa@n^0,c
 14288  002D3C  0E00               	movlw	0
 14289  002D3E  223C               	addwfc	(dtoa@n+1)^0,f,c
 14290  002D40  223D               	addwfc	(dtoa@n+2)^0,f,c
 14291  002D42  223E               	addwfc	(dtoa@n+3)^0,f,c
 14292  002D44  223F               	addwfc	(dtoa@n+4)^0,f,c
 14293  002D46  2240               	addwfc	(dtoa@n+5)^0,f,c
 14294  002D48  2241               	addwfc	(dtoa@n+6)^0,f,c
 14295  002D4A  2242               	addwfc	(dtoa@n+7)^0,f,c
 14296  002D4C                     l9262:
 14297                           
 14298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 14299  002D4C  0101               	movlb	1	; () banked
 14300  002D4E  BF31               	btfsc	(_prec+1)& (0+255),7,b
 14301  002D50  EFAC  F016         	goto	u10171
 14302  002D54  EFAE  F016         	goto	u10170
 14303  002D58                     u10171:
 14304  002D58  EFAF  F016         	goto	l9266
 14305  002D5C                     u10170:
 14306  002D5C                     
 14307                           ; BSR set to: 1
 14308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 14309  002D5C  9332               	bcf	_flags& (0+255),1,b
 14310  002D5E                     l9266:
 14311                           
 14312                           ; BSR set to: 1
 14313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 14314  002D5E  BF31               	btfsc	(_prec+1)& (0+255),7,b
 14315  002D60  EFBC  F016         	goto	u10180
 14316  002D64  5131               	movf	(_prec+1)& (0+255),w,b
 14317  002D66  E106               	bnz	u10181
 14318  002D68  0530               	decf	_prec& (0+255),w,b
 14319  002D6A  B0D8               	btfsc	status,0,c
 14320  002D6C  EFBA  F016         	goto	u10181
 14321  002D70  EFBC  F016         	goto	u10180
 14322  002D74                     u10181:
 14323  002D74  EFC2  F016         	goto	l813
 14324  002D78                     u10180:
 14325  002D78                     
 14326                           ; BSR set to: 1
 14327  002D78  0E00               	movlw	0
 14328  002D7A  6E36               	movwf	(dtoa@p+1)^0,c
 14329  002D7C  0E01               	movlw	1
 14330  002D7E  6E35               	movwf	dtoa@p^0,c
 14331  002D80  EFC6  F016         	goto	l815
 14332  002D84                     l813:
 14333                           
 14334                           ; BSR set to: 1
 14335  002D84  C130  F035         	movff	_prec,dtoa@p
 14336  002D88  C131  F036         	movff	_prec+1,dtoa@p+1
 14337  002D8C                     l815:
 14338                           
 14339                           ; BSR set to: 1
 14340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 14341  002D8C  C12E  F037         	movff	_width,dtoa@w
 14342  002D90  C12F  F038         	movff	_width+1,dtoa@w+1
 14343  002D94                     
 14344                           ; BSR set to: 1
 14345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 14346  002D94  5039               	movf	dtoa@s^0,w,c
 14347  002D96  103A               	iorwf	(dtoa@s+1)^0,w,c
 14348  002D98  A4D8               	btfss	status,2,c
 14349  002D9A  EFD1  F016         	goto	u10191
 14350  002D9E  EFD3  F016         	goto	u10190
 14351  002DA2                     u10191:
 14352  002DA2  EFDA  F016         	goto	l9274
 14353  002DA6                     u10190:
 14354  002DA6                     
 14355                           ; BSR set to: 1
 14356  002DA6  A532               	btfss	_flags& (0+255),2,b
 14357  002DA8  EFD8  F016         	goto	u10201
 14358  002DAC  EFDA  F016         	goto	u10200
 14359  002DB0                     u10201:
 14360  002DB0  EFDD  F016         	goto	l9276
 14361  002DB4                     u10200:
 14362  002DB4                     l9274:
 14363                           
 14364                           ; BSR set to: 1
 14365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 14366  002DB4  0637               	decf	dtoa@w^0,f,c
 14367  002DB6  A0D8               	btfss	status,0,c
 14368  002DB8  0638               	decf	(dtoa@w+1)^0,f,c
 14369  002DBA                     l9276:
 14370                           
 14371                           ; BSR set to: 1
 14372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 14373  002DBA  0E00               	movlw	0
 14374  002DBC  6E44               	movwf	(dtoa@i+1)^0,c
 14375  002DBE  0E4F               	movlw	79
 14376  002DC0  6E43               	movwf	dtoa@i^0,c
 14377  002DC2                     
 14378                           ; BSR set to: 1
 14379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 14380  002DC2  0E00               	movlw	0
 14381  002DC4  6F91               	movwf	(_dbuf+79)& (0+255),b
 14382                           
 14383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14384  002DC6  EF61  F017         	goto	l9290
 14385  002DCA                     l9280:
 14386                           
 14387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 14388  002DCA  0643               	decf	dtoa@i^0,f,c
 14389  002DCC  A0D8               	btfss	status,0,c
 14390  002DCE  0644               	decf	(dtoa@i+1)^0,f,c
 14391  002DD0                     
 14392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 14393  002DD0  0E42               	movlw	low _dbuf
 14394  002DD2  2443               	addwf	dtoa@i^0,w,c
 14395  002DD4  6ED9               	movwf	fsr2l,c
 14396  002DD6  0E01               	movlw	high _dbuf
 14397  002DD8  2044               	addwfc	(dtoa@i+1)^0,w,c
 14398  002DDA  6EDA               	movwf	fsr2h,c
 14399  002DDC  C03B  F006         	movff	dtoa@n,___aomod@dividend
 14400  002DE0  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
 14401  002DE4  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
 14402  002DE8  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
 14403  002DEC  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 14404  002DF0  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 14405  002DF4  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 14406  002DF8  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 14407  002DFC  0E0A               	movlw	10
 14408  002DFE  6E0E               	movwf	___aomod@divisor^0,c
 14409  002E00  0E00               	movlw	0
 14410  002E02  6E0F               	movwf	(___aomod@divisor+1)^0,c
 14411  002E04  0E00               	movlw	0
 14412  002E06  6E10               	movwf	(___aomod@divisor+2)^0,c
 14413  002E08  0E00               	movlw	0
 14414  002E0A  6E11               	movwf	(___aomod@divisor+3)^0,c
 14415  002E0C  0E00               	movlw	0
 14416  002E0E  6E12               	movwf	(___aomod@divisor+4)^0,c
 14417  002E10  0E00               	movlw	0
 14418  002E12  6E13               	movwf	(___aomod@divisor+5)^0,c
 14419  002E14  0E00               	movlw	0
 14420  002E16  6E14               	movwf	(___aomod@divisor+6)^0,c
 14421  002E18  0E00               	movlw	0
 14422  002E1A  6E15               	movwf	(___aomod@divisor+7)^0,c
 14423  002E1C  ECE1  F01E         	call	___aomod	;wreg free
 14424  002E20  C006  F02B         	movff	?___aomod,??_dtoa
 14425  002E24  C007  F02C         	movff	?___aomod+1,??_dtoa+1
 14426  002E28  C008  F02D         	movff	?___aomod+2,??_dtoa+2
 14427  002E2C  C009  F02E         	movff	?___aomod+3,??_dtoa+3
 14428  002E30  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
 14429  002E34  C00B  F030         	movff	?___aomod+5,??_dtoa+5
 14430  002E38  C00C  F031         	movff	?___aomod+6,??_dtoa+6
 14431  002E3C  C00D  F032         	movff	?___aomod+7,??_dtoa+7
 14432  002E40  C02B  F018         	movff	??_dtoa,abs@a
 14433  002E44  C02D  F019         	movff	??_dtoa+2,abs@a+1
 14434  002E48  EC7F  F02B         	call	_abs	;wreg free
 14435  002E4C  5018               	movf	?_abs^0,w,c
 14436  002E4E  0F30               	addlw	48
 14437  002E50  6EDF               	movwf	indf2,c
 14438  002E52                     
 14439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 14440  002E52  0635               	decf	dtoa@p^0,f,c
 14441  002E54  A0D8               	btfss	status,0,c
 14442  002E56  0636               	decf	(dtoa@p+1)^0,f,c
 14443  002E58                     
 14444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 14445  002E58  0637               	decf	dtoa@w^0,f,c
 14446  002E5A  A0D8               	btfss	status,0,c
 14447  002E5C  0638               	decf	(dtoa@w+1)^0,f,c
 14448  002E5E                     
 14449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 14450  002E5E  C03B  F006         	movff	dtoa@n,___aodiv@dividend
 14451  002E62  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 14452  002E66  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 14453  002E6A  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 14454  002E6E  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 14455  002E72  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 14456  002E76  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 14457  002E7A  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 14458  002E7E  0E0A               	movlw	10
 14459  002E80  6E0E               	movwf	___aodiv@divisor^0,c
 14460  002E82  0E00               	movlw	0
 14461  002E84  6E0F               	movwf	(___aodiv@divisor+1)^0,c
 14462  002E86  0E00               	movlw	0
 14463  002E88  6E10               	movwf	(___aodiv@divisor+2)^0,c
 14464  002E8A  0E00               	movlw	0
 14465  002E8C  6E11               	movwf	(___aodiv@divisor+3)^0,c
 14466  002E8E  0E00               	movlw	0
 14467  002E90  6E12               	movwf	(___aodiv@divisor+4)^0,c
 14468  002E92  0E00               	movlw	0
 14469  002E94  6E13               	movwf	(___aodiv@divisor+5)^0,c
 14470  002E96  0E00               	movlw	0
 14471  002E98  6E14               	movwf	(___aodiv@divisor+6)^0,c
 14472  002E9A  0E00               	movlw	0
 14473  002E9C  6E15               	movwf	(___aodiv@divisor+7)^0,c
 14474  002E9E  EC5F  F01D         	call	___aodiv	;wreg free
 14475  002EA2  C006  F03B         	movff	?___aodiv,dtoa@n
 14476  002EA6  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
 14477  002EAA  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
 14478  002EAE  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
 14479  002EB2  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
 14480  002EB6  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
 14481  002EBA  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
 14482  002EBE  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
 14483  002EC2                     l9290:
 14484                           
 14485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14486  002EC2  BE44               	btfsc	(dtoa@i+1)^0,7,c
 14487  002EC4  EF6C  F017         	goto	u10211
 14488  002EC8  5044               	movf	(dtoa@i+1)^0,w,c
 14489  002ECA  E108               	bnz	u10210
 14490  002ECC  0443               	decf	dtoa@i^0,w,c
 14491  002ECE  A0D8               	btfss	status,0,c
 14492  002ED0  EF6C  F017         	goto	u10211
 14493  002ED4  EF6E  F017         	goto	u10210
 14494  002ED8                     u10211:
 14495  002ED8  EF9F  F017         	goto	l9300
 14496  002EDC                     u10210:
 14497  002EDC  503B               	movf	dtoa@n^0,w,c
 14498  002EDE  103C               	iorwf	(dtoa@n+1)^0,w,c
 14499  002EE0  103D               	iorwf	(dtoa@n+2)^0,w,c
 14500  002EE2  103E               	iorwf	(dtoa@n+3)^0,w,c
 14501  002EE4  103F               	iorwf	(dtoa@n+4)^0,w,c
 14502  002EE6  1040               	iorwf	(dtoa@n+5)^0,w,c
 14503  002EE8  1041               	iorwf	(dtoa@n+6)^0,w,c
 14504  002EEA  1042               	iorwf	(dtoa@n+7)^0,w,c
 14505  002EEC  A4D8               	btfss	status,2,c
 14506  002EEE  EF7B  F017         	goto	u10221
 14507  002EF2  EF7D  F017         	goto	u10220
 14508  002EF6                     u10221:
 14509  002EF6  EFE5  F016         	goto	l9280
 14510  002EFA                     u10220:
 14511  002EFA  BE36               	btfsc	(dtoa@p+1)^0,7,c
 14512  002EFC  EF8A  F017         	goto	u10230
 14513  002F00  5036               	movf	(dtoa@p+1)^0,w,c
 14514  002F02  E106               	bnz	u10231
 14515  002F04  0435               	decf	dtoa@p^0,w,c
 14516  002F06  B0D8               	btfsc	status,0,c
 14517  002F08  EF88  F017         	goto	u10231
 14518  002F0C  EF8A  F017         	goto	u10230
 14519  002F10                     u10231:
 14520  002F10  EFE5  F016         	goto	l9280
 14521  002F14                     u10230:
 14522  002F14  BE38               	btfsc	(dtoa@w+1)^0,7,c
 14523  002F16  EF95  F017         	goto	u10241
 14524  002F1A  5038               	movf	(dtoa@w+1)^0,w,c
 14525  002F1C  E108               	bnz	u10240
 14526  002F1E  0437               	decf	dtoa@w^0,w,c
 14527  002F20  A0D8               	btfss	status,0,c
 14528  002F22  EF95  F017         	goto	u10241
 14529  002F26  EF97  F017         	goto	u10240
 14530  002F2A                     u10241:
 14531  002F2A  EF9F  F017         	goto	l9300
 14532  002F2E                     u10240:
 14533  002F2E  0101               	movlb	1	; () banked
 14534  002F30  B332               	btfsc	_flags& (0+255),1,b
 14535  002F32  EF9D  F017         	goto	u10251
 14536  002F36  EF9F  F017         	goto	u10250
 14537  002F3A                     u10251:
 14538  002F3A  EFE5  F016         	goto	l9280
 14539  002F3E                     u10250:
 14540  002F3E                     l9300:
 14541                           
 14542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 14543  002F3E  5039               	movf	dtoa@s^0,w,c
 14544  002F40  103A               	iorwf	(dtoa@s+1)^0,w,c
 14545  002F42  A4D8               	btfss	status,2,c
 14546  002F44  EFA6  F017         	goto	u10261
 14547  002F48  EFA8  F017         	goto	u10260
 14548  002F4C                     u10261:
 14549  002F4C  EFB0  F017         	goto	l9304
 14550  002F50                     u10260:
 14551  002F50  0101               	movlb	1	; () banked
 14552  002F52  A532               	btfss	_flags& (0+255),2,b
 14553  002F54  EFAE  F017         	goto	u10271
 14554  002F58  EFB0  F017         	goto	u10270
 14555  002F5C                     u10271:
 14556  002F5C  EFCE  F017         	goto	l9314
 14557  002F60                     u10270:
 14558  002F60                     l9304:
 14559                           
 14560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 14561  002F60  0643               	decf	dtoa@i^0,f,c
 14562  002F62  A0D8               	btfss	status,0,c
 14563  002F64  0644               	decf	(dtoa@i+1)^0,f,c
 14564  002F66                     
 14565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 14566  002F66  5039               	movf	dtoa@s^0,w,c
 14567  002F68  103A               	iorwf	(dtoa@s+1)^0,w,c
 14568  002F6A  A4D8               	btfss	status,2,c
 14569  002F6C  EFBA  F017         	goto	u10281
 14570  002F70  EFBC  F017         	goto	u10280
 14571  002F74                     u10281:
 14572  002F74  EFC2  F017         	goto	l9310
 14573  002F78                     u10280:
 14574  002F78  0E00               	movlw	0
 14575  002F7A  6E34               	movwf	(_dtoa$905+1)^0,c
 14576  002F7C  0E2B               	movlw	43
 14577  002F7E  6E33               	movwf	_dtoa$905^0,c
 14578  002F80  EFC6  F017         	goto	l9312
 14579  002F84                     l9310:
 14580  002F84  0E00               	movlw	0
 14581  002F86  6E34               	movwf	(_dtoa$905+1)^0,c
 14582  002F88  0E2D               	movlw	45
 14583  002F8A  6E33               	movwf	_dtoa$905^0,c
 14584  002F8C                     l9312:
 14585  002F8C  0E42               	movlw	low _dbuf
 14586  002F8E  2443               	addwf	dtoa@i^0,w,c
 14587  002F90  6ED9               	movwf	fsr2l,c
 14588  002F92  0E01               	movlw	high _dbuf
 14589  002F94  2044               	addwfc	(dtoa@i+1)^0,w,c
 14590  002F96  6EDA               	movwf	fsr2h,c
 14591  002F98  C033  FFDF         	movff	_dtoa$905,indf2
 14592  002F9C                     l9314:
 14593                           
 14594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 14595  002F9C  C021  F016         	movff	dtoa@fp,pad@fp
 14596  002FA0  C022  F017         	movff	dtoa@fp+1,pad@fp+1
 14597  002FA4  0E42               	movlw	low _dbuf
 14598  002FA6  2443               	addwf	dtoa@i^0,w,c
 14599  002FA8  6E18               	movwf	pad@buf^0,c
 14600  002FAA  0E01               	movlw	high _dbuf
 14601  002FAC  2044               	addwfc	(dtoa@i+1)^0,w,c
 14602  002FAE  6E19               	movwf	(pad@buf+1)^0,c
 14603  002FB0  C037  F01A         	movff	dtoa@w,pad@p
 14604  002FB4  C038  F01B         	movff	dtoa@w+1,pad@p+1
 14605  002FB8  EC93  F024         	call	_pad	;wreg free
 14606  002FBC  C016  F021         	movff	?_pad,?_dtoa
 14607  002FC0  C017  F022         	movff	?_pad+1,?_dtoa+1
 14608  002FC4  0012               	return		;funcret
 14609  002FC6                     __end_of_dtoa:
 14610                           	opt callstack 0
 14611                           
 14612 ;; *************** function _abs *****************
 14613 ;; Defined at:
 14614 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 14615 ;; Parameters:    Size  Location     Type
 14616 ;;  a               2   23[COMRAM] int 
 14617 ;; Auto vars:     Size  Location     Type
 14618 ;;		None
 14619 ;; Return value:  Size  Location     Type
 14620 ;;                  2   23[COMRAM] int 
 14621 ;; Registers used:
 14622 ;;		wreg, status,2, status,0
 14623 ;; Tracked objects:
 14624 ;;		On entry : 0/0
 14625 ;;		On exit  : 0/0
 14626 ;;		Unchanged: 0/0
 14627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14628 ;;      Params:         2       0       0       0       0       0       0       0       0
 14629 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14630 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14631 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14632 ;;Total ram usage:        4 bytes
 14633 ;; Hardware stack levels used:    1
 14634 ;; Hardware stack levels required when called:    2
 14635 ;; This function calls:
 14636 ;;		Nothing
 14637 ;; This function is called by:
 14638 ;;		_dtoa
 14639 ;; This function uses a non-reentrant model
 14640 ;;
 14641                           
 14642                           	psect	text52
 14643  0056FE                     __ptext52:
 14644                           	opt callstack 0
 14645  0056FE                     _abs:
 14646                           	opt callstack 23
 14647  0056FE  BE19               	btfsc	(abs@a+1)^0,7,c
 14648  005700  EF8C  F02B         	goto	u8770
 14649  005704  5019               	movf	(abs@a+1)^0,w,c
 14650  005706  E106               	bnz	u8771
 14651  005708  0418               	decf	abs@a^0,w,c
 14652  00570A  B0D8               	btfsc	status,0,c
 14653  00570C  EF8A  F02B         	goto	u8771
 14654  005710  EF8C  F02B         	goto	u8770
 14655  005714                     u8771:
 14656  005714  EF9A  F02B         	goto	l1648
 14657  005718                     u8770:
 14658  005718  C018  F01A         	movff	abs@a,??_abs
 14659  00571C  C019  F01B         	movff	abs@a+1,??_abs+1
 14660  005720  1E1A               	comf	??_abs^0,f,c
 14661  005722  1E1B               	comf	(??_abs+1)^0,f,c
 14662  005724  4A1A               	infsnz	??_abs^0,f,c
 14663  005726  2A1B               	incf	(??_abs+1)^0,f,c
 14664  005728  C01A  F018         	movff	??_abs,?_abs
 14665  00572C  C01B  F019         	movff	??_abs+1,?_abs+1
 14666  005730  EF9E  F02B         	goto	l1651
 14667  005734                     l1648:
 14668  005734  C018  F018         	movff	abs@a,?_abs
 14669  005738  C019  F019         	movff	abs@a+1,?_abs+1
 14670  00573C                     l1651:
 14671  00573C  0012               	return		;funcret
 14672  00573E                     __end_of_abs:
 14673                           	opt callstack 0
 14674                           
 14675 ;; *************** function ___aomod *****************
 14676 ;; Defined at:
 14677 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 14678 ;; Parameters:    Size  Location     Type
 14679 ;;  dividend        8    5[COMRAM] long long 
 14680 ;;  divisor         8   13[COMRAM] long long 
 14681 ;; Auto vars:     Size  Location     Type
 14682 ;;  sign            1   22[COMRAM] unsigned char 
 14683 ;;  counter         1   21[COMRAM] unsigned char 
 14684 ;; Return value:  Size  Location     Type
 14685 ;;                  8    5[COMRAM] long long 
 14686 ;; Registers used:
 14687 ;;		wreg, status,2, status,0
 14688 ;; Tracked objects:
 14689 ;;		On entry : 0/0
 14690 ;;		On exit  : 0/0
 14691 ;;		Unchanged: 0/0
 14692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14693 ;;      Params:        16       0       0       0       0       0       0       0       0
 14694 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14695 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14696 ;;      Totals:        18       0       0       0       0       0       0       0       0
 14697 ;;Total ram usage:       18 bytes
 14698 ;; Hardware stack levels used:    1
 14699 ;; Hardware stack levels required when called:    2
 14700 ;; This function calls:
 14701 ;;		Nothing
 14702 ;; This function is called by:
 14703 ;;		_dtoa
 14704 ;; This function uses a non-reentrant model
 14705 ;;
 14706                           
 14707                           	psect	text53
 14708  003DC2                     __ptext53:
 14709                           	opt callstack 0
 14710  003DC2                     ___aomod:
 14711                           	opt callstack 23
 14712  003DC2  0E00               	movlw	0
 14713  003DC4  6E17               	movwf	___aomod@sign^0,c
 14714  003DC6  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
 14715  003DC8  EFEA  F01E         	goto	u9090
 14716  003DCC  EFE8  F01E         	goto	u9091
 14717  003DD0                     u9091:
 14718  003DD0  EFFC  F01E         	goto	l8638
 14719  003DD4                     u9090:
 14720  003DD4  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 14721  003DD6  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 14722  003DD8  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 14723  003DDA  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 14724  003DDC  1E09               	comf	(___aomod@dividend+3)^0,f,c
 14725  003DDE  1E08               	comf	(___aomod@dividend+2)^0,f,c
 14726  003DE0  1E07               	comf	(___aomod@dividend+1)^0,f,c
 14727  003DE2  6C06               	negf	___aomod@dividend^0,c
 14728  003DE4  0E00               	movlw	0
 14729  003DE6  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 14730  003DE8  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 14731  003DEA  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 14732  003DEC  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 14733  003DEE  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 14734  003DF0  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 14735  003DF2  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 14736  003DF4  0E01               	movlw	1
 14737  003DF6  6E17               	movwf	___aomod@sign^0,c
 14738  003DF8                     l8638:
 14739  003DF8  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
 14740  003DFA  EF03  F01F         	goto	u9100
 14741  003DFE  EF01  F01F         	goto	u9101
 14742  003E02                     u9101:
 14743  003E02  EF13  F01F         	goto	l8642
 14744  003E06                     u9100:
 14745  003E06  1E15               	comf	(___aomod@divisor+7)^0,f,c
 14746  003E08  1E14               	comf	(___aomod@divisor+6)^0,f,c
 14747  003E0A  1E13               	comf	(___aomod@divisor+5)^0,f,c
 14748  003E0C  1E12               	comf	(___aomod@divisor+4)^0,f,c
 14749  003E0E  1E11               	comf	(___aomod@divisor+3)^0,f,c
 14750  003E10  1E10               	comf	(___aomod@divisor+2)^0,f,c
 14751  003E12  1E0F               	comf	(___aomod@divisor+1)^0,f,c
 14752  003E14  6C0E               	negf	___aomod@divisor^0,c
 14753  003E16  0E00               	movlw	0
 14754  003E18  220F               	addwfc	(___aomod@divisor+1)^0,f,c
 14755  003E1A  2210               	addwfc	(___aomod@divisor+2)^0,f,c
 14756  003E1C  2211               	addwfc	(___aomod@divisor+3)^0,f,c
 14757  003E1E  2212               	addwfc	(___aomod@divisor+4)^0,f,c
 14758  003E20  2213               	addwfc	(___aomod@divisor+5)^0,f,c
 14759  003E22  2214               	addwfc	(___aomod@divisor+6)^0,f,c
 14760  003E24  2215               	addwfc	(___aomod@divisor+7)^0,f,c
 14761  003E26                     l8642:
 14762  003E26  500E               	movf	___aomod@divisor^0,w,c
 14763  003E28  100F               	iorwf	(___aomod@divisor+1)^0,w,c
 14764  003E2A  1010               	iorwf	(___aomod@divisor+2)^0,w,c
 14765  003E2C  1011               	iorwf	(___aomod@divisor+3)^0,w,c
 14766  003E2E  1012               	iorwf	(___aomod@divisor+4)^0,w,c
 14767  003E30  1013               	iorwf	(___aomod@divisor+5)^0,w,c
 14768  003E32  1014               	iorwf	(___aomod@divisor+6)^0,w,c
 14769  003E34  1015               	iorwf	(___aomod@divisor+7)^0,w,c
 14770  003E36  B4D8               	btfsc	status,2,c
 14771  003E38  EF20  F01F         	goto	u9111
 14772  003E3C  EF22  F01F         	goto	u9110
 14773  003E40                     u9111:
 14774  003E40  EF6A  F01F         	goto	l8658
 14775  003E44                     u9110:
 14776  003E44  0E01               	movlw	1
 14777  003E46  6E16               	movwf	___aomod@counter^0,c
 14778  003E48  EF30  F01F         	goto	l8648
 14779  003E4C                     l8646:
 14780  003E4C  90D8               	bcf	status,0,c
 14781  003E4E  360E               	rlcf	___aomod@divisor^0,f,c
 14782  003E50  360F               	rlcf	(___aomod@divisor+1)^0,f,c
 14783  003E52  3610               	rlcf	(___aomod@divisor+2)^0,f,c
 14784  003E54  3611               	rlcf	(___aomod@divisor+3)^0,f,c
 14785  003E56  3612               	rlcf	(___aomod@divisor+4)^0,f,c
 14786  003E58  3613               	rlcf	(___aomod@divisor+5)^0,f,c
 14787  003E5A  3614               	rlcf	(___aomod@divisor+6)^0,f,c
 14788  003E5C  3615               	rlcf	(___aomod@divisor+7)^0,f,c
 14789  003E5E  2A16               	incf	___aomod@counter^0,f,c
 14790  003E60                     l8648:
 14791  003E60  AE15               	btfss	(___aomod@divisor+7)^0,7,c
 14792  003E62  EF35  F01F         	goto	u9121
 14793  003E66  EF37  F01F         	goto	u9120
 14794  003E6A                     u9121:
 14795  003E6A  EF26  F01F         	goto	l8646
 14796  003E6E                     u9120:
 14797  003E6E                     l8650:
 14798  003E6E  500E               	movf	___aomod@divisor^0,w,c
 14799  003E70  5C06               	subwf	___aomod@dividend^0,w,c
 14800  003E72  500F               	movf	(___aomod@divisor+1)^0,w,c
 14801  003E74  5807               	subwfb	(___aomod@dividend+1)^0,w,c
 14802  003E76  5010               	movf	(___aomod@divisor+2)^0,w,c
 14803  003E78  5808               	subwfb	(___aomod@dividend+2)^0,w,c
 14804  003E7A  5011               	movf	(___aomod@divisor+3)^0,w,c
 14805  003E7C  5809               	subwfb	(___aomod@dividend+3)^0,w,c
 14806  003E7E  5012               	movf	(___aomod@divisor+4)^0,w,c
 14807  003E80  580A               	subwfb	(___aomod@dividend+4)^0,w,c
 14808  003E82  5013               	movf	(___aomod@divisor+5)^0,w,c
 14809  003E84  580B               	subwfb	(___aomod@dividend+5)^0,w,c
 14810  003E86  5014               	movf	(___aomod@divisor+6)^0,w,c
 14811  003E88  580C               	subwfb	(___aomod@dividend+6)^0,w,c
 14812  003E8A  5015               	movf	(___aomod@divisor+7)^0,w,c
 14813  003E8C  580D               	subwfb	(___aomod@dividend+7)^0,w,c
 14814  003E8E  A0D8               	btfss	status,0,c
 14815  003E90  EF4C  F01F         	goto	u9131
 14816  003E94  EF4E  F01F         	goto	u9130
 14817  003E98                     u9131:
 14818  003E98  EF5E  F01F         	goto	l8654
 14819  003E9C                     u9130:
 14820  003E9C  500E               	movf	___aomod@divisor^0,w,c
 14821  003E9E  5E06               	subwf	___aomod@dividend^0,f,c
 14822  003EA0  500F               	movf	(___aomod@divisor+1)^0,w,c
 14823  003EA2  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
 14824  003EA4  5010               	movf	(___aomod@divisor+2)^0,w,c
 14825  003EA6  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
 14826  003EA8  5011               	movf	(___aomod@divisor+3)^0,w,c
 14827  003EAA  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
 14828  003EAC  5012               	movf	(___aomod@divisor+4)^0,w,c
 14829  003EAE  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
 14830  003EB0  5013               	movf	(___aomod@divisor+5)^0,w,c
 14831  003EB2  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
 14832  003EB4  5014               	movf	(___aomod@divisor+6)^0,w,c
 14833  003EB6  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
 14834  003EB8  5015               	movf	(___aomod@divisor+7)^0,w,c
 14835  003EBA  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
 14836  003EBC                     l8654:
 14837  003EBC  90D8               	bcf	status,0,c
 14838  003EBE  3215               	rrcf	(___aomod@divisor+7)^0,f,c
 14839  003EC0  3214               	rrcf	(___aomod@divisor+6)^0,f,c
 14840  003EC2  3213               	rrcf	(___aomod@divisor+5)^0,f,c
 14841  003EC4  3212               	rrcf	(___aomod@divisor+4)^0,f,c
 14842  003EC6  3211               	rrcf	(___aomod@divisor+3)^0,f,c
 14843  003EC8  3210               	rrcf	(___aomod@divisor+2)^0,f,c
 14844  003ECA  320F               	rrcf	(___aomod@divisor+1)^0,f,c
 14845  003ECC  320E               	rrcf	___aomod@divisor^0,f,c
 14846  003ECE  2E16               	decfsz	___aomod@counter^0,f,c
 14847  003ED0  EF37  F01F         	goto	l8650
 14848  003ED4                     l8658:
 14849  003ED4  5017               	movf	___aomod@sign^0,w,c
 14850  003ED6  B4D8               	btfsc	status,2,c
 14851  003ED8  EF70  F01F         	goto	u9141
 14852  003EDC  EF72  F01F         	goto	u9140
 14853  003EE0                     u9141:
 14854  003EE0  EF82  F01F         	goto	l8662
 14855  003EE4                     u9140:
 14856  003EE4  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 14857  003EE6  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 14858  003EE8  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 14859  003EEA  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 14860  003EEC  1E09               	comf	(___aomod@dividend+3)^0,f,c
 14861  003EEE  1E08               	comf	(___aomod@dividend+2)^0,f,c
 14862  003EF0  1E07               	comf	(___aomod@dividend+1)^0,f,c
 14863  003EF2  6C06               	negf	___aomod@dividend^0,c
 14864  003EF4  0E00               	movlw	0
 14865  003EF6  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 14866  003EF8  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 14867  003EFA  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 14868  003EFC  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 14869  003EFE  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 14870  003F00  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 14871  003F02  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 14872  003F04                     l8662:
 14873  003F04  C006  F006         	movff	___aomod@dividend,?___aomod
 14874  003F08  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 14875  003F0C  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 14876  003F10  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 14877  003F14  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 14878  003F18  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 14879  003F1C  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 14880  003F20  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 14881  003F24  0012               	return		;funcret
 14882  003F26                     __end_of___aomod:
 14883                           	opt callstack 0
 14884                           
 14885 ;; *************** function ___aodiv *****************
 14886 ;; Defined at:
 14887 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14888 ;; Parameters:    Size  Location     Type
 14889 ;;  dividend        8    5[COMRAM] long long 
 14890 ;;  divisor         8   13[COMRAM] long long 
 14891 ;; Auto vars:     Size  Location     Type
 14892 ;;  quotient        8   23[COMRAM] long long 
 14893 ;;  sign            1   22[COMRAM] unsigned char 
 14894 ;;  counter         1   21[COMRAM] unsigned char 
 14895 ;; Return value:  Size  Location     Type
 14896 ;;                  8    5[COMRAM] long long 
 14897 ;; Registers used:
 14898 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14899 ;; Tracked objects:
 14900 ;;		On entry : 0/0
 14901 ;;		On exit  : 0/0
 14902 ;;		Unchanged: 0/0
 14903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14904 ;;      Params:        16       0       0       0       0       0       0       0       0
 14905 ;;      Locals:        10       0       0       0       0       0       0       0       0
 14906 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14907 ;;      Totals:        26       0       0       0       0       0       0       0       0
 14908 ;;Total ram usage:       26 bytes
 14909 ;; Hardware stack levels used:    1
 14910 ;; Hardware stack levels required when called:    2
 14911 ;; This function calls:
 14912 ;;		Nothing
 14913 ;; This function is called by:
 14914 ;;		_dtoa
 14915 ;; This function uses a non-reentrant model
 14916 ;;
 14917                           
 14918                           	psect	text54
 14919  003ABE                     __ptext54:
 14920                           	opt callstack 0
 14921  003ABE                     ___aodiv:
 14922                           	opt callstack 23
 14923  003ABE  0E00               	movlw	0
 14924  003AC0  6E17               	movwf	___aodiv@sign^0,c
 14925  003AC2  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
 14926  003AC4  EF68  F01D         	goto	u9020
 14927  003AC8  EF66  F01D         	goto	u9021
 14928  003ACC                     u9021:
 14929  003ACC  EF7A  F01D         	goto	l8594
 14930  003AD0                     u9020:
 14931  003AD0  1E15               	comf	(___aodiv@divisor+7)^0,f,c
 14932  003AD2  1E14               	comf	(___aodiv@divisor+6)^0,f,c
 14933  003AD4  1E13               	comf	(___aodiv@divisor+5)^0,f,c
 14934  003AD6  1E12               	comf	(___aodiv@divisor+4)^0,f,c
 14935  003AD8  1E11               	comf	(___aodiv@divisor+3)^0,f,c
 14936  003ADA  1E10               	comf	(___aodiv@divisor+2)^0,f,c
 14937  003ADC  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
 14938  003ADE  6C0E               	negf	___aodiv@divisor^0,c
 14939  003AE0  0E00               	movlw	0
 14940  003AE2  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
 14941  003AE4  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
 14942  003AE6  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
 14943  003AE8  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
 14944  003AEA  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
 14945  003AEC  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
 14946  003AEE  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
 14947  003AF0  0E01               	movlw	1
 14948  003AF2  6E17               	movwf	___aodiv@sign^0,c
 14949  003AF4                     l8594:
 14950  003AF4  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
 14951  003AF6  EF81  F01D         	goto	u9030
 14952  003AFA  EF7F  F01D         	goto	u9031
 14953  003AFE                     u9031:
 14954  003AFE  EF93  F01D         	goto	l8600
 14955  003B02                     u9030:
 14956  003B02  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
 14957  003B04  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
 14958  003B06  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
 14959  003B08  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
 14960  003B0A  1E09               	comf	(___aodiv@dividend+3)^0,f,c
 14961  003B0C  1E08               	comf	(___aodiv@dividend+2)^0,f,c
 14962  003B0E  1E07               	comf	(___aodiv@dividend+1)^0,f,c
 14963  003B10  6C06               	negf	___aodiv@dividend^0,c
 14964  003B12  0E00               	movlw	0
 14965  003B14  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
 14966  003B16  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
 14967  003B18  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
 14968  003B1A  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
 14969  003B1C  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
 14970  003B1E  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
 14971  003B20  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
 14972  003B22  0E01               	movlw	1
 14973  003B24  1A17               	xorwf	___aodiv@sign^0,f,c
 14974  003B26                     l8600:
 14975  003B26  EE20  F018         	lfsr	2,___aodiv@quotient
 14976  003B2A  0E07               	movlw	7
 14977  003B2C                     u9041:
 14978  003B2C  6ADE               	clrf	postinc2,c
 14979  003B2E  06E8               	decf	wreg,f,c
 14980  003B30  E2FD               	bc	u9041
 14981  003B32  500E               	movf	___aodiv@divisor^0,w,c
 14982  003B34  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
 14983  003B36  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
 14984  003B38  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
 14985  003B3A  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
 14986  003B3C  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
 14987  003B3E  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
 14988  003B40  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
 14989  003B42  B4D8               	btfsc	status,2,c
 14990  003B44  EFA6  F01D         	goto	u9051
 14991  003B48  EFA8  F01D         	goto	u9050
 14992  003B4C                     u9051:
 14993  003B4C  EFFA  F01D         	goto	l8622
 14994  003B50                     u9050:
 14995  003B50  0E01               	movlw	1
 14996  003B52  6E16               	movwf	___aodiv@counter^0,c
 14997  003B54  EFB6  F01D         	goto	l8608
 14998  003B58                     l8606:
 14999  003B58  90D8               	bcf	status,0,c
 15000  003B5A  360E               	rlcf	___aodiv@divisor^0,f,c
 15001  003B5C  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
 15002  003B5E  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
 15003  003B60  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
 15004  003B62  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
 15005  003B64  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
 15006  003B66  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
 15007  003B68  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
 15008  003B6A  2A16               	incf	___aodiv@counter^0,f,c
 15009  003B6C                     l8608:
 15010  003B6C  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
 15011  003B6E  EFBB  F01D         	goto	u9061
 15012  003B72  EFBD  F01D         	goto	u9060
 15013  003B76                     u9061:
 15014  003B76  EFAC  F01D         	goto	l8606
 15015  003B7A                     u9060:
 15016  003B7A                     l8610:
 15017  003B7A  90D8               	bcf	status,0,c
 15018  003B7C  3618               	rlcf	___aodiv@quotient^0,f,c
 15019  003B7E  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
 15020  003B80  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
 15021  003B82  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
 15022  003B84  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
 15023  003B86  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
 15024  003B88  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
 15025  003B8A  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
 15026  003B8C  500E               	movf	___aodiv@divisor^0,w,c
 15027  003B8E  5C06               	subwf	___aodiv@dividend^0,w,c
 15028  003B90  500F               	movf	(___aodiv@divisor+1)^0,w,c
 15029  003B92  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
 15030  003B94  5010               	movf	(___aodiv@divisor+2)^0,w,c
 15031  003B96  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
 15032  003B98  5011               	movf	(___aodiv@divisor+3)^0,w,c
 15033  003B9A  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
 15034  003B9C  5012               	movf	(___aodiv@divisor+4)^0,w,c
 15035  003B9E  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
 15036  003BA0  5013               	movf	(___aodiv@divisor+5)^0,w,c
 15037  003BA2  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
 15038  003BA4  5014               	movf	(___aodiv@divisor+6)^0,w,c
 15039  003BA6  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
 15040  003BA8  5015               	movf	(___aodiv@divisor+7)^0,w,c
 15041  003BAA  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
 15042  003BAC  A0D8               	btfss	status,0,c
 15043  003BAE  EFDB  F01D         	goto	u9071
 15044  003BB2  EFDD  F01D         	goto	u9070
 15045  003BB6                     u9071:
 15046  003BB6  EFEE  F01D         	goto	l8618
 15047  003BBA                     u9070:
 15048  003BBA  500E               	movf	___aodiv@divisor^0,w,c
 15049  003BBC  5E06               	subwf	___aodiv@dividend^0,f,c
 15050  003BBE  500F               	movf	(___aodiv@divisor+1)^0,w,c
 15051  003BC0  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
 15052  003BC2  5010               	movf	(___aodiv@divisor+2)^0,w,c
 15053  003BC4  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
 15054  003BC6  5011               	movf	(___aodiv@divisor+3)^0,w,c
 15055  003BC8  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
 15056  003BCA  5012               	movf	(___aodiv@divisor+4)^0,w,c
 15057  003BCC  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
 15058  003BCE  5013               	movf	(___aodiv@divisor+5)^0,w,c
 15059  003BD0  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
 15060  003BD2  5014               	movf	(___aodiv@divisor+6)^0,w,c
 15061  003BD4  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
 15062  003BD6  5015               	movf	(___aodiv@divisor+7)^0,w,c
 15063  003BD8  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
 15064  003BDA  8018               	bsf	___aodiv@quotient^0,0,c
 15065  003BDC                     l8618:
 15066  003BDC  90D8               	bcf	status,0,c
 15067  003BDE  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
 15068  003BE0  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
 15069  003BE2  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
 15070  003BE4  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
 15071  003BE6  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
 15072  003BE8  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
 15073  003BEA  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
 15074  003BEC  320E               	rrcf	___aodiv@divisor^0,f,c
 15075  003BEE  2E16               	decfsz	___aodiv@counter^0,f,c
 15076  003BF0  EFBD  F01D         	goto	l8610
 15077  003BF4                     l8622:
 15078  003BF4  5017               	movf	___aodiv@sign^0,w,c
 15079  003BF6  B4D8               	btfsc	status,2,c
 15080  003BF8  EF00  F01E         	goto	u9081
 15081  003BFC  EF02  F01E         	goto	u9080
 15082  003C00                     u9081:
 15083  003C00  EF12  F01E         	goto	l8626
 15084  003C04                     u9080:
 15085  003C04  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
 15086  003C06  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
 15087  003C08  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
 15088  003C0A  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
 15089  003C0C  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
 15090  003C0E  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
 15091  003C10  1E19               	comf	(___aodiv@quotient+1)^0,f,c
 15092  003C12  6C18               	negf	___aodiv@quotient^0,c
 15093  003C14  0E00               	movlw	0
 15094  003C16  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
 15095  003C18  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
 15096  003C1A  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
 15097  003C1C  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
 15098  003C1E  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
 15099  003C20  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
 15100  003C22  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
 15101  003C24                     l8626:
 15102  003C24  C018  F006         	movff	___aodiv@quotient,?___aodiv
 15103  003C28  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 15104  003C2C  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 15105  003C30  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 15106  003C34  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 15107  003C38  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 15108  003C3C  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 15109  003C40  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 15110  003C44  0012               	return		;funcret
 15111  003C46                     __end_of___aodiv:
 15112                           	opt callstack 0
 15113                           
 15114 ;; *************** function _ctoa *****************
 15115 ;; Defined at:
 15116 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15117 ;; Parameters:    Size  Location     Type
 15118 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 15119 ;;		 -> sprintf@f(6), 
 15120 ;;  c               1   34[COMRAM] unsigned char 
 15121 ;; Auto vars:     Size  Location     Type
 15122 ;;  w               2   35[COMRAM] int 
 15123 ;;  l               2    0        int 
 15124 ;; Return value:  Size  Location     Type
 15125 ;;                  2   32[COMRAM] int 
 15126 ;; Registers used:
 15127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15128 ;; Tracked objects:
 15129 ;;		On entry : 0/0
 15130 ;;		On exit  : 0/0
 15131 ;;		Unchanged: 0/0
 15132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15133 ;;      Params:         3       0       0       0       0       0       0       0       0
 15134 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15135 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15136 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15137 ;;Total ram usage:        5 bytes
 15138 ;; Hardware stack levels used:    1
 15139 ;; Hardware stack levels required when called:    6
 15140 ;; This function calls:
 15141 ;;		_pad
 15142 ;; This function is called by:
 15143 ;;		_vfpfcnvrt
 15144 ;; This function uses a non-reentrant model
 15145 ;;
 15146                           
 15147                           	psect	text55
 15148  00526E                     __ptext55:
 15149                           	opt callstack 0
 15150  00526E                     _ctoa:
 15151                           	opt callstack 20
 15152  00526E                     
 15153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 15154  00526E  0101               	movlb	1	; () banked
 15155  005270  512E               	movf	_width& (0+255),w,b
 15156  005272  112F               	iorwf	(_width+1)& (0+255),w,b
 15157  005274  A4D8               	btfss	status,2,c
 15158  005276  EF3F  F029         	goto	u10131
 15159  00527A  EF41  F029         	goto	u10130
 15160  00527E                     u10131:
 15161  00527E  EF47  F029         	goto	l9246
 15162  005282                     u10130:
 15163  005282                     
 15164                           ; BSR set to: 1
 15165  005282  C12E  F024         	movff	_width,ctoa@w
 15166  005286  C12F  F025         	movff	_width+1,ctoa@w+1
 15167  00528A  EF4D  F029         	goto	l9248
 15168  00528E                     l9246:
 15169                           
 15170                           ; BSR set to: 1
 15171  00528E  0EFF               	movlw	255
 15172  005290  252E               	addwf	_width& (0+255),w,b
 15173  005292  6E24               	movwf	ctoa@w^0,c
 15174  005294  0EFF               	movlw	255
 15175  005296  212F               	addwfc	(_width+1)& (0+255),w,b
 15176  005298  6E25               	movwf	(ctoa@w+1)^0,c
 15177  00529A                     l9248:
 15178                           
 15179                           ; BSR set to: 1
 15180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 15181  00529A  C023  F142         	movff	ctoa@c,_dbuf
 15182  00529E                     
 15183                           ; BSR set to: 1
 15184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 15185  00529E  0E00               	movlw	0
 15186  0052A0  6F43               	movwf	(_dbuf+1)& (0+255),b
 15187  0052A2                     
 15188                           ; BSR set to: 1
 15189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 15190  0052A2  C021  F016         	movff	ctoa@fp,pad@fp
 15191  0052A6  C022  F017         	movff	ctoa@fp+1,pad@fp+1
 15192  0052AA  0E42               	movlw	low _dbuf
 15193  0052AC  6E18               	movwf	pad@buf^0,c
 15194  0052AE  0E01               	movlw	high _dbuf
 15195  0052B0  6E19               	movwf	(pad@buf+1)^0,c
 15196  0052B2  C024  F01A         	movff	ctoa@w,pad@p
 15197  0052B6  C025  F01B         	movff	ctoa@w+1,pad@p+1
 15198  0052BA  EC93  F024         	call	_pad	;wreg free
 15199  0052BE  C016  F021         	movff	?_pad,?_ctoa
 15200  0052C2  C017  F022         	movff	?_pad+1,?_ctoa+1
 15201  0052C6  0012               	return		;funcret
 15202  0052C8                     __end_of_ctoa:
 15203                           	opt callstack 0
 15204                           
 15205 ;; *************** function _pad *****************
 15206 ;; Defined at:
 15207 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15208 ;; Parameters:    Size  Location     Type
 15209 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
 15210 ;;		 -> sprintf@f(6), 
 15211 ;;  buf             2   23[COMRAM] PTR unsigned char 
 15212 ;;		 -> dbuf(80), 
 15213 ;;  p               2   25[COMRAM] int 
 15214 ;; Auto vars:     Size  Location     Type
 15215 ;;  w               2   30[COMRAM] int 
 15216 ;;  i               2   28[COMRAM] int 
 15217 ;; Return value:  Size  Location     Type
 15218 ;;                  2   21[COMRAM] int 
 15219 ;; Registers used:
 15220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15221 ;; Tracked objects:
 15222 ;;		On entry : 0/0
 15223 ;;		On exit  : 0/0
 15224 ;;		Unchanged: 0/0
 15225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15226 ;;      Params:         6       0       0       0       0       0       0       0       0
 15227 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15228 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15229 ;;      Totals:        11       0       0       0       0       0       0       0       0
 15230 ;;Total ram usage:       11 bytes
 15231 ;; Hardware stack levels used:    1
 15232 ;; Hardware stack levels required when called:    5
 15233 ;; This function calls:
 15234 ;;		_fputc
 15235 ;;		_fputs
 15236 ;;		_strlen
 15237 ;; This function is called by:
 15238 ;;		_ctoa
 15239 ;;		_dtoa
 15240 ;;		_efgtoa
 15241 ;; This function uses a non-reentrant model
 15242 ;;
 15243                           
 15244                           	psect	text56
 15245  004926                     __ptext56:
 15246                           	opt callstack 0
 15247  004926                     _pad:
 15248                           	opt callstack 20
 15249  004926                     
 15250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 15251  004926  0101               	movlb	1	; () banked
 15252  004928  A132               	btfss	_flags& (0+255),0,b
 15253  00492A  EF99  F024         	goto	u8731
 15254  00492E  EF9B  F024         	goto	u8730
 15255  004932                     u8731:
 15256  004932  EFA5  F024         	goto	l8490
 15257  004936                     u8730:
 15258  004936                     
 15259                           ; BSR set to: 1
 15260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 15261  004936  C018  F00F         	movff	pad@buf,fputs@s
 15262  00493A  C019  F010         	movff	pad@buf+1,fputs@s+1
 15263  00493E  C016  F011         	movff	pad@fp,fputs@fp
 15264  004942  C017  F012         	movff	pad@fp+1,fputs@fp+1
 15265  004946  EC5D  F02B         	call	_fputs	;wreg free
 15266  00494A                     l8490:
 15267                           
 15268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 15269  00494A  BE1B               	btfsc	(pad@p+1)^0,7,c
 15270  00494C  EFAA  F024         	goto	u8741
 15271  004950  EFAC  F024         	goto	u8740
 15272  004954                     u8741:
 15273  004954  EFB2  F024         	goto	l8494
 15274  004958                     u8740:
 15275  004958  C01A  F01F         	movff	pad@p,pad@w
 15276  00495C  C01B  F020         	movff	pad@p+1,pad@w+1
 15277  004960  EFB6  F024         	goto	l795
 15278  004964                     l8494:
 15279  004964  0E00               	movlw	0
 15280  004966  6E20               	movwf	(pad@w+1)^0,c
 15281  004968  0E00               	movlw	0
 15282  00496A  6E1F               	movwf	pad@w^0,c
 15283  00496C                     l795:
 15284                           
 15285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 15286  00496C  0E00               	movlw	0
 15287  00496E  6E1E               	movwf	(pad@i+1)^0,c
 15288  004970  0E00               	movlw	0
 15289  004972  6E1D               	movwf	pad@i^0,c
 15290                           
 15291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 15292  004974  EFC8  F024         	goto	l8500
 15293  004978                     l8496:
 15294                           
 15295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 15296  004978  0E00               	movlw	0
 15297  00497A  6E07               	movwf	(fputc@c+1)^0,c
 15298  00497C  0E20               	movlw	32
 15299  00497E  6E06               	movwf	fputc@c^0,c
 15300  004980  C016  F008         	movff	pad@fp,fputc@fp
 15301  004984  C017  F009         	movff	pad@fp+1,fputc@fp+1
 15302  004988  EC2E  F024         	call	_fputc	;wreg free
 15303  00498C                     
 15304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 15305  00498C  4A1D               	infsnz	pad@i^0,f,c
 15306  00498E  2A1E               	incf	(pad@i+1)^0,f,c
 15307  004990                     l8500:
 15308                           
 15309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 15310  004990  501F               	movf	pad@w^0,w,c
 15311  004992  5C1D               	subwf	pad@i^0,w,c
 15312  004994  501E               	movf	(pad@i+1)^0,w,c
 15313  004996  0A80               	xorlw	128
 15314  004998  6E1C               	movwf	??_pad^0,c
 15315  00499A  5020               	movf	(pad@w+1)^0,w,c
 15316  00499C  0A80               	xorlw	128
 15317  00499E  581C               	subwfb	??_pad^0,w,c
 15318  0049A0  A0D8               	btfss	status,0,c
 15319  0049A2  EFD5  F024         	goto	u8751
 15320  0049A6  EFD7  F024         	goto	u8750
 15321  0049AA                     u8751:
 15322  0049AA  EFBC  F024         	goto	l8496
 15323  0049AE                     u8750:
 15324  0049AE                     
 15325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 15326  0049AE  0101               	movlb	1	; () banked
 15327  0049B0  B132               	btfsc	_flags& (0+255),0,b
 15328  0049B2  EFDD  F024         	goto	u8761
 15329  0049B6  EFDF  F024         	goto	u8760
 15330  0049BA                     u8761:
 15331  0049BA  EFE9  F024         	goto	l8504
 15332  0049BE                     u8760:
 15333  0049BE                     
 15334                           ; BSR set to: 1
 15335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 15336  0049BE  C018  F00F         	movff	pad@buf,fputs@s
 15337  0049C2  C019  F010         	movff	pad@buf+1,fputs@s+1
 15338  0049C6  C016  F011         	movff	pad@fp,fputs@fp
 15339  0049CA  C017  F012         	movff	pad@fp+1,fputs@fp+1
 15340  0049CE  EC5D  F02B         	call	_fputs	;wreg free
 15341  0049D2                     l8504:
 15342                           
 15343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 15344  0049D2  C018  F006         	movff	pad@buf,strlen@s
 15345  0049D6  C019  F007         	movff	pad@buf+1,strlen@s+1
 15346  0049DA  ECF3  F02B         	call	_strlen	;wreg free
 15347  0049DE  501F               	movf	pad@w^0,w,c
 15348  0049E0  2406               	addwf	?_strlen^0,w,c
 15349  0049E2  6E16               	movwf	?_pad^0,c
 15350  0049E4  5020               	movf	(pad@w+1)^0,w,c
 15351  0049E6  2007               	addwfc	(?_strlen+1)^0,w,c
 15352  0049E8  6E17               	movwf	(?_pad+1)^0,c
 15353  0049EA  0012               	return		;funcret
 15354  0049EC                     __end_of_pad:
 15355                           	opt callstack 0
 15356                           
 15357 ;; *************** function _strlen *****************
 15358 ;; Defined at:
 15359 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 15360 ;; Parameters:    Size  Location     Type
 15361 ;;  s               2    5[COMRAM] PTR const unsigned char 
 15362 ;;		 -> dbuf(80), 
 15363 ;; Auto vars:     Size  Location     Type
 15364 ;;  a               2    7[COMRAM] PTR const unsigned char 
 15365 ;;		 -> dbuf(80), 
 15366 ;; Return value:  Size  Location     Type
 15367 ;;                  2    5[COMRAM] unsigned int 
 15368 ;; Registers used:
 15369 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15370 ;; Tracked objects:
 15371 ;;		On entry : 0/0
 15372 ;;		On exit  : 0/0
 15373 ;;		Unchanged: 0/0
 15374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15375 ;;      Params:         2       0       0       0       0       0       0       0       0
 15376 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15377 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15378 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15379 ;;Total ram usage:        4 bytes
 15380 ;; Hardware stack levels used:    1
 15381 ;; Hardware stack levels required when called:    2
 15382 ;; This function calls:
 15383 ;;		Nothing
 15384 ;; This function is called by:
 15385 ;;		_pad
 15386 ;; This function uses a non-reentrant model
 15387 ;;
 15388                           
 15389                           	psect	text57
 15390  0057E6                     __ptext57:
 15391                           	opt callstack 0
 15392  0057E6                     _strlen:
 15393                           	opt callstack 22
 15394  0057E6  C006  F008         	movff	strlen@s,strlen@a
 15395  0057EA  C007  F009         	movff	strlen@s+1,strlen@a+1
 15396  0057EE  EFFB  F02B         	goto	l8216
 15397  0057F2                     l8214:
 15398  0057F2  4A06               	infsnz	strlen@s^0,f,c
 15399  0057F4  2A07               	incf	(strlen@s+1)^0,f,c
 15400  0057F6                     l8216:
 15401  0057F6  C006  FFD9         	movff	strlen@s,fsr2l
 15402  0057FA  C007  FFDA         	movff	strlen@s+1,fsr2h
 15403  0057FE  50DF               	movf	indf2,w,c
 15404  005800  A4D8               	btfss	status,2,c
 15405  005802  EF05  F02C         	goto	u8231
 15406  005806  EF07  F02C         	goto	u8230
 15407  00580A                     u8231:
 15408  00580A  EFF9  F02B         	goto	l8214
 15409  00580E                     u8230:
 15410  00580E  5008               	movf	strlen@a^0,w,c
 15411  005810  5C06               	subwf	strlen@s^0,w,c
 15412  005812  6E06               	movwf	?_strlen^0,c
 15413  005814  5009               	movf	(strlen@a+1)^0,w,c
 15414  005816  5807               	subwfb	(strlen@s+1)^0,w,c
 15415  005818  6E07               	movwf	(?_strlen+1)^0,c
 15416  00581A  0012               	return		;funcret
 15417  00581C                     __end_of_strlen:
 15418                           	opt callstack 0
 15419                           
 15420 ;; *************** function _fputs *****************
 15421 ;; Defined at:
 15422 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 15423 ;; Parameters:    Size  Location     Type
 15424 ;;  s               2   14[COMRAM] PTR const unsigned char 
 15425 ;;		 -> dbuf(80), 
 15426 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 15427 ;;		 -> sprintf@f(6), 
 15428 ;; Auto vars:     Size  Location     Type
 15429 ;;  i               2   19[COMRAM] int 
 15430 ;;  c               1   18[COMRAM] unsigned char 
 15431 ;; Return value:  Size  Location     Type
 15432 ;;                  2   14[COMRAM] int 
 15433 ;; Registers used:
 15434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15435 ;; Tracked objects:
 15436 ;;		On entry : 0/0
 15437 ;;		On exit  : 0/0
 15438 ;;		Unchanged: 0/0
 15439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15440 ;;      Params:         4       0       0       0       0       0       0       0       0
 15441 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15442 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15443 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15444 ;;Total ram usage:        7 bytes
 15445 ;; Hardware stack levels used:    1
 15446 ;; Hardware stack levels required when called:    4
 15447 ;; This function calls:
 15448 ;;		_fputc
 15449 ;; This function is called by:
 15450 ;;		_pad
 15451 ;; This function uses a non-reentrant model
 15452 ;;
 15453                           
 15454                           	psect	text58
 15455  0056BA                     __ptext58:
 15456                           	opt callstack 0
 15457  0056BA                     _fputs:
 15458                           	opt callstack 20
 15459  0056BA  0E00               	movlw	0
 15460  0056BC  6E15               	movwf	(fputs@i+1)^0,c
 15461  0056BE  0E00               	movlw	0
 15462  0056C0  6E14               	movwf	fputs@i^0,c
 15463  0056C2  EF6E  F02B         	goto	l8210
 15464  0056C6                     l8206:
 15465  0056C6  C013  F006         	movff	fputs@c,fputc@c
 15466  0056CA  6A07               	clrf	(fputc@c+1)^0,c
 15467  0056CC  C011  F008         	movff	fputs@fp,fputc@fp
 15468  0056D0  C012  F009         	movff	fputs@fp+1,fputc@fp+1
 15469  0056D4  EC2E  F024         	call	_fputc	;wreg free
 15470  0056D8  4A14               	infsnz	fputs@i^0,f,c
 15471  0056DA  2A15               	incf	(fputs@i+1)^0,f,c
 15472  0056DC                     l8210:
 15473  0056DC  5014               	movf	fputs@i^0,w,c
 15474  0056DE  240F               	addwf	fputs@s^0,w,c
 15475  0056E0  6ED9               	movwf	fsr2l,c
 15476  0056E2  5015               	movf	(fputs@i+1)^0,w,c
 15477  0056E4  2010               	addwfc	(fputs@s+1)^0,w,c
 15478  0056E6  6EDA               	movwf	fsr2h,c
 15479  0056E8  50DF               	movf	indf2,w,c
 15480  0056EA  6E13               	movwf	fputs@c^0,c
 15481  0056EC  5013               	movf	fputs@c^0,w,c
 15482  0056EE  A4D8               	btfss	status,2,c
 15483  0056F0  EF7C  F02B         	goto	u8221
 15484  0056F4  EF7E  F02B         	goto	u8220
 15485  0056F8                     u8221:
 15486  0056F8  EF63  F02B         	goto	l8206
 15487  0056FC                     u8220:
 15488  0056FC  0012               	return		;funcret
 15489  0056FE                     __end_of_fputs:
 15490                           	opt callstack 0
 15491                           
 15492 ;; *************** function _fputc *****************
 15493 ;; Defined at:
 15494 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 15495 ;; Parameters:    Size  Location     Type
 15496 ;;  c               2    5[COMRAM] int 
 15497 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
 15498 ;;		 -> sprintf@f(6), 
 15499 ;; Auto vars:     Size  Location     Type
 15500 ;;		None
 15501 ;; Return value:  Size  Location     Type
 15502 ;;                  2    5[COMRAM] int 
 15503 ;; Registers used:
 15504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15505 ;; Tracked objects:
 15506 ;;		On entry : 0/0
 15507 ;;		On exit  : 0/0
 15508 ;;		Unchanged: 0/0
 15509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15510 ;;      Params:         4       0       0       0       0       0       0       0       0
 15511 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15512 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15513 ;;      Totals:         9       0       0       0       0       0       0       0       0
 15514 ;;Total ram usage:        9 bytes
 15515 ;; Hardware stack levels used:    1
 15516 ;; Hardware stack levels required when called:    3
 15517 ;; This function calls:
 15518 ;;		_putch
 15519 ;; This function is called by:
 15520 ;;		_pad
 15521 ;;		_vfpfcnvrt
 15522 ;;		_fputs
 15523 ;; This function uses a non-reentrant model
 15524 ;;
 15525                           
 15526                           	psect	text59
 15527  00485C                     __ptext59:
 15528                           	opt callstack 0
 15529  00485C                     _fputc:
 15530                           	opt callstack 23
 15531  00485C  5008               	movf	fputc@fp^0,w,c
 15532  00485E  1009               	iorwf	(fputc@fp+1)^0,w,c
 15533  004860  B4D8               	btfsc	status,2,c
 15534  004862  EF35  F024         	goto	u8181
 15535  004866  EF37  F024         	goto	u8180
 15536  00486A                     u8181:
 15537  00486A  EF40  F024         	goto	l8194
 15538  00486E                     u8180:
 15539  00486E  5008               	movf	fputc@fp^0,w,c
 15540  004870  1009               	iorwf	(fputc@fp+1)^0,w,c
 15541  004872  A4D8               	btfss	status,2,c
 15542  004874  EF3E  F024         	goto	u8191
 15543  004878  EF40  F024         	goto	u8190
 15544  00487C                     u8191:
 15545  00487C  EF45  F024         	goto	l8196
 15546  004880                     u8190:
 15547  004880                     l8194:
 15548  004880  5006               	movf	fputc@c^0,w,c
 15549  004882  ECC0  F02C         	call	_putch
 15550  004886  EF92  F024         	goto	l1727
 15551  00488A                     l8196:
 15552  00488A  EE20 F004          	lfsr	2,4
 15553  00488E  5008               	movf	fputc@fp^0,w,c
 15554  004890  26D9               	addwf	fsr2l,f,c
 15555  004892  5009               	movf	(fputc@fp+1)^0,w,c
 15556  004894  22DA               	addwfc	fsr2h,f,c
 15557  004896  50DE               	movf	postinc2,w,c
 15558  004898  10DE               	iorwf	postinc2,w,c
 15559  00489A  B4D8               	btfsc	status,2,c
 15560  00489C  EF52  F024         	goto	u8201
 15561  0048A0  EF54  F024         	goto	u8200
 15562  0048A4                     u8201:
 15563  0048A4  EF6F  F024         	goto	l8200
 15564  0048A8                     u8200:
 15565  0048A8  EE20 F004          	lfsr	2,4
 15566  0048AC  5008               	movf	fputc@fp^0,w,c
 15567  0048AE  26D9               	addwf	fsr2l,f,c
 15568  0048B0  5009               	movf	(fputc@fp+1)^0,w,c
 15569  0048B2  22DA               	addwfc	fsr2h,f,c
 15570  0048B4  EE10 F002          	lfsr	1,2
 15571  0048B8  5008               	movf	fputc@fp^0,w,c
 15572  0048BA  26E1               	addwf	fsr1l,f,c
 15573  0048BC  5009               	movf	(fputc@fp+1)^0,w,c
 15574  0048BE  22E2               	addwfc	fsr1h,f,c
 15575  0048C0  50DE               	movf	postinc2,w,c
 15576  0048C2  5CE6               	subwf	postinc1,w,c
 15577  0048C4  50E6               	movf	postinc1,w,c
 15578  0048C6  0A80               	xorlw	128
 15579  0048C8  6E0E               	movwf	(??_fputc+4)^0,c
 15580  0048CA  50DE               	movf	postinc2,w,c
 15581  0048CC  0A80               	xorlw	128
 15582  0048CE  580E               	subwfb	(??_fputc+4)^0,w,c
 15583  0048D0  B0D8               	btfsc	status,0,c
 15584  0048D2  EF6D  F024         	goto	u8211
 15585  0048D6  EF6F  F024         	goto	u8210
 15586  0048DA                     u8211:
 15587  0048DA  EF92  F024         	goto	l1727
 15588  0048DE                     u8210:
 15589  0048DE                     l8200:
 15590  0048DE  EE20 F002          	lfsr	2,2
 15591  0048E2  5008               	movf	fputc@fp^0,w,c
 15592  0048E4  26D9               	addwf	fsr2l,f,c
 15593  0048E6  5009               	movf	(fputc@fp+1)^0,w,c
 15594  0048E8  22DA               	addwfc	fsr2h,f,c
 15595  0048EA  CFDE F00A          	movff	postinc2,??_fputc
 15596  0048EE  CFDD F00B          	movff	postdec2,??_fputc+1
 15597  0048F2  C008  FFD9         	movff	fputc@fp,fsr2l
 15598  0048F6  C009  FFDA         	movff	fputc@fp+1,fsr2h
 15599  0048FA  CFDE F00C          	movff	postinc2,??_fputc+2
 15600  0048FE  CFDD F00D          	movff	postdec2,??_fputc+3
 15601  004902  500A               	movf	??_fputc^0,w,c
 15602  004904  240C               	addwf	(??_fputc+2)^0,w,c
 15603  004906  6ED9               	movwf	fsr2l,c
 15604  004908  500B               	movf	(??_fputc+1)^0,w,c
 15605  00490A  200D               	addwfc	(??_fputc+3)^0,w,c
 15606  00490C  6EDA               	movwf	fsr2h,c
 15607  00490E  C006  FFDF         	movff	fputc@c,indf2
 15608  004912  EE20 F002          	lfsr	2,2
 15609  004916  5008               	movf	fputc@fp^0,w,c
 15610  004918  26D9               	addwf	fsr2l,f,c
 15611  00491A  5009               	movf	(fputc@fp+1)^0,w,c
 15612  00491C  22DA               	addwfc	fsr2h,f,c
 15613  00491E  2ADE               	incf	postinc2,f,c
 15614  004920  0E00               	movlw	0
 15615  004922  22DD               	addwfc	postdec2,f,c
 15616  004924                     l1727:
 15617  004924  0012               	return		;funcret
 15618  004926                     __end_of_fputc:
 15619                           	opt callstack 0
 15620                           
 15621 ;; *************** function _putch *****************
 15622 ;; Defined at:
 15623 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 15624 ;; Parameters:    Size  Location     Type
 15625 ;;  c               1    wreg     unsigned char 
 15626 ;; Auto vars:     Size  Location     Type
 15627 ;;  c               1    0[COMRAM] unsigned char 
 15628 ;; Return value:  Size  Location     Type
 15629 ;;                  1    wreg      void 
 15630 ;; Registers used:
 15631 ;;		wreg
 15632 ;; Tracked objects:
 15633 ;;		On entry : 0/0
 15634 ;;		On exit  : 0/0
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15637 ;;      Params:         0       0       0       0       0       0       0       0       0
 15638 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15639 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15640 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15641 ;;Total ram usage:        0 bytes
 15642 ;; Hardware stack levels used:    1
 15643 ;; Hardware stack levels required when called:    2
 15644 ;; This function calls:
 15645 ;;		Nothing
 15646 ;; This function is called by:
 15647 ;;		_fputc
 15648 ;; This function uses a non-reentrant model
 15649 ;;
 15650                           
 15651                           	psect	text60
 15652  005980                     __ptext60:
 15653                           	opt callstack 0
 15654  005980                     _putch:
 15655                           	opt callstack 23
 15656  005980  0012               	return		;funcret
 15657  005982                     __end_of_putch:
 15658                           	opt callstack 0
 15659                           
 15660 ;; *************** function _atoi *****************
 15661 ;; Defined at:
 15662 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 15663 ;; Parameters:    Size  Location     Type
 15664 ;;  s               2   12[COMRAM] PTR const unsigned char 
 15665 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
 15666 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
 15667 ;;		 -> STR_3(34), 
 15668 ;; Auto vars:     Size  Location     Type
 15669 ;;  n               2   25[COMRAM] int 
 15670 ;;  neg             2   18[COMRAM] int 
 15671 ;; Return value:  Size  Location     Type
 15672 ;;                  2   12[COMRAM] int 
 15673 ;; Registers used:
 15674 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15675 ;; Tracked objects:
 15676 ;;		On entry : 0/0
 15677 ;;		On exit  : 0/0
 15678 ;;		Unchanged: 0/0
 15679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15680 ;;      Params:         2       0       0       0       0       0       0       0       0
 15681 ;;      Locals:         9       0       0       0       0       0       0       0       0
 15682 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15683 ;;      Totals:        15       0       0       0       0       0       0       0       0
 15684 ;;Total ram usage:       15 bytes
 15685 ;; Hardware stack levels used:    1
 15686 ;; Hardware stack levels required when called:    3
 15687 ;; This function calls:
 15688 ;;		___wmul
 15689 ;;		_isdigit
 15690 ;;		_isspace
 15691 ;; This function is called by:
 15692 ;;		_vfpfcnvrt
 15693 ;; This function uses a non-reentrant model
 15694 ;;
 15695                           
 15696                           	psect	text61
 15697  00379E                     __ptext61:
 15698                           	opt callstack 0
 15699  00379E                     _atoi:
 15700                           	opt callstack 23
 15701  00379E  0E00               	movlw	0
 15702  0037A0  6E1B               	movwf	(atoi@n+1)^0,c
 15703  0037A2  0E00               	movlw	0
 15704  0037A4  6E1A               	movwf	atoi@n^0,c
 15705  0037A6  0E00               	movlw	0
 15706  0037A8  6E14               	movwf	(atoi@neg+1)^0,c
 15707  0037AA  0E00               	movlw	0
 15708  0037AC  6E13               	movwf	atoi@neg^0,c
 15709  0037AE  EFDB  F01B         	goto	l9620
 15710  0037B2                     l9618:
 15711  0037B2  4A0D               	infsnz	atoi@s^0,f,c
 15712  0037B4  2A0E               	incf	(atoi@s+1)^0,f,c
 15713  0037B6                     l9620:
 15714  0037B6  0E01               	movlw	1
 15715  0037B8  6E19               	movwf	_atoi$1433^0,c
 15716  0037BA  C00D  FFF6         	movff	atoi@s,tblptrl
 15717  0037BE  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15718  0037C2                     	if	0	;tblptru may be non-zero
 15719  0037C2                     	endif
 15720  0037C2                     	if	0	;tblptru may be non-zero
 15721  0037C2                     	endif
 15722  0037C2  0008               	tblrd		*
 15723  0037C4  50F5               	movf	tablat,w,c
 15724  0037C6  0A20               	xorlw	32
 15725  0037C8  B4D8               	btfsc	status,2,c
 15726  0037CA  EFE9  F01B         	goto	u10811
 15727  0037CE  EFEB  F01B         	goto	u10810
 15728  0037D2                     u10811:
 15729  0037D2  EF08  F01C         	goto	l9628
 15730  0037D6                     u10810:
 15731  0037D6  0EF7               	movlw	247
 15732  0037D8  6E0F               	movwf	??_atoi^0,c
 15733  0037DA  0EFF               	movlw	255
 15734  0037DC  6E10               	movwf	(??_atoi+1)^0,c
 15735  0037DE  C00D  FFF6         	movff	atoi@s,tblptrl
 15736  0037E2  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15737  0037E6                     	if	0	;tblptru may be non-zero
 15738  0037E6                     	endif
 15739  0037E6                     	if	0	;tblptru may be non-zero
 15740  0037E6                     	endif
 15741  0037E6  0008               	tblrd		*
 15742  0037E8  50F5               	movf	tablat,w,c
 15743  0037EA  6E11               	movwf	(??_atoi+2)^0,c
 15744  0037EC  6A12               	clrf	(??_atoi+3)^0,c
 15745  0037EE  500F               	movf	??_atoi^0,w,c
 15746  0037F0  2611               	addwf	(??_atoi+2)^0,f,c
 15747  0037F2  5010               	movf	(??_atoi+1)^0,w,c
 15748  0037F4  2212               	addwfc	(??_atoi+3)^0,f,c
 15749  0037F6  5012               	movf	(??_atoi+3)^0,w,c
 15750  0037F8  E109               	bnz	u10820
 15751  0037FA  0E05               	movlw	5
 15752  0037FC  5C11               	subwf	(??_atoi+2)^0,w,c
 15753  0037FE  A0D8               	btfss	status,0,c
 15754  003800  EF04  F01C         	goto	u10821
 15755  003804  EF06  F01C         	goto	u10820
 15756  003808                     u10821:
 15757  003808  EF08  F01C         	goto	l9628
 15758  00380C                     u10820:
 15759  00380C  0E00               	movlw	0
 15760  00380E  6E19               	movwf	_atoi$1433^0,c
 15761  003810                     l9628:
 15762  003810  C019  F015         	movff	_atoi$1433,_atoi$1432
 15763  003814  6A16               	clrf	(_atoi$1432+1)^0,c
 15764  003816  5015               	movf	_atoi$1432^0,w,c
 15765  003818  1016               	iorwf	(_atoi$1432+1)^0,w,c
 15766  00381A  A4D8               	btfss	status,2,c
 15767  00381C  EF12  F01C         	goto	u10831
 15768  003820  EF14  F01C         	goto	u10830
 15769  003824                     u10831:
 15770  003824  EFD9  F01B         	goto	l9618
 15771  003828                     u10830:
 15772  003828  EF1E  F01C         	goto	l9638
 15773  00382C                     l9634:
 15774  00382C  0E00               	movlw	0
 15775  00382E  6E14               	movwf	(atoi@neg+1)^0,c
 15776  003830  0E01               	movlw	1
 15777  003832  6E13               	movwf	atoi@neg^0,c
 15778  003834                     l9636:
 15779  003834  4A0D               	infsnz	atoi@s^0,f,c
 15780  003836  2A0E               	incf	(atoi@s+1)^0,f,c
 15781  003838  EF53  F01C         	goto	l9644
 15782  00383C                     l9638:
 15783  00383C  C00D  FFF6         	movff	atoi@s,tblptrl
 15784  003840  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15785  003844                     	if	0	;tblptru may be non-zero
 15786  003844                     	endif
 15787  003844                     	if	0	;tblptru may be non-zero
 15788  003844                     	endif
 15789  003844  0008               	tblrd		*
 15790  003846  50F5               	movf	tablat,w,c
 15791  003848  6E0F               	movwf	??_atoi^0,c
 15792  00384A  6A10               	clrf	(??_atoi+1)^0,c
 15793                           
 15794                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15795                           ; Switch size 1, requested type "simple"
 15796                           ; Number of cases is 1, Range of values is 0 to 0
 15797                           ; switch strategies available:
 15798                           ; Name         Instructions Cycles
 15799                           ; simple_byte            4     3 (average)
 15800                           ;	Chosen strategy is simple_byte
 15801  00384C  5010               	movf	(??_atoi+1)^0,w,c
 15802  00384E  0A00               	xorlw	0	; case 0
 15803  003850  B4D8               	btfsc	status,2,c
 15804  003852  EF2D  F01C         	goto	l11400
 15805  003856  EF53  F01C         	goto	l9644
 15806  00385A                     l11400:
 15807                           
 15808                           ; Switch size 1, requested type "simple"
 15809                           ; Number of cases is 2, Range of values is 43 to 45
 15810                           ; switch strategies available:
 15811                           ; Name         Instructions Cycles
 15812                           ; simple_byte            7     4 (average)
 15813                           ;	Chosen strategy is simple_byte
 15814  00385A  500F               	movf	??_atoi^0,w,c
 15815  00385C  0A2B               	xorlw	43	; case 43
 15816  00385E  B4D8               	btfsc	status,2,c
 15817  003860  EF1A  F01C         	goto	l9636
 15818  003864  0A06               	xorlw	6	; case 45
 15819  003866  B4D8               	btfsc	status,2,c
 15820  003868  EF16  F01C         	goto	l9634
 15821  00386C  EF53  F01C         	goto	l9644
 15822  003870                     l9640:
 15823  003870  C01A  F006         	movff	atoi@n,___wmul@multiplier
 15824  003874  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 15825  003878  0E00               	movlw	0
 15826  00387A  6E09               	movwf	(___wmul@multiplicand+1)^0,c
 15827  00387C  0E0A               	movlw	10
 15828  00387E  6E08               	movwf	___wmul@multiplicand^0,c
 15829  003880  EC4B  F02C         	call	___wmul	;wreg free
 15830  003884  C00D  FFF6         	movff	atoi@s,tblptrl
 15831  003888  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15832  00388C                     	if	0	;tblptru may be non-zero
 15833  00388C                     	endif
 15834  00388C                     	if	0	;tblptru may be non-zero
 15835  00388C                     	endif
 15836  00388C  0008               	tblrd		*
 15837  00388E  50F5               	movf	tablat,w,c
 15838  003890  5E06               	subwf	?___wmul^0,f,c
 15839  003892  0E00               	movlw	0
 15840  003894  5A07               	subwfb	(?___wmul+1)^0,f,c
 15841  003896  0E30               	movlw	48
 15842  003898  2406               	addwf	?___wmul^0,w,c
 15843  00389A  6E1A               	movwf	atoi@n^0,c
 15844  00389C  0E00               	movlw	0
 15845  00389E  2007               	addwfc	(?___wmul+1)^0,w,c
 15846  0038A0  6E1B               	movwf	(atoi@n+1)^0,c
 15847  0038A2  EF1A  F01C         	goto	l9636
 15848  0038A6                     l9644:
 15849  0038A6  0ED0               	movlw	208
 15850  0038A8  6E0F               	movwf	??_atoi^0,c
 15851  0038AA  0EFF               	movlw	255
 15852  0038AC  6E10               	movwf	(??_atoi+1)^0,c
 15853  0038AE  C00D  FFF6         	movff	atoi@s,tblptrl
 15854  0038B2  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15855  0038B6                     	if	0	;tblptru may be non-zero
 15856  0038B6                     	endif
 15857  0038B6                     	if	0	;tblptru may be non-zero
 15858  0038B6                     	endif
 15859  0038B6  0008               	tblrd		*
 15860  0038B8  50F5               	movf	tablat,w,c
 15861  0038BA  6E11               	movwf	(??_atoi+2)^0,c
 15862  0038BC  6A12               	clrf	(??_atoi+3)^0,c
 15863  0038BE  500F               	movf	??_atoi^0,w,c
 15864  0038C0  2611               	addwf	(??_atoi+2)^0,f,c
 15865  0038C2  5010               	movf	(??_atoi+1)^0,w,c
 15866  0038C4  2212               	addwfc	(??_atoi+3)^0,f,c
 15867  0038C6  5012               	movf	(??_atoi+3)^0,w,c
 15868  0038C8  E10A               	bnz	u10840
 15869  0038CA  0E0A               	movlw	10
 15870  0038CC  5C11               	subwf	(??_atoi+2)^0,w,c
 15871  0038CE  A0D8               	btfss	status,0,c
 15872  0038D0  EF6C  F01C         	goto	u10841
 15873  0038D4  EF6F  F01C         	goto	u10840
 15874  0038D8                     u10841:
 15875  0038D8  0E01               	movlw	1
 15876  0038DA  EF70  F01C         	goto	u10850
 15877  0038DE                     u10840:
 15878  0038DE  0E00               	movlw	0
 15879  0038E0                     u10850:
 15880  0038E0  6E17               	movwf	_atoi$1434^0,c
 15881  0038E2  6A18               	clrf	(_atoi$1434+1)^0,c
 15882  0038E4  5017               	movf	_atoi$1434^0,w,c
 15883  0038E6  1018               	iorwf	(_atoi$1434+1)^0,w,c
 15884  0038E8  A4D8               	btfss	status,2,c
 15885  0038EA  EF79  F01C         	goto	u10861
 15886  0038EE  EF7B  F01C         	goto	u10860
 15887  0038F2                     u10861:
 15888  0038F2  EF38  F01C         	goto	l9640
 15889  0038F6                     u10860:
 15890  0038F6  5013               	movf	atoi@neg^0,w,c
 15891  0038F8  1014               	iorwf	(atoi@neg+1)^0,w,c
 15892  0038FA  A4D8               	btfss	status,2,c
 15893  0038FC  EF82  F01C         	goto	u10871
 15894  003900  EF84  F01C         	goto	u10870
 15895  003904                     u10871:
 15896  003904  EF92  F01C         	goto	l1679
 15897  003908                     u10870:
 15898  003908  C01A  F00F         	movff	atoi@n,??_atoi
 15899  00390C  C01B  F010         	movff	atoi@n+1,??_atoi+1
 15900  003910  1E0F               	comf	??_atoi^0,f,c
 15901  003912  1E10               	comf	(??_atoi+1)^0,f,c
 15902  003914  4A0F               	infsnz	??_atoi^0,f,c
 15903  003916  2A10               	incf	(??_atoi+1)^0,f,c
 15904  003918  C00F  F00D         	movff	??_atoi,?_atoi
 15905  00391C  C010  F00E         	movff	??_atoi+1,?_atoi+1
 15906  003920  EF96  F01C         	goto	l1682
 15907  003924                     l1679:
 15908  003924  C01A  F00D         	movff	atoi@n,?_atoi
 15909  003928  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 15910  00392C                     l1682:
 15911  00392C  0012               	return		;funcret
 15912  00392E                     __end_of_atoi:
 15913                           	opt callstack 0
 15914                           
 15915 ;; *************** function _isspace *****************
 15916 ;; Defined at:
 15917 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 15918 ;; Parameters:    Size  Location     Type
 15919 ;;  c               2    5[COMRAM] int 
 15920 ;; Auto vars:     Size  Location     Type
 15921 ;;		None
 15922 ;; Return value:  Size  Location     Type
 15923 ;;                  2    5[COMRAM] int 
 15924 ;; Registers used:
 15925 ;;		wreg, status,2, status,0
 15926 ;; Tracked objects:
 15927 ;;		On entry : 0/0
 15928 ;;		On exit  : 0/0
 15929 ;;		Unchanged: 0/0
 15930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15931 ;;      Params:         2       0       0       0       0       0       0       0       0
 15932 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15933 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15934 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15935 ;;Total ram usage:        7 bytes
 15936 ;; Hardware stack levels used:    1
 15937 ;; Hardware stack levels required when called:    2
 15938 ;; This function calls:
 15939 ;;		Nothing
 15940 ;; This function is called by:
 15941 ;;		_atoi
 15942 ;; This function uses a non-reentrant model
 15943 ;;
 15944                           
 15945                           	psect	text62
 15946  00541A                     __ptext62:
 15947                           	opt callstack 0
 15948  00541A                     _isspace:
 15949                           	opt callstack 23
 15950  00541A  0E01               	movlw	1
 15951  00541C  6E0C               	movwf	_isspace$1463^0,c
 15952  00541E  0E20               	movlw	32
 15953  005420  1806               	xorwf	isspace@c^0,w,c
 15954  005422  1007               	iorwf	(isspace@c+1)^0,w,c
 15955  005424  B4D8               	btfsc	status,2,c
 15956  005426  EF17  F02A         	goto	u9981
 15957  00542A  EF19  F02A         	goto	u9980
 15958  00542E                     u9981:
 15959  00542E  EF32  F02A         	goto	l9186
 15960  005432                     u9980:
 15961  005432  0EF7               	movlw	247
 15962  005434  6E08               	movwf	??_isspace^0,c
 15963  005436  0EFF               	movlw	255
 15964  005438  6E09               	movwf	(??_isspace+1)^0,c
 15965  00543A  C006  F00A         	movff	isspace@c,??_isspace+2
 15966  00543E  C007  F00B         	movff	isspace@c+1,??_isspace+3
 15967  005442  5008               	movf	??_isspace^0,w,c
 15968  005444  260A               	addwf	(??_isspace+2)^0,f,c
 15969  005446  5009               	movf	(??_isspace+1)^0,w,c
 15970  005448  220B               	addwfc	(??_isspace+3)^0,f,c
 15971  00544A  500B               	movf	(??_isspace+3)^0,w,c
 15972  00544C  E109               	bnz	u9990
 15973  00544E  0E05               	movlw	5
 15974  005450  5C0A               	subwf	(??_isspace+2)^0,w,c
 15975  005452  A0D8               	btfss	status,0,c
 15976  005454  EF2E  F02A         	goto	u9991
 15977  005458  EF30  F02A         	goto	u9990
 15978  00545C                     u9991:
 15979  00545C  EF32  F02A         	goto	l9186
 15980  005460                     u9990:
 15981  005460  0E00               	movlw	0
 15982  005462  6E0C               	movwf	_isspace$1463^0,c
 15983  005464                     l9186:
 15984  005464  C00C  F006         	movff	_isspace$1463,?_isspace
 15985  005468  6A07               	clrf	(?_isspace+1)^0,c
 15986  00546A  0012               	return		;funcret
 15987  00546C                     __end_of_isspace:
 15988                           	opt callstack 0
 15989                           
 15990 ;; *************** function _isdigit *****************
 15991 ;; Defined at:
 15992 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15993 ;; Parameters:    Size  Location     Type
 15994 ;;  c               2    5[COMRAM] int 
 15995 ;; Auto vars:     Size  Location     Type
 15996 ;;		None
 15997 ;; Return value:  Size  Location     Type
 15998 ;;                  2    5[COMRAM] int 
 15999 ;; Registers used:
 16000 ;;		wreg, status,2, status,0
 16001 ;; Tracked objects:
 16002 ;;		On entry : 0/0
 16003 ;;		On exit  : 0/0
 16004 ;;		Unchanged: 0/0
 16005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16006 ;;      Params:         2       0       0       0       0       0       0       0       0
 16007 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16008 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16009 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16010 ;;Total ram usage:        6 bytes
 16011 ;; Hardware stack levels used:    1
 16012 ;; Hardware stack levels required when called:    2
 16013 ;; This function calls:
 16014 ;;		Nothing
 16015 ;; This function is called by:
 16016 ;;		_vfpfcnvrt
 16017 ;;		_atoi
 16018 ;; This function uses a non-reentrant model
 16019 ;;
 16020                           
 16021                           	psect	text63
 16022  0057AE                     __ptext63:
 16023                           	opt callstack 0
 16024  0057AE                     _isdigit:
 16025                           	opt callstack 24
 16026  0057AE  0ED0               	movlw	208
 16027  0057B0  6E08               	movwf	??_isdigit^0,c
 16028  0057B2  0EFF               	movlw	255
 16029  0057B4  6E09               	movwf	(??_isdigit+1)^0,c
 16030  0057B6  C006  F00A         	movff	isdigit@c,??_isdigit+2
 16031  0057BA  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 16032  0057BE  5008               	movf	??_isdigit^0,w,c
 16033  0057C0  260A               	addwf	(??_isdigit+2)^0,f,c
 16034  0057C2  5009               	movf	(??_isdigit+1)^0,w,c
 16035  0057C4  220B               	addwfc	(??_isdigit+3)^0,f,c
 16036  0057C6  500B               	movf	(??_isdigit+3)^0,w,c
 16037  0057C8  E10A               	bnz	u9000
 16038  0057CA  0E0A               	movlw	10
 16039  0057CC  5C0A               	subwf	(??_isdigit+2)^0,w,c
 16040  0057CE  A0D8               	btfss	status,0,c
 16041  0057D0  EFEC  F02B         	goto	u9001
 16042  0057D4  EFEF  F02B         	goto	u9000
 16043  0057D8                     u9001:
 16044  0057D8  0E01               	movlw	1
 16045  0057DA  EFF0  F02B         	goto	u9010
 16046  0057DE                     u9000:
 16047  0057DE  0E00               	movlw	0
 16048  0057E0                     u9010:
 16049  0057E0  6E06               	movwf	?_isdigit^0,c
 16050  0057E2  6A07               	clrf	(?_isdigit+1)^0,c
 16051  0057E4  0012               	return		;funcret
 16052  0057E6                     __end_of_isdigit:
 16053                           	opt callstack 0
 16054                           
 16055 ;; *************** function ___wmul *****************
 16056 ;; Defined at:
 16057 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 16058 ;; Parameters:    Size  Location     Type
 16059 ;;  multiplier      2    5[COMRAM] unsigned int 
 16060 ;;  multiplicand    2    7[COMRAM] unsigned int 
 16061 ;; Auto vars:     Size  Location     Type
 16062 ;;  product         2    9[COMRAM] unsigned int 
 16063 ;; Return value:  Size  Location     Type
 16064 ;;                  2    5[COMRAM] unsigned int 
 16065 ;; Registers used:
 16066 ;;		wreg, status,2, status,0, prodl, prodh
 16067 ;; Tracked objects:
 16068 ;;		On entry : 0/0
 16069 ;;		On exit  : 0/0
 16070 ;;		Unchanged: 0/0
 16071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16072 ;;      Params:         4       0       0       0       0       0       0       0       0
 16073 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16074 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16075 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16076 ;;Total ram usage:        6 bytes
 16077 ;; Hardware stack levels used:    1
 16078 ;; Hardware stack levels required when called:    2
 16079 ;; This function calls:
 16080 ;;		Nothing
 16081 ;; This function is called by:
 16082 ;;		_atoi
 16083 ;; This function uses a non-reentrant model
 16084 ;;
 16085                           
 16086                           	psect	text64
 16087  005896                     __ptext64:
 16088                           	opt callstack 0
 16089  005896                     ___wmul:
 16090                           	opt callstack 23
 16091  005896  5006               	movf	___wmul@multiplier^0,w,c
 16092  005898  0208               	mulwf	___wmul@multiplicand^0,c
 16093  00589A  CFF3 F00A          	movff	prodl,___wmul@product
 16094  00589E  CFF4 F00B          	movff	prodh,___wmul@product+1
 16095  0058A2  5006               	movf	___wmul@multiplier^0,w,c
 16096  0058A4  0209               	mulwf	(___wmul@multiplicand+1)^0,c
 16097  0058A6  50F3               	movf	243,w,c
 16098  0058A8  260B               	addwf	(___wmul@product+1)^0,f,c
 16099  0058AA  5007               	movf	(___wmul@multiplier+1)^0,w,c
 16100  0058AC  0208               	mulwf	___wmul@multiplicand^0,c
 16101  0058AE  50F3               	movf	243,w,c
 16102  0058B0  260B               	addwf	(___wmul@product+1)^0,f,c
 16103  0058B2  C00A  F006         	movff	___wmul@product,?___wmul
 16104  0058B6  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 16105  0058BA  0012               	return		;funcret
 16106  0058BC                     __end_of___wmul:
 16107                           	opt callstack 0
 16108                           
 16109 ;; *************** function _seLlegoAlDestino *****************
 16110 ;; Defined at:
 16111 ;;		line 839 in file "main.c"
 16112 ;; Parameters:    Size  Location     Type
 16113 ;;		None
 16114 ;; Auto vars:     Size  Location     Type
 16115 ;;  llegoDestino    1   10[COMRAM] unsigned char 
 16116 ;; Return value:  Size  Location     Type
 16117 ;;                  1    wreg      unsigned char 
 16118 ;; Registers used:
 16119 ;;		wreg, status,2, status,0, cstack
 16120 ;; Tracked objects:
 16121 ;;		On entry : 0/0
 16122 ;;		On exit  : 0/0
 16123 ;;		Unchanged: 0/0
 16124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16125 ;;      Params:         0       0       0       0       0       0       0       0       0
 16126 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16127 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16128 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16129 ;;Total ram usage:        1 bytes
 16130 ;; Hardware stack levels used:    1
 16131 ;; Hardware stack levels required when called:    3
 16132 ;; This function calls:
 16133 ;;		_dameLecturaAdc
 16134 ;; This function is called by:
 16135 ;;		_decidirDireccion
 16136 ;; This function uses a non-reentrant model
 16137 ;;
 16138                           
 16139                           	psect	text65
 16140  00581C                     __ptext65:
 16141                           	opt callstack 0
 16142  00581C                     _seLlegoAlDestino:
 16143                           	opt callstack 25
 16144  00581C                     
 16145                           ;main.c: 841:     T_BOOL llegoDestino = 0;
 16146  00581C  0E00               	movlw	0
 16147  00581E  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 16148  005820                     
 16149                           ;main.c: 844:     if (dameLecturaAdc(0) < 20)
 16150  005820  0E00               	movlw	0
 16151  005822  EC18  F02B         	call	_dameLecturaAdc
 16152  005826  BE07               	btfsc	(?_dameLecturaAdc+1)^0,7,c
 16153  005828  EF21  F02C         	goto	u11420
 16154  00582C  5007               	movf	(?_dameLecturaAdc+1)^0,w,c
 16155  00582E  E107               	bnz	u11421
 16156  005830  0E14               	movlw	20
 16157  005832  5C06               	subwf	?_dameLecturaAdc^0,w,c
 16158  005834  B0D8               	btfsc	status,0,c
 16159  005836  EF1F  F02C         	goto	u11421
 16160  00583A  EF21  F02C         	goto	u11420
 16161  00583E                     u11421:
 16162  00583E  EF23  F02C         	goto	l528
 16163  005842                     u11420:
 16164  005842                     
 16165                           ;main.c: 845:         llegoDestino = 1;
 16166  005842  0E01               	movlw	1
 16167  005844  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 16168  005846                     l528:
 16169                           
 16170                           ;main.c: 847:     return llegoDestino;
 16171  005846  500B               	movf	seLlegoAlDestino@llegoDestino^0,w,c
 16172  005848  0012               	return		;funcret
 16173  00584A                     __end_of_seLlegoAlDestino:
 16174                           	opt callstack 0
 16175                           
 16176 ;; *************** function _dameLecturaAdc *****************
 16177 ;; Defined at:
 16178 ;;		line 12 in file "./adc.h"
 16179 ;; Parameters:    Size  Location     Type
 16180 ;;  canalLeer       1    wreg     unsigned char 
 16181 ;; Auto vars:     Size  Location     Type
 16182 ;;  canalLeer       1    9[COMRAM] unsigned char 
 16183 ;; Return value:  Size  Location     Type
 16184 ;;                  2    5[COMRAM] short 
 16185 ;; Registers used:
 16186 ;;		wreg, status,2, status,0
 16187 ;; Tracked objects:
 16188 ;;		On entry : 0/0
 16189 ;;		On exit  : 0/0
 16190 ;;		Unchanged: 0/0
 16191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16192 ;;      Params:         2       0       0       0       0       0       0       0       0
 16193 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16194 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16195 ;;      Totals:         5       0       0       0       0       0       0       0       0
 16196 ;;Total ram usage:        5 bytes
 16197 ;; Hardware stack levels used:    1
 16198 ;; Hardware stack levels required when called:    2
 16199 ;; This function calls:
 16200 ;;		Nothing
 16201 ;; This function is called by:
 16202 ;;		_seLlegoAlDestino
 16203 ;;		_probarSensores
 16204 ;; This function uses a non-reentrant model
 16205 ;;
 16206                           
 16207                           	psect	text66
 16208  005630                     __ptext66:
 16209                           	opt callstack 0
 16210  005630                     _dameLecturaAdc:
 16211                           	opt callstack 25
 16212                           
 16213                           ;incstack = 0
 16214                           ;dameLecturaAdc@canalLeer stored from wreg
 16215  005630  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
 16216  005632                     
 16217                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 16218  005632  0E06               	movlw	6
 16219  005634                     u12427:
 16220  005634  2EE8               	decfsz	wreg,f,c
 16221  005636  D7FE               	bra	u12427
 16222  005638  D000               	nop2	
 16223  00563A                     
 16224                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
 16225  00563A  80C2               	bsf	194,0,c	;volatile
 16226  00563C                     
 16227                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
 16228  00563C  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
 16229  005640  4608               	rlncf	??_dameLecturaAdc^0,f,c
 16230  005642  4608               	rlncf	??_dameLecturaAdc^0,f,c
 16231  005644  50C2               	movf	194,w,c	;volatile
 16232  005646  1808               	xorwf	??_dameLecturaAdc^0,w,c
 16233  005648  0BC3               	andlw	-61
 16234  00564A  1808               	xorwf	??_dameLecturaAdc^0,w,c
 16235  00564C  6EC2               	movwf	194,c	;volatile
 16236  00564E                     
 16237                           ;./adc.h: 18:     ADCON0bits.GO = 1;
 16238  00564E  82C2               	bsf	194,1,c	;volatile
 16239  005650                     
 16240                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
 16241  005650  82C2               	bsf	194,1,c	;volatile
 16242  005652                     l235:
 16243  005652  B2C2               	btfsc	194,1,c	;volatile
 16244  005654  EF2E  F02B         	goto	u11141
 16245  005658  EF30  F02B         	goto	u11140
 16246  00565C                     u11141:
 16247  00565C  EF29  F02B         	goto	l235
 16248  005660                     u11140:
 16249  005660                     
 16250                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
 16251  005660  90C2               	bcf	194,0,c	;volatile
 16252  005662                     
 16253                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
 16254  005662  50C4               	movf	196,w,c	;volatile
 16255  005664  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
 16256  005666  6A08               	clrf	??_dameLecturaAdc^0,c
 16257  005668  50C3               	movf	195,w,c	;volatile
 16258  00566A  2408               	addwf	??_dameLecturaAdc^0,w,c
 16259  00566C  6E06               	movwf	?_dameLecturaAdc^0,c
 16260  00566E  0E00               	movlw	0
 16261  005670  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
 16262  005672  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
 16263  005674  0012               	return		;funcret
 16264  005676                     __end_of_dameLecturaAdc:
 16265                           	opt callstack 0
 16266                           
 16267 ;; *************** function _mostrarDireccionElegida *****************
 16268 ;; Defined at:
 16269 ;;		line 851 in file "main.c"
 16270 ;; Parameters:    Size  Location     Type
 16271 ;;  direccionEle    1    wreg     unsigned char 
 16272 ;; Auto vars:     Size  Location     Type
 16273 ;;  direccionEle    1   10[COMRAM] unsigned char 
 16274 ;; Return value:  Size  Location     Type
 16275 ;;                  1    wreg      void 
 16276 ;; Registers used:
 16277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16278 ;; Tracked objects:
 16279 ;;		On entry : 0/0
 16280 ;;		On exit  : 0/0
 16281 ;;		Unchanged: 0/0
 16282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16283 ;;      Params:         0       0       0       0       0       0       0       0       0
 16284 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16285 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16286 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16287 ;;Total ram usage:        3 bytes
 16288 ;; Hardware stack levels used:    1
 16289 ;; Hardware stack levels required when called:    4
 16290 ;; This function calls:
 16291 ;;		_UART_printf
 16292 ;; This function is called by:
 16293 ;;		_decidirDireccion
 16294 ;; This function uses a non-reentrant model
 16295 ;;
 16296                           
 16297                           	psect	text67
 16298  004EA0                     __ptext67:
 16299                           	opt callstack 0
 16300  004EA0                     _mostrarDireccionElegida:
 16301                           	opt callstack 24
 16302                           
 16303                           ;incstack = 0
 16304                           ;mostrarDireccionElegida@direccionElegida stored from wreg
 16305  004EA0  6E0B               	movwf	mostrarDireccionElegida@direccionElegida^0,c
 16306  004EA2                     
 16307                           ;main.c: 853:     switch (direccionElegida) {
 16308  004EA2  EF73  F027         	goto	l10144
 16309  004EA6                     l10134:
 16310                           
 16311                           ;main.c: 855:             UART_printf("\rDireccion Elegida: ENFRENTE\n\n\r");
 16312  004EA6  0EEA               	movlw	low STR_15
 16313  004EA8  6E07               	movwf	UART_printf@cadena^0,c
 16314  004EAA  0E7E               	movlw	high STR_15
 16315  004EAC  6E08               	movwf	(UART_printf@cadena+1)^0,c
 16316  004EAE  ECDA  F028         	call	_UART_printf	;wreg free
 16317                           
 16318                           ;main.c: 856:             break;
 16319  004EB2  EF90  F027         	goto	l539
 16320  004EB6                     l10136:
 16321                           
 16322                           ;main.c: 859:             UART_printf("\rDireccion Elegida: IZQUIERDA\n\n\r");
 16323  004EB6  0EA9               	movlw	low STR_16
 16324  004EB8  6E07               	movwf	UART_printf@cadena^0,c
 16325  004EBA  0E7E               	movlw	high STR_16
 16326  004EBC  6E08               	movwf	(UART_printf@cadena+1)^0,c
 16327  004EBE  ECDA  F028         	call	_UART_printf	;wreg free
 16328                           
 16329                           ;main.c: 860:             break;
 16330  004EC2  EF90  F027         	goto	l539
 16331  004EC6                     l10138:
 16332                           
 16333                           ;main.c: 863:             UART_printf("\rDireccion Elegida: DERECHA\n\n\r");
 16334  004EC6  0E2A               	movlw	low STR_17
 16335  004EC8  6E07               	movwf	UART_printf@cadena^0,c
 16336  004ECA  0E7F               	movlw	high STR_17
 16337  004ECC  6E08               	movwf	(UART_printf@cadena+1)^0,c
 16338  004ECE  ECDA  F028         	call	_UART_printf	;wreg free
 16339                           
 16340                           ;main.c: 864:             break;
 16341  004ED2  EF90  F027         	goto	l539
 16342  004ED6                     l10140:
 16343                           
 16344                           ;main.c: 867:             UART_printf("\rDireccion Elegida: CALLEJON\n\n\r");
 16345  004ED6  0E0A               	movlw	low STR_18
 16346  004ED8  6E07               	movwf	UART_printf@cadena^0,c
 16347  004EDA  0E7F               	movlw	high STR_18
 16348  004EDC  6E08               	movwf	(UART_printf@cadena+1)^0,c
 16349  004EDE  ECDA  F028         	call	_UART_printf	;wreg free
 16350                           
 16351                           ;main.c: 868:             break;
 16352  004EE2  EF90  F027         	goto	l539
 16353  004EE6                     l10144:
 16354  004EE6  500B               	movf	mostrarDireccionElegida@direccionElegida^0,w,c
 16355  004EE8  6E09               	movwf	??_mostrarDireccionElegida^0,c
 16356  004EEA  6A0A               	clrf	(??_mostrarDireccionElegida+1)^0,c
 16357                           
 16358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16359                           ; Switch size 1, requested type "simple"
 16360                           ; Number of cases is 1, Range of values is 0 to 0
 16361                           ; switch strategies available:
 16362                           ; Name         Instructions Cycles
 16363                           ; simple_byte            4     3 (average)
 16364                           ;	Chosen strategy is simple_byte
 16365  004EEC  500A               	movf	(??_mostrarDireccionElegida+1)^0,w,c
 16366  004EEE  0A00               	xorlw	0	; case 0
 16367  004EF0  B4D8               	btfsc	status,2,c
 16368  004EF2  EF7D  F027         	goto	l11402
 16369  004EF6  EF90  F027         	goto	l539
 16370  004EFA                     l11402:
 16371                           
 16372                           ; Switch size 1, requested type "simple"
 16373                           ; Number of cases is 4, Range of values is 0 to 3
 16374                           ; switch strategies available:
 16375                           ; Name         Instructions Cycles
 16376                           ; simple_byte           13     7 (average)
 16377                           ;	Chosen strategy is simple_byte
 16378  004EFA  5009               	movf	??_mostrarDireccionElegida^0,w,c
 16379  004EFC  0A00               	xorlw	0	; case 0
 16380  004EFE  B4D8               	btfsc	status,2,c
 16381  004F00  EF6B  F027         	goto	l10140
 16382  004F04  0A01               	xorlw	1	; case 1
 16383  004F06  B4D8               	btfsc	status,2,c
 16384  004F08  EF53  F027         	goto	l10134
 16385  004F0C  0A03               	xorlw	3	; case 2
 16386  004F0E  B4D8               	btfsc	status,2,c
 16387  004F10  EF5B  F027         	goto	l10136
 16388  004F14  0A01               	xorlw	1	; case 3
 16389  004F16  B4D8               	btfsc	status,2,c
 16390  004F18  EF63  F027         	goto	l10138
 16391  004F1C  EF90  F027         	goto	l539
 16392  004F20                     l539:
 16393  004F20  0012               	return		;funcret
 16394  004F22                     __end_of_mostrarDireccionElegida:
 16395                           	opt callstack 0
 16396                           
 16397 ;; *************** function _UART_printf *****************
 16398 ;; Defined at:
 16399 ;;		line 47 in file "./UART.h"
 16400 ;; Parameters:    Size  Location     Type
 16401 ;;  cadena          2    6[COMRAM] PTR unsigned char 
 16402 ;;		 -> STR_18(32), STR_17(31), STR_16(33), STR_15(32), 
 16403 ;;		 -> STR_14(23), STR_13(34), STR_12(56), STR_10(6), 
 16404 ;;		 -> STR_9(9), STR_8(11), STR_7(10), buffer(50), 
 16405 ;;		 -> STR_2(25), STR_1(24), 
 16406 ;; Auto vars:     Size  Location     Type
 16407 ;;		None
 16408 ;; Return value:  Size  Location     Type
 16409 ;;                  1    wreg      void 
 16410 ;; Registers used:
 16411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16412 ;; Tracked objects:
 16413 ;;		On entry : 0/0
 16414 ;;		On exit  : 0/0
 16415 ;;		Unchanged: 0/0
 16416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16417 ;;      Params:         2       0       0       0       0       0       0       0       0
 16418 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16419 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16420 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16421 ;;Total ram usage:        2 bytes
 16422 ;; Hardware stack levels used:    1
 16423 ;; Hardware stack levels required when called:    3
 16424 ;; This function calls:
 16425 ;;		_UART_write
 16426 ;; This function is called by:
 16427 ;;		_visualizarPasosRealizados
 16428 ;;		_comportamientoBasico
 16429 ;;		_mostrarDireccionElegida
 16430 ;;		_decidirDireccion
 16431 ;;		_probarMapeoDireccionCruces
 16432 ;;		_probarSensores
 16433 ;;		_probarUltrasonico
 16434 ;; This function uses a non-reentrant model
 16435 ;;
 16436                           
 16437                           	psect	text68
 16438  0051B4                     __ptext68:
 16439                           	opt callstack 0
 16440  0051B4                     _UART_printf:
 16441                           	opt callstack 26
 16442  0051B4                     
 16443                           ;./UART.h: 48:     while (*cadena) {
 16444  0051B4  EFF0  F028         	goto	l9828
 16445  0051B8                     l9824:
 16446                           
 16447                           ;./UART.h: 49:         UART_write(*cadena++);
 16448  0051B8  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 16449  0051BC  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 16450  0051C0  6AF8               	clrf	tblptru,c
 16451  0051C2  0E07               	movlw	(high __ramtop+-1)
 16452  0051C4  64F7               	cpfsgt	tblptrh,c
 16453  0051C6  D003               	bra	u11117
 16454  0051C8  0008               	tblrd		*
 16455  0051CA  50F5               	movf	tablat,w,c
 16456  0051CC  D005               	bra	u11110
 16457  0051CE                     u11117:
 16458  0051CE  CFF6 FFE9          	movff	tblptrl,fsr0l
 16459  0051D2  CFF7 FFEA          	movff	tblptrh,fsr0h
 16460  0051D6  50EF               	movf	indf0,w,c
 16461  0051D8                     u11110:
 16462  0051D8  ECAD  F02C         	call	_UART_write
 16463  0051DC  4A07               	infsnz	UART_printf@cadena^0,f,c
 16464  0051DE  2A08               	incf	(UART_printf@cadena+1)^0,f,c
 16465  0051E0                     l9828:
 16466                           
 16467                           ;./UART.h: 48:     while (*cadena) {
 16468  0051E0  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 16469  0051E4  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 16470  0051E8  6AF8               	clrf	tblptru,c
 16471  0051EA  0E07               	movlw	(high __ramtop+-1)
 16472  0051EC  64F7               	cpfsgt	tblptrh,c
 16473  0051EE  D003               	bra	u11127
 16474  0051F0  0008               	tblrd		*
 16475  0051F2  50F5               	movf	tablat,w,c
 16476  0051F4  D005               	bra	u11120
 16477  0051F6                     u11127:
 16478  0051F6  CFF6 FFE9          	movff	tblptrl,fsr0l
 16479  0051FA  CFF7 FFEA          	movff	tblptrh,fsr0h
 16480  0051FE  50EF               	movf	indf0,w,c
 16481  005200                     u11120:
 16482  005200  0900               	iorlw	0
 16483  005202  A4D8               	btfss	status,2,c
 16484  005204  EF06  F029         	goto	u11131
 16485  005208  EF08  F029         	goto	u11130
 16486  00520C                     u11131:
 16487  00520C  EFDC  F028         	goto	l9824
 16488  005210                     u11130:
 16489  005210  0012               	return		;funcret
 16490  005212                     __end_of_UART_printf:
 16491                           	opt callstack 0
 16492                           
 16493 ;; *************** function _UART_write *****************
 16494 ;; Defined at:
 16495 ;;		line 42 in file "./UART.h"
 16496 ;; Parameters:    Size  Location     Type
 16497 ;;  dato            1    wreg     unsigned char 
 16498 ;; Auto vars:     Size  Location     Type
 16499 ;;  dato            1    5[COMRAM] unsigned char 
 16500 ;; Return value:  Size  Location     Type
 16501 ;;                  1    wreg      void 
 16502 ;; Registers used:
 16503 ;;		wreg
 16504 ;; Tracked objects:
 16505 ;;		On entry : 0/0
 16506 ;;		On exit  : 0/0
 16507 ;;		Unchanged: 0/0
 16508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16509 ;;      Params:         0       0       0       0       0       0       0       0       0
 16510 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16512 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16513 ;;Total ram usage:        1 bytes
 16514 ;; Hardware stack levels used:    1
 16515 ;; Hardware stack levels required when called:    2
 16516 ;; This function calls:
 16517 ;;		Nothing
 16518 ;; This function is called by:
 16519 ;;		_UART_printf
 16520 ;; This function uses a non-reentrant model
 16521 ;;
 16522                           
 16523                           	psect	text69
 16524  00595A                     __ptext69:
 16525                           	opt callstack 0
 16526  00595A                     _UART_write:
 16527                           	opt callstack 26
 16528                           
 16529                           ;incstack = 0
 16530                           ;UART_write@dato stored from wreg
 16531  00595A  6E06               	movwf	UART_write@dato^0,c
 16532  00595C                     
 16533                           ;./UART.h: 43:     TXREG = dato;
 16534  00595C  C006  FFAD         	movff	UART_write@dato,4013	;volatile
 16535  005960                     l220:
 16536  005960  A2AC               	btfss	172,1,c	;volatile
 16537  005962  EFB5  F02C         	goto	u10931
 16538  005966  EFB7  F02C         	goto	u10930
 16539  00596A                     u10931:
 16540  00596A  EFB0  F02C         	goto	l220
 16541  00596E                     u10930:
 16542  00596E  0012               	return		;funcret
 16543  005970                     __end_of_UART_write:
 16544                           	opt callstack 0
 16545                           
 16546 ;; *************** function _hayCruce *****************
 16547 ;; Defined at:
 16548 ;;		line 703 in file "main.c"
 16549 ;; Parameters:    Size  Location     Type
 16550 ;;  caminosRecor    2   63[COMRAM] PTR unsigned char 
 16551 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 16552 ;;  investigando    1   65[COMRAM] unsigned char 
 16553 ;; Auto vars:     Size  Location     Type
 16554 ;;  contCaminos     1   66[COMRAM] unsigned char 
 16555 ;; Return value:  Size  Location     Type
 16556 ;;                  1    wreg      unsigned char 
 16557 ;; Registers used:
 16558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16559 ;; Tracked objects:
 16560 ;;		On entry : 0/0
 16561 ;;		On exit  : 0/0
 16562 ;;		Unchanged: 0/0
 16563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16564 ;;      Params:         3       0       0       0       0       0       0       0       0
 16565 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16566 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16567 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16568 ;;Total ram usage:        4 bytes
 16569 ;; Hardware stack levels used:    1
 16570 ;; Hardware stack levels required when called:    3
 16571 ;; This function calls:
 16572 ;;		___flge
 16573 ;; This function is called by:
 16574 ;;		_decidirDireccion
 16575 ;; This function uses a non-reentrant model
 16576 ;;
 16577                           
 16578                           	psect	text70
 16579  00392E                     __ptext70:
 16580                           	opt callstack 0
 16581  00392E                     _hayCruce:
 16582                           	opt callstack 25
 16583  00392E                     
 16584                           ;main.c: 705:     T_UBYTE contCaminos = 0;
 16585  00392E  0E00               	movlw	0
 16586  003930  6E43               	movwf	hayCruce@contCaminos^0,c
 16587                           
 16588                           ;main.c: 707:     paredEnfrente = 0;
 16589  003932  0E00               	movlw	0
 16590  003934  0101               	movlb	1	; () banked
 16591  003936  6F3B               	movwf	_paredEnfrente& (0+255),b
 16592                           
 16593                           ;main.c: 708:     paredDerecha = 0;
 16594  003938  0E00               	movlw	0
 16595  00393A  6F3A               	movwf	_paredDerecha& (0+255),b
 16596                           
 16597                           ;main.c: 709:     paredIzquierda = 0;
 16598  00393C  0E00               	movlw	0
 16599  00393E  6F39               	movwf	_paredIzquierda& (0+255),b
 16600                           
 16601                           ;main.c: 711:     if (!investigandoCruce) {
 16602  003940  5042               	movf	hayCruce@investigandoCruce^0,w,c
 16603  003942  A4D8               	btfss	status,2,c
 16604  003944  EFA6  F01C         	goto	u11331
 16605  003948  EFA8  F01C         	goto	u11330
 16606  00394C                     u11331:
 16607  00394C  EF52  F01D         	goto	l10112
 16608  003950                     u11330:
 16609  003950                     
 16610                           ; BSR set to: 1
 16611                           ;main.c: 713:         if (sensorEnfrente > 35) {
 16612  003950  0E00               	movlw	0
 16613  003952  6E34               	movwf	___flge@ff1^0,c
 16614  003954  0E00               	movlw	0
 16615  003956  6E35               	movwf	(___flge@ff1+1)^0,c
 16616  003958  0E0C               	movlw	12
 16617  00395A  6E36               	movwf	(___flge@ff1+2)^0,c
 16618  00395C  0E42               	movlw	66
 16619  00395E  6E37               	movwf	(___flge@ff1+3)^0,c
 16620  003960  C055  F038         	movff	_sensorEnfrente,___flge@ff2
 16621  003964  C056  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
 16622  003968  C057  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
 16623  00396C  C058  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
 16624  003970  ECD3  F021         	call	___flge	;wreg free
 16625  003974  B0D8               	btfsc	status,0,c
 16626  003976  EFBF  F01C         	goto	u11341
 16627  00397A  EFC1  F01C         	goto	u11340
 16628  00397E                     u11341:
 16629  00397E  EFC5  F01C         	goto	l10042
 16630  003982                     u11340:
 16631  003982                     
 16632                           ;main.c: 714:             paredEnfrente = 1;
 16633  003982  0E01               	movlw	1
 16634  003984  0101               	movlb	1	; () banked
 16635  003986  6F3B               	movwf	_paredEnfrente& (0+255),b
 16636  003988                     
 16637                           ; BSR set to: 1
 16638                           ;main.c: 715:             contCaminos++;
 16639  003988  2A43               	incf	hayCruce@contCaminos^0,f,c
 16640  00398A                     l10042:
 16641                           
 16642                           ;main.c: 718:         if (sensorIzquierda > 30) {
 16643  00398A  0E00               	movlw	0
 16644  00398C  6E34               	movwf	___flge@ff1^0,c
 16645  00398E  0E00               	movlw	0
 16646  003990  6E35               	movwf	(___flge@ff1+1)^0,c
 16647  003992  0EF0               	movlw	240
 16648  003994  6E36               	movwf	(___flge@ff1+2)^0,c
 16649  003996  0E41               	movlw	65
 16650  003998  6E37               	movwf	(___flge@ff1+3)^0,c
 16651  00399A  C124  F038         	movff	_sensorIzquierda,___flge@ff2
 16652  00399E  C125  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
 16653  0039A2  C126  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
 16654  0039A6  C127  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
 16655  0039AA  ECD3  F021         	call	___flge	;wreg free
 16656  0039AE  B0D8               	btfsc	status,0,c
 16657  0039B0  EFDC  F01C         	goto	u11351
 16658  0039B4  EFDE  F01C         	goto	u11350
 16659  0039B8                     u11351:
 16660  0039B8  EFE2  F01C         	goto	l10048
 16661  0039BC                     u11350:
 16662  0039BC                     
 16663                           ;main.c: 719:             paredIzquierda = 1;
 16664  0039BC  0E01               	movlw	1
 16665  0039BE  0101               	movlb	1	; () banked
 16666  0039C0  6F39               	movwf	_paredIzquierda& (0+255),b
 16667  0039C2                     
 16668                           ; BSR set to: 1
 16669                           ;main.c: 720:             contCaminos++;
 16670  0039C2  2A43               	incf	hayCruce@contCaminos^0,f,c
 16671  0039C4                     l10048:
 16672                           
 16673                           ;main.c: 723:         if (sensorDerecha > 30) {
 16674  0039C4  0E00               	movlw	0
 16675  0039C6  6E34               	movwf	___flge@ff1^0,c
 16676  0039C8  0E00               	movlw	0
 16677  0039CA  6E35               	movwf	(___flge@ff1+1)^0,c
 16678  0039CC  0EF0               	movlw	240
 16679  0039CE  6E36               	movwf	(___flge@ff1+2)^0,c
 16680  0039D0  0E41               	movlw	65
 16681  0039D2  6E37               	movwf	(___flge@ff1+3)^0,c
 16682  0039D4  C128  F038         	movff	_sensorDerecha,___flge@ff2
 16683  0039D8  C129  F039         	movff	_sensorDerecha+1,___flge@ff2+1
 16684  0039DC  C12A  F03A         	movff	_sensorDerecha+2,___flge@ff2+2
 16685  0039E0  C12B  F03B         	movff	_sensorDerecha+3,___flge@ff2+3
 16686  0039E4  ECD3  F021         	call	___flge	;wreg free
 16687  0039E8  B0D8               	btfsc	status,0,c
 16688  0039EA  EFF9  F01C         	goto	u11361
 16689  0039EE  EFFB  F01C         	goto	u11360
 16690  0039F2                     u11361:
 16691  0039F2  EFFF  F01C         	goto	l10054
 16692  0039F6                     u11360:
 16693  0039F6                     
 16694                           ;main.c: 724:             paredDerecha = 1;
 16695  0039F6  0E01               	movlw	1
 16696  0039F8  0101               	movlb	1	; () banked
 16697  0039FA  6F3A               	movwf	_paredDerecha& (0+255),b
 16698  0039FC                     
 16699                           ; BSR set to: 1
 16700                           ;main.c: 725:             contCaminos++;
 16701  0039FC  2A43               	incf	hayCruce@contCaminos^0,f,c
 16702  0039FE                     l10054:
 16703                           
 16704                           ;main.c: 729:         if (contCaminos > 1) {
 16705  0039FE  0E01               	movlw	1
 16706  003A00  6443               	cpfsgt	hayCruce@contCaminos^0,c
 16707  003A02  EF05  F01D         	goto	u11371
 16708  003A06  EF07  F01D         	goto	u11370
 16709  003A0A                     u11371:
 16710  003A0A  EF52  F01D         	goto	l10112
 16711  003A0E                     u11370:
 16712  003A0E                     
 16713                           ;main.c: 740:                 if (paredDerecha)
 16714  003A0E  0101               	movlb	1	; () banked
 16715  003A10  513A               	movf	_paredDerecha& (0+255),w,b
 16716  003A12  B4D8               	btfsc	status,2,c
 16717  003A14  EF0E  F01D         	goto	u11381
 16718  003A18  EF10  F01D         	goto	u11380
 16719  003A1C                     u11381:
 16720  003A1C  EF1A  F01D         	goto	l10068
 16721  003A20                     u11380:
 16722  003A20                     
 16723                           ; BSR set to: 1
 16724  003A20  EE20 F002          	lfsr	2,2
 16725  003A24  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16726  003A26  26D9               	addwf	fsr2l,f,c
 16727  003A28  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16728  003A2A  22DA               	addwfc	fsr2h,f,c
 16729  003A2C  0E31               	movlw	49
 16730  003A2E  6EDF               	movwf	indf2,c
 16731  003A30  EF22  F01D         	goto	l10088
 16732  003A34                     l10068:
 16733                           
 16734                           ; BSR set to: 1
 16735  003A34  EE20 F002          	lfsr	2,2
 16736  003A38  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16737  003A3A  26D9               	addwf	fsr2l,f,c
 16738  003A3C  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16739  003A3E  22DA               	addwfc	fsr2h,f,c
 16740  003A40  0E30               	movlw	48
 16741  003A42  6EDF               	movwf	indf2,c
 16742  003A44                     l10088:
 16743                           
 16744                           ; BSR set to: 1
 16745                           ;main.c: 770:                 if (paredIzquierda)
 16746  003A44  5139               	movf	_paredIzquierda& (0+255),w,b
 16747  003A46  B4D8               	btfsc	status,2,c
 16748  003A48  EF28  F01D         	goto	u11391
 16749  003A4C  EF2A  F01D         	goto	u11390
 16750  003A50                     u11391:
 16751  003A50  EF34  F01D         	goto	l10092
 16752  003A54                     u11390:
 16753  003A54                     
 16754                           ; BSR set to: 1
 16755  003A54  EE20 F001          	lfsr	2,1
 16756  003A58  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16757  003A5A  26D9               	addwf	fsr2l,f,c
 16758  003A5C  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16759  003A5E  22DA               	addwfc	fsr2h,f,c
 16760  003A60  0E31               	movlw	49
 16761  003A62  6EDF               	movwf	indf2,c
 16762  003A64  EF3C  F01D         	goto	l10094
 16763  003A68                     l10092:
 16764                           
 16765                           ; BSR set to: 1
 16766  003A68  EE20 F001          	lfsr	2,1
 16767  003A6C  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16768  003A6E  26D9               	addwf	fsr2l,f,c
 16769  003A70  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16770  003A72  22DA               	addwfc	fsr2h,f,c
 16771  003A74  0E30               	movlw	48
 16772  003A76  6EDF               	movwf	indf2,c
 16773  003A78                     l10094:
 16774                           
 16775                           ; BSR set to: 1
 16776                           ;main.c: 779:                 if (paredEnfrente)
 16777  003A78  513B               	movf	_paredEnfrente& (0+255),w,b
 16778  003A7A  B4D8               	btfsc	status,2,c
 16779  003A7C  EF42  F01D         	goto	u11401
 16780  003A80  EF44  F01D         	goto	u11400
 16781  003A84                     u11401:
 16782  003A84  EF4C  F01D         	goto	l10098
 16783  003A88                     u11400:
 16784  003A88                     
 16785                           ; BSR set to: 1
 16786                           ;main.c: 780:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '1';
 16787  003A88  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 16788  003A8C  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 16789  003A90  0E31               	movlw	49
 16790  003A92  6EDF               	movwf	indf2,c
 16791  003A94  EF52  F01D         	goto	l10112
 16792  003A98                     l10098:
 16793                           
 16794                           ; BSR set to: 1
 16795                           ;main.c: 782:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '0';
 16796  003A98  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 16797  003A9C  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 16798  003AA0  0E30               	movlw	48
 16799  003AA2  6EDF               	movwf	indf2,c
 16800  003AA4                     l10112:
 16801                           
 16802                           ;main.c: 807:     if (contCaminos > 1)
 16803  003AA4  0E01               	movlw	1
 16804  003AA6  6443               	cpfsgt	hayCruce@contCaminos^0,c
 16805  003AA8  EF58  F01D         	goto	u11411
 16806  003AAC  EF5A  F01D         	goto	u11410
 16807  003AB0                     u11411:
 16808  003AB0  EF5D  F01D         	goto	l10120
 16809  003AB4                     u11410:
 16810  003AB4                     
 16811                           ;main.c: 808:         return 1;
 16812  003AB4  0E01               	movlw	1
 16813  003AB6  EF5E  F01D         	goto	l509
 16814  003ABA                     l10120:
 16815                           
 16816                           ;main.c: 811:         return 0;
 16817  003ABA  0E00               	movlw	0
 16818  003ABC                     l509:
 16819  003ABC  0012               	return		;funcret
 16820  003ABE                     __end_of_hayCruce:
 16821                           	opt callstack 0
 16822                           
 16823 ;; *************** function ___flge *****************
 16824 ;; Defined at:
 16825 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 16826 ;; Parameters:    Size  Location     Type
 16827 ;;  ff1             4   51[COMRAM] unsigned char 
 16828 ;;  ff2             4   55[COMRAM] unsigned char 
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;		None
 16831 ;; Return value:  Size  Location     Type
 16832 ;;		None               void
 16833 ;; Registers used:
 16834 ;;		wreg, status,2, status,0
 16835 ;; Tracked objects:
 16836 ;;		On entry : 0/0
 16837 ;;		On exit  : 0/0
 16838 ;;		Unchanged: 0/0
 16839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16840 ;;      Params:         8       0       0       0       0       0       0       0       0
 16841 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16842 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16843 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16844 ;;Total ram usage:       12 bytes
 16845 ;; Hardware stack levels used:    1
 16846 ;; Hardware stack levels required when called:    2
 16847 ;; This function calls:
 16848 ;;		Nothing
 16849 ;; This function is called by:
 16850 ;;		_forzarEspejeo
 16851 ;;		_alinearDespuesCallejon
 16852 ;;		_hayCruce
 16853 ;;		_decidirDireccion
 16854 ;;		_efgtoa
 16855 ;;		_roundf
 16856 ;;		_probarPID
 16857 ;;		_probarCruceT
 16858 ;; This function uses a non-reentrant model
 16859 ;;
 16860                           
 16861                           	psect	text71
 16862  0043A6                     __ptext71:
 16863                           	opt callstack 0
 16864  0043A6                     ___flge:
 16865                           	opt callstack 23
 16866  0043A6  0E00               	movlw	0
 16867  0043A8  1434               	andwf	___flge@ff1^0,w,c
 16868  0043AA  6E3C               	movwf	??___flge^0,c
 16869  0043AC  0E00               	movlw	0
 16870  0043AE  1435               	andwf	(___flge@ff1+1)^0,w,c
 16871  0043B0  6E3D               	movwf	(??___flge+1)^0,c
 16872  0043B2  0E80               	movlw	128
 16873  0043B4  1436               	andwf	(___flge@ff1+2)^0,w,c
 16874  0043B6  6E3E               	movwf	(??___flge+2)^0,c
 16875  0043B8  0E7F               	movlw	127
 16876  0043BA  1437               	andwf	(___flge@ff1+3)^0,w,c
 16877  0043BC  6E3F               	movwf	(??___flge+3)^0,c
 16878  0043BE  503C               	movf	??___flge^0,w,c
 16879  0043C0  103D               	iorwf	(??___flge+1)^0,w,c
 16880  0043C2  103E               	iorwf	(??___flge+2)^0,w,c
 16881  0043C4  103F               	iorwf	(??___flge+3)^0,w,c
 16882  0043C6  A4D8               	btfss	status,2,c
 16883  0043C8  EFE8  F021         	goto	u9721
 16884  0043CC  EFEA  F021         	goto	u9720
 16885  0043D0                     u9721:
 16886  0043D0  EFF2  F021         	goto	l9040
 16887  0043D4                     u9720:
 16888  0043D4  0E00               	movlw	0
 16889  0043D6  6E34               	movwf	___flge@ff1^0,c
 16890  0043D8  0E00               	movlw	0
 16891  0043DA  6E35               	movwf	(___flge@ff1+1)^0,c
 16892  0043DC  0E00               	movlw	0
 16893  0043DE  6E36               	movwf	(___flge@ff1+2)^0,c
 16894  0043E0  0E00               	movlw	0
 16895  0043E2  6E37               	movwf	(___flge@ff1+3)^0,c
 16896  0043E4                     l9040:
 16897  0043E4  0E00               	movlw	0
 16898  0043E6  1438               	andwf	___flge@ff2^0,w,c
 16899  0043E8  6E3C               	movwf	??___flge^0,c
 16900  0043EA  0E00               	movlw	0
 16901  0043EC  1439               	andwf	(___flge@ff2+1)^0,w,c
 16902  0043EE  6E3D               	movwf	(??___flge+1)^0,c
 16903  0043F0  0E80               	movlw	128
 16904  0043F2  143A               	andwf	(___flge@ff2+2)^0,w,c
 16905  0043F4  6E3E               	movwf	(??___flge+2)^0,c
 16906  0043F6  0E7F               	movlw	127
 16907  0043F8  143B               	andwf	(___flge@ff2+3)^0,w,c
 16908  0043FA  6E3F               	movwf	(??___flge+3)^0,c
 16909  0043FC  503C               	movf	??___flge^0,w,c
 16910  0043FE  103D               	iorwf	(??___flge+1)^0,w,c
 16911  004400  103E               	iorwf	(??___flge+2)^0,w,c
 16912  004402  103F               	iorwf	(??___flge+3)^0,w,c
 16913  004404  A4D8               	btfss	status,2,c
 16914  004406  EF07  F022         	goto	u9731
 16915  00440A  EF09  F022         	goto	u9730
 16916  00440E                     u9731:
 16917  00440E  EF11  F022         	goto	l9044
 16918  004412                     u9730:
 16919  004412  0E00               	movlw	0
 16920  004414  6E38               	movwf	___flge@ff2^0,c
 16921  004416  0E00               	movlw	0
 16922  004418  6E39               	movwf	(___flge@ff2+1)^0,c
 16923  00441A  0E00               	movlw	0
 16924  00441C  6E3A               	movwf	(___flge@ff2+2)^0,c
 16925  00441E  0E00               	movlw	0
 16926  004420  6E3B               	movwf	(___flge@ff2+3)^0,c
 16927  004422                     l9044:
 16928  004422  AE37               	btfss	(___flge@ff1+3)^0,7,c
 16929  004424  EF16  F022         	goto	u9741
 16930  004428  EF18  F022         	goto	u9740
 16931  00442C                     u9741:
 16932  00442C  EF21  F022         	goto	l9048
 16933  004430                     u9740:
 16934  004430  6C34               	negf	___flge@ff1^0,c
 16935  004432  1E35               	comf	(___flge@ff1+1)^0,f,c
 16936  004434  B0D8               	btfsc	status,0,c
 16937  004436  2A35               	incf	(___flge@ff1+1)^0,f,c
 16938  004438  1E36               	comf	(___flge@ff1+2)^0,f,c
 16939  00443A  B0D8               	btfsc	status,0,c
 16940  00443C  2A36               	incf	(___flge@ff1+2)^0,f,c
 16941  00443E  0E80               	movlw	128
 16942  004440  5637               	subfwb	(___flge@ff1+3)^0,f,c
 16943  004442                     l9048:
 16944  004442  AE3B               	btfss	(___flge@ff2+3)^0,7,c
 16945  004444  EF26  F022         	goto	u9751
 16946  004448  EF28  F022         	goto	u9750
 16947  00444C                     u9751:
 16948  00444C  EF31  F022         	goto	l1227
 16949  004450                     u9750:
 16950  004450  6C38               	negf	___flge@ff2^0,c
 16951  004452  1E39               	comf	(___flge@ff2+1)^0,f,c
 16952  004454  B0D8               	btfsc	status,0,c
 16953  004456  2A39               	incf	(___flge@ff2+1)^0,f,c
 16954  004458  1E3A               	comf	(___flge@ff2+2)^0,f,c
 16955  00445A  B0D8               	btfsc	status,0,c
 16956  00445C  2A3A               	incf	(___flge@ff2+2)^0,f,c
 16957  00445E  0E80               	movlw	128
 16958  004460  563B               	subfwb	(___flge@ff2+3)^0,f,c
 16959  004462                     l1227:
 16960  004462  0E00               	movlw	0
 16961  004464  1A34               	xorwf	___flge@ff1^0,f,c
 16962  004466  0E00               	movlw	0
 16963  004468  1A35               	xorwf	(___flge@ff1+1)^0,f,c
 16964  00446A  0E00               	movlw	0
 16965  00446C  1A36               	xorwf	(___flge@ff1+2)^0,f,c
 16966  00446E  0E80               	movlw	128
 16967  004470  1A37               	xorwf	(___flge@ff1+3)^0,f,c
 16968  004472  0E00               	movlw	0
 16969  004474  1A38               	xorwf	___flge@ff2^0,f,c
 16970  004476  0E00               	movlw	0
 16971  004478  1A39               	xorwf	(___flge@ff2+1)^0,f,c
 16972  00447A  0E00               	movlw	0
 16973  00447C  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
 16974  00447E  0E80               	movlw	128
 16975  004480  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
 16976  004482  5038               	movf	___flge@ff2^0,w,c
 16977  004484  5C34               	subwf	___flge@ff1^0,w,c
 16978  004486  5039               	movf	(___flge@ff2+1)^0,w,c
 16979  004488  5835               	subwfb	(___flge@ff1+1)^0,w,c
 16980  00448A  503A               	movf	(___flge@ff2+2)^0,w,c
 16981  00448C  5836               	subwfb	(___flge@ff1+2)^0,w,c
 16982  00448E  503B               	movf	(___flge@ff2+3)^0,w,c
 16983  004490  5837               	subwfb	(___flge@ff1+3)^0,w,c
 16984  004492  B0D8               	btfsc	status,0,c
 16985  004494  EF4E  F022         	goto	u9761
 16986  004498  EF50  F022         	goto	u9760
 16987  00449C                     u9761:
 16988  00449C  EF53  F022         	goto	l9054
 16989  0044A0                     u9760:
 16990  0044A0  90D8               	bcf	status,0,c
 16991  0044A2  EF54  F022         	goto	l1232
 16992  0044A6                     l9054:
 16993  0044A6  80D8               	bsf	status,0,c
 16994  0044A8                     l1232:
 16995  0044A8  0012               	return		;funcret
 16996  0044AA                     __end_of___flge:
 16997                           	opt callstack 0
 16998                           
 16999 ;; *************** function _UART_init *****************
 17000 ;; Defined at:
 17001 ;;		line 13 in file "./UART.h"
 17002 ;; Parameters:    Size  Location     Type
 17003 ;;  BAUD            4   31[COMRAM] long 
 17004 ;; Auto vars:     Size  Location     Type
 17005 ;;  frecuenciaCr    4    0        long 
 17006 ;; Return value:  Size  Location     Type
 17007 ;;                  1    wreg      void 
 17008 ;; Registers used:
 17009 ;;		wreg, status,2, status,0, cstack
 17010 ;; Tracked objects:
 17011 ;;		On entry : 0/0
 17012 ;;		On exit  : 0/0
 17013 ;;		Unchanged: 0/0
 17014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17015 ;;      Params:         4       0       0       0       0       0       0       0       0
 17016 ;;      Locals:         8       0       0       0       0       0       0       0       0
 17017 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17018 ;;      Totals:        12       0       0       0       0       0       0       0       0
 17019 ;;Total ram usage:       12 bytes
 17020 ;; Hardware stack levels used:    1
 17021 ;; Hardware stack levels required when called:    3
 17022 ;; This function calls:
 17023 ;;		___aldiv
 17024 ;; This function is called by:
 17025 ;;		_main
 17026 ;; This function uses a non-reentrant model
 17027 ;;
 17028                           
 17029                           	psect	text72
 17030  005010                     __ptext72:
 17031                           	opt callstack 0
 17032  005010                     _UART_init:
 17033                           	opt callstack 27
 17034  005010                     
 17035                           ;./UART.h: 16:     TRISC6 = 0;
 17036  005010  9C94               	bcf	3988,6,c	;volatile
 17037  005012                     
 17038                           ;./UART.h: 17:     TRISC7 = 1;
 17039  005012  8E94               	bsf	3988,7,c	;volatile
 17040  005014                     
 17041                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 17042  005014  0E10               	movlw	16
 17043  005016  6E16               	movwf	___aldiv@divisor^0,c
 17044  005018  0E00               	movlw	0
 17045  00501A  6E17               	movwf	(___aldiv@divisor+1)^0,c
 17046  00501C  0E00               	movlw	0
 17047  00501E  6E18               	movwf	(___aldiv@divisor+2)^0,c
 17048  005020  0E00               	movlw	0
 17049  005022  6E19               	movwf	(___aldiv@divisor+3)^0,c
 17050  005024  0E00               	movlw	0
 17051  005026  6E12               	movwf	___aldiv@dividend^0,c
 17052  005028  0E09               	movlw	9
 17053  00502A  6E13               	movwf	(___aldiv@dividend+1)^0,c
 17054  00502C  0E3D               	movlw	61
 17055  00502E  6E14               	movwf	(___aldiv@dividend+2)^0,c
 17056  005030  0E00               	movlw	0
 17057  005032  6E15               	movwf	(___aldiv@dividend+3)^0,c
 17058  005034  EC44  F020         	call	___aldiv	;wreg free
 17059  005038  C012  F028         	movff	?___aldiv,_UART_init$1830
 17060  00503C  C013  F029         	movff	?___aldiv+1,_UART_init$1830+1
 17061  005040  C014  F02A         	movff	?___aldiv+2,_UART_init$1830+2
 17062  005044  C015  F02B         	movff	?___aldiv+3,_UART_init$1830+3
 17063  005048                     
 17064                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 17065  005048  C028  F012         	movff	_UART_init$1830,___aldiv@dividend
 17066  00504C  C029  F013         	movff	_UART_init$1830+1,___aldiv@dividend+1
 17067  005050  C02A  F014         	movff	_UART_init$1830+2,___aldiv@dividend+2
 17068  005054  C02B  F015         	movff	_UART_init$1830+3,___aldiv@dividend+3
 17069  005058  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 17070  00505C  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 17071  005060  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 17072  005064  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 17073  005068  EC44  F020         	call	___aldiv	;wreg free
 17074  00506C  0412               	decf	?___aldiv^0,w,c
 17075  00506E  6EAF               	movwf	175,c	;volatile
 17076  005070                     
 17077                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 17078  005070  84AC               	bsf	172,2,c	;volatile
 17079  005072                     
 17080                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 17081  005072  98AC               	bcf	172,4,c	;volatile
 17082  005074                     
 17083                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 17084  005074  8EAB               	bsf	171,7,c	;volatile
 17085  005076                     
 17086                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 17087  005076  9CAC               	bcf	172,6,c	;volatile
 17088  005078                     
 17089                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 17090  005078  8AAC               	bsf	172,5,c	;volatile
 17091  00507A                     
 17092                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 17093  00507A  9CAB               	bcf	171,6,c	;volatile
 17094  00507C                     
 17095                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 17096  00507C  88AB               	bsf	171,4,c	;volatile
 17097  00507E  0012               	return		;funcret
 17098  005080                     __end_of_UART_init:
 17099                           	opt callstack 0
 17100                           
 17101 ;; *************** function ___aldiv *****************
 17102 ;; Defined at:
 17103 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 17104 ;; Parameters:    Size  Location     Type
 17105 ;;  dividend        4   17[COMRAM] long 
 17106 ;;  divisor         4   21[COMRAM] long 
 17107 ;; Auto vars:     Size  Location     Type
 17108 ;;  quotient        4   27[COMRAM] long 
 17109 ;;  sign            1   26[COMRAM] unsigned char 
 17110 ;;  counter         1   25[COMRAM] unsigned char 
 17111 ;; Return value:  Size  Location     Type
 17112 ;;                  4   17[COMRAM] long 
 17113 ;; Registers used:
 17114 ;;		wreg, status,2, status,0
 17115 ;; Tracked objects:
 17116 ;;		On entry : 0/0
 17117 ;;		On exit  : 0/0
 17118 ;;		Unchanged: 0/0
 17119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17120 ;;      Params:         8       0       0       0       0       0       0       0       0
 17121 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17122 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17123 ;;      Totals:        14       0       0       0       0       0       0       0       0
 17124 ;;Total ram usage:       14 bytes
 17125 ;; Hardware stack levels used:    1
 17126 ;; Hardware stack levels required when called:    2
 17127 ;; This function calls:
 17128 ;;		Nothing
 17129 ;; This function is called by:
 17130 ;;		_map
 17131 ;;		_UART_init
 17132 ;; This function uses a non-reentrant model
 17133 ;;
 17134                           
 17135                           	psect	text73
 17136  004088                     __ptext73:
 17137                           	opt callstack 0
 17138  004088                     ___aldiv:
 17139                           	opt callstack 24
 17140  004088  0E00               	movlw	0
 17141  00408A  6E1B               	movwf	___aldiv@sign^0,c
 17142  00408C  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 17143  00408E  EF4D  F020         	goto	u8280
 17144  004092  EF4B  F020         	goto	u8281
 17145  004096                     u8281:
 17146  004096  EF57  F020         	goto	l8244
 17147  00409A                     u8280:
 17148  00409A  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 17149  00409C  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 17150  00409E  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 17151  0040A0  6C16               	negf	___aldiv@divisor^0,c
 17152  0040A2  0E00               	movlw	0
 17153  0040A4  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 17154  0040A6  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 17155  0040A8  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 17156  0040AA  0E01               	movlw	1
 17157  0040AC  6E1B               	movwf	___aldiv@sign^0,c
 17158  0040AE                     l8244:
 17159  0040AE  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 17160  0040B0  EF5E  F020         	goto	u8290
 17161  0040B4  EF5C  F020         	goto	u8291
 17162  0040B8                     u8291:
 17163  0040B8  EF68  F020         	goto	l8250
 17164  0040BC                     u8290:
 17165  0040BC  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 17166  0040BE  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 17167  0040C0  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 17168  0040C2  6C12               	negf	___aldiv@dividend^0,c
 17169  0040C4  0E00               	movlw	0
 17170  0040C6  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 17171  0040C8  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 17172  0040CA  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 17173  0040CC  0E01               	movlw	1
 17174  0040CE  1A1B               	xorwf	___aldiv@sign^0,f,c
 17175  0040D0                     l8250:
 17176  0040D0  0E00               	movlw	0
 17177  0040D2  6E1C               	movwf	___aldiv@quotient^0,c
 17178  0040D4  0E00               	movlw	0
 17179  0040D6  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 17180  0040D8  0E00               	movlw	0
 17181  0040DA  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 17182  0040DC  0E00               	movlw	0
 17183  0040DE  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 17184  0040E0  5016               	movf	___aldiv@divisor^0,w,c
 17185  0040E2  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 17186  0040E4  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 17187  0040E6  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 17188  0040E8  B4D8               	btfsc	status,2,c
 17189  0040EA  EF79  F020         	goto	u8301
 17190  0040EE  EF7B  F020         	goto	u8300
 17191  0040F2                     u8301:
 17192  0040F2  EFB1  F020         	goto	l8272
 17193  0040F6                     u8300:
 17194  0040F6  0E01               	movlw	1
 17195  0040F8  6E1A               	movwf	___aldiv@counter^0,c
 17196  0040FA  EF85  F020         	goto	l8258
 17197  0040FE                     l8256:
 17198  0040FE  90D8               	bcf	status,0,c
 17199  004100  3616               	rlcf	___aldiv@divisor^0,f,c
 17200  004102  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 17201  004104  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 17202  004106  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 17203  004108  2A1A               	incf	___aldiv@counter^0,f,c
 17204  00410A                     l8258:
 17205  00410A  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 17206  00410C  EF8A  F020         	goto	u8311
 17207  004110  EF8C  F020         	goto	u8310
 17208  004114                     u8311:
 17209  004114  EF7F  F020         	goto	l8256
 17210  004118                     u8310:
 17211  004118                     l8260:
 17212  004118  90D8               	bcf	status,0,c
 17213  00411A  361C               	rlcf	___aldiv@quotient^0,f,c
 17214  00411C  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 17215  00411E  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 17216  004120  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 17217  004122  5016               	movf	___aldiv@divisor^0,w,c
 17218  004124  5C12               	subwf	___aldiv@dividend^0,w,c
 17219  004126  5017               	movf	(___aldiv@divisor+1)^0,w,c
 17220  004128  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 17221  00412A  5018               	movf	(___aldiv@divisor+2)^0,w,c
 17222  00412C  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 17223  00412E  5019               	movf	(___aldiv@divisor+3)^0,w,c
 17224  004130  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 17225  004132  A0D8               	btfss	status,0,c
 17226  004134  EF9E  F020         	goto	u8321
 17227  004138  EFA0  F020         	goto	u8320
 17228  00413C                     u8321:
 17229  00413C  EFA9  F020         	goto	l8268
 17230  004140                     u8320:
 17231  004140  5016               	movf	___aldiv@divisor^0,w,c
 17232  004142  5E12               	subwf	___aldiv@dividend^0,f,c
 17233  004144  5017               	movf	(___aldiv@divisor+1)^0,w,c
 17234  004146  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 17235  004148  5018               	movf	(___aldiv@divisor+2)^0,w,c
 17236  00414A  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 17237  00414C  5019               	movf	(___aldiv@divisor+3)^0,w,c
 17238  00414E  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 17239  004150  801C               	bsf	___aldiv@quotient^0,0,c
 17240  004152                     l8268:
 17241  004152  90D8               	bcf	status,0,c
 17242  004154  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 17243  004156  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 17244  004158  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 17245  00415A  3216               	rrcf	___aldiv@divisor^0,f,c
 17246  00415C  2E1A               	decfsz	___aldiv@counter^0,f,c
 17247  00415E  EF8C  F020         	goto	l8260
 17248  004162                     l8272:
 17249  004162  501B               	movf	___aldiv@sign^0,w,c
 17250  004164  B4D8               	btfsc	status,2,c
 17251  004166  EFB7  F020         	goto	u8331
 17252  00416A  EFB9  F020         	goto	u8330
 17253  00416E                     u8331:
 17254  00416E  EFC1  F020         	goto	l8276
 17255  004172                     u8330:
 17256  004172  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 17257  004174  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 17258  004176  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 17259  004178  6C1C               	negf	___aldiv@quotient^0,c
 17260  00417A  0E00               	movlw	0
 17261  00417C  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 17262  00417E  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 17263  004180  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 17264  004182                     l8276:
 17265  004182  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 17266  004186  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 17267  00418A  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 17268  00418E  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 17269  004192  0012               	return		;funcret
 17270  004194                     __end_of___aldiv:
 17271                           	opt callstack 0
 17272                           
 17273 ;; *************** function _boton *****************
 17274 ;; Defined at:
 17275 ;;		line 107 in file "main.c"
 17276 ;; Parameters:    Size  Location     Type
 17277 ;;		None
 17278 ;; Auto vars:     Size  Location     Type
 17279 ;;		None
 17280 ;; Return value:  Size  Location     Type
 17281 ;;                  1    wreg      void 
 17282 ;; Registers used:
 17283 ;;		wreg, status,2, status,0, cstack
 17284 ;; Tracked objects:
 17285 ;;		On entry : 0/0
 17286 ;;		On exit  : 0/0
 17287 ;;		Unchanged: 0/0
 17288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17289 ;;      Params:         0       0       0       0       0       0       0       0       0
 17290 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17291 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17292 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17293 ;;Total ram usage:        2 bytes
 17294 ;; Hardware stack levels used:    1
 17295 ;; Hardware stack levels required when called:    1
 17296 ;; This function calls:
 17297 ;;		_antiRebote
 17298 ;; This function is called by:
 17299 ;;		Interrupt level 2
 17300 ;; This function uses a non-reentrant model
 17301 ;;
 17302                           
 17303                           	psect	intcode
 17304  000008                     __pintcode:
 17305                           	opt callstack 0
 17306  000008                     _boton:
 17307                           	opt callstack 19
 17308                           
 17309                           ;incstack = 0
 17310  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17311  00000A  EDBA  F029         	call	int_func,f	;refresh shadow registers
 17312                           
 17313                           	psect	intcode_body
 17314  005374                     __pintcode_body:
 17315                           	opt callstack 19
 17316  005374                     int_func:
 17317                           	opt callstack 19
 17318  005374  0006               	pop		; remove dummy address from shadow register refresh
 17319  005376                     
 17320                           ;main.c: 109:     if (INT0IF)
 17321  005376  A2F2               	btfss	4082,1,c	;volatile
 17322  005378  EFC0  F029         	goto	i2u802_41
 17323  00537C  EFC2  F029         	goto	i2u802_40
 17324  005380                     i2u802_41:
 17325  005380  EFE2  F029         	goto	i2l288
 17326  005384                     i2u802_40:
 17327  005384                     
 17328                           ;main.c: 110:     {;main.c: 111:         antiRebote(1);
 17329  005384  0E01               	movlw	1
 17330  005386  EC64  F029         	call	_antiRebote
 17331  00538A                     
 17332                           ;main.c: 112:         if (pausa) {
 17333  00538A  0101               	movlb	1	; () banked
 17334  00538C  51FB               	movf	_pausa& (0+255),w,b
 17335  00538E  B4D8               	btfsc	status,2,c
 17336  005390  EFCC  F029         	goto	i2u803_41
 17337  005394  EFCE  F029         	goto	i2u803_40
 17338  005398                     i2u803_41:
 17339  005398  EFDE  F029         	goto	i2l286
 17340  00539C                     i2u803_40:
 17341  00539C                     
 17342                           ; BSR set to: 1
 17343                           ;main.c: 113:             pausa = 0;
 17344  00539C  0E00               	movlw	0
 17345  00539E  6FFB               	movwf	_pausa& (0+255),b
 17346  0053A0                     
 17347                           ; BSR set to: 1
 17348                           ;main.c: 114:             LATD2 = 1;
 17349  0053A0  848C               	bsf	3980,2,c	;volatile
 17350  0053A2                     
 17351                           ; BSR set to: 1
 17352                           ;main.c: 115:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 17353  0053A2  0E10               	movlw	16
 17354  0053A4  6E05               	movwf	(??_boton+1)^0,c
 17355  0053A6  0E39               	movlw	57
 17356  0053A8  6E04               	movwf	??_boton^0,c
 17357  0053AA  0E0E               	movlw	14
 17358  0053AC                     i2u1243_47:
 17359  0053AC  2EE8               	decfsz	wreg,f,c
 17360  0053AE  D7FE               	bra	i2u1243_47
 17361  0053B0  2E04               	decfsz	??_boton^0,f,c
 17362  0053B2  D7FC               	bra	i2u1243_47
 17363  0053B4  2E05               	decfsz	(??_boton+1)^0,f,c
 17364  0053B6  D7FA               	bra	i2u1243_47
 17365                           
 17366                           ;main.c: 116:         } else {
 17367  0053B8  EFE1  F029         	goto	i2l7660
 17368  0053BC                     i2l286:
 17369                           
 17370                           ; BSR set to: 1
 17371                           ;main.c: 117:             LATD2 = 0;
 17372  0053BC  948C               	bcf	3980,2,c	;volatile
 17373  0053BE                     
 17374                           ; BSR set to: 1
 17375                           ;main.c: 118:             pausa = 1;
 17376  0053BE  0E01               	movlw	1
 17377  0053C0  6FFB               	movwf	_pausa& (0+255),b
 17378  0053C2                     i2l7660:
 17379                           
 17380                           ;main.c: 121:         INT0IF = 0;
 17381  0053C2  92F2               	bcf	4082,1,c	;volatile
 17382  0053C4                     i2l288:
 17383  0053C4  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17384  0053C6  0011               	retfie		f
 17385  0053C8                     __end_of_boton:
 17386                           	opt callstack 0
 17387                           
 17388 ;; *************** function _antiRebote *****************
 17389 ;; Defined at:
 17390 ;;		line 219 in file "main.c"
 17391 ;; Parameters:    Size  Location     Type
 17392 ;;  pin             1    wreg     unsigned char 
 17393 ;; Auto vars:     Size  Location     Type
 17394 ;;  pin             1    2[COMRAM] unsigned char 
 17395 ;; Return value:  Size  Location     Type
 17396 ;;                  1    wreg      void 
 17397 ;; Registers used:
 17398 ;;		wreg, status,2, status,0
 17399 ;; Tracked objects:
 17400 ;;		On entry : 0/0
 17401 ;;		On exit  : 0/0
 17402 ;;		Unchanged: 0/0
 17403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17404 ;;      Params:         0       0       0       0       0       0       0       0       0
 17405 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17406 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17407 ;;      Totals:         3       0       0       0       0       0       0       0       0
 17408 ;;Total ram usage:        3 bytes
 17409 ;; Hardware stack levels used:    1
 17410 ;; This function calls:
 17411 ;;		Nothing
 17412 ;; This function is called by:
 17413 ;;		_boton
 17414 ;; This function uses a non-reentrant model
 17415 ;;
 17416                           
 17417                           	psect	text75
 17418  0052C8                     __ptext75:
 17419                           	opt callstack 0
 17420  0052C8                     _antiRebote:
 17421                           	opt callstack 19
 17422                           
 17423                           ;incstack = 0
 17424                           ;antiRebote@pin stored from wreg
 17425  0052C8  6E03               	movwf	antiRebote@pin^0,c
 17426  0052CA                     
 17427                           ;main.c: 221:     switch (pin) {
 17428  0052CA  EF7E  F029         	goto	i2l7454
 17429  0052CE                     i2l322:
 17430  0052CE  A081               	btfss	129,0,c	;volatile
 17431  0052D0  EF6C  F029         	goto	i2u781_41
 17432  0052D4  EF6E  F029         	goto	i2u781_40
 17433  0052D8                     i2u781_41:
 17434  0052D8  EF67  F029         	goto	i2l322
 17435  0052DC                     i2u781_40:
 17436  0052DC                     i2l325:
 17437  0052DC  B081               	btfsc	129,0,c	;volatile
 17438  0052DE  EF73  F029         	goto	i2u782_41
 17439  0052E2  EF75  F029         	goto	i2u782_40
 17440  0052E6                     i2u782_41:
 17441  0052E6  EF6E  F029         	goto	i2l325
 17442  0052EA                     i2u782_40:
 17443  0052EA                     
 17444                           ;main.c: 225:             _delay((unsigned long)((100)*(4000000/4000.0)));
 17445  0052EA  0E82               	movlw	130
 17446  0052EC  6E01               	movwf	??_antiRebote^0,c
 17447  0052EE  0EDE               	movlw	222
 17448  0052F0                     i2u1244_47:
 17449  0052F0  2EE8               	decfsz	wreg,f,c
 17450  0052F2  D7FE               	bra	i2u1244_47
 17451  0052F4  2E01               	decfsz	??_antiRebote^0,f,c
 17452  0052F6  D7FC               	bra	i2u1244_47
 17453                           
 17454                           ;main.c: 226:             break;
 17455  0052F8  EF8F  F029         	goto	i2l330
 17456  0052FC                     i2l7454:
 17457  0052FC  5003               	movf	antiRebote@pin^0,w,c
 17458  0052FE  6E01               	movwf	??_antiRebote^0,c
 17459  005300  6A02               	clrf	(??_antiRebote+1)^0,c
 17460                           
 17461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17462                           ; Switch size 1, requested type "simple"
 17463                           ; Number of cases is 1, Range of values is 0 to 0
 17464                           ; switch strategies available:
 17465                           ; Name         Instructions Cycles
 17466                           ; simple_byte            4     3 (average)
 17467                           ;	Chosen strategy is simple_byte
 17468  005302  5002               	movf	(??_antiRebote+1)^0,w,c
 17469  005304  0A00               	xorlw	0	; case 0
 17470  005306  B4D8               	btfsc	status,2,c
 17471  005308  EF88  F029         	goto	i2l11404
 17472  00530C  EF8F  F029         	goto	i2l330
 17473  005310                     i2l11404:
 17474                           
 17475                           ; Switch size 1, requested type "simple"
 17476                           ; Number of cases is 1, Range of values is 1 to 1
 17477                           ; switch strategies available:
 17478                           ; Name         Instructions Cycles
 17479                           ; simple_byte            4     3 (average)
 17480                           ;	Chosen strategy is simple_byte
 17481  005310  5001               	movf	??_antiRebote^0,w,c
 17482  005312  0A01               	xorlw	1	; case 1
 17483  005314  B4D8               	btfsc	status,2,c
 17484  005316  EF67  F029         	goto	i2l322
 17485  00531A  EF8F  F029         	goto	i2l330
 17486  00531E                     i2l330:
 17487  00531E  0012               	return		;funcret
 17488  005320                     __end_of_antiRebote:
 17489                           	opt callstack 0
 17490                           
 17491                           	psect	rparam
 17492  0000                     
 17493                           	psect	temp
 17494  00005A                     btemp:
 17495                           	opt callstack 0
 17496  00005A                     	ds	1
 17497  0000                     int$flags	set	btemp
 17498  0000                     wtemp8	set	btemp+1
 17499  0000                     ttemp5	set	btemp+1
 17500  0000                     ttemp6	set	btemp+4
 17501  0000                     ttemp7	set	btemp+8
 17502                           tosu	equ	0xFFF
 17503                           tosh	equ	0xFFE
 17504                           tosl	equ	0xFFD
 17505                           stkptr	equ	0xFFC
 17506                           pclatu	equ	0xFFB
 17507                           pclath	equ	0xFFA
 17508                           pcl	equ	0xFF9
 17509                           tblptru	equ	0xFF8
 17510                           tblptrh	equ	0xFF7
 17511                           tblptrl	equ	0xFF6
 17512                           tablat	equ	0xFF5
 17513                           prodh	equ	0xFF4
 17514                           prodl	equ	0xFF3
 17515                           indf0	equ	0xFEF
 17516                           postinc0	equ	0xFEE
 17517                           postdec0	equ	0xFED
 17518                           preinc0	equ	0xFEC
 17519                           plusw0	equ	0xFEB
 17520                           fsr0h	equ	0xFEA
 17521                           fsr0l	equ	0xFE9
 17522                           wreg	equ	0xFE8
 17523                           indf1	equ	0xFE7
 17524                           postinc1	equ	0xFE6
 17525                           postdec1	equ	0xFE5
 17526                           preinc1	equ	0xFE4
 17527                           plusw1	equ	0xFE3
 17528                           fsr1h	equ	0xFE2
 17529                           fsr1l	equ	0xFE1
 17530                           bsr	equ	0xFE0
 17531                           indf2	equ	0xFDF
 17532                           postinc2	equ	0xFDE
 17533                           postdec2	equ	0xFDD
 17534                           preinc2	equ	0xFDC
 17535                           plusw2	equ	0xFDB
 17536                           fsr2h	equ	0xFDA
 17537                           fsr2l	equ	0xFD9
 17538                           status	equ	0xFD8


Data Sizes:
    Strings     643
    Constant    4
    Data        5
    BSS         436
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    159     160
    BANK1           256     20     255
    BANK2           256      5     205
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1476_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    probarMapeoDireccionCruces@caminoFinal	PTR unsigned char  size(2) Largest target is 20
		 -> comportamientoBasico@caminoFinal(BANK1[20]), 

    probarMapeoDireccionCruces@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    probarMapeoDireccionCruces@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    probarMapeoDireccionCruces@cruceDetectado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cruceDetectado(BANK1[1]), 

    probarMapeoDireccionCruces@mapear	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@mapear(BANK1[1]), 

    probarMapeoDireccionCruces@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    probarMapeoDireccionCruces@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@mapear	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@mapear(BANK1[1]), 

    decidirDireccion@cruceDetectado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cruceDetectado(BANK1[1]), 

    decidirDireccion@caminoFinal	PTR unsigned char  size(2) Largest target is 20
		 -> comportamientoBasico@caminoFinal(BANK1[20]), 

    decidirDireccion@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    decidirDireccion@caminoActual	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@caminoActual(BANK1[1]), 

    decidirDireccion@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    decidirDireccion@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    decidirDireccion@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    decidirDireccion@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    limpiarMovimientos@numMovimientos	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientos(BANK1[2]), 

    limpiarMovimientos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    hayCruce@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    regresarAlCruce@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    moverCarrito@carroEspejeado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@carroEspejeado(BANK1[1]), 

    moverCarrito@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 56
		 -> STR_18(CODE[32]), STR_17(CODE[31]), STR_16(CODE[33]), STR_15(CODE[32]), 
		 -> STR_14(CODE[23]), STR_13(CODE[34]), STR_12(CODE[56]), STR_10(CODE[6]), 
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[10]), buffer(BANK1[50]), 
		 -> STR_2(CODE[25]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _comportamientoBasico->_alinearDespuesCallejon
    _comportamientoBasico->_decidirDireccion
    _comportamientoBasico->_regresarAlCruce
    _mover->_forzarAvanceRecto
    _PID->_roundf
    _roundf->___flsub
    _forzarEspejeo->_alinearDespuesCallejon
    _forzarEspejeo->_forzarEspejeoDerecha
    _forzarEspejeo->_forzarEspejeoIzquierda
    _leerSensores->___fldiv
    _dameDistancia->___xxtofl
    _map->___aldiv
    ___xxtofl->___lwdiv
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->_roundf
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _seLlegoAlDestino->_dameLecturaAdc
    _mostrarDireccionElegida->_UART_printf
    _UART_printf->_UART_write
    _hayCruce->___flge
    ___flge->___flmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _main->_comportamientoBasico
    _main->_visualizarPasosRealizados
    _visualizarPasosRealizados->_sprintf
    _comportamientoBasico->_decidirDireccion
    _regresarAlCruce->_PID
    _PID->_pwmDuty
    _probarMapeoDireccionCruces->_sprintf
    _velocidadEstandar->_pwmDuty
    _leerSensores->___fldiv
    _decidirDireccion->_sprintf
    _velocidadBaja->_pwmDuty
    _pwmDuty->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___fltol->_roundf

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _comportamientoBasico->_decidirDireccion

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_comportamientoBasico

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  469078
                                              2 BANK2      3     3      0
                          _UART_init
               _comportamientoBasico
                          _configPwm
                      _configurarAdc
                     _forzarParoAuto
    _inicializarComportamientoBasico
          _visualizarPasosRealizados
 ---------------------------------------------------------------------------------
 (1) _visualizarPasosRealizados                            4     2      2   62403
                                            155 BANK0      4     2      2
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13829
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _comportamientoBasico                                 3     3      0  391564
                                            158 BANK0      1     1      0
                                              0 BANK2      2     2      0
                                _PID
                        _UART_printf
             _alinearDespuesCallejon
                   _decidirDireccion
                     _forzarParoAuto
                       _leerSensores
                 _limpiarMovimientos
                       _moverCarrito
         _probarMapeoDireccionCruces
                    _regresarAlCruce
                      _velocidadBaja
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarAlCruce                                      7     3      4   64603
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (3) _mover                                                2     2      0       0
                                              7 COMRAM     2     2      0
                  _forzarAvanceRecto
 ---------------------------------------------------------------------------------
 (3) _PID                                                 18    18      0   51646
                                             40 BANK0     18    18      0
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _pwmDuty
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   21367
                                             75 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _probarMapeoDireccionCruces                          17     2     15   63281
                                            155 BANK0      2     2      0
                                              0 BANK1     15     0     15
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _moverCarrito                                         7     3      4   56732
                                             40 BANK0      7     3      4
                  _forzarAvanceRecto
                      _forzarEspejeo
 ---------------------------------------------------------------------------------
 (3) _forzarEspejeo                                        0     0      0   56428
                             ___flge
             _alinearDespuesCallejon
               _forzarEspejeoDerecha
             _forzarEspejeoIzquierda
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoIzquierda                               1     1      0   12461
                                             83 COMRAM     1     1      0
                _forzarGiroIzquierda
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarGiroIzquierda                                  2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoDerecha                                 1     1      0   12461
                                             83 COMRAM     1     1      0
                  _forzarGiroDerecha
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarReversa                                        2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _forzarGiroDerecha                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _alinearDespuesCallejon                               1     1      0   27100
                                             83 COMRAM     1     1      0
                             ___flge
                     _forzarParoAuto
                       _leerSensores
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (5) _leerSensores                                         0     0      0   10233
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (2) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _forzarParoAuto                                       1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _forzarAvanceRecto                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _limpiarMovimientos                                   8     4      4     341
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _decidirDireccion                                    24     4     20   90860
                                             83 COMRAM     1     1      0
                                            155 BANK0      3     3      0
                                              0 BANK1     20     0     20
                        _UART_printf
                             ___flge
                           _hayCruce
            _mostrarDireccionElegida
                   _seLlegoAlDestino
                            _sprintf
                      _velocidadBaja
 ---------------------------------------------------------------------------------
 (2) _velocidadBaja                                        0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12461
                                             28 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   60566
                                            135 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   58610
                                            127 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   58062
                                             97 BANK0     30    24      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   39217
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             79 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6347
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5422
                                             51 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3953
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             67 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6763
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4776
                                             32 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4497
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1665
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     562
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _seLlegoAlDestino                                     1     1      0      68
                                             10 COMRAM     1     1      0
                     _dameLecturaAdc
 ---------------------------------------------------------------------------------
 (4) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _mostrarDireccionElegida                              3     3      0    1747
                                              8 COMRAM     3     3      0
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2    1716
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _hayCruce                                             4     1      3    5249
                                             63 COMRAM     4     1      3
                             ___flge
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    4406
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (12) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _comportamientoBasico
     _PID
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _roundf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___xxtofl
         ___lwdiv (ARG)
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
       _roundf
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
     _UART_printf
       _UART_write
     _alinearDespuesCallejon
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _forzarParoAuto
       _leerSensores
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         _dameDistancia
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _decidirDireccion
       _UART_printf
         _UART_write
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _hayCruce
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       _mostrarDireccionElegida
         _UART_printf
           _UART_write
       _seLlegoAlDestino
         _dameLecturaAdc
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _velocidadBaja
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _forzarParoAuto
     _leerSensores
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _limpiarMovimientos
     _moverCarrito
       _forzarAvanceRecto
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _alinearDespuesCallejon
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           _forzarParoAuto
           _leerSensores
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             _dameDistancia
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
     _probarMapeoDireccionCruces
       _UART_printf
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _regresarAlCruce
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _velocidadBaja
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _configPwm
   _configurarAdc
   _forzarParoAuto
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _visualizarPasosRealizados
     _UART_printf
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      5      CD       9       80.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C5      20        0.0%
DATA                 0      0     2C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Sep 30 21:14:53 2020

                                    ___fldiv@aexp 006C                                      ___fldiv@bexp 006B  
                                    ___fldiv@sign 0064                                      ___awdiv@sign 000B  
                                  ?_configurarAdc 0001                               ___wmul@multiplicand 0008  
                                     __CFG_BORV$3 000000               __size_of_probarMapeoDireccionCruces 00FA  
                                    __CFG_CP0$OFF 000000                                      __CFG_CP1$OFF 000000  
                                    __CFG_CP2$OFF 000000                                      __CFG_CP3$OFF 000000  
                 comportamientoBasico@caminoFinal 01C4                                               l200 3FB4  
                                             l201 3FB6                                               l211 507E  
                                             l220 5960                                               l223 596E  
                                             l143 4F9A                                               l151 35E8  
                                             l208 4086                                               l160 54B8  
                                             l232 5978                                               l161 5484  
                                             l410 58FE                                               l162 54BA  
                                             l235 5652                                               l404 5958  
                                             l156 546E                                               l229 5210  
                                             l237 5660                                               l181 3F54  
                                             l413 591E                                               l333 5558  
                                             l317 4CBE                                               l238 5674  
                                             l182 3F56                                               l422 55E8  
                                             l191 3F84                                               l407 58DC  
                                             l159 547A                                               l192 3F86  
                                             l432 46E4                                               l416 593E  
                                             l426 56B4                                               l450 4252  
                                             l442 419C                                               l187 4008  
                                             l179 3F46                                               l419 55A0  
                                             l427 56B8                                               l451 429C  
                                             l436 4734                                               l460 4DBC  
                                             l380 2590                                               l509 3ABC  
                                             l525 550A                                               l189 3F76  
                                             l461 4E04                                               l198 3FA6  
                                             l438 4784                                               l470 4B60  
                                             l551 0D50                                               l447 421C  
                                             l455 4D6E                                               l528 5846  
                                             l800 49EA                                               l529 5848  
                                             l449 4246                                               l706 3216  
                                             l458 4D8A                                               l539 4F20  
                                             l731 5894                                               l459 4DB0  
                                             l660 1192                                               l740 46A0  
                                             l813 2D84                                               l645 1318  
                                             l581 0DF0                                               l397 2594  
                                             l670 131A                                               l807 52C6  
                                             l815 2D8C                                               l728 586E  
                                             l833 2FC4                                               l673 3D90  
                                             l851 0BD6                                               l941 18C2  
                                             l685 3DC0                                               l598 0E74  
                                             l678 3DB0                                               l679 3DA0  
                                             l952 1808                                               l962 58BA  
                                             l795 496C                                               l869 0406  
                                             l973 50D8                                               l798 49AE  
                                             l958 514A                                               l974 50E8  
                                             l895 07A2                                               l959 5152  
                                    __CFG_CPB$OFF 000000                                               _PR2 000FCB  
                                             _PID 2FC6                                      __CFG_CPD$OFF 000000  
                                    __CFG_BOR$OFF 000000                                               _abs 56FE  
                                             _ida 01FA                                               _pad 4926  
                                             _map 4F22                                      ___awmod@sign 000B  
                           _numMovimientosTotales 0141                                               wreg 000FE8  
                                    ___flmul@aexp 0028                                      ___flmul@bexp 002D  
                        _DISTANCIA_PRIORIDAD_BAJA 010C                          _DISTANCIA_PRIORIDAD_ALTA 0114  
                                    ___flmul@sign 0027                                      ___flmul@temp 0032  
                                    ___flmul@prod 002E                       __size_of_limpiarMovimientos 0050  
                                    __CFG_LVP$OFF 000000                                              ?_PID 0001  
                                    ___fltol@exp1 007B                                      __CFG_WDT$OFF 000000  
                                            l1041 4192                                              ?_abs 0018  
                                            l1221 4D68                                              l1206 4C10  
                                            l1232 44A8                                              l1227 4462  
                                            l1076 3C44                                              l1236 57AC  
                                            l1089 3F24                                              l1193 4AAE  
                                            l1507 1BCC                                              l1259 43A4  
                                            l1516 1C9C                                              l1532 562E  
                                            l1620 379C                                              l1460 500E  
                                            l1517 1C8A                                              l1453 5006  
                                            l1631 3734                                              l1544 2CE2  
                                            l1712 5774                                              l1624 36D8  
                                            l1617 3640                                              l1706 546A  
                                            l1546 2B42                                              l1490 1AB2  
                                            l1651 573C                                              l1555 2B88  
                                            l1491 1AA0                                              l1643 45A6  
                                            l1580 21AC                                              l1492 1A66  
                                            l1557 2C00                                              l1549 2B06  
                                            l1558 2BEE                                              l1742 5418  
                                            l1727 4924                                              l1735 56FC  
                                            l1583 203E                                              l1648 5734  
                                            l1576 1E48                                              l1745 5980  
                                            l1593 216E                                              l1585 20B6  
                                            l1753 2946                                              l1682 392C  
                                            l1586 20A4                                              l1499 1D82  
                                            l1691 3370                                              l1772 581A  
                                            l1766 526C                                              l1679 3924  
                                            l1791 51B2                                              l1688 342C  
                                            l1776 485A                                              l1698 57E4  
                                            l1786 51AA                                              ?_map 0020  
                                            ?_pad 0016                                              l8200 48DE  
                                            l9000 4BB0                                              l8210 56DC  
                                            l9010 4BEA                                              l9002 4BB8  
                                            l8204 56BA                                              l8212 57E6  
                                            l9004 4BC6                                              l9012 4BF0  
                                            l9020 4CC0                                              l8300 1930  
                                            l9100 4364                                              l8206 56C6  
                                            l8214 57F2                                              l9014 4C00  
                                            l9006 4BDC                                              l9030 4D60  
                                            l9022 4CEE                                              l8310 195A  
                                            l8302 1942                                              l9102 4374  
                                            l8222 573E                                              l8230 509E  
                                            l9110 4F9C                                              l8240 409A  
                                            l9040 43E4                                              l8208 56D8  
                                            l8216 57F6                                              l9016 4C08  
                                            l9008 4BE4                                              l9032 4D66  
                                            l9024 4CFE                                              l8400 1B30  
                                            l8312 196A                                              l8320 1994  
                                            l8304 1944                                              l9104 4384  
                                            l8232 50AE                                              l9120 4FD4  
                                            l9112 4FA4                                              l8250 40D0  
                                            l8242 40AA                                              l9050 4450  
                                            l9042 4412                                              l8218 580E  
                                            l9026 4D2C                                              l8410 1B9C  
                                            l8402 1B3A                                              l8330 19CC  
                                            l8322 19A4                                              l8314 197A  
                                            l8306 194A                                              l9106 4394  
                                            l8234 50B8                                              l8226 5080  
                                            l9202 35BC                                              l9130 5000  
                                            l9122 4FDA                                              l9114 4FB6  
                                            l9210 3F38                                              l8260 4118  
                                            l8252 40E0                                              l8244 40AE  
                                            l8236 4088                                              l9052 44A0  
                                            l9044 4422                                              l9036 43A6  
                                            l8500 4990                                              l9300 2F3E  
                                            l9028 4D3C                                              l9060 578C  
                                            l8412 1BAC                                              l8404 1B40  
                                            l8340 19E0                                              l8332 19D0  
                                            l8324 19B6                                              l8316 198A  
                                            l8308 1958                                              l9140 3666  
                                            l9132 35EC                                              l8228 5090  
                                            l9124 4FF0                                              l9116 4FBE  
                                            l9220 3FC4                                              l9212 3F3A  
                                            l8270 415C                                              l8262 4122  
                                            l8254 40F6                                              l8246 40BC  
                                            l8238 408C                                              l9054 44A6  
                                            l9046 4430                                              l9038 43D4  
                                            l8190 485C                                              l8502 49BE  
                                            l8510 5718                                              l9310 2F84  
                                            l9302 2F50                                              l9062 579C  
                                            l8430 1C2E                                              l8422 1C06  
                                            l8406 1B66                                              l8414 1BBC  
                                            l8350 19F4                                              l8342 19E4  
                                            l8334 19D4                                              l8326 19C4  
                                            l8318 198C                                              l9150 36C0  
                                            l9134 35FC                                              l9126 4FF8  
                                            l9118 4FC6                                              l9230 4064  
                                            l9214 3F40                                              l8264 4140  
                                            l8256 40FE                                              l8272 4162  
                                            l8248 40CC                                              l9048 4442  
                                            l8192 486E                                              l8504 49D2  
                                            l8600 3B26                                              l9312 2F8C  
                                            l9304 2F60                                              l8432 1C36  
                                            l8424 1C10                                              l8416 1BE2  
                                            l8408 1B9A                                              l8440 1C5A  
                                            l8360 1A08                                              l8352 19F8  
                                            l8344 19E8                                              l8336 19D8  
                                            l8328 19C8                                              l8280 18C4  
                                            l9080 430A                                              l9072 42CA  
                                            l8520 453C                                              l8512 44AA  
                                            l9400 036A                                              l9320 001C  
                                            l9160 3724                                              l9152 36C2  
                                            l9144 367A                                              l9136 360A  
                                            l9128 4FFA                                              l9232 4064  
                                            l9216 3F64                                              l9224 3FD6  
                                            l9208 3F28                                              l8274 4172  
                                            l8266 4150                                              l8258 410A  
                                            l8194 4880                                              l9250 529E  
                                            l9242 526E                                              l8610 3B7A  
                                            l8602 3B32                                              l9306 2F66  
                                            l9314 2F9C                                              l9058 5776  
                                            l8450 1CAC                                              l8442 1C5E  
                                            l8434 1C3A                                              l8426 1C1E  
                                            l8418 1BF2                                              l8370 1A80  
                                            l8362 1A32                                              l8354 19FC  
                                            l8346 19EC                                              l8338 19DC  
                                            l8290 1900                                              l8282 18D0  
                                            l9090 433A                                              l9082 4318  
                                            l9074 42F4                                              l9066 429E  
                                            l8530 459E                                              l8514 44CA  
                                            l9410 03D6                                              l9402 039C  
                                            l9330 0070                                              l9322 002C  
                                            l9170 377C                                              l9162 3742  
                                            l9154 36CE                                              l9146 3682  
                                            l9138 3650                                              l9234 4076  
                                            l9226 4018                                              l9218 3F94  
                                            l8276 4182                                              l8268 4152  
                                            l9180 541E                                              l8196 488A  
                                            l9252 52A2                                              l9244 5282  
                                            l8620 3BEE                                              l8612 3B8C  
                                            l8604 3B50                                              l8508 56FE  
                                            l9308 2F78                                              l9260 2D2C  
                                            l8700 29FE                                              l8460 1D12  
                                            l8452 1CB8                                              l8444 1C6C  
                                            l8436 1C4A                                              l8428 1C20  
                                            l8380 1AC0                                              l8372 1A84  
                                            l8364 1A4E                                              l8356 1A00  
                                            l8348 19F0                                              l8292 1910  
                                            l8284 18DE                                              l9092 4344  
                                            l9076 42F6                                              l9068 42B6  
                                            l8516 4508                                              l8524 4548  
                                            l9500 0866                                              l9412 03DE  
                                            l9404 03AC                                              l9340 00BA  
                                            l9332 0078                                              l9324 003A  
                                            l9172 378A                                              l9164 3744  
                                            l9156 370A                                              l9148 368E  
                                            l9228 402A                                              l9182 5432  
                                            l8198 48A8                                              l9246 528E  
                                            l8614 3BBA                                              l8606 3B58  
                                            l8622 3BF4                                              l8630 3DC2  
                                            l9270 2D94                                              l9262 2D4C  
                                            l8710 2A44                                              l8702 2A06  
                                            l8470 1D5A                                              l8462 1D22  
                                            l8454 1CC6                                              l8446 1C82  
                                            l8438 1C4C                                              l8390 1B02  
                                            l8382 1AD0                                              l8374 1A92  
                                            l8366 1A5E                                              l8358 1A04  
                                            l8294 1912                                              l8286 18E0  
                                            l9078 4306                                              l8526 455A  
                                            l8518 4530                                              l8550 3238  
                                            l8534 5212                                              l8542 518A  
                                            l9510 08A4                                              l9502 086E  
                                            l9430 0494                                              l9422 0426  
                                            l9414 03F8                                              l9406 03B0  
                                            l9350 00F6                                              l9342 00C2  
                                            l9334 008A                                              l9326 0042  
                                            l9318 0012                                              l9174 378C  
                                            l9166 3748                                              l9158 3716  
                                            l9190 342E                                              l9184 5460  
                                            l9248 529A                                              l8624 3C04  
                                            l8616 3BDA                                              l8608 3B6C  
                                            l8640 3E06                                              l8632 3DC6  
                                            l9280 2DCA                                              l9272 2DA6  
                                            l9264 2D5C                                              l9256 2CE4  
                                            l8720 2A6C                                              l8712 2A48  
                                            l8704 2A16                                              l8472 1D5C  
                                            l8464 1D42                                              l8456 1D00  
                                            l8392 1B10                                              l8376 1A94  
                                            l8368 1A74                                              l8288 18F0  
                                            l8296 191A                                              l9088 4330  
                                            l8560 3324                                              l8552 3290  
                                            l8536 5222                                              l8544 519C  
                                            l9600 0B7A                                              l9520 08D0  
                                            l9512 08AA                                              l9504 0882  
                                            l9440 04D2                                              l9424 043A  
                                            l9432 0498                                              l9408 03C2  
                                            l9416 0412                                              l9360 0172  
                                            l9344 00C6                                              l9336 009A  
                                            l9328 0066                                              l9168 376C  
                                            l9192 348E                                              l9186 5464  
                                            l9178 541A                                              l8490 494A  
                                            l8626 3C24                                              l8618 3BDC  
                                            l8650 3E6E                                              l8642 3E26  
                                            l8634 3DD4                                              l9282 2DD0  
                                            l9290 2EC2                                              l9274 2DB4  
                                            l9266 2D5E                                              l9258 2D04  
                                            l8730 2ABA                                              l8706 2A2C  
                                            l8810 1DA0                                              l8474 1D62  
                                            l8466 1D46                                              l8458 1D02  
                                            l8394 1B1C                                              l8386 1AE4  
                                            l8378 1A9E                                              l8298 192A  
                                            l9098 4358                                              l8570 340C  
                                            l8562 3360                                              l8554 32A4  
                                            l8538 5154                                              l9610 0BB6  
                                            l9602 0B8C                                              l9514 08B6  
                                            l9506 0890                                              l9522 08D6  
                                            l9530 0904                                              l9450 0520  
                                            l9442 04D6                                              l9434 04A0  
                                            l9426 0456                                              l9362 017C  
                                            l9354 012C                                              l9346 00CA  
                                            l9338 00AE                                              l8482 4F22  
                                            l9194 34AE                                              l8580 5896  
                                            l9620 37B6                                              l8492 4958  
                                            l8660 3EE4                                              l8652 3E9C  
                                            l8644 3E44                                              l8636 3DF4  
                                            l9292 2EDC                                              l9284 2E52  
                                            l9276 2DBA                                              l9268 2D78  
                                            l8740 2B04                                              l8732 2ACA  
                                            l8724 2A80                                              l8708 2A3C  
                                            l8716 2A5C                                              l8900 209C  
                                            l8820 1DE6                                              l8812 1DB0  
                                            l8804 1D84                                              l8476 1D70  
                                            l8468 1D54                                              l8396 1B20  
                                            l8388 1AF4                                              l8572 341C  
                                            l8556 32B2                                              l8564 3394  
                                            l8548 3218                                              l9604 0B98  
                                            l9540 09BA                                              l9532 095C  
                                            l9524 08E8                                              l9516 08C6  
                                            l9508 08A0                                              l9460 05B8  
                                            l9444 04E8                                              l9452 0528  
                                            l9436 04B2                                              l9428 048C  
                                            l9372 0200                                              l9356 013E  
                                            l9348 00D0                                              l9196 3534  
                                            l9700 5948                                              l8582 58B2  
                                            l9622 37BA                                              l8494 4964  
                                            l8486 4926                                              l8590 3AD0  
                                            l8662 3F04                                              l8654 3EBC  
                                            l8646 3E4C                                              l8638 3DF8  
                                            l9294 2EFA                                              l9286 2E58  
                                            l9278 2DC2                                              l8750 2B52  
                                            l8742 2B10                                              l8734 2AD2  
                                            l8726 2A9A                                              l8718 2A6C  
                                            l8670 2964                                              l8910 210A  
                                            l8830 1E12                                              l8822 1DEC  
                                            l8814 1DC0                                              l8806 1D90  
                                            l8478 1D72                                              l8398 1B2E  
                                            l8566 33D0                                              l9606 0BA0  
                                            l9550 0A0E                                              l9542 09D6  
                                            l9534 0990                                              l9526 08FA  
                                            l9518 08CA                                              l9470 069C  
                                            l9462 0610                                              l9454 0530  
                                            l9446 04F6                                              l9438 04C4  
                                            l9390 029A                                              l9374 0212  
                                            l9358 015A                                              l9366 01A4  
                                            l9198 3578                                              l9710 5920  
                                            l9702 58BC                                              l8576 57AE  
                                            l9640 3870                                              l9632 3816  
                                            l9624 37D6                                              l9616 379E  
                                            l8496 4978                                              l8488 4936  
                                            l8592 3AF0                                              l8656 3ECE  
                                            l8648 3E60                                              l9296 2F14  
                                            l9288 2E5E                                              l8752 2B68  
                                            l8760 2B98                                              l8744 2B2E  
                                            l8736 2AE2                                              l8728 2AAA  
                                            l8680 2998                                              l8672 2966  
                                            l8920 2172                                              l8904 20C6  
                                            l8912 210E                                              l8840 1E68  
                                            l8832 1E22                                              l8824 1DF2  
                                            l8816 1DD0                                              l8808 1D9E  
                                            l8568 33E4                                              l9608 0BB0  
                                            l9560 0A52                                              l9552 0A20  
                                            l9544 09E8                                              l9536 0998  
                                            l9528 08FE                                              l9480 0736  
                                            l9472 06CE                                              l9464 0644  
                                            l9456 0540                                              l9448 050E  
                                            l9392 02CE                                              l9376 022E  
                                            l9368 01CA                                              l9384 024A  
                                            l9800 1840                                              l9720 1360  
                                            l9712 5928                                              l9704 58C4  
                                            l9650 38F6                                              l9634 382C  
                                            l9626 380C                                              l9618 37B2  
                                            l8498 498C                                              l8594 3AF4  
                                            l8586 3ABE                                              l8658 3ED4  
                                            l9298 2F2E                                              l8762 2BA6  
                                            l8754 2B6E                                              l8746 2B30  
                                            l8738 2AF6                                              l8690 29CA  
                                            l8674 2976                                              l8682 29A0  
                                            l8666 2948                                              l8930 219C  
                                            l8922 2182                                              l8914 2128  
                                            l8906 20D2                                              l8850 1EA8  
                                            l8834 1E32                                              l8826 1E00  
                                            l8818 1DD6                                              l9570 0A82  
                                            l9562 0A60                                              l9554 0A32  
                                            l9546 09F8                                              l9490 07BE  
                                            l9538 099C                                              l9482 076A  
                                            l9474 06E4                                              l9458 0554  
                                            l9466 064A                                              l9394 02D4  
                                            l9386 0264                                              l9810 187E  
                                            l9802 184E                                              l9730 13C2  
                                            l9722 1364                                              l9714 131C  
                                            l9706 5900                                              l9652 3908  
                                            l9644 38A6                                              l9636 3834  
                                            l9628 3810                                              l8596 3B02  
                                            l8588 3AC2                                              l8940 49EC  
                                            l8772 2C10                                              l8780 2C58  
                                            l8764 2BAA                                              l8756 2B78  
                                            l8748 2B40                                              l8692 29CC  
                                            l8684 29B0                                              l8676 2986  
                                            l8668 2956                                              l8924 2190  
                                            l8916 213C                                              l8908 20E0  
                                            l8860 1EF2                                              l8852 1EB4  
                                            l8844 1E7C                                              l8836 1E38  
                                            l8828 1E02                                              l9580 0AE4  
                                            l9572 0AA8                                              l9564 0A68  
                                            l9556 0A3A                                              l9548 0A0A  
                                            l9492 0822                                              l9484 077A  
                                            l9476 0716                                              l9468 0668  
                                            l9396 032E                                              l9660 47B0  
                                            l9804 1862                                              l9740 1472  
                                            l9732 13FC                                              l9724 1388  
                                            l9716 1340                                              l9900 55BC  
                                            l9708 5908                                              l9822 51B4  
                                            l9830 5632                                              l9638 383C  
                                            l8598 3B22                                              l8950 4A18  
                                            l8942 49F0                                              l8790 2CC2  
                                            l8782 2C72                                              l8774 2C1C  
                                            l8766 2BB8                                              l8758 2B86  
                                            l8694 29DC                                              l8686 29B6  
                                            l8678 2996                                              l8926 2192  
                                            l8918 2156                                              l8870 1F44  
                                            l8862 1EFE                                              l8854 1ECC  
                                            l8846 1E88                                              l8838 1E58  
                                            l8934 55EA                                              l9590 0B2A  
                                            l9582 0AFE                                              l9574 0AC4  
                                            l9566 0A70                                              l9558 0A4A  
                                            l9494 0832                                              l9486 078E  
                                            l9478 0726                                              l9398 0362  
                                            l9670 47FE                                              l9750 14F8  
                                            l9734 141C                                              l9726 1390  
                                            l9742 1484                                              l9718 134E  
                                            l9814 188C                                              l9910 55E4  
                                            l9902 55C0                                              l9824 51B8  
                                            l9840 5662                                              l9832 563A  
                                            l9648 38E4                                              l8960 4A46  
                                            l8952 4A20                                              l8944 49FE  
                                            l8792 2CD0                                              l8784 2C88  
                                            l8776 2C2A                                              l8768 2BE6  
                                            l8696 29EC                                              l8688 29BC  
                                            l8928 2198                                              l8880 1FC2  
                                            l8872 1F54                                              l8864 1F0E  
                                            l8856 1ED8                                              l8848 1E92  
                                            l8936 55FA                                              l9592 0B3A  
                                            l9584 0B04                                              l9576 0ACC  
                                            l9568 0A7C                                              l9496 0846  
                                            l9488 079A                                              l9672 4810  
                                            l9664 47BC                                              l9816 18B0  
                                            l9808 1870                                              l9760 159C  
                                            l9752 152A                                              l9744 14A6  
                                            l9736 142A                                              l9728 139E  
                                            l9680 3C46                                              l9904 55CE  
                                            l9920 2650                                              l9912 2596  
                                            l9826 51DC                                              l9834 563C  
                                            l8970 4A80                                              l8962 4A4E  
                                            l8954 4A24                                              l8946 4A06  
                                            l8794 2CD6                                              l8786 2CA2  
                                            l8778 2C54                                              l8698 29FC  
                                            l8890 203C                                              l8882 1FF8  
                                            l8874 1F70                                              l8866 1F1A  
                                            l8858 1EE4                                              l9594 0B40  
                                            l9586 0B16                                              l9578 0AD2  
                                            l9498 0858                                              l9674 4838  
                                            l9666 47CA                                              l9658 4786  
                                            l9770 1664                                              l9762 15C0  
                                            l9754 154E                                              l9746 14B6  
                                            l9682 3D60                                              l9850 46AE  
                                            l9906 55D2                                              l9930 2798  
                                            l9922 2674                                              l9914 25B6  
                                            l9828 51E0                                              l9836 564E  
                                            l8980 4AA6                                              l8972 4A82  
                                            l8964 4A5C                                              l8956 4A2C  
                                            l8948 4A0A                                              l8796 2CD8  
                                            l8788 2CBE                                              l8892 204E  
                                            l8884 2006                                              l8876 1F7C  
                                            l8868 1F2A                                              l9596 0B46  
                                            l9588 0B22                                              l9668 47E2  
                                            l9772 1676                                              l9764 15E4  
                                            l9756 1580                                              l9748 14E8  
                                            l9684 3D70                                              l9860 473C  
                                            l9844 46A2                                              l9908 55D6  
                                            l9940 2912                                              l9932 2804  
                                            l9924 2692                                              l9916 2600  
                                            l9678 595C                                              l9838 5650  
                                            l8974 4A88                                              l8966 4A62  
                                            l8958 4A3E                                              l8990 4B7C  
                                            l8894 205C                                              l8886 2024  
                                            l8878 1F98                                              l9790 17A4  
                                            l9774 168C                                              l9782 16F6  
                                            l9766 162C                                              l9950 5100  
                                            l9870 58E6                                              l9686 3D80  
                                            l9862 474A                                              l9854 46EC  
                                            l9846 46A6                                              l9942 2936  
                                            l9934 2836                                              l9918 2614  
                                            STR_1 7F62                                              l8968 4A78  
                                            l8976 4A8E                                              l8992 4B80  
                                            l8984 4B62                                              l8896 2060  
                                            l8888 202E                                              l9792 17D8  
                                            l9784 1724                                              l9776 169A  
                                            l9952 512E                                              l9960 53EA  
                                            l9696 584A                                              l9856 46FA  
                                            l9864 474E                                              l9848 46AA  
                                            l9880 5574                                              l9872 555A  
                                            l9936 28A2                                              l9928 26CA  
                                            STR_2 7F49                                              STR_3 7E43  
                                            l8978 4A9E                                              l8994 4B8E  
                                            l8986 4B66                                              l8898 206E  
                                            l9778 16CA                                              l9946 50EA  
                                            l9962 5406                                              l9954 53C8  
                                            l9698 5940                                              l9866 4780  
                                            l9858 46FE                                              l9890 559C  
                                            l9882 5578                                              l9874 555E  
                                            l9938 28D6                                              l9970 4D92  
                                            STR_4 7FA4                                              STR_5 7F91  
                                            l8996 4B96                                              l8988 4B74  
                                            l9788 1792                                              l9948 50F2  
                                            l9956 53DA                                              l9868 58DE  
                                            l9892 55A2                                              l9884 5586  
                                            l9876 5562                                              l9972 4DA8  
                                            l9980 4DC8                                              STR_6 7FB6  
                                            STR_7 7FD2                                              l8998 4BA8  
                                            l9798 181C                                              l9958 53E2  
                                            l9894 55A6                                              l9886 558A  
                                            l9878 5570                                              l9990 2FC6  
                                            l9966 4D6A                                              STR_8 7FC7  
                                            STR_9 7FDC                                              l9896 55AA  
                                            l9888 558E                                              l9992 2FD0  
                                            l9968 4D76                                              l9898 55B8  
                                            l9994 3010                                              l9988 5870  
                                            l9996 30D2                                              l9998 3102  
                                            _RCIF 007CF5                                              u9000 57DE  
                                            u8200 48A8                                              u9001 57D8  
                                            u8201 48A4                                              u9010 57E0  
                                            u8210 48DE                                              u8211 48DA  
                                            u8300 40F6                                              u8220 56FC  
                                            u9020 3AD0                                              u9100 3E06  
                                            u8301 40F2                                              u8221 56F8  
                                            u9021 3ACC                                              u9101 3E02  
                                            u8310 4118                                              u8230 580E  
                                            u9030 3B02                                              u9110 3E44  
                                            u8311 4114                                              u8231 580A  
                                            u9031 3AFE                                              u9111 3E40  
                                            u8320 4140                                              u9120 3E6E  
                                            u9200 29EC                                              u8400 197A  
                                            u8240 576E                                              u8321 413C  
                                            u9041 3B2C                                              u9121 3E6A  
                                            u9201 29E8                                              u8401 1976  
                                            u8241 5768                                              u8330 4172  
                                            u9050 3B50                                              u9130 3E9C  
                                            u9210 2A2C                                              u8410 19B6  
                                            u8250 5770                                              u8331 416E  
                                            u9051 3B4C                                              u9131 3E98  
                                            u9211 2A28                                              u8411 19B2  
                                            u8180 486E                                              u9060 3B7A  
                                            u9140 3EE4                                              u9300 2BB8  
                                            u9220 2A6C                                              u8500 1AD0  
                                            u8420 19C4                                              u8340 18DE  
                                            u8260 509E                                              u8181 486A  
                                            u9061 3B76                                              u9141 3EE0  
                                            u9301 2BB4                                              u9221 2A68  
                                            u8501 1ACC                                              u8421 19C0  
                                            u8341 18DA                                              u8261 509A  
                                            u8190 4880                                              u9070 3BBA  
                                            u9310 2BE6                                              u9230 2AE2  
                                            u9150 2964                                              u8510 1B02  
                                            u8430 1A32                                              u8350 18F0  
                                            u8270 50D8                                              u8191 487C  
                                            u9071 3BB6                                              u9311 2BE2  
                                            u9231 2ADE                                              u9151 2960  
                                            u8511 1AFE                                              u8431 1A2E  
                                            u8351 18EC                                              u8271 50D4  
                                            u8280 409A                                              u9080 3C04  
                                            u9320 2BFC                                              u9240 2B04  
                                            u9160 2976                                              u9400 1DC0  
                                            u8600 1C4A                                              u8520 1B10  
                                            u8440 1A4A                                              u8360 1900  
                                            u8281 4096                                              u9081 3C00  
                                            u9321 2BF8                                              u9241 2B00  
                                            u9161 2972                                              u9401 1DBC  
                                            u8601 1C46                                              u8521 1B0C  
                                            u8441 1A44                                              u8361 18FC  
                                            u8290 40BC                                              u9090 3DD4  
                                            u9330 2C10                                              u9250 2B2E  
                                            u9170 2986                                              u9410 1E00  
                                            u8610 1C5A                                              u8530 1B2E  
                                            u8450 1A4C                                              u8370 1942  
                                            u8291 40B8                                              u9091 3DD0  
                                            u9331 2C0C                                              u9251 2B2A  
                                            u9171 2982                                              u9411 1DFC  
                                            u8611 1C56                                              u8531 1B2A  
                                            u8371 193E                                              u9340 2C2A  
                                            u9260 2B52                                              u9180 29CA  
                                            u9500 209C                                              u9420 1E12  
                                            u8700 1D42                                              u8620 1C6C  
                                            u8540 1B66                                              u8460 1A74  
                                            u8380 1958                                              u9341 2C26  
                                            u9261 2B4E                                              u9181 29C6  
                                            u9501 2098                                              u9421 1E0E  
                                            u8701 1D3E                                              u8621 1C68  
                                            u8541 1B62                                              u8461 1A70  
                                            u8381 1954                                              u9350 2C72  
                                            u9270 2B68                                              u9190 29DC  
                                            u9510 20B2                                              u9430 1E22  
                                            u8710 1D54                                              u8630 1C82  
                                            u8550 1BAC                                              u8470 1A92  
                                            u8390 196A                                              u9351 2C6E  
                                            u9271 2B64                                              u9191 29D8  
                                            u9511 20AE                                              u9431 1E1E  
                                            u8711 1D50                                              u8631 1C7E  
                                            u8551 1BA8                                              u8471 1A8E  
                                            u8391 1966                                              u9600 4A5C  
                                            u9360 2CA2                                              u9280 2B86  
                                            u9520 20C6                                              u9440 1E58  
                                            u8720 1D70                                              u8640 1C98  
                                            u8560 1BE2                                              u8480 1AB2  
                                            u8800 4530                                              u9601 4A58  
                                            u9361 2C9E                                              u9281 2B82  
                                            u9521 20C2                                              u9441 1E54  
                                            u8721 1D6C                                              u8641 1C94  
                                            u8561 1BDE                                              u8481 1AAE  
                                            u8801 452C                                              u8730 4936  
                                            u9610 4A78                                              u9370 2CD0  
                                            u9290 2BA6                                              u9530 20E0  
                                            u9450 1E68                                              u8650 1CAC  
                                            u8570 1BF2                                              u8490 1AC0  
                                            u8810 455A                                              u8731 4932  
                                            u9611 4A74                                              u9371 2CCC  
                                            u9291 2BA2                                              u9531 20DC  
                                            u9451 1E64                                              u8651 1CA8  
                                            u8571 1BEE                                              u8491 1ABC  
                                            u8811 4556                                              u8740 4958  
                                            u9620 4A9E                                              u9700 4D2C  
                                            u9540 2128                                              u9460 1FE2  
                                            u9380 1D9E                                              u8660 1CC6  
                                            u8580 1C1E                                              u8900 3262  
                                            u8741 4954                                              u9621 4A9A  
                                            u9701 4D28                                              u9541 2124  
                                            u9381 1D9A                                              u8661 1CC2  
                                            u8581 1C1A                                              u8750 49AE  
                                            u9630 4B74                                              u9710 4D60  
                                            u9550 2156                                              u9470 203C  
                                            u9390 1DB0                                              u8670 1D00  
                                            u8590 1C2E                                              u8830 4594  
                                            u8910 3290                                              u8751 49AA  
                                            u9631 4B70                                              u9711 4D5C  
                                            u9551 2152                                              u9471 2038  
                                            u9391 1DAC                                              u8671 1CFC  
                                            u8591 1C2A                                              u8831 458E  
                                            u8911 328C                                              u9720 43D4  
                                            u8760 49BE                                              u9640 4B8E  
                                            u9560 2190                                              u9480 205C  
                                            u8680 1D12                                              u9800 4318  
                                            u8840 4596                                              u8920 32B2  
                                            u9721 43D0                                              u8761 49BA  
                                            u9641 4B8A                                              u9561 218C  
                                            u9481 2058                                              u9465 1FD8  
                                            u8681 1D0E                                              u9801 4314  
                                            u8825 456C                                              u8921 32AE  
                                            u8905 3258                                              u9730 4412  
                                            u8770 5718                                              u9570 49FE  
                                            u9650 4BA8                                              u9490 206E  
                                            u8690 1D22                                              u9810 432C  
                                            u8850 525A                                              u9731 440E  
                                            u8771 5714                                              u9571 49FA  
                                            u9651 4BA4                                              u9491 206A  
                                            u8691 1D1E                                              u9811 4328  
                                            u9740 4430                                              u9580 4A18  
                                            u9660 4BC6                                              u9820 4354  
                                            u8780 44EA                                              u8940 3320  
                                            u8860 526C                                              u9900 3666  
                                            u9741 442C                                              u9581 4A14  
                                            u9661 4BC2                                              u9821 4350  
                                            u8941 331C                                              u8861 5268  
                                            u9901 3662                                              u9750 4450  
                                            u9590 4A3E                                              u9670 4BDC  
                                            u9830 4374                                              u8790 4508  
                                            u8950 3344                                              u8870 5184  
                                            u9910 36BC                                              u9751 444C  
                                            u9591 4A3A                                              u9671 4BD8  
                                            u9831 4370                                              u8791 4504  
                                            u8935 32C6                                              u8871 517E  
                                            u9911 36B8                                              u9760 44A0  
                                            u9680 4C00                                              u9840 4384  
                                            u8960 3360                                              u8936 32D0  
                                            u8880 5186                                              u9920 3706  
                                            u9761 449C                                              u9681 4BFC  
                                            u9841 4380                                              u8785 44E0  
                                            u8961 335C                                              u8937 32E0  
                                            u8857 5250                                              u9921 3702  
                                            u9690 4CEE                                              u9770 578C  
                                            u8970 33B4                                              u8890 519C  
                                            u9930 3724                                              u9850 4FB6  
                                            u9691 4CEA                                              u9771 5788  
                                            u8955 333A                                              u8891 5198  
                                            u9931 3720                                              u9851 4FB2  
                                            u9780 42B6                                              u8980 33D0  
                                            u9940 3734                                              u9860 4FD4  
                                            u9781 42B2                                              u8981 33CC  
                                            u9941 3730                                              u9861 4FD0  
                                            u9790 42EA                                              u8990 340C  
                                            u9950 3742                                              u9870 4FF0  
                                            u8991 3408                                              u8975 33AA  
                                            u9951 373E                                              u9871 4FEC  
                                            u9960 377C                                              u9880 35FC  
                                            u9961 3778                                              u9881 35F8  
                                            u9970 378A                                              u9890 360A  
                                            u9795 42E0                                              u9971 3786  
                                            u9891 3606                                              u9980 5432  
                                            u9981 542E                                              u9990 5460  
                                            u9991 545C                                  ??_forzarParoAuto 0006  
                                            abs@a 0018                                              _dbuf 0142  
                                            _atoi 379E                                              _ctoa 526E  
                                            _main 4E06                                              _dtoa 2CE4  
                                            _prec 0130                                              _nout 012C  
                                            pad@i 001D                                              pad@p 001A  
                                            fsr0h 000FEA                                              fsr1h 000FE2  
                                            indf0 000FEF                                              fsr2h 000FDA  
                                            fsr0l 000FE9                                              indf2 000FDF  
                                            fsr1l 000FE1                                              pad@w 001F  
                                            map@x 0020                                              fsr2l 000FD9  
                                            btemp 005A                                     ___fpclassifyf 44AA  
                        __end_of_decidirDireccion 131C                                              prodh 000FF4  
                                            prodl 000FF3                                              start 000E  
                                   __CFG_IESO$OFF 000000                                   ___fldiv@new_exp 0065  
                                    _tolower$1562 0012                                     __CFG_MCLRE$ON 000000  
                                   ?_leerSensores 0001                                      ___param_bank 000000  
                                           ??_PID 0088                                             ??_abs 001A  
                                           ??_map 0034                                             ??_pad 001C  
                                 ??_velocidadBaja 0054                                     __CFG_PLLDIV$1 000000  
                                  __CFG_CCP2MX$ON 000000                                             l10000 310A  
                                           l10002 312C                                             l10010 3180  
                                           l10020 31E0                                             l10012 3188  
                                           l10004 3158                                             l10030 56A8  
                                           l10014 31A0                                             l10022 31EC  
                                           l10006 316C                                             l10120 3ABA  
                                           l10040 3988                                             l10112 3AA4  
                                           l10200 0C5C                                             l10032 56B0  
                                           l10024 31F4                                             l10016 31C8  
                                           l10008 3174                                             l11000 4E26  
                                           l10114 3AB4                                             l10050 39F6  
                                           l10042 398A                                             l10034 392E  
                                           l10202 0C76                                             l10026 3204  
                                           l10018 31D8                                             l11010 4E30  
                                           l11002 4E28                                             l10052 39FC  
                                           l10044 39BC                                             l10036 3950  
                                           l10140 4ED6                                             l10132 4EA2  
                                           l10124 581C                                             l10300 0E3A  
                                           l10212 0CDE                                             l10204 0C86  
                                           l10220 0D16                                             l10028 5676  
                                           l11020 4E5A                                             l11012 4E36  
                                           l11004 4E2A                                             l10054 39FE  
                                           l10046 39C2                                             l10038 3982  
                                           l10134 4EA6                                             l10126 5820  
                                           l10230 0DAA                                             l10214 0CF2  
                                           l10206 0CA6                                             l10222 0D50  
                                           l10150 4198                                             l11022 4E6C  
                                           l11014 4E3C                                             l11006 4E2C  
                                           l10064 3A0E                                             l10048 39C4  
                                           l10136 4EB6                                             l10144 4EE6  
                                           l10128 5842                                             l10232 0DB2  
                                           l10224 0D68                                             l10208 0CBA  
                                           l10160 41F8                                             l10152 41A4  
                                           l11024 4E7E                                             l11032 4E86  
                                           l11016 4E42                                             l11008 4E2E  
                                           l10090 3A54                                             l10066 3A20  
                                           l10138 4EC6                                             l10314 0E42  
                                           l10234 0DD0                                             l10226 0D82  
                                           l10162 4208                                             l10154 41BC  
                                           l11034 4E8A                                             l11026 4E82  
                                           l11018 4E46                                             l10092 3A68  
                                           l10068 3A34                                             l10500 1258  
                                           l10340 0EB6                                             l10316 0E60  
                                           l10236 0DD4                                             l10228 0D8A  
                                           l10164 420C                                             l10156 41C8  
                                           l11036 4E92                                             l10094 3A78  
                                           l10510 12D4                                             l10502 1260  
                                           l10342 0EC2                                             l10318 0E6C  
                                           l10238 0DE0                                             l10190 0C10  
                                           l10166 4224                                             l10158 41E2  
                                           l10096 3A88                                             l10088 3A44  
                                           l11400 385A                                             l10512 12E6  
                                           l10504 1292                                             l10440 0FA4  
                                           l10336 0E78                                             l10432 0F48  
                                           l10192 0C20                                             l10184 0BD8  
                                           l10168 423E                                             l10176 425E  
                                           l10098 3A98                                             l11402 4EFA  
                                           l10514 12F6                                             l10506 129A  
                                           l10450 1006                                             l10426 0F1C  
                                           l10338 0E98                                             l10434 0F84  
                                           l10194 0C38                                             l10442 0FAE  
                                           l10186 0BE0                                             l10620 5014  
                                           l10516 1306                                             l10508 12CC  
                                           l10460 107E                                             l10452 1012  
                                           l10444 0FC6                                             l10436 0F94  
                                           l10428 0F40                                             l10196 0C44  
                                           l10188 0BF8                                             l10700 22B8  
                                           l10604 5472                                             l10630 5076  
                                           l10622 5048                                             l10614 5010  
                                           l10518 1314                                             l10470 10E8  
                                           l10462 1086                                             l10454 1024  
                                           l10446 0FDE                                             l10438 0FA0  
                                           l10382 0ECA                                             l10294 0DF4  
                                           l10198 0C54                                             l10550 4B2A  
                                           l10542 4AE0                                             l10534 4AB0  
                                           l10710 22F0                                             l10702 22CA  
                                           l10632 5078                                             l10624 5070  
                                           l10616 5010                                             l10480 1122  
                                           l10472 10F8                                             l10464 10B8  
                                           l10456 1046                                             l10448 0FEE  
                                           l10384 0EEA                                             l10296 0E0E  
                                           l10560 4B54                                             l10552 4B2E  
                                           l10544 4AFE                                             l10536 4AC2  
                                           l10800 2520                                             l10712 22F4  
                                           l10704 22DA                                             l10608 548E  
                                           l10640 4C12                                             l10634 507A  
                                           l10626 5072                                             l10618 5012  
                                           l10490 1186                                             l10482 112A  
                                           l10474 1104                                             l10466 10C0  
                                           l10458 104E                                             l10298 0E2E  
                                           l10570 54DC                                             l10554 4B38  
                                           l10546 4B02                                             l10538 4ACE  
                                           l10802 2534                                             l10730 2390  
                                           l10722 2316                                             l10714 22FE  
                                           l10706 22E2                                             l10810 2552  
                                           l10642 4C16                                             l10636 507C  
                                           l10628 5074                                             l10492 11B6  
                                           l10484 1152                                             l10468 10E4  
                                           l10476 1108                                             l10396 0F0C  
                                           l10572 54FA                                             l10564 54BC  
                                           l10580 4612                                             l10556 4B3C  
                                           l10548 4B0C                                             l10804 2546  
                                           l10740 23CE                                             l10732 239A  
                                           l10724 235C                                             l10716 2302  
                                           l10708 22E6                                             l11380 54A2  
                                           l10644 4C26                                             l10652 4C56  
                                           l10494 11BA                                             l10486 1156  
                                           l10478 1112                                             l10566 54C8  
                                           l11390 4276                                             l10582 4618  
                                           l10590 4660                                             l10574 45A8  
                                           l10558 4B50                                             l10806 254A  
                                           l10750 23FA                                             l10742 23D2  
                                           l10734 239E                                             l10726 236E  
                                           l11382 232E                                             l10718 230C  
                                           l10638 5970                                             l10670 5554  
                                           l10662 550C                                             l10646 4C36  
                                           l10654 4C94                                             l10496 1216  
                                           l10488 116E                                             l10568 54D8  
                                           l11392 3FEA                                             l10584 4630  
                                           l10592 4694                                             l10576 45F0  
                                           l11384 256A                                             l10752 240C  
                                           l10736 23B4                                             l10728 237E  
                                           l10680 21EE                                             l10672 21AE  
                                           l10664 5512                                             l10656 4CB2  
                                           l10648 4C46                                             l10498 1226  
                                           l11394 0D32                                             l10586 4648  
                                           l10578 4600                                             l11386 4DDE  
                                           l10770 2450                                             l10762 241A  
                                           l10754 2410                                             l10738 23C8  
                                           l10746 23D8                                             l10690 223A  
                                           l10682 2200                                             l10674 21B4  
                                           l10666 5528                                             l11378 4C6E  
                                           l11396 0F66                                             l11388 4676  
                                           l10780 2476                                             l10772 2456  
                                           l10764 242C                                             l10748 23EA  
                                           l10692 223E                                             l10684 2216  
                                           l10676 21CC                                             l10668 553E  
                                           l11398 35D2                                             l10790 24B0  
                                           l10782 2482                                             l10774 2466  
                                           l10766 243E                                             l10686 2226  
                                           l10694 2244                                             l10678 21DE  
                                           l10598 546E                                             l10792 24F0  
                                           l10776 246A                                             l10768 244C  
                                           l10696 2248                                             l10688 222E  
                                           l10794 24F6                                             l10778 2472  
                                           l10786 248C                                             l10698 22A6  
                                           l10796 2502                                             l10788 249E  
                                           l10980 4E12                                             l10972 4E06  
                                           l10990 4E1C                                             l10982 4E14  
                                           l10974 4E0C                                             l10992 4E1E  
                                           l10984 4E16                                             l10976 4E0E  
                                           l10994 4E20                                             l10986 4E18  
                                           l10978 4E10                                             l10996 4E22  
                                           l10988 4E1A                                             l10998 4E24  
                                   ___fltol@sign1 007A                                   __end_of___aldiv 4194  
                                 __end_of___aodiv 3C46                                             ?_atoi 000D  
                                           ?_ctoa 0021                                   __end_of___fladd 1D84  
                                           ?_main 0001                                             ?_dtoa 0021  
                                 __end_of___aomod 3F26                                   __end_of___fldiv 2CE4  
                                 __end_of___awdiv 4AB0                                   __end_of___flneg 57AE  
                                           STR_10 7FE5                                             STR_11 7ECA  
                                           STR_20 7DE4                                             STR_12 7D7B  
                                           STR_13 7E65                                             STR_21 7DB3  
                                           STR_14 7F7A                                             STR_22 7E14  
                                           STR_31 7FFB                                             STR_23 7FEB  
                                           STR_15 7EEA                                             STR_24 7FF3  
                                           STR_16 7EA9                                             STR_33 7FFB  
                                           STR_17 7F2A                                             STR_18 7F0A  
                                           STR_27 7FEF                                             STR_19 7E87  
                                           STR_28 7FF7                                   __end_of___awmod 4C12  
                                 __end_of___flmul 21AE                                   __end_of___flsub 5630  
                                 __end_of___fltol 43A6                                             u10000 34AE  
                                           u10001 34AA                                             u10100 3FC4  
                                           u10101 3FC0                                             u10110 3FD2  
                                           u10030 3F54                                             u10015 3548  
                                           u10111 3FCE                                             u10031 3F50  
                                           u10200 2DB4                                             u11000 14B6  
                                           u10016 3552                                             u10120 4018  
                                           u10040 3F64                                             u10201 2DB0  
                                           u11001 14B2                                             u10025 358C  
                                           u10017 3562                                             u10121 4014  
                                           u10041 3F60                                             u10130 5282  
                                           u10210 2EDC                                             u11010 14F8  
                                           u10026 3596                                             u10050 3F72  
                                           u10131 527E                                             u10211 2ED8  
                                           u11011 14F4                                             u10027 35A6  
                                           u10051 3F6E                                             u10220 2EFA  
                                           u10140 2D14                                             u10300 008A  
                                           u11100 1840                                             u11020 154E  
                                           u10060 3F84                                             u10221 2EF6  
                                           u10141 2D0E                                             u10301 0086  
                                           u11101 183C                                             u11021 154A  
                                           u10061 3F80                                             u11110 51D8  
                                           u10230 2F14                                             u10150 2D16  
                                           u10310 009A                                             u11030 15C0  
                                           u10070 3F94                                             u10231 2F10  
                                           u10311 0096                                             u11031 15BC  
                                           u10071 3F90                                             u11120 5200  
                                           u10240 2F2E                                             u10160 2D2C  
                                           u10400 0212                                             u10320 00AE  
                                           u11040 15E4                                             u10080 3FA2  
                                           u11200 2634                                             u12000 240C  
                                           u10241 2F2A                                             u10161 2D28  
                                           u10401 020E                                             u10321 00AA  
                                           u11041 15E0                                             u10081 3F9E  
                                           u12001 2408                                             u11130 5210  
                                           u10250 2F3E                                             u10170 2D5C  
                                           u10410 0296                                             u10330 00F6  
                                           u11050 1676                                             u10090 3FB4  
                                           u11210 2650                                             u12010 242C  
                                           u11131 520C                                             u10251 2F3A  
                                           u10171 2D58                                             u10411 0292  
                                           u10331 00F2                                             u11051 1672  
                                           u10091 3FB0                                             u11211 264C  
                                           u12011 2428                                             u11140 5660  
                                           u10260 2F50                                             u10180 2D78  
                                           u10500 048C                                             u10420 032A  
                                           u10340 0126                                             u11060 1724  
                                           u11220 2692                                             u11300 31A0  
                                           u12020 243E                                             u11117 51CE  
                                           u11141 565C                                             u10261 2F4C  
                                           u10181 2D74                                             u10501 0488  
                                           u10421 0326                                             u10341 0120  
                                           u11061 1720                                             u11221 268E  
                                           u11205 262A                                             u11301 319C  
                                           u12021 243A                                             u10270 2F60  
                                           u10190 2DA6                                             u10510 04B2  
                                           u10430 039C                                             u10350 0128  
                                           u11070 178C                                             u11150 46E0  
                                           u11230 2798                                             u11310 31C8  
                                           u12030 2466                                             u11127 51F6  
                                           u10271 2F5C                                             u10191 2DA2  
                                           u10511 04AE                                             u10431 0398  
                                           u11071 1786                                             u11151 46DC  
                                           u11231 2794                                             u11311 31C4  
                                           u12031 2462                                             u11400 3A88  
                                           u10280 2F78                                             u10600 0726  
                                           u10520 04C4                                             u10440 03C2  
                                           u10360 013E                                             u11080 178E  
                                           u11160 4730                                             u11320 56A8  
                                           u11240 2836                                             u12040 249E  
                                           u12200 4E6C                                             u11401 3A84  
                                           u10281 2F74                                             u10601 0722  
                                           u10521 04C0                                             u10441 03BE  
                                           u10361 013A                                             u11161 472C  
                                           u11321 56A4                                             u11241 2832  
                                           u12041 249A                                             u12201 4E68  
                                           u11410 3AB4                                             u11330 3950  
                                           u10610 078E                                             u10530 04D2  
                                           u10450 03D6                                             u10370 01CA  
                                           u10290 003A                                             u11090 17A4  
                                           u11170 4780                                             u11250 28F6  
                                           u12050 24B0                                             u12210 4E7E  
                                           u11411 3AB0                                             u11331 394C  
                                           u10611 078A                                             u10531 04CE  
                                           u10451 03D2                                             u10371 01C6  
                                           u10291 0036                                             u11091 17A0  
                                           u11171 477C                                             u12051 24AC  
                                           u12211 4E7A                                             u11340 3982  
                                           u11420 5842                                             u10700 09D6  
                                           u10620 0832                                             u10540 04E8  
                                           u10460 03F8                                             u10380 01FA  
                                           u11500 0C76                                             u11260 2912  
                                           u11180 25D6                                             u12060 2534  
                                 ___awdiv@divisor 0008                                             u11341 397E  
                                           u11421 583E                                             u10701 09D2  
                                           u10621 082E                                             u10541 04E4  
                                           u10461 03F4                                             u10381 01F4  
                                           u11501 0C72                                             u11261 290E  
                                           u12061 2530                                             u11350 39BC  
                                           u10710 09E8                                             u10630 0846  
                                           u10550 04F6                                             u10470 0422  
                                           u10390 01FC                                             u11270 514A  
                                           u11510 0CA6                                             u11430 41BC  
                                           u11190 2600                                             u12070 2546  
                                           u11351 39B8                                             u10711 09E4  
                                           u10631 0842                                             u10551 04F2  
                                           u10471 041E                                             u11271 5146  
                                           u11511 0CA2                                             u11431 41B8  
                                           u11255 28EC                                             u11191 25FC  
                                           u12071 2542                                             u11360 39F6  
                                           u10800 0B8C                                             u10720 09F8  
                                           u10640 0858                                             u10560 0520  
                                           u10480 043A                                             u11600 0E60  
                                           u11520 0CDA                                             u11440 4208  
                                           u11280 312C                                             _T1CON 000FCD  
                                           u11361 39F2                                             u10801 0B88  
                                           u10721 09F4                                             u10641 0854  
                                           u10561 051C                                             u10481 0436  
                                           u11601 0E5C                                             u11521 0CD6  
                                           u11441 4204                                             u11185 25CC  
                                           u11281 3128                                             u11370 3A0E  
                                           u10810 37D6                                             u10730 0A32  
                                           u10650 0866                                             u10570 0668  
                                           u10490 0456                                             u11610 0E98  
                                           u11530 0D12                                             u11450 0BF8  
                                           u11290 3158                                             u11371 3A0A  
                                           u10811 37D2                                             u10731 0A2E  
                                           u10651 0862                                             u10571 0664  
                                           u10491 0452                                             u11611 0E94  
                                           u11531 0D0E                                             u11451 0BF4  
                                           u12307 5594                                             u11291 3154  
                                           u12227 250E                                             u11380 3A20  
                                           u10820 380C                                             u10740 0A60  
                                           u10660 0882                                             u10580 06CE  
                                           u10900 47FE                                             u11700 1024  
                                           u11620 0EB6                                             u11540 0D68  
                                           u11460 0C10                                             u11381 3A1C  
                                           u10821 3808                                             u10741 0A5C  
                                           u10661 087E                                             u10581 06CA  
                                           u10901 47FA                                             u11701 1020  
                                           u11621 0EB2                                             u11541 0D64  
                                           u11461 0C0C                                             u12317 5912  
                                           u12237 4D7C                                             u11390 3A54  
                                           u10830 3828                                             u10750 0AE4  
                                           u10670 0890                                             u10590 0716  
                                           u10910 4810                                             u11710 107E  
                                           u11630 0EEA                                             u11550 0D82  
                                           u11470 0C20                                             u11391 3A50  
                                           u10831 3824                                             u10751 0AE0  
                                           u10671 088C                                             u10591 0712  
                                           u10911 480C                                             u11711 107A  
                                           u11631 0EE6                                             u11551 0D7E  
                                           u11471 0C1C                                             u12407 594E  
                                           u12327 55B0                                             u12247 4D9C  
                                           u10840 38DE                                             u10760 0AFE  
                                           u10680 08E8                                             u10920 4838  
                                           u11800 12CC                                             u11720 10B8  
                                           u11640 0F08                                             u11560 0DAA  
                                           u11480 0C38                                             u10841 38D8  
                                           u10761 0AFA                                             u10681 08E4  
                                           u10921 4834                                             u11801 12C8  
                                           u11721 10B4                                             u11641 0F04  
                                           u11561 0DA6                                             u11481 0C34  
                                           u12417 58F0                                             u12337 55C6  
                                           u12257 41D4                                             u10930 596E  
                                           u10850 38E0                                             u10770 0B16  
                                           u10690 09BA                                             u11810 12E6  
                                           u11730 10F8                                             u11650 0F94  
                                           u11570 0DD0                                             u11490 0C54  
                                           u10931 596A                                             u12427 5634  
                                           u10771 0B12                                             u10691 09B6  
                                           u11811 12E2                                             u11731 10F4  
                                           u11651 0F90                                             u11571 0DCC  
                                           u11491 0C50                                             u12347 55DC  
                                           u12267 41EA                                             u10860 38F6  
                                           u10780 0B74                                             u10940 1340  
                                           u11820 12F6                                             u11740 1122  
                                           u11660 0FC6                                             u11580 0E0E  
                                           u11900 21EE                                             u10861 38F2  
                                           u10781 0B6E                                             u10941 133C  
                                           u11821 12F2                                             u11741 111E  
                                           u11661 0FC2                                             u11581 0E0A  
                                           u12357 58CE                                             u12277 4230  
                                           u11901 21EA                                             u10870 3908  
                                           u10790 0B76                                             u10950 1388  
                                           u11830 1306                                             u11750 1152  
                                           u11670 0FDE                                             u11590 0E2E  
                                           u11910 2200                                             u10871 3904  
                                           u10951 1384                                             u11831 1302  
                                           u11751 114E                                             u11671 0FDA  
                                           u11591 0E2A                                             u12367 5932  
                                           u12287 5568                                             u11911 21FC  
                                           u10880 47B0                                             u10960 13C2  
                                           u11760 116E                                             u11680 0FEE  
                                           u11840 4ADC                                             u11920 2216  
                                           _LATB4 007C54                                             u10881 47AC  
                                           u10961 13BE                                             u11761 116A  
                                           u11681 0FEA                                             u12377 46F2  
                                           u12297 557E                                             u11841 4AD8  
                                           u11921 2212                                             _LATB5 007C55  
                                           u10890 47E2                                             u10970 146C  
                                           u11770 1186                                             u11690 1006  
                                           u11850 4AFE                                             u11930 22CA  
                                           _LATD2 007C62                                             _LATB6 007C56  
                                           u10891 47DE                                             u10971 1466  
                                           u11771 1182                                             u11691 1002  
                                           u12387 4742                                             u11851 4AFA  
                                           u11931 22C6                                             _LATD3 007C63  
                                           _LATB7 007C57                                             u10980 146E  
                                           u11780 1258                                             u11860 4B2A  
                                           u11940 22DA                                             u11781 1254  
                                           u12397 3F3C                                             u11861 4B26  
                                           u11941 22D6                                             u10990 1484  
                                           u11790 1292                                             u11870 54FA  
                                           u11950 236E                                             u10991 1480  
                                           u11791 128E                                             u11871 54F6  
                                           u11951 236A                                             u11880 4600  
                                           u11960 237E                                             u11881 45FC  
                                           u11961 237A                                             u11970 2390  
                                           u11890 21DE                                             u11971 238C  
                                           u11891 21DA                                             u11980 23EA  
                                           u11981 23E6                                             u11990 23FA  
                                           u11991 23F6                                   __end_of___lwdiv 5010  
                                           i2l330 531E                                             i2l322 52CE  
                                           i2l325 52DC                                             i2l286 53BC  
                                           i2l288 53C4                                      main@iniciado 02CC  
                                 ___awdiv@counter 000A                                             _RCREG 000FAE  
                                    vfpfcnvrt@fmt 00C3                                             _TMR1H 000FCF  
                                           _TMR1L 000FCE                                             _SPBRG 000FAF  
                decidirDireccion@posicionInvCruce 01EA                                     __CFG_USBDIV$1 000000  
                                           _TXREG 000FAD                                     __CFG_PWRT$OFF 000000  
                                   __CFG_WRT0$OFF 000000                                     __CFG_WRT1$OFF 000000  
                                   __CFG_WRT2$OFF 000000                               ___lmul@multiplicand 000A  
                                   __CFG_WRT3$OFF 000000                                    __CFG_EBTR0$OFF 000000  
                                  __CFG_FCMEN$OFF 000000                                    __CFG_EBTR1$OFF 000000  
                                  __CFG_EBTR2$OFF 000000                                    __CFG_EBTR3$OFF 000000  
                       hayCruce@investigandoCruce 0042                                     __CFG_WRTB$OFF 000000  
                                   __CFG_WRTC$OFF 000000                                     __CFG_WRTD$OFF 000000  
                                  __CFG_EBTRB$OFF 000000                                __size_of_UART_init 0070  
                                           _flags 0132                                             _boton 0008  
                                           _fputc 485C                                             _fputs 56BA  
                                 __end_of_isdigit 57E6                                             _pausa 01FB  
                                           _mover 4D6A                                             _mouse 0136  
                                     ?_UART_write 0001                                             atoi@n 001A  
                                           pad@fp 0016                                             atoi@s 000D  
                                           _width 012E                                             ctoa@c 0023  
                                           _putch 5980                                             _toint 7D77  
                                           ctoa@w 0024                                             dtoa@d 0023  
                                           dtoa@i 0043                                             dtoa@n 003B  
                                           dtoa@p 0035                                             dtoa@s 0039  
                                           dtoa@w 0037                                 ??_regresarAlCruce 0054  
                                 __end_of_isspace 546C                                   __end_of_isupper 5776  
                                           tablat 000FF5                                   __end_of_pwmDuty 35EA  
probarMapeoDireccionCruces@cambioOrientacionCarro 01F3                                             ttemp5 005B  
                                           ttemp6 005E                                             ttemp7 0062  
                                           status 000FD8                                             wtemp8 005B  
                                 __end_of_sprintf 541A                                    ?___fpclassifyf 0006  
                                 __end_of_tolower 51B4                                   __end_of_strncmp 485C  
                                  __CFG_ICPRT$OFF 000000                                    ??_leerSensores 0050  
                                 __initialization 5320                                  ??_dameLecturaAdc 0008  
                                    __end_of_atoi 392E                                      __end_of_ctoa 52C8  
                                    __end_of_main 4EA0                                      __end_of_dtoa 2FC6  
                                 ??_configurarAdc 0006                               dameDistancia@conteo 0026  
                          dameDistancia@distancia 0022                  limpiarMovimientos@numMovimientos 0008  
                                          ??_atoi 000F                                            ??_ctoa 0024  
                                          ??_main 0055                                            ??_dtoa 002B  
             comportamientoBasico@caminosRecorrer 01D8                                     __activetblptr 000002  
                                          PID@dif 0096                __end_of_probarMapeoDireccionCruces 46A2  
                      _probarMapeoDireccionCruces 45A8                                            _ADCON1 000FC1  
                                          _ADCON2 000FC0                                            ?_boton 0001  
                                          _CCP1M2 007DEA                                            _CCP1M3 007DEB  
                                          _CCP2M2 007DD2                                            _CCP2M3 007DD3  
                                          ?_fputc 0006                                            ?_fputs 000F  
                                          _ADRESH 000FC4                                            _ADRESL 000FC3  
                                          _CCPR1L 000FBE                                            _CCPR2L 000FBB  
                                ___awdiv@dividend 0006                                            ?_mover 0001  
                                          ?_putch 0001                                            _INT0IF 007F91  
                                          i2l7450 52EA                                            i2l7454 52FC  
                                          i2l7448 52CA                                            i2l7650 538A  
                                          i2l7660 53C2                                            i2l7652 539C  
                                          i2l7654 53A0                                            i2l7646 5376  
                                          i2l7656 53A2                                            i2l7648 5384  
                                          i2l7658 53BE                           _mostrarDireccionElegida 4EA0  
                        ??_alinearDespuesCallejon 0054                                            _TMR1IF 007CF0  
                                          _TMR1ON 007E68                                            _TMR2ON 007E52  
                                          _TRISB0 007C98                                            _TRISB1 007C99  
                                          _TRISB2 007C9A                                            _TRISC1 007CA1  
                                          _TRISB3 007C9B                                            _TRISC2 007CA2  
                                          _TRISB4 007C9C                                            _TRISB5 007C9D  
                                          _TRISB6 007C9E                                            _TRISD3 007CAB  
                                          _TRISB7 007C9F                                            _TRISC6 007CA6  
                                          _TRISC7 007CA7                                  __end_of___xxtofl 379E  
                                __end_of_hayCruce 3ABE                                    __CFG_XINST$OFF 000000  
                        __end_of_seLlegoAlDestino 584A                comportamientoBasico@numMovimientos 01DB  
                                    vfprintf@cfmt 00E5                         dameDistancia@numeroSensor 0021  
                                          ___flge 43A6                                            ___fleq 4CC0  
                                          ___lmul 5080                                         ??___aldiv 001A  
                                       ??___aodiv 0016                                         ??___fladd 003C  
                                       ??___aomod 0016                                            ___wmul 5896  
                               __end_of_UART_init 5080                                         ??___fldiv 004C  
                                       ??___awdiv 000A                                         ??___flneg 000A  
              comportamientoBasico@espejearCarroY 0138                                         ??___awmod 000A  
                                       ??___flmul 0023                                         ??___flsub 004C  
                                       ??___fltol 0076                                            _efgtoa 0012  
                                       ??___lwdiv 000A                        moverCarrito@espejearCarroY 008E  
                                          _buffer 0192                               _forzarGiroIzquierda 5900  
                                          _floorf 3218                               __size_of_UART_write 0016  
                                    ?_UART_printf 0007                                            clear_0 5346  
                                          clear_1 5352                                  ___awdiv@quotient 000C  
                                 ___awmod@divisor 0008                                   ___awmod@counter 000A  
                                          pad@buf 0018                                            ctoa@fp 0021  
                                          _roundf 2596                                            dtoa@fp 0021  
                                          _strcpy 5212                       ??_visualizarPasosRealizados 00FD  
                                          _strlen 57E6                                 _oldSensorEnfrente 0118  
                                          fputc@c 0006                                            fputs@c 0013  
                                          fputs@i 0014                                            fputs@s 000F  
                                       ??_isdigit 0008                             _SENSOR_PRIORIDAD_BAJA 01FC  
                           _SENSOR_PRIORIDAD_ALTA 01FE                                   ___fpclassifyf@e 000E  
         mostrarDireccionElegida@direccionElegida 000B                                   ___fpclassifyf@u 0010  
                                 ___fpclassifyf@x 0006                                      __mediumconst 7D76  
                                       ??_isspace 0008                           ?_forzarEspejeoIzquierda 0001  
                                          tblptrh 000FF7                                         ??_isupper 0008  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                          __size_of_forzarEspejeo 0044                                         ??_pwmDuty 007F  
                                          putch@c 0001                                  __end_of_vfprintf 5154  
                                _posicionDestinoX 013D                                  _posicionDestinoY 013C  
                                       ??_sprintf 0054                                         ??_tolower 000E  
                                       ??_strncmp 000C                              ?_forzarGiroIzquierda 0001  
                               _forzarAvanceRecto 58DE                            __size_of_forzarReversa 0022  
                                      ___flge@ff1 0034                                 _velocidadEstandar 584A  
                                      ___flge@ff2 0038                                   ??___fpclassifyf 000A  
                                    ___xxtofl@arg 0017                                      ___xxtofl@exp 0016  
                                    ___xxtofl@val 000D                                        ___fleq@ff1 0006  
                                      ___fleq@ff2 000A                                        __accesstop 0060  
                         __end_of__initialization 5366       probarMapeoDireccionCruces@investigandoCruce 01E9  
                              ?_forzarAvanceRecto 0001                                   __CFG_PBADEN$OFF 000000  
                                      ___flneg@f1 0006                                   __CFG_FOSC$XT_XT 000000  
                              ?_velocidadEstandar 0001           visualizarPasosRealizados@numMovimientos 00FB  
                                   ___rparam_used 000001                     __size_of_forzarEspejeoDerecha 0048  
                                      ___fltol@f1 0072                               ??_forzarAvanceRecto 0006  
                          __size_of_dameDistancia 0162                                    __pcstackCOMRAM 0001  
                             ??_velocidadEstandar 0054                                      __pidataBANK1 597A  
                                 _sensorIzquierda 0124                                     __end_of_boton 53C8  
                                   __end_of_fputc 4926                                     __end_of_fputs 56FE  
                                   __end_of_mover 4E06                                     __end_of_putch 5982  
                                   __end_of_toint 7D7B                                 _forzarGiroDerecha 5920  
                              ?_forzarGiroDerecha 0001                    __end_of_forzarEspejeoIzquierda 55A2  
       comportamientoBasico@movimientosRealizados 0200                              __end_of_leerSensores 3DC2  
                              __size_of_configPwm 0050                         __end_of_forzarAvanceRecto 5900  
                                       PID@difAnt 0134                         __end_of_velocidadEstandar 5870  
                                         ??_boton 0004                         ??_mostrarDireccionElegida 0009  
                           ??_forzarGiroIzquierda 0006                                           ??_fputc 000A  
                                         ??_fputs 0013                               ??_forzarGiroDerecha 0006  
                                         ??_mover 0008                                           ??_putch 0006  
                                      __pbssBANK0 00FF                                        __pbssBANK1 0100  
                                      __pbssBANK2 0200                      moverCarrito@avanceRectoLargo 008A  
                                   _paredEnfrente 013B                     __size_of_comportamientoBasico 03E8  
                       _visualizarPasosRealizados 4C12                   __size_of_alinearDespuesCallejon 00E4  
                               ?_decidirDireccion 01E6                             PID@velocidadIzquierda 008E  
                                      _efgtoa$933 0091                                        _efgtoa$928 008D  
                                      _efgtoa$937 0093                                        _efgtoa$929 008F  
                                      _efgtoa$938 0095                                        _efgtoa$939 0097  
                                   _forzarEspejeo 5676                                ??_decidirDireccion 00FB  
                                         ?___flge 0034                                           ?___fleq 0006  
                                         ?___lmul 0006                                           ?___wmul 0006  
                       __end_of_forzarGiroDerecha 5940                                           ?_efgtoa 007D  
                                   _forzarReversa 58BC                                           _CCP1CON 000FBD  
                                         _CCP2CON 000FBA                                           ?_floorf 0050  
                   limpiarMovimientos@movimientos 0006                                    ___lmul@product 000E  
          decidirDireccion@cambioOrientacionCarro 01F0                                        _antiRebote 52C8  
                                         ?_roundf 004C                                           ?_strcpy 0006  
                                         ?_strlen 0006                                           _T2CKPS0 007E50  
                                         _T2CKPS1 007E51                                   _regresarAlCruce 4AB0  
                                         _PID$742 0090                                           _PID$744 0094  
      probarMapeoDireccionCruces@posicionInvCruce 01EB                                           i2l11404 5310  
                                       ?___xxtofl 000D                        __end_of_limpiarMovimientos 550C  
                                   _dameDistancia 3F26                                __size_of_vfpfcnvrt 05A8  
                                       ?_hayCruce 0040                                      ??_UART_write 0006  
                                   ?_moverCarrito 0088                                   __CFG_VREGEN$OFF 000000  
       comportamientoBasico@contCaminosRecorridos 01E0   probarMapeoDireccionCruces@contCaminosRecorridos 01F1  
                                         __Hparam 0000                                    ?_forzarEspejeo 0001  
                                         __Lparam 0000                                 __end_of_configPwm 54BC  
                 __end_of_mostrarDireccionElegida 4F22                                           ___aldiv 4088  
                                 __size_of___flge 0104                                    ?_forzarReversa 0001  
                                 __size_of___fleq 00AA                                           ___aodiv 3ABE  
                                         ___fladd 18C4                                           ___aomod 3DC2  
                                         ___fldiv 2948                                           ___awdiv 49EC  
                                         ___flneg 5776                                   __size_of___lmul 006A  
                                         ___awmod 4B62                                           ___flmul 1D84  
                                         ___flsub 55EA                                           ___fltol 429E  
                                 __size_of___wmul 0026                                           ___lwdiv 4F9C  
                                       ?_vfprintf 00DF             probarMapeoDireccionCruces@caminoFinal 01E6  
                                 __size_of_efgtoa 0BC6                                   __CFG_STVREN$OFF 000000  
                                 __size_of_floorf 0216                                           __pcinit 5320  
                                         __ramtop 0800                            _alinearDespuesCallejon 46A2  
                              __end_of_UART_write 5970                             __end_of_velocidadBaja 5896  
                                         __ptext0 4E06                                           __ptext1 4C12  
                                         __ptext2 550C                                           __ptext3 5970  
                                         __ptext4 546C                                           __ptext5 21AE  
                                         __ptext6 4AB0                                           __ptext7 4D6A  
                                         __ptext8 2FC6                                           __ptext9 2596  
                                 __size_of_roundf 03B2                                      __size_of_PID 0252  
                                 __size_of_strcpy 005C                                   __size_of_strlen 0036  
                            __size_of_UART_printf 005E                                      __size_of_abs 0040  
                                    __size_of_pad 00C6                                      __size_of_map 007A  
                                         _isdigit 57AE                                        ??___xxtofl 0011  
                                ___awmod@dividend 0006                                    ?_dameDistancia 001B  
                                ___aldiv@dividend 0012                                           _isspace 541A  
                     ?_probarMapeoDireccionCruces 01E6                                           _isupper 573E  
                                         efgtoa@c 0083                                           efgtoa@d 00A1  
                                         efgtoa@e 00B9                                           efgtoa@f 007F  
                                         efgtoa@g 00B5                                           efgtoa@h 00AB  
                                         efgtoa@i 00B3                                           efgtoa@l 00AF  
                                         efgtoa@m 009D                                           efgtoa@n 00BB  
                                         efgtoa@p 00A5                                           efgtoa@t 0099  
                                         efgtoa@u 00BD                                           efgtoa@w 00A8  
                      __size_of_forzarAvanceRecto 0022                                        ??_hayCruce 0043  
                                         _pwmDuty 342E                                           atoi@neg 0013  
                      __size_of_velocidadEstandar 0026                                           _sprintf 53C8  
                                         _tolower 5154                                           _strncmp 4786  
                                  __pintcode_body 5374                              end_of_initialization 5366  
                                  ??_moverCarrito 008C                                           floorf@e 0077  
                                         floorf@m 0073                                           floorf@u 0079  
                                         floorf@x 0050                       decidirDireccion@caminoFinal 01F8  
                decidirDireccion@direccionElegida 0054                                           fputc@fp 0008  
                                   __Lmediumconst 7D76                                           int_func 5374  
                                         fputs@fp 0011                                         i2u1243_47 53AC  
                                       i2u1244_47 52F0                            _SENSOR_PRIORIDAD_MEDIA 01FD  
                               ?_seLlegoAlDestino 0001                                 __end_of_vfpfcnvrt 18C4  
                                      efgtoa@mode 00AA                                        efgtoa@sign 00A3  
                                       _RCSTAbits 000FAB                                  ___aldiv@quotient 001C  
                decidirDireccion@avanceRectoLargo 01F6                                           postdec1 000FE5  
                                         postdec2 000FDD                           __end_of_regresarAlCruce 4B62  
                                         postinc0 000FEE                                           postinc1 000FE6  
                                         postinc2 000FDE                           __size_of_forzarParoAuto 001A  
                                         roundf@e 0064                                           roundf@u 006A  
                                         roundf@x 004C                                           roundf@y 006E  
                      __size_of_forzarGiroDerecha 0020                                ??_seLlegoAlDestino 000B  
                                      ??_vfprintf 0054                             __end_of_configurarAdc 597A  
                                         strcpy@d 000E                                           strlen@a 0008  
                                         strcpy@s 000C                                           strlen@s 0006  
                                     ?_antiRebote 0001                                         _PORTBbits 000F81  
                                       _UART_init 5010                             __size_of_leerSensores 017C  
                                     ___fladd@grs 0043                                       pwmDuty@duty 0084  
                                   ___xxtofl@sign 0015                                         _TRISDbits 000F95  
                                     ___fldiv@grs 0067                                _oldSensorIzquierda 011C  
                                     ___fldiv@rem 0060              comportamientoBasico@posicionInvCruce 01E1  
                                      map@out_max 0030                                        map@out_min 002C  
                                     ___flmul@grs 0029                                    _UART_init$1830 0028  
                                       _TXSTAbits 000FAC                                   ??_forzarEspejeo 0055  
                                 ??_forzarReversa 0006                     regresarAlCruce@numMovimientos 009C  
                                    _leerSensores 3C46                __size_of_visualizarPasosRealizados 00AE  
                                  __end_of___flge 44AA                                    __end_of___fleq 4D6A  
                                  __end_of___lmul 50EA                                       vfpfcnvrt@ap 00C5  
                                     vfpfcnvrt@ct 00DB                                       vfpfcnvrt@fp 00C1  
                                     vfpfcnvrt@ll 00CB                                    __end_of___wmul 58BC  
                                  __end_of_efgtoa 0BD8                                    __end_of_floorf 342E  
                                      ?_UART_init 0020                                        floorf@F524 0104  
                    __end_of_forzarEspejeoDerecha 55EA                                   ??_dameDistancia 001F  
           comportamientoBasico@investigandoCruce 01E2                                    __end_of_roundf 2948  
                         __size_of_dameLecturaAdc 0046                                    __end_of_strcpy 526E  
                                  __end_of_strlen 581C                               start_initialization 5320  
                             PID@velocidadDerecha 0092                                       __end_of_PID 3218  
                                     __end_of_abs 573E                                       __end_of_pad 49EC  
                                     __end_of_map 4F9C                                  regresarAlCruce@i 009E  
                             __size_of_antiRebote 0058                             __end_of___fpclassifyf 45A8  
                             pwmDuty@cicloTrabajo 007C                                       vfprintf@fmt 00E1  
                                        ??___flge 003C                                          ??___fleq 000E  
                                        ??___lmul 000E                                          ??___wmul 000A  
                                ?_regresarAlCruce 009A          probarMapeoDireccionCruces@cruceDetectado 01EF  
                                _oldSensorDerecha 0120                        comportamientoBasico@mapear 01E4  
                                  _sensorEnfrente 0055                                          ??_efgtoa 0084  
                                     __pdataBANK1 01FA                                          ??_floorf 006D  
                                __CFG_LPT1OSC$OFF 000000                      __end_of_comportamientoBasico 2596  
               __end_of_visualizarPasosRealizados 4CC0                              __end_of_moverCarrito 429E  
                                        ??_roundf 0050                                          ??_strcpy 000A  
                                        ??_strlen 0008                                         ___fladd@a 0038  
                                       ___fladd@b 0034                         __size_of_decidirDireccion 0744  
                     __end_of_forzarGiroIzquierda 5920                                         ___fldiv@a 0048  
                                       ___fldiv@b 0044                                      _llegoDestino 00FF  
                                       ___flmul@a 001F                                         ___flmul@b 001B  
                                     __pbssCOMRAM 0055                                         ___flsub@a 0048  
                                       ___flsub@b 0044                  comportamientoBasico@caminoActual 01DF  
                                   __pcstackBANK0 0060                                     __pcstackBANK1 01E6  
                                   __pcstackBANK2 02C8                                  ___aodiv@dividend 0006  
                               __size_of___xxtofl 01B4                           hayCruce@caminosRecorrer 0040  
                               __size_of_hayCruce 0190                   decidirDireccion@caminosRecorrer 01E6  
                                    _paredDerecha 013A                                _limpiarMovimientos 54BC  
                               UART_printf@cadena 0007                                          PID@error 0098  
                                       _atoi$1432 0015                                         _atoi$1433 0019  
                                       _atoi$1434 0017                         _DISTANCIA_PRIORIDAD_MEDIA 0110  
                                ___lwdiv@dividend 0006                                         __pintcode 0008  
                             ?_limpiarMovimientos 0006                                     __pmediumconst 7D76  
                                  _forzarParoAuto 5940                                          ?___aldiv 0012  
                                        ?___aodiv 0006                           ?_alinearDespuesCallejon 0001  
                                        ?___fladd 0034                                          ?___aomod 0006  
                                        ?___fldiv 0044                                          ?___awdiv 0006  
                                ___aodiv@quotient 0018                                          ?___flneg 0006  
                                        ?___awmod 0006                                          ?___flmul 001B  
                                        ?___flsub 0044                                          ?___fltol 0072  
                                        ?___lwdiv 0006                                         _configPwm 546C  
                                  _paredIzquierda 0139                                       ??_UART_init 0024  
                               __size_of_vfprintf 006A                                          ?_isdigit 0006  
                        ?_mostrarDireccionElegida 0001                                          ?_isspace 0006  
                                        ?_isupper 0006        comportamientoBasico@cambioOrientacionCarro 01DE  
                                        ?_pwmDuty 007C                              ??_limpiarMovimientos 000A  
                                ___lwdiv@quotient 000B                                    __size_of_boton 53C0  
                                        ?_sprintf 00E7                                          ?_tolower 000C  
                                  __size_of_fputc 00CA                                    __size_of_fputs 0044  
                                        _PID$1831 008A                                          ?_strncmp 0006  
                                  __size_of_mover 009C             decidirDireccion@contCaminosRecorridos 01EC  
                                  __size_of_putch 0002                                   ___aldiv@divisor 0016  
                                 ___aldiv@counter 001A                                    ___wmul@product 000A  
               decidirDireccion@investigandoCruce 01E8                      seLlegoAlDestino@llegoDestino 000B  
                            _forzarEspejeoDerecha 55A2                            __end_of_forzarParoAuto 595A  
                  __end_of_alinearDespuesCallejon 4786                                          i2u802_40 5384  
                                        i2u802_41 5380                                          i2u803_40 539C  
                                        i2u803_41 5398                                          i2u781_40 52DC  
                                        i2u781_41 52D8                                          i2u782_40 52EA  
                                        i2u782_41 52E6                                  __CFG_WDTPS$32768 000000  
                        ??_forzarEspejeoIzquierda 0054                                     ??_UART_printf 0009  
                                    ??_antiRebote 0001                                         _vfpfcnvrt 131C  
                                      ?_configPwm 0001                                         map@in_max 0028  
                                       map@in_min 0024                            decidirDireccion@mapear 01F2  
                                      _ADCON0bits 000FC2                                 ___wmul@multiplier 0006  
                                configPwm@channel 0008                                    _dameLecturaAdc 5630  
                                  UART_write@dato 0006                         __size_of_seLlegoAlDestino 002E  
                                    _isspace$1463 000C                                        vfpfcnvrt@c 00DE  
                                      vfpfcnvrt@f 00D7                                 ___lmul@multiplier 0006  
                                     _INTCON2bits 000FF1                                         copy_data0 5334  
                            _comportamientoBasico 21AE                                  _caminoEncontrado 0059  
                           ?_forzarEspejeoDerecha 0001                            __size_of_velocidadBaja 0026  
                              __end_of_antiRebote 5320                                        roundf@F525 0100  
                                        __Hrparam 0000                                   ?_forzarParoAuto 0001  
                                   UART_init@BAUD 0020                                     _sensorDerecha 0128  
                                      vfprintf@ap 00E3                                          __Lrparam 0000  
                                      vfprintf@fp 00DF                             __size_of_moverCarrito 010A  
                                  _posicionCarroX 013F                                    _posicionCarroY 013E  
                                __size_of___aldiv 010C                                  __size_of___aodiv 0188  
                                __size_of___fladd 04C0                                  __size_of___aomod 0164  
                                __size_of___fldiv 039C                                  __size_of___awdiv 00C4  
                                __size_of___flneg 0038                                  __size_of___awmod 00B0  
                                __size_of___flmul 042A                                  __size_of___flsub 0046  
                                __size_of___fltol 0108                                        ?_vfpfcnvrt 00C1  
                                __size_of___lwdiv 0074                            __end_of_dameLecturaAdc 5676  
                                 ___aodiv@divisor 000E            probarMapeoDireccionCruces@caminoActual 01E8  
                                 ___aodiv@counter 0016                                ___fpclassifyf@F463 0108  
                             hayCruce@contCaminos 0043                                  _decidirDireccion 0BD8  
                                      sprintf@fmt 00E9                                          ___xxtofl 35EA  
                             __end_of_UART_printf 5212                                  __size_of_isdigit 0038  
                                        _dtoa$905 0033                                   ___lwdiv@divisor 0008  
                                        _hayCruce 392E                                  __size_of_isspace 0052  
                                 ___lwdiv@counter 000A                                          __ptext10 45A8  
                                        __ptext11 4194                                          __ptext20 3C46  
                                        __ptext12 5676                                          __ptext21 3F26  
                                        __ptext13 555A                                          __ptext30 5080  
                                        __ptext22 4F9C                                          __ptext14 5900  
                                        __ptext31 35EA                                          __ptext23 5940  
                                        __ptext15 55A2                                          __ptext40 3218  
                                        __ptext32 53C8                                          __ptext24 58DE  
                                        __ptext16 58BC                                          __ptext41 44AA  
                                        __ptext33 50EA                                          __ptext25 54BC  
                                        __ptext17 5920                                          __ptext50 49EC  
                                        __ptext42 429E                                          __ptext34 131C  
                                        __ptext26 0BD8                                          __ptext18 46A2  
                                        __ptext51 2CE4                                          __ptext43 55EA  
                                        __ptext35 4786                                          __ptext27 5870  
                                        __ptext19 584A                                          __ptext60 5980  
                                        __ptext52 56FE                                          __ptext44 18C4  
                                        __ptext36 0012                                          __ptext28 342E  
                                        __ptext61 379E                                          __ptext53 3DC2  
                                        __ptext45 5776                                          __ptext37 5154  
                                        __ptext29 4F22                                          __ptext70 392E  
                                        __ptext62 541A                                          __ptext54 3ABE  
                                        __ptext46 1D84                                          __ptext38 573E  
                                        __ptext71 43A6                                          __ptext63 57AE  
                                        __ptext55 526E                                          __ptext47 4CC0  
                                        __ptext39 5212                                          __ptext72 5010  
                                        __ptext64 5896                                          __ptext56 4926  
                                        __ptext48 2948                                          __ptext73 4088  
                                        __ptext65 581C                                          __ptext57 57E6  
                                        __ptext49 4B62                                          __ptext66 5630  
                                        __ptext58 56BA                                          __ptext75 52C8  
                                        __ptext67 4EA0                                          __ptext59 485C  
                                        __ptext68 51B4                                          __ptext69 595A  
                                __size_of_isupper 0038                                  __size_of_pwmDuty 01BC  
                probarMapeoDireccionCruces@mapear 01ED           __end_of_inicializarComportamientoBasico 555A  
        __size_of_inicializarComportamientoBasico 004E                 ??_inicializarComportamientoBasico 0054  
                ?_inicializarComportamientoBasico 0001                   _inicializarComportamientoBasico 550C  
                                __size_of_sprintf 0052                                  __size_of_tolower 0060  
                                   antiRebote@pin 0003                                        strcpy@dest 0006  
                                __size_of_strncmp 00D6                             ?_comportamientoBasico 0001  
              comportamientoBasico@cruceDetectado 01E3                                      _moverCarrito 4194  
                          __size_of_configurarAdc 000A                                     __size_of_atoi 0190  
                                   __size_of_ctoa 005A                                     __size_of_main 009A  
                                   __size_of_dtoa 02E2                             __end_of_forzarEspejeo 56BA  
                                        efgtoa@fp 007D                                          efgtoa@ne 009F  
                                        efgtoa@pp 009B                                          efgtoa@ou 0089  
            comportamientoBasico@direccionElegida 00FE                             __end_of_forzarReversa 58DE  
                                        int$flags 005A                           dameLecturaAdc@canalLeer 000A  
                                        _vfprintf 50EA                   __size_of_forzarEspejeoIzquierda 0048  
                                     ??_configPwm 0006                                   ?_dameLecturaAdc 0006  
                                ___aomod@dividend 0006                             __CFG_CPUDIV$OSC1_PLL2 000000  
                                   _velocidadBaja 5870              comportamientoBasico@avanceRectoLargo 01DD  
                    decidirDireccion@caminoActual 01EE                    decidirDireccion@cruceDetectado 01F4  
                                      _INTCONbits 000FF2                             __end_of_dameDistancia 4088  
                             limpiarMovimientos@i 000C                                  _crucesRecorridos 0140  
                                        isdigit@c 0006                                          intlevel2 0000  
                                       sprintf@ap 00F3                            ??_forzarEspejeoDerecha 0054  
                                        isspace@c 0006                                         strcpy@src 0008  
                                        isupper@c 0006                                         strncmp@_l 0006  
                                       strncmp@_r 0008                                       efgtoa@nmode 00A7  
                                 ___aomod@divisor 000E                                       ??_vfpfcnvrt 00C7  
                                 ___aomod@counter 0016                                     _vfpfcnvrt$953 00D3  
                                   _vfpfcnvrt$959 00D5                                       _UART_printf 51B4  
                                   _configurarAdc 5970                                    ?_velocidadBaja 0001  
                      ?_visualizarPasosRealizados 00FB                                    pwmDuty@channel 007E  
                                        sprintf@f 00F5                                          tolower@c 000C  
                                        sprintf@s 00E7                            __size_of___fpclassifyf 00FE  
                        __size_of_regresarAlCruce 00B2                                  _seLlegoAlDestino 581C  
                                        strncmp@l 000D                                          strncmp@n 000A  
                                        strncmp@r 000F                comportamientoBasico@carroEspejeado 01E5  
                                    ___aldiv@sign 001B                        moverCarrito@carroEspejeado 0088  
                    ??_probarMapeoDireccionCruces 00FB                                     ___fladd@signs 0040  
                          ??_comportamientoBasico 02C8                                        _UART_write 595A  
                          _forzarEspejeoIzquierda 555A                      __size_of_forzarGiroIzquierda 0020  
                                    ___aodiv@sign 0017                                      ___fladd@aexp 0041  
                                    ___fladd@bexp 0042                  __size_of_mostrarDireccionElegida 0082  
                      regresarAlCruce@movimientos 009A                                      ___aomod@sign 0017  
                                     _roundf$1832 0066                                       _roundf$1833 0060  
