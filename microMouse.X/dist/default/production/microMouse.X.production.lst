

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Sep 09 00:20:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           ; Version 2.10
    89                           ; Generated 31/07/2019 GMT
    90                           ; 
    91                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F4550 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataBANK1
   124  004884                     __pidataBANK1:
   125                           	opt callstack 0
   126                           
   127                           ;initializer for _pausa
   128  004884  01                 	db	1
   129                           
   130                           ;initializer for _SENSOR_PRIORIDAD_BAJA
   131  004885  03                 	db	3
   132                           
   133                           ;initializer for _SENSOR_PRIORIDAD_MEDIA
   134  004886  02                 	db	2
   135                           
   136                           ;initializer for _SENSOR_PRIORIDAD_ALTA
   137  004887  01                 	db	1
   138                           
   139                           	psect	mediumconst
   140  007EA2                     __pmediumconst:
   141                           	opt callstack 0
   142  007EA2  00                 	db	0
   143  007EA3  0000               	dw	0
   144  007EA5  4B00               	dw	19200
   145  007EA7                     __end_of_toint:
   146                           	opt callstack 0
   147  0000                     _T1CON	set	4045
   148  0000                     _TRISDbits	set	3989
   149  0000                     _INTCON2bits	set	4081
   150  0000                     _INTCONbits	set	4082
   151  0000                     _ADRESL	set	4035
   152  0000                     _ADRESH	set	4036
   153  0000                     _ADCON0bits	set	4034
   154  0000                     _ADCON2	set	4032
   155  0000                     _ADCON1	set	4033
   156  0000                     _TXREG	set	4013
   157  0000                     _RCREG	set	4014
   158  0000                     _RCSTAbits	set	4011
   159  0000                     _TXSTAbits	set	4012
   160  0000                     _SPBRG	set	4015
   161  0000                     _PORTBbits	set	3969
   162  0000                     _TMR1L	set	4046
   163  0000                     _TMR1H	set	4047
   164  0000                     _PR2	set	4043
   165  0000                     _CCP2CON	set	4026
   166  0000                     _CCPR2L	set	4027
   167  0000                     _CCP1CON	set	4029
   168  0000                     _CCPR1L	set	4030
   169  0000                     _TRISB0	set	31896
   170  0000                     _TRISB7	set	31903
   171  0000                     _TRISB6	set	31902
   172  0000                     _TRISB5	set	31901
   173  0000                     _TRISB4	set	31900
   174  0000                     _TRISB3	set	31899
   175  0000                     _TRISB2	set	31898
   176  0000                     _TRISB1	set	31897
   177  0000                     _TRISD3	set	31915
   178  0000                     _LATB7	set	31831
   179  0000                     _LATB6	set	31830
   180  0000                     _LATB5	set	31829
   181  0000                     _LATB4	set	31828
   182  0000                     _LATD2	set	31842
   183  0000                     _INT0IF	set	32657
   184  0000                     _RCIF	set	31989
   185  0000                     _TRISC7	set	31911
   186  0000                     _TRISC6	set	31910
   187  0000                     _TMR1IF	set	31984
   188  0000                     _TMR1ON	set	32360
   189  0000                     _LATD3	set	31843
   190  0000                     _TMR2ON	set	32338
   191  0000                     _CCP2M2	set	32210
   192  0000                     _CCP2M3	set	32211
   193  0000                     _TRISC1	set	31905
   194  0000                     _CCP1M2	set	32234
   195  0000                     _CCP1M3	set	32235
   196  0000                     _TRISC2	set	31906
   197  0000                     _T2CKPS1	set	32337
   198  0000                     _T2CKPS0	set	32336
   199  007EA7  0A                 	db	10
   200  007EA8  0A                 	db	10
   201  007EA9  4F                 	db	79	;'O'
   202  007EAA  56                 	db	86	;'V'
   203  007EAB  45                 	db	69	;'E'
   204  007EAC  52                 	db	82	;'R'
   205  007EAD  46                 	db	70	;'F'
   206  007EAE  4C                 	db	76	;'L'
   207  007EAF  4F                 	db	79	;'O'
   208  007EB0  57                 	db	87	;'W'
   209  007EB1  20                 	db	32
   210  007EB2  65                 	db	101	;'e'
   211  007EB3  6E                 	db	110	;'n'
   212  007EB4  20                 	db	32
   213  007EB5  65                 	db	101	;'e'
   214  007EB6  6C                 	db	108	;'l'
   215  007EB7  20                 	db	32
   216  007EB8  6D                 	db	109	;'m'
   217  007EB9  61                 	db	97	;'a'
   218  007EBA  70                 	db	112	;'p'
   219  007EBB  65                 	db	101	;'e'
   220  007EBC  6F                 	db	111	;'o'
   221  007EBD  20                 	db	32
   222  007EBE  64                 	db	100	;'d'
   223  007EBF  65                 	db	101	;'e'
   224  007EC0  20                 	db	32
   225  007EC1  70                 	db	112	;'p'
   226  007EC2  61                 	db	97	;'a'
   227  007EC3  73                 	db	115	;'s'
   228  007EC4  6F                 	db	111	;'o'
   229  007EC5  73                 	db	115	;'s'
   230  007EC6  20                 	db	32
   231  007EC7  52                 	db	82	;'R'
   232  007EC8  65                 	db	101	;'e'
   233  007EC9  61                 	db	97	;'a'
   234  007ECA  6C                 	db	108	;'l'
   235  007ECB  69                 	db	105	;'i'
   236  007ECC  7A                 	db	122	;'z'
   237  007ECD  61                 	db	97	;'a'
   238  007ECE  64                 	db	100	;'d'
   239  007ECF  6F                 	db	111	;'o'
   240  007ED0  73                 	db	115	;'s'
   241  007ED1  20                 	db	32
   242  007ED2  70                 	db	112	;'p'
   243  007ED3  61                 	db	97	;'a'
   244  007ED4  72                 	db	114	;'r'
   245  007ED5  61                 	db	97	;'a'
   246  007ED6  20                 	db	32
   247  007ED7  63                 	db	99	;'c'
   248  007ED8  61                 	db	97	;'a'
   249  007ED9  6D                 	db	109	;'m'
   250  007EDA  69                 	db	105	;'i'
   251  007EDB  6E                 	db	110	;'n'
   252  007EDC  6F                 	db	111	;'o'
   253  007EDD  20                 	db	32
   254  007EDE  54                 	db	84	;'T'
   255  007EDF  6F                 	db	111	;'o'
   256  007EE0  74                 	db	116	;'t'
   257  007EE1  61                 	db	97	;'a'
   258  007EE2  6C                 	db	108	;'l'
   259  007EE3  0A                 	db	10
   260  007EE4  0A                 	db	10
   261  007EE5  00                 	db	0
   262  007EE6  0A                 	db	10
   263  007EE7  0A                 	db	10
   264  007EE8  4F                 	db	79	;'O'
   265  007EE9  56                 	db	86	;'V'
   266  007EEA  45                 	db	69	;'E'
   267  007EEB  52                 	db	82	;'R'
   268  007EEC  46                 	db	70	;'F'
   269  007EED  4C                 	db	76	;'L'
   270  007EEE  4F                 	db	79	;'O'
   271  007EEF  57                 	db	87	;'W'
   272  007EF0  20                 	db	32
   273  007EF1  65                 	db	101	;'e'
   274  007EF2  6E                 	db	110	;'n'
   275  007EF3  20                 	db	32
   276  007EF4  65                 	db	101	;'e'
   277  007EF5  6C                 	db	108	;'l'
   278  007EF6  20                 	db	32
   279  007EF7  6D                 	db	109	;'m'
   280  007EF8  61                 	db	97	;'a'
   281  007EF9  70                 	db	112	;'p'
   282  007EFA  65                 	db	101	;'e'
   283  007EFB  6F                 	db	111	;'o'
   284  007EFC  20                 	db	32
   285  007EFD  64                 	db	100	;'d'
   286  007EFE  65                 	db	101	;'e'
   287  007EFF  20                 	db	32
   288  007F00  70                 	db	112	;'p'
   289  007F01  61                 	db	97	;'a'
   290  007F02  73                 	db	115	;'s'
   291  007F03  6F                 	db	111	;'o'
   292  007F04  73                 	db	115	;'s'
   293  007F05  20                 	db	32
   294  007F06  52                 	db	82	;'R'
   295  007F07  65                 	db	101	;'e'
   296  007F08  61                 	db	97	;'a'
   297  007F09  6C                 	db	108	;'l'
   298  007F0A  69                 	db	105	;'i'
   299  007F0B  7A                 	db	122	;'z'
   300  007F0C  61                 	db	97	;'a'
   301  007F0D  64                 	db	100	;'d'
   302  007F0E  6F                 	db	111	;'o'
   303  007F0F  73                 	db	115	;'s'
   304  007F10  20                 	db	32
   305  007F11  70                 	db	112	;'p'
   306  007F12  61                 	db	97	;'a'
   307  007F13  72                 	db	114	;'r'
   308  007F14  61                 	db	97	;'a'
   309  007F15  20                 	db	32
   310  007F16  63                 	db	99	;'c'
   311  007F17  72                 	db	114	;'r'
   312  007F18  75                 	db	117	;'u'
   313  007F19  63                 	db	99	;'c'
   314  007F1A  65                 	db	101	;'e'
   315  007F1B  0A                 	db	10
   316  007F1C  0A                 	db	10
   317  007F1D  00                 	db	0
   318  007F1E  0D                 	db	13
   319  007F1F  4C                 	db	76	;'L'
   320  007F20  65                 	db	101	;'e'
   321  007F21  63                 	db	99	;'c'
   322  007F22  74                 	db	116	;'t'
   323  007F23  75                 	db	117	;'u'
   324  007F24  72                 	db	114	;'r'
   325  007F25  61                 	db	97	;'a'
   326  007F26  20                 	db	32
   327  007F27  64                 	db	100	;'d'
   328  007F28  65                 	db	101	;'e'
   329  007F29  20                 	db	32
   330  007F2A  73                 	db	115	;'s'
   331  007F2B  65                 	db	101	;'e'
   332  007F2C  6E                 	db	110	;'n'
   333  007F2D  73                 	db	115	;'s'
   334  007F2E  6F                 	db	111	;'o'
   335  007F2F  72                 	db	114	;'r'
   336  007F30  20                 	db	32
   337  007F31  4F                 	db	79	;'O'
   338  007F32  70                 	db	112	;'p'
   339  007F33  74                 	db	116	;'t'
   340  007F34  69                 	db	105	;'i'
   341  007F35  63                 	db	99	;'c'
   342  007F36  6F                 	db	111	;'o'
   343  007F37  20                 	db	32
   344  007F38  3D                 	db	61	;'='
   345  007F39  20                 	db	32
   346  007F3A  25                 	db	37
   347  007F3B  64                 	db	100	;'d'
   348  007F3C  0D                 	db	13
   349  007F3D  0A                 	db	10
   350  007F3E  0A                 	db	10
   351  007F3F  00                 	db	0
   352  007F40                     STR_11:
   353  007F40  0D                 	db	13
   354  007F41  4D                 	db	77	;'M'
   355  007F42  6F                 	db	111	;'o'
   356  007F43  76                 	db	118	;'v'
   357  007F44  69                 	db	105	;'i'
   358  007F45  6D                 	db	109	;'m'
   359  007F46  69                 	db	105	;'i'
   360  007F47  65                 	db	101	;'e'
   361  007F48  6E                 	db	110	;'n'
   362  007F49  74                 	db	116	;'t'
   363  007F4A  6F                 	db	111	;'o'
   364  007F4B  73                 	db	115	;'s'
   365  007F4C  20                 	db	32
   366  007F4D  52                 	db	82	;'R'
   367  007F4E  65                 	db	101	;'e'
   368  007F4F  61                 	db	97	;'a'
   369  007F50  6C                 	db	108	;'l'
   370  007F51  69                 	db	105	;'i'
   371  007F52  7A                 	db	122	;'z'
   372  007F53  61                 	db	97	;'a'
   373  007F54  64                 	db	100	;'d'
   374  007F55  6F                 	db	111	;'o'
   375  007F56  73                 	db	115	;'s'
   376  007F57  20                 	db	32
   377  007F58  3D                 	db	61	;'='
   378  007F59  20                 	db	32
   379  007F5A  25                 	db	37
   380  007F5B  64                 	db	100	;'d'
   381  007F5C  0D                 	db	13
   382  007F5D  0A                 	db	10
   383  007F5E  0A                 	db	10
   384  007F5F  00                 	db	0
   385  007F60  0D                 	db	13
   386  007F61  44                 	db	68	;'D'
   387  007F62  65                 	db	101	;'e'
   388  007F63  73                 	db	115	;'s'
   389  007F64  74                 	db	116	;'t'
   390  007F65  69                 	db	105	;'i'
   391  007F66  6E                 	db	110	;'n'
   392  007F67  6F                 	db	111	;'o'
   393  007F68  20                 	db	32
   394  007F69  6E                 	db	110	;'n'
   395  007F6A  6F                 	db	111	;'o'
   396  007F6B  20                 	db	32
   397  007F6C  64                 	db	100	;'d'
   398  007F6D  65                 	db	101	;'e'
   399  007F6E  74                 	db	116	;'t'
   400  007F6F  65                 	db	101	;'e'
   401  007F70  63                 	db	99	;'c'
   402  007F71  74                 	db	116	;'t'
   403  007F72  61                 	db	97	;'a'
   404  007F73  64                 	db	100	;'d'
   405  007F74  6F                 	db	111	;'o'
   406  007F75  20                 	db	32
   407  007F76  0D                 	db	13
   408  007F77  0A                 	db	10
   409  007F78  00                 	db	0
   410  007F79  0D                 	db	13
   411  007F7A  53                 	db	83	;'S'
   412  007F7B  65                 	db	101	;'e'
   413  007F7C  20                 	db	32
   414  007F7D  6C                 	db	108	;'l'
   415  007F7E  6C                 	db	108	;'l'
   416  007F7F  65                 	db	101	;'e'
   417  007F80  67                 	db	103	;'g'
   418  007F81  6F                 	db	111	;'o'
   419  007F82  20                 	db	32
   420  007F83  61                 	db	97	;'a'
   421  007F84  6C                 	db	108	;'l'
   422  007F85  20                 	db	32
   423  007F86  64                 	db	100	;'d'
   424  007F87  65                 	db	101	;'e'
   425  007F88  73                 	db	115	;'s'
   426  007F89  74                 	db	116	;'t'
   427  007F8A  69                 	db	105	;'i'
   428  007F8B  6E                 	db	110	;'n'
   429  007F8C  6F                 	db	111	;'o'
   430  007F8D  20                 	db	32
   431  007F8E  0D                 	db	13
   432  007F8F  0A                 	db	10
   433  007F90  00                 	db	0
   434  007F91  0D                 	db	13
   435  007F92  49                 	db	73	;'I'
   436  007F93  7A                 	db	122	;'z'
   437  007F94  71                 	db	113	;'q'
   438  007F95  75                 	db	117	;'u'
   439  007F96  69                 	db	105	;'i'
   440  007F97  65                 	db	101	;'e'
   441  007F98  72                 	db	114	;'r'
   442  007F99  64                 	db	100	;'d'
   443  007F9A  61                 	db	97	;'a'
   444  007F9B  3A                 	db	58	;':'
   445  007F9C  20                 	db	32
   446  007F9D  25                 	db	37
   447  007F9E  2E                 	db	46
   448  007F9F  32                 	db	50	;'2'
   449  007FA0  66                 	db	102	;'f'
   450  007FA1  0D                 	db	13
   451  007FA2  0A                 	db	10
   452  007FA3  00                 	db	0
   453  007FA4  0D                 	db	13
   454  007FA5  45                 	db	69	;'E'
   455  007FA6  6E                 	db	110	;'n'
   456  007FA7  66                 	db	102	;'f'
   457  007FA8  72                 	db	114	;'r'
   458  007FA9  65                 	db	101	;'e'
   459  007FAA  6E                 	db	110	;'n'
   460  007FAB  74                 	db	116	;'t'
   461  007FAC  65                 	db	101	;'e'
   462  007FAD  3A                 	db	58	;':'
   463  007FAE  20                 	db	32
   464  007FAF  25                 	db	37
   465  007FB0  2E                 	db	46
   466  007FB1  32                 	db	50	;'2'
   467  007FB2  66                 	db	102	;'f'
   468  007FB3  0D                 	db	13
   469  007FB4  0A                 	db	10
   470  007FB5  00                 	db	0
   471  007FB6  0D                 	db	13
   472  007FB7  44                 	db	68	;'D'
   473  007FB8  65                 	db	101	;'e'
   474  007FB9  72                 	db	114	;'r'
   475  007FBA  65                 	db	101	;'e'
   476  007FBB  63                 	db	99	;'c'
   477  007FBC  68                 	db	104	;'h'
   478  007FBD  61                 	db	97	;'a'
   479  007FBE  3A                 	db	58	;':'
   480  007FBF  20                 	db	32
   481  007FC0  25                 	db	37
   482  007FC1  2E                 	db	46
   483  007FC2  32                 	db	50	;'2'
   484  007FC3  66                 	db	102	;'f'
   485  007FC4  0D                 	db	13
   486  007FC5  0A                 	db	10
   487  007FC6  00                 	db	0
   488  007FC7                     STR_8:
   489  007FC7  49                 	db	73	;'I'
   490  007FC8  7A                 	db	122	;'z'
   491  007FC9  71                 	db	113	;'q'
   492  007FCA  75                 	db	117	;'u'
   493  007FCB  69                 	db	105	;'i'
   494  007FCC  65                 	db	101	;'e'
   495  007FCD  72                 	db	114	;'r'
   496  007FCE  64                 	db	100	;'d'
   497  007FCF  61                 	db	97	;'a'
   498  007FD0  0A                 	db	10
   499  007FD1  00                 	db	0
   500  007FD2                     STR_7:
   501  007FD2  45                 	db	69	;'E'
   502  007FD3  6E                 	db	110	;'n'
   503  007FD4  66                 	db	102	;'f'
   504  007FD5  72                 	db	114	;'r'
   505  007FD6  65                 	db	101	;'e'
   506  007FD7  6E                 	db	110	;'n'
   507  007FD8  74                 	db	116	;'t'
   508  007FD9  65                 	db	101	;'e'
   509  007FDA  0A                 	db	10
   510  007FDB  00                 	db	0
   511  007FDC                     STR_9:
   512  007FDC  44                 	db	68	;'D'
   513  007FDD  65                 	db	101	;'e'
   514  007FDE  72                 	db	114	;'r'
   515  007FDF  65                 	db	101	;'e'
   516  007FE0  63                 	db	99	;'c'
   517  007FE1  68                 	db	104	;'h'
   518  007FE2  61                 	db	97	;'a'
   519  007FE3  0A                 	db	10
   520  007FE4  00                 	db	0
   521  007FE5                     STR_10:
   522  007FE5  41                 	db	65	;'A'
   523  007FE6  6C                 	db	108	;'l'
   524  007FE7  74                 	db	116	;'t'
   525  007FE8  6F                 	db	111	;'o'
   526  007FE9  0A                 	db	10
   527  007FEA  00                 	db	0
   528  007FEB                     STR_14:
   529  007FEB  49                 	db	73	;'I'
   530  007FEC  4E                 	db	78	;'N'
   531  007FED  46                 	db	70	;'F'
   532  007FEE  00                 	db	0
   533  007FEF                     STR_18:
   534  007FEF  4E                 	db	78	;'N'
   535  007FF0  41                 	db	65	;'A'
   536  007FF1  4E                 	db	78	;'N'
   537  007FF2  00                 	db	0
   538  007FF3                     STR_15:
   539  007FF3  69                 	db	105	;'i'
   540  007FF4  6E                 	db	110	;'n'
   541  007FF5  66                 	db	102	;'f'
   542  007FF6  00                 	db	0
   543  007FF7                     STR_19:
   544  007FF7  6E                 	db	110	;'n'
   545  007FF8  61                 	db	97	;'a'
   546  007FF9  6E                 	db	110	;'n'
   547  007FFA  00                 	db	0
   548  007FFB                     STR_22:
   549  007FFB  6C                 	db	108	;'l'
   550  007FFC  66                 	db	102	;'f'
   551  007FFD  00                 	db	0
   552  0000                     
   553                           ; #config settings
   554  007FFE  00                 	db	0	; dummy byte at the end
   555  0000                     
   556                           	psect	cinit
   557  00407A                     __pcinit:
   558                           	opt callstack 0
   559  00407A                     start_initialization:
   560                           	opt callstack 0
   561  00407A                     __initialization:
   562                           	opt callstack 0
   563                           
   564                           ; Initialize objects allocated to BANK1 (4 bytes)
   565                           ; load TBLPTR registers with __pidataBANK1
   566  00407A  0E84               	movlw	low __pidataBANK1
   567  00407C  6EF6               	movwf	tblptrl,c
   568  00407E  0E48               	movlw	high __pidataBANK1
   569  004080  6EF7               	movwf	tblptrh,c
   570  004082  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   571  004084  6EF8               	movwf	tblptru,c
   572  004086  EE01  F0D0         	lfsr	0,__pdataBANK1
   573  00408A  EE10 F004          	lfsr	1,4
   574  00408E                     copy_data0:
   575  00408E  0009               	tblrd		*+
   576  004090  CFF5 FFEE          	movff	tablat,postinc0
   577  004094  50E5               	movf	postdec1,w,c
   578  004096  50E1               	movf	fsr1l,w,c
   579  004098  E1FA               	bnz	copy_data0
   580                           
   581                           ; Clear objects allocated to BIGRAM (1000 bytes)
   582  00409A  EE02  F0C8         	lfsr	0,__pbssBIGRAM
   583  00409E  EE13 F0E8          	lfsr	1,1000
   584  0040A2                     clear_0:
   585  0040A2  6AEE               	clrf	postinc0,c
   586  0040A4  50E5               	movf	postdec1,w,c
   587  0040A6  50E1               	movf	fsr1l,w,c
   588  0040A8  E1FC               	bnz	clear_0
   589  0040AA  50E2               	movf	fsr1h,w,c
   590  0040AC  E1FA               	bnz	clear_0
   591                           
   592                           ; Clear objects allocated to BANK2 (200 bytes)
   593  0040AE  EE02  F000         	lfsr	0,__pbssBANK2
   594  0040B2  0EC8               	movlw	200
   595  0040B4                     clear_1:
   596  0040B4  6AEE               	clrf	postinc0,c
   597  0040B6  06E8               	decf	wreg,f,c
   598  0040B8  E1FD               	bnz	clear_1
   599                           
   600                           ; Clear objects allocated to BANK1 (201 bytes)
   601  0040BA  EE01  F000         	lfsr	0,__pbssBANK1
   602  0040BE  0EC9               	movlw	201
   603  0040C0                     clear_2:
   604  0040C0  6AEE               	clrf	postinc0,c
   605  0040C2  06E8               	decf	wreg,f,c
   606  0040C4  E1FD               	bnz	clear_2
   607                           
   608                           ; Clear objects allocated to BANK0 (6 bytes)
   609  0040C6  0100               	movlb	0
   610  0040C8  6BFE               	clrf	(__pbssBANK0+5)& (0+255),b
   611  0040CA  6BFD               	clrf	(__pbssBANK0+4)& (0+255),b
   612  0040CC  6BFC               	clrf	(__pbssBANK0+3)& (0+255),b
   613  0040CE  6BFB               	clrf	(__pbssBANK0+2)& (0+255),b
   614  0040D0  6BFA               	clrf	(__pbssBANK0+1)& (0+255),b
   615  0040D2  6BF9               	clrf	__pbssBANK0& (0+255),b
   616                           
   617                           ; Clear objects allocated to COMRAM (5 bytes)
   618  0040D4  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   619  0040D6  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   620  0040D8  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   621  0040DA  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   622  0040DC  6A55               	clrf	__pbssCOMRAM& (0+255),c
   623  0040DE                     end_of_initialization:
   624                           	opt callstack 0
   625  0040DE                     __end_of__initialization:
   626                           	opt callstack 0
   627  0040DE  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   628  0040E0  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   629  0040E2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   630  0040E4  6EF8               	movwf	tblptru,c
   631  0040E6  0100               	movlb	0
   632  0040E8  EF7B  F01F         	goto	_main	;jump to C main() function
   633                           
   634                           	psect	bssCOMRAM
   635  000055                     __pbssCOMRAM:
   636                           	opt callstack 0
   637  000055                     _sensorIzquierda:
   638                           	opt callstack 0
   639  000055                     	ds	4
   640  000059                     _llegoDestino:
   641                           	opt callstack 0
   642  000059                     	ds	1
   643                           
   644                           	psect	bssBANK0
   645  0000F9                     __pbssBANK0:
   646                           	opt callstack 0
   647  0000F9                     _sensorDerecha:
   648                           	opt callstack 0
   649  0000F9                     	ds	4
   650  0000FD                     _mouse:
   651                           	opt callstack 0
   652  0000FD                     	ds	2
   653                           
   654                           	psect	bssBANK1
   655  000100                     __pbssBANK1:
   656                           	opt callstack 0
   657  000100                     roundf@F525:
   658                           	opt callstack 0
   659  000100                     	ds	4
   660  000104                     floorf@F524:
   661                           	opt callstack 0
   662  000104                     	ds	4
   663  000108                     ___fpclassifyf@F463:
   664                           	opt callstack 0
   665  000108                     	ds	4
   666  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   667                           	opt callstack 0
   668  00010C                     	ds	4
   669  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   670                           	opt callstack 0
   671  000110                     	ds	4
   672  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   673                           	opt callstack 0
   674  000114                     	ds	4
   675  000118                     _oldSensorEnfrente:
   676                           	opt callstack 0
   677  000118                     	ds	4
   678  00011C                     _oldSensorIzquierda:
   679                           	opt callstack 0
   680  00011C                     	ds	4
   681  000120                     _oldSensorDerecha:
   682                           	opt callstack 0
   683  000120                     	ds	4
   684  000124                     _sensorEnfrente:
   685                           	opt callstack 0
   686  000124                     	ds	4
   687  000128                     _nout:
   688                           	opt callstack 0
   689  000128                     	ds	2
   690  00012A                     _width:
   691                           	opt callstack 0
   692  00012A                     	ds	2
   693  00012C                     _prec:
   694                           	opt callstack 0
   695  00012C                     	ds	2
   696  00012E                     _flags:
   697                           	opt callstack 0
   698  00012E                     	ds	2
   699  000130                     PID@difAnt:
   700                           	opt callstack 0
   701  000130                     	ds	2
   702  000132                     comportamientoBasico@caminoEncontrado:
   703                           	opt callstack 0
   704  000132                     	ds	1
   705  000133                     comportamientoBasico@cruceDetectado:
   706                           	opt callstack 0
   707  000133                     	ds	1
   708  000134                     comportamientoBasico@mapear:
   709                           	opt callstack 0
   710  000134                     	ds	1
   711  000135                     comportamientoBasico@espejearCarroY:
   712                           	opt callstack 0
   713  000135                     	ds	1
   714  000136                     _posicionDestinoY:
   715                           	opt callstack 0
   716  000136                     	ds	1
   717  000137                     _posicionDestinoX:
   718                           	opt callstack 0
   719  000137                     	ds	1
   720  000138                     _posicionCarroY:
   721                           	opt callstack 0
   722  000138                     	ds	1
   723  000139                     _posicionCarroX:
   724                           	opt callstack 0
   725  000139                     	ds	1
   726  00013A                     _dbuf:
   727                           	opt callstack 0
   728  00013A                     	ds	80
   729  00018A                     _buffer:
   730                           	opt callstack 0
   731  00018A                     	ds	50
   732  0001BC                     comportamientoBasico@caminosRecorrer:
   733                           	opt callstack 0
   734  0001BC                     	ds	3
   735  0001BF                     comportamientoBasico@numMovimientosTotales:
   736                           	opt callstack 0
   737  0001BF                     	ds	2
   738  0001C1                     comportamientoBasico@numMovimientos:
   739                           	opt callstack 0
   740  0001C1                     	ds	2
   741  0001C3                     comportamientoBasico@cambioOrientacionCarro:
   742                           	opt callstack 0
   743  0001C3                     	ds	1
   744  0001C4                     comportamientoBasico@caminoActual:
   745                           	opt callstack 0
   746  0001C4                     	ds	1
   747  0001C5                     comportamientoBasico@contCaminosRecorridos:
   748                           	opt callstack 0
   749  0001C5                     	ds	1
   750  0001C6                     comportamientoBasico@posicionInvCruce:
   751                           	opt callstack 0
   752  0001C6                     	ds	1
   753  0001C7                     comportamientoBasico@investigandoCruce:
   754                           	opt callstack 0
   755  0001C7                     	ds	1
   756  0001C8                     comportamientoBasico@carroEspejeado:
   757                           	opt callstack 0
   758  0001C8                     	ds	1
   759                           
   760                           	psect	dataBANK1
   761  0001D0                     __pdataBANK1:
   762                           	opt callstack 0
   763  0001D0                     _pausa:
   764                           	opt callstack 0
   765  0001D0                     	ds	1
   766  0001D1                     _SENSOR_PRIORIDAD_BAJA:
   767                           	opt callstack 0
   768  0001D1                     	ds	1
   769  0001D2                     _SENSOR_PRIORIDAD_MEDIA:
   770                           	opt callstack 0
   771  0001D2                     	ds	1
   772  0001D3                     _SENSOR_PRIORIDAD_ALTA:
   773                           	opt callstack 0
   774  0001D3                     	ds	1
   775                           
   776                           	psect	bssBANK2
   777  000200                     __pbssBANK2:
   778                           	opt callstack 0
   779  000200                     comportamientoBasico@movimientosRealizados:
   780                           	opt callstack 0
   781  000200                     	ds	200
   782                           
   783                           	psect	bssBIGRAM
   784  0002C8                     __pbssBIGRAM:
   785                           	opt callstack 0
   786  0002C8                     comportamientoBasico@caminoFinal:
   787                           	opt callstack 0
   788  0002C8                     	ds	1000
   789                           
   790                           	psect	cstackBANK1
   791  0001C9                     __pcstackBANK1:
   792                           	opt callstack 0
   793  0001C9                     visualizarPasosRealizados@numMovimientos:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0x0
   797  0001C9                     	ds	2
   798  0001CB                     ??_visualizarPasosRealizados:
   799                           
   800                           ; 1 bytes @ 0x2
   801  0001CB                     	ds	4
   802  0001CF                     main@iniciado:
   803                           	opt callstack 0
   804                           
   805                           ; 1 bytes @ 0x6
   806  0001CF                     	ds	1
   807                           
   808                           	psect	cstackBANK0
   809  000060                     __pcstackBANK0:
   810                           	opt callstack 0
   811  000060                     ___fldiv@rem:
   812                           	opt callstack 0
   813  000060                     _roundf$1819:
   814                           	opt callstack 0
   815                           
   816                           ; 4 bytes @ 0x0
   817  000060                     	ds	4
   818  000064                     ___fldiv@sign:
   819                           	opt callstack 0
   820  000064                     roundf@e:
   821                           	opt callstack 0
   822                           
   823                           ; 2 bytes @ 0x4
   824  000064                     	ds	1
   825  000065                     ___fldiv@new_exp:
   826                           	opt callstack 0
   827                           
   828                           ; 2 bytes @ 0x5
   829  000065                     	ds	1
   830  000066                     _roundf$1818:
   831                           	opt callstack 0
   832                           
   833                           ; 4 bytes @ 0x6
   834  000066                     	ds	1
   835  000067                     ___fldiv@grs:
   836                           	opt callstack 0
   837                           
   838                           ; 4 bytes @ 0x7
   839  000067                     	ds	3
   840  00006A                     roundf@u:
   841                           	opt callstack 0
   842                           
   843                           ; 4 bytes @ 0xA
   844  00006A                     	ds	1
   845  00006B                     ___fldiv@bexp:
   846                           	opt callstack 0
   847                           
   848                           ; 1 bytes @ 0xB
   849  00006B                     	ds	1
   850  00006C                     ___fldiv@aexp:
   851                           	opt callstack 0
   852                           
   853                           ; 1 bytes @ 0xC
   854  00006C                     	ds	1
   855  00006D                     ??_floorf:
   856                           
   857                           ; 1 bytes @ 0xD
   858  00006D                     	ds	1
   859  00006E                     roundf@y:
   860                           	opt callstack 0
   861                           
   862                           ; 4 bytes @ 0xE
   863  00006E                     	ds	4
   864  000072                     ?___fltol:
   865                           	opt callstack 0
   866  000072                     ___fltol@f1:
   867                           	opt callstack 0
   868                           
   869                           ; 4 bytes @ 0x12
   870  000072                     	ds	1
   871  000073                     floorf@m:
   872                           	opt callstack 0
   873                           
   874                           ; 4 bytes @ 0x13
   875  000073                     	ds	3
   876  000076                     ??___fltol:
   877                           
   878                           ; 1 bytes @ 0x16
   879  000076                     	ds	1
   880  000077                     floorf@e:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x17
   884  000077                     	ds	2
   885  000079                     floorf@u:
   886                           	opt callstack 0
   887                           
   888                           ; 4 bytes @ 0x19
   889  000079                     	ds	1
   890  00007A                     ___fltol@sign1:
   891                           	opt callstack 0
   892                           
   893                           ; 1 bytes @ 0x1A
   894  00007A                     	ds	1
   895  00007B                     ___fltol@exp1:
   896                           	opt callstack 0
   897                           
   898                           ; 1 bytes @ 0x1B
   899  00007B                     	ds	1
   900  00007C                     pwmDuty@cicloTrabajo:
   901                           	opt callstack 0
   902                           
   903                           ; 2 bytes @ 0x1C
   904  00007C                     	ds	1
   905  00007D                     ?_efgtoa:
   906                           	opt callstack 0
   907  00007D                     efgtoa@fp:
   908                           	opt callstack 0
   909                           
   910                           ; 2 bytes @ 0x1D
   911  00007D                     	ds	1
   912  00007E                     pwmDuty@channel:
   913                           	opt callstack 0
   914                           
   915                           ; 1 bytes @ 0x1E
   916  00007E                     	ds	1
   917  00007F                     ??_pwmDuty:
   918  00007F                     efgtoa@f:
   919                           	opt callstack 0
   920                           
   921                           ; 4 bytes @ 0x1F
   922  00007F                     	ds	4
   923  000083                     efgtoa@c:
   924                           	opt callstack 0
   925                           
   926                           ; 1 bytes @ 0x23
   927  000083                     	ds	1
   928  000084                     ??_efgtoa:
   929  000084                     pwmDuty@duty:
   930                           	opt callstack 0
   931                           
   932                           ; 4 bytes @ 0x24
   933  000084                     	ds	4
   934  000088                     ??_PID:
   935                           
   936                           ; 1 bytes @ 0x28
   937  000088                     	ds	1
   938  000089                     efgtoa@ou:
   939                           	opt callstack 0
   940                           
   941                           ; 4 bytes @ 0x29
   942  000089                     	ds	1
   943  00008A                     _PID$1817:
   944                           	opt callstack 0
   945                           
   946                           ; 4 bytes @ 0x2A
   947  00008A                     	ds	3
   948  00008D                     _efgtoa$921:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0x2D
   952  00008D                     	ds	1
   953  00008E                     PID@velocidadIzquierda:
   954                           	opt callstack 0
   955                           
   956                           ; 2 bytes @ 0x2E
   957  00008E                     	ds	1
   958  00008F                     _efgtoa$922:
   959                           	opt callstack 0
   960                           
   961                           ; 2 bytes @ 0x2F
   962  00008F                     	ds	1
   963  000090                     _PID$747:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0x30
   967  000090                     	ds	1
   968  000091                     _efgtoa$926:
   969                           	opt callstack 0
   970                           
   971                           ; 2 bytes @ 0x31
   972  000091                     	ds	1
   973  000092                     PID@velocidadDerecha:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0x32
   977  000092                     	ds	1
   978  000093                     _efgtoa$930:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x33
   982  000093                     	ds	1
   983  000094                     _PID$749:
   984                           	opt callstack 0
   985                           
   986                           ; 2 bytes @ 0x34
   987  000094                     	ds	1
   988  000095                     _efgtoa$931:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x35
   992  000095                     	ds	1
   993  000096                     PID@dif:
   994                           	opt callstack 0
   995                           
   996                           ; 2 bytes @ 0x36
   997  000096                     	ds	1
   998  000097                     _efgtoa$932:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x37
  1002  000097                     	ds	1
  1003  000098                     PID@error:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x38
  1007  000098                     	ds	1
  1008  000099                     efgtoa@t:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x39
  1012  000099                     	ds	2
  1013  00009B                     efgtoa@pp:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x3B
  1017  00009B                     	ds	2
  1018  00009D                     efgtoa@m:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x3D
  1022  00009D                     	ds	2
  1023  00009F                     efgtoa@ne:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x3F
  1027  00009F                     	ds	2
  1028  0000A1                     efgtoa@d:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x41
  1032  0000A1                     	ds	2
  1033  0000A3                     efgtoa@sign:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x43
  1037  0000A3                     	ds	2
  1038  0000A5                     efgtoa@p:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x45
  1042  0000A5                     	ds	2
  1043  0000A7                     efgtoa@nmode:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x47
  1047  0000A7                     	ds	1
  1048  0000A8                     efgtoa@w:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x48
  1052  0000A8                     	ds	2
  1053  0000AA                     efgtoa@mode:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 1 bytes @ 0x4A
  1057  0000AA                     	ds	1
  1058  0000AB                     efgtoa@h:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x4B
  1062  0000AB                     	ds	4
  1063  0000AF                     efgtoa@l:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 4 bytes @ 0x4F
  1067  0000AF                     	ds	4
  1068  0000B3                     efgtoa@i:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x53
  1072  0000B3                     	ds	2
  1073  0000B5                     efgtoa@g:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 4 bytes @ 0x55
  1077  0000B5                     	ds	4
  1078  0000B9                     efgtoa@e:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x59
  1082  0000B9                     	ds	2
  1083  0000BB                     efgtoa@n:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x5B
  1087  0000BB                     	ds	2
  1088  0000BD                     efgtoa@u:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x5D
  1092  0000BD                     	ds	4
  1093  0000C1                     ?_vfpfcnvrt:
  1094                           	opt callstack 0
  1095  0000C1                     vfpfcnvrt@fp:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x61
  1099  0000C1                     	ds	2
  1100  0000C3                     vfpfcnvrt@fmt:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x63
  1104  0000C3                     	ds	2
  1105  0000C5                     vfpfcnvrt@ap:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x65
  1109  0000C5                     	ds	2
  1110  0000C7                     ??_vfpfcnvrt:
  1111                           
  1112                           ; 1 bytes @ 0x67
  1113  0000C7                     	ds	4
  1114  0000CB                     vfpfcnvrt@ll:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 8 bytes @ 0x6B
  1118  0000CB                     	ds	8
  1119  0000D3                     _vfpfcnvrt$946:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x73
  1123  0000D3                     	ds	2
  1124  0000D5                     _vfpfcnvrt$951:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x75
  1128  0000D5                     	ds	2
  1129  0000D7                     vfpfcnvrt@f:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x77
  1133  0000D7                     	ds	4
  1134  0000DB                     vfpfcnvrt@ct:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 3 bytes @ 0x7B
  1138  0000DB                     	ds	3
  1139  0000DE                     vfpfcnvrt@c:
  1140                           	opt callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x7E
  1143  0000DE                     	ds	1
  1144  0000DF                     ?_vfprintf:
  1145                           	opt callstack 0
  1146  0000DF                     vfprintf@fp:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x7F
  1150  0000DF                     	ds	2
  1151  0000E1                     vfprintf@fmt:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x81
  1155  0000E1                     	ds	2
  1156  0000E3                     vfprintf@ap:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x83
  1160  0000E3                     	ds	2
  1161  0000E5                     vfprintf@cfmt:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x85
  1165  0000E5                     	ds	2
  1166  0000E7                     ?_sprintf:
  1167                           	opt callstack 0
  1168  0000E7                     sprintf@s:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x87
  1172  0000E7                     	ds	2
  1173  0000E9                     sprintf@fmt:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x89
  1177  0000E9                     	ds	8
  1178  0000F1                     sprintf@ap:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x91
  1182  0000F1                     	ds	2
  1183  0000F3                     sprintf@f:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 6 bytes @ 0x93
  1187  0000F3                     	ds	6
  1188                           
  1189                           	psect	cstackCOMRAM
  1190  000001                     __pcstackCOMRAM:
  1191                           	opt callstack 0
  1192  000001                     ??_antiRebote:
  1193  000001                     
  1194                           ; 1 bytes @ 0x0
  1195  000001                     	ds	2
  1196  000003                     antiRebote@pin:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x2
  1200  000003                     	ds	1
  1201  000004                     ??_boton:
  1202                           
  1203                           ; 1 bytes @ 0x3
  1204  000004                     	ds	2
  1205  000006                     ??_configPwm:
  1206  000006                     ??_forzarReversa:
  1207  000006                     ??_forzarAvanceRecto:
  1208  000006                     ??_forzarGiroIzquierda:
  1209  000006                     ??_forzarGiroDerecha:
  1210  000006                     ?_strlen:
  1211                           	opt callstack 0
  1212  000006                     ?___fpclassifyf:
  1213                           	opt callstack 0
  1214  000006                     ?_isupper:
  1215                           	opt callstack 0
  1216  000006                     ?_isdigit:
  1217                           	opt callstack 0
  1218  000006                     ?_strncmp:
  1219                           	opt callstack 0
  1220  000006                     ?_isspace:
  1221                           	opt callstack 0
  1222  000006                     ?___wmul:
  1223                           	opt callstack 0
  1224  000006                     ?___awdiv:
  1225                           	opt callstack 0
  1226  000006                     ?___awmod:
  1227                           	opt callstack 0
  1228  000006                     ?___lwdiv:
  1229                           	opt callstack 0
  1230  000006                     ?___lmul:
  1231                           	opt callstack 0
  1232  000006                     ?___flneg:
  1233                           	opt callstack 0
  1234  000006                     ?___aodiv:
  1235                           	opt callstack 0
  1236  000006                     ?___aomod:
  1237                           	opt callstack 0
  1238  000006                     UART_write@dato:
  1239                           	opt callstack 0
  1240  000006                     ___wmul@multiplier:
  1241                           	opt callstack 0
  1242  000006                     ___awdiv@dividend:
  1243                           	opt callstack 0
  1244  000006                     ___awmod@dividend:
  1245                           	opt callstack 0
  1246  000006                     ___lwdiv@dividend:
  1247                           	opt callstack 0
  1248  000006                     isdigit@c:
  1249                           	opt callstack 0
  1250  000006                     isspace@c:
  1251                           	opt callstack 0
  1252  000006                     isupper@c:
  1253                           	opt callstack 0
  1254  000006                     fputc@c:
  1255                           	opt callstack 0
  1256  000006                     strcpy@dest:
  1257                           	opt callstack 0
  1258  000006                     strlen@s:
  1259                           	opt callstack 0
  1260  000006                     strncmp@_l:
  1261                           	opt callstack 0
  1262  000006                     ___lmul@multiplier:
  1263                           	opt callstack 0
  1264  000006                     ___fleq@ff1:
  1265                           	opt callstack 0
  1266  000006                     ___flneg@f1:
  1267                           	opt callstack 0
  1268  000006                     ___fpclassifyf@x:
  1269                           	opt callstack 0
  1270  000006                     ___aodiv@dividend:
  1271                           	opt callstack 0
  1272  000006                     ___aomod@dividend:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 8 bytes @ 0x5
  1276  000006                     	ds	1
  1277  000007                     UART_printf@cadena:
  1278                           	opt callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x6
  1281  000007                     	ds	1
  1282  000008                     ??_mover:
  1283  000008                     ??_isupper:
  1284  000008                     ??_isdigit:
  1285  000008                     ??_isspace:
  1286  000008                     configPwm@channel:
  1287                           	opt callstack 0
  1288  000008                     ___wmul@multiplicand:
  1289                           	opt callstack 0
  1290  000008                     ___awdiv@divisor:
  1291                           	opt callstack 0
  1292  000008                     ___awmod@divisor:
  1293                           	opt callstack 0
  1294  000008                     ___lwdiv@divisor:
  1295                           	opt callstack 0
  1296  000008                     fputc@fp:
  1297                           	opt callstack 0
  1298  000008                     strcpy@src:
  1299                           	opt callstack 0
  1300  000008                     strlen@a:
  1301                           	opt callstack 0
  1302  000008                     strncmp@_r:
  1303                           	opt callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x7
  1306  000008                     	ds	1
  1307  000009                     
  1308                           ; 1 bytes @ 0x8
  1309  000009                     	ds	1
  1310  00000A                     ??_fputc:
  1311  00000A                     ??___fpclassifyf:
  1312  00000A                     ??_strcpy:
  1313  00000A                     ___awdiv@counter:
  1314                           	opt callstack 0
  1315  00000A                     ___awmod@counter:
  1316                           	opt callstack 0
  1317  00000A                     ___lwdiv@counter:
  1318                           	opt callstack 0
  1319  00000A                     ___wmul@product:
  1320                           	opt callstack 0
  1321  00000A                     strncmp@n:
  1322                           	opt callstack 0
  1323  00000A                     ___lmul@multiplicand:
  1324                           	opt callstack 0
  1325  00000A                     ___fleq@ff2:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x9
  1329  00000A                     	ds	1
  1330  00000B                     ___awdiv@sign:
  1331                           	opt callstack 0
  1332  00000B                     ___awmod@sign:
  1333                           	opt callstack 0
  1334  00000B                     ___lwdiv@quotient:
  1335                           	opt callstack 0
  1336                           
  1337                           ; 2 bytes @ 0xA
  1338  00000B                     	ds	1
  1339  00000C                     ??_strncmp:
  1340  00000C                     ?_tolower:
  1341                           	opt callstack 0
  1342  00000C                     _isspace$1455:
  1343                           	opt callstack 0
  1344  00000C                     ___awdiv@quotient:
  1345                           	opt callstack 0
  1346  00000C                     strcpy@s:
  1347                           	opt callstack 0
  1348  00000C                     tolower@c:
  1349                           	opt callstack 0
  1350                           
  1351                           ; 2 bytes @ 0xB
  1352  00000C                     	ds	1
  1353  00000D                     ?_atoi:
  1354                           	opt callstack 0
  1355  00000D                     ?___xxtofl:
  1356                           	opt callstack 0
  1357  00000D                     atoi@s:
  1358                           	opt callstack 0
  1359  00000D                     strncmp@l:
  1360                           	opt callstack 0
  1361  00000D                     ___xxtofl@val:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 4 bytes @ 0xC
  1365  00000D                     	ds	1
  1366  00000E                     ??_tolower:
  1367  00000E                     ??___fleq:
  1368  00000E                     ___fpclassifyf@e:
  1369                           	opt callstack 0
  1370  00000E                     strcpy@d:
  1371                           	opt callstack 0
  1372  00000E                     ___lmul@product:
  1373                           	opt callstack 0
  1374  00000E                     ___aodiv@divisor:
  1375                           	opt callstack 0
  1376  00000E                     ___aomod@divisor:
  1377                           	opt callstack 0
  1378                           
  1379                           ; 8 bytes @ 0xD
  1380  00000E                     	ds	1
  1381  00000F                     ??_atoi:
  1382  00000F                     fputs@s:
  1383                           	opt callstack 0
  1384  00000F                     strncmp@r:
  1385                           	opt callstack 0
  1386                           
  1387                           ; 2 bytes @ 0xE
  1388  00000F                     	ds	1
  1389  000010                     ___fpclassifyf@u:
  1390                           	opt callstack 0
  1391                           
  1392                           ; 4 bytes @ 0xF
  1393  000010                     	ds	1
  1394  000011                     ??___xxtofl:
  1395  000011                     fputs@fp:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x10
  1399  000011                     	ds	1
  1400  000012                     ?___aldiv:
  1401                           	opt callstack 0
  1402  000012                     _tolower$1554:
  1403                           	opt callstack 0
  1404  000012                     ___aldiv@dividend:
  1405                           	opt callstack 0
  1406                           
  1407                           ; 4 bytes @ 0x11
  1408  000012                     	ds	1
  1409  000013                     fputs@c:
  1410                           	opt callstack 0
  1411  000013                     atoi@neg:
  1412                           	opt callstack 0
  1413                           
  1414                           ; 2 bytes @ 0x12
  1415  000013                     	ds	1
  1416  000014                     fputs@i:
  1417                           	opt callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x13
  1420  000014                     	ds	1
  1421  000015                     ___xxtofl@sign:
  1422                           	opt callstack 0
  1423  000015                     _atoi$1424:
  1424                           	opt callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x14
  1427  000015                     	ds	1
  1428  000016                     ?_pad:
  1429                           	opt callstack 0
  1430  000016                     ___aodiv@counter:
  1431                           	opt callstack 0
  1432  000016                     ___aomod@counter:
  1433                           	opt callstack 0
  1434  000016                     ___xxtofl@exp:
  1435                           	opt callstack 0
  1436  000016                     pad@fp:
  1437                           	opt callstack 0
  1438  000016                     ___aldiv@divisor:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 4 bytes @ 0x15
  1442  000016                     	ds	1
  1443  000017                     ___aodiv@sign:
  1444                           	opt callstack 0
  1445  000017                     ___aomod@sign:
  1446                           	opt callstack 0
  1447  000017                     _atoi$1426:
  1448                           	opt callstack 0
  1449  000017                     ___xxtofl@arg:
  1450                           	opt callstack 0
  1451                           
  1452                           ; 4 bytes @ 0x16
  1453  000017                     	ds	1
  1454  000018                     ?_abs:
  1455                           	opt callstack 0
  1456  000018                     pad@buf:
  1457                           	opt callstack 0
  1458  000018                     abs@a:
  1459                           	opt callstack 0
  1460  000018                     ___aodiv@quotient:
  1461                           	opt callstack 0
  1462                           
  1463                           ; 8 bytes @ 0x17
  1464  000018                     	ds	1
  1465  000019                     _atoi$1425:
  1466                           	opt callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x18
  1469  000019                     	ds	1
  1470  00001A                     ??_abs:
  1471  00001A                     ___aldiv@counter:
  1472                           	opt callstack 0
  1473  00001A                     pad@p:
  1474                           	opt callstack 0
  1475  00001A                     atoi@n:
  1476                           	opt callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x19
  1479  00001A                     	ds	1
  1480  00001B                     ?___flmul:
  1481                           	opt callstack 0
  1482  00001B                     ?_dameDistancia:
  1483                           	opt callstack 0
  1484  00001B                     ___aldiv@sign:
  1485                           	opt callstack 0
  1486  00001B                     ___flmul@b:
  1487                           	opt callstack 0
  1488                           
  1489                           ; 4 bytes @ 0x1A
  1490  00001B                     	ds	1
  1491  00001C                     ??_pad:
  1492  00001C                     ___aldiv@quotient:
  1493                           	opt callstack 0
  1494                           
  1495                           ; 4 bytes @ 0x1B
  1496  00001C                     	ds	1
  1497  00001D                     pad@i:
  1498                           	opt callstack 0
  1499                           
  1500                           ; 2 bytes @ 0x1C
  1501  00001D                     	ds	2
  1502  00001F                     ??_dameDistancia:
  1503  00001F                     pad@w:
  1504                           	opt callstack 0
  1505  00001F                     ___flmul@a:
  1506                           	opt callstack 0
  1507                           
  1508                           ; 4 bytes @ 0x1E
  1509  00001F                     	ds	1
  1510  000020                     ?_map:
  1511                           	opt callstack 0
  1512  000020                     map@x:
  1513                           	opt callstack 0
  1514  000020                     UART_init@BAUD:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 4 bytes @ 0x1F
  1518  000020                     	ds	1
  1519  000021                     ?_dtoa:
  1520                           	opt callstack 0
  1521  000021                     dameDistancia@numeroSensor:
  1522                           	opt callstack 0
  1523  000021                     dtoa@fp:
  1524                           	opt callstack 0
  1525                           
  1526                           ; 2 bytes @ 0x20
  1527  000021                     	ds	1
  1528  000022                     dameDistancia@distancia:
  1529                           	opt callstack 0
  1530                           
  1531                           ; 4 bytes @ 0x21
  1532  000022                     	ds	1
  1533  000023                     ??___flmul:
  1534  000023                     dtoa@d:
  1535                           	opt callstack 0
  1536                           
  1537                           ; 8 bytes @ 0x22
  1538  000023                     	ds	1
  1539  000024                     map@in_min:
  1540                           	opt callstack 0
  1541                           
  1542                           ; 4 bytes @ 0x23
  1543  000024                     	ds	2
  1544  000026                     dameDistancia@conteo:
  1545                           	opt callstack 0
  1546                           
  1547                           ; 2 bytes @ 0x25
  1548  000026                     	ds	1
  1549  000027                     ___flmul@sign:
  1550                           	opt callstack 0
  1551                           
  1552                           ; 1 bytes @ 0x26
  1553  000027                     	ds	1
  1554  000028                     ___flmul@aexp:
  1555                           	opt callstack 0
  1556  000028                     map@in_max:
  1557                           	opt callstack 0
  1558  000028                     _UART_init$1816:
  1559                           	opt callstack 0
  1560                           
  1561                           ; 4 bytes @ 0x27
  1562  000028                     	ds	1
  1563  000029                     ___flmul@grs:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 4 bytes @ 0x28
  1567  000029                     	ds	2
  1568  00002B                     ??_dtoa:
  1569                           
  1570                           ; 1 bytes @ 0x2A
  1571  00002B                     	ds	1
  1572  00002C                     map@out_min:
  1573                           	opt callstack 0
  1574                           
  1575                           ; 4 bytes @ 0x2B
  1576  00002C                     	ds	1
  1577  00002D                     ___flmul@bexp:
  1578                           	opt callstack 0
  1579                           
  1580                           ; 1 bytes @ 0x2C
  1581  00002D                     	ds	1
  1582  00002E                     ___flmul@prod:
  1583                           	opt callstack 0
  1584                           
  1585                           ; 4 bytes @ 0x2D
  1586  00002E                     	ds	2
  1587  000030                     map@out_max:
  1588                           	opt callstack 0
  1589                           
  1590                           ; 4 bytes @ 0x2F
  1591  000030                     	ds	2
  1592  000032                     ___flmul@temp:
  1593                           	opt callstack 0
  1594                           
  1595                           ; 2 bytes @ 0x31
  1596  000032                     	ds	1
  1597  000033                     _dtoa$897:
  1598                           	opt callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x32
  1601  000033                     	ds	1
  1602  000034                     ?___fladd:
  1603                           	opt callstack 0
  1604  000034                     ___flge@ff1:
  1605                           	opt callstack 0
  1606  000034                     ___fladd@b:
  1607                           	opt callstack 0
  1608                           
  1609                           ; 4 bytes @ 0x33
  1610  000034                     	ds	1
  1611  000035                     dtoa@p:
  1612                           	opt callstack 0
  1613                           
  1614                           ; 2 bytes @ 0x34
  1615  000035                     	ds	2
  1616  000037                     dtoa@w:
  1617                           	opt callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x36
  1620  000037                     	ds	1
  1621  000038                     ___flge@ff2:
  1622                           	opt callstack 0
  1623  000038                     ___fladd@a:
  1624                           	opt callstack 0
  1625                           
  1626                           ; 4 bytes @ 0x37
  1627  000038                     	ds	1
  1628  000039                     dtoa@s:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x38
  1632  000039                     	ds	2
  1633  00003B                     dtoa@n:
  1634                           	opt callstack 0
  1635                           
  1636                           ; 8 bytes @ 0x3A
  1637  00003B                     	ds	1
  1638  00003C                     ??___fladd:
  1639  00003C                     ??___flge:
  1640                           
  1641                           ; 1 bytes @ 0x3B
  1642  00003C                     	ds	4
  1643  000040                     ___fladd@signs:
  1644                           	opt callstack 0
  1645                           
  1646                           ; 1 bytes @ 0x3F
  1647  000040                     	ds	1
  1648  000041                     ___fladd@aexp:
  1649                           	opt callstack 0
  1650                           
  1651                           ; 1 bytes @ 0x40
  1652  000041                     	ds	1
  1653  000042                     ___fladd@bexp:
  1654                           	opt callstack 0
  1655                           
  1656                           ; 1 bytes @ 0x41
  1657  000042                     	ds	1
  1658  000043                     ___fladd@grs:
  1659                           	opt callstack 0
  1660  000043                     dtoa@i:
  1661                           	opt callstack 0
  1662                           
  1663                           ; 2 bytes @ 0x42
  1664  000043                     	ds	1
  1665  000044                     ?___fldiv:
  1666                           	opt callstack 0
  1667  000044                     ?___flsub:
  1668                           	opt callstack 0
  1669  000044                     ___flsub@b:
  1670                           	opt callstack 0
  1671  000044                     ___fldiv@b:
  1672                           	opt callstack 0
  1673                           
  1674                           ; 4 bytes @ 0x43
  1675  000044                     	ds	4
  1676  000048                     ___flsub@a:
  1677                           	opt callstack 0
  1678  000048                     ___fldiv@a:
  1679                           	opt callstack 0
  1680                           
  1681                           ; 4 bytes @ 0x47
  1682  000048                     	ds	4
  1683  00004C                     ??___fldiv:
  1684  00004C                     ?_roundf:
  1685                           	opt callstack 0
  1686  00004C                     roundf@x:
  1687                           	opt callstack 0
  1688                           
  1689                           ; 4 bytes @ 0x4B
  1690  00004C                     	ds	4
  1691  000050                     ??_roundf:
  1692  000050                     ?_floorf:
  1693                           	opt callstack 0
  1694  000050                     floorf@x:
  1695                           	opt callstack 0
  1696                           
  1697                           ; 4 bytes @ 0x4F
  1698  000050                     	ds	4
  1699  000054                     probarCruceT@contCaminos:
  1700                           	opt callstack 0
  1701                           
  1702                           ; 1 bytes @ 0x53
  1703  000054                     	ds	1
  1704  000055                     
  1705                           ; 1 bytes @ 0x54
  1706 ;;
  1707 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1708 ;;
  1709 ;; *************** function _main *****************
  1710 ;; Defined at:
  1711 ;;		line 1284 in file "main.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  numMovimient    2    0        int 
  1716 ;;  iniciado        1    6[BANK1 ] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1726 ;;      Params:         0       0       0       0       0       0       0       0       0
  1727 ;;      Locals:         0       0       3       0       0       0       0       0       0
  1728 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1729 ;;      Totals:         0       0       3       0       0       0       0       0       0
  1730 ;;Total ram usage:        3 bytes
  1731 ;; Hardware stack levels required when called:   11
  1732 ;; This function calls:
  1733 ;;		_UART_init
  1734 ;;		_configPwm
  1735 ;;		_configurarAdc
  1736 ;;		_forzarParoAuto
  1737 ;;		_inicializarComportamientoBasico
  1738 ;;		_probarCruceT
  1739 ;;		_visualizarPasosRealizados
  1740 ;; This function is called by:
  1741 ;;		Startup code after reset
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text0
  1746  003EF6                     __ptext0:
  1747                           	opt callstack 0
  1748  003EF6                     _main:
  1749                           	opt callstack 20
  1750  003EF6                     
  1751                           ;main.c: 1286:     T_BOOL iniciado = 0;
  1752  003EF6  0E00               	movlw	0
  1753  003EF8  0101               	movlb	1	; () banked
  1754  003EFA  6FCF               	movwf	main@iniciado& (0+255),b
  1755  003EFC                     
  1756                           ; BSR set to: 1
  1757                           ;main.c: 1290:     INTCONbits.GIE = 1;
  1758  003EFC  8EF2               	bsf	242,7,c	;volatile
  1759  003EFE                     
  1760                           ; BSR set to: 1
  1761                           ;main.c: 1291:     INTCONbits.INT0IE = 1;
  1762  003EFE  88F2               	bsf	242,4,c	;volatile
  1763  003F00                     
  1764                           ; BSR set to: 1
  1765                           ;main.c: 1292:     INTCON2bits.INTEDG0 = 1;
  1766  003F00  8CF1               	bsf	241,6,c	;volatile
  1767  003F02                     
  1768                           ; BSR set to: 1
  1769                           ;main.c: 1294:     TRISD3 = 0;
  1770  003F02  9695               	bcf	3989,3,c	;volatile
  1771  003F04                     
  1772                           ; BSR set to: 1
  1773                           ;main.c: 1295:     TRISB1 = 1;
  1774  003F04  8293               	bsf	3987,1,c	;volatile
  1775  003F06                     
  1776                           ; BSR set to: 1
  1777                           ;main.c: 1296:     TRISB2 = 1;
  1778  003F06  8493               	bsf	3987,2,c	;volatile
  1779  003F08                     
  1780                           ; BSR set to: 1
  1781                           ;main.c: 1297:     TRISB3 = 1;
  1782  003F08  8693               	bsf	3987,3,c	;volatile
  1783  003F0A                     
  1784                           ; BSR set to: 1
  1785                           ;main.c: 1299:     TRISB4 = 0;
  1786  003F0A  9893               	bcf	3987,4,c	;volatile
  1787  003F0C                     
  1788                           ; BSR set to: 1
  1789                           ;main.c: 1300:     TRISB5 = 0;
  1790  003F0C  9A93               	bcf	3987,5,c	;volatile
  1791  003F0E                     
  1792                           ; BSR set to: 1
  1793                           ;main.c: 1301:     TRISB6 = 0;
  1794  003F0E  9C93               	bcf	3987,6,c	;volatile
  1795  003F10                     
  1796                           ; BSR set to: 1
  1797                           ;main.c: 1302:     TRISB7 = 0;
  1798  003F10  9E93               	bcf	3987,7,c	;volatile
  1799  003F12                     
  1800                           ; BSR set to: 1
  1801                           ;main.c: 1304:     TRISDbits.RD2 = 0;
  1802  003F12  9495               	bcf	149,2,c	;volatile
  1803  003F14                     
  1804                           ; BSR set to: 1
  1805                           ;main.c: 1305:     TRISB0 = 1;
  1806  003F14  8093               	bsf	3987,0,c	;volatile
  1807  003F16                     
  1808                           ; BSR set to: 1
  1809                           ;main.c: 1307:     LATD3 = 0;
  1810  003F16  968C               	bcf	3980,3,c	;volatile
  1811  003F18                     
  1812                           ; BSR set to: 1
  1813                           ;main.c: 1308:     LATB4 = 0;
  1814  003F18  988A               	bcf	3978,4,c	;volatile
  1815  003F1A                     
  1816                           ; BSR set to: 1
  1817                           ;main.c: 1309:     LATB5 = 0;
  1818  003F1A  9A8A               	bcf	3978,5,c	;volatile
  1819  003F1C                     
  1820                           ; BSR set to: 1
  1821                           ;main.c: 1310:     LATB6 = 0;
  1822  003F1C  9C8A               	bcf	3978,6,c	;volatile
  1823  003F1E                     
  1824                           ; BSR set to: 1
  1825                           ;main.c: 1311:     LATB7 = 0;
  1826  003F1E  9E8A               	bcf	3978,7,c	;volatile
  1827  003F20                     
  1828                           ; BSR set to: 1
  1829                           ;main.c: 1312:     LATD2 = 0;
  1830  003F20  948C               	bcf	3980,2,c	;volatile
  1831                           
  1832                           ;main.c: 1315:     T1CON = 0b00000000;
  1833  003F22  0E00               	movlw	0
  1834  003F24  6ECD               	movwf	205,c	;volatile
  1835  003F26                     
  1836                           ; BSR set to: 1
  1837                           ;main.c: 1317:     configPwm(1);
  1838  003F26  0E01               	movlw	1
  1839  003F28  EC4D  F022         	call	_configPwm
  1840  003F2C                     
  1841                           ;main.c: 1318:     configPwm(2);
  1842  003F2C  0E02               	movlw	2
  1843  003F2E  EC4D  F022         	call	_configPwm
  1844  003F32                     
  1845                           ;main.c: 1319:     configurarAdc();
  1846  003F32  EC3D  F024         	call	_configurarAdc	;wreg free
  1847  003F36                     
  1848                           ;main.c: 1321:     UART_init(9600);
  1849  003F36  0E80               	movlw	128
  1850  003F38  6E20               	movwf	UART_init@BAUD^0,c
  1851  003F3A  0E25               	movlw	37
  1852  003F3C  6E21               	movwf	(UART_init@BAUD+1)^0,c
  1853  003F3E  0E00               	movlw	0
  1854  003F40  6E22               	movwf	(UART_init@BAUD+2)^0,c
  1855  003F42  0E00               	movlw	0
  1856  003F44  6E23               	movwf	(UART_init@BAUD+3)^0,c
  1857  003F46  EC76  F020         	call	_UART_init	;wreg free
  1858  003F4A                     l10225:
  1859                           
  1860                           ;main.c: 1326:         if (!pausa) {
  1861  003F4A  0101               	movlb	1	; () banked
  1862  003F4C  51D0               	movf	_pausa& (0+255),w,b
  1863  003F4E  A4D8               	btfss	status,2,c
  1864  003F50  EFAC  F01F         	goto	u11771
  1865  003F54  EFAE  F01F         	goto	u11770
  1866  003F58                     u11771:
  1867  003F58  EFC0  F01F         	goto	l10241
  1868  003F5C                     u11770:
  1869  003F5C                     
  1870                           ; BSR set to: 1
  1871                           ;main.c: 1328:             if (!iniciado) {
  1872  003F5C  51CF               	movf	main@iniciado& (0+255),w,b
  1873  003F5E  A4D8               	btfss	status,2,c
  1874  003F60  EFB4  F01F         	goto	u11781
  1875  003F64  EFB6  F01F         	goto	u11780
  1876  003F68                     u11781:
  1877  003F68  EFBA  F01F         	goto	l10233
  1878  003F6C                     u11780:
  1879  003F6C                     
  1880                           ; BSR set to: 1
  1881                           ;main.c: 1329:                 iniciado = 1;
  1882  003F6C  0E01               	movlw	1
  1883  003F6E  6FCF               	movwf	main@iniciado& (0+255),b
  1884  003F70                     
  1885                           ; BSR set to: 1
  1886                           ;main.c: 1330:                 inicializarComportamientoBasico();
  1887  003F70  EC75  F022         	call	_inicializarComportamientoBasico	;wreg free
  1888  003F74                     l10233:
  1889                           
  1890                           ;main.c: 1336:             probarCruceT();
  1891  003F74  EC26  F015         	call	_probarCruceT	;wreg free
  1892  003F78                     
  1893                           ;main.c: 1342:             forzarParoAuto();
  1894  003F78  EC38  F024         	call	_forzarParoAuto	;wreg free
  1895                           
  1896                           ;main.c: 1344:         } else {
  1897  003F7C  EFA5  F01F         	goto	l10225
  1898  003F80                     l10241:
  1899                           
  1900                           ; BSR set to: 1
  1901                           ;main.c: 1346:             iniciado = 0;
  1902  003F80  0E00               	movlw	0
  1903  003F82  6FCF               	movwf	main@iniciado& (0+255),b
  1904  003F84  EFA5  F01F         	goto	l10225
  1905  003F88  EF07  F000         	goto	start
  1906  003F8C                     __end_of_main:
  1907                           	opt callstack 0
  1908                           
  1909 ;; *************** function _visualizarPasosRealizados *****************
  1910 ;; Defined at:
  1911 ;;		line 214 in file "main.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  numMovimient    2    0[BANK1 ] unsigned int 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1925 ;;      Params:         0       0       2       0       0       0       0       0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1927 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1928 ;;      Totals:         0       0       4       0       0       0       0       0       0
  1929 ;;Total ram usage:        4 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:   10
  1932 ;; This function calls:
  1933 ;;		_UART_printf
  1934 ;;		_sprintf
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text1
  1941  003D02                     __ptext1:
  1942                           	opt callstack 0
  1943  003D02                     _visualizarPasosRealizados:
  1944                           	opt callstack 20
  1945  003D02                     
  1946                           ;main.c: 216:     switch (mouse.curr_state) {
  1947  003D02  EFA3  F01E         	goto	l9389
  1948  003D06                     l9379:
  1949                           
  1950                           ; BSR set to: 1
  1951                           ;main.c: 218:             UART_printf("Enfrente\n");
  1952  003D06  0ED2               	movlw	low STR_7
  1953  003D08  6E07               	movwf	UART_printf@cadena^0,c
  1954  003D0A  0E7F               	movlw	high STR_7
  1955  003D0C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1956  003D0E  EC48  F021         	call	_UART_printf	;wreg free
  1957                           
  1958                           ;main.c: 219:             break;
  1959  003D12  EFC2  F01E         	goto	l9391
  1960  003D16                     l9381:
  1961                           
  1962                           ; BSR set to: 1
  1963                           ;main.c: 222:             UART_printf("Izquierda\n");
  1964  003D16  0EC7               	movlw	low STR_8
  1965  003D18  6E07               	movwf	UART_printf@cadena^0,c
  1966  003D1A  0E7F               	movlw	high STR_8
  1967  003D1C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1968  003D1E  EC48  F021         	call	_UART_printf	;wreg free
  1969                           
  1970                           ;main.c: 223:             break;
  1971  003D22  EFC2  F01E         	goto	l9391
  1972  003D26                     l9383:
  1973                           
  1974                           ; BSR set to: 1
  1975                           ;main.c: 226:             UART_printf("Derecha\n");
  1976  003D26  0EDC               	movlw	low STR_9
  1977  003D28  6E07               	movwf	UART_printf@cadena^0,c
  1978  003D2A  0E7F               	movlw	high STR_9
  1979  003D2C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1980  003D2E  EC48  F021         	call	_UART_printf	;wreg free
  1981                           
  1982                           ;main.c: 227:             break;
  1983  003D32  EFC2  F01E         	goto	l9391
  1984  003D36                     l9385:
  1985                           
  1986                           ; BSR set to: 1
  1987                           ;main.c: 230:             UART_printf("Alto\n");
  1988  003D36  0EE5               	movlw	low STR_10
  1989  003D38  6E07               	movwf	UART_printf@cadena^0,c
  1990  003D3A  0E7F               	movlw	high STR_10
  1991  003D3C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1992  003D3E  EC48  F021         	call	_UART_printf	;wreg free
  1993                           
  1994                           ;main.c: 231:             break;
  1995  003D42  EFC2  F01E         	goto	l9391
  1996  003D46                     l9389:
  1997  003D46  0100               	movlb	0	; () banked
  1998  003D48  51FD               	movf	_mouse& (0+255),w,b
  1999  003D4A  0101               	movlb	1	; () banked
  2000  003D4C  6FCB               	movwf	??_visualizarPasosRealizados& (0+255),b
  2001  003D4E  6BCC               	clrf	(??_visualizarPasosRealizados+1)& (0+255),b
  2002                           
  2003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2004                           ; Switch size 1, requested type "simple"
  2005                           ; Number of cases is 1, Range of values is 0 to 0
  2006                           ; switch strategies available:
  2007                           ; Name         Instructions Cycles
  2008                           ; simple_byte            4     3 (average)
  2009                           ;	Chosen strategy is simple_byte
  2010  003D50  51CC               	movf	(??_visualizarPasosRealizados+1)& (0+255),w,b
  2011  003D52  0A00               	xorlw	0	; case 0
  2012  003D54  B4D8               	btfsc	status,2,c
  2013  003D56  EFAF  F01E         	goto	l10403
  2014  003D5A  EFC2  F01E         	goto	l9391
  2015  003D5E                     l10403:
  2016                           
  2017                           ; BSR set to: 1
  2018                           ; Switch size 1, requested type "simple"
  2019                           ; Number of cases is 4, Range of values is 1 to 4
  2020                           ; switch strategies available:
  2021                           ; Name         Instructions Cycles
  2022                           ; simple_byte           13     7 (average)
  2023                           ;	Chosen strategy is simple_byte
  2024  003D5E  51CB               	movf	??_visualizarPasosRealizados& (0+255),w,b
  2025  003D60  0A01               	xorlw	1	; case 1
  2026  003D62  B4D8               	btfsc	status,2,c
  2027  003D64  EF83  F01E         	goto	l9379
  2028  003D68  0A03               	xorlw	3	; case 2
  2029  003D6A  B4D8               	btfsc	status,2,c
  2030  003D6C  EF8B  F01E         	goto	l9381
  2031  003D70  0A01               	xorlw	1	; case 3
  2032  003D72  B4D8               	btfsc	status,2,c
  2033  003D74  EF93  F01E         	goto	l9383
  2034  003D78  0A07               	xorlw	7	; case 4
  2035  003D7A  B4D8               	btfsc	status,2,c
  2036  003D7C  EF9B  F01E         	goto	l9385
  2037  003D80  EFC2  F01E         	goto	l9391
  2038  003D84                     l9391:
  2039                           
  2040                           ;main.c: 234:     sprintf(buffer, "\rMovimientos Realizados = %d\r\n\n", numMovimientos)
      +                          ;
  2041  003D84  0E8A               	movlw	low _buffer
  2042  003D86  0100               	movlb	0	; () banked
  2043  003D88  6FE7               	movwf	sprintf@s& (0+255),b
  2044  003D8A  0E01               	movlw	high _buffer
  2045  003D8C  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  2046  003D8E  0E40               	movlw	low STR_11
  2047  003D90  6FE9               	movwf	sprintf@fmt& (0+255),b
  2048  003D92  0E7F               	movlw	high STR_11
  2049  003D94  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  2050  003D96  C1C9  F0EB         	movff	visualizarPasosRealizados@numMovimientos,?_sprintf+4
  2051  003D9A  C1CA  F0EC         	movff	visualizarPasosRealizados@numMovimientos+1,?_sprintf+5
  2052  003D9E  ECFB  F021         	call	_sprintf	;wreg free
  2053  003DA2                     
  2054                           ;main.c: 235:     UART_printf(buffer);
  2055  003DA2  0E8A               	movlw	low _buffer
  2056  003DA4  6E07               	movwf	UART_printf@cadena^0,c
  2057  003DA6  0E01               	movlw	high _buffer
  2058  003DA8  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2059  003DAA  EC48  F021         	call	_UART_printf	;wreg free
  2060  003DAE  0012               	return		;funcret
  2061  003DB0                     __end_of_visualizarPasosRealizados:
  2062                           	opt callstack 0
  2063                           
  2064 ;; *************** function _sprintf *****************
  2065 ;; Defined at:
  2066 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  s               2  135[BANK0 ] PTR unsigned char 
  2069 ;;		 -> buffer(50), 
  2070 ;;  fmt             2  137[BANK0 ] PTR const unsigned char 
  2071 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2072 ;;		 -> STR_3(34), 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  f               6  147[BANK0 ] struct _IO_FILE
  2075 ;;  ap              2  145[BANK0 ] PTR void [1]
  2076 ;;		 -> ?_sprintf(2), 
  2077 ;;  ret             2    0        int 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  2  135[BANK0 ] int 
  2080 ;; Registers used:
  2081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2087 ;;      Params:         0       8       0       0       0       0       0       0       0
  2088 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2090 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2091 ;;Total ram usage:       18 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    9
  2094 ;; This function calls:
  2095 ;;		_vfprintf
  2096 ;; This function is called by:
  2097 ;;		_visualizarPasosRealizados
  2098 ;;		_probarSensores
  2099 ;;		_probarUltrasonico
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text2
  2104  0043F6                     __ptext2:
  2105                           	opt callstack 0
  2106  0043F6                     _sprintf:
  2107                           	opt callstack 20
  2108  0043F6  0EEB               	movlw	low (?_sprintf+4)
  2109  0043F8  0100               	movlb	0	; () banked
  2110  0043FA  6FF1               	movwf	sprintf@ap& (0+255),b
  2111  0043FC  0E00               	movlw	high (?_sprintf+4)
  2112  0043FE  6FF2               	movwf	(sprintf@ap+1)& (0+255),b
  2113  004400  C0E7  F0F3         	movff	sprintf@s,sprintf@f
  2114  004404  C0E8  F0F4         	movff	sprintf@s+1,sprintf@f+1
  2115  004408                     
  2116                           ; BSR set to: 0
  2117  004408  0E00               	movlw	0
  2118  00440A  6FF6               	movwf	(sprintf@f+3)& (0+255),b
  2119  00440C  0E00               	movlw	0
  2120  00440E  6FF5               	movwf	(sprintf@f+2)& (0+255),b
  2121  004410                     
  2122                           ; BSR set to: 0
  2123  004410  0E00               	movlw	0
  2124  004412  6FF8               	movwf	(sprintf@f+5)& (0+255),b
  2125  004414  0E00               	movlw	0
  2126  004416  6FF7               	movwf	(sprintf@f+4)& (0+255),b
  2127  004418                     
  2128                           ; BSR set to: 0
  2129  004418  0EF3               	movlw	low sprintf@f
  2130  00441A  6FDF               	movwf	vfprintf@fp& (0+255),b
  2131  00441C  0E00               	movlw	high sprintf@f
  2132  00441E  6FE0               	movwf	(vfprintf@fp+1)& (0+255),b
  2133  004420  C0E9  F0E1         	movff	sprintf@fmt,vfprintf@fmt
  2134  004424  C0EA  F0E2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2135  004428  0EF1               	movlw	low sprintf@ap
  2136  00442A  6FE3               	movwf	vfprintf@ap& (0+255),b
  2137  00442C  0E00               	movlw	high sprintf@ap
  2138  00442E  6FE4               	movwf	(vfprintf@ap+1)& (0+255),b
  2139  004430  ECAE  F020         	call	_vfprintf	;wreg free
  2140  004434  0100               	movlb	0	; () banked
  2141  004436  51F5               	movf	(sprintf@f+2)& (0+255),w,b
  2142  004438  25E7               	addwf	sprintf@s& (0+255),w,b
  2143  00443A  6ED9               	movwf	fsr2l,c
  2144  00443C  51F6               	movf	(sprintf@f+3)& (0+255),w,b
  2145  00443E  21E8               	addwfc	(sprintf@s+1)& (0+255),w,b
  2146  004440  6EDA               	movwf	fsr2h,c
  2147  004442  0E00               	movlw	0
  2148  004444  6EDF               	movwf	indf2,c
  2149  004446                     
  2150                           ; BSR set to: 0
  2151  004446  0012               	return		;funcret
  2152  004448                     __end_of_sprintf:
  2153                           	opt callstack 0
  2154                           
  2155 ;; *************** function _vfprintf *****************
  2156 ;; Defined at:
  2157 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  fp              2  127[BANK0 ] PTR struct _IO_FILE
  2160 ;;		 -> sprintf@f(6), 
  2161 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  2162 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2163 ;;		 -> STR_3(34), 
  2164 ;;  ap              2  131[BANK0 ] PTR PTR void 
  2165 ;;		 -> sprintf@ap(2), 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  cfmt            2  133[BANK0 ] PTR unsigned char 
  2168 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2169 ;;		 -> STR_3(34), 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  2  127[BANK0 ] int 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2179 ;;      Params:         0       6       0       0       0       0       0       0       0
  2180 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2182 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2183 ;;Total ram usage:        8 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    8
  2186 ;; This function calls:
  2187 ;;		_vfpfcnvrt
  2188 ;; This function is called by:
  2189 ;;		_sprintf
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text3
  2194  00415C                     __ptext3:
  2195                           	opt callstack 0
  2196  00415C                     _vfprintf:
  2197                           	opt callstack 20
  2198  00415C                     
  2199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2200  00415C  C0E1  F0E5         	movff	vfprintf@fmt,vfprintf@cfmt
  2201  004160  C0E2  F0E6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2202  004164                     
  2203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2204  004164  0E00               	movlw	0
  2205  004166  0101               	movlb	1	; () banked
  2206  004168  6F29               	movwf	(_nout+1)& (0+255),b
  2207  00416A  0E00               	movlw	0
  2208  00416C  6F28               	movwf	_nout& (0+255),b
  2209                           
  2210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2211  00416E  EFD0  F020         	goto	l9229
  2212  004172                     l9227:
  2213                           
  2214                           ; BSR set to: 1
  2215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2216  004172  C0DF  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  2217  004176  C0E0  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2218  00417A  0EE5               	movlw	low vfprintf@cfmt
  2219  00417C  0100               	movlb	0	; () banked
  2220  00417E  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  2221  004180  0E00               	movlw	high vfprintf@cfmt
  2222  004182  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2223  004184  C0E3  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  2224  004188  C0E4  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2225  00418C  ECEC  F005         	call	_vfpfcnvrt	;wreg free
  2226  004190  0100               	movlb	0	; () banked
  2227  004192  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  2228  004194  0101               	movlb	1	; () banked
  2229  004196  2728               	addwf	_nout& (0+255),f,b
  2230  004198  0100               	movlb	0	; () banked
  2231  00419A  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2232  00419C  0101               	movlb	1	; () banked
  2233  00419E  2329               	addwfc	(_nout+1)& (0+255),f,b
  2234  0041A0                     l9229:
  2235                           
  2236                           ; BSR set to: 1
  2237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2238  0041A0  C0E5  FFF6         	movff	vfprintf@cfmt,tblptrl
  2239  0041A4  C0E6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2240  0041A8                     	if	0	;tblptru may be non-zero
  2241  0041A8                     	endif
  2242  0041A8                     	if	0	;tblptru may be non-zero
  2243  0041A8                     	endif
  2244  0041A8  0008               	tblrd		*
  2245  0041AA  50F5               	movf	tablat,w,c
  2246  0041AC  0900               	iorlw	0
  2247  0041AE  A4D8               	btfss	status,2,c
  2248  0041B0  EFDC  F020         	goto	u10931
  2249  0041B4  EFDE  F020         	goto	u10930
  2250  0041B8                     u10931:
  2251  0041B8  EFB9  F020         	goto	l9227
  2252  0041BC                     u10930:
  2253  0041BC                     
  2254                           ; BSR set to: 1
  2255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2256  0041BC  C128  F0DF         	movff	_nout,?_vfprintf
  2257  0041C0  C129  F0E0         	movff	_nout+1,?_vfprintf+1
  2258  0041C4                     
  2259                           ; BSR set to: 1
  2260  0041C4  0012               	return		;funcret
  2261  0041C6                     __end_of_vfprintf:
  2262                           	opt callstack 0
  2263                           
  2264 ;; *************** function _vfpfcnvrt *****************
  2265 ;; Defined at:
  2266 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  2269 ;;		 -> sprintf@f(6), 
  2270 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  2271 ;;		 -> vfprintf@cfmt(2), 
  2272 ;;  ap              2  101[BANK0 ] PTR PTR void 
  2273 ;;		 -> sprintf@ap(2), 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  ll              8  107[BANK0 ] long long 
  2276 ;;  llu             8    0        unsigned long long 
  2277 ;;  f               4  119[BANK0 ] unsigned long long 
  2278 ;;  ct              3  123[BANK0 ] unsigned char [3]
  2279 ;;  vp              3    0        PTR void 
  2280 ;;  cp              3    0        PTR unsigned char 
  2281 ;;  i               2    0        int 
  2282 ;;  done            2    0        int 
  2283 ;;  c               1  126[BANK0 ] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  2   97[BANK0 ] int 
  2286 ;; Registers used:
  2287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2293 ;;      Params:         0       6       0       0       0       0       0       0       0
  2294 ;;      Locals:         0      20       0       0       0       0       0       0       0
  2295 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2296 ;;      Totals:         0      30       0       0       0       0       0       0       0
  2297 ;;Total ram usage:       30 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    7
  2300 ;; This function calls:
  2301 ;;		_atoi
  2302 ;;		_dtoa
  2303 ;;		_efgtoa
  2304 ;;		_fputc
  2305 ;;		_isdigit
  2306 ;;		_isupper
  2307 ;;		_strncmp
  2308 ;;		_tolower
  2309 ;; This function is called by:
  2310 ;;		_vfprintf
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text4
  2315  000BD8                     __ptext4:
  2316                           	opt callstack 0
  2317  000BD8                     _vfpfcnvrt:
  2318                           	opt callstack 20
  2319  000BD8                     
  2320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2321  000BD8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2322  000BDC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2323  000BE0  CFDE FFF6          	movff	postinc2,tblptrl
  2324  000BE4  CFDD FFF7          	movff	postdec2,tblptrh
  2325  000BE8                     	if	0	;tblptru may be non-zero
  2326  000BE8                     	endif
  2327  000BE8                     	if	0	;tblptru may be non-zero
  2328  000BE8                     	endif
  2329  000BE8  0008               	tblrd		*
  2330  000BEA  50F5               	movf	tablat,w,c
  2331  000BEC  0A25               	xorlw	37
  2332  000BEE  A4D8               	btfss	status,2,c
  2333  000BF0  EFFC  F005         	goto	u10531
  2334  000BF4  EFFE  F005         	goto	u10530
  2335  000BF8                     u10531:
  2336  000BF8  EF6B  F008         	goto	l9113
  2337  000BFC                     u10530:
  2338  000BFC                     
  2339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2340  000BFC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2341  000C00  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2342  000C04  2ADE               	incf	postinc2,f,c
  2343  000C06  0E00               	movlw	0
  2344  000C08  22DD               	addwfc	postdec2,f,c
  2345  000C0A                     
  2346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2347  000C0A  0E00               	movlw	0
  2348  000C0C  0101               	movlb	1	; () banked
  2349  000C0E  6F2B               	movwf	(_width+1)& (0+255),b
  2350  000C10  0E00               	movlw	0
  2351  000C12  6F2A               	movwf	_width& (0+255),b
  2352  000C14  C12A  F12E         	movff	_width,_flags
  2353  000C18  C12B  F12F         	movff	_width+1,_flags+1
  2354  000C1C                     
  2355                           ; BSR set to: 1
  2356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2357  000C1C  692C               	setf	_prec& (0+255),b
  2358  000C1E  692D               	setf	(_prec+1)& (0+255),b
  2359  000C20                     
  2360                           ; BSR set to: 1
  2361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2362  000C20  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2363  000C24  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2364  000C28  CFDE FFF6          	movff	postinc2,tblptrl
  2365  000C2C  CFDD FFF7          	movff	postdec2,tblptrh
  2366  000C30                     	if	0	;tblptru may be non-zero
  2367  000C30                     	endif
  2368  000C30                     	if	0	;tblptru may be non-zero
  2369  000C30                     	endif
  2370  000C30  0008               	tblrd		*
  2371  000C32  50F5               	movf	tablat,w,c
  2372  000C34  0A2E               	xorlw	46
  2373  000C36  A4D8               	btfss	status,2,c
  2374  000C38  EF20  F006         	goto	u10541
  2375  000C3C  EF22  F006         	goto	u10540
  2376  000C40                     u10541:
  2377  000C40  EFA0  F006         	goto	l9049
  2378  000C44                     u10540:
  2379  000C44                     
  2380                           ; BSR set to: 1
  2381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2382  000C44  0E00               	movlw	0
  2383  000C46  6F2D               	movwf	(_prec+1)& (0+255),b
  2384  000C48  0E00               	movlw	0
  2385  000C4A  6F2C               	movwf	_prec& (0+255),b
  2386  000C4C                     
  2387                           ; BSR set to: 1
  2388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2389  000C4C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2390  000C50  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2391  000C54  2ADE               	incf	postinc2,f,c
  2392  000C56  0E00               	movlw	0
  2393  000C58  22DD               	addwfc	postdec2,f,c
  2394  000C5A                     
  2395                           ; BSR set to: 1
  2396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2397  000C5A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2398  000C5E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2399  000C62  CFDE FFF6          	movff	postinc2,tblptrl
  2400  000C66  CFDD FFF7          	movff	postdec2,tblptrh
  2401  000C6A                     	if	0	;tblptru may be non-zero
  2402  000C6A                     	endif
  2403  000C6A                     	if	0	;tblptru may be non-zero
  2404  000C6A                     	endif
  2405  000C6A  0008               	tblrd		*
  2406  000C6C  50F5               	movf	tablat,w,c
  2407  000C6E  0A2A               	xorlw	42
  2408  000C70  A4D8               	btfss	status,2,c
  2409  000C72  EF3D  F006         	goto	u10551
  2410  000C76  EF3F  F006         	goto	u10550
  2411  000C7A                     u10551:
  2412  000C7A  EF5C  F006         	goto	l9039
  2413  000C7E                     u10550:
  2414  000C7E                     
  2415                           ; BSR set to: 1
  2416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2417  000C7E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2418  000C82  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2419  000C86  2ADE               	incf	postinc2,f,c
  2420  000C88  0E00               	movlw	0
  2421  000C8A  22DD               	addwfc	postdec2,f,c
  2422                           
  2423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2424  000C8C  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2425  000C90  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2426  000C94  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2427  000C98  0E02               	movlw	2
  2428  000C9A  26DE               	addwf	postinc2,f,c
  2429  000C9C  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2430  000CA0  0E00               	movlw	0
  2431  000CA2  22DD               	addwfc	postdec2,f,c
  2432  000CA4  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2433  000CA8  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2434  000CAC  CFDE F12C          	movff	postinc2,_prec
  2435  000CB0  CFDD F12D          	movff	postdec2,_prec+1
  2436                           
  2437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2438  000CB4  EFA0  F006         	goto	l9049
  2439  000CB8                     l9039:
  2440                           
  2441                           ; BSR set to: 1
  2442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2443  000CB8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2444  000CBC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2445  000CC0  CFDE F00D          	movff	postinc2,atoi@s
  2446  000CC4  CFDD F00E          	movff	postdec2,atoi@s+1
  2447  000CC8  ECDC  F016         	call	_atoi	;wreg free
  2448  000CCC  C00D  F12C         	movff	?_atoi,_prec
  2449  000CD0  C00E  F12D         	movff	?_atoi+1,_prec+1
  2450                           
  2451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2452  000CD4  EF73  F006         	goto	l9043
  2453  000CD8                     l9041:
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2457  000CD8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2458  000CDC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2459  000CE0  2ADE               	incf	postinc2,f,c
  2460  000CE2  0E00               	movlw	0
  2461  000CE4  22DD               	addwfc	postdec2,f,c
  2462  000CE6                     l9043:
  2463  000CE6  0ED0               	movlw	208
  2464  000CE8  0100               	movlb	0	; () banked
  2465  000CEA  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  2466  000CEC  0EFF               	movlw	255
  2467  000CEE  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2468  000CF0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2469  000CF4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2470  000CF8  CFDE FFF6          	movff	postinc2,tblptrl
  2471  000CFC  CFDD FFF7          	movff	postdec2,tblptrh
  2472  000D00                     	if	0	;tblptru may be non-zero
  2473  000D00                     	endif
  2474  000D00                     	if	0	;tblptru may be non-zero
  2475  000D00                     	endif
  2476  000D00  0008               	tblrd		*
  2477  000D02  50F5               	movf	tablat,w,c
  2478  000D04  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2479  000D06  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2480  000D08  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  2481  000D0A  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2482  000D0C  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2483  000D0E  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2484  000D10  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2485  000D12  E10A               	bnz	u10560
  2486  000D14  0E0A               	movlw	10
  2487  000D16  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2488  000D18  A0D8               	btfss	status,0,c
  2489  000D1A  EF91  F006         	goto	u10561
  2490  000D1E  EF94  F006         	goto	u10560
  2491  000D22                     u10561:
  2492  000D22  0E01               	movlw	1
  2493  000D24  EF95  F006         	goto	u10570
  2494  000D28                     u10560:
  2495  000D28  0E00               	movlw	0
  2496  000D2A                     u10570:
  2497  000D2A  6FD3               	movwf	_vfpfcnvrt$946& (0+255),b
  2498  000D2C  6BD4               	clrf	(_vfpfcnvrt$946+1)& (0+255),b
  2499  000D2E                     
  2500                           ; BSR set to: 0
  2501  000D2E  51D3               	movf	_vfpfcnvrt$946& (0+255),w,b
  2502  000D30  11D4               	iorwf	(_vfpfcnvrt$946+1)& (0+255),w,b
  2503  000D32  A4D8               	btfss	status,2,c
  2504  000D34  EF9E  F006         	goto	u10581
  2505  000D38  EFA0  F006         	goto	u10580
  2506  000D3C                     u10581:
  2507  000D3C  EF6C  F006         	goto	l9041
  2508  000D40                     u10580:
  2509  000D40                     l9049:
  2510                           
  2511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2512  000D40  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2513  000D44  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2514  000D48  CFDE FFF6          	movff	postinc2,tblptrl
  2515  000D4C  CFDD FFF7          	movff	postdec2,tblptrh
  2516  000D50                     	if	0	;tblptru may be non-zero
  2517  000D50                     	endif
  2518  000D50                     	if	0	;tblptru may be non-zero
  2519  000D50                     	endif
  2520  000D50  0008               	tblrd		*
  2521  000D52  50F5               	movf	tablat,w,c
  2522  000D54  6E0C               	movwf	tolower@c^0,c
  2523  000D56  6A0D               	clrf	(tolower@c+1)^0,c
  2524  000D58  EC18  F021         	call	_tolower	;wreg free
  2525  000D5C  500C               	movf	?_tolower^0,w,c
  2526  000D5E  0100               	movlb	0	; () banked
  2527  000D60  6FDB               	movwf	vfpfcnvrt@ct& (0+255),b
  2528  000D62                     
  2529                           ; BSR set to: 0
  2530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2531  000D62  51DB               	movf	vfpfcnvrt@ct& (0+255),w,b
  2532  000D64  B4D8               	btfsc	status,2,c
  2533  000D66  EFB7  F006         	goto	u10591
  2534  000D6A  EFB9  F006         	goto	u10590
  2535  000D6E                     u10591:
  2536  000D6E  EFF3  F006         	goto	l9059
  2537  000D72                     u10590:
  2538  000D72                     
  2539                           ; BSR set to: 0
  2540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2541  000D72  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2542  000D76  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2543  000D7A  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2544  000D7E  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2545  000D82  0E01               	movlw	1
  2546  000D84  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2547  000D86  0E00               	movlw	0
  2548  000D88  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2549  000D8A  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2550  000D8E  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2551  000D92                     	if	0	;tblptru may be non-zero
  2552  000D92                     	endif
  2553  000D92                     	if	0	;tblptru may be non-zero
  2554  000D92                     	endif
  2555  000D92  0008               	tblrd		*
  2556  000D94  50F5               	movf	tablat,w,c
  2557  000D96  6E0C               	movwf	tolower@c^0,c
  2558  000D98  6A0D               	clrf	(tolower@c+1)^0,c
  2559  000D9A  EC18  F021         	call	_tolower	;wreg free
  2560  000D9E  500C               	movf	?_tolower^0,w,c
  2561  000DA0  0100               	movlb	0	; () banked
  2562  000DA2  6FDC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2563  000DA4                     
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2566  000DA4  51DC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2567  000DA6  B4D8               	btfsc	status,2,c
  2568  000DA8  EFD8  F006         	goto	u10601
  2569  000DAC  EFDA  F006         	goto	u10600
  2570  000DB0                     u10601:
  2571  000DB0  EFF3  F006         	goto	l9059
  2572  000DB4                     u10600:
  2573  000DB4                     
  2574                           ; BSR set to: 0
  2575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2576  000DB4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2577  000DB8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2578  000DBC  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2579  000DC0  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2580  000DC4  0E02               	movlw	2
  2581  000DC6  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2582  000DC8  0E00               	movlw	0
  2583  000DCA  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2584  000DCC  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2585  000DD0  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2586  000DD4                     	if	0	;tblptru may be non-zero
  2587  000DD4                     	endif
  2588  000DD4                     	if	0	;tblptru may be non-zero
  2589  000DD4                     	endif
  2590  000DD4  0008               	tblrd		*
  2591  000DD6  50F5               	movf	tablat,w,c
  2592  000DD8  6E0C               	movwf	tolower@c^0,c
  2593  000DDA  6A0D               	clrf	(tolower@c+1)^0,c
  2594  000DDC  EC18  F021         	call	_tolower	;wreg free
  2595  000DE0  500C               	movf	?_tolower^0,w,c
  2596  000DE2  0100               	movlb	0	; () banked
  2597  000DE4  6FDD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2598  000DE6                     l9059:
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2602  000DE6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2603  000DEA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2604  000DEE  CFDE FFF6          	movff	postinc2,tblptrl
  2605  000DF2  CFDD FFF7          	movff	postdec2,tblptrh
  2606  000DF6                     	if	0	;tblptru may be non-zero
  2607  000DF6                     	endif
  2608  000DF6                     	if	0	;tblptru may be non-zero
  2609  000DF6                     	endif
  2610  000DF6  0008               	tblrd		*
  2611  000DF8  50F5               	movf	tablat,w,c
  2612  000DFA  0A64               	xorlw	100
  2613  000DFC  B4D8               	btfsc	status,2,c
  2614  000DFE  EF03  F007         	goto	u10611
  2615  000E02  EF05  F007         	goto	u10610
  2616  000E06                     u10611:
  2617  000E06  EF17  F007         	goto	l9063
  2618  000E0A                     u10610:
  2619  000E0A                     
  2620                           ; BSR set to: 0
  2621  000E0A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2622  000E0E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2623  000E12  CFDE FFF6          	movff	postinc2,tblptrl
  2624  000E16  CFDD FFF7          	movff	postdec2,tblptrh
  2625  000E1A                     	if	0	;tblptru may be non-zero
  2626  000E1A                     	endif
  2627  000E1A                     	if	0	;tblptru may be non-zero
  2628  000E1A                     	endif
  2629  000E1A  0008               	tblrd		*
  2630  000E1C  50F5               	movf	tablat,w,c
  2631  000E1E  0A69               	xorlw	105
  2632  000E20  A4D8               	btfss	status,2,c
  2633  000E22  EF15  F007         	goto	u10621
  2634  000E26  EF17  F007         	goto	u10620
  2635  000E2A                     u10621:
  2636  000E2A  EF57  F007         	goto	l9069
  2637  000E2E                     u10620:
  2638  000E2E                     l9063:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2642  000E2E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2643  000E32  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2644  000E36  2ADE               	incf	postinc2,f,c
  2645  000E38  0E00               	movlw	0
  2646  000E3A  22DD               	addwfc	postdec2,f,c
  2647                           
  2648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2649  000E3C  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2650  000E40  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2651  000E44  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2652  000E48  0E02               	movlw	2
  2653  000E4A  26DE               	addwf	postinc2,f,c
  2654  000E4C  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2655  000E50  0E00               	movlw	0
  2656  000E52  22DD               	addwfc	postdec2,f,c
  2657  000E54  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2658  000E58  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2659  000E5C  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  2660  000E60  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  2661  000E64  0E00               	movlw	0
  2662  000E66  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2663  000E68  0EFF               	movlw	-1
  2664  000E6A  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2665  000E6C  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2666  000E6E  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2667  000E70  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2668  000E72  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2669  000E74  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2670  000E76                     
  2671                           ; BSR set to: 0
  2672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2673  000E76  C0C1  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  2674  000E7A  C0C2  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2675  000E7E  C0CB  F023         	movff	vfpfcnvrt@ll,dtoa@d
  2676  000E82  C0CC  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2677  000E86  C0CD  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2678  000E8A  C0CE  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2679  000E8E  C0CF  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2680  000E92  C0D0  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2681  000E96  C0D1  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2682  000E9A  C0D2  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2683  000E9E  ECA3  F010         	call	_dtoa	;wreg free
  2684  000EA2  C021  F0C1         	movff	?_dtoa,?_vfpfcnvrt
  2685  000EA6  C022  F0C2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2686  000EAA  EF86  F008         	goto	l911
  2687  000EAE                     l9069:
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2691  000EAE  0E66               	movlw	102
  2692  000EB0  19DB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2693  000EB2  A4D8               	btfss	status,2,c
  2694  000EB4  EF5E  F007         	goto	u10631
  2695  000EB8  EF60  F007         	goto	u10630
  2696  000EBC                     u10631:
  2697  000EBC  EFA0  F007         	goto	l9081
  2698  000EC0                     u10630:
  2699  000EC0                     
  2700                           ; BSR set to: 0
  2701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2702  000EC0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2703  000EC4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2704  000EC8  CFDE FFF6          	movff	postinc2,tblptrl
  2705  000ECC  CFDD FFF7          	movff	postdec2,tblptrh
  2706  000ED0                     	if	0	;tblptru may be non-zero
  2707  000ED0                     	endif
  2708  000ED0                     	if	0	;tblptru may be non-zero
  2709  000ED0                     	endif
  2710  000ED0  0008               	tblrd		*
  2711  000ED2  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  2712  000ED6                     
  2713                           ; BSR set to: 0
  2714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2715  000ED6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2716  000EDA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2717  000EDE  2ADE               	incf	postinc2,f,c
  2718  000EE0  0E00               	movlw	0
  2719  000EE2  22DD               	addwfc	postdec2,f,c
  2720  000EE4                     
  2721                           ; BSR set to: 0
  2722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2723  000EE4  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2724  000EE8  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2725  000EEC  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2726  000EF0  0E04               	movlw	4
  2727  000EF2  26DE               	addwf	postinc2,f,c
  2728  000EF4  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2729  000EF8  0E00               	movlw	0
  2730  000EFA  22DD               	addwfc	postdec2,f,c
  2731  000EFC  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2732  000F00  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2733  000F04  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  2734  000F08  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  2735  000F0C  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  2736  000F10  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  2737  000F14                     l9077:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2741  000F14  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  2742  000F18  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2743  000F1C  C0D7  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  2744  000F20  C0D8  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2745  000F24  C0D9  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2746  000F28  C0DA  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2747  000F2C  C0DE  F083         	movff	vfpfcnvrt@c,efgtoa@c
  2748  000F30  EC09  F000         	call	_efgtoa	;wreg free
  2749  000F34  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  2750  000F38  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2751  000F3C  EF86  F008         	goto	l911
  2752  000F40                     l9081:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2756  000F40  0EDB               	movlw	low vfpfcnvrt@ct
  2757  000F42  6E06               	movwf	strncmp@_l^0,c
  2758  000F44  0E00               	movlw	high vfpfcnvrt@ct
  2759  000F46  6E07               	movwf	(strncmp@_l+1)^0,c
  2760  000F48  0EFB               	movlw	low STR_22
  2761  000F4A  6E08               	movwf	strncmp@_r^0,c
  2762  000F4C  0E7F               	movlw	high STR_22
  2763  000F4E  6E09               	movwf	(strncmp@_r+1)^0,c
  2764  000F50  0E00               	movlw	0
  2765  000F52  6E0B               	movwf	(strncmp@n+1)^0,c
  2766  000F54  0E02               	movlw	2
  2767  000F56  6E0A               	movwf	strncmp@n^0,c
  2768  000F58  EC94  F01C         	call	_strncmp	;wreg free
  2769  000F5C  5006               	movf	?_strncmp^0,w,c
  2770  000F5E  1007               	iorwf	(?_strncmp+1)^0,w,c
  2771  000F60  A4D8               	btfss	status,2,c
  2772  000F62  EFB5  F007         	goto	u10641
  2773  000F66  EFB7  F007         	goto	u10640
  2774  000F6A                     u10641:
  2775  000F6A  EF33  F008         	goto	l9097
  2776  000F6E                     u10640:
  2777  000F6E                     
  2778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2779  000F6E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2780  000F72  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2781  000F76  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2782  000F7A  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2783  000F7E  0E01               	movlw	1
  2784  000F80  0100               	movlb	0	; () banked
  2785  000F82  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2786  000F84  0E00               	movlw	0
  2787  000F86  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2788  000F88  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2789  000F8C  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2790  000F90                     	if	0	;tblptru may be non-zero
  2791  000F90                     	endif
  2792  000F90                     	if	0	;tblptru may be non-zero
  2793  000F90                     	endif
  2794  000F90  0008               	tblrd		*
  2795  000F92  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  2796  000F96  0EBF               	movlw	191
  2797  000F98  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  2798  000F9A  0EFF               	movlw	255
  2799  000F9C  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2800  000F9E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2801  000FA2  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2802  000FA6  CFDE FFF6          	movff	postinc2,tblptrl
  2803  000FAA  CFDD FFF7          	movff	postdec2,tblptrh
  2804  000FAE                     	if	0	;tblptru may be non-zero
  2805  000FAE                     	endif
  2806  000FAE                     	if	0	;tblptru may be non-zero
  2807  000FAE                     	endif
  2808  000FAE  0008               	tblrd		*
  2809  000FB0  50F5               	movf	tablat,w,c
  2810  000FB2  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2811  000FB4  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2812  000FB6  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  2813  000FB8  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2814  000FBA  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2815  000FBC  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2816  000FBE  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2817  000FC0  E10A               	bnz	u10650
  2818  000FC2  0E1A               	movlw	26
  2819  000FC4  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2820  000FC6  A0D8               	btfss	status,0,c
  2821  000FC8  EFE8  F007         	goto	u10651
  2822  000FCC  EFEB  F007         	goto	u10650
  2823  000FD0                     u10651:
  2824  000FD0  0E01               	movlw	1
  2825  000FD2  EFEC  F007         	goto	u10660
  2826  000FD6                     u10650:
  2827  000FD6  0E00               	movlw	0
  2828  000FD8                     u10660:
  2829  000FD8  6FD5               	movwf	_vfpfcnvrt$951& (0+255),b
  2830  000FDA  6BD6               	clrf	(_vfpfcnvrt$951+1)& (0+255),b
  2831  000FDC                     
  2832                           ; BSR set to: 0
  2833  000FDC  51D5               	movf	_vfpfcnvrt$951& (0+255),w,b
  2834  000FDE  11D6               	iorwf	(_vfpfcnvrt$951+1)& (0+255),w,b
  2835  000FE0  B4D8               	btfsc	status,2,c
  2836  000FE2  EFF5  F007         	goto	u10671
  2837  000FE6  EFF7  F007         	goto	u10670
  2838  000FEA                     u10671:
  2839  000FEA  EF11  F008         	goto	l9091
  2840  000FEE                     u10670:
  2841  000FEE                     
  2842                           ; BSR set to: 0
  2843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2844  000FEE  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2845  000FF2  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2846  000FF6  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2847  000FFA  0E04               	movlw	4
  2848  000FFC  26DE               	addwf	postinc2,f,c
  2849  000FFE  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2850  001002  0E00               	movlw	0
  2851  001004  22DD               	addwfc	postdec2,f,c
  2852  001006  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2853  00100A  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2854  00100E  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  2855  001012  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  2856  001016  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  2857  00101A  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  2858                           
  2859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2860  00101E  EF29  F008         	goto	l919
  2861  001022                     l9091:
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2865  001022  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2866  001026  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2867  00102A  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2868  00102E  0E04               	movlw	4
  2869  001030  26DE               	addwf	postinc2,f,c
  2870  001032  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2871  001036  0E00               	movlw	0
  2872  001038  22DD               	addwfc	postdec2,f,c
  2873  00103A  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2874  00103E  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2875  001042  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  2876  001046  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  2877  00104A  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  2878  00104E  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  2879  001052                     l919:
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2883  001052  0E02               	movlw	2
  2884  001054  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2885  001058  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2886  00105C  26DE               	addwf	postinc2,f,c
  2887  00105E  0E00               	movlw	0
  2888  001060  22DD               	addwfc	postdec2,f,c
  2889  001062  EF8A  F007         	goto	l9077
  2890  001066                     l9097:
  2891                           
  2892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2893  001066  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2894  00106A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2895  00106E  CFDE FFF6          	movff	postinc2,tblptrl
  2896  001072  CFDD FFF7          	movff	postdec2,tblptrh
  2897  001076                     	if	0	;tblptru may be non-zero
  2898  001076                     	endif
  2899  001076                     	if	0	;tblptru may be non-zero
  2900  001076                     	endif
  2901  001076  0008               	tblrd		*
  2902  001078  50F5               	movf	tablat,w,c
  2903  00107A  0A25               	xorlw	37
  2904  00107C  A4D8               	btfss	status,2,c
  2905  00107E  EF43  F008         	goto	u10681
  2906  001082  EF45  F008         	goto	u10680
  2907  001086                     u10681:
  2908  001086  EF5D  F008         	goto	l9107
  2909  00108A                     u10680:
  2910  00108A                     
  2911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2912  00108A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2913  00108E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2914  001092  2ADE               	incf	postinc2,f,c
  2915  001094  0E00               	movlw	0
  2916  001096  22DD               	addwfc	postdec2,f,c
  2917  001098                     
  2918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2919  001098  0E00               	movlw	0
  2920  00109A  6E07               	movwf	(fputc@c+1)^0,c
  2921  00109C  0E25               	movlw	37
  2922  00109E  6E06               	movwf	fputc@c^0,c
  2923  0010A0  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2924  0010A4  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2925  0010A8  ECFF  F01C         	call	_fputc	;wreg free
  2926  0010AC                     l9103:
  2927                           
  2928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2929  0010AC  0E00               	movlw	0
  2930  0010AE  0100               	movlb	0	; () banked
  2931  0010B0  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2932  0010B2  0E01               	movlw	1
  2933  0010B4  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  2934  0010B6  EF86  F008         	goto	l911
  2935  0010BA                     l9107:
  2936                           
  2937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2938  0010BA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2939  0010BE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2940  0010C2  2ADE               	incf	postinc2,f,c
  2941  0010C4  0E00               	movlw	0
  2942  0010C6  22DD               	addwfc	postdec2,f,c
  2943  0010C8                     
  2944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2945  0010C8  0E00               	movlw	0
  2946  0010CA  0100               	movlb	0	; () banked
  2947  0010CC  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2948  0010CE  0E00               	movlw	0
  2949  0010D0  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  2950  0010D2  EF86  F008         	goto	l911
  2951  0010D6                     l9113:
  2952                           
  2953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2954  0010D6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2955  0010DA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2956  0010DE  CFDE FFF6          	movff	postinc2,tblptrl
  2957  0010E2  CFDD FFF7          	movff	postdec2,tblptrh
  2958  0010E6                     	if	0	;tblptru may be non-zero
  2959  0010E6                     	endif
  2960  0010E6                     	if	0	;tblptru may be non-zero
  2961  0010E6                     	endif
  2962  0010E6  0008               	tblrd		*
  2963  0010E8  50F5               	movf	tablat,w,c
  2964  0010EA  6E06               	movwf	fputc@c^0,c
  2965  0010EC  6A07               	clrf	(fputc@c+1)^0,c
  2966  0010EE  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2967  0010F2  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2968  0010F6  ECFF  F01C         	call	_fputc	;wreg free
  2969  0010FA                     
  2970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2971  0010FA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2972  0010FE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2973  001102  2ADE               	incf	postinc2,f,c
  2974  001104  0E00               	movlw	0
  2975  001106  22DD               	addwfc	postdec2,f,c
  2976  001108  EF56  F008         	goto	l9103
  2977  00110C                     l911:
  2978  00110C  0012               	return		;funcret
  2979  00110E                     __end_of_vfpfcnvrt:
  2980                           	opt callstack 0
  2981                           
  2982 ;; *************** function _strncmp *****************
  2983 ;; Defined at:
  2984 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  2987 ;;		 -> vfpfcnvrt@ct(3), 
  2988 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  2989 ;;		 -> STR_24(3), 
  2990 ;;  n               2    9[COMRAM] unsigned int 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  r               2   14[COMRAM] PTR const unsigned char 
  2993 ;;		 -> STR_24(3), 
  2994 ;;  l               2   12[COMRAM] PTR const unsigned char 
  2995 ;;		 -> vfpfcnvrt@ct(3), 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  2    5[COMRAM] int 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3005 ;;      Params:         6       0       0       0       0       0       0       0       0
  3006 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3007 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3008 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3009 ;;Total ram usage:       11 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    2
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_vfpfcnvrt
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text5
  3020  003928                     __ptext5:
  3021                           	opt callstack 0
  3022  003928                     _strncmp:
  3023                           	opt callstack 24
  3024  003928  C006  F00D         	movff	strncmp@_l,strncmp@l
  3025  00392C  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  3026  003930  C008  F00F         	movff	strncmp@_r,strncmp@r
  3027  003934  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  3028  003938  060A               	decf	strncmp@n^0,f,c
  3029  00393A  A0D8               	btfss	status,0,c
  3030  00393C  060B               	decf	(strncmp@n+1)^0,f,c
  3031  00393E  280A               	incf	strncmp@n^0,w,c
  3032  003940  E106               	bnz	u10481
  3033  003942  280B               	incf	(strncmp@n+1)^0,w,c
  3034  003944  A4D8               	btfss	status,2,c
  3035  003946  EFA7  F01C         	goto	u10481
  3036  00394A  EFA9  F01C         	goto	u10480
  3037  00394E                     u10481:
  3038  00394E  EFB6  F01C         	goto	l8985
  3039  003952                     u10480:
  3040  003952  0E00               	movlw	0
  3041  003954  6E07               	movwf	(?_strncmp+1)^0,c
  3042  003956  0E00               	movlw	0
  3043  003958  6E06               	movwf	?_strncmp^0,c
  3044  00395A  EFFE  F01C         	goto	l1743
  3045  00395E                     l8983:
  3046  00395E  4A0D               	infsnz	strncmp@l^0,f,c
  3047  003960  2A0E               	incf	(strncmp@l+1)^0,f,c
  3048  003962  4A0F               	infsnz	strncmp@r^0,f,c
  3049  003964  2A10               	incf	(strncmp@r+1)^0,f,c
  3050  003966  060A               	decf	strncmp@n^0,f,c
  3051  003968  A0D8               	btfss	status,0,c
  3052  00396A  060B               	decf	(strncmp@n+1)^0,f,c
  3053  00396C                     l8985:
  3054  00396C  C00D  FFD9         	movff	strncmp@l,fsr2l
  3055  003970  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  3056  003974  50DF               	movf	indf2,w,c
  3057  003976  B4D8               	btfsc	status,2,c
  3058  003978  EFC0  F01C         	goto	u10491
  3059  00397C  EFC2  F01C         	goto	u10490
  3060  003980                     u10491:
  3061  003980  EFED  F01C         	goto	l8993
  3062  003984                     u10490:
  3063  003984  C00F  FFF6         	movff	strncmp@r,tblptrl
  3064  003988  C010  FFF7         	movff	strncmp@r+1,tblptrh
  3065  00398C                     	if	0	;tblptru may be non-zero
  3066  00398C                     	endif
  3067  00398C                     	if	0	;tblptru may be non-zero
  3068  00398C                     	endif
  3069  00398C  0008               	tblrd		*
  3070  00398E  50F5               	movf	tablat,w,c
  3071  003990  0900               	iorlw	0
  3072  003992  B4D8               	btfsc	status,2,c
  3073  003994  EFCE  F01C         	goto	u10501
  3074  003998  EFD0  F01C         	goto	u10500
  3075  00399C                     u10501:
  3076  00399C  EFED  F01C         	goto	l8993
  3077  0039A0                     u10500:
  3078  0039A0  500A               	movf	strncmp@n^0,w,c
  3079  0039A2  100B               	iorwf	(strncmp@n+1)^0,w,c
  3080  0039A4  B4D8               	btfsc	status,2,c
  3081  0039A6  EFD7  F01C         	goto	u10511
  3082  0039AA  EFD9  F01C         	goto	u10510
  3083  0039AE                     u10511:
  3084  0039AE  EFED  F01C         	goto	l8993
  3085  0039B2                     u10510:
  3086  0039B2  C00D  FFD9         	movff	strncmp@l,fsr2l
  3087  0039B6  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  3088  0039BA  50DF               	movf	indf2,w,c
  3089  0039BC  6E0C               	movwf	??_strncmp^0,c
  3090  0039BE  C00F  FFF6         	movff	strncmp@r,tblptrl
  3091  0039C2  C010  FFF7         	movff	strncmp@r+1,tblptrh
  3092  0039C6                     	if	0	;tblptru may be non-zero
  3093  0039C6                     	endif
  3094  0039C6                     	if	0	;tblptru may be non-zero
  3095  0039C6                     	endif
  3096  0039C6  0008               	tblrd		*
  3097  0039C8  50F5               	movf	tablat,w,c
  3098  0039CA  180C               	xorwf	??_strncmp^0,w,c
  3099  0039CC  B4D8               	btfsc	status,2,c
  3100  0039CE  EFEB  F01C         	goto	u10521
  3101  0039D2  EFED  F01C         	goto	u10520
  3102  0039D6                     u10521:
  3103  0039D6  EFAF  F01C         	goto	l8983
  3104  0039DA                     u10520:
  3105  0039DA                     l8993:
  3106  0039DA  C00D  FFD9         	movff	strncmp@l,fsr2l
  3107  0039DE  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  3108  0039E2  50DF               	movf	indf2,w,c
  3109  0039E4  6E0C               	movwf	??_strncmp^0,c
  3110  0039E6  C00F  FFF6         	movff	strncmp@r,tblptrl
  3111  0039EA  C010  FFF7         	movff	strncmp@r+1,tblptrh
  3112  0039EE                     	if	0	;tblptru may be non-zero
  3113  0039EE                     	endif
  3114  0039EE                     	if	0	;tblptru may be non-zero
  3115  0039EE                     	endif
  3116  0039EE  0008               	tblrd		*
  3117  0039F0  50F5               	movf	tablat,w,c
  3118  0039F2  5C0C               	subwf	??_strncmp^0,w,c
  3119  0039F4  6E06               	movwf	?_strncmp^0,c
  3120  0039F6  6A07               	clrf	(?_strncmp+1)^0,c
  3121  0039F8  A0D8               	btfss	status,0,c
  3122  0039FA  0607               	decf	(?_strncmp+1)^0,f,c
  3123  0039FC                     l1743:
  3124  0039FC  0012               	return		;funcret
  3125  0039FE                     __end_of_strncmp:
  3126                           	opt callstack 0
  3127                           
  3128 ;; *************** function _efgtoa *****************
  3129 ;; Defined at:
  3130 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  3133 ;;		 -> sprintf@f(6), 
  3134 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  3135 ;;  c               1   35[BANK0 ] unsigned char 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  u               4   93[BANK0 ] unsigned char 
  3138 ;;  g               4   85[BANK0 ] unsigned char 
  3139 ;;  l               4   79[BANK0 ] unsigned char 
  3140 ;;  h               4   75[BANK0 ] unsigned char 
  3141 ;;  ou              4   41[BANK0 ] unsigned char 
  3142 ;;  n               2   91[BANK0 ] int 
  3143 ;;  e               2   89[BANK0 ] int 
  3144 ;;  i               2   83[BANK0 ] int 
  3145 ;;  w               2   72[BANK0 ] int 
  3146 ;;  p               2   69[BANK0 ] int 
  3147 ;;  sign            2   67[BANK0 ] int 
  3148 ;;  d               2   65[BANK0 ] int 
  3149 ;;  ne              2   63[BANK0 ] int 
  3150 ;;  m               2   61[BANK0 ] int 
  3151 ;;  pp              2   59[BANK0 ] int 
  3152 ;;  t               2   57[BANK0 ] int 
  3153 ;;  mode            1   74[BANK0 ] unsigned char 
  3154 ;;  nmode           1   71[BANK0 ] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  2   29[BANK0 ] int 
  3157 ;; Registers used:
  3158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3164 ;;      Params:         0       7       0       0       0       0       0       0       0
  3165 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3166 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3167 ;;      Totals:         0      68       0       0       0       0       0       0       0
  3168 ;;Total ram usage:       68 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    6
  3171 ;; This function calls:
  3172 ;;		___awdiv
  3173 ;;		___awmod
  3174 ;;		___fladd
  3175 ;;		___fldiv
  3176 ;;		___fleq
  3177 ;;		___flge
  3178 ;;		___flmul
  3179 ;;		___flneg
  3180 ;;		___flsub
  3181 ;;		___fltol
  3182 ;;		___fpclassifyf
  3183 ;;		_floorf
  3184 ;;		_isupper
  3185 ;;		_pad
  3186 ;;		_strcpy
  3187 ;;		_tolower
  3188 ;; This function is called by:
  3189 ;;		_vfpfcnvrt
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text6
  3194  000012                     __ptext6:
  3195                           	opt callstack 0
  3196  000012                     _efgtoa:
  3197                           	opt callstack 20
  3198  000012                     
  3199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3200  000012  0E00               	movlw	0
  3201  000014  0100               	movlb	0	; () banked
  3202  000016  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  3203  000018  0E00               	movlw	0
  3204  00001A  6FA3               	movwf	efgtoa@sign& (0+255),b
  3205  00001C                     
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3208  00001C  C07F  F0B5         	movff	efgtoa@f,efgtoa@g
  3209  000020  C080  F0B6         	movff	efgtoa@f+1,efgtoa@g+1
  3210  000024  C081  F0B7         	movff	efgtoa@f+2,efgtoa@g+2
  3211  000028  C082  F0B8         	movff	efgtoa@f+3,efgtoa@g+3
  3212  00002C                     
  3213                           ; BSR set to: 0
  3214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3215  00002C  BFB8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3216  00002E  EF1D  F000         	goto	u9890
  3217  000032  EF1B  F000         	goto	u9891
  3218  000036                     u9891:
  3219  000036  EF33  F000         	goto	l8647
  3220  00003A                     u9890:
  3221  00003A                     
  3222                           ; BSR set to: 0
  3223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3224  00003A  0E00               	movlw	0
  3225  00003C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  3226  00003E  0E01               	movlw	1
  3227  000040  6FA3               	movwf	efgtoa@sign& (0+255),b
  3228  000042                     
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3231  000042  C0B5  F006         	movff	efgtoa@g,___flneg@f1
  3232  000046  C0B6  F007         	movff	efgtoa@g+1,___flneg@f1+1
  3233  00004A  C0B7  F008         	movff	efgtoa@g+2,___flneg@f1+2
  3234  00004E  C0B8  F009         	movff	efgtoa@g+3,___flneg@f1+3
  3235  000052  EC59  F023         	call	___flneg	;wreg free
  3236  000056  C006  F0B5         	movff	?___flneg,efgtoa@g
  3237  00005A  C007  F0B6         	movff	?___flneg+1,efgtoa@g+1
  3238  00005E  C008  F0B7         	movff	?___flneg+2,efgtoa@g+2
  3239  000062  C009  F0B8         	movff	?___flneg+3,efgtoa@g+3
  3240  000066                     l8647:
  3241                           
  3242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3243  000066  0E00               	movlw	0
  3244  000068  0100               	movlb	0	; () banked
  3245  00006A  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  3246  00006C  0E00               	movlw	0
  3247  00006E  6FBB               	movwf	efgtoa@n& (0+255),b
  3248  000070                     
  3249                           ; BSR set to: 0
  3250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3251  000070  C12A  F0A8         	movff	_width,efgtoa@w
  3252  000074  C12B  F0A9         	movff	_width+1,efgtoa@w+1
  3253  000078                     
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3256  000078  51A3               	movf	efgtoa@sign& (0+255),w,b
  3257  00007A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3258  00007C  A4D8               	btfss	status,2,c
  3259  00007E  EF43  F000         	goto	u9901
  3260  000082  EF45  F000         	goto	u9900
  3261  000086                     u9901:
  3262  000086  EF4D  F000         	goto	l8655
  3263  00008A                     u9900:
  3264  00008A                     
  3265                           ; BSR set to: 0
  3266  00008A  0101               	movlb	1	; () banked
  3267  00008C  A52E               	btfss	_flags& (0+255),2,b
  3268  00008E  EF4B  F000         	goto	u9911
  3269  000092  EF4D  F000         	goto	u9910
  3270  000096                     u9911:
  3271  000096  EF68  F000         	goto	l8667
  3272  00009A                     u9910:
  3273  00009A                     l8655:
  3274                           
  3275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3276  00009A  0100               	movlb	0	; () banked
  3277  00009C  51A3               	movf	efgtoa@sign& (0+255),w,b
  3278  00009E  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3279  0000A0  A4D8               	btfss	status,2,c
  3280  0000A2  EF55  F000         	goto	u9921
  3281  0000A6  EF57  F000         	goto	u9920
  3282  0000AA                     u9921:
  3283  0000AA  EF5D  F000         	goto	l8659
  3284  0000AE                     u9920:
  3285  0000AE                     
  3286                           ; BSR set to: 0
  3287  0000AE  0E00               	movlw	0
  3288  0000B0  6F8E               	movwf	(_efgtoa$921+1)& (0+255),b
  3289  0000B2  0E2B               	movlw	43
  3290  0000B4  6F8D               	movwf	_efgtoa$921& (0+255),b
  3291  0000B6  EF61  F000         	goto	l8661
  3292  0000BA                     l8659:
  3293                           
  3294                           ; BSR set to: 0
  3295  0000BA  0E00               	movlw	0
  3296  0000BC  6F8E               	movwf	(_efgtoa$921+1)& (0+255),b
  3297  0000BE  0E2D               	movlw	45
  3298  0000C0  6F8D               	movwf	_efgtoa$921& (0+255),b
  3299  0000C2                     l8661:
  3300                           
  3301                           ; BSR set to: 0
  3302  0000C2  C08D  F13A         	movff	_efgtoa$921,_dbuf
  3303  0000C6                     
  3304                           ; BSR set to: 0
  3305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3306  0000C6  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  3307  0000C8  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  3308  0000CA                     
  3309                           ; BSR set to: 0
  3310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3311  0000CA  07A8               	decf	efgtoa@w& (0+255),f,b
  3312  0000CC  A0D8               	btfss	status,0,c
  3313  0000CE  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  3314  0000D0                     l8667:
  3315                           
  3316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3317  0000D0  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  3318  0000D4  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3319  0000D8  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3320  0000DC  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3321  0000E0  EC15  F01C         	call	___fpclassifyf	;wreg free
  3322  0000E4  0406               	decf	?___fpclassifyf^0,w,c
  3323  0000E6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3324  0000E8  A4D8               	btfss	status,2,c
  3325  0000EA  EF79  F000         	goto	u9931
  3326  0000EE  EF7B  F000         	goto	u9930
  3327  0000F2                     u9931:
  3328  0000F2  EFD2  F000         	goto	l8685
  3329  0000F6                     u9930:
  3330  0000F6  0EBF               	movlw	191
  3331  0000F8  0100               	movlb	0	; () banked
  3332  0000FA  6F84               	movwf	??_efgtoa& (0+255),b
  3333  0000FC  0EFF               	movlw	255
  3334  0000FE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3335  000100  5183               	movf	efgtoa@c& (0+255),w,b
  3336  000102  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  3337  000104  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  3338  000106  5184               	movf	??_efgtoa& (0+255),w,b
  3339  000108  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3340  00010A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3341  00010C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3342  00010E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3343  000110  E10A               	bnz	u9940
  3344  000112  0E1A               	movlw	26
  3345  000114  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3346  000116  A0D8               	btfss	status,0,c
  3347  000118  EF90  F000         	goto	u9941
  3348  00011C  EF93  F000         	goto	u9940
  3349  000120                     u9941:
  3350  000120  0E01               	movlw	1
  3351  000122  EF94  F000         	goto	u9950
  3352  000126                     u9940:
  3353  000126  0E00               	movlw	0
  3354  000128                     u9950:
  3355  000128  6F8F               	movwf	_efgtoa$922& (0+255),b
  3356  00012A  6B90               	clrf	(_efgtoa$922+1)& (0+255),b
  3357  00012C                     
  3358                           ; BSR set to: 0
  3359  00012C  518F               	movf	_efgtoa$922& (0+255),w,b
  3360  00012E  1190               	iorwf	(_efgtoa$922+1)& (0+255),w,b
  3361  000130  B4D8               	btfsc	status,2,c
  3362  000132  EF9D  F000         	goto	u9961
  3363  000136  EF9F  F000         	goto	u9960
  3364  00013A                     u9961:
  3365  00013A  EFAD  F000         	goto	l8677
  3366  00013E                     u9960:
  3367  00013E                     
  3368                           ; BSR set to: 0
  3369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3370  00013E  0E3A               	movlw	low _dbuf
  3371  000140  25BB               	addwf	efgtoa@n& (0+255),w,b
  3372  000142  6E06               	movwf	strcpy@dest^0,c
  3373  000144  0E01               	movlw	high _dbuf
  3374  000146  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3375  000148  6E07               	movwf	(strcpy@dest+1)^0,c
  3376  00014A  0EEB               	movlw	low STR_14
  3377  00014C  6E08               	movwf	strcpy@src^0,c
  3378  00014E  0E7F               	movlw	high STR_14
  3379  000150  6E09               	movwf	(strcpy@src+1)^0,c
  3380  000152  EC77  F021         	call	_strcpy	;wreg free
  3381                           
  3382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3383  000156  EFB9  F000         	goto	l8679
  3384  00015A                     l8677:
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3388  00015A  0E3A               	movlw	low _dbuf
  3389  00015C  25BB               	addwf	efgtoa@n& (0+255),w,b
  3390  00015E  6E06               	movwf	strcpy@dest^0,c
  3391  000160  0E01               	movlw	high _dbuf
  3392  000162  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3393  000164  6E07               	movwf	(strcpy@dest+1)^0,c
  3394  000166  0EF3               	movlw	low STR_15
  3395  000168  6E08               	movwf	strcpy@src^0,c
  3396  00016A  0E7F               	movlw	high STR_15
  3397  00016C  6E09               	movwf	(strcpy@src+1)^0,c
  3398  00016E  EC77  F021         	call	_strcpy	;wreg free
  3399  000172                     l8679:
  3400                           
  3401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3402  000172  0100               	movlb	0	; () banked
  3403  000174  0EFD               	movlw	253
  3404  000176  27A8               	addwf	efgtoa@w& (0+255),f,b
  3405  000178  0EFF               	movlw	255
  3406  00017A  23A9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3407  00017C                     l8681:
  3408                           
  3409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3410  00017C  C07D  F016         	movff	efgtoa@fp,pad@fp
  3411  000180  C07E  F017         	movff	efgtoa@fp+1,pad@fp+1
  3412  000184  0E3A               	movlw	low _dbuf
  3413  000186  6E18               	movwf	pad@buf^0,c
  3414  000188  0E01               	movlw	high _dbuf
  3415  00018A  6E19               	movwf	(pad@buf+1)^0,c
  3416  00018C  C0A8  F01A         	movff	efgtoa@w,pad@p
  3417  000190  C0A9  F01B         	movff	efgtoa@w+1,pad@p+1
  3418  000194  EC64  F01D         	call	_pad	;wreg free
  3419  000198  C016  F07D         	movff	?_pad,?_efgtoa
  3420  00019C  C017  F07E         	movff	?_pad+1,?_efgtoa+1
  3421  0001A0  EFEB  F005         	goto	l819
  3422  0001A4                     l8685:
  3423                           
  3424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3425  0001A4  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  3426  0001A8  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3427  0001AC  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3428  0001B0  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3429  0001B4  EC15  F01C         	call	___fpclassifyf	;wreg free
  3430  0001B8  5006               	movf	?___fpclassifyf^0,w,c
  3431  0001BA  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3432  0001BC  A4D8               	btfss	status,2,c
  3433  0001BE  EFE3  F000         	goto	u9971
  3434  0001C2  EFE5  F000         	goto	u9970
  3435  0001C6                     u9971:
  3436  0001C6  EF25  F001         	goto	l8703
  3437  0001CA                     u9970:
  3438  0001CA  0EBF               	movlw	191
  3439  0001CC  0100               	movlb	0	; () banked
  3440  0001CE  6F84               	movwf	??_efgtoa& (0+255),b
  3441  0001D0  0EFF               	movlw	255
  3442  0001D2  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3443  0001D4  5183               	movf	efgtoa@c& (0+255),w,b
  3444  0001D6  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  3445  0001D8  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  3446  0001DA  5184               	movf	??_efgtoa& (0+255),w,b
  3447  0001DC  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3448  0001DE  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3449  0001E0  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3450  0001E2  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3451  0001E4  E10A               	bnz	u9980
  3452  0001E6  0E1A               	movlw	26
  3453  0001E8  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3454  0001EA  A0D8               	btfss	status,0,c
  3455  0001EC  EFFA  F000         	goto	u9981
  3456  0001F0  EFFD  F000         	goto	u9980
  3457  0001F4                     u9981:
  3458  0001F4  0E01               	movlw	1
  3459  0001F6  EFFE  F000         	goto	u9990
  3460  0001FA                     u9980:
  3461  0001FA  0E00               	movlw	0
  3462  0001FC                     u9990:
  3463  0001FC  6F91               	movwf	_efgtoa$926& (0+255),b
  3464  0001FE  6B92               	clrf	(_efgtoa$926+1)& (0+255),b
  3465  000200                     
  3466                           ; BSR set to: 0
  3467  000200  5191               	movf	_efgtoa$926& (0+255),w,b
  3468  000202  1192               	iorwf	(_efgtoa$926+1)& (0+255),w,b
  3469  000204  B4D8               	btfsc	status,2,c
  3470  000206  EF07  F001         	goto	u10001
  3471  00020A  EF09  F001         	goto	u10000
  3472  00020E                     u10001:
  3473  00020E  EF17  F001         	goto	l8695
  3474  000212                     u10000:
  3475  000212                     
  3476                           ; BSR set to: 0
  3477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3478  000212  0E3A               	movlw	low _dbuf
  3479  000214  25BB               	addwf	efgtoa@n& (0+255),w,b
  3480  000216  6E06               	movwf	strcpy@dest^0,c
  3481  000218  0E01               	movlw	high _dbuf
  3482  00021A  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3483  00021C  6E07               	movwf	(strcpy@dest+1)^0,c
  3484  00021E  0EEF               	movlw	low STR_18
  3485  000220  6E08               	movwf	strcpy@src^0,c
  3486  000222  0E7F               	movlw	high STR_18
  3487  000224  6E09               	movwf	(strcpy@src+1)^0,c
  3488  000226  EC77  F021         	call	_strcpy	;wreg free
  3489                           
  3490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3491  00022A  EFB9  F000         	goto	l8679
  3492  00022E                     l8695:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3496  00022E  0E3A               	movlw	low _dbuf
  3497  000230  25BB               	addwf	efgtoa@n& (0+255),w,b
  3498  000232  6E06               	movwf	strcpy@dest^0,c
  3499  000234  0E01               	movlw	high _dbuf
  3500  000236  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3501  000238  6E07               	movwf	(strcpy@dest+1)^0,c
  3502  00023A  0EF7               	movlw	low STR_19
  3503  00023C  6E08               	movwf	strcpy@src^0,c
  3504  00023E  0E7F               	movlw	high STR_19
  3505  000240  6E09               	movwf	(strcpy@src+1)^0,c
  3506  000242  EC77  F021         	call	_strcpy	;wreg free
  3507  000246  EFB9  F000         	goto	l8679
  3508  00024A                     l8703:
  3509                           
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3511  00024A  0E00               	movlw	0
  3512  00024C  0100               	movlb	0	; () banked
  3513  00024E  6FBD               	movwf	efgtoa@u& (0+255),b
  3514  000250  0E00               	movlw	0
  3515  000252  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  3516  000254  0E80               	movlw	128
  3517  000256  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  3518  000258  0E3F               	movlw	63
  3519  00025A  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  3520                           
  3521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3522  00025C  0E00               	movlw	0
  3523  00025E  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  3524  000260  0E00               	movlw	0
  3525  000262  6FB9               	movwf	efgtoa@e& (0+255),b
  3526  000264                     
  3527                           ; BSR set to: 0
  3528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3529  000264  C0B5  F006         	movff	efgtoa@g,___fleq@ff1
  3530  000268  C0B6  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  3531  00026C  C0B7  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  3532  000270  C0B8  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  3533  000274  0E00               	movlw	0
  3534  000276  6E0A               	movwf	___fleq@ff2^0,c
  3535  000278  0E00               	movlw	0
  3536  00027A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  3537  00027C  0E00               	movlw	0
  3538  00027E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  3539  000280  0E00               	movlw	0
  3540  000282  6E0D               	movwf	(___fleq@ff2+3)^0,c
  3541  000284  ECD8  F01E         	call	___fleq	;wreg free
  3542  000288  B0D8               	btfsc	status,0,c
  3543  00028A  EF49  F001         	goto	u10011
  3544  00028E  EF4B  F001         	goto	u10010
  3545  000292                     u10011:
  3546  000292  EFCE  F001         	goto	l8721
  3547  000296                     u10010:
  3548  000296  EF6A  F001         	goto	l8713
  3549  00029A                     l8709:
  3550                           
  3551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3552  00029A  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  3553  00029E  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  3554  0002A2  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  3555  0002A6  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  3556  0002AA  0E00               	movlw	0
  3557  0002AC  6E1F               	movwf	___flmul@a^0,c
  3558  0002AE  0E00               	movlw	0
  3559  0002B0  6E20               	movwf	(___flmul@a+1)^0,c
  3560  0002B2  0E20               	movlw	32
  3561  0002B4  6E21               	movwf	(___flmul@a+2)^0,c
  3562  0002B6  0E41               	movlw	65
  3563  0002B8  6E22               	movwf	(___flmul@a+3)^0,c
  3564  0002BA  ECE7  F00A         	call	___flmul	;wreg free
  3565  0002BE  C01B  F0BD         	movff	?___flmul,efgtoa@u
  3566  0002C2  C01C  F0BE         	movff	?___flmul+1,efgtoa@u+1
  3567  0002C6  C01D  F0BF         	movff	?___flmul+2,efgtoa@u+2
  3568  0002CA  C01E  F0C0         	movff	?___flmul+3,efgtoa@u+3
  3569  0002CE                     
  3570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3571  0002CE  0100               	movlb	0	; () banked
  3572  0002D0  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  3573  0002D2  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  3574  0002D4                     l8713:
  3575                           
  3576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3577  0002D4  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  3578  0002D8  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  3579  0002DC  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  3580  0002E0  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  3581  0002E4  0E00               	movlw	0
  3582  0002E6  6E1F               	movwf	___flmul@a^0,c
  3583  0002E8  0E00               	movlw	0
  3584  0002EA  6E20               	movwf	(___flmul@a+1)^0,c
  3585  0002EC  0E20               	movlw	32
  3586  0002EE  6E21               	movwf	(___flmul@a+2)^0,c
  3587  0002F0  0E41               	movlw	65
  3588  0002F2  6E22               	movwf	(___flmul@a+3)^0,c
  3589  0002F4  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  3590  0002F8  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  3591  0002FC  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  3592  000300  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  3593  000304  ECE7  F00A         	call	___flmul	;wreg free
  3594  000308  C01B  F038         	movff	?___flmul,___flge@ff2
  3595  00030C  C01C  F039         	movff	?___flmul+1,___flge@ff2+1
  3596  000310  C01D  F03A         	movff	?___flmul+2,___flge@ff2+2
  3597  000314  C01E  F03B         	movff	?___flmul+3,___flge@ff2+3
  3598  000318  EC93  F01B         	call	___flge	;wreg free
  3599  00031C  B0D8               	btfsc	status,0,c
  3600  00031E  EF93  F001         	goto	u10021
  3601  000322  EF95  F001         	goto	u10020
  3602  000326                     u10021:
  3603  000326  EF4D  F001         	goto	l8709
  3604  00032A                     u10020:
  3605  00032A  EFB5  F001         	goto	l8719
  3606  00032E                     l8715:
  3607                           
  3608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3609  00032E  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  3610  000332  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  3611  000336  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  3612  00033A  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  3613  00033E  0E00               	movlw	0
  3614  000340  6E48               	movwf	___fldiv@a^0,c
  3615  000342  0E00               	movlw	0
  3616  000344  6E49               	movwf	(___fldiv@a+1)^0,c
  3617  000346  0E20               	movlw	32
  3618  000348  6E4A               	movwf	(___fldiv@a+2)^0,c
  3619  00034A  0E41               	movlw	65
  3620  00034C  6E4B               	movwf	(___fldiv@a+3)^0,c
  3621  00034E  ECD5  F00E         	call	___fldiv	;wreg free
  3622  000352  C044  F0BD         	movff	?___fldiv,efgtoa@u
  3623  000356  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  3624  00035A  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  3625  00035E  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  3626  000362                     
  3627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3628  000362  0100               	movlb	0	; () banked
  3629  000364  07B9               	decf	efgtoa@e& (0+255),f,b
  3630  000366  A0D8               	btfss	status,0,c
  3631  000368  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  3632  00036A                     l8719:
  3633                           
  3634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3635  00036A  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  3636  00036E  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  3637  000372  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  3638  000376  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  3639  00037A  C0BD  F038         	movff	efgtoa@u,___flge@ff2
  3640  00037E  C0BE  F039         	movff	efgtoa@u+1,___flge@ff2+1
  3641  000382  C0BF  F03A         	movff	efgtoa@u+2,___flge@ff2+2
  3642  000386  C0C0  F03B         	movff	efgtoa@u+3,___flge@ff2+3
  3643  00038A  EC93  F01B         	call	___flge	;wreg free
  3644  00038E  A0D8               	btfss	status,0,c
  3645  000390  EFCC  F001         	goto	u10031
  3646  000394  EFCE  F001         	goto	u10030
  3647  000398                     u10031:
  3648  000398  EF97  F001         	goto	l8715
  3649  00039C                     u10030:
  3650  00039C                     l8721:
  3651                           
  3652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3653  00039C  C083  F00C         	movff	efgtoa@c,tolower@c
  3654  0003A0  6A0D               	clrf	(tolower@c+1)^0,c
  3655  0003A2  EC18  F021         	call	_tolower	;wreg free
  3656  0003A6  500C               	movf	?_tolower^0,w,c
  3657  0003A8  0100               	movlb	0	; () banked
  3658  0003AA  6FAA               	movwf	efgtoa@mode& (0+255),b
  3659  0003AC                     
  3660                           ; BSR set to: 0
  3661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3662  0003AC  C0AA  F0A7         	movff	efgtoa@mode,efgtoa@nmode
  3663  0003B0                     
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3666  0003B0  0E67               	movlw	103
  3667  0003B2  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3668  0003B4  A4D8               	btfss	status,2,c
  3669  0003B6  EFDF  F001         	goto	u10041
  3670  0003BA  EFE1  F001         	goto	u10040
  3671  0003BE                     u10041:
  3672  0003BE  EF09  F002         	goto	l8735
  3673  0003C2                     u10040:
  3674  0003C2                     
  3675                           ; BSR set to: 0
  3676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3677  0003C2  0101               	movlb	1	; () banked
  3678  0003C4  512C               	movf	_prec& (0+255),w,b
  3679  0003C6  112D               	iorwf	(_prec+1)& (0+255),w,b
  3680  0003C8  A4D8               	btfss	status,2,c
  3681  0003CA  EFE9  F001         	goto	u10051
  3682  0003CE  EFEB  F001         	goto	u10050
  3683  0003D2                     u10051:
  3684  0003D2  EFEF  F001         	goto	l8731
  3685  0003D6                     u10050:
  3686  0003D6                     
  3687                           ; BSR set to: 1
  3688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3689  0003D6  0E00               	movlw	0
  3690  0003D8  6F2D               	movwf	(_prec+1)& (0+255),b
  3691  0003DA  0E01               	movlw	1
  3692  0003DC  6F2C               	movwf	_prec& (0+255),b
  3693  0003DE                     l8731:
  3694                           
  3695                           ; BSR set to: 1
  3696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3697  0003DE  BF2D               	btfsc	(_prec+1)& (0+255),7,b
  3698  0003E0  EFFC  F001         	goto	u10060
  3699  0003E4  512D               	movf	(_prec+1)& (0+255),w,b
  3700  0003E6  E106               	bnz	u10061
  3701  0003E8  052C               	decf	_prec& (0+255),w,b
  3702  0003EA  B0D8               	btfsc	status,0,c
  3703  0003EC  EFFA  F001         	goto	u10061
  3704  0003F0  EFFC  F001         	goto	u10060
  3705  0003F4                     u10061:
  3706  0003F4  EF03  F002         	goto	l837
  3707  0003F8                     u10060:
  3708  0003F8                     l8733:
  3709                           
  3710                           ; BSR set to: 1
  3711  0003F8  0E00               	movlw	0
  3712  0003FA  0100               	movlb	0	; () banked
  3713  0003FC  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  3714  0003FE  0E06               	movlw	6
  3715  000400  6FA5               	movwf	efgtoa@p& (0+255),b
  3716  000402  EF13  F002         	goto	l8741
  3717  000406                     l837:
  3718                           
  3719                           ; BSR set to: 1
  3720  000406  C12C  F0A5         	movff	_prec,efgtoa@p
  3721  00040A  C12D  F0A6         	movff	_prec+1,efgtoa@p+1
  3722  00040E  EF13  F002         	goto	l8741
  3723  000412                     l8735:
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3727  000412  0101               	movlb	1	; () banked
  3728  000414  BF2D               	btfsc	(_prec+1)& (0+255),7,b
  3729  000416  EF0F  F002         	goto	u10071
  3730  00041A  EF11  F002         	goto	u10070
  3731  00041E                     u10071:
  3732  00041E  EFFC  F001         	goto	l8733
  3733  000422                     u10070:
  3734  000422  EF03  F002         	goto	l837
  3735  000426                     l8741:
  3736                           
  3737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3738  000426  0E67               	movlw	103
  3739  000428  0100               	movlb	0	; () banked
  3740  00042A  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3741  00042C  A4D8               	btfss	status,2,c
  3742  00042E  EF1B  F002         	goto	u10081
  3743  000432  EF1D  F002         	goto	u10080
  3744  000436                     u10081:
  3745  000436  EF4C  F002         	goto	l8751
  3746  00043A                     u10080:
  3747  00043A                     
  3748                           ; BSR set to: 0
  3749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3750  00043A  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3751  00043C  EF2B  F002         	goto	u10090
  3752  000440  0EFC               	movlw	252
  3753  000442  5DB9               	subwf	efgtoa@e& (0+255),w,b
  3754  000444  0EFF               	movlw	255
  3755  000446  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3756  000448  A0D8               	btfss	status,0,c
  3757  00044A  EF29  F002         	goto	u10091
  3758  00044E  EF2B  F002         	goto	u10090
  3759  000452                     u10091:
  3760  000452  EF4A  F002         	goto	l8749
  3761  000456                     u10090:
  3762  000456                     
  3763                           ; BSR set to: 0
  3764  000456  0EFF               	movlw	255
  3765  000458  6F84               	movwf	??_efgtoa& (0+255),b
  3766  00045A  0EFF               	movlw	255
  3767  00045C  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3768  00045E  C0A5  F086         	movff	efgtoa@p,??_efgtoa+2
  3769  000462  C0A6  F087         	movff	efgtoa@p+1,??_efgtoa+3
  3770  000466  5184               	movf	??_efgtoa& (0+255),w,b
  3771  000468  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3772  00046A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3773  00046C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3774  00046E  51B9               	movf	efgtoa@e& (0+255),w,b
  3775  000470  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3776  000472  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3777  000474  0A80               	xorlw	128
  3778  000476  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  3779  000478  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  3780  00047A  0A80               	xorlw	128
  3781  00047C  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3782  00047E  A0D8               	btfss	status,0,c
  3783  000480  EF44  F002         	goto	u10101
  3784  000484  EF46  F002         	goto	u10100
  3785  000488                     u10101:
  3786  000488  EF4A  F002         	goto	l8749
  3787  00048C                     u10100:
  3788  00048C                     
  3789                           ; BSR set to: 0
  3790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3791  00048C  0E66               	movlw	102
  3792  00048E  6FA7               	movwf	efgtoa@nmode& (0+255),b
  3793                           
  3794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3795  000490  EF4C  F002         	goto	l8751
  3796  000494                     l8749:
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3800  000494  0E65               	movlw	101
  3801  000496  6FA7               	movwf	efgtoa@nmode& (0+255),b
  3802  000498                     l8751:
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3806  000498  C0A5  F09D         	movff	efgtoa@p,efgtoa@m
  3807  00049C  C0A6  F09E         	movff	efgtoa@p+1,efgtoa@m+1
  3808  0004A0                     
  3809                           ; BSR set to: 0
  3810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3811  0004A0  0E67               	movlw	103
  3812  0004A2  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3813  0004A4  A4D8               	btfss	status,2,c
  3814  0004A6  EF57  F002         	goto	u10111
  3815  0004AA  EF59  F002         	goto	u10110
  3816  0004AE                     u10111:
  3817  0004AE  EF69  F002         	goto	l8759
  3818  0004B2                     u10110:
  3819  0004B2                     
  3820                           ; BSR set to: 0
  3821  0004B2  0E66               	movlw	102
  3822  0004B4  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  3823  0004B6  A4D8               	btfss	status,2,c
  3824  0004B8  EF60  F002         	goto	u10121
  3825  0004BC  EF62  F002         	goto	u10120
  3826  0004C0                     u10121:
  3827  0004C0  EF6B  F002         	goto	l8761
  3828  0004C4                     u10120:
  3829  0004C4                     
  3830                           ; BSR set to: 0
  3831  0004C4  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3832  0004C6  EF69  F002         	goto	u10130
  3833  0004CA  EF67  F002         	goto	u10131
  3834  0004CE                     u10131:
  3835  0004CE  EF6B  F002         	goto	l8761
  3836  0004D2                     u10130:
  3837  0004D2                     l8759:
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3841  0004D2  4B9D               	infsnz	efgtoa@m& (0+255),f,b
  3842  0004D4  2B9E               	incf	(efgtoa@m+1)& (0+255),f,b
  3843  0004D6                     l8761:
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3847  0004D6  0E66               	movlw	102
  3848  0004D8  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  3849  0004DA  A4D8               	btfss	status,2,c
  3850  0004DC  EF72  F002         	goto	u10141
  3851  0004E0  EF74  F002         	goto	u10140
  3852  0004E4                     u10141:
  3853  0004E4  EF94  F002         	goto	l8771
  3854  0004E8                     u10140:
  3855  0004E8                     
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3858  0004E8  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3859  0004EA  EF7B  F002         	goto	u10150
  3860  0004EE  EF79  F002         	goto	u10151
  3861  0004F2                     u10151:
  3862  0004F2  EF87  F002         	goto	l8767
  3863  0004F6                     u10150:
  3864  0004F6                     
  3865                           ; BSR set to: 0
  3866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3867  0004F6  0E00               	movlw	0
  3868  0004F8  6FBD               	movwf	efgtoa@u& (0+255),b
  3869  0004FA  0E00               	movlw	0
  3870  0004FC  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  3871  0004FE  0E80               	movlw	128
  3872  000500  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  3873  000502  0E3F               	movlw	63
  3874  000504  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  3875                           
  3876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3877  000506  0E00               	movlw	0
  3878  000508  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  3879  00050A  0E00               	movlw	0
  3880  00050C  6FB9               	movwf	efgtoa@e& (0+255),b
  3881  00050E                     l8767:
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3885  00050E  0E67               	movlw	103
  3886  000510  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3887  000512  B4D8               	btfsc	status,2,c
  3888  000514  EF8E  F002         	goto	u10161
  3889  000518  EF90  F002         	goto	u10160
  3890  00051C                     u10161:
  3891  00051C  EF94  F002         	goto	l8771
  3892  000520                     u10160:
  3893  000520                     
  3894                           ; BSR set to: 0
  3895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3896  000520  51B9               	movf	efgtoa@e& (0+255),w,b
  3897  000522  279D               	addwf	efgtoa@m& (0+255),f,b
  3898  000524  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  3899  000526  239E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3900  000528                     l8771:
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3904  000528  0E00               	movlw	0
  3905  00052A  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3906  00052C  0E00               	movlw	0
  3907  00052E  6FB3               	movwf	efgtoa@i& (0+255),b
  3908  000530                     
  3909                           ; BSR set to: 0
  3910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3911  000530  C0B5  F0AB         	movff	efgtoa@g,efgtoa@h
  3912  000534  C0B6  F0AC         	movff	efgtoa@g+1,efgtoa@h+1
  3913  000538  C0B7  F0AD         	movff	efgtoa@g+2,efgtoa@h+2
  3914  00053C  C0B8  F0AE         	movff	efgtoa@g+3,efgtoa@h+3
  3915  000540                     
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3918  000540  C0BD  F089         	movff	efgtoa@u,efgtoa@ou
  3919  000544  C0BE  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
  3920  000548  C0BF  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
  3921  00054C  C0C0  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
  3922                           
  3923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3924  000550  EF25  F003         	goto	l8785
  3925  000554                     l8777:
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3929  000554  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  3930  000558  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  3931  00055C  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  3932  000560  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  3933  000564  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  3934  000568  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  3935  00056C  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  3936  000570  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  3937  000574  ECD5  F00E         	call	___fldiv	;wreg free
  3938  000578  C044  F050         	movff	?___fldiv,floorf@x
  3939  00057C  C045  F051         	movff	?___fldiv+1,floorf@x+1
  3940  000580  C046  F052         	movff	?___fldiv+2,floorf@x+2
  3941  000584  C047  F053         	movff	?___fldiv+3,floorf@x+3
  3942  000588  EC3D  F013         	call	_floorf	;wreg free
  3943  00058C  C050  F0AF         	movff	?_floorf,efgtoa@l
  3944  000590  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  3945  000594  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  3946  000598  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  3947                           
  3948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3949  00059C  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  3950  0005A0  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  3951  0005A4  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  3952  0005A8  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  3953  0005AC  EC0F  F01B         	call	___fltol	;wreg free
  3954  0005B0  C072  F0A1         	movff	?___fltol,efgtoa@d
  3955  0005B4  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  3956  0005B8                     
  3957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3958  0005B8  C0AB  F044         	movff	efgtoa@h,___flsub@b
  3959  0005BC  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  3960  0005C0  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  3961  0005C4  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  3962  0005C8  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  3963  0005CC  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  3964  0005D0  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  3965  0005D4  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  3966  0005D8  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  3967  0005DC  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  3968  0005E0  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  3969  0005E4  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  3970  0005E8  ECE7  F00A         	call	___flmul	;wreg free
  3971  0005EC  C01B  F048         	movff	?___flmul,___flsub@a
  3972  0005F0  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  3973  0005F4  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  3974  0005F8  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  3975  0005FC  EC9C  F022         	call	___flsub	;wreg free
  3976  000600  C044  F0AB         	movff	?___flsub,efgtoa@h
  3977  000604  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  3978  000608  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  3979  00060C  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  3980  000610                     
  3981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3982  000610  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  3983  000614  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  3984  000618  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  3985  00061C  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  3986  000620  0E00               	movlw	0
  3987  000622  6E48               	movwf	___fldiv@a^0,c
  3988  000624  0E00               	movlw	0
  3989  000626  6E49               	movwf	(___fldiv@a+1)^0,c
  3990  000628  0E20               	movlw	32
  3991  00062A  6E4A               	movwf	(___fldiv@a+2)^0,c
  3992  00062C  0E41               	movlw	65
  3993  00062E  6E4B               	movwf	(___fldiv@a+3)^0,c
  3994  000630  ECD5  F00E         	call	___fldiv	;wreg free
  3995  000634  C044  F0BD         	movff	?___fldiv,efgtoa@u
  3996  000638  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  3997  00063C  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  3998  000640  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  3999  000644                     
  4000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4001  000644  0100               	movlb	0	; () banked
  4002  000646  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  4003  000648  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  4004  00064A                     l8785:
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4008  00064A  519D               	movf	efgtoa@m& (0+255),w,b
  4009  00064C  5DB3               	subwf	efgtoa@i& (0+255),w,b
  4010  00064E  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  4011  000650  0A80               	xorlw	128
  4012  000652  6F84               	movwf	??_efgtoa& (0+255),b
  4013  000654  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  4014  000656  0A80               	xorlw	128
  4015  000658  5984               	subwfb	??_efgtoa& (0+255),w,b
  4016  00065A  A0D8               	btfss	status,0,c
  4017  00065C  EF32  F003         	goto	u10171
  4018  000660  EF34  F003         	goto	u10170
  4019  000664                     u10171:
  4020  000664  EFAA  F002         	goto	l8777
  4021  000668                     u10170:
  4022  000668                     
  4023                           ; BSR set to: 0
  4024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4025  000668  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  4026  00066C  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  4027  000670  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  4028  000674  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  4029  000678  0E00               	movlw	0
  4030  00067A  6E1F               	movwf	___flmul@a^0,c
  4031  00067C  0E00               	movlw	0
  4032  00067E  6E20               	movwf	(___flmul@a+1)^0,c
  4033  000680  0EA0               	movlw	160
  4034  000682  6E21               	movwf	(___flmul@a+2)^0,c
  4035  000684  0E40               	movlw	64
  4036  000686  6E22               	movwf	(___flmul@a+3)^0,c
  4037  000688  ECE7  F00A         	call	___flmul	;wreg free
  4038  00068C  C01B  F0AF         	movff	?___flmul,efgtoa@l
  4039  000690  C01C  F0B0         	movff	?___flmul+1,efgtoa@l+1
  4040  000694  C01D  F0B1         	movff	?___flmul+2,efgtoa@l+2
  4041  000698  C01E  F0B2         	movff	?___flmul+3,efgtoa@l+3
  4042  00069C                     
  4043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4044  00069C  C0AB  F034         	movff	efgtoa@h,___flge@ff1
  4045  0006A0  C0AC  F035         	movff	efgtoa@h+1,___flge@ff1+1
  4046  0006A4  C0AD  F036         	movff	efgtoa@h+2,___flge@ff1+2
  4047  0006A8  C0AE  F037         	movff	efgtoa@h+3,___flge@ff1+3
  4048  0006AC  C0AF  F038         	movff	efgtoa@l,___flge@ff2
  4049  0006B0  C0B0  F039         	movff	efgtoa@l+1,___flge@ff2+1
  4050  0006B4  C0B1  F03A         	movff	efgtoa@l+2,___flge@ff2+2
  4051  0006B8  C0B2  F03B         	movff	efgtoa@l+3,___flge@ff2+3
  4052  0006BC  EC93  F01B         	call	___flge	;wreg free
  4053  0006C0  B0D8               	btfsc	status,0,c
  4054  0006C2  EF65  F003         	goto	u10181
  4055  0006C6  EF67  F003         	goto	u10180
  4056  0006CA                     u10181:
  4057  0006CA  EF72  F003         	goto	l8793
  4058  0006CE                     u10180:
  4059  0006CE                     
  4060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4061  0006CE  0E00               	movlw	0
  4062  0006D0  0100               	movlb	0	; () banked
  4063  0006D2  6FAF               	movwf	efgtoa@l& (0+255),b
  4064  0006D4  0E00               	movlw	0
  4065  0006D6  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  4066  0006D8  0E00               	movlw	0
  4067  0006DA  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  4068  0006DC  0E00               	movlw	0
  4069  0006DE  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  4070                           
  4071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  4072  0006E0  EF9B  F003         	goto	l8799
  4073  0006E4                     l8793:
  4074                           
  4075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4076  0006E4  C0AB  F006         	movff	efgtoa@h,___fleq@ff1
  4077  0006E8  C0AC  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  4078  0006EC  C0AD  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  4079  0006F0  C0AE  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  4080  0006F4  C0AF  F00A         	movff	efgtoa@l,___fleq@ff2
  4081  0006F8  C0B0  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  4082  0006FC  C0B1  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  4083  000700  C0B2  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  4084  000704  ECD8  F01E         	call	___fleq	;wreg free
  4085  000708  A0D8               	btfss	status,0,c
  4086  00070A  EF89  F003         	goto	u10191
  4087  00070E  EF8B  F003         	goto	u10190
  4088  000712                     u10191:
  4089  000712  EF9B  F003         	goto	l8799
  4090  000716                     u10190:
  4091  000716  0100               	movlb	0	; () banked
  4092  000718  B1A1               	btfsc	efgtoa@d& (0+255),0,b
  4093  00071A  EF91  F003         	goto	u10201
  4094  00071E  EF93  F003         	goto	u10200
  4095  000722                     u10201:
  4096  000722  EF9B  F003         	goto	l8799
  4097  000726                     u10200:
  4098  000726                     
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4101  000726  0E00               	movlw	0
  4102  000728  6FAF               	movwf	efgtoa@l& (0+255),b
  4103  00072A  0E00               	movlw	0
  4104  00072C  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  4105  00072E  0E00               	movlw	0
  4106  000730  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  4107  000732  0E00               	movlw	0
  4108  000734  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  4109  000736                     l8799:
  4110                           
  4111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4112  000736  C0B5  F034         	movff	efgtoa@g,___fladd@b
  4113  00073A  C0B6  F035         	movff	efgtoa@g+1,___fladd@b+1
  4114  00073E  C0B7  F036         	movff	efgtoa@g+2,___fladd@b+2
  4115  000742  C0B8  F037         	movff	efgtoa@g+3,___fladd@b+3
  4116  000746  C0AF  F038         	movff	efgtoa@l,___fladd@a
  4117  00074A  C0B0  F039         	movff	efgtoa@l+1,___fladd@a+1
  4118  00074E  C0B1  F03A         	movff	efgtoa@l+2,___fladd@a+2
  4119  000752  C0B2  F03B         	movff	efgtoa@l+3,___fladd@a+3
  4120  000756  EC87  F008         	call	___fladd	;wreg free
  4121  00075A  C034  F0AB         	movff	?___fladd,efgtoa@h
  4122  00075E  C035  F0AC         	movff	?___fladd+1,efgtoa@h+1
  4123  000762  C036  F0AD         	movff	?___fladd+2,efgtoa@h+2
  4124  000766  C037  F0AE         	movff	?___fladd+3,efgtoa@h+3
  4125  00076A                     
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4127  00076A  C089  F0BD         	movff	efgtoa@ou,efgtoa@u
  4128  00076E  C08A  F0BE         	movff	efgtoa@ou+1,efgtoa@u+1
  4129  000772  C08B  F0BF         	movff	efgtoa@ou+2,efgtoa@u+2
  4130  000776  C08C  F0C0         	movff	efgtoa@ou+3,efgtoa@u+3
  4131  00077A                     
  4132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4133  00077A  0E65               	movlw	101
  4134  00077C  0100               	movlb	0	; () banked
  4135  00077E  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  4136  000780  B4D8               	btfsc	status,2,c
  4137  000782  EFC5  F003         	goto	u10211
  4138  000786  EFC7  F003         	goto	u10210
  4139  00078A                     u10211:
  4140  00078A  EFCD  F003         	goto	l8807
  4141  00078E                     u10210:
  4142  00078E                     
  4143                           ; BSR set to: 0
  4144  00078E  C0B9  F09F         	movff	efgtoa@e,efgtoa@ne
  4145  000792  C0BA  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  4146  000796  EFD1  F003         	goto	l863
  4147  00079A                     l8807:
  4148                           
  4149                           ; BSR set to: 0
  4150  00079A  0E00               	movlw	0
  4151  00079C  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  4152  00079E  0E00               	movlw	0
  4153  0007A0  6F9F               	movwf	efgtoa@ne& (0+255),b
  4154  0007A2                     l863:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4158  0007A2  0E00               	movlw	0
  4159  0007A4  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  4160  0007A6  0E00               	movlw	0
  4161  0007A8  6F9B               	movwf	efgtoa@pp& (0+255),b
  4162                           
  4163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4164  0007AA  0E00               	movlw	0
  4165  0007AC  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
  4166  0007AE  0E00               	movlw	0
  4167  0007B0  6F99               	movwf	efgtoa@t& (0+255),b
  4168                           
  4169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4170  0007B2  0E00               	movlw	0
  4171  0007B4  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  4172  0007B6  0E00               	movlw	0
  4173  0007B8  6FB3               	movwf	efgtoa@i& (0+255),b
  4174                           
  4175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4176  0007BA  EFCE  F004         	goto	l8857
  4177  0007BE                     l8809:
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4181  0007BE  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  4182  0007C2  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  4183  0007C6  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  4184  0007CA  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  4185  0007CE  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  4186  0007D2  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  4187  0007D6  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  4188  0007DA  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  4189  0007DE  ECD5  F00E         	call	___fldiv	;wreg free
  4190  0007E2  C044  F050         	movff	?___fldiv,floorf@x
  4191  0007E6  C045  F051         	movff	?___fldiv+1,floorf@x+1
  4192  0007EA  C046  F052         	movff	?___fldiv+2,floorf@x+2
  4193  0007EE  C047  F053         	movff	?___fldiv+3,floorf@x+3
  4194  0007F2  EC3D  F013         	call	_floorf	;wreg free
  4195  0007F6  C050  F0AF         	movff	?_floorf,efgtoa@l
  4196  0007FA  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  4197  0007FE  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  4198  000802  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  4199                           
  4200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4201  000806  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  4202  00080A  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  4203  00080E  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  4204  000812  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  4205  000816  EC0F  F01B         	call	___fltol	;wreg free
  4206  00081A  C072  F0A1         	movff	?___fltol,efgtoa@d
  4207  00081E  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  4208  000822                     
  4209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4210  000822  0101               	movlb	1	; () banked
  4211  000824  B92E               	btfsc	_flags& (0+255),4,b
  4212  000826  EF17  F004         	goto	u10221
  4213  00082A  EF19  F004         	goto	u10220
  4214  00082E                     u10221:
  4215  00082E  EF37  F004         	goto	l8821
  4216  000832                     u10220:
  4217  000832                     
  4218                           ; BSR set to: 1
  4219  000832  0100               	movlb	0	; () banked
  4220  000834  51A1               	movf	efgtoa@d& (0+255),w,b
  4221  000836  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4222  000838  A4D8               	btfss	status,2,c
  4223  00083A  EF21  F004         	goto	u10231
  4224  00083E  EF23  F004         	goto	u10230
  4225  000842                     u10231:
  4226  000842  EF37  F004         	goto	l8821
  4227  000846                     u10230:
  4228  000846                     
  4229                           ; BSR set to: 0
  4230  000846  0E67               	movlw	103
  4231  000848  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  4232  00084A  A4D8               	btfss	status,2,c
  4233  00084C  EF2A  F004         	goto	u10241
  4234  000850  EF2C  F004         	goto	u10240
  4235  000854                     u10241:
  4236  000854  EF37  F004         	goto	l8821
  4237  000858                     u10240:
  4238  000858                     
  4239                           ; BSR set to: 0
  4240  000858  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4241  00085A  EF33  F004         	goto	u10250
  4242  00085E  EF31  F004         	goto	u10251
  4243  000862                     u10251:
  4244  000862  EF37  F004         	goto	l8821
  4245  000866                     u10250:
  4246  000866                     
  4247                           ; BSR set to: 0
  4248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4249  000866  4B99               	infsnz	efgtoa@t& (0+255),f,b
  4250  000868  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
  4251                           
  4252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4253  00086A  EF82  F004         	goto	l8849
  4254  00086E                     l8821:
  4255                           
  4256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4257  00086E  0100               	movlb	0	; () banked
  4258  000870  519B               	movf	efgtoa@pp& (0+255),w,b
  4259  000872  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4260  000874  A4D8               	btfss	status,2,c
  4261  000876  EF3F  F004         	goto	u10261
  4262  00087A  EF41  F004         	goto	u10260
  4263  00087E                     u10261:
  4264  00087E  EF6B  F004         	goto	l8841
  4265  000882                     u10260:
  4266  000882                     
  4267                           ; BSR set to: 0
  4268  000882  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4269  000884  EF48  F004         	goto	u10270
  4270  000888  EF46  F004         	goto	u10271
  4271  00088C                     u10271:
  4272  00088C  EF6B  F004         	goto	l8841
  4273  000890                     u10270:
  4274  000890                     
  4275                           ; BSR set to: 0
  4276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4277  000890  0E3A               	movlw	low _dbuf
  4278  000892  25BB               	addwf	efgtoa@n& (0+255),w,b
  4279  000894  6ED9               	movwf	fsr2l,c
  4280  000896  0E01               	movlw	high _dbuf
  4281  000898  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4282  00089A  6EDA               	movwf	fsr2h,c
  4283  00089C  0E2E               	movlw	46
  4284  00089E  6EDF               	movwf	indf2,c
  4285  0008A0                     
  4286                           ; BSR set to: 0
  4287  0008A0  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4288  0008A2  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4289  0008A4                     
  4290                           ; BSR set to: 0
  4291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4292  0008A4  07A8               	decf	efgtoa@w& (0+255),f,b
  4293  0008A6  A0D8               	btfss	status,0,c
  4294  0008A8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4295  0008AA                     
  4296                           ; BSR set to: 0
  4297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4298  0008AA  0E00               	movlw	0
  4299  0008AC  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  4300  0008AE  0E01               	movlw	1
  4301  0008B0  6F9B               	movwf	efgtoa@pp& (0+255),b
  4302  0008B2  EF6B  F004         	goto	l8841
  4303  0008B6                     l8833:
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4307  0008B6  0E3A               	movlw	low _dbuf
  4308  0008B8  25BB               	addwf	efgtoa@n& (0+255),w,b
  4309  0008BA  6ED9               	movwf	fsr2l,c
  4310  0008BC  0E01               	movlw	high _dbuf
  4311  0008BE  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4312  0008C0  6EDA               	movwf	fsr2h,c
  4313  0008C2  0E30               	movlw	48
  4314  0008C4  6EDF               	movwf	indf2,c
  4315  0008C6                     
  4316                           ; BSR set to: 0
  4317  0008C6  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4318  0008C8  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4319  0008CA                     
  4320                           ; BSR set to: 0
  4321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4322  0008CA  07A8               	decf	efgtoa@w& (0+255),f,b
  4323  0008CC  A0D8               	btfss	status,0,c
  4324  0008CE  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4325  0008D0                     
  4326                           ; BSR set to: 0
  4327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4328  0008D0  0799               	decf	efgtoa@t& (0+255),f,b
  4329  0008D2  A0D8               	btfss	status,0,c
  4330  0008D4  079A               	decf	(efgtoa@t+1)& (0+255),f,b
  4331  0008D6                     l8841:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4335  0008D6  5199               	movf	efgtoa@t& (0+255),w,b
  4336  0008D8  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4337  0008DA  A4D8               	btfss	status,2,c
  4338  0008DC  EF72  F004         	goto	u10281
  4339  0008E0  EF74  F004         	goto	u10280
  4340  0008E4                     u10281:
  4341  0008E4  EF5B  F004         	goto	l8833
  4342  0008E8                     u10280:
  4343  0008E8                     
  4344                           ; BSR set to: 0
  4345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4346  0008E8  0E3A               	movlw	low _dbuf
  4347  0008EA  25BB               	addwf	efgtoa@n& (0+255),w,b
  4348  0008EC  6ED9               	movwf	fsr2l,c
  4349  0008EE  0E01               	movlw	high _dbuf
  4350  0008F0  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4351  0008F2  6EDA               	movwf	fsr2h,c
  4352  0008F4  51A1               	movf	efgtoa@d& (0+255),w,b
  4353  0008F6  0F30               	addlw	48
  4354  0008F8  6EDF               	movwf	indf2,c
  4355  0008FA                     
  4356                           ; BSR set to: 0
  4357  0008FA  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4358  0008FC  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4359  0008FE                     
  4360                           ; BSR set to: 0
  4361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4362  0008FE  07A8               	decf	efgtoa@w& (0+255),f,b
  4363  000900  A0D8               	btfss	status,0,c
  4364  000902  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4365  000904                     l8849:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4369  000904  C0AB  F044         	movff	efgtoa@h,___flsub@b
  4370  000908  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  4371  00090C  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  4372  000910  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  4373  000914  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  4374  000918  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  4375  00091C  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  4376  000920  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  4377  000924  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  4378  000928  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  4379  00092C  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  4380  000930  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  4381  000934  ECE7  F00A         	call	___flmul	;wreg free
  4382  000938  C01B  F048         	movff	?___flmul,___flsub@a
  4383  00093C  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  4384  000940  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  4385  000944  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  4386  000948  EC9C  F022         	call	___flsub	;wreg free
  4387  00094C  C044  F0AB         	movff	?___flsub,efgtoa@h
  4388  000950  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  4389  000954  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  4390  000958  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  4391  00095C                     
  4392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4393  00095C  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  4394  000960  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  4395  000964  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  4396  000968  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  4397  00096C  0E00               	movlw	0
  4398  00096E  6E48               	movwf	___fldiv@a^0,c
  4399  000970  0E00               	movlw	0
  4400  000972  6E49               	movwf	(___fldiv@a+1)^0,c
  4401  000974  0E20               	movlw	32
  4402  000976  6E4A               	movwf	(___fldiv@a+2)^0,c
  4403  000978  0E41               	movlw	65
  4404  00097A  6E4B               	movwf	(___fldiv@a+3)^0,c
  4405  00097C  ECD5  F00E         	call	___fldiv	;wreg free
  4406  000980  C044  F0BD         	movff	?___fldiv,efgtoa@u
  4407  000984  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  4408  000988  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  4409  00098C  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  4410  000990                     
  4411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4412  000990  0100               	movlb	0	; () banked
  4413  000992  079F               	decf	efgtoa@ne& (0+255),f,b
  4414  000994  A0D8               	btfss	status,0,c
  4415  000996  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  4416  000998                     
  4417                           ; BSR set to: 0
  4418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4419  000998  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  4420  00099A  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  4421  00099C                     l8857:
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4425  00099C  519D               	movf	efgtoa@m& (0+255),w,b
  4426  00099E  5DB3               	subwf	efgtoa@i& (0+255),w,b
  4427  0009A0  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  4428  0009A2  0A80               	xorlw	128
  4429  0009A4  6F84               	movwf	??_efgtoa& (0+255),b
  4430  0009A6  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  4431  0009A8  0A80               	xorlw	128
  4432  0009AA  5984               	subwfb	??_efgtoa& (0+255),w,b
  4433  0009AC  B0D8               	btfsc	status,0,c
  4434  0009AE  EFDB  F004         	goto	u10291
  4435  0009B2  EFDD  F004         	goto	u10290
  4436  0009B6                     u10291:
  4437  0009B6  EFEB  F004         	goto	l8861
  4438  0009BA                     u10290:
  4439  0009BA                     
  4440                           ; BSR set to: 0
  4441  0009BA  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4442  0009BC  EFE9  F004         	goto	u10301
  4443  0009C0  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
  4444  0009C2  E109               	bnz	u10300
  4445  0009C4  0E4B               	movlw	75
  4446  0009C6  5DBB               	subwf	efgtoa@n& (0+255),w,b
  4447  0009C8  A0D8               	btfss	status,0,c
  4448  0009CA  EFE9  F004         	goto	u10301
  4449  0009CE  EFEB  F004         	goto	u10300
  4450  0009D2                     u10301:
  4451  0009D2  EFDF  F003         	goto	l8809
  4452  0009D6                     u10300:
  4453  0009D6                     l8861:
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4457  0009D6  519B               	movf	efgtoa@pp& (0+255),w,b
  4458  0009D8  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4459  0009DA  A4D8               	btfss	status,2,c
  4460  0009DC  EFF2  F004         	goto	u10311
  4461  0009E0  EFF4  F004         	goto	u10310
  4462  0009E4                     u10311:
  4463  0009E4  EF07  F005         	goto	l8869
  4464  0009E8                     u10310:
  4465  0009E8                     
  4466                           ; BSR set to: 0
  4467  0009E8  0101               	movlb	1	; () banked
  4468  0009EA  A92E               	btfss	_flags& (0+255),4,b
  4469  0009EC  EFFA  F004         	goto	u10321
  4470  0009F0  EFFC  F004         	goto	u10320
  4471  0009F4                     u10321:
  4472  0009F4  EF07  F005         	goto	l8869
  4473  0009F8                     u10320:
  4474  0009F8                     
  4475                           ; BSR set to: 1
  4476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4477  0009F8  0E3A               	movlw	low _dbuf
  4478  0009FA  0100               	movlb	0	; () banked
  4479  0009FC  25BB               	addwf	efgtoa@n& (0+255),w,b
  4480  0009FE  6ED9               	movwf	fsr2l,c
  4481  000A00  0E01               	movlw	high _dbuf
  4482  000A02  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4483  000A04  6EDA               	movwf	fsr2h,c
  4484  000A06  0E2E               	movlw	46
  4485  000A08  6EDF               	movwf	indf2,c
  4486  000A0A                     
  4487                           ; BSR set to: 0
  4488  000A0A  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4489  000A0C  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4490  000A0E                     l8869:
  4491                           
  4492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4493  000A0E  0E3A               	movlw	low _dbuf
  4494  000A10  0100               	movlb	0	; () banked
  4495  000A12  25BB               	addwf	efgtoa@n& (0+255),w,b
  4496  000A14  6ED9               	movwf	fsr2l,c
  4497  000A16  0E01               	movlw	high _dbuf
  4498  000A18  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4499  000A1A  6EDA               	movwf	fsr2h,c
  4500  000A1C  0E00               	movlw	0
  4501  000A1E  6EDF               	movwf	indf2,c
  4502  000A20                     
  4503                           ; BSR set to: 0
  4504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4505  000A20  0E65               	movlw	101
  4506  000A22  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  4507  000A24  A4D8               	btfss	status,2,c
  4508  000A26  EF17  F005         	goto	u10331
  4509  000A2A  EF19  F005         	goto	u10330
  4510  000A2E                     u10331:
  4511  000A2E  EFBE  F000         	goto	l8681
  4512  000A32                     u10330:
  4513  000A32                     
  4514                           ; BSR set to: 0
  4515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4516  000A32  0E00               	movlw	0
  4517  000A34  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  4518  000A36  0E4F               	movlw	79
  4519  000A38  6FB3               	movwf	efgtoa@i& (0+255),b
  4520  000A3A                     
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4523  000A3A  0E3A               	movlw	low _dbuf
  4524  000A3C  25B3               	addwf	efgtoa@i& (0+255),w,b
  4525  000A3E  6ED9               	movwf	fsr2l,c
  4526  000A40  0E01               	movlw	high _dbuf
  4527  000A42  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4528  000A44  6EDA               	movwf	fsr2h,c
  4529  000A46  0E00               	movlw	0
  4530  000A48  6EDF               	movwf	indf2,c
  4531  000A4A                     
  4532                           ; BSR set to: 0
  4533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4534  000A4A  0E00               	movlw	0
  4535  000A4C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4536  000A4E  0E00               	movlw	0
  4537  000A50  6FA3               	movwf	efgtoa@sign& (0+255),b
  4538  000A52                     
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4541  000A52  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4542  000A54  EF30  F005         	goto	u10340
  4543  000A58  EF2E  F005         	goto	u10341
  4544  000A5C                     u10341:
  4545  000A5C  EF38  F005         	goto	l8885
  4546  000A60                     u10340:
  4547  000A60                     
  4548                           ; BSR set to: 0
  4549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4550  000A60  0E00               	movlw	0
  4551  000A62  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4552  000A64  0E01               	movlw	1
  4553  000A66  6FA3               	movwf	efgtoa@sign& (0+255),b
  4554  000A68                     
  4555                           ; BSR set to: 0
  4556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4557  000A68  6DB9               	negf	efgtoa@e& (0+255),b
  4558  000A6A  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
  4559  000A6C  B0D8               	btfsc	status,0,c
  4560  000A6E  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  4561  000A70                     l8885:
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4565  000A70  0E00               	movlw	0
  4566  000A72  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  4567  000A74  0E02               	movlw	2
  4568  000A76  6FA5               	movwf	efgtoa@p& (0+255),b
  4569                           
  4570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4571  000A78  EF69  F005         	goto	l8897
  4572  000A7C                     l8887:
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4576  000A7C  07B3               	decf	efgtoa@i& (0+255),f,b
  4577  000A7E  A0D8               	btfss	status,0,c
  4578  000A80  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4579  000A82                     
  4580                           ; BSR set to: 0
  4581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4582  000A82  0E3A               	movlw	low _dbuf
  4583  000A84  25B3               	addwf	efgtoa@i& (0+255),w,b
  4584  000A86  6ED9               	movwf	fsr2l,c
  4585  000A88  0E01               	movlw	high _dbuf
  4586  000A8A  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4587  000A8C  6EDA               	movwf	fsr2h,c
  4588  000A8E  C0B9  F006         	movff	efgtoa@e,___awmod@dividend
  4589  000A92  C0BA  F007         	movff	efgtoa@e+1,___awmod@dividend+1
  4590  000A96  0E00               	movlw	0
  4591  000A98  6E09               	movwf	(___awmod@divisor+1)^0,c
  4592  000A9A  0E0A               	movlw	10
  4593  000A9C  6E08               	movwf	___awmod@divisor^0,c
  4594  000A9E  EC29  F01E         	call	___awmod	;wreg free
  4595  000AA2  5006               	movf	?___awmod^0,w,c
  4596  000AA4  0F30               	addlw	48
  4597  000AA6  6EDF               	movwf	indf2,c
  4598  000AA8                     
  4599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4600  000AA8  C0B9  F006         	movff	efgtoa@e,___awdiv@dividend
  4601  000AAC  C0BA  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  4602  000AB0  0E00               	movlw	0
  4603  000AB2  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4604  000AB4  0E0A               	movlw	10
  4605  000AB6  6E08               	movwf	___awdiv@divisor^0,c
  4606  000AB8  ECC7  F01D         	call	___awdiv	;wreg free
  4607  000ABC  C006  F0B9         	movff	?___awdiv,efgtoa@e
  4608  000AC0  C007  F0BA         	movff	?___awdiv+1,efgtoa@e+1
  4609  000AC4                     
  4610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4611  000AC4  0100               	movlb	0	; () banked
  4612  000AC6  07A5               	decf	efgtoa@p& (0+255),f,b
  4613  000AC8  A0D8               	btfss	status,0,c
  4614  000ACA  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
  4615  000ACC                     
  4616                           ; BSR set to: 0
  4617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4618  000ACC  07A8               	decf	efgtoa@w& (0+255),f,b
  4619  000ACE  A0D8               	btfss	status,0,c
  4620  000AD0  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4621  000AD2                     l8897:
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4625  000AD2  51B9               	movf	efgtoa@e& (0+255),w,b
  4626  000AD4  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4627  000AD6  A4D8               	btfss	status,2,c
  4628  000AD8  EF70  F005         	goto	u10351
  4629  000ADC  EF72  F005         	goto	u10350
  4630  000AE0                     u10351:
  4631  000AE0  EF3E  F005         	goto	l8887
  4632  000AE4                     u10350:
  4633  000AE4                     
  4634                           ; BSR set to: 0
  4635  000AE4  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4636  000AE6  EF7F  F005         	goto	u10360
  4637  000AEA  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
  4638  000AEC  E106               	bnz	u10361
  4639  000AEE  05A5               	decf	efgtoa@p& (0+255),w,b
  4640  000AF0  B0D8               	btfsc	status,0,c
  4641  000AF2  EF7D  F005         	goto	u10361
  4642  000AF6  EF7F  F005         	goto	u10360
  4643  000AFA                     u10361:
  4644  000AFA  EF3E  F005         	goto	l8887
  4645  000AFE                     u10360:
  4646  000AFE                     
  4647                           ; BSR set to: 0
  4648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4649  000AFE  07B3               	decf	efgtoa@i& (0+255),f,b
  4650  000B00  A0D8               	btfss	status,0,c
  4651  000B02  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4652  000B04                     
  4653                           ; BSR set to: 0
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4655  000B04  51A3               	movf	efgtoa@sign& (0+255),w,b
  4656  000B06  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4657  000B08  A4D8               	btfss	status,2,c
  4658  000B0A  EF89  F005         	goto	u10371
  4659  000B0E  EF8B  F005         	goto	u10370
  4660  000B12                     u10371:
  4661  000B12  EF91  F005         	goto	l8907
  4662  000B16                     u10370:
  4663  000B16                     
  4664                           ; BSR set to: 0
  4665  000B16  0E00               	movlw	0
  4666  000B18  6F94               	movwf	(_efgtoa$930+1)& (0+255),b
  4667  000B1A  0E2B               	movlw	43
  4668  000B1C  6F93               	movwf	_efgtoa$930& (0+255),b
  4669  000B1E  EF95  F005         	goto	l8909
  4670  000B22                     l8907:
  4671                           
  4672                           ; BSR set to: 0
  4673  000B22  0E00               	movlw	0
  4674  000B24  6F94               	movwf	(_efgtoa$930+1)& (0+255),b
  4675  000B26  0E2D               	movlw	45
  4676  000B28  6F93               	movwf	_efgtoa$930& (0+255),b
  4677  000B2A                     l8909:
  4678                           
  4679                           ; BSR set to: 0
  4680  000B2A  0E3A               	movlw	low _dbuf
  4681  000B2C  25B3               	addwf	efgtoa@i& (0+255),w,b
  4682  000B2E  6ED9               	movwf	fsr2l,c
  4683  000B30  0E01               	movlw	high _dbuf
  4684  000B32  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4685  000B34  6EDA               	movwf	fsr2h,c
  4686  000B36  C093  FFDF         	movff	_efgtoa$930,indf2
  4687  000B3A                     
  4688                           ; BSR set to: 0
  4689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4690  000B3A  07A8               	decf	efgtoa@w& (0+255),f,b
  4691  000B3C  A0D8               	btfss	status,0,c
  4692  000B3E  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4693  000B40                     
  4694                           ; BSR set to: 0
  4695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4696  000B40  07B3               	decf	efgtoa@i& (0+255),f,b
  4697  000B42  A0D8               	btfss	status,0,c
  4698  000B44  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4699  000B46                     
  4700                           ; BSR set to: 0
  4701  000B46  0EBF               	movlw	191
  4702  000B48  6F84               	movwf	??_efgtoa& (0+255),b
  4703  000B4A  0EFF               	movlw	255
  4704  000B4C  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  4705  000B4E  5183               	movf	efgtoa@c& (0+255),w,b
  4706  000B50  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  4707  000B52  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  4708  000B54  5184               	movf	??_efgtoa& (0+255),w,b
  4709  000B56  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  4710  000B58  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  4711  000B5A  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4712  000B5C  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  4713  000B5E  E10A               	bnz	u10380
  4714  000B60  0E1A               	movlw	26
  4715  000B62  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  4716  000B64  A0D8               	btfss	status,0,c
  4717  000B66  EFB7  F005         	goto	u10381
  4718  000B6A  EFBA  F005         	goto	u10380
  4719  000B6E                     u10381:
  4720  000B6E  0E01               	movlw	1
  4721  000B70  EFBB  F005         	goto	u10390
  4722  000B74                     u10380:
  4723  000B74  0E00               	movlw	0
  4724  000B76                     u10390:
  4725  000B76  6F97               	movwf	_efgtoa$932& (0+255),b
  4726  000B78  6B98               	clrf	(_efgtoa$932+1)& (0+255),b
  4727  000B7A                     
  4728                           ; BSR set to: 0
  4729  000B7A  5197               	movf	_efgtoa$932& (0+255),w,b
  4730  000B7C  1198               	iorwf	(_efgtoa$932+1)& (0+255),w,b
  4731  000B7E  A4D8               	btfss	status,2,c
  4732  000B80  EFC4  F005         	goto	u10401
  4733  000B84  EFC6  F005         	goto	u10400
  4734  000B88                     u10401:
  4735  000B88  EFCC  F005         	goto	l8923
  4736  000B8C                     u10400:
  4737  000B8C                     
  4738                           ; BSR set to: 0
  4739  000B8C  0E00               	movlw	0
  4740  000B8E  6F96               	movwf	(_efgtoa$931+1)& (0+255),b
  4741  000B90  0E65               	movlw	101
  4742  000B92  6F95               	movwf	_efgtoa$931& (0+255),b
  4743  000B94  EFD0  F005         	goto	l8925
  4744  000B98                     l8923:
  4745                           
  4746                           ; BSR set to: 0
  4747  000B98  0E00               	movlw	0
  4748  000B9A  6F96               	movwf	(_efgtoa$931+1)& (0+255),b
  4749  000B9C  0E45               	movlw	69
  4750  000B9E  6F95               	movwf	_efgtoa$931& (0+255),b
  4751  000BA0                     l8925:
  4752                           
  4753                           ; BSR set to: 0
  4754  000BA0  0E3A               	movlw	low _dbuf
  4755  000BA2  25B3               	addwf	efgtoa@i& (0+255),w,b
  4756  000BA4  6ED9               	movwf	fsr2l,c
  4757  000BA6  0E01               	movlw	high _dbuf
  4758  000BA8  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4759  000BAA  6EDA               	movwf	fsr2h,c
  4760  000BAC  C095  FFDF         	movff	_efgtoa$931,indf2
  4761  000BB0                     
  4762                           ; BSR set to: 0
  4763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4764  000BB0  07A8               	decf	efgtoa@w& (0+255),f,b
  4765  000BB2  A0D8               	btfss	status,0,c
  4766  000BB4  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4767  000BB6                     
  4768                           ; BSR set to: 0
  4769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4770  000BB6  0E3A               	movlw	low _dbuf
  4771  000BB8  25BB               	addwf	efgtoa@n& (0+255),w,b
  4772  000BBA  6E06               	movwf	strcpy@dest^0,c
  4773  000BBC  0E01               	movlw	high _dbuf
  4774  000BBE  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4775  000BC0  6E07               	movwf	(strcpy@dest+1)^0,c
  4776  000BC2  0E3A               	movlw	low _dbuf
  4777  000BC4  25B3               	addwf	efgtoa@i& (0+255),w,b
  4778  000BC6  6E08               	movwf	strcpy@src^0,c
  4779  000BC8  0E01               	movlw	high _dbuf
  4780  000BCA  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4781  000BCC  6E09               	movwf	(strcpy@src+1)^0,c
  4782  000BCE  EC77  F021         	call	_strcpy	;wreg free
  4783  000BD2  EFBE  F000         	goto	l8681
  4784  000BD6                     l819:
  4785  000BD6  0012               	return		;funcret
  4786  000BD8                     __end_of_efgtoa:
  4787                           	opt callstack 0
  4788                           
  4789 ;; *************** function _tolower *****************
  4790 ;; Defined at:
  4791 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  c               2   11[COMRAM] int 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;		None
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  2   11[COMRAM] int 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4805 ;;      Params:         2       0       0       0       0       0       0       0       0
  4806 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4807 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4808 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4809 ;;Total ram usage:        8 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    3
  4812 ;; This function calls:
  4813 ;;		_isupper
  4814 ;; This function is called by:
  4815 ;;		_efgtoa
  4816 ;;		_vfpfcnvrt
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text7
  4821  004230                     __ptext7:
  4822                           	opt callstack 0
  4823  004230                     _tolower:
  4824                           	opt callstack 23
  4825  004230  0EBF               	movlw	191
  4826  004232  6E0E               	movwf	??_tolower^0,c
  4827  004234  0EFF               	movlw	255
  4828  004236  6E0F               	movwf	(??_tolower+1)^0,c
  4829  004238  C00C  F010         	movff	tolower@c,??_tolower+2
  4830  00423C  C00D  F011         	movff	tolower@c+1,??_tolower+3
  4831  004240  500E               	movf	??_tolower^0,w,c
  4832  004242  2610               	addwf	(??_tolower+2)^0,f,c
  4833  004244  500F               	movf	(??_tolower+1)^0,w,c
  4834  004246  2211               	addwfc	(??_tolower+3)^0,f,c
  4835  004248  5011               	movf	(??_tolower+3)^0,w,c
  4836  00424A  E10A               	bnz	u9230
  4837  00424C  0E1A               	movlw	26
  4838  00424E  5C10               	subwf	(??_tolower+2)^0,w,c
  4839  004250  A0D8               	btfss	status,0,c
  4840  004252  EF2D  F021         	goto	u9231
  4841  004256  EF30  F021         	goto	u9230
  4842  00425A                     u9231:
  4843  00425A  0E01               	movlw	1
  4844  00425C  EF31  F021         	goto	u9240
  4845  004260                     u9230:
  4846  004260  0E00               	movlw	0
  4847  004262                     u9240:
  4848  004262  6E12               	movwf	_tolower$1554^0,c
  4849  004264  6A13               	clrf	(_tolower$1554+1)^0,c
  4850  004266  5012               	movf	_tolower$1554^0,w,c
  4851  004268  1013               	iorwf	(_tolower$1554+1)^0,w,c
  4852  00426A  B4D8               	btfsc	status,2,c
  4853  00426C  EF3A  F021         	goto	u9251
  4854  004270  EF3C  F021         	goto	u9250
  4855  004274                     u9251:
  4856  004274  EF43  F021         	goto	l1753
  4857  004278                     u9250:
  4858  004278  0E20               	movlw	32
  4859  00427A  100C               	iorwf	tolower@c^0,w,c
  4860  00427C  6E0C               	movwf	?_tolower^0,c
  4861  00427E  500D               	movf	(tolower@c+1)^0,w,c
  4862  004280  6E0D               	movwf	(?_tolower+1)^0,c
  4863  004282  EF47  F021         	goto	l1758
  4864  004286                     l1753:
  4865  004286  C00C  F00C         	movff	tolower@c,?_tolower
  4866  00428A  C00D  F00D         	movff	tolower@c+1,?_tolower+1
  4867  00428E                     l1758:
  4868  00428E  0012               	return		;funcret
  4869  004290                     __end_of_tolower:
  4870                           	opt callstack 0
  4871                           
  4872 ;; *************** function _isupper *****************
  4873 ;; Defined at:
  4874 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;  c               2    5[COMRAM] int 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  2    5[COMRAM] int 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2, status,0
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4888 ;;      Params:         2       0       0       0       0       0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4890 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4891 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4892 ;;Total ram usage:        6 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    2
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_efgtoa
  4899 ;;		_vfpfcnvrt
  4900 ;;		_tolower
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text8
  4905  004642                     __ptext8:
  4906                           	opt callstack 0
  4907  004642                     _isupper:
  4908                           	opt callstack 23
  4909  004642  0EBF               	movlw	191
  4910  004644  6E08               	movwf	??_isupper^0,c
  4911  004646  0EFF               	movlw	255
  4912  004648  6E09               	movwf	(??_isupper+1)^0,c
  4913  00464A  C006  F00A         	movff	isupper@c,??_isupper+2
  4914  00464E  C007  F00B         	movff	isupper@c+1,??_isupper+3
  4915  004652  5008               	movf	??_isupper^0,w,c
  4916  004654  260A               	addwf	(??_isupper+2)^0,f,c
  4917  004656  5009               	movf	(??_isupper+1)^0,w,c
  4918  004658  220B               	addwfc	(??_isupper+3)^0,f,c
  4919  00465A  500B               	movf	(??_isupper+3)^0,w,c
  4920  00465C  E10A               	bnz	u8060
  4921  00465E  0E1A               	movlw	26
  4922  004660  5C0A               	subwf	(??_isupper+2)^0,w,c
  4923  004662  A0D8               	btfss	status,0,c
  4924  004664  EF36  F023         	goto	u8061
  4925  004668  EF39  F023         	goto	u8060
  4926  00466C                     u8061:
  4927  00466C  0E01               	movlw	1
  4928  00466E  EF3A  F023         	goto	u8070
  4929  004672                     u8060:
  4930  004672  0E00               	movlw	0
  4931  004674                     u8070:
  4932  004674  6E06               	movwf	?_isupper^0,c
  4933  004676  6A07               	clrf	(?_isupper+1)^0,c
  4934  004678  0012               	return		;funcret
  4935  00467A                     __end_of_isupper:
  4936                           	opt callstack 0
  4937                           
  4938 ;; *************** function _strcpy *****************
  4939 ;; Defined at:
  4940 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  dest            2    5[COMRAM] PTR unsigned char 
  4943 ;;		 -> dbuf(80), 
  4944 ;;  src             2    7[COMRAM] PTR const unsigned char 
  4945 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  4946 ;;		 -> dbuf(80), 
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;  d               2   13[COMRAM] PTR unsigned char 
  4949 ;;		 -> dbuf(80), 
  4950 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4951 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  4952 ;;		 -> dbuf(80), 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  2    5[COMRAM] PTR unsigned char 
  4955 ;; Registers used:
  4956 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4962 ;;      Params:         4       0       0       0       0       0       0       0       0
  4963 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4964 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4965 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4966 ;;Total ram usage:       10 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    2
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_efgtoa
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text9
  4977  0042EE                     __ptext9:
  4978                           	opt callstack 0
  4979  0042EE                     _strcpy:
  4980                           	opt callstack 23
  4981  0042EE  C008  F00C         	movff	strcpy@src,strcpy@s
  4982  0042F2  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
  4983  0042F6  C006  F00E         	movff	strcpy@dest,strcpy@d
  4984  0042FA  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
  4985  0042FE                     l8285:
  4986  0042FE  500C               	movf	strcpy@s^0,w,c
  4987  004300  6E0A               	movwf	??_strcpy^0,c
  4988  004302  500D               	movf	(strcpy@s+1)^0,w,c
  4989  004304  6E0B               	movwf	(??_strcpy+1)^0,c
  4990  004306  4A0C               	infsnz	strcpy@s^0,f,c
  4991  004308  2A0D               	incf	(strcpy@s+1)^0,f,c
  4992  00430A  C00A  FFF6         	movff	??_strcpy,tblptrl
  4993  00430E  C00B  FFF7         	movff	??_strcpy+1,tblptrh
  4994  004312  6AF8               	clrf	tblptru,c
  4995  004314  C00E  FFD9         	movff	strcpy@d,fsr2l
  4996  004318  C00F  FFDA         	movff	strcpy@d+1,fsr2h
  4997  00431C  4A0E               	infsnz	strcpy@d^0,f,c
  4998  00431E  2A0F               	incf	(strcpy@d+1)^0,f,c
  4999  004320  0E07               	movlw	(high __ramtop+-1)
  5000  004322  64F7               	cpfsgt	tblptrh,c
  5001  004324  D003               	bra	u9217
  5002  004326  0008               	tblrd		*
  5003  004328  50F5               	movf	tablat,w,c
  5004  00432A  D005               	bra	u9210
  5005  00432C                     u9217:
  5006  00432C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5007  004330  CFF7 FFEA          	movff	tblptrh,fsr0h
  5008  004334  50EF               	movf	indf0,w,c
  5009  004336                     u9210:
  5010  004336  6EDF               	movwf	indf2,c
  5011  004338  50DF               	movf	indf2,w,c
  5012  00433A  A4D8               	btfss	status,2,c
  5013  00433C  EFA2  F021         	goto	u9221
  5014  004340  EFA4  F021         	goto	u9220
  5015  004344                     u9221:
  5016  004344  EF7F  F021         	goto	l8285
  5017  004348                     u9220:
  5018  004348  0012               	return		;funcret
  5019  00434A                     __end_of_strcpy:
  5020                           	opt callstack 0
  5021                           
  5022 ;; *************** function _floorf *****************
  5023 ;; Defined at:
  5024 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  x               4   79[COMRAM] float 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;  u               4   25[BANK0 ] struct .
  5029 ;;  m               4   19[BANK0 ] unsigned long 
  5030 ;;  e               2   23[BANK0 ] int 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  4   79[COMRAM] float 
  5033 ;; Registers used:
  5034 ;;		wreg, status,2, status,0
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5040 ;;      Params:         4       0       0       0       0       0       0       0       0
  5041 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5042 ;;      Temps:          0       6       0       0       0       0       0       0       0
  5043 ;;      Totals:         4      16       0       0       0       0       0       0       0
  5044 ;;Total ram usage:       20 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:    2
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_efgtoa
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text10
  5055  00267A                     __ptext10:
  5056                           	opt callstack 0
  5057  00267A                     _floorf:
  5058                           	opt callstack 23
  5059  00267A  C104  F079         	movff	floorf@F524,floorf@u
  5060  00267E  C105  F07A         	movff	floorf@F524+1,floorf@u+1
  5061  002682  C106  F07B         	movff	floorf@F524+2,floorf@u+2
  5062  002686  C107  F07C         	movff	floorf@F524+3,floorf@u+3
  5063  00268A  C050  F079         	movff	floorf@x,floorf@u
  5064  00268E  C051  F07A         	movff	floorf@x+1,floorf@u+1
  5065  002692  C052  F07B         	movff	floorf@x+2,floorf@u+2
  5066  002696  C053  F07C         	movff	floorf@x+3,floorf@u+3
  5067  00269A  0E81               	movlw	129
  5068  00269C  0100               	movlb	0	; () banked
  5069  00269E  6F6D               	movwf	??_floorf& (0+255),b
  5070  0026A0  0EFF               	movlw	255
  5071  0026A2  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5072  0026A4  C079  F06F         	movff	floorf@u,??_floorf+2
  5073  0026A8  C07A  F070         	movff	floorf@u+1,??_floorf+3
  5074  0026AC  C07B  F071         	movff	floorf@u+2,??_floorf+4
  5075  0026B0  C07C  F072         	movff	floorf@u+3,??_floorf+5
  5076  0026B4  0E18               	movlw	24
  5077  0026B6  EF62  F013         	goto	u9260
  5078  0026BA                     u9265:
  5079  0026BA  90D8               	bcf	status,0,c
  5080  0026BC  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  5081  0026BE  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5082  0026C0  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5083  0026C2  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5084  0026C4                     u9260:
  5085  0026C4  2EE8               	decfsz	wreg,f,c
  5086  0026C6  EF5D  F013         	goto	u9265
  5087  0026CA  516F               	movf	(??_floorf+2)& (0+255),w,b
  5088  0026CC  256D               	addwf	??_floorf& (0+255),w,b
  5089  0026CE  6F77               	movwf	floorf@e& (0+255),b
  5090  0026D0  0E00               	movlw	0
  5091  0026D2  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  5092  0026D4  6F78               	movwf	(floorf@e+1)& (0+255),b
  5093  0026D6  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5094  0026D8  EF77  F013         	goto	u9271
  5095  0026DC  5178               	movf	(floorf@e+1)& (0+255),w,b
  5096  0026DE  E109               	bnz	u9270
  5097  0026E0  0E17               	movlw	23
  5098  0026E2  5D77               	subwf	floorf@e& (0+255),w,b
  5099  0026E4  A0D8               	btfss	status,0,c
  5100  0026E6  EF77  F013         	goto	u9271
  5101  0026EA  EF79  F013         	goto	u9270
  5102  0026EE                     u9271:
  5103  0026EE  EF83  F013         	goto	l8303
  5104  0026F2                     u9270:
  5105  0026F2                     l8301:
  5106                           
  5107                           ; BSR set to: 0
  5108  0026F2  C050  F050         	movff	floorf@x,?_floorf
  5109  0026F6  C051  F051         	movff	floorf@x+1,?_floorf+1
  5110  0026FA  C052  F052         	movff	floorf@x+2,?_floorf+2
  5111  0026FE  C053  F053         	movff	floorf@x+3,?_floorf+3
  5112  002702  EF47  F014         	goto	l1655
  5113  002706                     l8303:
  5114                           
  5115                           ; BSR set to: 0
  5116  002706  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5117  002708  EF88  F013         	goto	u9281
  5118  00270C  EF8A  F013         	goto	u9280
  5119  002710                     u9281:
  5120  002710  EFFB  F013         	goto	l8313
  5121  002714                     u9280:
  5122  002714                     
  5123                           ; BSR set to: 0
  5124  002714  C077  F06D         	movff	floorf@e,??_floorf
  5125  002718  0EFF               	movlw	255
  5126  00271A  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5127  00271C  0EFF               	movlw	255
  5128  00271E  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5129  002720  0E7F               	movlw	127
  5130  002722  6F70               	movwf	(??_floorf+3)& (0+255),b
  5131  002724  0E00               	movlw	0
  5132  002726  6F71               	movwf	(??_floorf+4)& (0+255),b
  5133  002728                     u9295:
  5134  002728  676D               	tstfsz	??_floorf& (0+255),b
  5135  00272A  EF99  F013         	goto	u9296
  5136  00272E  EFA1  F013         	goto	u9297
  5137  002732                     u9296:
  5138  002732  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  5139  002734  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5140  002736  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5141  002738  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5142  00273A  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5143  00273C  2F6D               	decfsz	??_floorf& (0+255),f,b
  5144  00273E  EF94  F013         	goto	u9295
  5145  002742                     u9297:
  5146  002742  C06E  F073         	movff	??_floorf+1,floorf@m
  5147  002746  C06F  F074         	movff	??_floorf+2,floorf@m+1
  5148  00274A  C070  F075         	movff	??_floorf+3,floorf@m+2
  5149  00274E  C071  F076         	movff	??_floorf+4,floorf@m+3
  5150  002752  0100               	movlb	0	; () banked
  5151  002754  5173               	movf	floorf@m& (0+255),w,b
  5152  002756  1579               	andwf	floorf@u& (0+255),w,b
  5153  002758  6F6D               	movwf	??_floorf& (0+255),b
  5154  00275A  5174               	movf	(floorf@m+1)& (0+255),w,b
  5155  00275C  157A               	andwf	(floorf@u+1)& (0+255),w,b
  5156  00275E  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5157  002760  5175               	movf	(floorf@m+2)& (0+255),w,b
  5158  002762  157B               	andwf	(floorf@u+2)& (0+255),w,b
  5159  002764  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5160  002766  5176               	movf	(floorf@m+3)& (0+255),w,b
  5161  002768  157C               	andwf	(floorf@u+3)& (0+255),w,b
  5162  00276A  6F70               	movwf	(??_floorf+3)& (0+255),b
  5163  00276C  516D               	movf	??_floorf& (0+255),w,b
  5164  00276E  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5165  002770  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5166  002772  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5167  002774  A4D8               	btfss	status,2,c
  5168  002776  EFBF  F013         	goto	u9301
  5169  00277A  EFC1  F013         	goto	u9300
  5170  00277E                     u9301:
  5171  00277E  EFC3  F013         	goto	l8309
  5172  002782                     u9300:
  5173  002782  EF79  F013         	goto	l8301
  5174  002786                     l8309:
  5175                           
  5176                           ; BSR set to: 0
  5177  002786  C079  F06D         	movff	floorf@u,??_floorf
  5178  00278A  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5179  00278E  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5180  002792  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5181  002796  0E20               	movlw	32
  5182  002798  EFD3  F013         	goto	u9310
  5183  00279C                     u9315:
  5184  00279C  90D8               	bcf	status,0,c
  5185  00279E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5186  0027A0  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5187  0027A2  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5188  0027A4  336D               	rrcf	??_floorf& (0+255),f,b
  5189  0027A6                     u9310:
  5190  0027A6  2EE8               	decfsz	wreg,f,c
  5191  0027A8  EFCE  F013         	goto	u9315
  5192  0027AC  516D               	movf	??_floorf& (0+255),w,b
  5193  0027AE  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5194  0027B0  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5195  0027B2  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5196  0027B4  B4D8               	btfsc	status,2,c
  5197  0027B6  EFDF  F013         	goto	u9321
  5198  0027BA  EFE1  F013         	goto	u9320
  5199  0027BE                     u9321:
  5200  0027BE  EFE9  F013         	goto	l1658
  5201  0027C2                     u9320:
  5202  0027C2                     
  5203                           ; BSR set to: 0
  5204  0027C2  5173               	movf	floorf@m& (0+255),w,b
  5205  0027C4  2779               	addwf	floorf@u& (0+255),f,b
  5206  0027C6  5174               	movf	(floorf@m+1)& (0+255),w,b
  5207  0027C8  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  5208  0027CA  5175               	movf	(floorf@m+2)& (0+255),w,b
  5209  0027CC  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  5210  0027CE  5176               	movf	(floorf@m+3)& (0+255),w,b
  5211  0027D0  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  5212  0027D2                     l1658:
  5213                           
  5214                           ; BSR set to: 0
  5215  0027D2  1D73               	comf	floorf@m& (0+255),w,b
  5216  0027D4  6F6D               	movwf	??_floorf& (0+255),b
  5217  0027D6  1D74               	comf	(floorf@m+1)& (0+255),w,b
  5218  0027D8  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5219  0027DA  1D75               	comf	(floorf@m+2)& (0+255),w,b
  5220  0027DC  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5221  0027DE  1D76               	comf	(floorf@m+3)& (0+255),w,b
  5222  0027E0  6F70               	movwf	(??_floorf+3)& (0+255),b
  5223  0027E2  516D               	movf	??_floorf& (0+255),w,b
  5224  0027E4  1779               	andwf	floorf@u& (0+255),f,b
  5225  0027E6  516E               	movf	(??_floorf+1)& (0+255),w,b
  5226  0027E8  177A               	andwf	(floorf@u+1)& (0+255),f,b
  5227  0027EA  516F               	movf	(??_floorf+2)& (0+255),w,b
  5228  0027EC  177B               	andwf	(floorf@u+2)& (0+255),f,b
  5229  0027EE  5170               	movf	(??_floorf+3)& (0+255),w,b
  5230  0027F0  177C               	andwf	(floorf@u+3)& (0+255),f,b
  5231  0027F2  EF3F  F014         	goto	l8321
  5232  0027F6                     l8313:
  5233                           
  5234                           ; BSR set to: 0
  5235  0027F6  C079  F06D         	movff	floorf@u,??_floorf
  5236  0027FA  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5237  0027FE  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5238  002802  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5239  002806  0E20               	movlw	32
  5240  002808  EF0B  F014         	goto	u9330
  5241  00280C                     u9335:
  5242  00280C  90D8               	bcf	status,0,c
  5243  00280E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5244  002810  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5245  002812  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5246  002814  336D               	rrcf	??_floorf& (0+255),f,b
  5247  002816                     u9330:
  5248  002816  2EE8               	decfsz	wreg,f,c
  5249  002818  EF06  F014         	goto	u9335
  5250  00281C  516D               	movf	??_floorf& (0+255),w,b
  5251  00281E  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5252  002820  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5253  002822  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5254  002824  A4D8               	btfss	status,2,c
  5255  002826  EF17  F014         	goto	u9341
  5256  00282A  EF19  F014         	goto	u9340
  5257  00282E                     u9341:
  5258  00282E  EF23  F014         	goto	l8317
  5259  002832                     u9340:
  5260  002832                     
  5261                           ; BSR set to: 0
  5262  002832  0E00               	movlw	0
  5263  002834  6F79               	movwf	floorf@u& (0+255),b
  5264  002836  0E00               	movlw	0
  5265  002838  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5266  00283A  0E00               	movlw	0
  5267  00283C  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5268  00283E  0E00               	movlw	0
  5269  002840  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5270  002842  EF3F  F014         	goto	l8321
  5271  002846                     l8317:
  5272                           
  5273                           ; BSR set to: 0
  5274  002846  90D8               	bcf	status,0,c
  5275  002848  3579               	rlcf	floorf@u& (0+255),w,b
  5276  00284A  6F6D               	movwf	??_floorf& (0+255),b
  5277  00284C  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  5278  00284E  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5279  002850  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  5280  002852  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5281  002854  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  5282  002856  6F70               	movwf	(??_floorf+3)& (0+255),b
  5283  002858  516D               	movf	??_floorf& (0+255),w,b
  5284  00285A  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5285  00285C  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5286  00285E  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5287  002860  B4D8               	btfsc	status,2,c
  5288  002862  EF35  F014         	goto	u9351
  5289  002866  EF37  F014         	goto	u9350
  5290  00286A                     u9351:
  5291  00286A  EF3F  F014         	goto	l8321
  5292  00286E                     u9350:
  5293  00286E                     
  5294                           ; BSR set to: 0
  5295  00286E  0E00               	movlw	0
  5296  002870  6F79               	movwf	floorf@u& (0+255),b
  5297  002872  0E00               	movlw	0
  5298  002874  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5299  002876  0E80               	movlw	128
  5300  002878  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5301  00287A  0EBF               	movlw	191
  5302  00287C  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5303  00287E                     l8321:
  5304                           
  5305                           ; BSR set to: 0
  5306  00287E  C079  F050         	movff	floorf@u,?_floorf
  5307  002882  C07A  F051         	movff	floorf@u+1,?_floorf+1
  5308  002886  C07B  F052         	movff	floorf@u+2,?_floorf+2
  5309  00288A  C07C  F053         	movff	floorf@u+3,?_floorf+3
  5310  00288E                     l1655:
  5311                           
  5312                           ; BSR set to: 0
  5313  00288E  0012               	return		;funcret
  5314  002890                     __end_of_floorf:
  5315                           	opt callstack 0
  5316                           
  5317 ;; *************** function ___fpclassifyf *****************
  5318 ;; Defined at:
  5319 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  x               4    5[COMRAM] float 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  u               4   15[COMRAM] struct .
  5324 ;;  e               2   13[COMRAM] int 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  2    5[COMRAM] int 
  5327 ;; Registers used:
  5328 ;;		wreg, status,2, status,0
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5334 ;;      Params:         4       0       0       0       0       0       0       0       0
  5335 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5336 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5337 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5338 ;;Total ram usage:       14 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:    2
  5341 ;; This function calls:
  5342 ;;		Nothing
  5343 ;; This function is called by:
  5344 ;;		_efgtoa
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text11
  5349  00382A                     __ptext11:
  5350                           	opt callstack 0
  5351  00382A                     ___fpclassifyf:
  5352                           	opt callstack 23
  5353  00382A  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5354  00382E  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5355  003832  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5356  003836  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5357  00383A  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  5358  00383E  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5359  003842  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5360  003846  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5361  00384A  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5362  00384E  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5363  003852  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5364  003856  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5365  00385A  0E18               	movlw	24
  5366  00385C  EF35  F01C         	goto	u9140
  5367  003860                     u9145:
  5368  003860  90D8               	bcf	status,0,c
  5369  003862  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  5370  003864  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  5371  003866  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  5372  003868  320A               	rrcf	??___fpclassifyf^0,f,c
  5373  00386A                     u9140:
  5374  00386A  2EE8               	decfsz	wreg,f,c
  5375  00386C  EF30  F01C         	goto	u9145
  5376  003870  500A               	movf	??___fpclassifyf^0,w,c
  5377  003872  6E0E               	movwf	___fpclassifyf@e^0,c
  5378  003874  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  5379  003876  500E               	movf	___fpclassifyf@e^0,w,c
  5380  003878  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5381  00387A  A4D8               	btfss	status,2,c
  5382  00387C  EF42  F01C         	goto	u9151
  5383  003880  EF44  F01C         	goto	u9150
  5384  003884                     u9151:
  5385  003884  EF64  F01C         	goto	l8273
  5386  003888                     u9150:
  5387  003888  90D8               	bcf	status,0,c
  5388  00388A  3410               	rlcf	___fpclassifyf@u^0,w,c
  5389  00388C  6E0A               	movwf	??___fpclassifyf^0,c
  5390  00388E  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5391  003890  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  5392  003892  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5393  003894  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  5394  003896  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5395  003898  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  5396  00389A  500A               	movf	??___fpclassifyf^0,w,c
  5397  00389C  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5398  00389E  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5399  0038A0  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5400  0038A2  A4D8               	btfss	status,2,c
  5401  0038A4  EF56  F01C         	goto	u9161
  5402  0038A8  EF58  F01C         	goto	u9160
  5403  0038AC                     u9161:
  5404  0038AC  EF5E  F01C         	goto	l8269
  5405  0038B0                     u9160:
  5406  0038B0  0E00               	movlw	0
  5407  0038B2  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5408  0038B4  0E02               	movlw	2
  5409  0038B6  6E06               	movwf	?___fpclassifyf^0,c
  5410  0038B8  EF93  F01C         	goto	l1610
  5411  0038BC                     l8269:
  5412  0038BC  0E00               	movlw	0
  5413  0038BE  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5414  0038C0  0E03               	movlw	3
  5415  0038C2  6E06               	movwf	?___fpclassifyf^0,c
  5416  0038C4  EF93  F01C         	goto	l1610
  5417  0038C8                     l8273:
  5418  0038C8  280E               	incf	___fpclassifyf@e^0,w,c
  5419  0038CA  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5420  0038CC  A4D8               	btfss	status,2,c
  5421  0038CE  EF6B  F01C         	goto	u9171
  5422  0038D2  EF6D  F01C         	goto	u9170
  5423  0038D6                     u9171:
  5424  0038D6  EF8F  F01C         	goto	l8279
  5425  0038DA                     u9170:
  5426  0038DA  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5427  0038DE  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5428  0038E2  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5429  0038E6  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5430  0038EA  0E09               	movlw	9
  5431  0038EC                     u9185:
  5432  0038EC  90D8               	bcf	status,0,c
  5433  0038EE  360A               	rlcf	??___fpclassifyf^0,f,c
  5434  0038F0  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  5435  0038F2  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  5436  0038F4  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  5437  0038F6  2EE8               	decfsz	wreg,f,c
  5438  0038F8  EF76  F01C         	goto	u9185
  5439  0038FC  500A               	movf	??___fpclassifyf^0,w,c
  5440  0038FE  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5441  003900  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5442  003902  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5443  003904  B4D8               	btfsc	status,2,c
  5444  003906  EF87  F01C         	goto	u9191
  5445  00390A  EF8A  F01C         	goto	u9190
  5446  00390E                     u9191:
  5447  00390E  0E01               	movlw	1
  5448  003910  EF8B  F01C         	goto	u9200
  5449  003914                     u9190:
  5450  003914  0E00               	movlw	0
  5451  003916                     u9200:
  5452  003916  6E06               	movwf	?___fpclassifyf^0,c
  5453  003918  6A07               	clrf	(?___fpclassifyf+1)^0,c
  5454  00391A  EF93  F01C         	goto	l1610
  5455  00391E                     l8279:
  5456  00391E  0E00               	movlw	0
  5457  003920  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5458  003922  0E04               	movlw	4
  5459  003924  6E06               	movwf	?___fpclassifyf^0,c
  5460  003926                     l1610:
  5461  003926  0012               	return		;funcret
  5462  003928                     __end_of___fpclassifyf:
  5463                           	opt callstack 0
  5464                           
  5465 ;; *************** function ___fleq *****************
  5466 ;; Defined at:
  5467 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  ff1             4    5[COMRAM] int 
  5470 ;;  ff2             4    9[COMRAM] int 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;		None               void
  5475 ;; Registers used:
  5476 ;;		wreg, status,2, status,0
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5482 ;;      Params:         8       0       0       0       0       0       0       0       0
  5483 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5484 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5485 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5486 ;;Total ram usage:       12 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    2
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		_efgtoa
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           	psect	text12
  5497  003DB0                     __ptext12:
  5498                           	opt callstack 0
  5499  003DB0                     ___fleq:
  5500                           	opt callstack 23
  5501  003DB0  0E00               	movlw	0
  5502  003DB2  1406               	andwf	___fleq@ff1^0,w,c
  5503  003DB4  6E0E               	movwf	??___fleq^0,c
  5504  003DB6  0E00               	movlw	0
  5505  003DB8  1407               	andwf	(___fleq@ff1+1)^0,w,c
  5506  003DBA  6E0F               	movwf	(??___fleq+1)^0,c
  5507  003DBC  0E80               	movlw	128
  5508  003DBE  1408               	andwf	(___fleq@ff1+2)^0,w,c
  5509  003DC0  6E10               	movwf	(??___fleq+2)^0,c
  5510  003DC2  0E7F               	movlw	127
  5511  003DC4  1409               	andwf	(___fleq@ff1+3)^0,w,c
  5512  003DC6  6E11               	movwf	(??___fleq+3)^0,c
  5513  003DC8  500E               	movf	??___fleq^0,w,c
  5514  003DCA  100F               	iorwf	(??___fleq+1)^0,w,c
  5515  003DCC  1010               	iorwf	(??___fleq+2)^0,w,c
  5516  003DCE  1011               	iorwf	(??___fleq+3)^0,w,c
  5517  003DD0  A4D8               	btfss	status,2,c
  5518  003DD2  EFED  F01E         	goto	u9631
  5519  003DD6  EFEF  F01E         	goto	u9630
  5520  003DDA                     u9631:
  5521  003DDA  EFF7  F01E         	goto	l8505
  5522  003DDE                     u9630:
  5523  003DDE  0E00               	movlw	0
  5524  003DE0  6E06               	movwf	___fleq@ff1^0,c
  5525  003DE2  0E00               	movlw	0
  5526  003DE4  6E07               	movwf	(___fleq@ff1+1)^0,c
  5527  003DE6  0E00               	movlw	0
  5528  003DE8  6E08               	movwf	(___fleq@ff1+2)^0,c
  5529  003DEA  0E00               	movlw	0
  5530  003DEC  6E09               	movwf	(___fleq@ff1+3)^0,c
  5531  003DEE                     l8505:
  5532  003DEE  0E00               	movlw	0
  5533  003DF0  140A               	andwf	___fleq@ff2^0,w,c
  5534  003DF2  6E0E               	movwf	??___fleq^0,c
  5535  003DF4  0E00               	movlw	0
  5536  003DF6  140B               	andwf	(___fleq@ff2+1)^0,w,c
  5537  003DF8  6E0F               	movwf	(??___fleq+1)^0,c
  5538  003DFA  0E80               	movlw	128
  5539  003DFC  140C               	andwf	(___fleq@ff2+2)^0,w,c
  5540  003DFE  6E10               	movwf	(??___fleq+2)^0,c
  5541  003E00  0E7F               	movlw	127
  5542  003E02  140D               	andwf	(___fleq@ff2+3)^0,w,c
  5543  003E04  6E11               	movwf	(??___fleq+3)^0,c
  5544  003E06  500E               	movf	??___fleq^0,w,c
  5545  003E08  100F               	iorwf	(??___fleq+1)^0,w,c
  5546  003E0A  1010               	iorwf	(??___fleq+2)^0,w,c
  5547  003E0C  1011               	iorwf	(??___fleq+3)^0,w,c
  5548  003E0E  A4D8               	btfss	status,2,c
  5549  003E10  EF0C  F01F         	goto	u9641
  5550  003E14  EF0E  F01F         	goto	u9640
  5551  003E18                     u9641:
  5552  003E18  EF16  F01F         	goto	l8509
  5553  003E1C                     u9640:
  5554  003E1C  0E00               	movlw	0
  5555  003E1E  6E0A               	movwf	___fleq@ff2^0,c
  5556  003E20  0E00               	movlw	0
  5557  003E22  6E0B               	movwf	(___fleq@ff2+1)^0,c
  5558  003E24  0E00               	movlw	0
  5559  003E26  6E0C               	movwf	(___fleq@ff2+2)^0,c
  5560  003E28  0E00               	movlw	0
  5561  003E2A  6E0D               	movwf	(___fleq@ff2+3)^0,c
  5562  003E2C                     l8509:
  5563  003E2C  500A               	movf	___fleq@ff2^0,w,c
  5564  003E2E  1806               	xorwf	___fleq@ff1^0,w,c
  5565  003E30  E10F               	bnz	u9650
  5566  003E32  500B               	movf	(___fleq@ff2+1)^0,w,c
  5567  003E34  1807               	xorwf	(___fleq@ff1+1)^0,w,c
  5568  003E36  E10C               	bnz	u9650
  5569  003E38  500C               	movf	(___fleq@ff2+2)^0,w,c
  5570  003E3A  1808               	xorwf	(___fleq@ff1+2)^0,w,c
  5571  003E3C  E109               	bnz	u9650
  5572  003E3E  500D               	movf	(___fleq@ff2+3)^0,w,c
  5573  003E40  1809               	xorwf	(___fleq@ff1+3)^0,w,c
  5574  003E42  B4D8               	btfsc	status,2,c
  5575  003E44  EF26  F01F         	goto	u9651
  5576  003E48  EF28  F01F         	goto	u9650
  5577  003E4C                     u9651:
  5578  003E4C  EF2B  F01F         	goto	l8513
  5579  003E50                     u9650:
  5580  003E50  90D8               	bcf	status,0,c
  5581  003E52  EF2C  F01F         	goto	l1188
  5582  003E56                     l8513:
  5583  003E56  80D8               	bsf	status,0,c
  5584  003E58                     l1188:
  5585  003E58  0012               	return		;funcret
  5586  003E5A                     __end_of___fleq:
  5587                           	opt callstack 0
  5588                           
  5589 ;; *************** function ___awmod *****************
  5590 ;; Defined at:
  5591 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  dividend        2    5[COMRAM] int 
  5594 ;;  divisor         2    7[COMRAM] int 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  sign            1   10[COMRAM] unsigned char 
  5597 ;;  counter         1    9[COMRAM] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  2    5[COMRAM] int 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5607 ;;      Params:         4       0       0       0       0       0       0       0       0
  5608 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5610 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5611 ;;Total ram usage:        6 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    2
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_efgtoa
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text13
  5622  003C52                     __ptext13:
  5623                           	opt callstack 0
  5624  003C52                     ___awmod:
  5625                           	opt callstack 23
  5626  003C52  0E00               	movlw	0
  5627  003C54  6E0B               	movwf	___awmod@sign^0,c
  5628  003C56  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  5629  003C58  EF32  F01E         	goto	u9570
  5630  003C5C  EF30  F01E         	goto	u9571
  5631  003C60                     u9571:
  5632  003C60  EF38  F01E         	goto	l8473
  5633  003C64                     u9570:
  5634  003C64  6C06               	negf	___awmod@dividend^0,c
  5635  003C66  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5636  003C68  B0D8               	btfsc	status,0,c
  5637  003C6A  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5638  003C6C  0E01               	movlw	1
  5639  003C6E  6E0B               	movwf	___awmod@sign^0,c
  5640  003C70                     l8473:
  5641  003C70  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  5642  003C72  EF3F  F01E         	goto	u9580
  5643  003C76  EF3D  F01E         	goto	u9581
  5644  003C7A                     u9581:
  5645  003C7A  EF43  F01E         	goto	l8477
  5646  003C7E                     u9580:
  5647  003C7E  6C08               	negf	___awmod@divisor^0,c
  5648  003C80  1E09               	comf	(___awmod@divisor+1)^0,f,c
  5649  003C82  B0D8               	btfsc	status,0,c
  5650  003C84  2A09               	incf	(___awmod@divisor+1)^0,f,c
  5651  003C86                     l8477:
  5652  003C86  5008               	movf	___awmod@divisor^0,w,c
  5653  003C88  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  5654  003C8A  B4D8               	btfsc	status,2,c
  5655  003C8C  EF4A  F01E         	goto	u9591
  5656  003C90  EF4C  F01E         	goto	u9590
  5657  003C94                     u9591:
  5658  003C94  EF70  F01E         	goto	l8493
  5659  003C98                     u9590:
  5660  003C98  0E01               	movlw	1
  5661  003C9A  6E0A               	movwf	___awmod@counter^0,c
  5662  003C9C  EF54  F01E         	goto	l8483
  5663  003CA0                     l8481:
  5664  003CA0  90D8               	bcf	status,0,c
  5665  003CA2  3608               	rlcf	___awmod@divisor^0,f,c
  5666  003CA4  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  5667  003CA6  2A0A               	incf	___awmod@counter^0,f,c
  5668  003CA8                     l8483:
  5669  003CA8  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  5670  003CAA  EF59  F01E         	goto	u9601
  5671  003CAE  EF5B  F01E         	goto	u9600
  5672  003CB2                     u9601:
  5673  003CB2  EF50  F01E         	goto	l8481
  5674  003CB6                     u9600:
  5675  003CB6                     l8485:
  5676  003CB6  5008               	movf	___awmod@divisor^0,w,c
  5677  003CB8  5C06               	subwf	___awmod@dividend^0,w,c
  5678  003CBA  5009               	movf	(___awmod@divisor+1)^0,w,c
  5679  003CBC  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  5680  003CBE  A0D8               	btfss	status,0,c
  5681  003CC0  EF64  F01E         	goto	u9611
  5682  003CC4  EF66  F01E         	goto	u9610
  5683  003CC8                     u9611:
  5684  003CC8  EF6A  F01E         	goto	l8489
  5685  003CCC                     u9610:
  5686  003CCC  5008               	movf	___awmod@divisor^0,w,c
  5687  003CCE  5E06               	subwf	___awmod@dividend^0,f,c
  5688  003CD0  5009               	movf	(___awmod@divisor+1)^0,w,c
  5689  003CD2  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  5690  003CD4                     l8489:
  5691  003CD4  90D8               	bcf	status,0,c
  5692  003CD6  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  5693  003CD8  3208               	rrcf	___awmod@divisor^0,f,c
  5694  003CDA  2E0A               	decfsz	___awmod@counter^0,f,c
  5695  003CDC  EF5B  F01E         	goto	l8485
  5696  003CE0                     l8493:
  5697  003CE0  500B               	movf	___awmod@sign^0,w,c
  5698  003CE2  B4D8               	btfsc	status,2,c
  5699  003CE4  EF76  F01E         	goto	u9621
  5700  003CE8  EF78  F01E         	goto	u9620
  5701  003CEC                     u9621:
  5702  003CEC  EF7C  F01E         	goto	l8497
  5703  003CF0                     u9620:
  5704  003CF0  6C06               	negf	___awmod@dividend^0,c
  5705  003CF2  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5706  003CF4  B0D8               	btfsc	status,0,c
  5707  003CF6  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5708  003CF8                     l8497:
  5709  003CF8  C006  F006         	movff	___awmod@dividend,?___awmod
  5710  003CFC  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  5711  003D00  0012               	return		;funcret
  5712  003D02                     __end_of___awmod:
  5713                           	opt callstack 0
  5714                           
  5715 ;; *************** function ___awdiv *****************
  5716 ;; Defined at:
  5717 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;  dividend        2    5[COMRAM] int 
  5720 ;;  divisor         2    7[COMRAM] int 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  quotient        2   11[COMRAM] int 
  5723 ;;  sign            1   10[COMRAM] unsigned char 
  5724 ;;  counter         1    9[COMRAM] unsigned char 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  2    5[COMRAM] int 
  5727 ;; Registers used:
  5728 ;;		wreg, status,2, status,0
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5734 ;;      Params:         4       0       0       0       0       0       0       0       0
  5735 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5737 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5738 ;;Total ram usage:        8 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    2
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_efgtoa
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text14
  5749  003B8E                     __ptext14:
  5750                           	opt callstack 0
  5751  003B8E                     ___awdiv:
  5752                           	opt callstack 23
  5753  003B8E  0E00               	movlw	0
  5754  003B90  6E0B               	movwf	___awdiv@sign^0,c
  5755  003B92  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  5756  003B94  EFD0  F01D         	goto	u9510
  5757  003B98  EFCE  F01D         	goto	u9511
  5758  003B9C                     u9511:
  5759  003B9C  EFD6  F01D         	goto	l8429
  5760  003BA0                     u9510:
  5761  003BA0  6C08               	negf	___awdiv@divisor^0,c
  5762  003BA2  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  5763  003BA4  B0D8               	btfsc	status,0,c
  5764  003BA6  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  5765  003BA8  0E01               	movlw	1
  5766  003BAA  6E0B               	movwf	___awdiv@sign^0,c
  5767  003BAC                     l8429:
  5768  003BAC  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  5769  003BAE  EFDD  F01D         	goto	u9520
  5770  003BB2  EFDB  F01D         	goto	u9521
  5771  003BB6                     u9521:
  5772  003BB6  EFE3  F01D         	goto	l8435
  5773  003BBA                     u9520:
  5774  003BBA  6C06               	negf	___awdiv@dividend^0,c
  5775  003BBC  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  5776  003BBE  B0D8               	btfsc	status,0,c
  5777  003BC0  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  5778  003BC2  0E01               	movlw	1
  5779  003BC4  1A0B               	xorwf	___awdiv@sign^0,f,c
  5780  003BC6                     l8435:
  5781  003BC6  0E00               	movlw	0
  5782  003BC8  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  5783  003BCA  0E00               	movlw	0
  5784  003BCC  6E0C               	movwf	___awdiv@quotient^0,c
  5785  003BCE  5008               	movf	___awdiv@divisor^0,w,c
  5786  003BD0  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  5787  003BD2  B4D8               	btfsc	status,2,c
  5788  003BD4  EFEE  F01D         	goto	u9531
  5789  003BD8  EFF0  F01D         	goto	u9530
  5790  003BDC                     u9531:
  5791  003BDC  EF18  F01E         	goto	l8457
  5792  003BE0                     u9530:
  5793  003BE0  0E01               	movlw	1
  5794  003BE2  6E0A               	movwf	___awdiv@counter^0,c
  5795  003BE4  EFF8  F01D         	goto	l8443
  5796  003BE8                     l8441:
  5797  003BE8  90D8               	bcf	status,0,c
  5798  003BEA  3608               	rlcf	___awdiv@divisor^0,f,c
  5799  003BEC  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  5800  003BEE  2A0A               	incf	___awdiv@counter^0,f,c
  5801  003BF0                     l8443:
  5802  003BF0  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  5803  003BF2  EFFD  F01D         	goto	u9541
  5804  003BF6  EFFF  F01D         	goto	u9540
  5805  003BFA                     u9541:
  5806  003BFA  EFF4  F01D         	goto	l8441
  5807  003BFE                     u9540:
  5808  003BFE                     l8445:
  5809  003BFE  90D8               	bcf	status,0,c
  5810  003C00  360C               	rlcf	___awdiv@quotient^0,f,c
  5811  003C02  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  5812  003C04  5008               	movf	___awdiv@divisor^0,w,c
  5813  003C06  5C06               	subwf	___awdiv@dividend^0,w,c
  5814  003C08  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5815  003C0A  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  5816  003C0C  A0D8               	btfss	status,0,c
  5817  003C0E  EF0B  F01E         	goto	u9551
  5818  003C12  EF0D  F01E         	goto	u9550
  5819  003C16                     u9551:
  5820  003C16  EF12  F01E         	goto	l8453
  5821  003C1A                     u9550:
  5822  003C1A  5008               	movf	___awdiv@divisor^0,w,c
  5823  003C1C  5E06               	subwf	___awdiv@dividend^0,f,c
  5824  003C1E  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5825  003C20  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  5826  003C22  800C               	bsf	___awdiv@quotient^0,0,c
  5827  003C24                     l8453:
  5828  003C24  90D8               	bcf	status,0,c
  5829  003C26  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  5830  003C28  3208               	rrcf	___awdiv@divisor^0,f,c
  5831  003C2A  2E0A               	decfsz	___awdiv@counter^0,f,c
  5832  003C2C  EFFF  F01D         	goto	l8445
  5833  003C30                     l8457:
  5834  003C30  500B               	movf	___awdiv@sign^0,w,c
  5835  003C32  B4D8               	btfsc	status,2,c
  5836  003C34  EF1E  F01E         	goto	u9561
  5837  003C38  EF20  F01E         	goto	u9560
  5838  003C3C                     u9561:
  5839  003C3C  EF24  F01E         	goto	l8461
  5840  003C40                     u9560:
  5841  003C40  6C0C               	negf	___awdiv@quotient^0,c
  5842  003C42  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  5843  003C44  B0D8               	btfsc	status,0,c
  5844  003C46  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  5845  003C48                     l8461:
  5846  003C48  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5847  003C4C  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5848  003C50  0012               	return		;funcret
  5849  003C52                     __end_of___awdiv:
  5850                           	opt callstack 0
  5851                           
  5852 ;; *************** function _dtoa *****************
  5853 ;; Defined at:
  5854 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  5857 ;;		 -> sprintf@f(6), 
  5858 ;;  d               8   34[COMRAM] long long 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;  n               8   58[COMRAM] long long 
  5861 ;;  i               2   66[COMRAM] int 
  5862 ;;  s               2   56[COMRAM] int 
  5863 ;;  w               2   54[COMRAM] int 
  5864 ;;  p               2   52[COMRAM] int 
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  2   32[COMRAM] int 
  5867 ;; Registers used:
  5868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5874 ;;      Params:        10       0       0       0       0       0       0       0       0
  5875 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5876 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5877 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5878 ;;Total ram usage:       36 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    6
  5881 ;; This function calls:
  5882 ;;		___aodiv
  5883 ;;		___aomod
  5884 ;;		_abs
  5885 ;;		_pad
  5886 ;; This function is called by:
  5887 ;;		_vfpfcnvrt
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           	psect	text15
  5892  002146                     __ptext15:
  5893                           	opt callstack 0
  5894  002146                     _dtoa:
  5895                           	opt callstack 20
  5896  002146                     
  5897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5898  002146  C023  F03B         	movff	dtoa@d,dtoa@n
  5899  00214A  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
  5900  00214E  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
  5901  002152  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
  5902  002156  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
  5903  00215A  C028  F040         	movff	dtoa@d+5,dtoa@n+5
  5904  00215E  C029  F041         	movff	dtoa@d+6,dtoa@n+6
  5905  002162  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
  5906  002166                     
  5907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5908  002166  BE42               	btfsc	(dtoa@n+7)^0,7,c
  5909  002168  EFB8  F010         	goto	u9741
  5910  00216C  EFBB  F010         	goto	u9740
  5911  002170                     u9741:
  5912  002170  0E01               	movlw	1
  5913  002172  EFBC  F010         	goto	u9750
  5914  002176                     u9740:
  5915  002176  0E00               	movlw	0
  5916  002178                     u9750:
  5917  002178  6E39               	movwf	dtoa@s^0,c
  5918  00217A  6A3A               	clrf	(dtoa@s+1)^0,c
  5919                           
  5920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5921  00217C  5039               	movf	dtoa@s^0,w,c
  5922  00217E  103A               	iorwf	(dtoa@s+1)^0,w,c
  5923  002180  B4D8               	btfsc	status,2,c
  5924  002182  EFC5  F010         	goto	u9761
  5925  002186  EFC7  F010         	goto	u9760
  5926  00218A                     u9761:
  5927  00218A  EFD7  F010         	goto	l8581
  5928  00218E                     u9760:
  5929  00218E                     
  5930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5931  00218E  1E42               	comf	(dtoa@n+7)^0,f,c
  5932  002190  1E41               	comf	(dtoa@n+6)^0,f,c
  5933  002192  1E40               	comf	(dtoa@n+5)^0,f,c
  5934  002194  1E3F               	comf	(dtoa@n+4)^0,f,c
  5935  002196  1E3E               	comf	(dtoa@n+3)^0,f,c
  5936  002198  1E3D               	comf	(dtoa@n+2)^0,f,c
  5937  00219A  1E3C               	comf	(dtoa@n+1)^0,f,c
  5938  00219C  6C3B               	negf	dtoa@n^0,c
  5939  00219E  0E00               	movlw	0
  5940  0021A0  223C               	addwfc	(dtoa@n+1)^0,f,c
  5941  0021A2  223D               	addwfc	(dtoa@n+2)^0,f,c
  5942  0021A4  223E               	addwfc	(dtoa@n+3)^0,f,c
  5943  0021A6  223F               	addwfc	(dtoa@n+4)^0,f,c
  5944  0021A8  2240               	addwfc	(dtoa@n+5)^0,f,c
  5945  0021AA  2241               	addwfc	(dtoa@n+6)^0,f,c
  5946  0021AC  2242               	addwfc	(dtoa@n+7)^0,f,c
  5947  0021AE                     l8581:
  5948                           
  5949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5950  0021AE  0101               	movlb	1	; () banked
  5951  0021B0  BF2D               	btfsc	(_prec+1)& (0+255),7,b
  5952  0021B2  EFDD  F010         	goto	u9771
  5953  0021B6  EFDF  F010         	goto	u9770
  5954  0021BA                     u9771:
  5955  0021BA  EFE0  F010         	goto	l8585
  5956  0021BE                     u9770:
  5957  0021BE                     
  5958                           ; BSR set to: 1
  5959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5960  0021BE  932E               	bcf	_flags& (0+255),1,b
  5961  0021C0                     l8585:
  5962                           
  5963                           ; BSR set to: 1
  5964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5965  0021C0  BF2D               	btfsc	(_prec+1)& (0+255),7,b
  5966  0021C2  EFED  F010         	goto	u9780
  5967  0021C6  512D               	movf	(_prec+1)& (0+255),w,b
  5968  0021C8  E106               	bnz	u9781
  5969  0021CA  052C               	decf	_prec& (0+255),w,b
  5970  0021CC  B0D8               	btfsc	status,0,c
  5971  0021CE  EFEB  F010         	goto	u9781
  5972  0021D2  EFED  F010         	goto	u9780
  5973  0021D6                     u9781:
  5974  0021D6  EFF3  F010         	goto	l781
  5975  0021DA                     u9780:
  5976  0021DA                     
  5977                           ; BSR set to: 1
  5978  0021DA  0E00               	movlw	0
  5979  0021DC  6E36               	movwf	(dtoa@p+1)^0,c
  5980  0021DE  0E01               	movlw	1
  5981  0021E0  6E35               	movwf	dtoa@p^0,c
  5982  0021E2  EFF7  F010         	goto	l783
  5983  0021E6                     l781:
  5984                           
  5985                           ; BSR set to: 1
  5986  0021E6  C12C  F035         	movff	_prec,dtoa@p
  5987  0021EA  C12D  F036         	movff	_prec+1,dtoa@p+1
  5988  0021EE                     l783:
  5989                           
  5990                           ; BSR set to: 1
  5991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5992  0021EE  C12A  F037         	movff	_width,dtoa@w
  5993  0021F2  C12B  F038         	movff	_width+1,dtoa@w+1
  5994  0021F6                     
  5995                           ; BSR set to: 1
  5996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5997  0021F6  5039               	movf	dtoa@s^0,w,c
  5998  0021F8  103A               	iorwf	(dtoa@s+1)^0,w,c
  5999  0021FA  A4D8               	btfss	status,2,c
  6000  0021FC  EF02  F011         	goto	u9791
  6001  002200  EF04  F011         	goto	u9790
  6002  002204                     u9791:
  6003  002204  EF0B  F011         	goto	l8593
  6004  002208                     u9790:
  6005  002208                     
  6006                           ; BSR set to: 1
  6007  002208  A52E               	btfss	_flags& (0+255),2,b
  6008  00220A  EF09  F011         	goto	u9801
  6009  00220E  EF0B  F011         	goto	u9800
  6010  002212                     u9801:
  6011  002212  EF0E  F011         	goto	l8595
  6012  002216                     u9800:
  6013  002216                     l8593:
  6014                           
  6015                           ; BSR set to: 1
  6016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6017  002216  0637               	decf	dtoa@w^0,f,c
  6018  002218  A0D8               	btfss	status,0,c
  6019  00221A  0638               	decf	(dtoa@w+1)^0,f,c
  6020  00221C                     l8595:
  6021                           
  6022                           ; BSR set to: 1
  6023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6024  00221C  0E00               	movlw	0
  6025  00221E  6E44               	movwf	(dtoa@i+1)^0,c
  6026  002220  0E4F               	movlw	79
  6027  002222  6E43               	movwf	dtoa@i^0,c
  6028  002224                     
  6029                           ; BSR set to: 1
  6030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6031  002224  0E00               	movlw	0
  6032  002226  6F89               	movwf	(_dbuf+79)& (0+255),b
  6033                           
  6034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6035  002228  EF92  F011         	goto	l8609
  6036  00222C                     l8599:
  6037                           
  6038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6039  00222C  0643               	decf	dtoa@i^0,f,c
  6040  00222E  A0D8               	btfss	status,0,c
  6041  002230  0644               	decf	(dtoa@i+1)^0,f,c
  6042  002232                     
  6043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6044  002232  0E3A               	movlw	low _dbuf
  6045  002234  2443               	addwf	dtoa@i^0,w,c
  6046  002236  6ED9               	movwf	fsr2l,c
  6047  002238  0E01               	movlw	high _dbuf
  6048  00223A  2044               	addwfc	(dtoa@i+1)^0,w,c
  6049  00223C  6EDA               	movwf	fsr2h,c
  6050  00223E  C03B  F006         	movff	dtoa@n,___aomod@dividend
  6051  002242  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
  6052  002246  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
  6053  00224A  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
  6054  00224E  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  6055  002252  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  6056  002256  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  6057  00225A  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  6058  00225E  0E0A               	movlw	10
  6059  002260  6E0E               	movwf	___aomod@divisor^0,c
  6060  002262  0E00               	movlw	0
  6061  002264  6E0F               	movwf	(___aomod@divisor+1)^0,c
  6062  002266  0E00               	movlw	0
  6063  002268  6E10               	movwf	(___aomod@divisor+2)^0,c
  6064  00226A  0E00               	movlw	0
  6065  00226C  6E11               	movwf	(___aomod@divisor+3)^0,c
  6066  00226E  0E00               	movlw	0
  6067  002270  6E12               	movwf	(___aomod@divisor+4)^0,c
  6068  002272  0E00               	movlw	0
  6069  002274  6E13               	movwf	(___aomod@divisor+5)^0,c
  6070  002276  0E00               	movlw	0
  6071  002278  6E14               	movwf	(___aomod@divisor+6)^0,c
  6072  00227A  0E00               	movlw	0
  6073  00227C  6E15               	movwf	(___aomod@divisor+7)^0,c
  6074  00227E  EC26  F019         	call	___aomod	;wreg free
  6075  002282  C006  F02B         	movff	?___aomod,??_dtoa
  6076  002286  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  6077  00228A  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  6078  00228E  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  6079  002292  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  6080  002296  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  6081  00229A  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  6082  00229E  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  6083  0022A2  C02B  F018         	movff	??_dtoa,abs@a
  6084  0022A6  C02D  F019         	movff	??_dtoa+2,abs@a+1
  6085  0022AA  ECE1  F022         	call	_abs	;wreg free
  6086  0022AE  5018               	movf	?_abs^0,w,c
  6087  0022B0  0F30               	addlw	48
  6088  0022B2  6EDF               	movwf	indf2,c
  6089  0022B4                     
  6090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6091  0022B4  0635               	decf	dtoa@p^0,f,c
  6092  0022B6  A0D8               	btfss	status,0,c
  6093  0022B8  0636               	decf	(dtoa@p+1)^0,f,c
  6094  0022BA                     
  6095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6096  0022BA  0637               	decf	dtoa@w^0,f,c
  6097  0022BC  A0D8               	btfss	status,0,c
  6098  0022BE  0638               	decf	(dtoa@w+1)^0,f,c
  6099  0022C0                     
  6100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6101  0022C0  C03B  F006         	movff	dtoa@n,___aodiv@dividend
  6102  0022C4  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  6103  0022C8  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  6104  0022CC  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  6105  0022D0  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  6106  0022D4  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  6107  0022D8  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  6108  0022DC  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  6109  0022E0  0E0A               	movlw	10
  6110  0022E2  6E0E               	movwf	___aodiv@divisor^0,c
  6111  0022E4  0E00               	movlw	0
  6112  0022E6  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  6113  0022E8  0E00               	movlw	0
  6114  0022EA  6E10               	movwf	(___aodiv@divisor+2)^0,c
  6115  0022EC  0E00               	movlw	0
  6116  0022EE  6E11               	movwf	(___aodiv@divisor+3)^0,c
  6117  0022F0  0E00               	movlw	0
  6118  0022F2  6E12               	movwf	(___aodiv@divisor+4)^0,c
  6119  0022F4  0E00               	movlw	0
  6120  0022F6  6E13               	movwf	(___aodiv@divisor+5)^0,c
  6121  0022F8  0E00               	movlw	0
  6122  0022FA  6E14               	movwf	(___aodiv@divisor+6)^0,c
  6123  0022FC  0E00               	movlw	0
  6124  0022FE  6E15               	movwf	(___aodiv@divisor+7)^0,c
  6125  002300  ECA4  F017         	call	___aodiv	;wreg free
  6126  002304  C006  F03B         	movff	?___aodiv,dtoa@n
  6127  002308  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
  6128  00230C  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
  6129  002310  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
  6130  002314  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
  6131  002318  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
  6132  00231C  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
  6133  002320  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
  6134  002324                     l8609:
  6135                           
  6136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6137  002324  BE44               	btfsc	(dtoa@i+1)^0,7,c
  6138  002326  EF9D  F011         	goto	u9811
  6139  00232A  5044               	movf	(dtoa@i+1)^0,w,c
  6140  00232C  E108               	bnz	u9810
  6141  00232E  0443               	decf	dtoa@i^0,w,c
  6142  002330  A0D8               	btfss	status,0,c
  6143  002332  EF9D  F011         	goto	u9811
  6144  002336  EF9F  F011         	goto	u9810
  6145  00233A                     u9811:
  6146  00233A  EFD0  F011         	goto	l8619
  6147  00233E                     u9810:
  6148  00233E  503B               	movf	dtoa@n^0,w,c
  6149  002340  103C               	iorwf	(dtoa@n+1)^0,w,c
  6150  002342  103D               	iorwf	(dtoa@n+2)^0,w,c
  6151  002344  103E               	iorwf	(dtoa@n+3)^0,w,c
  6152  002346  103F               	iorwf	(dtoa@n+4)^0,w,c
  6153  002348  1040               	iorwf	(dtoa@n+5)^0,w,c
  6154  00234A  1041               	iorwf	(dtoa@n+6)^0,w,c
  6155  00234C  1042               	iorwf	(dtoa@n+7)^0,w,c
  6156  00234E  A4D8               	btfss	status,2,c
  6157  002350  EFAC  F011         	goto	u9821
  6158  002354  EFAE  F011         	goto	u9820
  6159  002358                     u9821:
  6160  002358  EF16  F011         	goto	l8599
  6161  00235C                     u9820:
  6162  00235C  BE36               	btfsc	(dtoa@p+1)^0,7,c
  6163  00235E  EFBB  F011         	goto	u9830
  6164  002362  5036               	movf	(dtoa@p+1)^0,w,c
  6165  002364  E106               	bnz	u9831
  6166  002366  0435               	decf	dtoa@p^0,w,c
  6167  002368  B0D8               	btfsc	status,0,c
  6168  00236A  EFB9  F011         	goto	u9831
  6169  00236E  EFBB  F011         	goto	u9830
  6170  002372                     u9831:
  6171  002372  EF16  F011         	goto	l8599
  6172  002376                     u9830:
  6173  002376  BE38               	btfsc	(dtoa@w+1)^0,7,c
  6174  002378  EFC6  F011         	goto	u9841
  6175  00237C  5038               	movf	(dtoa@w+1)^0,w,c
  6176  00237E  E108               	bnz	u9840
  6177  002380  0437               	decf	dtoa@w^0,w,c
  6178  002382  A0D8               	btfss	status,0,c
  6179  002384  EFC6  F011         	goto	u9841
  6180  002388  EFC8  F011         	goto	u9840
  6181  00238C                     u9841:
  6182  00238C  EFD0  F011         	goto	l8619
  6183  002390                     u9840:
  6184  002390  0101               	movlb	1	; () banked
  6185  002392  B32E               	btfsc	_flags& (0+255),1,b
  6186  002394  EFCE  F011         	goto	u9851
  6187  002398  EFD0  F011         	goto	u9850
  6188  00239C                     u9851:
  6189  00239C  EF16  F011         	goto	l8599
  6190  0023A0                     u9850:
  6191  0023A0                     l8619:
  6192                           
  6193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6194  0023A0  5039               	movf	dtoa@s^0,w,c
  6195  0023A2  103A               	iorwf	(dtoa@s+1)^0,w,c
  6196  0023A4  A4D8               	btfss	status,2,c
  6197  0023A6  EFD7  F011         	goto	u9861
  6198  0023AA  EFD9  F011         	goto	u9860
  6199  0023AE                     u9861:
  6200  0023AE  EFE1  F011         	goto	l8623
  6201  0023B2                     u9860:
  6202  0023B2  0101               	movlb	1	; () banked
  6203  0023B4  A52E               	btfss	_flags& (0+255),2,b
  6204  0023B6  EFDF  F011         	goto	u9871
  6205  0023BA  EFE1  F011         	goto	u9870
  6206  0023BE                     u9871:
  6207  0023BE  EFFF  F011         	goto	l8633
  6208  0023C2                     u9870:
  6209  0023C2                     l8623:
  6210                           
  6211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6212  0023C2  0643               	decf	dtoa@i^0,f,c
  6213  0023C4  A0D8               	btfss	status,0,c
  6214  0023C6  0644               	decf	(dtoa@i+1)^0,f,c
  6215  0023C8                     
  6216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6217  0023C8  5039               	movf	dtoa@s^0,w,c
  6218  0023CA  103A               	iorwf	(dtoa@s+1)^0,w,c
  6219  0023CC  A4D8               	btfss	status,2,c
  6220  0023CE  EFEB  F011         	goto	u9881
  6221  0023D2  EFED  F011         	goto	u9880
  6222  0023D6                     u9881:
  6223  0023D6  EFF3  F011         	goto	l8629
  6224  0023DA                     u9880:
  6225  0023DA  0E00               	movlw	0
  6226  0023DC  6E34               	movwf	(_dtoa$897+1)^0,c
  6227  0023DE  0E2B               	movlw	43
  6228  0023E0  6E33               	movwf	_dtoa$897^0,c
  6229  0023E2  EFF7  F011         	goto	l8631
  6230  0023E6                     l8629:
  6231  0023E6  0E00               	movlw	0
  6232  0023E8  6E34               	movwf	(_dtoa$897+1)^0,c
  6233  0023EA  0E2D               	movlw	45
  6234  0023EC  6E33               	movwf	_dtoa$897^0,c
  6235  0023EE                     l8631:
  6236  0023EE  0E3A               	movlw	low _dbuf
  6237  0023F0  2443               	addwf	dtoa@i^0,w,c
  6238  0023F2  6ED9               	movwf	fsr2l,c
  6239  0023F4  0E01               	movlw	high _dbuf
  6240  0023F6  2044               	addwfc	(dtoa@i+1)^0,w,c
  6241  0023F8  6EDA               	movwf	fsr2h,c
  6242  0023FA  C033  FFDF         	movff	_dtoa$897,indf2
  6243  0023FE                     l8633:
  6244                           
  6245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6246  0023FE  C021  F016         	movff	dtoa@fp,pad@fp
  6247  002402  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  6248  002406  0E3A               	movlw	low _dbuf
  6249  002408  2443               	addwf	dtoa@i^0,w,c
  6250  00240A  6E18               	movwf	pad@buf^0,c
  6251  00240C  0E01               	movlw	high _dbuf
  6252  00240E  2044               	addwfc	(dtoa@i+1)^0,w,c
  6253  002410  6E19               	movwf	(pad@buf+1)^0,c
  6254  002412  C037  F01A         	movff	dtoa@w,pad@p
  6255  002416  C038  F01B         	movff	dtoa@w+1,pad@p+1
  6256  00241A  EC64  F01D         	call	_pad	;wreg free
  6257  00241E  C016  F021         	movff	?_pad,?_dtoa
  6258  002422  C017  F022         	movff	?_pad+1,?_dtoa+1
  6259  002426  0012               	return		;funcret
  6260  002428                     __end_of_dtoa:
  6261                           	opt callstack 0
  6262                           
  6263 ;; *************** function _pad *****************
  6264 ;; Defined at:
  6265 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  6268 ;;		 -> sprintf@f(6), 
  6269 ;;  buf             2   23[COMRAM] PTR unsigned char 
  6270 ;;		 -> dbuf(80), 
  6271 ;;  p               2   25[COMRAM] int 
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;  w               2   30[COMRAM] int 
  6274 ;;  i               2   28[COMRAM] int 
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  2   21[COMRAM] int 
  6277 ;; Registers used:
  6278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6284 ;;      Params:         6       0       0       0       0       0       0       0       0
  6285 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6286 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6287 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6288 ;;Total ram usage:       11 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    5
  6291 ;; This function calls:
  6292 ;;		_fputc
  6293 ;;		_fputs
  6294 ;;		_strlen
  6295 ;; This function is called by:
  6296 ;;		_dtoa
  6297 ;;		_efgtoa
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text16
  6302  003AC8                     __ptext16:
  6303                           	opt callstack 0
  6304  003AC8                     _pad:
  6305                           	opt callstack 20
  6306  003AC8                     
  6307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6308  003AC8  0101               	movlb	1	; () banked
  6309  003ACA  A12E               	btfss	_flags& (0+255),0,b
  6310  003ACC  EF6A  F01D         	goto	u9091
  6311  003AD0  EF6C  F01D         	goto	u9090
  6312  003AD4                     u9091:
  6313  003AD4  EF76  F01D         	goto	l8239
  6314  003AD8                     u9090:
  6315  003AD8                     
  6316                           ; BSR set to: 1
  6317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6318  003AD8  C018  F00F         	movff	pad@buf,fputs@s
  6319  003ADC  C019  F010         	movff	pad@buf+1,fputs@s+1
  6320  003AE0  C016  F011         	movff	pad@fp,fputs@fp
  6321  003AE4  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6322  003AE8  ECBF  F022         	call	_fputs	;wreg free
  6323  003AEC                     l8239:
  6324                           
  6325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6326  003AEC  BE1B               	btfsc	(pad@p+1)^0,7,c
  6327  003AEE  EF7B  F01D         	goto	u9101
  6328  003AF2  EF7D  F01D         	goto	u9100
  6329  003AF6                     u9101:
  6330  003AF6  EF83  F01D         	goto	l8243
  6331  003AFA                     u9100:
  6332  003AFA  C01A  F01F         	movff	pad@p,pad@w
  6333  003AFE  C01B  F020         	movff	pad@p+1,pad@w+1
  6334  003B02  EF87  F01D         	goto	l770
  6335  003B06                     l8243:
  6336  003B06  0E00               	movlw	0
  6337  003B08  6E20               	movwf	(pad@w+1)^0,c
  6338  003B0A  0E00               	movlw	0
  6339  003B0C  6E1F               	movwf	pad@w^0,c
  6340  003B0E                     l770:
  6341                           
  6342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6343  003B0E  0E00               	movlw	0
  6344  003B10  6E1E               	movwf	(pad@i+1)^0,c
  6345  003B12  0E00               	movlw	0
  6346  003B14  6E1D               	movwf	pad@i^0,c
  6347                           
  6348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6349  003B16  EF99  F01D         	goto	l8249
  6350  003B1A                     l8245:
  6351                           
  6352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6353  003B1A  0E00               	movlw	0
  6354  003B1C  6E07               	movwf	(fputc@c+1)^0,c
  6355  003B1E  0E20               	movlw	32
  6356  003B20  6E06               	movwf	fputc@c^0,c
  6357  003B22  C016  F008         	movff	pad@fp,fputc@fp
  6358  003B26  C017  F009         	movff	pad@fp+1,fputc@fp+1
  6359  003B2A  ECFF  F01C         	call	_fputc	;wreg free
  6360  003B2E                     
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6362  003B2E  4A1D               	infsnz	pad@i^0,f,c
  6363  003B30  2A1E               	incf	(pad@i+1)^0,f,c
  6364  003B32                     l8249:
  6365                           
  6366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6367  003B32  501F               	movf	pad@w^0,w,c
  6368  003B34  5C1D               	subwf	pad@i^0,w,c
  6369  003B36  501E               	movf	(pad@i+1)^0,w,c
  6370  003B38  0A80               	xorlw	128
  6371  003B3A  6E1C               	movwf	??_pad^0,c
  6372  003B3C  5020               	movf	(pad@w+1)^0,w,c
  6373  003B3E  0A80               	xorlw	128
  6374  003B40  581C               	subwfb	??_pad^0,w,c
  6375  003B42  A0D8               	btfss	status,0,c
  6376  003B44  EFA6  F01D         	goto	u9111
  6377  003B48  EFA8  F01D         	goto	u9110
  6378  003B4C                     u9111:
  6379  003B4C  EF8D  F01D         	goto	l8245
  6380  003B50                     u9110:
  6381  003B50                     
  6382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6383  003B50  0101               	movlb	1	; () banked
  6384  003B52  B12E               	btfsc	_flags& (0+255),0,b
  6385  003B54  EFAE  F01D         	goto	u9121
  6386  003B58  EFB0  F01D         	goto	u9120
  6387  003B5C                     u9121:
  6388  003B5C  EFBA  F01D         	goto	l8253
  6389  003B60                     u9120:
  6390  003B60                     
  6391                           ; BSR set to: 1
  6392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6393  003B60  C018  F00F         	movff	pad@buf,fputs@s
  6394  003B64  C019  F010         	movff	pad@buf+1,fputs@s+1
  6395  003B68  C016  F011         	movff	pad@fp,fputs@fp
  6396  003B6C  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6397  003B70  ECBF  F022         	call	_fputs	;wreg free
  6398  003B74                     l8253:
  6399                           
  6400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6401  003B74  C018  F006         	movff	pad@buf,strlen@s
  6402  003B78  C019  F007         	movff	pad@buf+1,strlen@s+1
  6403  003B7C  EC75  F023         	call	_strlen	;wreg free
  6404  003B80  501F               	movf	pad@w^0,w,c
  6405  003B82  2406               	addwf	?_strlen^0,w,c
  6406  003B84  6E16               	movwf	?_pad^0,c
  6407  003B86  5020               	movf	(pad@w+1)^0,w,c
  6408  003B88  2007               	addwfc	(?_strlen+1)^0,w,c
  6409  003B8A  6E17               	movwf	(?_pad+1)^0,c
  6410  003B8C  0012               	return		;funcret
  6411  003B8E                     __end_of_pad:
  6412                           	opt callstack 0
  6413                           
  6414 ;; *************** function _strlen *****************
  6415 ;; Defined at:
  6416 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  s               2    5[COMRAM] PTR const unsigned char 
  6419 ;;		 -> dbuf(80), 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  a               2    7[COMRAM] PTR const unsigned char 
  6422 ;;		 -> dbuf(80), 
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  2    5[COMRAM] unsigned int 
  6425 ;; Registers used:
  6426 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6432 ;;      Params:         2       0       0       0       0       0       0       0       0
  6433 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6435 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6436 ;;Total ram usage:        4 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:    2
  6439 ;; This function calls:
  6440 ;;		Nothing
  6441 ;; This function is called by:
  6442 ;;		_pad
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text17
  6447  0046EA                     __ptext17:
  6448                           	opt callstack 0
  6449  0046EA                     _strlen:
  6450                           	opt callstack 22
  6451  0046EA  C006  F008         	movff	strlen@s,strlen@a
  6452  0046EE  C007  F009         	movff	strlen@s+1,strlen@a+1
  6453  0046F2  EF7D  F023         	goto	l7647
  6454  0046F6                     l7645:
  6455  0046F6  4A06               	infsnz	strlen@s^0,f,c
  6456  0046F8  2A07               	incf	(strlen@s+1)^0,f,c
  6457  0046FA                     l7647:
  6458  0046FA  C006  FFD9         	movff	strlen@s,fsr2l
  6459  0046FE  C007  FFDA         	movff	strlen@s+1,fsr2h
  6460  004702  50DF               	movf	indf2,w,c
  6461  004704  A4D8               	btfss	status,2,c
  6462  004706  EF87  F023         	goto	u8051
  6463  00470A  EF89  F023         	goto	u8050
  6464  00470E                     u8051:
  6465  00470E  EF7B  F023         	goto	l7645
  6466  004712                     u8050:
  6467  004712  5008               	movf	strlen@a^0,w,c
  6468  004714  5C06               	subwf	strlen@s^0,w,c
  6469  004716  6E06               	movwf	?_strlen^0,c
  6470  004718  5009               	movf	(strlen@a+1)^0,w,c
  6471  00471A  5807               	subwfb	(strlen@s+1)^0,w,c
  6472  00471C  6E07               	movwf	(?_strlen+1)^0,c
  6473  00471E  0012               	return		;funcret
  6474  004720                     __end_of_strlen:
  6475                           	opt callstack 0
  6476                           
  6477 ;; *************** function _fputs *****************
  6478 ;; Defined at:
  6479 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  s               2   14[COMRAM] PTR const unsigned char 
  6482 ;;		 -> dbuf(80), 
  6483 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6484 ;;		 -> sprintf@f(6), 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  i               2   19[COMRAM] int 
  6487 ;;  c               1   18[COMRAM] unsigned char 
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  2   14[COMRAM] int 
  6490 ;; Registers used:
  6491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6497 ;;      Params:         4       0       0       0       0       0       0       0       0
  6498 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6500 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6501 ;;Total ram usage:        7 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:    4
  6504 ;; This function calls:
  6505 ;;		_fputc
  6506 ;; This function is called by:
  6507 ;;		_pad
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text18
  6512  00457E                     __ptext18:
  6513                           	opt callstack 0
  6514  00457E                     _fputs:
  6515                           	opt callstack 20
  6516  00457E  0E00               	movlw	0
  6517  004580  6E15               	movwf	(fputs@i+1)^0,c
  6518  004582  0E00               	movlw	0
  6519  004584  6E14               	movwf	fputs@i^0,c
  6520  004586  EFD0  F022         	goto	l7641
  6521  00458A                     l7637:
  6522  00458A  C013  F006         	movff	fputs@c,fputc@c
  6523  00458E  6A07               	clrf	(fputc@c+1)^0,c
  6524  004590  C011  F008         	movff	fputs@fp,fputc@fp
  6525  004594  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  6526  004598  ECFF  F01C         	call	_fputc	;wreg free
  6527  00459C  4A14               	infsnz	fputs@i^0,f,c
  6528  00459E  2A15               	incf	(fputs@i+1)^0,f,c
  6529  0045A0                     l7641:
  6530  0045A0  5014               	movf	fputs@i^0,w,c
  6531  0045A2  240F               	addwf	fputs@s^0,w,c
  6532  0045A4  6ED9               	movwf	fsr2l,c
  6533  0045A6  5015               	movf	(fputs@i+1)^0,w,c
  6534  0045A8  2010               	addwfc	(fputs@s+1)^0,w,c
  6535  0045AA  6EDA               	movwf	fsr2h,c
  6536  0045AC  50DF               	movf	indf2,w,c
  6537  0045AE  6E13               	movwf	fputs@c^0,c
  6538  0045B0  5013               	movf	fputs@c^0,w,c
  6539  0045B2  A4D8               	btfss	status,2,c
  6540  0045B4  EFDE  F022         	goto	u8041
  6541  0045B8  EFE0  F022         	goto	u8040
  6542  0045BC                     u8041:
  6543  0045BC  EFC5  F022         	goto	l7637
  6544  0045C0                     u8040:
  6545  0045C0  0012               	return		;funcret
  6546  0045C2                     __end_of_fputs:
  6547                           	opt callstack 0
  6548                           
  6549 ;; *************** function _fputc *****************
  6550 ;; Defined at:
  6551 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  c               2    5[COMRAM] int 
  6554 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  6555 ;;		 -> sprintf@f(6), 
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  2    5[COMRAM] int 
  6560 ;; Registers used:
  6561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6567 ;;      Params:         4       0       0       0       0       0       0       0       0
  6568 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6569 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6570 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6571 ;;Total ram usage:        9 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    3
  6574 ;; This function calls:
  6575 ;;		_putch
  6576 ;; This function is called by:
  6577 ;;		_pad
  6578 ;;		_vfpfcnvrt
  6579 ;;		_fputs
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text19
  6584  0039FE                     __ptext19:
  6585                           	opt callstack 0
  6586  0039FE                     _fputc:
  6587                           	opt callstack 23
  6588  0039FE  5008               	movf	fputc@fp^0,w,c
  6589  003A00  1009               	iorwf	(fputc@fp+1)^0,w,c
  6590  003A02  B4D8               	btfsc	status,2,c
  6591  003A04  EF06  F01D         	goto	u7921
  6592  003A08  EF08  F01D         	goto	u7920
  6593  003A0C                     u7921:
  6594  003A0C  EF11  F01D         	goto	l7567
  6595  003A10                     u7920:
  6596  003A10  5008               	movf	fputc@fp^0,w,c
  6597  003A12  1009               	iorwf	(fputc@fp+1)^0,w,c
  6598  003A14  A4D8               	btfss	status,2,c
  6599  003A16  EF0F  F01D         	goto	u7931
  6600  003A1A  EF11  F01D         	goto	u7930
  6601  003A1E                     u7931:
  6602  003A1E  EF16  F01D         	goto	l7569
  6603  003A22                     u7930:
  6604  003A22                     l7567:
  6605  003A22  5006               	movf	fputc@c^0,w,c
  6606  003A24  EC44  F024         	call	_putch
  6607  003A28  EF63  F01D         	goto	l1694
  6608  003A2C                     l7569:
  6609  003A2C  EE20 F004          	lfsr	2,4
  6610  003A30  5008               	movf	fputc@fp^0,w,c
  6611  003A32  26D9               	addwf	fsr2l,f,c
  6612  003A34  5009               	movf	(fputc@fp+1)^0,w,c
  6613  003A36  22DA               	addwfc	fsr2h,f,c
  6614  003A38  50DE               	movf	postinc2,w,c
  6615  003A3A  10DE               	iorwf	postinc2,w,c
  6616  003A3C  B4D8               	btfsc	status,2,c
  6617  003A3E  EF23  F01D         	goto	u7941
  6618  003A42  EF25  F01D         	goto	u7940
  6619  003A46                     u7941:
  6620  003A46  EF40  F01D         	goto	l7573
  6621  003A4A                     u7940:
  6622  003A4A  EE20 F004          	lfsr	2,4
  6623  003A4E  5008               	movf	fputc@fp^0,w,c
  6624  003A50  26D9               	addwf	fsr2l,f,c
  6625  003A52  5009               	movf	(fputc@fp+1)^0,w,c
  6626  003A54  22DA               	addwfc	fsr2h,f,c
  6627  003A56  EE10 F002          	lfsr	1,2
  6628  003A5A  5008               	movf	fputc@fp^0,w,c
  6629  003A5C  26E1               	addwf	fsr1l,f,c
  6630  003A5E  5009               	movf	(fputc@fp+1)^0,w,c
  6631  003A60  22E2               	addwfc	fsr1h,f,c
  6632  003A62  50DE               	movf	postinc2,w,c
  6633  003A64  5CE6               	subwf	postinc1,w,c
  6634  003A66  50E6               	movf	postinc1,w,c
  6635  003A68  0A80               	xorlw	128
  6636  003A6A  6E0E               	movwf	(??_fputc+4)^0,c
  6637  003A6C  50DE               	movf	postinc2,w,c
  6638  003A6E  0A80               	xorlw	128
  6639  003A70  580E               	subwfb	(??_fputc+4)^0,w,c
  6640  003A72  B0D8               	btfsc	status,0,c
  6641  003A74  EF3E  F01D         	goto	u7951
  6642  003A78  EF40  F01D         	goto	u7950
  6643  003A7C                     u7951:
  6644  003A7C  EF63  F01D         	goto	l1694
  6645  003A80                     u7950:
  6646  003A80                     l7573:
  6647  003A80  EE20 F002          	lfsr	2,2
  6648  003A84  5008               	movf	fputc@fp^0,w,c
  6649  003A86  26D9               	addwf	fsr2l,f,c
  6650  003A88  5009               	movf	(fputc@fp+1)^0,w,c
  6651  003A8A  22DA               	addwfc	fsr2h,f,c
  6652  003A8C  CFDE F00A          	movff	postinc2,??_fputc
  6653  003A90  CFDD F00B          	movff	postdec2,??_fputc+1
  6654  003A94  C008  FFD9         	movff	fputc@fp,fsr2l
  6655  003A98  C009  FFDA         	movff	fputc@fp+1,fsr2h
  6656  003A9C  CFDE F00C          	movff	postinc2,??_fputc+2
  6657  003AA0  CFDD F00D          	movff	postdec2,??_fputc+3
  6658  003AA4  500A               	movf	??_fputc^0,w,c
  6659  003AA6  240C               	addwf	(??_fputc+2)^0,w,c
  6660  003AA8  6ED9               	movwf	fsr2l,c
  6661  003AAA  500B               	movf	(??_fputc+1)^0,w,c
  6662  003AAC  200D               	addwfc	(??_fputc+3)^0,w,c
  6663  003AAE  6EDA               	movwf	fsr2h,c
  6664  003AB0  C006  FFDF         	movff	fputc@c,indf2
  6665  003AB4  EE20 F002          	lfsr	2,2
  6666  003AB8  5008               	movf	fputc@fp^0,w,c
  6667  003ABA  26D9               	addwf	fsr2l,f,c
  6668  003ABC  5009               	movf	(fputc@fp+1)^0,w,c
  6669  003ABE  22DA               	addwfc	fsr2h,f,c
  6670  003AC0  2ADE               	incf	postinc2,f,c
  6671  003AC2  0E00               	movlw	0
  6672  003AC4  22DD               	addwfc	postdec2,f,c
  6673  003AC6                     l1694:
  6674  003AC6  0012               	return		;funcret
  6675  003AC8                     __end_of_fputc:
  6676                           	opt callstack 0
  6677                           
  6678 ;; *************** function _putch *****************
  6679 ;; Defined at:
  6680 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  c               1    wreg     unsigned char 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;  c               1    0[COMRAM] unsigned char 
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  1    wreg      void 
  6687 ;; Registers used:
  6688 ;;		wreg
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6694 ;;      Params:         0       0       0       0       0       0       0       0       0
  6695 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6697 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6698 ;;Total ram usage:        0 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:    2
  6701 ;; This function calls:
  6702 ;;		Nothing
  6703 ;; This function is called by:
  6704 ;;		_fputc
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           	psect	text20
  6709  004888                     __ptext20:
  6710                           	opt callstack 0
  6711  004888                     _putch:
  6712                           	opt callstack 23
  6713  004888  0012               	return		;funcret
  6714  00488A                     __end_of_putch:
  6715                           	opt callstack 0
  6716                           
  6717 ;; *************** function _abs *****************
  6718 ;; Defined at:
  6719 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  a               2   23[COMRAM] int 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;		None
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  2   23[COMRAM] int 
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6733 ;;      Params:         2       0       0       0       0       0       0       0       0
  6734 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6735 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6736 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6737 ;;Total ram usage:        4 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; Hardware stack levels required when called:    2
  6740 ;; This function calls:
  6741 ;;		Nothing
  6742 ;; This function is called by:
  6743 ;;		_dtoa
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	text21
  6748  0045C2                     __ptext21:
  6749                           	opt callstack 0
  6750  0045C2                     _abs:
  6751                           	opt callstack 23
  6752  0045C2  BE19               	btfsc	(abs@a+1)^0,7,c
  6753  0045C4  EFEE  F022         	goto	u9130
  6754  0045C8  5019               	movf	(abs@a+1)^0,w,c
  6755  0045CA  E106               	bnz	u9131
  6756  0045CC  0418               	decf	abs@a^0,w,c
  6757  0045CE  B0D8               	btfsc	status,0,c
  6758  0045D0  EFEC  F022         	goto	u9131
  6759  0045D4  EFEE  F022         	goto	u9130
  6760  0045D8                     u9131:
  6761  0045D8  EFFC  F022         	goto	l1615
  6762  0045DC                     u9130:
  6763  0045DC  C018  F01A         	movff	abs@a,??_abs
  6764  0045E0  C019  F01B         	movff	abs@a+1,??_abs+1
  6765  0045E4  1E1A               	comf	??_abs^0,f,c
  6766  0045E6  1E1B               	comf	(??_abs+1)^0,f,c
  6767  0045E8  4A1A               	infsnz	??_abs^0,f,c
  6768  0045EA  2A1B               	incf	(??_abs+1)^0,f,c
  6769  0045EC  C01A  F018         	movff	??_abs,?_abs
  6770  0045F0  C01B  F019         	movff	??_abs+1,?_abs+1
  6771  0045F4  EF00  F023         	goto	l1618
  6772  0045F8                     l1615:
  6773  0045F8  C018  F018         	movff	abs@a,?_abs
  6774  0045FC  C019  F019         	movff	abs@a+1,?_abs+1
  6775  004600                     l1618:
  6776  004600  0012               	return		;funcret
  6777  004602                     __end_of_abs:
  6778                           	opt callstack 0
  6779                           
  6780 ;; *************** function ___aomod *****************
  6781 ;; Defined at:
  6782 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  dividend        8    5[COMRAM] long long 
  6785 ;;  divisor         8   13[COMRAM] long long 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  sign            1   22[COMRAM] unsigned char 
  6788 ;;  counter         1   21[COMRAM] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  8    5[COMRAM] long long 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6798 ;;      Params:        16       0       0       0       0       0       0       0       0
  6799 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6801 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6802 ;;Total ram usage:       18 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:    2
  6805 ;; This function calls:
  6806 ;;		Nothing
  6807 ;; This function is called by:
  6808 ;;		_dtoa
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text22
  6813  00324C                     __ptext22:
  6814                           	opt callstack 0
  6815  00324C                     ___aomod:
  6816                           	opt callstack 23
  6817  00324C  0E00               	movlw	0
  6818  00324E  6E17               	movwf	___aomod@sign^0,c
  6819  003250  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  6820  003252  EF2F  F019         	goto	u9450
  6821  003256  EF2D  F019         	goto	u9451
  6822  00325A                     u9451:
  6823  00325A  EF41  F019         	goto	l8387
  6824  00325E                     u9450:
  6825  00325E  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  6826  003260  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  6827  003262  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  6828  003264  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  6829  003266  1E09               	comf	(___aomod@dividend+3)^0,f,c
  6830  003268  1E08               	comf	(___aomod@dividend+2)^0,f,c
  6831  00326A  1E07               	comf	(___aomod@dividend+1)^0,f,c
  6832  00326C  6C06               	negf	___aomod@dividend^0,c
  6833  00326E  0E00               	movlw	0
  6834  003270  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  6835  003272  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  6836  003274  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  6837  003276  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  6838  003278  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  6839  00327A  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  6840  00327C  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  6841  00327E  0E01               	movlw	1
  6842  003280  6E17               	movwf	___aomod@sign^0,c
  6843  003282                     l8387:
  6844  003282  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  6845  003284  EF48  F019         	goto	u9460
  6846  003288  EF46  F019         	goto	u9461
  6847  00328C                     u9461:
  6848  00328C  EF58  F019         	goto	l8391
  6849  003290                     u9460:
  6850  003290  1E15               	comf	(___aomod@divisor+7)^0,f,c
  6851  003292  1E14               	comf	(___aomod@divisor+6)^0,f,c
  6852  003294  1E13               	comf	(___aomod@divisor+5)^0,f,c
  6853  003296  1E12               	comf	(___aomod@divisor+4)^0,f,c
  6854  003298  1E11               	comf	(___aomod@divisor+3)^0,f,c
  6855  00329A  1E10               	comf	(___aomod@divisor+2)^0,f,c
  6856  00329C  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  6857  00329E  6C0E               	negf	___aomod@divisor^0,c
  6858  0032A0  0E00               	movlw	0
  6859  0032A2  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  6860  0032A4  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  6861  0032A6  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  6862  0032A8  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  6863  0032AA  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  6864  0032AC  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  6865  0032AE  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  6866  0032B0                     l8391:
  6867  0032B0  500E               	movf	___aomod@divisor^0,w,c
  6868  0032B2  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  6869  0032B4  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  6870  0032B6  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  6871  0032B8  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  6872  0032BA  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  6873  0032BC  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  6874  0032BE  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  6875  0032C0  B4D8               	btfsc	status,2,c
  6876  0032C2  EF65  F019         	goto	u9471
  6877  0032C6  EF67  F019         	goto	u9470
  6878  0032CA                     u9471:
  6879  0032CA  EFAF  F019         	goto	l8407
  6880  0032CE                     u9470:
  6881  0032CE  0E01               	movlw	1
  6882  0032D0  6E16               	movwf	___aomod@counter^0,c
  6883  0032D2  EF75  F019         	goto	l8397
  6884  0032D6                     l8395:
  6885  0032D6  90D8               	bcf	status,0,c
  6886  0032D8  360E               	rlcf	___aomod@divisor^0,f,c
  6887  0032DA  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  6888  0032DC  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  6889  0032DE  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  6890  0032E0  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  6891  0032E2  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  6892  0032E4  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  6893  0032E6  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  6894  0032E8  2A16               	incf	___aomod@counter^0,f,c
  6895  0032EA                     l8397:
  6896  0032EA  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  6897  0032EC  EF7A  F019         	goto	u9481
  6898  0032F0  EF7C  F019         	goto	u9480
  6899  0032F4                     u9481:
  6900  0032F4  EF6B  F019         	goto	l8395
  6901  0032F8                     u9480:
  6902  0032F8                     l8399:
  6903  0032F8  500E               	movf	___aomod@divisor^0,w,c
  6904  0032FA  5C06               	subwf	___aomod@dividend^0,w,c
  6905  0032FC  500F               	movf	(___aomod@divisor+1)^0,w,c
  6906  0032FE  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  6907  003300  5010               	movf	(___aomod@divisor+2)^0,w,c
  6908  003302  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  6909  003304  5011               	movf	(___aomod@divisor+3)^0,w,c
  6910  003306  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  6911  003308  5012               	movf	(___aomod@divisor+4)^0,w,c
  6912  00330A  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  6913  00330C  5013               	movf	(___aomod@divisor+5)^0,w,c
  6914  00330E  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  6915  003310  5014               	movf	(___aomod@divisor+6)^0,w,c
  6916  003312  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  6917  003314  5015               	movf	(___aomod@divisor+7)^0,w,c
  6918  003316  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  6919  003318  A0D8               	btfss	status,0,c
  6920  00331A  EF91  F019         	goto	u9491
  6921  00331E  EF93  F019         	goto	u9490
  6922  003322                     u9491:
  6923  003322  EFA3  F019         	goto	l8403
  6924  003326                     u9490:
  6925  003326  500E               	movf	___aomod@divisor^0,w,c
  6926  003328  5E06               	subwf	___aomod@dividend^0,f,c
  6927  00332A  500F               	movf	(___aomod@divisor+1)^0,w,c
  6928  00332C  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  6929  00332E  5010               	movf	(___aomod@divisor+2)^0,w,c
  6930  003330  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  6931  003332  5011               	movf	(___aomod@divisor+3)^0,w,c
  6932  003334  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  6933  003336  5012               	movf	(___aomod@divisor+4)^0,w,c
  6934  003338  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  6935  00333A  5013               	movf	(___aomod@divisor+5)^0,w,c
  6936  00333C  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  6937  00333E  5014               	movf	(___aomod@divisor+6)^0,w,c
  6938  003340  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  6939  003342  5015               	movf	(___aomod@divisor+7)^0,w,c
  6940  003344  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  6941  003346                     l8403:
  6942  003346  90D8               	bcf	status,0,c
  6943  003348  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  6944  00334A  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  6945  00334C  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  6946  00334E  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  6947  003350  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  6948  003352  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  6949  003354  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  6950  003356  320E               	rrcf	___aomod@divisor^0,f,c
  6951  003358  2E16               	decfsz	___aomod@counter^0,f,c
  6952  00335A  EF7C  F019         	goto	l8399
  6953  00335E                     l8407:
  6954  00335E  5017               	movf	___aomod@sign^0,w,c
  6955  003360  B4D8               	btfsc	status,2,c
  6956  003362  EFB5  F019         	goto	u9501
  6957  003366  EFB7  F019         	goto	u9500
  6958  00336A                     u9501:
  6959  00336A  EFC7  F019         	goto	l8411
  6960  00336E                     u9500:
  6961  00336E  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  6962  003370  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  6963  003372  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  6964  003374  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  6965  003376  1E09               	comf	(___aomod@dividend+3)^0,f,c
  6966  003378  1E08               	comf	(___aomod@dividend+2)^0,f,c
  6967  00337A  1E07               	comf	(___aomod@dividend+1)^0,f,c
  6968  00337C  6C06               	negf	___aomod@dividend^0,c
  6969  00337E  0E00               	movlw	0
  6970  003380  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  6971  003382  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  6972  003384  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  6973  003386  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  6974  003388  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  6975  00338A  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  6976  00338C  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  6977  00338E                     l8411:
  6978  00338E  C006  F006         	movff	___aomod@dividend,?___aomod
  6979  003392  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  6980  003396  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  6981  00339A  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  6982  00339E  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  6983  0033A2  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  6984  0033A6  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  6985  0033AA  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  6986  0033AE  0012               	return		;funcret
  6987  0033B0                     __end_of___aomod:
  6988                           	opt callstack 0
  6989                           
  6990 ;; *************** function ___aodiv *****************
  6991 ;; Defined at:
  6992 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  dividend        8    5[COMRAM] long long 
  6995 ;;  divisor         8   13[COMRAM] long long 
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;  quotient        8   23[COMRAM] long long 
  6998 ;;  sign            1   22[COMRAM] unsigned char 
  6999 ;;  counter         1   21[COMRAM] unsigned char 
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  8    5[COMRAM] long long 
  7002 ;; Registers used:
  7003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7009 ;;      Params:        16       0       0       0       0       0       0       0       0
  7010 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7011 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7012 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7013 ;;Total ram usage:       26 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:    2
  7016 ;; This function calls:
  7017 ;;		Nothing
  7018 ;; This function is called by:
  7019 ;;		_dtoa
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023                           	psect	text23
  7024  002F48                     __ptext23:
  7025                           	opt callstack 0
  7026  002F48                     ___aodiv:
  7027                           	opt callstack 23
  7028  002F48  0E00               	movlw	0
  7029  002F4A  6E17               	movwf	___aodiv@sign^0,c
  7030  002F4C  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  7031  002F4E  EFAD  F017         	goto	u9380
  7032  002F52  EFAB  F017         	goto	u9381
  7033  002F56                     u9381:
  7034  002F56  EFBF  F017         	goto	l8343
  7035  002F5A                     u9380:
  7036  002F5A  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  7037  002F5C  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  7038  002F5E  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  7039  002F60  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  7040  002F62  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  7041  002F64  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  7042  002F66  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  7043  002F68  6C0E               	negf	___aodiv@divisor^0,c
  7044  002F6A  0E00               	movlw	0
  7045  002F6C  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  7046  002F6E  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  7047  002F70  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  7048  002F72  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  7049  002F74  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  7050  002F76  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  7051  002F78  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  7052  002F7A  0E01               	movlw	1
  7053  002F7C  6E17               	movwf	___aodiv@sign^0,c
  7054  002F7E                     l8343:
  7055  002F7E  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  7056  002F80  EFC6  F017         	goto	u9390
  7057  002F84  EFC4  F017         	goto	u9391
  7058  002F88                     u9391:
  7059  002F88  EFD8  F017         	goto	l8349
  7060  002F8C                     u9390:
  7061  002F8C  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  7062  002F8E  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  7063  002F90  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  7064  002F92  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  7065  002F94  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  7066  002F96  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  7067  002F98  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  7068  002F9A  6C06               	negf	___aodiv@dividend^0,c
  7069  002F9C  0E00               	movlw	0
  7070  002F9E  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  7071  002FA0  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  7072  002FA2  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  7073  002FA4  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  7074  002FA6  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  7075  002FA8  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  7076  002FAA  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  7077  002FAC  0E01               	movlw	1
  7078  002FAE  1A17               	xorwf	___aodiv@sign^0,f,c
  7079  002FB0                     l8349:
  7080  002FB0  EE20  F018         	lfsr	2,___aodiv@quotient
  7081  002FB4  0E07               	movlw	7
  7082  002FB6                     u9401:
  7083  002FB6  6ADE               	clrf	postinc2,c
  7084  002FB8  06E8               	decf	wreg,f,c
  7085  002FBA  E2FD               	bc	u9401
  7086  002FBC  500E               	movf	___aodiv@divisor^0,w,c
  7087  002FBE  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  7088  002FC0  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  7089  002FC2  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  7090  002FC4  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  7091  002FC6  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  7092  002FC8  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  7093  002FCA  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  7094  002FCC  B4D8               	btfsc	status,2,c
  7095  002FCE  EFEB  F017         	goto	u9411
  7096  002FD2  EFED  F017         	goto	u9410
  7097  002FD6                     u9411:
  7098  002FD6  EF3F  F018         	goto	l8371
  7099  002FDA                     u9410:
  7100  002FDA  0E01               	movlw	1
  7101  002FDC  6E16               	movwf	___aodiv@counter^0,c
  7102  002FDE  EFFB  F017         	goto	l8357
  7103  002FE2                     l8355:
  7104  002FE2  90D8               	bcf	status,0,c
  7105  002FE4  360E               	rlcf	___aodiv@divisor^0,f,c
  7106  002FE6  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  7107  002FE8  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  7108  002FEA  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  7109  002FEC  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  7110  002FEE  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  7111  002FF0  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  7112  002FF2  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  7113  002FF4  2A16               	incf	___aodiv@counter^0,f,c
  7114  002FF6                     l8357:
  7115  002FF6  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7116  002FF8  EF00  F018         	goto	u9421
  7117  002FFC  EF02  F018         	goto	u9420
  7118  003000                     u9421:
  7119  003000  EFF1  F017         	goto	l8355
  7120  003004                     u9420:
  7121  003004                     l8359:
  7122  003004  90D8               	bcf	status,0,c
  7123  003006  3618               	rlcf	___aodiv@quotient^0,f,c
  7124  003008  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  7125  00300A  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  7126  00300C  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  7127  00300E  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  7128  003010  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  7129  003012  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  7130  003014  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  7131  003016  500E               	movf	___aodiv@divisor^0,w,c
  7132  003018  5C06               	subwf	___aodiv@dividend^0,w,c
  7133  00301A  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7134  00301C  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  7135  00301E  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7136  003020  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  7137  003022  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7138  003024  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  7139  003026  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7140  003028  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  7141  00302A  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7142  00302C  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  7143  00302E  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7144  003030  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  7145  003032  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7146  003034  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  7147  003036  A0D8               	btfss	status,0,c
  7148  003038  EF20  F018         	goto	u9431
  7149  00303C  EF22  F018         	goto	u9430
  7150  003040                     u9431:
  7151  003040  EF33  F018         	goto	l8367
  7152  003044                     u9430:
  7153  003044  500E               	movf	___aodiv@divisor^0,w,c
  7154  003046  5E06               	subwf	___aodiv@dividend^0,f,c
  7155  003048  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7156  00304A  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  7157  00304C  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7158  00304E  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  7159  003050  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7160  003052  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  7161  003054  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7162  003056  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  7163  003058  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7164  00305A  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  7165  00305C  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7166  00305E  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  7167  003060  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7168  003062  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  7169  003064  8018               	bsf	___aodiv@quotient^0,0,c
  7170  003066                     l8367:
  7171  003066  90D8               	bcf	status,0,c
  7172  003068  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  7173  00306A  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  7174  00306C  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  7175  00306E  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  7176  003070  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  7177  003072  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  7178  003074  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  7179  003076  320E               	rrcf	___aodiv@divisor^0,f,c
  7180  003078  2E16               	decfsz	___aodiv@counter^0,f,c
  7181  00307A  EF02  F018         	goto	l8359
  7182  00307E                     l8371:
  7183  00307E  5017               	movf	___aodiv@sign^0,w,c
  7184  003080  B4D8               	btfsc	status,2,c
  7185  003082  EF45  F018         	goto	u9441
  7186  003086  EF47  F018         	goto	u9440
  7187  00308A                     u9441:
  7188  00308A  EF57  F018         	goto	l8375
  7189  00308E                     u9440:
  7190  00308E  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  7191  003090  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  7192  003092  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  7193  003094  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  7194  003096  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  7195  003098  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  7196  00309A  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  7197  00309C  6C18               	negf	___aodiv@quotient^0,c
  7198  00309E  0E00               	movlw	0
  7199  0030A0  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  7200  0030A2  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  7201  0030A4  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  7202  0030A6  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  7203  0030A8  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  7204  0030AA  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  7205  0030AC  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  7206  0030AE                     l8375:
  7207  0030AE  C018  F006         	movff	___aodiv@quotient,?___aodiv
  7208  0030B2  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  7209  0030B6  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  7210  0030BA  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  7211  0030BE  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  7212  0030C2  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  7213  0030C6  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  7214  0030CA  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  7215  0030CE  0012               	return		;funcret
  7216  0030D0                     __end_of___aodiv:
  7217                           	opt callstack 0
  7218                           
  7219 ;; *************** function _atoi *****************
  7220 ;; Defined at:
  7221 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  s               2   12[COMRAM] PTR const unsigned char 
  7224 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  7225 ;;		 -> STR_3(34), 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  n               2   25[COMRAM] int 
  7228 ;;  neg             2   18[COMRAM] int 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  2   12[COMRAM] int 
  7231 ;; Registers used:
  7232 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7238 ;;      Params:         2       0       0       0       0       0       0       0       0
  7239 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7240 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7241 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7242 ;;Total ram usage:       15 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; Hardware stack levels required when called:    3
  7245 ;; This function calls:
  7246 ;;		___wmul
  7247 ;;		_isdigit
  7248 ;;		_isspace
  7249 ;; This function is called by:
  7250 ;;		_vfpfcnvrt
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           	psect	text24
  7255  002DB8                     __ptext24:
  7256                           	opt callstack 0
  7257  002DB8                     _atoi:
  7258                           	opt callstack 23
  7259  002DB8  0E00               	movlw	0
  7260  002DBA  6E1B               	movwf	(atoi@n+1)^0,c
  7261  002DBC  0E00               	movlw	0
  7262  002DBE  6E1A               	movwf	atoi@n^0,c
  7263  002DC0  0E00               	movlw	0
  7264  002DC2  6E14               	movwf	(atoi@neg+1)^0,c
  7265  002DC4  0E00               	movlw	0
  7266  002DC6  6E13               	movwf	atoi@neg^0,c
  7267  002DC8  EFE8  F016         	goto	l8939
  7268  002DCC                     l8937:
  7269  002DCC  4A0D               	infsnz	atoi@s^0,f,c
  7270  002DCE  2A0E               	incf	(atoi@s+1)^0,f,c
  7271  002DD0                     l8939:
  7272  002DD0  0E01               	movlw	1
  7273  002DD2  6E19               	movwf	_atoi$1425^0,c
  7274  002DD4  C00D  FFF6         	movff	atoi@s,tblptrl
  7275  002DD8  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7276  002DDC                     	if	0	;tblptru may be non-zero
  7277  002DDC                     	endif
  7278  002DDC                     	if	0	;tblptru may be non-zero
  7279  002DDC                     	endif
  7280  002DDC  0008               	tblrd		*
  7281  002DDE  50F5               	movf	tablat,w,c
  7282  002DE0  0A20               	xorlw	32
  7283  002DE2  B4D8               	btfsc	status,2,c
  7284  002DE4  EFF6  F016         	goto	u10411
  7285  002DE8  EFF8  F016         	goto	u10410
  7286  002DEC                     u10411:
  7287  002DEC  EF15  F017         	goto	l8947
  7288  002DF0                     u10410:
  7289  002DF0  0EF7               	movlw	247
  7290  002DF2  6E0F               	movwf	??_atoi^0,c
  7291  002DF4  0EFF               	movlw	255
  7292  002DF6  6E10               	movwf	(??_atoi+1)^0,c
  7293  002DF8  C00D  FFF6         	movff	atoi@s,tblptrl
  7294  002DFC  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7295  002E00                     	if	0	;tblptru may be non-zero
  7296  002E00                     	endif
  7297  002E00                     	if	0	;tblptru may be non-zero
  7298  002E00                     	endif
  7299  002E00  0008               	tblrd		*
  7300  002E02  50F5               	movf	tablat,w,c
  7301  002E04  6E11               	movwf	(??_atoi+2)^0,c
  7302  002E06  6A12               	clrf	(??_atoi+3)^0,c
  7303  002E08  500F               	movf	??_atoi^0,w,c
  7304  002E0A  2611               	addwf	(??_atoi+2)^0,f,c
  7305  002E0C  5010               	movf	(??_atoi+1)^0,w,c
  7306  002E0E  2212               	addwfc	(??_atoi+3)^0,f,c
  7307  002E10  5012               	movf	(??_atoi+3)^0,w,c
  7308  002E12  E109               	bnz	u10420
  7309  002E14  0E05               	movlw	5
  7310  002E16  5C11               	subwf	(??_atoi+2)^0,w,c
  7311  002E18  A0D8               	btfss	status,0,c
  7312  002E1A  EF11  F017         	goto	u10421
  7313  002E1E  EF13  F017         	goto	u10420
  7314  002E22                     u10421:
  7315  002E22  EF15  F017         	goto	l8947
  7316  002E26                     u10420:
  7317  002E26  0E00               	movlw	0
  7318  002E28  6E19               	movwf	_atoi$1425^0,c
  7319  002E2A                     l8947:
  7320  002E2A  C019  F015         	movff	_atoi$1425,_atoi$1424
  7321  002E2E  6A16               	clrf	(_atoi$1424+1)^0,c
  7322  002E30  5015               	movf	_atoi$1424^0,w,c
  7323  002E32  1016               	iorwf	(_atoi$1424+1)^0,w,c
  7324  002E34  A4D8               	btfss	status,2,c
  7325  002E36  EF1F  F017         	goto	u10431
  7326  002E3A  EF21  F017         	goto	u10430
  7327  002E3E                     u10431:
  7328  002E3E  EFE6  F016         	goto	l8937
  7329  002E42                     u10430:
  7330  002E42  EF2B  F017         	goto	l8957
  7331  002E46                     l8953:
  7332  002E46  0E00               	movlw	0
  7333  002E48  6E14               	movwf	(atoi@neg+1)^0,c
  7334  002E4A  0E01               	movlw	1
  7335  002E4C  6E13               	movwf	atoi@neg^0,c
  7336  002E4E                     l8955:
  7337  002E4E  4A0D               	infsnz	atoi@s^0,f,c
  7338  002E50  2A0E               	incf	(atoi@s+1)^0,f,c
  7339  002E52  EF60  F017         	goto	l8963
  7340  002E56                     l8957:
  7341  002E56  C00D  FFF6         	movff	atoi@s,tblptrl
  7342  002E5A  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7343  002E5E                     	if	0	;tblptru may be non-zero
  7344  002E5E                     	endif
  7345  002E5E                     	if	0	;tblptru may be non-zero
  7346  002E5E                     	endif
  7347  002E5E  0008               	tblrd		*
  7348  002E60  50F5               	movf	tablat,w,c
  7349  002E62  6E0F               	movwf	??_atoi^0,c
  7350  002E64  6A10               	clrf	(??_atoi+1)^0,c
  7351                           
  7352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7353                           ; Switch size 1, requested type "simple"
  7354                           ; Number of cases is 1, Range of values is 0 to 0
  7355                           ; switch strategies available:
  7356                           ; Name         Instructions Cycles
  7357                           ; simple_byte            4     3 (average)
  7358                           ;	Chosen strategy is simple_byte
  7359  002E66  5010               	movf	(??_atoi+1)^0,w,c
  7360  002E68  0A00               	xorlw	0	; case 0
  7361  002E6A  B4D8               	btfsc	status,2,c
  7362  002E6C  EF3A  F017         	goto	l10405
  7363  002E70  EF60  F017         	goto	l8963
  7364  002E74                     l10405:
  7365                           
  7366                           ; Switch size 1, requested type "simple"
  7367                           ; Number of cases is 2, Range of values is 43 to 45
  7368                           ; switch strategies available:
  7369                           ; Name         Instructions Cycles
  7370                           ; simple_byte            7     4 (average)
  7371                           ;	Chosen strategy is simple_byte
  7372  002E74  500F               	movf	??_atoi^0,w,c
  7373  002E76  0A2B               	xorlw	43	; case 43
  7374  002E78  B4D8               	btfsc	status,2,c
  7375  002E7A  EF27  F017         	goto	l8955
  7376  002E7E  0A06               	xorlw	6	; case 45
  7377  002E80  B4D8               	btfsc	status,2,c
  7378  002E82  EF23  F017         	goto	l8953
  7379  002E86  EF60  F017         	goto	l8963
  7380  002E8A                     l8959:
  7381  002E8A  C01A  F006         	movff	atoi@n,___wmul@multiplier
  7382  002E8E  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  7383  002E92  0E00               	movlw	0
  7384  002E94  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7385  002E96  0E0A               	movlw	10
  7386  002E98  6E08               	movwf	___wmul@multiplicand^0,c
  7387  002E9A  EC90  F023         	call	___wmul	;wreg free
  7388  002E9E  C00D  FFF6         	movff	atoi@s,tblptrl
  7389  002EA2  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7390  002EA6                     	if	0	;tblptru may be non-zero
  7391  002EA6                     	endif
  7392  002EA6                     	if	0	;tblptru may be non-zero
  7393  002EA6                     	endif
  7394  002EA6  0008               	tblrd		*
  7395  002EA8  50F5               	movf	tablat,w,c
  7396  002EAA  5E06               	subwf	?___wmul^0,f,c
  7397  002EAC  0E00               	movlw	0
  7398  002EAE  5A07               	subwfb	(?___wmul+1)^0,f,c
  7399  002EB0  0E30               	movlw	48
  7400  002EB2  2406               	addwf	?___wmul^0,w,c
  7401  002EB4  6E1A               	movwf	atoi@n^0,c
  7402  002EB6  0E00               	movlw	0
  7403  002EB8  2007               	addwfc	(?___wmul+1)^0,w,c
  7404  002EBA  6E1B               	movwf	(atoi@n+1)^0,c
  7405  002EBC  EF27  F017         	goto	l8955
  7406  002EC0                     l8963:
  7407  002EC0  0ED0               	movlw	208
  7408  002EC2  6E0F               	movwf	??_atoi^0,c
  7409  002EC4  0EFF               	movlw	255
  7410  002EC6  6E10               	movwf	(??_atoi+1)^0,c
  7411  002EC8  C00D  FFF6         	movff	atoi@s,tblptrl
  7412  002ECC  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7413  002ED0                     	if	0	;tblptru may be non-zero
  7414  002ED0                     	endif
  7415  002ED0                     	if	0	;tblptru may be non-zero
  7416  002ED0                     	endif
  7417  002ED0  0008               	tblrd		*
  7418  002ED2  50F5               	movf	tablat,w,c
  7419  002ED4  6E11               	movwf	(??_atoi+2)^0,c
  7420  002ED6  6A12               	clrf	(??_atoi+3)^0,c
  7421  002ED8  500F               	movf	??_atoi^0,w,c
  7422  002EDA  2611               	addwf	(??_atoi+2)^0,f,c
  7423  002EDC  5010               	movf	(??_atoi+1)^0,w,c
  7424  002EDE  2212               	addwfc	(??_atoi+3)^0,f,c
  7425  002EE0  5012               	movf	(??_atoi+3)^0,w,c
  7426  002EE2  E10A               	bnz	u10440
  7427  002EE4  0E0A               	movlw	10
  7428  002EE6  5C11               	subwf	(??_atoi+2)^0,w,c
  7429  002EE8  A0D8               	btfss	status,0,c
  7430  002EEA  EF79  F017         	goto	u10441
  7431  002EEE  EF7C  F017         	goto	u10440
  7432  002EF2                     u10441:
  7433  002EF2  0E01               	movlw	1
  7434  002EF4  EF7D  F017         	goto	u10450
  7435  002EF8                     u10440:
  7436  002EF8  0E00               	movlw	0
  7437  002EFA                     u10450:
  7438  002EFA  6E17               	movwf	_atoi$1426^0,c
  7439  002EFC  6A18               	clrf	(_atoi$1426+1)^0,c
  7440  002EFE  5017               	movf	_atoi$1426^0,w,c
  7441  002F00  1018               	iorwf	(_atoi$1426+1)^0,w,c
  7442  002F02  A4D8               	btfss	status,2,c
  7443  002F04  EF86  F017         	goto	u10461
  7444  002F08  EF88  F017         	goto	u10460
  7445  002F0C                     u10461:
  7446  002F0C  EF45  F017         	goto	l8959
  7447  002F10                     u10460:
  7448  002F10  5013               	movf	atoi@neg^0,w,c
  7449  002F12  1014               	iorwf	(atoi@neg+1)^0,w,c
  7450  002F14  A4D8               	btfss	status,2,c
  7451  002F16  EF8F  F017         	goto	u10471
  7452  002F1A  EF91  F017         	goto	u10470
  7453  002F1E                     u10471:
  7454  002F1E  EF9F  F017         	goto	l1646
  7455  002F22                     u10470:
  7456  002F22  C01A  F00F         	movff	atoi@n,??_atoi
  7457  002F26  C01B  F010         	movff	atoi@n+1,??_atoi+1
  7458  002F2A  1E0F               	comf	??_atoi^0,f,c
  7459  002F2C  1E10               	comf	(??_atoi+1)^0,f,c
  7460  002F2E  4A0F               	infsnz	??_atoi^0,f,c
  7461  002F30  2A10               	incf	(??_atoi+1)^0,f,c
  7462  002F32  C00F  F00D         	movff	??_atoi,?_atoi
  7463  002F36  C010  F00E         	movff	??_atoi+1,?_atoi+1
  7464  002F3A  EFA3  F017         	goto	l1649
  7465  002F3E                     l1646:
  7466  002F3E  C01A  F00D         	movff	atoi@n,?_atoi
  7467  002F42  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  7468  002F46                     l1649:
  7469  002F46  0012               	return		;funcret
  7470  002F48                     __end_of_atoi:
  7471                           	opt callstack 0
  7472                           
  7473 ;; *************** function _isspace *****************
  7474 ;; Defined at:
  7475 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;  c               2    5[COMRAM] int 
  7478 ;; Auto vars:     Size  Location     Type
  7479 ;;		None
  7480 ;; Return value:  Size  Location     Type
  7481 ;;                  2    5[COMRAM] int 
  7482 ;; Registers used:
  7483 ;;		wreg, status,2, status,0
  7484 ;; Tracked objects:
  7485 ;;		On entry : 0/0
  7486 ;;		On exit  : 0/0
  7487 ;;		Unchanged: 0/0
  7488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7489 ;;      Params:         2       0       0       0       0       0       0       0       0
  7490 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7491 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7492 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7493 ;;Total ram usage:        7 bytes
  7494 ;; Hardware stack levels used:    1
  7495 ;; Hardware stack levels required when called:    2
  7496 ;; This function calls:
  7497 ;;		Nothing
  7498 ;; This function is called by:
  7499 ;;		_atoi
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           	psect	text25
  7504  004448                     __ptext25:
  7505                           	opt callstack 0
  7506  004448                     _isspace:
  7507                           	opt callstack 23
  7508  004448  0E01               	movlw	1
  7509  00444A  6E0C               	movwf	_isspace$1455^0,c
  7510  00444C  0E20               	movlw	32
  7511  00444E  1806               	xorwf	isspace@c^0,w,c
  7512  004450  1007               	iorwf	(isspace@c+1)^0,w,c
  7513  004452  B4D8               	btfsc	status,2,c
  7514  004454  EF2E  F022         	goto	u9721
  7515  004458  EF30  F022         	goto	u9720
  7516  00445C                     u9721:
  7517  00445C  EF49  F022         	goto	l8555
  7518  004460                     u9720:
  7519  004460  0EF7               	movlw	247
  7520  004462  6E08               	movwf	??_isspace^0,c
  7521  004464  0EFF               	movlw	255
  7522  004466  6E09               	movwf	(??_isspace+1)^0,c
  7523  004468  C006  F00A         	movff	isspace@c,??_isspace+2
  7524  00446C  C007  F00B         	movff	isspace@c+1,??_isspace+3
  7525  004470  5008               	movf	??_isspace^0,w,c
  7526  004472  260A               	addwf	(??_isspace+2)^0,f,c
  7527  004474  5009               	movf	(??_isspace+1)^0,w,c
  7528  004476  220B               	addwfc	(??_isspace+3)^0,f,c
  7529  004478  500B               	movf	(??_isspace+3)^0,w,c
  7530  00447A  E109               	bnz	u9730
  7531  00447C  0E05               	movlw	5
  7532  00447E  5C0A               	subwf	(??_isspace+2)^0,w,c
  7533  004480  A0D8               	btfss	status,0,c
  7534  004482  EF45  F022         	goto	u9731
  7535  004486  EF47  F022         	goto	u9730
  7536  00448A                     u9731:
  7537  00448A  EF49  F022         	goto	l8555
  7538  00448E                     u9730:
  7539  00448E  0E00               	movlw	0
  7540  004490  6E0C               	movwf	_isspace$1455^0,c
  7541  004492                     l8555:
  7542  004492  C00C  F006         	movff	_isspace$1455,?_isspace
  7543  004496  6A07               	clrf	(?_isspace+1)^0,c
  7544  004498  0012               	return		;funcret
  7545  00449A                     __end_of_isspace:
  7546                           	opt callstack 0
  7547                           
  7548 ;; *************** function _isdigit *****************
  7549 ;; Defined at:
  7550 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  c               2    5[COMRAM] int 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;		None
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  2    5[COMRAM] int 
  7557 ;; Registers used:
  7558 ;;		wreg, status,2, status,0
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7564 ;;      Params:         2       0       0       0       0       0       0       0       0
  7565 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7566 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7567 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7568 ;;Total ram usage:        6 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    2
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_vfpfcnvrt
  7575 ;;		_atoi
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           
  7579                           	psect	text26
  7580  00467A                     __ptext26:
  7581                           	opt callstack 0
  7582  00467A                     _isdigit:
  7583                           	opt callstack 24
  7584  00467A  0ED0               	movlw	208
  7585  00467C  6E08               	movwf	??_isdigit^0,c
  7586  00467E  0EFF               	movlw	255
  7587  004680  6E09               	movwf	(??_isdigit+1)^0,c
  7588  004682  C006  F00A         	movff	isdigit@c,??_isdigit+2
  7589  004686  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  7590  00468A  5008               	movf	??_isdigit^0,w,c
  7591  00468C  260A               	addwf	(??_isdigit+2)^0,f,c
  7592  00468E  5009               	movf	(??_isdigit+1)^0,w,c
  7593  004690  220B               	addwfc	(??_isdigit+3)^0,f,c
  7594  004692  500B               	movf	(??_isdigit+3)^0,w,c
  7595  004694  E10A               	bnz	u9360
  7596  004696  0E0A               	movlw	10
  7597  004698  5C0A               	subwf	(??_isdigit+2)^0,w,c
  7598  00469A  A0D8               	btfss	status,0,c
  7599  00469C  EF52  F023         	goto	u9361
  7600  0046A0  EF55  F023         	goto	u9360
  7601  0046A4                     u9361:
  7602  0046A4  0E01               	movlw	1
  7603  0046A6  EF56  F023         	goto	u9370
  7604  0046AA                     u9360:
  7605  0046AA  0E00               	movlw	0
  7606  0046AC                     u9370:
  7607  0046AC  6E06               	movwf	?_isdigit^0,c
  7608  0046AE  6A07               	clrf	(?_isdigit+1)^0,c
  7609  0046B0  0012               	return		;funcret
  7610  0046B2                     __end_of_isdigit:
  7611                           	opt callstack 0
  7612                           
  7613 ;; *************** function ___wmul *****************
  7614 ;; Defined at:
  7615 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  multiplier      2    5[COMRAM] unsigned int 
  7618 ;;  multiplicand    2    7[COMRAM] unsigned int 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;  product         2    9[COMRAM] unsigned int 
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  2    5[COMRAM] unsigned int 
  7623 ;; Registers used:
  7624 ;;		wreg, status,2, status,0, prodl, prodh
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7630 ;;      Params:         4       0       0       0       0       0       0       0       0
  7631 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7633 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7634 ;;Total ram usage:        6 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:    2
  7637 ;; This function calls:
  7638 ;;		Nothing
  7639 ;; This function is called by:
  7640 ;;		_atoi
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text27
  7645  004720                     __ptext27:
  7646                           	opt callstack 0
  7647  004720                     ___wmul:
  7648                           	opt callstack 23
  7649  004720  5006               	movf	___wmul@multiplier^0,w,c
  7650  004722  0208               	mulwf	___wmul@multiplicand^0,c
  7651  004724  CFF3 F00A          	movff	prodl,___wmul@product
  7652  004728  CFF4 F00B          	movff	prodh,___wmul@product+1
  7653  00472C  5006               	movf	___wmul@multiplier^0,w,c
  7654  00472E  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7655  004730  50F3               	movf	243,w,c
  7656  004732  260B               	addwf	(___wmul@product+1)^0,f,c
  7657  004734  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7658  004736  0208               	mulwf	___wmul@multiplicand^0,c
  7659  004738  50F3               	movf	243,w,c
  7660  00473A  260B               	addwf	(___wmul@product+1)^0,f,c
  7661  00473C  C00A  F006         	movff	___wmul@product,?___wmul
  7662  004740  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7663  004744  0012               	return		;funcret
  7664  004746                     __end_of___wmul:
  7665                           	opt callstack 0
  7666                           
  7667 ;; *************** function _UART_printf *****************
  7668 ;; Defined at:
  7669 ;;		line 47 in file "./UART.h"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;  cadena          2    6[COMRAM] PTR unsigned char 
  7672 ;;		 -> STR_13(63), STR_12(56), STR_10(6), STR_9(9), 
  7673 ;;		 -> STR_8(11), STR_7(10), buffer(50), STR_2(25), 
  7674 ;;		 -> STR_1(24), 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7686 ;;      Params:         2       0       0       0       0       0       0       0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7689 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7690 ;;Total ram usage:        2 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:    3
  7693 ;; This function calls:
  7694 ;;		_UART_write
  7695 ;; This function is called by:
  7696 ;;		_visualizarPasosRealizados
  7697 ;;		_probarSensores
  7698 ;;		_probarUltrasonico
  7699 ;;		_comportamientoBasico
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text28
  7704  004290                     __ptext28:
  7705                           	opt callstack 0
  7706  004290                     _UART_printf:
  7707                           	opt callstack 26
  7708  004290                     
  7709                           ;./UART.h: 48:     while (*cadena) {
  7710  004290  EF5E  F021         	goto	l9237
  7711  004294                     l9233:
  7712                           
  7713                           ;./UART.h: 49:         UART_write(*cadena++);
  7714  004294  C007  FFF6         	movff	UART_printf@cadena,tblptrl
  7715  004298  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7716  00429C  6AF8               	clrf	tblptru,c
  7717  00429E  0E07               	movlw	(high __ramtop+-1)
  7718  0042A0  64F7               	cpfsgt	tblptrh,c
  7719  0042A2  D003               	bra	u10947
  7720  0042A4  0008               	tblrd		*
  7721  0042A6  50F5               	movf	tablat,w,c
  7722  0042A8  D005               	bra	u10940
  7723  0042AA                     u10947:
  7724  0042AA  CFF6 FFE9          	movff	tblptrl,fsr0l
  7725  0042AE  CFF7 FFEA          	movff	tblptrh,fsr0h
  7726  0042B2  50EF               	movf	indf0,w,c
  7727  0042B4                     u10940:
  7728  0042B4  EC25  F024         	call	_UART_write
  7729  0042B8  4A07               	infsnz	UART_printf@cadena^0,f,c
  7730  0042BA  2A08               	incf	(UART_printf@cadena+1)^0,f,c
  7731  0042BC                     l9237:
  7732                           
  7733                           ;./UART.h: 48:     while (*cadena) {
  7734  0042BC  C007  FFF6         	movff	UART_printf@cadena,tblptrl
  7735  0042C0  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7736  0042C4  6AF8               	clrf	tblptru,c
  7737  0042C6  0E07               	movlw	(high __ramtop+-1)
  7738  0042C8  64F7               	cpfsgt	tblptrh,c
  7739  0042CA  D003               	bra	u10957
  7740  0042CC  0008               	tblrd		*
  7741  0042CE  50F5               	movf	tablat,w,c
  7742  0042D0  D005               	bra	u10950
  7743  0042D2                     u10957:
  7744  0042D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  7745  0042D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  7746  0042DA  50EF               	movf	indf0,w,c
  7747  0042DC                     u10950:
  7748  0042DC  0900               	iorlw	0
  7749  0042DE  A4D8               	btfss	status,2,c
  7750  0042E0  EF74  F021         	goto	u10961
  7751  0042E4  EF76  F021         	goto	u10960
  7752  0042E8                     u10961:
  7753  0042E8  EF4A  F021         	goto	l9233
  7754  0042EC                     u10960:
  7755  0042EC  0012               	return		;funcret
  7756  0042EE                     __end_of_UART_printf:
  7757                           	opt callstack 0
  7758                           
  7759 ;; *************** function _UART_write *****************
  7760 ;; Defined at:
  7761 ;;		line 42 in file "./UART.h"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  dato            1    wreg     unsigned char 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;  dato            1    5[COMRAM] unsigned char 
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  1    wreg      void 
  7768 ;; Registers used:
  7769 ;;		wreg
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7775 ;;      Params:         0       0       0       0       0       0       0       0       0
  7776 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7778 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7779 ;;Total ram usage:        1 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    2
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		_UART_printf
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           	psect	text29
  7790  00484A                     __ptext29:
  7791                           	opt callstack 0
  7792  00484A                     _UART_write:
  7793                           	opt callstack 26
  7794                           
  7795                           ;incstack = 0
  7796                           ;UART_write@dato stored from wreg
  7797  00484A  6E06               	movwf	UART_write@dato^0,c
  7798  00484C                     
  7799                           ;./UART.h: 43:     TXREG = dato;
  7800  00484C  C006  FFAD         	movff	UART_write@dato,4013	;volatile
  7801  004850                     l226:
  7802  004850  A2AC               	btfss	172,1,c	;volatile
  7803  004852  EF2D  F024         	goto	u10821
  7804  004856  EF2F  F024         	goto	u10820
  7805  00485A                     u10821:
  7806  00485A  EF28  F024         	goto	l226
  7807  00485E                     u10820:
  7808  00485E  0012               	return		;funcret
  7809  004860                     __end_of_UART_write:
  7810                           	opt callstack 0
  7811                           
  7812 ;; *************** function _probarCruceT *****************
  7813 ;; Defined at:
  7814 ;;		line 1215 in file "main.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;		None
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;  contCaminos     1   83[COMRAM] unsigned char 
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      void 
  7821 ;; Registers used:
  7822 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7828 ;;      Params:         0       0       0       0       0       0       0       0       0
  7829 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7831 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7832 ;;Total ram usage:        1 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; Hardware stack levels required when called:    9
  7835 ;; This function calls:
  7836 ;;		_PID
  7837 ;;		___flge
  7838 ;;		_finalizarRecorrido
  7839 ;;		_leerSensores
  7840 ;;		_mover
  7841 ;;		_velocidadBaja
  7842 ;;		_velocidadEstandar
  7843 ;; This function is called by:
  7844 ;;		_main
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text30
  7849  002A4C                     __ptext30:
  7850                           	opt callstack 0
  7851  002A4C                     _probarCruceT:
  7852                           	opt callstack 21
  7853  002A4C                     
  7854                           ;main.c: 1217:     T_UBYTE contCaminos = 0;
  7855  002A4C  0E00               	movlw	0
  7856  002A4E  6E54               	movwf	probarCruceT@contCaminos^0,c
  7857  002A50                     
  7858                           ;main.c: 1219:     leerSensores();
  7859  002A50  EC68  F018         	call	_leerSensores	;wreg free
  7860  002A54                     
  7861                           ;main.c: 1221:     if (sensorEnfrente > 14)
  7862  002A54  0E00               	movlw	0
  7863  002A56  6E34               	movwf	___flge@ff1^0,c
  7864  002A58  0E00               	movlw	0
  7865  002A5A  6E35               	movwf	(___flge@ff1+1)^0,c
  7866  002A5C  0E60               	movlw	96
  7867  002A5E  6E36               	movwf	(___flge@ff1+2)^0,c
  7868  002A60  0E41               	movlw	65
  7869  002A62  6E37               	movwf	(___flge@ff1+3)^0,c
  7870  002A64  C124  F038         	movff	_sensorEnfrente,___flge@ff2
  7871  002A68  C125  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
  7872  002A6C  C126  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
  7873  002A70  C127  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
  7874  002A74  EC93  F01B         	call	___flge	;wreg free
  7875  002A78  B0D8               	btfsc	status,0,c
  7876  002A7A  EF41  F015         	goto	u11011
  7877  002A7E  EF43  F015         	goto	u11010
  7878  002A82                     u11011:
  7879  002A82  EF44  F015         	goto	l9419
  7880  002A86                     u11010:
  7881  002A86                     
  7882                           ;main.c: 1222:         contCaminos++;
  7883  002A86  2A54               	incf	probarCruceT@contCaminos^0,f,c
  7884  002A88                     l9419:
  7885                           
  7886                           ;main.c: 1223:     if (sensorIzquierda > 25)
  7887  002A88  0E00               	movlw	0
  7888  002A8A  6E34               	movwf	___flge@ff1^0,c
  7889  002A8C  0E00               	movlw	0
  7890  002A8E  6E35               	movwf	(___flge@ff1+1)^0,c
  7891  002A90  0EC8               	movlw	200
  7892  002A92  6E36               	movwf	(___flge@ff1+2)^0,c
  7893  002A94  0E41               	movlw	65
  7894  002A96  6E37               	movwf	(___flge@ff1+3)^0,c
  7895  002A98  C055  F038         	movff	_sensorIzquierda,___flge@ff2
  7896  002A9C  C056  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
  7897  002AA0  C057  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
  7898  002AA4  C058  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
  7899  002AA8  EC93  F01B         	call	___flge	;wreg free
  7900  002AAC  B0D8               	btfsc	status,0,c
  7901  002AAE  EF5B  F015         	goto	u11021
  7902  002AB2  EF5D  F015         	goto	u11020
  7903  002AB6                     u11021:
  7904  002AB6  EF5E  F015         	goto	l9423
  7905  002ABA                     u11020:
  7906  002ABA                     
  7907                           ;main.c: 1224:         contCaminos++;
  7908  002ABA  2A54               	incf	probarCruceT@contCaminos^0,f,c
  7909  002ABC                     l9423:
  7910                           
  7911                           ;main.c: 1225:     if (sensorDerecha > 25)
  7912  002ABC  0E00               	movlw	0
  7913  002ABE  6E34               	movwf	___flge@ff1^0,c
  7914  002AC0  0E00               	movlw	0
  7915  002AC2  6E35               	movwf	(___flge@ff1+1)^0,c
  7916  002AC4  0EC8               	movlw	200
  7917  002AC6  6E36               	movwf	(___flge@ff1+2)^0,c
  7918  002AC8  0E41               	movlw	65
  7919  002ACA  6E37               	movwf	(___flge@ff1+3)^0,c
  7920  002ACC  C0F9  F038         	movff	_sensorDerecha,___flge@ff2
  7921  002AD0  C0FA  F039         	movff	_sensorDerecha+1,___flge@ff2+1
  7922  002AD4  C0FB  F03A         	movff	_sensorDerecha+2,___flge@ff2+2
  7923  002AD8  C0FC  F03B         	movff	_sensorDerecha+3,___flge@ff2+3
  7924  002ADC  EC93  F01B         	call	___flge	;wreg free
  7925  002AE0  B0D8               	btfsc	status,0,c
  7926  002AE2  EF75  F015         	goto	u11031
  7927  002AE6  EF77  F015         	goto	u11030
  7928  002AEA                     u11031:
  7929  002AEA  EF78  F015         	goto	l9427
  7930  002AEE                     u11030:
  7931  002AEE                     
  7932                           ;main.c: 1226:         contCaminos++;
  7933  002AEE  2A54               	incf	probarCruceT@contCaminos^0,f,c
  7934  002AF0                     l9427:
  7935                           
  7936                           ;main.c: 1229:     if (contCaminos > 1 && sensorEnfrente > 14) {
  7937  002AF0  0E01               	movlw	1
  7938  002AF2  6454               	cpfsgt	probarCruceT@contCaminos^0,c
  7939  002AF4  EF7E  F015         	goto	u11041
  7940  002AF8  EF80  F015         	goto	u11040
  7941  002AFC                     u11041:
  7942  002AFC  EFA2  F015         	goto	l9437
  7943  002B00                     u11040:
  7944  002B00  0E00               	movlw	0
  7945  002B02  6E34               	movwf	___flge@ff1^0,c
  7946  002B04  0E00               	movlw	0
  7947  002B06  6E35               	movwf	(___flge@ff1+1)^0,c
  7948  002B08  0E60               	movlw	96
  7949  002B0A  6E36               	movwf	(___flge@ff1+2)^0,c
  7950  002B0C  0E41               	movlw	65
  7951  002B0E  6E37               	movwf	(___flge@ff1+3)^0,c
  7952  002B10  C124  F038         	movff	_sensorEnfrente,___flge@ff2
  7953  002B14  C125  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
  7954  002B18  C126  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
  7955  002B1C  C127  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
  7956  002B20  EC93  F01B         	call	___flge	;wreg free
  7957  002B24  B0D8               	btfsc	status,0,c
  7958  002B26  EF97  F015         	goto	u11051
  7959  002B2A  EF99  F015         	goto	u11050
  7960  002B2E                     u11051:
  7961  002B2E  EFA2  F015         	goto	l9437
  7962  002B32                     u11050:
  7963  002B32                     
  7964                           ;main.c: 1231:         velocidadBaja();
  7965  002B32  ECA3  F023         	call	_velocidadBaja	;wreg free
  7966  002B36                     l9433:
  7967                           
  7968                           ;main.c: 1232:         mouse.curr_state = ENFRENTE;
  7969  002B36  0E01               	movlw	1
  7970  002B38  0100               	movlb	0	; () banked
  7971  002B3A  6FFD               	movwf	_mouse& (0+255),b
  7972  002B3C                     l9435:
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;main.c: 1233:         mover();
  7976  002B3C  EC2D  F01F         	call	_mover	;wreg free
  7977                           
  7978                           ;main.c: 1236:     } else {
  7979  002B40  EF01  F016         	goto	l703
  7980  002B44                     l9437:
  7981                           
  7982                           ;main.c: 1238:         if (sensorEnfrente > 14) {
  7983  002B44  0E00               	movlw	0
  7984  002B46  6E34               	movwf	___flge@ff1^0,c
  7985  002B48  0E00               	movlw	0
  7986  002B4A  6E35               	movwf	(___flge@ff1+1)^0,c
  7987  002B4C  0E60               	movlw	96
  7988  002B4E  6E36               	movwf	(___flge@ff1+2)^0,c
  7989  002B50  0E41               	movlw	65
  7990  002B52  6E37               	movwf	(___flge@ff1+3)^0,c
  7991  002B54  C124  F038         	movff	_sensorEnfrente,___flge@ff2
  7992  002B58  C125  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
  7993  002B5C  C126  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
  7994  002B60  C127  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
  7995  002B64  EC93  F01B         	call	___flge	;wreg free
  7996  002B68  B0D8               	btfsc	status,0,c
  7997  002B6A  EFB9  F015         	goto	u11061
  7998  002B6E  EFBB  F015         	goto	u11060
  7999  002B72                     u11061:
  8000  002B72  EFBF  F015         	goto	l9445
  8001  002B76                     u11060:
  8002  002B76                     
  8003                           ;main.c: 1239:             PID();
  8004  002B76  EC14  F012         	call	_PID	;wreg free
  8005  002B7A  EF9B  F015         	goto	l9433
  8006  002B7E                     l9445:
  8007                           
  8008                           ;main.c: 1245:             if (sensorIzquierda > 25) {
  8009  002B7E  0E00               	movlw	0
  8010  002B80  6E34               	movwf	___flge@ff1^0,c
  8011  002B82  0E00               	movlw	0
  8012  002B84  6E35               	movwf	(___flge@ff1+1)^0,c
  8013  002B86  0EC8               	movlw	200
  8014  002B88  6E36               	movwf	(___flge@ff1+2)^0,c
  8015  002B8A  0E41               	movlw	65
  8016  002B8C  6E37               	movwf	(___flge@ff1+3)^0,c
  8017  002B8E  C055  F038         	movff	_sensorIzquierda,___flge@ff2
  8018  002B92  C056  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
  8019  002B96  C057  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
  8020  002B9A  C058  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
  8021  002B9E  EC93  F01B         	call	___flge	;wreg free
  8022  002BA2  B0D8               	btfsc	status,0,c
  8023  002BA4  EFD6  F015         	goto	u11071
  8024  002BA8  EFD8  F015         	goto	u11070
  8025  002BAC                     u11071:
  8026  002BAC  EFDF  F015         	goto	l9453
  8027  002BB0                     u11070:
  8028  002BB0                     
  8029                           ;main.c: 1246:                 velocidadEstandar();
  8030  002BB0  ECB6  F023         	call	_velocidadEstandar	;wreg free
  8031  002BB4                     
  8032                           ;main.c: 1247:                 mouse.curr_state = IZQUIERDA;
  8033  002BB4  0E02               	movlw	2
  8034  002BB6  0100               	movlb	0	; () banked
  8035  002BB8  6FFD               	movwf	_mouse& (0+255),b
  8036  002BBA  EF9E  F015         	goto	l9435
  8037  002BBE                     l9453:
  8038  002BBE  0E00               	movlw	0
  8039  002BC0  6E34               	movwf	___flge@ff1^0,c
  8040  002BC2  0E00               	movlw	0
  8041  002BC4  6E35               	movwf	(___flge@ff1+1)^0,c
  8042  002BC6  0EC8               	movlw	200
  8043  002BC8  6E36               	movwf	(___flge@ff1+2)^0,c
  8044  002BCA  0E41               	movlw	65
  8045  002BCC  6E37               	movwf	(___flge@ff1+3)^0,c
  8046  002BCE  C0F9  F038         	movff	_sensorDerecha,___flge@ff2
  8047  002BD2  C0FA  F039         	movff	_sensorDerecha+1,___flge@ff2+1
  8048  002BD6  C0FB  F03A         	movff	_sensorDerecha+2,___flge@ff2+2
  8049  002BDA  C0FC  F03B         	movff	_sensorDerecha+3,___flge@ff2+3
  8050  002BDE  EC93  F01B         	call	___flge	;wreg free
  8051  002BE2  B0D8               	btfsc	status,0,c
  8052  002BE4  EFF6  F015         	goto	u11081
  8053  002BE8  EFF8  F015         	goto	u11080
  8054  002BEC                     u11081:
  8055  002BEC  EFFF  F015         	goto	l9461
  8056  002BF0                     u11080:
  8057  002BF0                     
  8058                           ;main.c: 1250:                 velocidadEstandar();
  8059  002BF0  ECB6  F023         	call	_velocidadEstandar	;wreg free
  8060  002BF4                     
  8061                           ;main.c: 1251:                 mouse.curr_state = DERECHA;
  8062  002BF4  0E03               	movlw	3
  8063  002BF6  0100               	movlb	0	; () banked
  8064  002BF8  6FFD               	movwf	_mouse& (0+255),b
  8065  002BFA  EF9E  F015         	goto	l9435
  8066  002BFE                     l9461:
  8067                           
  8068                           ;main.c: 1254:                 finalizarRecorrido();
  8069  002BFE  EC30  F024         	call	_finalizarRecorrido	;wreg free
  8070  002C02                     l703:
  8071  002C02  0012               	return		;funcret
  8072  002C04                     __end_of_probarCruceT:
  8073                           	opt callstack 0
  8074                           
  8075 ;; *************** function _velocidadBaja *****************
  8076 ;; Defined at:
  8077 ;;		line 1268 in file "main.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;		None
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;		None
  8082 ;; Return value:  Size  Location     Type
  8083 ;;                  1    wreg      void 
  8084 ;; Registers used:
  8085 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8086 ;; Tracked objects:
  8087 ;;		On entry : 0/0
  8088 ;;		On exit  : 0/0
  8089 ;;		Unchanged: 0/0
  8090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8091 ;;      Params:         0       0       0       0       0       0       0       0       0
  8092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8095 ;;Total ram usage:        0 bytes
  8096 ;; Hardware stack levels used:    1
  8097 ;; Hardware stack levels required when called:    5
  8098 ;; This function calls:
  8099 ;;		_pwmDuty
  8100 ;; This function is called by:
  8101 ;;		_probarCruceT
  8102 ;;		_comportamientoBasico
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text31
  8107  004746                     __ptext31:
  8108                           	opt callstack 0
  8109  004746                     _velocidadBaja:
  8110                           	opt callstack 24
  8111  004746                     
  8112                           ;main.c: 1270:     pwmDuty(70, 1);
  8113  004746  0E00               	movlw	0
  8114  004748  0100               	movlb	0	; () banked
  8115  00474A  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  8116  00474C  0E46               	movlw	70
  8117  00474E  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  8118  004750  0E01               	movlw	1
  8119  004752  6F7E               	movwf	pwmDuty@channel& (0+255),b
  8120  004754  EC48  F014         	call	_pwmDuty	;wreg free
  8121                           
  8122                           ;main.c: 1271:     pwmDuty(70, 2);
  8123  004758  0E00               	movlw	0
  8124  00475A  0100               	movlb	0	; () banked
  8125  00475C  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  8126  00475E  0E46               	movlw	70
  8127  004760  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  8128  004762  0E02               	movlw	2
  8129  004764  6F7E               	movwf	pwmDuty@channel& (0+255),b
  8130  004766  EC48  F014         	call	_pwmDuty	;wreg free
  8131  00476A  0012               	return		;funcret
  8132  00476C                     __end_of_velocidadBaja:
  8133                           	opt callstack 0
  8134                           
  8135 ;; *************** function _mover *****************
  8136 ;; Defined at:
  8137 ;;		line 600 in file "main.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;		None
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;		None
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  1    wreg      void 
  8144 ;; Registers used:
  8145 ;;		wreg, status,2, status,0, cstack
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8151 ;;      Params:         0       0       0       0       0       0       0       0       0
  8152 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8153 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8154 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8155 ;;Total ram usage:        2 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; Hardware stack levels required when called:    3
  8158 ;; This function calls:
  8159 ;;		_forzarAvanceRecto
  8160 ;; This function is called by:
  8161 ;;		_probarCruceT
  8162 ;;		_probarGirosAuto
  8163 ;;		_regresarPuntoPartida
  8164 ;;		_regresarAlCruce
  8165 ;;		_recorrerCaminoEncontrado
  8166 ;;		_probarPID
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           	psect	text32
  8171  003E5A                     __ptext32:
  8172                           	opt callstack 0
  8173  003E5A                     _mover:
  8174                           	opt callstack 26
  8175  003E5A                     
  8176                           ;main.c: 602:     switch (mouse.curr_state) {
  8177  003E5A  EF5C  F01F         	goto	l9281
  8178  003E5E                     l442:
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;main.c: 606:             LATB4 = 1;
  8182  003E5E  888A               	bsf	3978,4,c	;volatile
  8183                           
  8184                           ;main.c: 607:             LATB5 = 0;
  8185  003E60  9A8A               	bcf	3978,5,c	;volatile
  8186                           
  8187                           ;main.c: 608:             LATB6 = 1;
  8188  003E62  8C8A               	bsf	3978,6,c	;volatile
  8189                           
  8190                           ;main.c: 611:             if (!0)
  8191  003E64  9E8A               	bcf	3978,7,c	;volatile
  8192  003E66                     
  8193                           ; BSR set to: 0
  8194                           ;main.c: 612:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  8195  003E66  0E48               	movlw	72
  8196  003E68  6E08               	movwf	??_mover^0,c
  8197  003E6A  0E6C               	movlw	108
  8198  003E6C                     u11797:
  8199  003E6C  2EE8               	decfsz	wreg,f,c
  8200  003E6E  D7FE               	bra	u11797
  8201  003E70  2E08               	decfsz	??_mover^0,f,c
  8202  003E72  D7FC               	bra	u11797
  8203  003E74  D000               	nop2	
  8204  003E76  EF7A  F01F         	goto	l448
  8205  003E7A                     l445:
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;main.c: 618:             LATB4 = 0;
  8209  003E7A  988A               	bcf	3978,4,c	;volatile
  8210                           
  8211                           ;main.c: 619:             LATB5 = 0;
  8212  003E7C  9A8A               	bcf	3978,5,c	;volatile
  8213                           
  8214                           ;main.c: 620:             LATB6 = 1;
  8215  003E7E  8C8A               	bsf	3978,6,c	;volatile
  8216                           
  8217                           ;main.c: 621:             LATB7 = 0;
  8218  003E80  9E8A               	bcf	3978,7,c	;volatile
  8219  003E82                     l9271:
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;main.c: 623:             _delay((unsigned long)((410)*(4000000/4000.0)));
  8223  003E82  0E03               	movlw	3
  8224  003E84  6E09               	movwf	(??_mover+1)^0,c
  8225  003E86  0E15               	movlw	21
  8226  003E88  6E08               	movwf	??_mover^0,c
  8227  003E8A  0E74               	movlw	116
  8228  003E8C                     u11807:
  8229  003E8C  2EE8               	decfsz	wreg,f,c
  8230  003E8E  D7FE               	bra	u11807
  8231  003E90  2E08               	decfsz	??_mover^0,f,c
  8232  003E92  D7FC               	bra	u11807
  8233  003E94  2E09               	decfsz	(??_mover+1)^0,f,c
  8234  003E96  D7FA               	bra	u11807
  8235  003E98                     
  8236                           ;main.c: 625:             forzarAvanceRecto();
  8237  003E98  ECC9  F023         	call	_forzarAvanceRecto	;wreg free
  8238                           
  8239                           ;main.c: 627:             break;
  8240  003E9C  EF7A  F01F         	goto	l448
  8241  003EA0                     l446:
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;main.c: 631:             LATB4 = 1;
  8245  003EA0  888A               	bsf	3978,4,c	;volatile
  8246                           
  8247                           ;main.c: 632:             LATB5 = 0;
  8248  003EA2  9A8A               	bcf	3978,5,c	;volatile
  8249                           
  8250                           ;main.c: 633:             LATB6 = 0;
  8251  003EA4  9C8A               	bcf	3978,6,c	;volatile
  8252                           
  8253                           ;main.c: 634:             LATB7 = 0;
  8254  003EA6  9E8A               	bcf	3978,7,c	;volatile
  8255  003EA8  EF41  F01F         	goto	l9271
  8256  003EAC                     l447:
  8257                           
  8258                           ; BSR set to: 0
  8259                           ;main.c: 644:             LATB4 = 0;
  8260  003EAC  988A               	bcf	3978,4,c	;volatile
  8261                           
  8262                           ;main.c: 645:             LATB5 = 0;
  8263  003EAE  9A8A               	bcf	3978,5,c	;volatile
  8264                           
  8265                           ;main.c: 646:             LATB6 = 0;
  8266  003EB0  9C8A               	bcf	3978,6,c	;volatile
  8267                           
  8268                           ;main.c: 647:             LATB7 = 0;
  8269  003EB2  9E8A               	bcf	3978,7,c	;volatile
  8270                           
  8271                           ;main.c: 649:             break;
  8272  003EB4  EF7A  F01F         	goto	l448
  8273  003EB8                     l9281:
  8274  003EB8  0100               	movlb	0	; () banked
  8275  003EBA  51FD               	movf	_mouse& (0+255),w,b
  8276  003EBC  6E08               	movwf	??_mover^0,c
  8277  003EBE  6A09               	clrf	(??_mover+1)^0,c
  8278                           
  8279                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8280                           ; Switch size 1, requested type "simple"
  8281                           ; Number of cases is 1, Range of values is 0 to 0
  8282                           ; switch strategies available:
  8283                           ; Name         Instructions Cycles
  8284                           ; simple_byte            4     3 (average)
  8285                           ;	Chosen strategy is simple_byte
  8286  003EC0  5009               	movf	(??_mover+1)^0,w,c
  8287  003EC2  0A00               	xorlw	0	; case 0
  8288  003EC4  B4D8               	btfsc	status,2,c
  8289  003EC6  EF67  F01F         	goto	l10407
  8290  003ECA  EF7A  F01F         	goto	l448
  8291  003ECE                     l10407:
  8292                           
  8293                           ; BSR set to: 0
  8294                           ; Switch size 1, requested type "simple"
  8295                           ; Number of cases is 4, Range of values is 1 to 4
  8296                           ; switch strategies available:
  8297                           ; Name         Instructions Cycles
  8298                           ; simple_byte           13     7 (average)
  8299                           ;	Chosen strategy is simple_byte
  8300  003ECE  5008               	movf	??_mover^0,w,c
  8301  003ED0  0A01               	xorlw	1	; case 1
  8302  003ED2  B4D8               	btfsc	status,2,c
  8303  003ED4  EF2F  F01F         	goto	l442
  8304  003ED8  0A03               	xorlw	3	; case 2
  8305  003EDA  B4D8               	btfsc	status,2,c
  8306  003EDC  EF3D  F01F         	goto	l445
  8307  003EE0  0A01               	xorlw	1	; case 3
  8308  003EE2  B4D8               	btfsc	status,2,c
  8309  003EE4  EF50  F01F         	goto	l446
  8310  003EE8  0A07               	xorlw	7	; case 4
  8311  003EEA  B4D8               	btfsc	status,2,c
  8312  003EEC  EF56  F01F         	goto	l447
  8313  003EF0  EF7A  F01F         	goto	l448
  8314  003EF4                     l448:
  8315  003EF4  0012               	return		;funcret
  8316  003EF6                     __end_of_mover:
  8317                           	opt callstack 0
  8318                           
  8319 ;; *************** function _forzarAvanceRecto *****************
  8320 ;; Defined at:
  8321 ;;		line 486 in file "main.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;		None
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1    wreg      void 
  8328 ;; Registers used:
  8329 ;;		wreg
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8335 ;;      Params:         0       0       0       0       0       0       0       0       0
  8336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8337 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8338 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8339 ;;Total ram usage:        2 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; Hardware stack levels required when called:    2
  8342 ;; This function calls:
  8343 ;;		Nothing
  8344 ;; This function is called by:
  8345 ;;		_mover
  8346 ;;		_moverCarrito
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text33
  8351  004792                     __ptext33:
  8352                           	opt callstack 0
  8353  004792                     _forzarAvanceRecto:
  8354                           	opt callstack 26
  8355  004792                     
  8356                           ;main.c: 487:     LATB4 = 1;
  8357  004792  888A               	bsf	3978,4,c	;volatile
  8358                           
  8359                           ;main.c: 488:     LATB5 = 0;
  8360  004794  9A8A               	bcf	3978,5,c	;volatile
  8361                           
  8362                           ;main.c: 489:     LATB6 = 1;
  8363  004796  8C8A               	bsf	3978,6,c	;volatile
  8364                           
  8365                           ;main.c: 490:     LATB7 = 0;
  8366  004798  9E8A               	bcf	3978,7,c	;volatile
  8367  00479A                     
  8368                           ;main.c: 492:     _delay((unsigned long)((550)*(4000000/4000.0)));
  8369  00479A  0E03               	movlw	3
  8370  00479C  6E07               	movwf	(??_forzarAvanceRecto+1)^0,c
  8371  00479E  0ECB               	movlw	203
  8372  0047A0  6E06               	movwf	??_forzarAvanceRecto^0,c
  8373  0047A2  0E45               	movlw	69
  8374  0047A4                     u11817:
  8375  0047A4  2EE8               	decfsz	wreg,f,c
  8376  0047A6  D7FE               	bra	u11817
  8377  0047A8  2E06               	decfsz	??_forzarAvanceRecto^0,f,c
  8378  0047AA  D7FC               	bra	u11817
  8379  0047AC  2E07               	decfsz	(??_forzarAvanceRecto+1)^0,f,c
  8380  0047AE  D7FA               	bra	u11817
  8381  0047B0  F000               	nop	
  8382  0047B2  0012               	return		;funcret
  8383  0047B4                     __end_of_forzarAvanceRecto:
  8384                           	opt callstack 0
  8385                           
  8386 ;; *************** function _leerSensores *****************
  8387 ;; Defined at:
  8388 ;;		line 1148 in file "main.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;		None
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;		None
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  1    wreg      void 
  8395 ;; Registers used:
  8396 ;;		wreg, status,2, status,0, cstack
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8402 ;;      Params:         0       0       0       0       0       0       0       0       0
  8403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8405 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8406 ;;Total ram usage:        0 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; Hardware stack levels required when called:    4
  8409 ;; This function calls:
  8410 ;;		___fladd
  8411 ;;		___fldiv
  8412 ;;		_dameDistancia
  8413 ;; This function is called by:
  8414 ;;		_probarCruceT
  8415 ;;		_probarSensores
  8416 ;;		_comportamientoBasico
  8417 ;;		_probarPID
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           	psect	text34
  8422  0030D0                     __ptext34:
  8423                           	opt callstack 0
  8424  0030D0                     _leerSensores:
  8425                           	opt callstack 25
  8426  0030D0                     
  8427                           ;main.c: 1150:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  8428  0030D0  C120  F038         	movff	_oldSensorDerecha,___fladd@a
  8429  0030D4  C121  F039         	movff	_oldSensorDerecha+1,___fladd@a+1
  8430  0030D8  C122  F03A         	movff	_oldSensorDerecha+2,___fladd@a+2
  8431  0030DC  C123  F03B         	movff	_oldSensorDerecha+3,___fladd@a+3
  8432  0030E0  0E03               	movlw	3
  8433  0030E2  ECD8  F019         	call	_dameDistancia
  8434  0030E6  C01B  F034         	movff	?_dameDistancia,___fladd@b
  8435  0030EA  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  8436  0030EE  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  8437  0030F2  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  8438  0030F6  EC87  F008         	call	___fladd	;wreg free
  8439  0030FA  C034  F044         	movff	?___fladd,___fldiv@b
  8440  0030FE  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  8441  003102  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  8442  003106  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  8443  00310A  0E00               	movlw	0
  8444  00310C  6E48               	movwf	___fldiv@a^0,c
  8445  00310E  0E00               	movlw	0
  8446  003110  6E49               	movwf	(___fldiv@a+1)^0,c
  8447  003112  0E00               	movlw	0
  8448  003114  6E4A               	movwf	(___fldiv@a+2)^0,c
  8449  003116  0E40               	movlw	64
  8450  003118  6E4B               	movwf	(___fldiv@a+3)^0,c
  8451  00311A  ECD5  F00E         	call	___fldiv	;wreg free
  8452  00311E  C044  F0F9         	movff	?___fldiv,_sensorDerecha
  8453  003122  C045  F0FA         	movff	?___fldiv+1,_sensorDerecha+1
  8454  003126  C046  F0FB         	movff	?___fldiv+2,_sensorDerecha+2
  8455  00312A  C047  F0FC         	movff	?___fldiv+3,_sensorDerecha+3
  8456                           
  8457                           ;main.c: 1151:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
  8458  00312E  C11C  F038         	movff	_oldSensorIzquierda,___fladd@a
  8459  003132  C11D  F039         	movff	_oldSensorIzquierda+1,___fladd@a+1
  8460  003136  C11E  F03A         	movff	_oldSensorIzquierda+2,___fladd@a+2
  8461  00313A  C11F  F03B         	movff	_oldSensorIzquierda+3,___fladd@a+3
  8462  00313E  0E02               	movlw	2
  8463  003140  ECD8  F019         	call	_dameDistancia
  8464  003144  C01B  F034         	movff	?_dameDistancia,___fladd@b
  8465  003148  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  8466  00314C  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  8467  003150  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  8468  003154  EC87  F008         	call	___fladd	;wreg free
  8469  003158  C034  F044         	movff	?___fladd,___fldiv@b
  8470  00315C  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  8471  003160  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  8472  003164  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  8473  003168  0E00               	movlw	0
  8474  00316A  6E48               	movwf	___fldiv@a^0,c
  8475  00316C  0E00               	movlw	0
  8476  00316E  6E49               	movwf	(___fldiv@a+1)^0,c
  8477  003170  0E00               	movlw	0
  8478  003172  6E4A               	movwf	(___fldiv@a+2)^0,c
  8479  003174  0E40               	movlw	64
  8480  003176  6E4B               	movwf	(___fldiv@a+3)^0,c
  8481  003178  ECD5  F00E         	call	___fldiv	;wreg free
  8482  00317C  C044  F055         	movff	?___fldiv,_sensorIzquierda
  8483  003180  C045  F056         	movff	?___fldiv+1,_sensorIzquierda+1
  8484  003184  C046  F057         	movff	?___fldiv+2,_sensorIzquierda+2
  8485  003188  C047  F058         	movff	?___fldiv+3,_sensorIzquierda+3
  8486                           
  8487                           ;main.c: 1152:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  8488  00318C  C118  F038         	movff	_oldSensorEnfrente,___fladd@a
  8489  003190  C119  F039         	movff	_oldSensorEnfrente+1,___fladd@a+1
  8490  003194  C11A  F03A         	movff	_oldSensorEnfrente+2,___fladd@a+2
  8491  003198  C11B  F03B         	movff	_oldSensorEnfrente+3,___fladd@a+3
  8492  00319C  0E01               	movlw	1
  8493  00319E  ECD8  F019         	call	_dameDistancia
  8494  0031A2  C01B  F034         	movff	?_dameDistancia,___fladd@b
  8495  0031A6  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  8496  0031AA  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  8497  0031AE  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  8498  0031B2  EC87  F008         	call	___fladd	;wreg free
  8499  0031B6  C034  F044         	movff	?___fladd,___fldiv@b
  8500  0031BA  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  8501  0031BE  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  8502  0031C2  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  8503  0031C6  0E00               	movlw	0
  8504  0031C8  6E48               	movwf	___fldiv@a^0,c
  8505  0031CA  0E00               	movlw	0
  8506  0031CC  6E49               	movwf	(___fldiv@a+1)^0,c
  8507  0031CE  0E00               	movlw	0
  8508  0031D0  6E4A               	movwf	(___fldiv@a+2)^0,c
  8509  0031D2  0E40               	movlw	64
  8510  0031D4  6E4B               	movwf	(___fldiv@a+3)^0,c
  8511  0031D6  ECD5  F00E         	call	___fldiv	;wreg free
  8512  0031DA  C044  F124         	movff	?___fldiv,_sensorEnfrente
  8513  0031DE  C045  F125         	movff	?___fldiv+1,_sensorEnfrente+1
  8514  0031E2  C046  F126         	movff	?___fldiv+2,_sensorEnfrente+2
  8515  0031E6  C047  F127         	movff	?___fldiv+3,_sensorEnfrente+3
  8516  0031EA                     
  8517                           ;main.c: 1154:     oldSensorDerecha = sensorDerecha;
  8518  0031EA  C0F9  F120         	movff	_sensorDerecha,_oldSensorDerecha
  8519  0031EE  C0FA  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
  8520  0031F2  C0FB  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
  8521  0031F6  C0FC  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
  8522  0031FA                     
  8523                           ;main.c: 1155:     oldSensorIzquierda = sensorIzquierda;
  8524  0031FA  C055  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
  8525  0031FE  C056  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
  8526  003202  C057  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
  8527  003206  C058  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
  8528  00320A                     
  8529                           ;main.c: 1156:     oldSensorEnfrente = sensorEnfrente;
  8530  00320A  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
  8531  00320E  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
  8532  003212  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
  8533  003216  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
  8534  00321A                     
  8535                           ;main.c: 1161:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
  8536  00321A  C0F9  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
  8537  00321E  C0FA  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
  8538  003222  C0FB  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
  8539  003226  C0FC  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
  8540  00322A                     
  8541                           ;main.c: 1170:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
  8542  00322A  C055  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
  8543  00322E  C056  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
  8544  003232  C057  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
  8545  003236  C058  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
  8546  00323A                     
  8547                           ;main.c: 1173:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
  8548  00323A  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
  8549  00323E  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
  8550  003242  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
  8551  003246  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
  8552  00324A  0012               	return		;funcret
  8553  00324C                     __end_of_leerSensores:
  8554                           	opt callstack 0
  8555                           
  8556 ;; *************** function _finalizarRecorrido *****************
  8557 ;; Defined at:
  8558 ;;		line 461 in file "main.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;		None
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;		None
  8563 ;; Return value:  Size  Location     Type
  8564 ;;                  1    wreg      void 
  8565 ;; Registers used:
  8566 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8567 ;; Tracked objects:
  8568 ;;		On entry : 0/0
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8572 ;;      Params:         0       0       0       0       0       0       0       0       0
  8573 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8575 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8576 ;;Total ram usage:        0 bytes
  8577 ;; Hardware stack levels used:    1
  8578 ;; Hardware stack levels required when called:    8
  8579 ;; This function calls:
  8580 ;;		_forzarEspejeo
  8581 ;;		_forzarParoAuto
  8582 ;; This function is called by:
  8583 ;;		_probarCruceT
  8584 ;;		_comportamientoBasico
  8585 ;;		_probarPID
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text35
  8590  004860                     __ptext35:
  8591                           	opt callstack 0
  8592  004860                     _finalizarRecorrido:
  8593                           	opt callstack 21
  8594  004860                     
  8595                           ;main.c: 462:     forzarEspejeo();
  8596  004860  EC01  F023         	call	_forzarEspejeo	;wreg free
  8597  004864                     
  8598                           ;main.c: 463:     forzarParoAuto();
  8599  004864  EC38  F024         	call	_forzarParoAuto	;wreg free
  8600  004868                     
  8601                           ;main.c: 464:     pausa = 1;
  8602  004868  0E01               	movlw	1
  8603  00486A  0101               	movlb	1	; () banked
  8604  00486C  6FD0               	movwf	_pausa& (0+255),b
  8605  00486E                     
  8606                           ; BSR set to: 1
  8607  00486E  0012               	return		;funcret
  8608  004870                     __end_of_finalizarRecorrido:
  8609                           	opt callstack 0
  8610                           
  8611 ;; *************** function _forzarEspejeo *****************
  8612 ;; Defined at:
  8613 ;;		line 534 in file "main.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;		None
  8616 ;; Auto vars:     Size  Location     Type
  8617 ;;		None
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  1    wreg      void 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8627 ;;      Params:         0       0       0       0       0       0       0       0       0
  8628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8630 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8631 ;;Total ram usage:        0 bytes
  8632 ;; Hardware stack levels used:    1
  8633 ;; Hardware stack levels required when called:    7
  8634 ;; This function calls:
  8635 ;;		___flge
  8636 ;;		_forzarEspejeoDerecha
  8637 ;;		_forzarEspejeoIzquierda
  8638 ;; This function is called by:
  8639 ;;		_finalizarRecorrido
  8640 ;;		_comportamientoBasico
  8641 ;;		_moverCarrito
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text36
  8646  004602                     __ptext36:
  8647                           	opt callstack 0
  8648  004602                     _forzarEspejeo:
  8649                           	opt callstack 21
  8650  004602                     
  8651                           ;main.c: 536:     if (sensorIzquierda > sensorDerecha)
  8652  004602  C0F9  F034         	movff	_sensorDerecha,___flge@ff1
  8653  004606  C0FA  F035         	movff	_sensorDerecha+1,___flge@ff1+1
  8654  00460A  C0FB  F036         	movff	_sensorDerecha+2,___flge@ff1+2
  8655  00460E  C0FC  F037         	movff	_sensorDerecha+3,___flge@ff1+3
  8656  004612  C055  F038         	movff	_sensorIzquierda,___flge@ff2
  8657  004616  C056  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
  8658  00461A  C057  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
  8659  00461E  C058  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
  8660  004622  EC93  F01B         	call	___flge	;wreg free
  8661  004626  B0D8               	btfsc	status,0,c
  8662  004628  EF18  F023         	goto	u10831
  8663  00462C  EF1A  F023         	goto	u10830
  8664  004630                     u10831:
  8665  004630  EF1E  F023         	goto	l9183
  8666  004634                     u10830:
  8667  004634                     
  8668                           ;main.c: 537:         forzarEspejeoIzquierda();
  8669  004634  EC0B  F024         	call	_forzarEspejeoIzquierda	;wreg free
  8670  004638  EF20  F023         	goto	l426
  8671  00463C                     l9183:
  8672                           
  8673                           ;main.c: 539:         forzarEspejeoDerecha();
  8674  00463C  EC18  F024         	call	_forzarEspejeoDerecha	;wreg free
  8675  004640                     l426:
  8676  004640  0012               	return		;funcret
  8677  004642                     __end_of_forzarEspejeo:
  8678                           	opt callstack 0
  8679                           
  8680 ;; *************** function _forzarEspejeoIzquierda *****************
  8681 ;; Defined at:
  8682 ;;		line 514 in file "main.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;		None
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;		None
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  1    wreg      void 
  8689 ;; Registers used:
  8690 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8696 ;;      Params:         0       0       0       0       0       0       0       0       0
  8697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8699 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8700 ;;Total ram usage:        0 bytes
  8701 ;; Hardware stack levels used:    1
  8702 ;; Hardware stack levels required when called:    6
  8703 ;; This function calls:
  8704 ;;		_forzarGiroIzquierda
  8705 ;;		_forzarParoAuto
  8706 ;;		_forzarReversa
  8707 ;;		_velocidadEstandar
  8708 ;; This function is called by:
  8709 ;;		_forzarEspejeo
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713                           	psect	text37
  8714  004816                     __ptext37:
  8715                           	opt callstack 0
  8716  004816                     _forzarEspejeoIzquierda:
  8717                           	opt callstack 21
  8718  004816                     
  8719                           ;main.c: 516:     forzarParoAuto();
  8720  004816  EC38  F024         	call	_forzarParoAuto	;wreg free
  8721  00481A                     
  8722                           ;main.c: 517:     velocidadEstandar();
  8723  00481A  ECB6  F023         	call	_velocidadEstandar	;wreg free
  8724  00481E                     
  8725                           ;main.c: 518:     forzarReversa();
  8726  00481E  ECDA  F023         	call	_forzarReversa	;wreg free
  8727  004822                     
  8728                           ;main.c: 519:     forzarGiroIzquierda();
  8729  004822  ECEB  F023         	call	_forzarGiroIzquierda	;wreg free
  8730  004826                     
  8731                           ;main.c: 520:     forzarReversa();
  8732  004826  ECDA  F023         	call	_forzarReversa	;wreg free
  8733  00482A                     
  8734                           ;main.c: 521:     forzarGiroIzquierda();
  8735  00482A  ECEB  F023         	call	_forzarGiroIzquierda	;wreg free
  8736  00482E  0012               	return		;funcret
  8737  004830                     __end_of_forzarEspejeoIzquierda:
  8738                           	opt callstack 0
  8739                           
  8740 ;; *************** function _forzarGiroIzquierda *****************
  8741 ;; Defined at:
  8742 ;;		line 496 in file "main.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;		None
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;		None
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      void 
  8749 ;; Registers used:
  8750 ;;		wreg
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8756 ;;      Params:         0       0       0       0       0       0       0       0       0
  8757 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8758 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8759 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8760 ;;Total ram usage:        2 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:    2
  8763 ;; This function calls:
  8764 ;;		Nothing
  8765 ;; This function is called by:
  8766 ;;		_forzarEspejeoIzquierda
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text38
  8771  0047D6                     __ptext38:
  8772                           	opt callstack 0
  8773  0047D6                     _forzarGiroIzquierda:
  8774                           	opt callstack 24
  8775  0047D6                     
  8776                           ;main.c: 497:     LATB4 = 0;
  8777  0047D6  988A               	bcf	3978,4,c	;volatile
  8778                           
  8779                           ;main.c: 498:     LATB5 = 0;
  8780  0047D8  9A8A               	bcf	3978,5,c	;volatile
  8781                           
  8782                           ;main.c: 499:     LATB6 = 1;
  8783  0047DA  8C8A               	bsf	3978,6,c	;volatile
  8784                           
  8785                           ;main.c: 500:     LATB7 = 0;
  8786  0047DC  9E8A               	bcf	3978,7,c	;volatile
  8787  0047DE                     
  8788                           ;main.c: 501:     _delay((unsigned long)((410)*(4000000/4000.0)));
  8789  0047DE  0E03               	movlw	3
  8790  0047E0  6E07               	movwf	(??_forzarGiroIzquierda+1)^0,c
  8791  0047E2  0E15               	movlw	21
  8792  0047E4  6E06               	movwf	??_forzarGiroIzquierda^0,c
  8793  0047E6  0E74               	movlw	116
  8794  0047E8                     u11827:
  8795  0047E8  2EE8               	decfsz	wreg,f,c
  8796  0047EA  D7FE               	bra	u11827
  8797  0047EC  2E06               	decfsz	??_forzarGiroIzquierda^0,f,c
  8798  0047EE  D7FC               	bra	u11827
  8799  0047F0  2E07               	decfsz	(??_forzarGiroIzquierda+1)^0,f,c
  8800  0047F2  D7FA               	bra	u11827
  8801  0047F4  0012               	return		;funcret
  8802  0047F6                     __end_of_forzarGiroIzquierda:
  8803                           	opt callstack 0
  8804                           
  8805 ;; *************** function _forzarEspejeoDerecha *****************
  8806 ;; Defined at:
  8807 ;;		line 524 in file "main.c"
  8808 ;; Parameters:    Size  Location     Type
  8809 ;;		None
  8810 ;; Auto vars:     Size  Location     Type
  8811 ;;		None
  8812 ;; Return value:  Size  Location     Type
  8813 ;;                  1    wreg      void 
  8814 ;; Registers used:
  8815 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8816 ;; Tracked objects:
  8817 ;;		On entry : 0/0
  8818 ;;		On exit  : 0/0
  8819 ;;		Unchanged: 0/0
  8820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8821 ;;      Params:         0       0       0       0       0       0       0       0       0
  8822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8824 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8825 ;;Total ram usage:        0 bytes
  8826 ;; Hardware stack levels used:    1
  8827 ;; Hardware stack levels required when called:    6
  8828 ;; This function calls:
  8829 ;;		_forzarGiroDerecha
  8830 ;;		_forzarParoAuto
  8831 ;;		_forzarReversa
  8832 ;;		_velocidadEstandar
  8833 ;; This function is called by:
  8834 ;;		_forzarEspejeo
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text39
  8839  004830                     __ptext39:
  8840                           	opt callstack 0
  8841  004830                     _forzarEspejeoDerecha:
  8842                           	opt callstack 21
  8843  004830                     
  8844                           ;main.c: 526:     forzarParoAuto();
  8845  004830  EC38  F024         	call	_forzarParoAuto	;wreg free
  8846  004834                     
  8847                           ;main.c: 527:     velocidadEstandar();
  8848  004834  ECB6  F023         	call	_velocidadEstandar	;wreg free
  8849  004838                     
  8850                           ;main.c: 528:     forzarReversa();
  8851  004838  ECDA  F023         	call	_forzarReversa	;wreg free
  8852  00483C                     
  8853                           ;main.c: 529:     forzarGiroDerecha();
  8854  00483C  ECFB  F023         	call	_forzarGiroDerecha	;wreg free
  8855  004840                     
  8856                           ;main.c: 530:     forzarReversa();
  8857  004840  ECDA  F023         	call	_forzarReversa	;wreg free
  8858  004844                     
  8859                           ;main.c: 531:     forzarGiroDerecha();
  8860  004844  ECFB  F023         	call	_forzarGiroDerecha	;wreg free
  8861  004848  0012               	return		;funcret
  8862  00484A                     __end_of_forzarEspejeoDerecha:
  8863                           	opt callstack 0
  8864                           
  8865 ;; *************** function _forzarReversa *****************
  8866 ;; Defined at:
  8867 ;;		line 476 in file "main.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;		None
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;		None
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  1    wreg      void 
  8874 ;; Registers used:
  8875 ;;		wreg
  8876 ;; Tracked objects:
  8877 ;;		On entry : 0/0
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8881 ;;      Params:         0       0       0       0       0       0       0       0       0
  8882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8883 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8884 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8885 ;;Total ram usage:        2 bytes
  8886 ;; Hardware stack levels used:    1
  8887 ;; Hardware stack levels required when called:    2
  8888 ;; This function calls:
  8889 ;;		Nothing
  8890 ;; This function is called by:
  8891 ;;		_forzarEspejeoIzquierda
  8892 ;;		_forzarEspejeoDerecha
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           	psect	text40
  8897  0047B4                     __ptext40:
  8898                           	opt callstack 0
  8899  0047B4                     _forzarReversa:
  8900                           	opt callstack 24
  8901  0047B4                     
  8902                           ;main.c: 477:     LATB4 = 0;
  8903  0047B4  988A               	bcf	3978,4,c	;volatile
  8904                           
  8905                           ;main.c: 478:     LATB5 = 1;
  8906  0047B6  8A8A               	bsf	3978,5,c	;volatile
  8907                           
  8908                           ;main.c: 479:     LATB6 = 0;
  8909  0047B8  9C8A               	bcf	3978,6,c	;volatile
  8910                           
  8911                           ;main.c: 480:     LATB7 = 1;
  8912  0047BA  8E8A               	bsf	3978,7,c	;volatile
  8913  0047BC                     
  8914                           ;main.c: 482:     _delay((unsigned long)((400)*(4000000/4000.0)));
  8915  0047BC  0E03               	movlw	3
  8916  0047BE  6E07               	movwf	(??_forzarReversa+1)^0,c
  8917  0047C0  0E08               	movlw	8
  8918  0047C2  6E06               	movwf	??_forzarReversa^0,c
  8919  0047C4  0E77               	movlw	119
  8920  0047C6                     u11837:
  8921  0047C6  2EE8               	decfsz	wreg,f,c
  8922  0047C8  D7FE               	bra	u11837
  8923  0047CA  2E06               	decfsz	??_forzarReversa^0,f,c
  8924  0047CC  D7FC               	bra	u11837
  8925  0047CE  2E07               	decfsz	(??_forzarReversa+1)^0,f,c
  8926  0047D0  D7FA               	bra	u11837
  8927  0047D2  F000               	nop	
  8928  0047D4  0012               	return		;funcret
  8929  0047D6                     __end_of_forzarReversa:
  8930                           	opt callstack 0
  8931                           
  8932 ;; *************** function _forzarParoAuto *****************
  8933 ;; Defined at:
  8934 ;;		line 468 in file "main.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;		None
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;		None
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		None
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8948 ;;      Params:         0       0       0       0       0       0       0       0       0
  8949 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8951 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8952 ;;Total ram usage:        0 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:    2
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		_finalizarRecorrido
  8959 ;;		_forzarEspejeoIzquierda
  8960 ;;		_forzarEspejeoDerecha
  8961 ;;		_main
  8962 ;;		_comportamientoBasico
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text41
  8967  004870                     __ptext41:
  8968                           	opt callstack 0
  8969  004870                     _forzarParoAuto:
  8970                           	opt callstack 26
  8971  004870                     
  8972                           ;main.c: 470:     LATB4 = 0;
  8973  004870  988A               	bcf	3978,4,c	;volatile
  8974                           
  8975                           ;main.c: 471:     LATB5 = 0;
  8976  004872  9A8A               	bcf	3978,5,c	;volatile
  8977                           
  8978                           ;main.c: 472:     LATB6 = 0;
  8979  004874  9C8A               	bcf	3978,6,c	;volatile
  8980                           
  8981                           ;main.c: 473:     LATB7 = 0;
  8982  004876  9E8A               	bcf	3978,7,c	;volatile
  8983  004878  0012               	return		;funcret
  8984  00487A                     __end_of_forzarParoAuto:
  8985                           	opt callstack 0
  8986                           
  8987 ;; *************** function _forzarGiroDerecha *****************
  8988 ;; Defined at:
  8989 ;;		line 505 in file "main.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;		None
  8992 ;; Auto vars:     Size  Location     Type
  8993 ;;		None
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  1    wreg      void 
  8996 ;; Registers used:
  8997 ;;		wreg
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9003 ;;      Params:         0       0       0       0       0       0       0       0       0
  9004 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9005 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9006 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9007 ;;Total ram usage:        2 bytes
  9008 ;; Hardware stack levels used:    1
  9009 ;; Hardware stack levels required when called:    2
  9010 ;; This function calls:
  9011 ;;		Nothing
  9012 ;; This function is called by:
  9013 ;;		_forzarEspejeoDerecha
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text42
  9018  0047F6                     __ptext42:
  9019                           	opt callstack 0
  9020  0047F6                     _forzarGiroDerecha:
  9021                           	opt callstack 24
  9022  0047F6                     
  9023                           ;main.c: 506:     LATB4 = 1;
  9024  0047F6  888A               	bsf	3978,4,c	;volatile
  9025                           
  9026                           ;main.c: 507:     LATB5 = 0;
  9027  0047F8  9A8A               	bcf	3978,5,c	;volatile
  9028                           
  9029                           ;main.c: 508:     LATB6 = 0;
  9030  0047FA  9C8A               	bcf	3978,6,c	;volatile
  9031                           
  9032                           ;main.c: 509:     LATB7 = 0;
  9033  0047FC  9E8A               	bcf	3978,7,c	;volatile
  9034  0047FE                     
  9035                           ;main.c: 510:     _delay((unsigned long)((410)*(4000000/4000.0)));
  9036  0047FE  0E03               	movlw	3
  9037  004800  6E07               	movwf	(??_forzarGiroDerecha+1)^0,c
  9038  004802  0E15               	movlw	21
  9039  004804  6E06               	movwf	??_forzarGiroDerecha^0,c
  9040  004806  0E74               	movlw	116
  9041  004808                     u11847:
  9042  004808  2EE8               	decfsz	wreg,f,c
  9043  00480A  D7FE               	bra	u11847
  9044  00480C  2E06               	decfsz	??_forzarGiroDerecha^0,f,c
  9045  00480E  D7FC               	bra	u11847
  9046  004810  2E07               	decfsz	(??_forzarGiroDerecha+1)^0,f,c
  9047  004812  D7FA               	bra	u11847
  9048  004814  0012               	return		;funcret
  9049  004816                     __end_of_forzarGiroDerecha:
  9050                           	opt callstack 0
  9051                           
  9052 ;; *************** function _PID *****************
  9053 ;; Defined at:
  9054 ;;		line 1181 in file "main.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;		None
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;  error           2   56[BANK0 ] int 
  9059 ;;  dif             2   54[BANK0 ] int 
  9060 ;;  velocidadDer    2   50[BANK0 ] int 
  9061 ;;  velocidadIzq    2   46[BANK0 ] int 
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      void 
  9064 ;; Registers used:
  9065 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9071 ;;      Params:         0       0       0       0       0       0       0       0       0
  9072 ;;      Locals:         0      16       0       0       0       0       0       0       0
  9073 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9074 ;;      Totals:         0      18       0       0       0       0       0       0       0
  9075 ;;Total ram usage:       18 bytes
  9076 ;; Hardware stack levels used:    1
  9077 ;; Hardware stack levels required when called:    5
  9078 ;; This function calls:
  9079 ;;		___fladd
  9080 ;;		___flmul
  9081 ;;		___flsub
  9082 ;;		___fltol
  9083 ;;		___xxtofl
  9084 ;;		_pwmDuty
  9085 ;;		_roundf
  9086 ;; This function is called by:
  9087 ;;		_probarCruceT
  9088 ;;		_comportamientoBasico
  9089 ;;		_regresarPuntoPartida
  9090 ;;		_regresarAlCruce
  9091 ;;		_recorrerCaminoEncontrado
  9092 ;;		_probarPID
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text43
  9097  002428                     __ptext43:
  9098                           	opt callstack 0
  9099  002428                     _PID:
  9100                           	opt callstack 24
  9101  002428                     
  9102                           ;main.c: 1184:     T_INT error = 0;
  9103  002428  0E00               	movlw	0
  9104  00242A  0100               	movlb	0	; () banked
  9105  00242C  6F99               	movwf	(PID@error+1)& (0+255),b
  9106  00242E  0E00               	movlw	0
  9107  002430  6F98               	movwf	PID@error& (0+255),b
  9108  002432                     
  9109                           ; BSR set to: 0
  9110                           ;main.c: 1185:     static T_INT difAnt = 0;;main.c: 1188:     dif = sensorIzquierda - se
      +                          nsorDerecha;
  9111  002432  C0F9  F048         	movff	_sensorDerecha,___flsub@a
  9112  002436  C0FA  F049         	movff	_sensorDerecha+1,___flsub@a+1
  9113  00243A  C0FB  F04A         	movff	_sensorDerecha+2,___flsub@a+2
  9114  00243E  C0FC  F04B         	movff	_sensorDerecha+3,___flsub@a+3
  9115  002442  C055  F044         	movff	_sensorIzquierda,___flsub@b
  9116  002446  C056  F045         	movff	_sensorIzquierda+1,___flsub@b+1
  9117  00244A  C057  F046         	movff	_sensorIzquierda+2,___flsub@b+2
  9118  00244E  C058  F047         	movff	_sensorIzquierda+3,___flsub@b+3
  9119  002452  EC9C  F022         	call	___flsub	;wreg free
  9120  002456  C044  F072         	movff	?___flsub,___fltol@f1
  9121  00245A  C045  F073         	movff	?___flsub+1,___fltol@f1+1
  9122  00245E  C046  F074         	movff	?___flsub+2,___fltol@f1+2
  9123  002462  C047  F075         	movff	?___flsub+3,___fltol@f1+3
  9124  002466  EC0F  F01B         	call	___fltol	;wreg free
  9125  00246A  C072  F096         	movff	?___fltol,PID@dif
  9126  00246E  C073  F097         	movff	?___fltol+1,PID@dif+1
  9127  002472                     
  9128                           ;main.c: 1190:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  9129  002472  0ECD               	movlw	205
  9130  002474  6E1F               	movwf	___flmul@a^0,c
  9131  002476  0ECC               	movlw	204
  9132  002478  6E20               	movwf	(___flmul@a+1)^0,c
  9133  00247A  0ECC               	movlw	204
  9134  00247C  6E21               	movwf	(___flmul@a+2)^0,c
  9135  00247E  0E3D               	movlw	61
  9136  002480  6E22               	movwf	(___flmul@a+3)^0,c
  9137  002482  0100               	movlb	0	; () banked
  9138  002484  5196               	movf	PID@dif& (0+255),w,b
  9139  002486  0101               	movlb	1	; () banked
  9140  002488  5D30               	subwf	PID@difAnt& (0+255),w,b
  9141  00248A  0100               	movlb	0	; () banked
  9142  00248C  6F88               	movwf	??_PID& (0+255),b
  9143  00248E  5197               	movf	(PID@dif+1)& (0+255),w,b
  9144  002490  0101               	movlb	1	; () banked
  9145  002492  5931               	subwfb	(PID@difAnt+1)& (0+255),w,b
  9146  002494  0100               	movlb	0	; () banked
  9147  002496  6F89               	movwf	(??_PID+1)& (0+255),b
  9148  002498  C088  F00D         	movff	??_PID,___xxtofl@val
  9149  00249C  C089  F00E         	movff	??_PID+1,___xxtofl@val+1
  9150  0024A0  0E00               	movlw	0
  9151  0024A2  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  9152  0024A4  0EFF               	movlw	-1
  9153  0024A6  6E0F               	movwf	(___xxtofl@val+2)^0,c
  9154  0024A8  6E10               	movwf	(___xxtofl@val+3)^0,c
  9155  0024AA  0E01               	movlw	1
  9156  0024AC  EC02  F016         	call	___xxtofl
  9157  0024B0  C00D  F01B         	movff	?___xxtofl,___flmul@b
  9158  0024B4  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  9159  0024B8  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  9160  0024BC  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  9161  0024C0  ECE7  F00A         	call	___flmul	;wreg free
  9162  0024C4  C01B  F038         	movff	?___flmul,___fladd@a
  9163  0024C8  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  9164  0024CC  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  9165  0024D0  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  9166  0024D4  0E66               	movlw	102
  9167  0024D6  6E1F               	movwf	___flmul@a^0,c
  9168  0024D8  0E66               	movlw	102
  9169  0024DA  6E20               	movwf	(___flmul@a+1)^0,c
  9170  0024DC  0E66               	movlw	102
  9171  0024DE  6E21               	movwf	(___flmul@a+2)^0,c
  9172  0024E0  0E3F               	movlw	63
  9173  0024E2  6E22               	movwf	(___flmul@a+3)^0,c
  9174  0024E4  C096  F00D         	movff	PID@dif,___xxtofl@val
  9175  0024E8  C097  F00E         	movff	PID@dif+1,___xxtofl@val+1
  9176  0024EC  0E00               	movlw	0
  9177  0024EE  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  9178  0024F0  0EFF               	movlw	-1
  9179  0024F2  6E0F               	movwf	(___xxtofl@val+2)^0,c
  9180  0024F4  6E10               	movwf	(___xxtofl@val+3)^0,c
  9181  0024F6  0E01               	movlw	1
  9182  0024F8  EC02  F016         	call	___xxtofl
  9183  0024FC  C00D  F01B         	movff	?___xxtofl,___flmul@b
  9184  002500  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  9185  002504  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  9186  002508  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  9187  00250C  ECE7  F00A         	call	___flmul	;wreg free
  9188  002510  C01B  F034         	movff	?___flmul,___fladd@b
  9189  002514  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  9190  002518  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  9191  00251C  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  9192  002520  EC87  F008         	call	___fladd	;wreg free
  9193  002524  C034  F08A         	movff	?___fladd,_PID$1817
  9194  002528  C035  F08B         	movff	?___fladd+1,_PID$1817+1
  9195  00252C  C036  F08C         	movff	?___fladd+2,_PID$1817+2
  9196  002530  C037  F08D         	movff	?___fladd+3,_PID$1817+3
  9197  002534                     
  9198                           ;main.c: 1190:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  9199  002534  C08A  F04C         	movff	_PID$1817,roundf@x
  9200  002538  C08B  F04D         	movff	_PID$1817+1,roundf@x+1
  9201  00253C  C08C  F04E         	movff	_PID$1817+2,roundf@x+2
  9202  002540  C08D  F04F         	movff	_PID$1817+3,roundf@x+3
  9203  002544  ECFC  F00C         	call	_roundf	;wreg free
  9204  002548  C04C  F072         	movff	?_roundf,___fltol@f1
  9205  00254C  C04D  F073         	movff	?_roundf+1,___fltol@f1+1
  9206  002550  C04E  F074         	movff	?_roundf+2,___fltol@f1+2
  9207  002554  C04F  F075         	movff	?_roundf+3,___fltol@f1+3
  9208  002558  EC0F  F01B         	call	___fltol	;wreg free
  9209  00255C  C072  F098         	movff	?___fltol,PID@error
  9210  002560  C073  F099         	movff	?___fltol+1,PID@error+1
  9211  002564                     
  9212                           ;main.c: 1192:     difAnt = dif;
  9213  002564  C096  F130         	movff	PID@dif,PID@difAnt
  9214  002568  C097  F131         	movff	PID@dif+1,PID@difAnt+1
  9215  00256C                     
  9216                           ;main.c: 1194:     T_INT velocidadIzquierda = ((100 - error)<(0)?(0):((100 - error)>(100
      +                          )?(100):(100 - error)));
  9217  00256C  0E64               	movlw	100
  9218  00256E  0100               	movlb	0	; () banked
  9219  002570  6F88               	movwf	??_PID& (0+255),b
  9220  002572  0E00               	movlw	0
  9221  002574  6F89               	movwf	(??_PID+1)& (0+255),b
  9222  002576  5198               	movf	PID@error& (0+255),w,b
  9223  002578  5D88               	subwf	??_PID& (0+255),w,b
  9224  00257A  5199               	movf	(PID@error+1)& (0+255),w,b
  9225  00257C  5989               	subwfb	(??_PID+1)& (0+255),w,b
  9226  00257E  0B80               	andlw	128
  9227  002580  A4D8               	btfss	status,2,c
  9228  002582  EFC5  F012         	goto	u10971
  9229  002586  EFC7  F012         	goto	u10970
  9230  00258A                     u10971:
  9231  00258A  EFF1  F012         	goto	l9311
  9232  00258E                     u10970:
  9233  00258E                     
  9234                           ; BSR set to: 0
  9235  00258E  0E64               	movlw	100
  9236  002590  6F88               	movwf	??_PID& (0+255),b
  9237  002592  0E00               	movlw	0
  9238  002594  6F89               	movwf	(??_PID+1)& (0+255),b
  9239  002596  5198               	movf	PID@error& (0+255),w,b
  9240  002598  5F88               	subwf	??_PID& (0+255),f,b
  9241  00259A  5199               	movf	(PID@error+1)& (0+255),w,b
  9242  00259C  5B89               	subwfb	(??_PID+1)& (0+255),f,b
  9243  00259E  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  9244  0025A0  EFDD  F012         	goto	u10980
  9245  0025A4  5189               	movf	(??_PID+1)& (0+255),w,b
  9246  0025A6  E107               	bnz	u10981
  9247  0025A8  0E65               	movlw	101
  9248  0025AA  5D88               	subwf	??_PID& (0+255),w,b
  9249  0025AC  B0D8               	btfsc	status,0,c
  9250  0025AE  EFDB  F012         	goto	u10981
  9251  0025B2  EFDD  F012         	goto	u10980
  9252  0025B6                     u10981:
  9253  0025B6  EFE7  F012         	goto	l9307
  9254  0025BA                     u10980:
  9255  0025BA                     
  9256                           ; BSR set to: 0
  9257  0025BA  5198               	movf	PID@error& (0+255),w,b
  9258  0025BC  0864               	sublw	100
  9259  0025BE  6F90               	movwf	_PID$747& (0+255),b
  9260  0025C0  5199               	movf	(PID@error+1)& (0+255),w,b
  9261  0025C2  A0D8               	btfss	status,0,c
  9262  0025C4  2AE8               	incf	wreg,f,c
  9263  0025C6  0800               	sublw	0
  9264  0025C8  6F91               	movwf	(_PID$747+1)& (0+255),b
  9265  0025CA  EFEB  F012         	goto	l9309
  9266  0025CE                     l9307:
  9267                           
  9268                           ; BSR set to: 0
  9269  0025CE  0E00               	movlw	0
  9270  0025D0  6F91               	movwf	(_PID$747+1)& (0+255),b
  9271  0025D2  0E64               	movlw	100
  9272  0025D4  6F90               	movwf	_PID$747& (0+255),b
  9273  0025D6                     l9309:
  9274                           
  9275                           ; BSR set to: 0
  9276  0025D6  C090  F08E         	movff	_PID$747,PID@velocidadIzquierda
  9277  0025DA  C091  F08F         	movff	_PID$747+1,PID@velocidadIzquierda+1
  9278  0025DE  EFF5  F012         	goto	l9313
  9279  0025E2                     l9311:
  9280                           
  9281                           ; BSR set to: 0
  9282  0025E2  0E00               	movlw	0
  9283  0025E4  6F8F               	movwf	(PID@velocidadIzquierda+1)& (0+255),b
  9284  0025E6  0E00               	movlw	0
  9285  0025E8  6F8E               	movwf	PID@velocidadIzquierda& (0+255),b
  9286  0025EA                     l9313:
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;main.c: 1195:     T_INT velocidadDerecha = ((100 + error)<(0)?(0):((100 + error)>(100)?
      +                          (100):(100 + error)));
  9290  0025EA  0E64               	movlw	100
  9291  0025EC  2598               	addwf	PID@error& (0+255),w,b
  9292  0025EE  0E00               	movlw	0
  9293  0025F0  2199               	addwfc	(PID@error+1)& (0+255),w,b
  9294  0025F2  0B80               	andlw	128
  9295  0025F4  A4D8               	btfss	status,2,c
  9296  0025F6  EFFF  F012         	goto	u10991
  9297  0025FA  EF01  F013         	goto	u10990
  9298  0025FE                     u10991:
  9299  0025FE  EF27  F013         	goto	l9323
  9300  002602                     u10990:
  9301  002602                     
  9302                           ; BSR set to: 0
  9303  002602  0E64               	movlw	100
  9304  002604  2598               	addwf	PID@error& (0+255),w,b
  9305  002606  6F88               	movwf	??_PID& (0+255),b
  9306  002608  0E00               	movlw	0
  9307  00260A  2199               	addwfc	(PID@error+1)& (0+255),w,b
  9308  00260C  6F89               	movwf	(??_PID+1)& (0+255),b
  9309  00260E  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  9310  002610  EF15  F013         	goto	u11000
  9311  002614  5189               	movf	(??_PID+1)& (0+255),w,b
  9312  002616  E107               	bnz	u11001
  9313  002618  0E65               	movlw	101
  9314  00261A  5D88               	subwf	??_PID& (0+255),w,b
  9315  00261C  B0D8               	btfsc	status,0,c
  9316  00261E  EF13  F013         	goto	u11001
  9317  002622  EF15  F013         	goto	u11000
  9318  002626                     u11001:
  9319  002626  EF1D  F013         	goto	l9319
  9320  00262A                     u11000:
  9321  00262A                     
  9322                           ; BSR set to: 0
  9323  00262A  0E64               	movlw	100
  9324  00262C  2598               	addwf	PID@error& (0+255),w,b
  9325  00262E  6F94               	movwf	_PID$749& (0+255),b
  9326  002630  0E00               	movlw	0
  9327  002632  2199               	addwfc	(PID@error+1)& (0+255),w,b
  9328  002634  6F95               	movwf	(_PID$749+1)& (0+255),b
  9329  002636  EF21  F013         	goto	l9321
  9330  00263A                     l9319:
  9331                           
  9332                           ; BSR set to: 0
  9333  00263A  0E00               	movlw	0
  9334  00263C  6F95               	movwf	(_PID$749+1)& (0+255),b
  9335  00263E  0E64               	movlw	100
  9336  002640  6F94               	movwf	_PID$749& (0+255),b
  9337  002642                     l9321:
  9338                           
  9339                           ; BSR set to: 0
  9340  002642  C094  F092         	movff	_PID$749,PID@velocidadDerecha
  9341  002646  C095  F093         	movff	_PID$749+1,PID@velocidadDerecha+1
  9342  00264A  EF2B  F013         	goto	l9325
  9343  00264E                     l9323:
  9344                           
  9345                           ; BSR set to: 0
  9346  00264E  0E00               	movlw	0
  9347  002650  6F93               	movwf	(PID@velocidadDerecha+1)& (0+255),b
  9348  002652  0E00               	movlw	0
  9349  002654  6F92               	movwf	PID@velocidadDerecha& (0+255),b
  9350  002656                     l9325:
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;main.c: 1197:     pwmDuty(velocidadIzquierda, 1);
  9354  002656  C08E  F07C         	movff	PID@velocidadIzquierda,pwmDuty@cicloTrabajo
  9355  00265A  C08F  F07D         	movff	PID@velocidadIzquierda+1,pwmDuty@cicloTrabajo+1
  9356  00265E  0E01               	movlw	1
  9357  002660  6F7E               	movwf	pwmDuty@channel& (0+255),b
  9358  002662  EC48  F014         	call	_pwmDuty	;wreg free
  9359  002666                     
  9360                           ;main.c: 1198:     pwmDuty(velocidadDerecha, 2);
  9361  002666  C092  F07C         	movff	PID@velocidadDerecha,pwmDuty@cicloTrabajo
  9362  00266A  C093  F07D         	movff	PID@velocidadDerecha+1,pwmDuty@cicloTrabajo+1
  9363  00266E  0E02               	movlw	2
  9364  002670  0100               	movlb	0	; () banked
  9365  002672  6F7E               	movwf	pwmDuty@channel& (0+255),b
  9366  002674  EC48  F014         	call	_pwmDuty	;wreg free
  9367  002678  0012               	return		;funcret
  9368  00267A                     __end_of_PID:
  9369                           	opt callstack 0
  9370                           
  9371 ;; *************** function _roundf *****************
  9372 ;; Defined at:
  9373 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  x               4   75[COMRAM] float 
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;  y               4   14[BANK0 ] float 
  9378 ;;  u               4   10[BANK0 ] struct .
  9379 ;;  e               2    4[BANK0 ] int 
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  4   75[COMRAM] float 
  9382 ;; Registers used:
  9383 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9389 ;;      Params:         4       0       0       0       0       0       0       0       0
  9390 ;;      Locals:         0      18       0       0       0       0       0       0       0
  9391 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9392 ;;      Totals:         8      18       0       0       0       0       0       0       0
  9393 ;;Total ram usage:       26 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:    4
  9396 ;; This function calls:
  9397 ;;		___fladd
  9398 ;;		___flge
  9399 ;;		___flmul
  9400 ;;		___flneg
  9401 ;;		___flsub
  9402 ;; This function is called by:
  9403 ;;		_PID
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           	psect	text44
  9408  0019F8                     __ptext44:
  9409                           	opt callstack 0
  9410  0019F8                     _roundf:
  9411                           	opt callstack 24
  9412  0019F8  C100  F06A         	movff	roundf@F525,roundf@u
  9413  0019FC  C101  F06B         	movff	roundf@F525+1,roundf@u+1
  9414  001A00  C102  F06C         	movff	roundf@F525+2,roundf@u+2
  9415  001A04  C103  F06D         	movff	roundf@F525+3,roundf@u+3
  9416  001A08  C04C  F06A         	movff	roundf@x,roundf@u
  9417  001A0C  C04D  F06B         	movff	roundf@x+1,roundf@u+1
  9418  001A10  C04E  F06C         	movff	roundf@x+2,roundf@u+2
  9419  001A14  C04F  F06D         	movff	roundf@x+3,roundf@u+3
  9420  001A18  C06A  F050         	movff	roundf@u,??_roundf
  9421  001A1C  C06B  F051         	movff	roundf@u+1,??_roundf+1
  9422  001A20  C06C  F052         	movff	roundf@u+2,??_roundf+2
  9423  001A24  C06D  F053         	movff	roundf@u+3,??_roundf+3
  9424  001A28  0E18               	movlw	24
  9425  001A2A  EF1C  F00D         	goto	u10840
  9426  001A2E                     u10845:
  9427  001A2E  90D8               	bcf	status,0,c
  9428  001A30  3253               	rrcf	(??_roundf+3)^0,f,c
  9429  001A32  3252               	rrcf	(??_roundf+2)^0,f,c
  9430  001A34  3251               	rrcf	(??_roundf+1)^0,f,c
  9431  001A36  3250               	rrcf	??_roundf^0,f,c
  9432  001A38                     u10840:
  9433  001A38  2EE8               	decfsz	wreg,f,c
  9434  001A3A  EF17  F00D         	goto	u10845
  9435  001A3E  5050               	movf	??_roundf^0,w,c
  9436  001A40  0100               	movlb	0	; () banked
  9437  001A42  6F64               	movwf	roundf@e& (0+255),b
  9438  001A44  6B65               	clrf	(roundf@e+1)& (0+255),b
  9439  001A46  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  9440  001A48  EF2F  F00D         	goto	u10851
  9441  001A4C  5165               	movf	(roundf@e+1)& (0+255),w,b
  9442  001A4E  E109               	bnz	u10850
  9443  001A50  0E96               	movlw	150
  9444  001A52  5D64               	subwf	roundf@e& (0+255),w,b
  9445  001A54  A0D8               	btfss	status,0,c
  9446  001A56  EF2F  F00D         	goto	u10851
  9447  001A5A  EF31  F00D         	goto	u10850
  9448  001A5E                     u10851:
  9449  001A5E  EF3B  F00D         	goto	l9195
  9450  001A62                     u10850:
  9451  001A62                     
  9452                           ; BSR set to: 0
  9453  001A62  C04C  F04C         	movff	roundf@x,?_roundf
  9454  001A66  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  9455  001A6A  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  9456  001A6E  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  9457  001A72  EFD4  F00E         	goto	l1720
  9458  001A76                     l9195:
  9459                           
  9460                           ; BSR set to: 0
  9461  001A76  C06A  F050         	movff	roundf@u,??_roundf
  9462  001A7A  C06B  F051         	movff	roundf@u+1,??_roundf+1
  9463  001A7E  C06C  F052         	movff	roundf@u+2,??_roundf+2
  9464  001A82  C06D  F053         	movff	roundf@u+3,??_roundf+3
  9465  001A86  0E20               	movlw	32
  9466  001A88  EF4B  F00D         	goto	u10860
  9467  001A8C                     u10865:
  9468  001A8C  90D8               	bcf	status,0,c
  9469  001A8E  3253               	rrcf	(??_roundf+3)^0,f,c
  9470  001A90  3252               	rrcf	(??_roundf+2)^0,f,c
  9471  001A92  3251               	rrcf	(??_roundf+1)^0,f,c
  9472  001A94  3250               	rrcf	??_roundf^0,f,c
  9473  001A96                     u10860:
  9474  001A96  2EE8               	decfsz	wreg,f,c
  9475  001A98  EF46  F00D         	goto	u10865
  9476  001A9C  5050               	movf	??_roundf^0,w,c
  9477  001A9E  1051               	iorwf	(??_roundf+1)^0,w,c
  9478  001AA0  1052               	iorwf	(??_roundf+2)^0,w,c
  9479  001AA2  1053               	iorwf	(??_roundf+3)^0,w,c
  9480  001AA4  B4D8               	btfsc	status,2,c
  9481  001AA6  EF57  F00D         	goto	u10871
  9482  001AAA  EF59  F00D         	goto	u10870
  9483  001AAE                     u10871:
  9484  001AAE  EF6B  F00D         	goto	l9199
  9485  001AB2                     u10870:
  9486  001AB2                     
  9487                           ; BSR set to: 0
  9488  001AB2  C04C  F006         	movff	roundf@x,___flneg@f1
  9489  001AB6  C04D  F007         	movff	roundf@x+1,___flneg@f1+1
  9490  001ABA  C04E  F008         	movff	roundf@x+2,___flneg@f1+2
  9491  001ABE  C04F  F009         	movff	roundf@x+3,___flneg@f1+3
  9492  001AC2  EC59  F023         	call	___flneg	;wreg free
  9493  001AC6  C006  F04C         	movff	?___flneg,roundf@x
  9494  001ACA  C007  F04D         	movff	?___flneg+1,roundf@x+1
  9495  001ACE  C008  F04E         	movff	?___flneg+2,roundf@x+2
  9496  001AD2  C009  F04F         	movff	?___flneg+3,roundf@x+3
  9497  001AD6                     l9199:
  9498  001AD6  0100               	movlb	0	; () banked
  9499  001AD8  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  9500  001ADA  EF7A  F00D         	goto	u10880
  9501  001ADE  5165               	movf	(roundf@e+1)& (0+255),w,b
  9502  001AE0  E107               	bnz	u10881
  9503  001AE2  0E7E               	movlw	126
  9504  001AE4  5D64               	subwf	roundf@e& (0+255),w,b
  9505  001AE6  B0D8               	btfsc	status,0,c
  9506  001AE8  EF78  F00D         	goto	u10881
  9507  001AEC  EF7A  F00D         	goto	u10880
  9508  001AF0                     u10881:
  9509  001AF0  EF96  F00D         	goto	l9205
  9510  001AF4                     u10880:
  9511  001AF4                     
  9512                           ; BSR set to: 0
  9513  001AF4  C06A  F01B         	movff	roundf@u,___flmul@b
  9514  001AF8  C06B  F01C         	movff	roundf@u+1,___flmul@b+1
  9515  001AFC  C06C  F01D         	movff	roundf@u+2,___flmul@b+2
  9516  001B00  C06D  F01E         	movff	roundf@u+3,___flmul@b+3
  9517  001B04  0E00               	movlw	0
  9518  001B06  6E1F               	movwf	___flmul@a^0,c
  9519  001B08  0E00               	movlw	0
  9520  001B0A  6E20               	movwf	(___flmul@a+1)^0,c
  9521  001B0C  0E00               	movlw	0
  9522  001B0E  6E21               	movwf	(___flmul@a+2)^0,c
  9523  001B10  0E00               	movlw	0
  9524  001B12  6E22               	movwf	(___flmul@a+3)^0,c
  9525  001B14  ECE7  F00A         	call	___flmul	;wreg free
  9526  001B18  C01B  F04C         	movff	?___flmul,?_roundf
  9527  001B1C  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  9528  001B20  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  9529  001B24  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  9530  001B28  EFD4  F00E         	goto	l1720
  9531  001B2C                     l9205:
  9532                           
  9533                           ; BSR set to: 0
  9534  001B2C  0E00               	movlw	0
  9535  001B2E  6E38               	movwf	___fladd@a^0,c
  9536  001B30  0E00               	movlw	0
  9537  001B32  6E39               	movwf	(___fladd@a+1)^0,c
  9538  001B34  0E00               	movlw	0
  9539  001B36  6E3A               	movwf	(___fladd@a+2)^0,c
  9540  001B38  0E4B               	movlw	75
  9541  001B3A  6E3B               	movwf	(___fladd@a+3)^0,c
  9542  001B3C  C04C  F034         	movff	roundf@x,___fladd@b
  9543  001B40  C04D  F035         	movff	roundf@x+1,___fladd@b+1
  9544  001B44  C04E  F036         	movff	roundf@x+2,___fladd@b+2
  9545  001B48  C04F  F037         	movff	roundf@x+3,___fladd@b+3
  9546  001B4C  EC87  F008         	call	___fladd	;wreg free
  9547  001B50  C034  F066         	movff	?___fladd,_roundf$1818
  9548  001B54  C035  F067         	movff	?___fladd+1,_roundf$1818+1
  9549  001B58  C036  F068         	movff	?___fladd+2,_roundf$1818+2
  9550  001B5C  C037  F069         	movff	?___fladd+3,_roundf$1818+3
  9551  001B60  0E00               	movlw	0
  9552  001B62  6E38               	movwf	___fladd@a^0,c
  9553  001B64  0E00               	movlw	0
  9554  001B66  6E39               	movwf	(___fladd@a+1)^0,c
  9555  001B68  0E00               	movlw	0
  9556  001B6A  6E3A               	movwf	(___fladd@a+2)^0,c
  9557  001B6C  0ECB               	movlw	203
  9558  001B6E  6E3B               	movwf	(___fladd@a+3)^0,c
  9559  001B70  C066  F034         	movff	_roundf$1818,___fladd@b
  9560  001B74  C067  F035         	movff	_roundf$1818+1,___fladd@b+1
  9561  001B78  C068  F036         	movff	_roundf$1818+2,___fladd@b+2
  9562  001B7C  C069  F037         	movff	_roundf$1818+3,___fladd@b+3
  9563  001B80  EC87  F008         	call	___fladd	;wreg free
  9564  001B84  C034  F060         	movff	?___fladd,_roundf$1819
  9565  001B88  C035  F061         	movff	?___fladd+1,_roundf$1819+1
  9566  001B8C  C036  F062         	movff	?___fladd+2,_roundf$1819+2
  9567  001B90  C037  F063         	movff	?___fladd+3,_roundf$1819+3
  9568  001B94  C060  F044         	movff	_roundf$1819,___flsub@b
  9569  001B98  C061  F045         	movff	_roundf$1819+1,___flsub@b+1
  9570  001B9C  C062  F046         	movff	_roundf$1819+2,___flsub@b+2
  9571  001BA0  C063  F047         	movff	_roundf$1819+3,___flsub@b+3
  9572  001BA4  C04C  F048         	movff	roundf@x,___flsub@a
  9573  001BA8  C04D  F049         	movff	roundf@x+1,___flsub@a+1
  9574  001BAC  C04E  F04A         	movff	roundf@x+2,___flsub@a+2
  9575  001BB0  C04F  F04B         	movff	roundf@x+3,___flsub@a+3
  9576  001BB4  EC9C  F022         	call	___flsub	;wreg free
  9577  001BB8  C044  F06E         	movff	?___flsub,roundf@y
  9578  001BBC  C045  F06F         	movff	?___flsub+1,roundf@y+1
  9579  001BC0  C046  F070         	movff	?___flsub+2,roundf@y+2
  9580  001BC4  C047  F071         	movff	?___flsub+3,roundf@y+3
  9581  001BC8  0E00               	movlw	0
  9582  001BCA  6E34               	movwf	___flge@ff1^0,c
  9583  001BCC  0E00               	movlw	0
  9584  001BCE  6E35               	movwf	(___flge@ff1+1)^0,c
  9585  001BD0  0E00               	movlw	0
  9586  001BD2  6E36               	movwf	(___flge@ff1+2)^0,c
  9587  001BD4  0E3F               	movlw	63
  9588  001BD6  6E37               	movwf	(___flge@ff1+3)^0,c
  9589  001BD8  C06E  F038         	movff	roundf@y,___flge@ff2
  9590  001BDC  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  9591  001BE0  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  9592  001BE4  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  9593  001BE8  EC93  F01B         	call	___flge	;wreg free
  9594  001BEC  B0D8               	btfsc	status,0,c
  9595  001BEE  EFFB  F00D         	goto	u10891
  9596  001BF2  EFFD  F00D         	goto	u10890
  9597  001BF6                     u10891:
  9598  001BF6  EF33  F00E         	goto	l9209
  9599  001BFA                     u10890:
  9600  001BFA  C04C  F038         	movff	roundf@x,___fladd@a
  9601  001BFE  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  9602  001C02  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  9603  001C06  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  9604  001C0A  C06E  F034         	movff	roundf@y,___fladd@b
  9605  001C0E  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  9606  001C12  C070  F036         	movff	roundf@y+2,___fladd@b+2
  9607  001C16  C071  F037         	movff	roundf@y+3,___fladd@b+3
  9608  001C1A  EC87  F008         	call	___fladd	;wreg free
  9609  001C1E  C034  F066         	movff	?___fladd,_roundf$1818
  9610  001C22  C035  F067         	movff	?___fladd+1,_roundf$1818+1
  9611  001C26  C036  F068         	movff	?___fladd+2,_roundf$1818+2
  9612  001C2A  C037  F069         	movff	?___fladd+3,_roundf$1818+3
  9613  001C2E  C066  F034         	movff	_roundf$1818,___fladd@b
  9614  001C32  C067  F035         	movff	_roundf$1818+1,___fladd@b+1
  9615  001C36  C068  F036         	movff	_roundf$1818+2,___fladd@b+2
  9616  001C3A  C069  F037         	movff	_roundf$1818+3,___fladd@b+3
  9617  001C3E  0E00               	movlw	0
  9618  001C40  6E38               	movwf	___fladd@a^0,c
  9619  001C42  0E00               	movlw	0
  9620  001C44  6E39               	movwf	(___fladd@a+1)^0,c
  9621  001C46  0E80               	movlw	128
  9622  001C48  6E3A               	movwf	(___fladd@a+2)^0,c
  9623  001C4A  0EBF               	movlw	191
  9624  001C4C  6E3B               	movwf	(___fladd@a+3)^0,c
  9625  001C4E  EC87  F008         	call	___fladd	;wreg free
  9626  001C52  C034  F06E         	movff	?___fladd,roundf@y
  9627  001C56  C035  F06F         	movff	?___fladd+1,roundf@y+1
  9628  001C5A  C036  F070         	movff	?___fladd+2,roundf@y+2
  9629  001C5E  C037  F071         	movff	?___fladd+3,roundf@y+3
  9630  001C62  EF9C  F00E         	goto	l9215
  9631  001C66                     l9209:
  9632  001C66  0E00               	movlw	0
  9633  001C68  6E34               	movwf	___flge@ff1^0,c
  9634  001C6A  0E00               	movlw	0
  9635  001C6C  6E35               	movwf	(___flge@ff1+1)^0,c
  9636  001C6E  0E00               	movlw	0
  9637  001C70  6E36               	movwf	(___flge@ff1+2)^0,c
  9638  001C72  0EBF               	movlw	191
  9639  001C74  6E37               	movwf	(___flge@ff1+3)^0,c
  9640  001C76  C06E  F038         	movff	roundf@y,___flge@ff2
  9641  001C7A  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  9642  001C7E  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  9643  001C82  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  9644  001C86  EC93  F01B         	call	___flge	;wreg free
  9645  001C8A  A0D8               	btfss	status,0,c
  9646  001C8C  EF4A  F00E         	goto	u10901
  9647  001C90  EF4C  F00E         	goto	u10900
  9648  001C94                     u10901:
  9649  001C94  EF82  F00E         	goto	l9213
  9650  001C98                     u10900:
  9651  001C98  C04C  F038         	movff	roundf@x,___fladd@a
  9652  001C9C  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  9653  001CA0  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  9654  001CA4  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  9655  001CA8  C06E  F034         	movff	roundf@y,___fladd@b
  9656  001CAC  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  9657  001CB0  C070  F036         	movff	roundf@y+2,___fladd@b+2
  9658  001CB4  C071  F037         	movff	roundf@y+3,___fladd@b+3
  9659  001CB8  EC87  F008         	call	___fladd	;wreg free
  9660  001CBC  C034  F066         	movff	?___fladd,_roundf$1818
  9661  001CC0  C035  F067         	movff	?___fladd+1,_roundf$1818+1
  9662  001CC4  C036  F068         	movff	?___fladd+2,_roundf$1818+2
  9663  001CC8  C037  F069         	movff	?___fladd+3,_roundf$1818+3
  9664  001CCC  C066  F034         	movff	_roundf$1818,___fladd@b
  9665  001CD0  C067  F035         	movff	_roundf$1818+1,___fladd@b+1
  9666  001CD4  C068  F036         	movff	_roundf$1818+2,___fladd@b+2
  9667  001CD8  C069  F037         	movff	_roundf$1818+3,___fladd@b+3
  9668  001CDC  0E00               	movlw	0
  9669  001CDE  6E38               	movwf	___fladd@a^0,c
  9670  001CE0  0E00               	movlw	0
  9671  001CE2  6E39               	movwf	(___fladd@a+1)^0,c
  9672  001CE4  0E80               	movlw	128
  9673  001CE6  6E3A               	movwf	(___fladd@a+2)^0,c
  9674  001CE8  0E3F               	movlw	63
  9675  001CEA  6E3B               	movwf	(___fladd@a+3)^0,c
  9676  001CEC  EC87  F008         	call	___fladd	;wreg free
  9677  001CF0  C034  F06E         	movff	?___fladd,roundf@y
  9678  001CF4  C035  F06F         	movff	?___fladd+1,roundf@y+1
  9679  001CF8  C036  F070         	movff	?___fladd+2,roundf@y+2
  9680  001CFC  C037  F071         	movff	?___fladd+3,roundf@y+3
  9681  001D00  EF9C  F00E         	goto	l9215
  9682  001D04                     l9213:
  9683  001D04  C06E  F034         	movff	roundf@y,___fladd@b
  9684  001D08  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  9685  001D0C  C070  F036         	movff	roundf@y+2,___fladd@b+2
  9686  001D10  C071  F037         	movff	roundf@y+3,___fladd@b+3
  9687  001D14  C04C  F038         	movff	roundf@x,___fladd@a
  9688  001D18  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  9689  001D1C  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  9690  001D20  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  9691  001D24  EC87  F008         	call	___fladd	;wreg free
  9692  001D28  C034  F06E         	movff	?___fladd,roundf@y
  9693  001D2C  C035  F06F         	movff	?___fladd+1,roundf@y+1
  9694  001D30  C036  F070         	movff	?___fladd+2,roundf@y+2
  9695  001D34  C037  F071         	movff	?___fladd+3,roundf@y+3
  9696  001D38                     l9215:
  9697  001D38  C06A  F050         	movff	roundf@u,??_roundf
  9698  001D3C  C06B  F051         	movff	roundf@u+1,??_roundf+1
  9699  001D40  C06C  F052         	movff	roundf@u+2,??_roundf+2
  9700  001D44  C06D  F053         	movff	roundf@u+3,??_roundf+3
  9701  001D48  0E20               	movlw	32
  9702  001D4A  EFAC  F00E         	goto	u10910
  9703  001D4E                     u10915:
  9704  001D4E  90D8               	bcf	status,0,c
  9705  001D50  3253               	rrcf	(??_roundf+3)^0,f,c
  9706  001D52  3252               	rrcf	(??_roundf+2)^0,f,c
  9707  001D54  3251               	rrcf	(??_roundf+1)^0,f,c
  9708  001D56  3250               	rrcf	??_roundf^0,f,c
  9709  001D58                     u10910:
  9710  001D58  2EE8               	decfsz	wreg,f,c
  9711  001D5A  EFA7  F00E         	goto	u10915
  9712  001D5E  5050               	movf	??_roundf^0,w,c
  9713  001D60  1051               	iorwf	(??_roundf+1)^0,w,c
  9714  001D62  1052               	iorwf	(??_roundf+2)^0,w,c
  9715  001D64  1053               	iorwf	(??_roundf+3)^0,w,c
  9716  001D66  B4D8               	btfsc	status,2,c
  9717  001D68  EFB8  F00E         	goto	u10921
  9718  001D6C  EFBA  F00E         	goto	u10920
  9719  001D70                     u10921:
  9720  001D70  EFCC  F00E         	goto	l9219
  9721  001D74                     u10920:
  9722  001D74  C06E  F006         	movff	roundf@y,___flneg@f1
  9723  001D78  C06F  F007         	movff	roundf@y+1,___flneg@f1+1
  9724  001D7C  C070  F008         	movff	roundf@y+2,___flneg@f1+2
  9725  001D80  C071  F009         	movff	roundf@y+3,___flneg@f1+3
  9726  001D84  EC59  F023         	call	___flneg	;wreg free
  9727  001D88  C006  F06E         	movff	?___flneg,roundf@y
  9728  001D8C  C007  F06F         	movff	?___flneg+1,roundf@y+1
  9729  001D90  C008  F070         	movff	?___flneg+2,roundf@y+2
  9730  001D94  C009  F071         	movff	?___flneg+3,roundf@y+3
  9731  001D98                     l9219:
  9732  001D98  C06E  F04C         	movff	roundf@y,?_roundf
  9733  001D9C  C06F  F04D         	movff	roundf@y+1,?_roundf+1
  9734  001DA0  C070  F04E         	movff	roundf@y+2,?_roundf+2
  9735  001DA4  C071  F04F         	movff	roundf@y+3,?_roundf+3
  9736  001DA8                     l1720:
  9737  001DA8  0012               	return		;funcret
  9738  001DAA                     __end_of_roundf:
  9739                           	opt callstack 0
  9740                           
  9741 ;; *************** function ___flsub *****************
  9742 ;; Defined at:
  9743 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;  b               4   67[COMRAM] float 
  9746 ;;  a               4   71[COMRAM] float 
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;		None
  9749 ;; Return value:  Size  Location     Type
  9750 ;;                  4   67[COMRAM] float 
  9751 ;; Registers used:
  9752 ;;		wreg, status,2, status,0, cstack
  9753 ;; Tracked objects:
  9754 ;;		On entry : 0/0
  9755 ;;		On exit  : 0/0
  9756 ;;		Unchanged: 0/0
  9757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9758 ;;      Params:         8       0       0       0       0       0       0       0       0
  9759 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9761 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9762 ;;Total ram usage:        8 bytes
  9763 ;; Hardware stack levels used:    1
  9764 ;; Hardware stack levels required when called:    3
  9765 ;; This function calls:
  9766 ;;		___fladd
  9767 ;; This function is called by:
  9768 ;;		_PID
  9769 ;;		_efgtoa
  9770 ;;		_roundf
  9771 ;; This function uses a non-reentrant model
  9772 ;;
  9773                           
  9774                           	psect	text45
  9775  004538                     __ptext45:
  9776                           	opt callstack 0
  9777  004538                     ___flsub:
  9778                           	opt callstack 22
  9779  004538  0E00               	movlw	0
  9780  00453A  1A48               	xorwf	___flsub@a^0,f,c
  9781  00453C  0E00               	movlw	0
  9782  00453E  1A49               	xorwf	(___flsub@a+1)^0,f,c
  9783  004540  0E00               	movlw	0
  9784  004542  1A4A               	xorwf	(___flsub@a+2)^0,f,c
  9785  004544  0E80               	movlw	128
  9786  004546  1A4B               	xorwf	(___flsub@a+3)^0,f,c
  9787  004548  C044  F034         	movff	___flsub@b,___fladd@b
  9788  00454C  C045  F035         	movff	___flsub@b+1,___fladd@b+1
  9789  004550  C046  F036         	movff	___flsub@b+2,___fladd@b+2
  9790  004554  C047  F037         	movff	___flsub@b+3,___fladd@b+3
  9791  004558  C048  F038         	movff	___flsub@a,___fladd@a
  9792  00455C  C049  F039         	movff	___flsub@a+1,___fladd@a+1
  9793  004560  C04A  F03A         	movff	___flsub@a+2,___fladd@a+2
  9794  004564  C04B  F03B         	movff	___flsub@a+3,___fladd@a+3
  9795  004568  EC87  F008         	call	___fladd	;wreg free
  9796  00456C  C034  F044         	movff	?___fladd,?___flsub
  9797  004570  C035  F045         	movff	?___fladd+1,?___flsub+1
  9798  004574  C036  F046         	movff	?___fladd+2,?___flsub+2
  9799  004578  C037  F047         	movff	?___fladd+3,?___flsub+3
  9800  00457C  0012               	return		;funcret
  9801  00457E                     __end_of___flsub:
  9802                           	opt callstack 0
  9803                           
  9804 ;; *************** function ___fladd *****************
  9805 ;; Defined at:
  9806 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;  b               4   51[COMRAM] float 
  9809 ;;  a               4   55[COMRAM] float 
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;  grs             1   66[COMRAM] unsigned char 
  9812 ;;  bexp            1   65[COMRAM] unsigned char 
  9813 ;;  aexp            1   64[COMRAM] unsigned char 
  9814 ;;  signs           1   63[COMRAM] unsigned char 
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  4   51[COMRAM] unsigned char 
  9817 ;; Registers used:
  9818 ;;		wreg, status,2, status,0
  9819 ;; Tracked objects:
  9820 ;;		On entry : 0/0
  9821 ;;		On exit  : 0/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9824 ;;      Params:         8       0       0       0       0       0       0       0       0
  9825 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9826 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9827 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9828 ;;Total ram usage:       16 bytes
  9829 ;; Hardware stack levels used:    1
  9830 ;; Hardware stack levels required when called:    2
  9831 ;; This function calls:
  9832 ;;		Nothing
  9833 ;; This function is called by:
  9834 ;;		_leerSensores
  9835 ;;		_PID
  9836 ;;		_efgtoa
  9837 ;;		___flsub
  9838 ;;		_roundf
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842                           	psect	text46
  9843  00110E                     __ptext46:
  9844                           	opt callstack 0
  9845  00110E                     ___fladd:
  9846                           	opt callstack 22
  9847  00110E  5037               	movf	(___fladd@b+3)^0,w,c
  9848  001110  0B80               	andlw	128
  9849  001112  6E40               	movwf	___fladd@signs^0,c
  9850  001114  5037               	movf	(___fladd@b+3)^0,w,c
  9851  001116  2437               	addwf	(___fladd@b+3)^0,w,c
  9852  001118  6E42               	movwf	___fladd@bexp^0,c
  9853  00111A  AE36               	btfss	(___fladd@b+2)^0,7,c
  9854  00111C  EF92  F008         	goto	u8081
  9855  001120  EF94  F008         	goto	u8080
  9856  001124                     u8081:
  9857  001124  EF95  F008         	goto	l7663
  9858  001128                     u8080:
  9859  001128  8042               	bsf	___fladd@bexp^0,0,c
  9860  00112A                     l7663:
  9861  00112A  5042               	movf	___fladd@bexp^0,w,c
  9862  00112C  B4D8               	btfsc	status,2,c
  9863  00112E  EF9B  F008         	goto	u8091
  9864  001132  EF9D  F008         	goto	u8090
  9865  001136                     u8091:
  9866  001136  EFB2  F008         	goto	l7673
  9867  00113A                     u8090:
  9868  00113A  2842               	incf	___fladd@bexp^0,w,c
  9869  00113C  A4D8               	btfss	status,2,c
  9870  00113E  EFA3  F008         	goto	u8101
  9871  001142  EFA5  F008         	goto	u8100
  9872  001146                     u8101:
  9873  001146  EFAD  F008         	goto	l7669
  9874  00114A                     u8100:
  9875  00114A  0E00               	movlw	0
  9876  00114C  6E34               	movwf	___fladd@b^0,c
  9877  00114E  0E00               	movlw	0
  9878  001150  6E35               	movwf	(___fladd@b+1)^0,c
  9879  001152  0E00               	movlw	0
  9880  001154  6E36               	movwf	(___fladd@b+2)^0,c
  9881  001156  0E00               	movlw	0
  9882  001158  6E37               	movwf	(___fladd@b+3)^0,c
  9883  00115A                     l7669:
  9884  00115A  8E36               	bsf	(___fladd@b+2)^0,7,c
  9885  00115C  0E00               	movlw	0
  9886  00115E  6E37               	movwf	(___fladd@b+3)^0,c
  9887  001160  EFBA  F008         	goto	l7675
  9888  001164                     l7673:
  9889  001164  0E00               	movlw	0
  9890  001166  6E34               	movwf	___fladd@b^0,c
  9891  001168  0E00               	movlw	0
  9892  00116A  6E35               	movwf	(___fladd@b+1)^0,c
  9893  00116C  0E00               	movlw	0
  9894  00116E  6E36               	movwf	(___fladd@b+2)^0,c
  9895  001170  0E00               	movlw	0
  9896  001172  6E37               	movwf	(___fladd@b+3)^0,c
  9897  001174                     l7675:
  9898  001174  503B               	movf	(___fladd@a+3)^0,w,c
  9899  001176  0B80               	andlw	128
  9900  001178  6E41               	movwf	___fladd@aexp^0,c
  9901  00117A  5040               	movf	___fladd@signs^0,w,c
  9902  00117C  1841               	xorwf	___fladd@aexp^0,w,c
  9903  00117E  B4D8               	btfsc	status,2,c
  9904  001180  EFC4  F008         	goto	u8111
  9905  001184  EFC6  F008         	goto	u8110
  9906  001188                     u8111:
  9907  001188  EFC7  F008         	goto	l7681
  9908  00118C                     u8110:
  9909  00118C  8C40               	bsf	___fladd@signs^0,6,c
  9910  00118E                     l7681:
  9911  00118E  503B               	movf	(___fladd@a+3)^0,w,c
  9912  001190  243B               	addwf	(___fladd@a+3)^0,w,c
  9913  001192  6E41               	movwf	___fladd@aexp^0,c
  9914  001194  AE3A               	btfss	(___fladd@a+2)^0,7,c
  9915  001196  EFCF  F008         	goto	u8121
  9916  00119A  EFD1  F008         	goto	u8120
  9917  00119E                     u8121:
  9918  00119E  EFD2  F008         	goto	l7687
  9919  0011A2                     u8120:
  9920  0011A2  8041               	bsf	___fladd@aexp^0,0,c
  9921  0011A4                     l7687:
  9922  0011A4  5041               	movf	___fladd@aexp^0,w,c
  9923  0011A6  B4D8               	btfsc	status,2,c
  9924  0011A8  EFD8  F008         	goto	u8131
  9925  0011AC  EFDA  F008         	goto	u8130
  9926  0011B0                     u8131:
  9927  0011B0  EFEF  F008         	goto	l7697
  9928  0011B4                     u8130:
  9929  0011B4  2841               	incf	___fladd@aexp^0,w,c
  9930  0011B6  A4D8               	btfss	status,2,c
  9931  0011B8  EFE0  F008         	goto	u8141
  9932  0011BC  EFE2  F008         	goto	u8140
  9933  0011C0                     u8141:
  9934  0011C0  EFEA  F008         	goto	l7693
  9935  0011C4                     u8140:
  9936  0011C4  0E00               	movlw	0
  9937  0011C6  6E38               	movwf	___fladd@a^0,c
  9938  0011C8  0E00               	movlw	0
  9939  0011CA  6E39               	movwf	(___fladd@a+1)^0,c
  9940  0011CC  0E00               	movlw	0
  9941  0011CE  6E3A               	movwf	(___fladd@a+2)^0,c
  9942  0011D0  0E00               	movlw	0
  9943  0011D2  6E3B               	movwf	(___fladd@a+3)^0,c
  9944  0011D4                     l7693:
  9945  0011D4  8E3A               	bsf	(___fladd@a+2)^0,7,c
  9946  0011D6  0E00               	movlw	0
  9947  0011D8  6E3B               	movwf	(___fladd@a+3)^0,c
  9948  0011DA  EFF7  F008         	goto	l7699
  9949  0011DE                     l7697:
  9950  0011DE  0E00               	movlw	0
  9951  0011E0  6E38               	movwf	___fladd@a^0,c
  9952  0011E2  0E00               	movlw	0
  9953  0011E4  6E39               	movwf	(___fladd@a+1)^0,c
  9954  0011E6  0E00               	movlw	0
  9955  0011E8  6E3A               	movwf	(___fladd@a+2)^0,c
  9956  0011EA  0E00               	movlw	0
  9957  0011EC  6E3B               	movwf	(___fladd@a+3)^0,c
  9958  0011EE                     l7699:
  9959  0011EE  5042               	movf	___fladd@bexp^0,w,c
  9960  0011F0  5C41               	subwf	___fladd@aexp^0,w,c
  9961  0011F2  B0D8               	btfsc	status,0,c
  9962  0011F4  EFFE  F008         	goto	u8151
  9963  0011F8  EF00  F009         	goto	u8150
  9964  0011FC                     u8151:
  9965  0011FC  EF27  F009         	goto	l7735
  9966  001200                     u8150:
  9967  001200  AC40               	btfss	___fladd@signs^0,6,c
  9968  001202  EF05  F009         	goto	u8161
  9969  001206  EF07  F009         	goto	u8160
  9970  00120A                     u8161:
  9971  00120A  EF09  F009         	goto	l7705
  9972  00120E                     u8160:
  9973  00120E  0E80               	movlw	128
  9974  001210  1A40               	xorwf	___fladd@signs^0,f,c
  9975  001212                     l7705:
  9976  001212  C042  F043         	movff	___fladd@bexp,___fladd@grs
  9977  001216  C041  F042         	movff	___fladd@aexp,___fladd@bexp
  9978  00121A  C043  F041         	movff	___fladd@grs,___fladd@aexp
  9979  00121E  C034  F043         	movff	___fladd@b,___fladd@grs
  9980  001222  C038  F034         	movff	___fladd@a,___fladd@b
  9981  001226  C043  F038         	movff	___fladd@grs,___fladd@a
  9982  00122A  C035  F043         	movff	___fladd@b+1,___fladd@grs
  9983  00122E  C039  F035         	movff	___fladd@a+1,___fladd@b+1
  9984  001232  C043  F039         	movff	___fladd@grs,___fladd@a+1
  9985  001236  C036  F043         	movff	___fladd@b+2,___fladd@grs
  9986  00123A  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
  9987  00123E  C043  F03A         	movff	___fladd@grs,___fladd@a+2
  9988  001242  C037  F043         	movff	___fladd@b+3,___fladd@grs
  9989  001246  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
  9990  00124A  C043  F03B         	movff	___fladd@grs,___fladd@a+3
  9991  00124E                     l7735:
  9992  00124E  0E00               	movlw	0
  9993  001250  6E43               	movwf	___fladd@grs^0,c
  9994  001252  5042               	movf	___fladd@bexp^0,w,c
  9995  001254  C041  F03C         	movff	___fladd@aexp,??___fladd
  9996  001258  6A3D               	clrf	(??___fladd+1)^0,c
  9997  00125A  5E3C               	subwf	??___fladd^0,f,c
  9998  00125C  0E00               	movlw	0
  9999  00125E  5A3D               	subwfb	(??___fladd+1)^0,f,c
 10000  001260  BE3D               	btfsc	(??___fladd+1)^0,7,c
 10001  001262  EF3C  F009         	goto	u8171
 10002  001266  503D               	movf	(??___fladd+1)^0,w,c
 10003  001268  E109               	bnz	u8170
 10004  00126A  0E1A               	movlw	26
 10005  00126C  5C3C               	subwf	??___fladd^0,w,c
 10006  00126E  A0D8               	btfss	status,0,c
 10007  001270  EF3C  F009         	goto	u8171
 10008  001274  EF3E  F009         	goto	u8170
 10009  001278                     u8171:
 10010  001278  EF75  F009         	goto	l1458
 10011  00127C                     u8170:
 10012  00127C  5034               	movf	___fladd@b^0,w,c
 10013  00127E  1035               	iorwf	(___fladd@b+1)^0,w,c
 10014  001280  1036               	iorwf	(___fladd@b+2)^0,w,c
 10015  001282  1037               	iorwf	(___fladd@b+3)^0,w,c
 10016  001284  A4D8               	btfss	status,2,c
 10017  001286  EF47  F009         	goto	u8181
 10018  00128A  EF4A  F009         	goto	u8180
 10019  00128E                     u8181:
 10020  00128E  0E01               	movlw	1
 10021  001290  EF4B  F009         	goto	u8190
 10022  001294                     u8180:
 10023  001294  0E00               	movlw	0
 10024  001296                     u8190:
 10025  001296  6E43               	movwf	___fladd@grs^0,c
 10026  001298  0E00               	movlw	0
 10027  00129A  6E34               	movwf	___fladd@b^0,c
 10028  00129C  0E00               	movlw	0
 10029  00129E  6E35               	movwf	(___fladd@b+1)^0,c
 10030  0012A0  0E00               	movlw	0
 10031  0012A2  6E36               	movwf	(___fladd@b+2)^0,c
 10032  0012A4  0E00               	movlw	0
 10033  0012A6  6E37               	movwf	(___fladd@b+3)^0,c
 10034  0012A8  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 10035  0012AC  EF7E  F009         	goto	l1457
 10036  0012B0                     l1459:
 10037  0012B0  A043               	btfss	___fladd@grs^0,0,c
 10038  0012B2  EF5D  F009         	goto	u8201
 10039  0012B6  EF5F  F009         	goto	u8200
 10040  0012BA                     u8201:
 10041  0012BA  EF65  F009         	goto	l7747
 10042  0012BE                     u8200:
 10043  0012BE  90D8               	bcf	status,0,c
 10044  0012C0  3043               	rrcf	___fladd@grs^0,w,c
 10045  0012C2  0901               	iorlw	1
 10046  0012C4  6E43               	movwf	___fladd@grs^0,c
 10047  0012C6  EF67  F009         	goto	l7749
 10048  0012CA                     l7747:
 10049  0012CA  90D8               	bcf	status,0,c
 10050  0012CC  3243               	rrcf	___fladd@grs^0,f,c
 10051  0012CE                     l7749:
 10052  0012CE  A034               	btfss	___fladd@b^0,0,c
 10053  0012D0  EF6C  F009         	goto	u8211
 10054  0012D4  EF6E  F009         	goto	u8210
 10055  0012D8                     u8211:
 10056  0012D8  EF6F  F009         	goto	l7753
 10057  0012DC                     u8210:
 10058  0012DC  8E43               	bsf	___fladd@grs^0,7,c
 10059  0012DE                     l7753:
 10060  0012DE  3437               	rlcf	(___fladd@b+3)^0,w,c
 10061  0012E0  3237               	rrcf	(___fladd@b+3)^0,f,c
 10062  0012E2  3236               	rrcf	(___fladd@b+2)^0,f,c
 10063  0012E4  3235               	rrcf	(___fladd@b+1)^0,f,c
 10064  0012E6  3234               	rrcf	___fladd@b^0,f,c
 10065  0012E8  2A42               	incf	___fladd@bexp^0,f,c
 10066  0012EA                     l1458:
 10067  0012EA  5041               	movf	___fladd@aexp^0,w,c
 10068  0012EC  5C42               	subwf	___fladd@bexp^0,w,c
 10069  0012EE  A0D8               	btfss	status,0,c
 10070  0012F0  EF7C  F009         	goto	u8221
 10071  0012F4  EF7E  F009         	goto	u8220
 10072  0012F8                     u8221:
 10073  0012F8  EF58  F009         	goto	l1459
 10074  0012FC                     u8220:
 10075  0012FC                     l1457:
 10076  0012FC  BC40               	btfsc	___fladd@signs^0,6,c
 10077  0012FE  EF83  F009         	goto	u8231
 10078  001302  EF85  F009         	goto	u8230
 10079  001306                     u8231:
 10080  001306  EFC5  F009         	goto	l7781
 10081  00130A                     u8230:
 10082  00130A  5042               	movf	___fladd@bexp^0,w,c
 10083  00130C  A4D8               	btfss	status,2,c
 10084  00130E  EF8B  F009         	goto	u8241
 10085  001312  EF8D  F009         	goto	u8240
 10086  001316                     u8241:
 10087  001316  EF97  F009         	goto	l7763
 10088  00131A                     u8240:
 10089  00131A  0E00               	movlw	0
 10090  00131C  6E34               	movwf	?___fladd^0,c
 10091  00131E  0E00               	movlw	0
 10092  001320  6E35               	movwf	(?___fladd+1)^0,c
 10093  001322  0E00               	movlw	0
 10094  001324  6E36               	movwf	(?___fladd+2)^0,c
 10095  001326  0E00               	movlw	0
 10096  001328  6E37               	movwf	(?___fladd+3)^0,c
 10097  00132A  EFE6  F00A         	goto	l1466
 10098  00132E                     l7763:
 10099  00132E  5038               	movf	___fladd@a^0,w,c
 10100  001330  2634               	addwf	___fladd@b^0,f,c
 10101  001332  5039               	movf	(___fladd@a+1)^0,w,c
 10102  001334  2235               	addwfc	(___fladd@b+1)^0,f,c
 10103  001336  503A               	movf	(___fladd@a+2)^0,w,c
 10104  001338  2236               	addwfc	(___fladd@b+2)^0,f,c
 10105  00133A  503B               	movf	(___fladd@a+3)^0,w,c
 10106  00133C  2237               	addwfc	(___fladd@b+3)^0,f,c
 10107  00133E  A037               	btfss	(___fladd@b+3)^0,0,c
 10108  001340  EFA4  F009         	goto	u8251
 10109  001344  EFA6  F009         	goto	u8250
 10110  001348                     u8251:
 10111  001348  EF52  F00A         	goto	l7817
 10112  00134C                     u8250:
 10113  00134C  A043               	btfss	___fladd@grs^0,0,c
 10114  00134E  EFAB  F009         	goto	u8261
 10115  001352  EFAD  F009         	goto	u8260
 10116  001356                     u8261:
 10117  001356  EFB3  F009         	goto	l7771
 10118  00135A                     u8260:
 10119  00135A  90D8               	bcf	status,0,c
 10120  00135C  3043               	rrcf	___fladd@grs^0,w,c
 10121  00135E  0901               	iorlw	1
 10122  001360  6E43               	movwf	___fladd@grs^0,c
 10123  001362  EFB5  F009         	goto	l7773
 10124  001366                     l7771:
 10125  001366  90D8               	bcf	status,0,c
 10126  001368  3243               	rrcf	___fladd@grs^0,f,c
 10127  00136A                     l7773:
 10128  00136A  A034               	btfss	___fladd@b^0,0,c
 10129  00136C  EFBA  F009         	goto	u8271
 10130  001370  EFBC  F009         	goto	u8270
 10131  001374                     u8271:
 10132  001374  EFBD  F009         	goto	l7777
 10133  001378                     u8270:
 10134  001378  8E43               	bsf	___fladd@grs^0,7,c
 10135  00137A                     l7777:
 10136  00137A  3437               	rlcf	(___fladd@b+3)^0,w,c
 10137  00137C  3237               	rrcf	(___fladd@b+3)^0,f,c
 10138  00137E  3236               	rrcf	(___fladd@b+2)^0,f,c
 10139  001380  3235               	rrcf	(___fladd@b+1)^0,f,c
 10140  001382  3234               	rrcf	___fladd@b^0,f,c
 10141  001384  2A42               	incf	___fladd@bexp^0,f,c
 10142  001386  EF52  F00A         	goto	l7817
 10143  00138A                     l7781:
 10144  00138A  5038               	movf	___fladd@a^0,w,c
 10145  00138C  5C34               	subwf	___fladd@b^0,w,c
 10146  00138E  5039               	movf	(___fladd@a+1)^0,w,c
 10147  001390  5835               	subwfb	(___fladd@b+1)^0,w,c
 10148  001392  503A               	movf	(___fladd@a+2)^0,w,c
 10149  001394  5836               	subwfb	(___fladd@b+2)^0,w,c
 10150  001396  5037               	movf	(___fladd@b+3)^0,w,c
 10151  001398  0A80               	xorlw	128
 10152  00139A  6E3C               	movwf	??___fladd^0,c
 10153  00139C  503B               	movf	(___fladd@a+3)^0,w,c
 10154  00139E  0A80               	xorlw	128
 10155  0013A0  583C               	subwfb	??___fladd^0,w,c
 10156  0013A2  B0D8               	btfsc	status,0,c
 10157  0013A4  EFD6  F009         	goto	u8281
 10158  0013A8  EFD8  F009         	goto	u8280
 10159  0013AC                     u8281:
 10160  0013AC  EF03  F00A         	goto	l7791
 10161  0013B0                     u8280:
 10162  0013B0  5034               	movf	___fladd@b^0,w,c
 10163  0013B2  5C38               	subwf	___fladd@a^0,w,c
 10164  0013B4  6E3C               	movwf	??___fladd^0,c
 10165  0013B6  5035               	movf	(___fladd@b+1)^0,w,c
 10166  0013B8  5839               	subwfb	(___fladd@a+1)^0,w,c
 10167  0013BA  6E3D               	movwf	(??___fladd+1)^0,c
 10168  0013BC  5036               	movf	(___fladd@b+2)^0,w,c
 10169  0013BE  583A               	subwfb	(___fladd@a+2)^0,w,c
 10170  0013C0  6E3E               	movwf	(??___fladd+2)^0,c
 10171  0013C2  5037               	movf	(___fladd@b+3)^0,w,c
 10172  0013C4  583B               	subwfb	(___fladd@a+3)^0,w,c
 10173  0013C6  6E3F               	movwf	(??___fladd+3)^0,c
 10174  0013C8  0EFF               	movlw	255
 10175  0013CA  243C               	addwf	??___fladd^0,w,c
 10176  0013CC  6E34               	movwf	___fladd@b^0,c
 10177  0013CE  0EFF               	movlw	255
 10178  0013D0  203D               	addwfc	(??___fladd+1)^0,w,c
 10179  0013D2  6E35               	movwf	(___fladd@b+1)^0,c
 10180  0013D4  0EFF               	movlw	255
 10181  0013D6  203E               	addwfc	(??___fladd+2)^0,w,c
 10182  0013D8  6E36               	movwf	(___fladd@b+2)^0,c
 10183  0013DA  0EFF               	movlw	255
 10184  0013DC  203F               	addwfc	(??___fladd+3)^0,w,c
 10185  0013DE  6E37               	movwf	(___fladd@b+3)^0,c
 10186  0013E0  0E80               	movlw	128
 10187  0013E2  1A40               	xorwf	___fladd@signs^0,f,c
 10188  0013E4  6C43               	negf	___fladd@grs^0,c
 10189  0013E6  5043               	movf	___fladd@grs^0,w,c
 10190  0013E8  A4D8               	btfss	status,2,c
 10191  0013EA  EFF9  F009         	goto	u8291
 10192  0013EE  EFFB  F009         	goto	u8290
 10193  0013F2                     u8291:
 10194  0013F2  EF0B  F00A         	goto	l1474
 10195  0013F6                     u8290:
 10196  0013F6  0E01               	movlw	1
 10197  0013F8  2634               	addwf	___fladd@b^0,f,c
 10198  0013FA  0E00               	movlw	0
 10199  0013FC  2235               	addwfc	(___fladd@b+1)^0,f,c
 10200  0013FE  2236               	addwfc	(___fladd@b+2)^0,f,c
 10201  001400  2237               	addwfc	(___fladd@b+3)^0,f,c
 10202  001402  EF0B  F00A         	goto	l1474
 10203  001406                     l7791:
 10204  001406  5038               	movf	___fladd@a^0,w,c
 10205  001408  5E34               	subwf	___fladd@b^0,f,c
 10206  00140A  5039               	movf	(___fladd@a+1)^0,w,c
 10207  00140C  5A35               	subwfb	(___fladd@b+1)^0,f,c
 10208  00140E  503A               	movf	(___fladd@a+2)^0,w,c
 10209  001410  5A36               	subwfb	(___fladd@b+2)^0,f,c
 10210  001412  503B               	movf	(___fladd@a+3)^0,w,c
 10211  001414  5A37               	subwfb	(___fladd@b+3)^0,f,c
 10212  001416                     l1474:
 10213  001416  5034               	movf	___fladd@b^0,w,c
 10214  001418  1035               	iorwf	(___fladd@b+1)^0,w,c
 10215  00141A  1036               	iorwf	(___fladd@b+2)^0,w,c
 10216  00141C  1037               	iorwf	(___fladd@b+3)^0,w,c
 10217  00141E  A4D8               	btfss	status,2,c
 10218  001420  EF14  F00A         	goto	u8301
 10219  001424  EF16  F00A         	goto	u8300
 10220  001428                     u8301:
 10221  001428  EF4B  F00A         	goto	l7815
 10222  00142C                     u8300:
 10223  00142C  5043               	movf	___fladd@grs^0,w,c
 10224  00142E  A4D8               	btfss	status,2,c
 10225  001430  EF1C  F00A         	goto	u8311
 10226  001434  EF1E  F00A         	goto	u8310
 10227  001438                     u8311:
 10228  001438  EF4B  F00A         	goto	l7815
 10229  00143C                     u8310:
 10230  00143C  0E00               	movlw	0
 10231  00143E  6E34               	movwf	?___fladd^0,c
 10232  001440  0E00               	movlw	0
 10233  001442  6E35               	movwf	(?___fladd+1)^0,c
 10234  001444  0E00               	movlw	0
 10235  001446  6E36               	movwf	(?___fladd+2)^0,c
 10236  001448  0E00               	movlw	0
 10237  00144A  6E37               	movwf	(?___fladd+3)^0,c
 10238  00144C  EFE6  F00A         	goto	l1466
 10239  001450                     l7799:
 10240  001450  90D8               	bcf	status,0,c
 10241  001452  3634               	rlcf	___fladd@b^0,f,c
 10242  001454  3635               	rlcf	(___fladd@b+1)^0,f,c
 10243  001456  3636               	rlcf	(___fladd@b+2)^0,f,c
 10244  001458  3637               	rlcf	(___fladd@b+3)^0,f,c
 10245  00145A  AE43               	btfss	___fladd@grs^0,7,c
 10246  00145C  EF32  F00A         	goto	u8321
 10247  001460  EF34  F00A         	goto	u8320
 10248  001464                     u8321:
 10249  001464  EF35  F00A         	goto	l7805
 10250  001468                     u8320:
 10251  001468  8034               	bsf	___fladd@b^0,0,c
 10252  00146A                     l7805:
 10253  00146A  A043               	btfss	___fladd@grs^0,0,c
 10254  00146C  EF3A  F00A         	goto	u8331
 10255  001470  EF3C  F00A         	goto	u8330
 10256  001474                     u8331:
 10257  001474  EF40  F00A         	goto	l7809
 10258  001478                     u8330:
 10259  001478  80D8               	bsf	status,0,c
 10260  00147A  3643               	rlcf	___fladd@grs^0,f,c
 10261  00147C  EF42  F00A         	goto	l7811
 10262  001480                     l7809:
 10263  001480  90D8               	bcf	status,0,c
 10264  001482  3643               	rlcf	___fladd@grs^0,f,c
 10265  001484                     l7811:
 10266  001484  5042               	movf	___fladd@bexp^0,w,c
 10267  001486  B4D8               	btfsc	status,2,c
 10268  001488  EF48  F00A         	goto	u8341
 10269  00148C  EF4A  F00A         	goto	u8340
 10270  001490                     u8341:
 10271  001490  EF4B  F00A         	goto	l7815
 10272  001494                     u8340:
 10273  001494  0642               	decf	___fladd@bexp^0,f,c
 10274  001496                     l7815:
 10275  001496  AE36               	btfss	(___fladd@b+2)^0,7,c
 10276  001498  EF50  F00A         	goto	u8351
 10277  00149C  EF52  F00A         	goto	u8350
 10278  0014A0                     u8351:
 10279  0014A0  EF28  F00A         	goto	l7799
 10280  0014A4                     u8350:
 10281  0014A4                     l7817:
 10282  0014A4  0E00               	movlw	0
 10283  0014A6  6E41               	movwf	___fladd@aexp^0,c
 10284  0014A8  AE43               	btfss	___fladd@grs^0,7,c
 10285  0014AA  EF59  F00A         	goto	u8361
 10286  0014AE  EF5B  F00A         	goto	u8360
 10287  0014B2                     u8361:
 10288  0014B2  EF73  F00A         	goto	l1483
 10289  0014B6                     u8360:
 10290  0014B6  C043  F03C         	movff	___fladd@grs,??___fladd
 10291  0014BA  0E7F               	movlw	127
 10292  0014BC  163C               	andwf	??___fladd^0,f,c
 10293  0014BE  B4D8               	btfsc	status,2,c
 10294  0014C0  EF64  F00A         	goto	u8371
 10295  0014C4  EF66  F00A         	goto	u8370
 10296  0014C8                     u8371:
 10297  0014C8  EF6A  F00A         	goto	l1484
 10298  0014CC                     u8370:
 10299  0014CC                     l7823:
 10300  0014CC  0E01               	movlw	1
 10301  0014CE  6E41               	movwf	___fladd@aexp^0,c
 10302  0014D0  EF73  F00A         	goto	l1483
 10303  0014D4                     l1484:
 10304  0014D4  A034               	btfss	___fladd@b^0,0,c
 10305  0014D6  EF6F  F00A         	goto	u8381
 10306  0014DA  EF71  F00A         	goto	u8380
 10307  0014DE                     u8381:
 10308  0014DE  EF73  F00A         	goto	l1483
 10309  0014E2                     u8380:
 10310  0014E2  EF66  F00A         	goto	l7823
 10311  0014E6                     l1483:
 10312  0014E6  5041               	movf	___fladd@aexp^0,w,c
 10313  0014E8  B4D8               	btfsc	status,2,c
 10314  0014EA  EF79  F00A         	goto	u8391
 10315  0014EE  EF7B  F00A         	goto	u8390
 10316  0014F2                     u8391:
 10317  0014F2  EFA6  F00A         	goto	l7835
 10318  0014F6                     u8390:
 10319  0014F6  0E01               	movlw	1
 10320  0014F8  2634               	addwf	___fladd@b^0,f,c
 10321  0014FA  0E00               	movlw	0
 10322  0014FC  2235               	addwfc	(___fladd@b+1)^0,f,c
 10323  0014FE  2236               	addwfc	(___fladd@b+2)^0,f,c
 10324  001500  2237               	addwfc	(___fladd@b+3)^0,f,c
 10325  001502  A037               	btfss	(___fladd@b+3)^0,0,c
 10326  001504  EF86  F00A         	goto	u8401
 10327  001508  EF88  F00A         	goto	u8400
 10328  00150C                     u8401:
 10329  00150C  EFA6  F00A         	goto	l7835
 10330  001510                     u8400:
 10331  001510  C034  F03C         	movff	___fladd@b,??___fladd
 10332  001514  C035  F03D         	movff	___fladd@b+1,??___fladd+1
 10333  001518  C036  F03E         	movff	___fladd@b+2,??___fladd+2
 10334  00151C  C037  F03F         	movff	___fladd@b+3,??___fladd+3
 10335  001520  343F               	rlcf	(??___fladd+3)^0,w,c
 10336  001522  323F               	rrcf	(??___fladd+3)^0,f,c
 10337  001524  323E               	rrcf	(??___fladd+2)^0,f,c
 10338  001526  323D               	rrcf	(??___fladd+1)^0,f,c
 10339  001528  323C               	rrcf	??___fladd^0,f,c
 10340  00152A  C03C  F034         	movff	??___fladd,___fladd@b
 10341  00152E  C03D  F035         	movff	??___fladd+1,___fladd@b+1
 10342  001532  C03E  F036         	movff	??___fladd+2,___fladd@b+2
 10343  001536  C03F  F037         	movff	??___fladd+3,___fladd@b+3
 10344  00153A  2842               	incf	___fladd@bexp^0,w,c
 10345  00153C  B4D8               	btfsc	status,2,c
 10346  00153E  EFA3  F00A         	goto	u8411
 10347  001542  EFA5  F00A         	goto	u8410
 10348  001546                     u8411:
 10349  001546  EFA6  F00A         	goto	l7835
 10350  00154A                     u8410:
 10351  00154A  2A42               	incf	___fladd@bexp^0,f,c
 10352  00154C                     l7835:
 10353  00154C  2842               	incf	___fladd@bexp^0,w,c
 10354  00154E  B4D8               	btfsc	status,2,c
 10355  001550  EFAC  F00A         	goto	u8421
 10356  001554  EFAE  F00A         	goto	u8420
 10357  001558                     u8421:
 10358  001558  EFB6  F00A         	goto	l7839
 10359  00155C                     u8420:
 10360  00155C  5042               	movf	___fladd@bexp^0,w,c
 10361  00155E  A4D8               	btfss	status,2,c
 10362  001560  EFB4  F00A         	goto	u8431
 10363  001564  EFB6  F00A         	goto	u8430
 10364  001568                     u8431:
 10365  001568  EFC8  F00A         	goto	l7843
 10366  00156C                     u8430:
 10367  00156C                     l7839:
 10368  00156C  0E00               	movlw	0
 10369  00156E  6E34               	movwf	___fladd@b^0,c
 10370  001570  0E00               	movlw	0
 10371  001572  6E35               	movwf	(___fladd@b+1)^0,c
 10372  001574  0E00               	movlw	0
 10373  001576  6E36               	movwf	(___fladd@b+2)^0,c
 10374  001578  0E00               	movlw	0
 10375  00157A  6E37               	movwf	(___fladd@b+3)^0,c
 10376  00157C  5042               	movf	___fladd@bexp^0,w,c
 10377  00157E  A4D8               	btfss	status,2,c
 10378  001580  EFC4  F00A         	goto	u8441
 10379  001584  EFC6  F00A         	goto	u8440
 10380  001588                     u8441:
 10381  001588  EFC8  F00A         	goto	l7843
 10382  00158C                     u8440:
 10383  00158C  0E00               	movlw	0
 10384  00158E  6E40               	movwf	___fladd@signs^0,c
 10385  001590                     l7843:
 10386  001590  A042               	btfss	___fladd@bexp^0,0,c
 10387  001592  EFCD  F00A         	goto	u8451
 10388  001596  EFCF  F00A         	goto	u8450
 10389  00159A                     u8451:
 10390  00159A  EFD2  F00A         	goto	l7847
 10391  00159E                     u8450:
 10392  00159E  8E36               	bsf	(___fladd@b+2)^0,7,c
 10393  0015A0  EFD3  F00A         	goto	l7849
 10394  0015A4                     l7847:
 10395  0015A4  9E36               	bcf	(___fladd@b+2)^0,7,c
 10396  0015A6                     l7849:
 10397  0015A6  90D8               	bcf	status,0,c
 10398  0015A8  3042               	rrcf	___fladd@bexp^0,w,c
 10399  0015AA  6E37               	movwf	(___fladd@b+3)^0,c
 10400  0015AC  AE40               	btfss	___fladd@signs^0,7,c
 10401  0015AE  EFDB  F00A         	goto	u8461
 10402  0015B2  EFDD  F00A         	goto	u8460
 10403  0015B6                     u8461:
 10404  0015B6  EFDE  F00A         	goto	l7855
 10405  0015BA                     u8460:
 10406  0015BA  8E37               	bsf	(___fladd@b+3)^0,7,c
 10407  0015BC                     l7855:
 10408  0015BC  C034  F034         	movff	___fladd@b,?___fladd
 10409  0015C0  C035  F035         	movff	___fladd@b+1,?___fladd+1
 10410  0015C4  C036  F036         	movff	___fladd@b+2,?___fladd+2
 10411  0015C8  C037  F037         	movff	___fladd@b+3,?___fladd+3
 10412  0015CC                     l1466:
 10413  0015CC  0012               	return		;funcret
 10414  0015CE                     __end_of___fladd:
 10415                           	opt callstack 0
 10416                           
 10417 ;; *************** function ___flneg *****************
 10418 ;; Defined at:
 10419 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;  f1              4    5[COMRAM] unsigned char 
 10422 ;; Auto vars:     Size  Location     Type
 10423 ;;		None
 10424 ;; Return value:  Size  Location     Type
 10425 ;;                  4    5[COMRAM] unsigned char 
 10426 ;; Registers used:
 10427 ;;		wreg, status,2, status,0
 10428 ;; Tracked objects:
 10429 ;;		On entry : 0/0
 10430 ;;		On exit  : 0/0
 10431 ;;		Unchanged: 0/0
 10432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10433 ;;      Params:         4       0       0       0       0       0       0       0       0
 10434 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10435 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10436 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10437 ;;Total ram usage:        4 bytes
 10438 ;; Hardware stack levels used:    1
 10439 ;; Hardware stack levels required when called:    2
 10440 ;; This function calls:
 10441 ;;		Nothing
 10442 ;; This function is called by:
 10443 ;;		_efgtoa
 10444 ;;		_roundf
 10445 ;; This function uses a non-reentrant model
 10446 ;;
 10447                           
 10448                           	psect	text47
 10449  0046B2                     __ptext47:
 10450                           	opt callstack 0
 10451  0046B2                     ___flneg:
 10452                           	opt callstack 23
 10453  0046B2  5006               	movf	___flneg@f1^0,w,c
 10454  0046B4  1007               	iorwf	(___flneg@f1+1)^0,w,c
 10455  0046B6  1008               	iorwf	(___flneg@f1+2)^0,w,c
 10456  0046B8  1009               	iorwf	(___flneg@f1+3)^0,w,c
 10457  0046BA  B4D8               	btfsc	status,2,c
 10458  0046BC  EF62  F023         	goto	u9711
 10459  0046C0  EF64  F023         	goto	u9710
 10460  0046C4                     u9711:
 10461  0046C4  EF6C  F023         	goto	l8543
 10462  0046C8                     u9710:
 10463  0046C8  0E00               	movlw	0
 10464  0046CA  1A06               	xorwf	___flneg@f1^0,f,c
 10465  0046CC  0E00               	movlw	0
 10466  0046CE  1A07               	xorwf	(___flneg@f1+1)^0,f,c
 10467  0046D0  0E00               	movlw	0
 10468  0046D2  1A08               	xorwf	(___flneg@f1+2)^0,f,c
 10469  0046D4  0E80               	movlw	128
 10470  0046D6  1A09               	xorwf	(___flneg@f1+3)^0,f,c
 10471  0046D8                     l8543:
 10472  0046D8  C006  F006         	movff	___flneg@f1,?___flneg
 10473  0046DC  C007  F007         	movff	___flneg@f1+1,?___flneg+1
 10474  0046E0  C008  F008         	movff	___flneg@f1+2,?___flneg+2
 10475  0046E4  C009  F009         	movff	___flneg@f1+3,?___flneg+3
 10476  0046E8  0012               	return		;funcret
 10477  0046EA                     __end_of___flneg:
 10478                           	opt callstack 0
 10479                           
 10480 ;; *************** function ___flge *****************
 10481 ;; Defined at:
 10482 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 10483 ;; Parameters:    Size  Location     Type
 10484 ;;  ff1             4   51[COMRAM] unsigned char 
 10485 ;;  ff2             4   55[COMRAM] unsigned char 
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;		None
 10488 ;; Return value:  Size  Location     Type
 10489 ;;		None               void
 10490 ;; Registers used:
 10491 ;;		wreg, status,2, status,0
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10497 ;;      Params:         8       0       0       0       0       0       0       0       0
 10498 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10499 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10500 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10501 ;;Total ram usage:       12 bytes
 10502 ;; Hardware stack levels used:    1
 10503 ;; Hardware stack levels required when called:    2
 10504 ;; This function calls:
 10505 ;;		Nothing
 10506 ;; This function is called by:
 10507 ;;		_forzarEspejeo
 10508 ;;		_probarCruceT
 10509 ;;		_efgtoa
 10510 ;;		_roundf
 10511 ;;		_hayCruce
 10512 ;;		_decidirDireccion
 10513 ;;		_probarPID
 10514 ;; This function uses a non-reentrant model
 10515 ;;
 10516                           
 10517                           	psect	text48
 10518  003726                     __ptext48:
 10519                           	opt callstack 0
 10520  003726                     ___flge:
 10521                           	opt callstack 23
 10522  003726  0E00               	movlw	0
 10523  003728  1434               	andwf	___flge@ff1^0,w,c
 10524  00372A  6E3C               	movwf	??___flge^0,c
 10525  00372C  0E00               	movlw	0
 10526  00372E  1435               	andwf	(___flge@ff1+1)^0,w,c
 10527  003730  6E3D               	movwf	(??___flge+1)^0,c
 10528  003732  0E80               	movlw	128
 10529  003734  1436               	andwf	(___flge@ff1+2)^0,w,c
 10530  003736  6E3E               	movwf	(??___flge+2)^0,c
 10531  003738  0E7F               	movlw	127
 10532  00373A  1437               	andwf	(___flge@ff1+3)^0,w,c
 10533  00373C  6E3F               	movwf	(??___flge+3)^0,c
 10534  00373E  503C               	movf	??___flge^0,w,c
 10535  003740  103D               	iorwf	(??___flge+1)^0,w,c
 10536  003742  103E               	iorwf	(??___flge+2)^0,w,c
 10537  003744  103F               	iorwf	(??___flge+3)^0,w,c
 10538  003746  A4D8               	btfss	status,2,c
 10539  003748  EFA8  F01B         	goto	u9661
 10540  00374C  EFAA  F01B         	goto	u9660
 10541  003750                     u9661:
 10542  003750  EFB2  F01B         	goto	l8521
 10543  003754                     u9660:
 10544  003754  0E00               	movlw	0
 10545  003756  6E34               	movwf	___flge@ff1^0,c
 10546  003758  0E00               	movlw	0
 10547  00375A  6E35               	movwf	(___flge@ff1+1)^0,c
 10548  00375C  0E00               	movlw	0
 10549  00375E  6E36               	movwf	(___flge@ff1+2)^0,c
 10550  003760  0E00               	movlw	0
 10551  003762  6E37               	movwf	(___flge@ff1+3)^0,c
 10552  003764                     l8521:
 10553  003764  0E00               	movlw	0
 10554  003766  1438               	andwf	___flge@ff2^0,w,c
 10555  003768  6E3C               	movwf	??___flge^0,c
 10556  00376A  0E00               	movlw	0
 10557  00376C  1439               	andwf	(___flge@ff2+1)^0,w,c
 10558  00376E  6E3D               	movwf	(??___flge+1)^0,c
 10559  003770  0E80               	movlw	128
 10560  003772  143A               	andwf	(___flge@ff2+2)^0,w,c
 10561  003774  6E3E               	movwf	(??___flge+2)^0,c
 10562  003776  0E7F               	movlw	127
 10563  003778  143B               	andwf	(___flge@ff2+3)^0,w,c
 10564  00377A  6E3F               	movwf	(??___flge+3)^0,c
 10565  00377C  503C               	movf	??___flge^0,w,c
 10566  00377E  103D               	iorwf	(??___flge+1)^0,w,c
 10567  003780  103E               	iorwf	(??___flge+2)^0,w,c
 10568  003782  103F               	iorwf	(??___flge+3)^0,w,c
 10569  003784  A4D8               	btfss	status,2,c
 10570  003786  EFC7  F01B         	goto	u9671
 10571  00378A  EFC9  F01B         	goto	u9670
 10572  00378E                     u9671:
 10573  00378E  EFD1  F01B         	goto	l8525
 10574  003792                     u9670:
 10575  003792  0E00               	movlw	0
 10576  003794  6E38               	movwf	___flge@ff2^0,c
 10577  003796  0E00               	movlw	0
 10578  003798  6E39               	movwf	(___flge@ff2+1)^0,c
 10579  00379A  0E00               	movlw	0
 10580  00379C  6E3A               	movwf	(___flge@ff2+2)^0,c
 10581  00379E  0E00               	movlw	0
 10582  0037A0  6E3B               	movwf	(___flge@ff2+3)^0,c
 10583  0037A2                     l8525:
 10584  0037A2  AE37               	btfss	(___flge@ff1+3)^0,7,c
 10585  0037A4  EFD6  F01B         	goto	u9681
 10586  0037A8  EFD8  F01B         	goto	u9680
 10587  0037AC                     u9681:
 10588  0037AC  EFE1  F01B         	goto	l8529
 10589  0037B0                     u9680:
 10590  0037B0  6C34               	negf	___flge@ff1^0,c
 10591  0037B2  1E35               	comf	(___flge@ff1+1)^0,f,c
 10592  0037B4  B0D8               	btfsc	status,0,c
 10593  0037B6  2A35               	incf	(___flge@ff1+1)^0,f,c
 10594  0037B8  1E36               	comf	(___flge@ff1+2)^0,f,c
 10595  0037BA  B0D8               	btfsc	status,0,c
 10596  0037BC  2A36               	incf	(___flge@ff1+2)^0,f,c
 10597  0037BE  0E80               	movlw	128
 10598  0037C0  5637               	subfwb	(___flge@ff1+3)^0,f,c
 10599  0037C2                     l8529:
 10600  0037C2  AE3B               	btfss	(___flge@ff2+3)^0,7,c
 10601  0037C4  EFE6  F01B         	goto	u9691
 10602  0037C8  EFE8  F01B         	goto	u9690
 10603  0037CC                     u9691:
 10604  0037CC  EFF1  F01B         	goto	l1194
 10605  0037D0                     u9690:
 10606  0037D0  6C38               	negf	___flge@ff2^0,c
 10607  0037D2  1E39               	comf	(___flge@ff2+1)^0,f,c
 10608  0037D4  B0D8               	btfsc	status,0,c
 10609  0037D6  2A39               	incf	(___flge@ff2+1)^0,f,c
 10610  0037D8  1E3A               	comf	(___flge@ff2+2)^0,f,c
 10611  0037DA  B0D8               	btfsc	status,0,c
 10612  0037DC  2A3A               	incf	(___flge@ff2+2)^0,f,c
 10613  0037DE  0E80               	movlw	128
 10614  0037E0  563B               	subfwb	(___flge@ff2+3)^0,f,c
 10615  0037E2                     l1194:
 10616  0037E2  0E00               	movlw	0
 10617  0037E4  1A34               	xorwf	___flge@ff1^0,f,c
 10618  0037E6  0E00               	movlw	0
 10619  0037E8  1A35               	xorwf	(___flge@ff1+1)^0,f,c
 10620  0037EA  0E00               	movlw	0
 10621  0037EC  1A36               	xorwf	(___flge@ff1+2)^0,f,c
 10622  0037EE  0E80               	movlw	128
 10623  0037F0  1A37               	xorwf	(___flge@ff1+3)^0,f,c
 10624  0037F2  0E00               	movlw	0
 10625  0037F4  1A38               	xorwf	___flge@ff2^0,f,c
 10626  0037F6  0E00               	movlw	0
 10627  0037F8  1A39               	xorwf	(___flge@ff2+1)^0,f,c
 10628  0037FA  0E00               	movlw	0
 10629  0037FC  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
 10630  0037FE  0E80               	movlw	128
 10631  003800  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
 10632  003802  5038               	movf	___flge@ff2^0,w,c
 10633  003804  5C34               	subwf	___flge@ff1^0,w,c
 10634  003806  5039               	movf	(___flge@ff2+1)^0,w,c
 10635  003808  5835               	subwfb	(___flge@ff1+1)^0,w,c
 10636  00380A  503A               	movf	(___flge@ff2+2)^0,w,c
 10637  00380C  5836               	subwfb	(___flge@ff1+2)^0,w,c
 10638  00380E  503B               	movf	(___flge@ff2+3)^0,w,c
 10639  003810  5837               	subwfb	(___flge@ff1+3)^0,w,c
 10640  003812  B0D8               	btfsc	status,0,c
 10641  003814  EF0E  F01C         	goto	u9701
 10642  003818  EF10  F01C         	goto	u9700
 10643  00381C                     u9701:
 10644  00381C  EF13  F01C         	goto	l8535
 10645  003820                     u9700:
 10646  003820  90D8               	bcf	status,0,c
 10647  003822  EF14  F01C         	goto	l1199
 10648  003826                     l8535:
 10649  003826  80D8               	bsf	status,0,c
 10650  003828                     l1199:
 10651  003828  0012               	return		;funcret
 10652  00382A                     __end_of___flge:
 10653                           	opt callstack 0
 10654                           
 10655 ;; *************** function _inicializarComportamientoBasico *****************
 10656 ;; Defined at:
 10657 ;;		line 253 in file "main.c"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;		None
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;		None
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  1    wreg      void 
 10664 ;; Registers used:
 10665 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10671 ;;      Params:         0       0       0       0       0       0       0       0       0
 10672 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10673 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10674 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10675 ;;Total ram usage:        0 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; Hardware stack levels required when called:    6
 10678 ;; This function calls:
 10679 ;;		_dameDistancia
 10680 ;;		_velocidadEstandar
 10681 ;; This function is called by:
 10682 ;;		_main
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           	psect	text49
 10687  0044EA                     __ptext49:
 10688                           	opt callstack 0
 10689  0044EA                     _inicializarComportamientoBasico:
 10690                           	opt callstack 24
 10691  0044EA                     
 10692                           ;main.c: 255:     mouse.curr_state = ENFRENTE;
 10693  0044EA  0E01               	movlw	1
 10694  0044EC  0100               	movlb	0	; () banked
 10695  0044EE  6FFD               	movwf	_mouse& (0+255),b
 10696  0044F0                     
 10697                           ; BSR set to: 0
 10698                           ;main.c: 257:     oldSensorDerecha = dameDistancia(DERECHA);
 10699  0044F0  0E03               	movlw	3
 10700  0044F2  ECD8  F019         	call	_dameDistancia
 10701  0044F6  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
 10702  0044FA  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
 10703  0044FE  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
 10704  004502  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
 10705  004506                     
 10706                           ;main.c: 258:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
 10707  004506  0E02               	movlw	2
 10708  004508  ECD8  F019         	call	_dameDistancia
 10709  00450C  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
 10710  004510  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
 10711  004514  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
 10712  004518  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
 10713  00451C                     
 10714                           ;main.c: 259:     oldSensorEnfrente = dameDistancia(ENFRENTE);
 10715  00451C  0E01               	movlw	1
 10716  00451E  ECD8  F019         	call	_dameDistancia
 10717  004522  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
 10718  004526  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
 10719  00452A  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
 10720  00452E  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
 10721  004532                     
 10722                           ;main.c: 261:     velocidadEstandar();
 10723  004532  ECB6  F023         	call	_velocidadEstandar	;wreg free
 10724  004536  0012               	return		;funcret
 10725  004538                     __end_of_inicializarComportamientoBasico:
 10726                           	opt callstack 0
 10727                           
 10728 ;; *************** function _velocidadEstandar *****************
 10729 ;; Defined at:
 10730 ;;		line 1261 in file "main.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;		None
 10733 ;; Auto vars:     Size  Location     Type
 10734 ;;		None
 10735 ;; Return value:  Size  Location     Type
 10736 ;;                  1    wreg      void 
 10737 ;; Registers used:
 10738 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10739 ;; Tracked objects:
 10740 ;;		On entry : 0/0
 10741 ;;		On exit  : 0/0
 10742 ;;		Unchanged: 0/0
 10743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10744 ;;      Params:         0       0       0       0       0       0       0       0       0
 10745 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10746 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10747 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10748 ;;Total ram usage:        0 bytes
 10749 ;; Hardware stack levels used:    1
 10750 ;; Hardware stack levels required when called:    5
 10751 ;; This function calls:
 10752 ;;		_pwmDuty
 10753 ;; This function is called by:
 10754 ;;		_inicializarComportamientoBasico
 10755 ;;		_forzarEspejeoIzquierda
 10756 ;;		_forzarEspejeoDerecha
 10757 ;;		_probarCruceT
 10758 ;;		_comportamientoBasico
 10759 ;;		_regresarPuntoPartida
 10760 ;;		_regresarAlCruce
 10761 ;;		_recorrerCaminoEncontrado
 10762 ;; This function uses a non-reentrant model
 10763 ;;
 10764                           
 10765                           	psect	text50
 10766  00476C                     __ptext50:
 10767                           	opt callstack 0
 10768  00476C                     _velocidadEstandar:
 10769                           	opt callstack 24
 10770  00476C                     
 10771                           ;main.c: 1263:     pwmDuty(100, 1);
 10772  00476C  0E00               	movlw	0
 10773  00476E  0100               	movlb	0	; () banked
 10774  004770  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
 10775  004772  0E64               	movlw	100
 10776  004774  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
 10777  004776  0E01               	movlw	1
 10778  004778  6F7E               	movwf	pwmDuty@channel& (0+255),b
 10779  00477A  EC48  F014         	call	_pwmDuty	;wreg free
 10780                           
 10781                           ;main.c: 1264:     pwmDuty(100, 2);
 10782  00477E  0E00               	movlw	0
 10783  004780  0100               	movlb	0	; () banked
 10784  004782  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
 10785  004784  0E64               	movlw	100
 10786  004786  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
 10787  004788  0E02               	movlw	2
 10788  00478A  6F7E               	movwf	pwmDuty@channel& (0+255),b
 10789  00478C  EC48  F014         	call	_pwmDuty	;wreg free
 10790  004790  0012               	return		;funcret
 10791  004792                     __end_of_velocidadEstandar:
 10792                           	opt callstack 0
 10793                           
 10794 ;; *************** function _pwmDuty *****************
 10795 ;; Defined at:
 10796 ;;		line 20 in file "./pwm.h"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  cicloTrabajo    2   28[BANK0 ] unsigned int 
 10799 ;;  channel         1   30[BANK0 ] unsigned char 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  duty            4   36[BANK0 ] long 
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  1    wreg      void 
 10804 ;; Registers used:
 10805 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10811 ;;      Params:         0       3       0       0       0       0       0       0       0
 10812 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10813 ;;      Temps:          0       5       0       0       0       0       0       0       0
 10814 ;;      Totals:         0      12       0       0       0       0       0       0       0
 10815 ;;Total ram usage:       12 bytes
 10816 ;; Hardware stack levels used:    1
 10817 ;; Hardware stack levels required when called:    4
 10818 ;; This function calls:
 10819 ;;		___fldiv
 10820 ;;		___flmul
 10821 ;;		___fltol
 10822 ;;		___xxtofl
 10823 ;;		_map
 10824 ;; This function is called by:
 10825 ;;		_PID
 10826 ;;		_velocidadEstandar
 10827 ;;		_velocidadBaja
 10828 ;; This function uses a non-reentrant model
 10829 ;;
 10830                           
 10831                           	psect	text51
 10832  002890                     __ptext51:
 10833                           	opt callstack 0
 10834  002890                     _pwmDuty:
 10835                           	opt callstack 24
 10836  002890                     
 10837                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
 10838  002890  C07C  F020         	movff	pwmDuty@cicloTrabajo,map@x
 10839  002894  C07D  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
 10840  002898  6A22               	clrf	(map@x+2)^0,c
 10841  00289A  6A23               	clrf	(map@x+3)^0,c
 10842  00289C  0E00               	movlw	0
 10843  00289E  6E24               	movwf	map@in_min^0,c
 10844  0028A0  0E00               	movlw	0
 10845  0028A2  6E25               	movwf	(map@in_min+1)^0,c
 10846  0028A4  0E00               	movlw	0
 10847  0028A6  6E26               	movwf	(map@in_min+2)^0,c
 10848  0028A8  0E00               	movlw	0
 10849  0028AA  6E27               	movwf	(map@in_min+3)^0,c
 10850  0028AC  0E64               	movlw	100
 10851  0028AE  6E28               	movwf	map@in_max^0,c
 10852  0028B0  0E00               	movlw	0
 10853  0028B2  6E29               	movwf	(map@in_max+1)^0,c
 10854  0028B4  0E00               	movlw	0
 10855  0028B6  6E2A               	movwf	(map@in_max+2)^0,c
 10856  0028B8  0E00               	movlw	0
 10857  0028BA  6E2B               	movwf	(map@in_max+3)^0,c
 10858  0028BC  0E00               	movlw	0
 10859  0028BE  6E2C               	movwf	map@out_min^0,c
 10860  0028C0  0E00               	movlw	0
 10861  0028C2  6E2D               	movwf	(map@out_min+1)^0,c
 10862  0028C4  0E00               	movlw	0
 10863  0028C6  6E2E               	movwf	(map@out_min+2)^0,c
 10864  0028C8  0E00               	movlw	0
 10865  0028CA  6E2F               	movwf	(map@out_min+3)^0,c
 10866  0028CC  0EFF               	movlw	255
 10867  0028CE  6E30               	movwf	map@out_max^0,c
 10868  0028D0  0E03               	movlw	3
 10869  0028D2  6E31               	movwf	(map@out_max+1)^0,c
 10870  0028D4  0E00               	movlw	0
 10871  0028D6  6E32               	movwf	(map@out_max+2)^0,c
 10872  0028D8  0E00               	movlw	0
 10873  0028DA  6E33               	movwf	(map@out_max+3)^0,c
 10874  0028DC  ECC6  F01F         	call	_map	;wreg free
 10875  0028E0  C020  F084         	movff	?_map,pwmDuty@duty
 10876  0028E4  C021  F085         	movff	?_map+1,pwmDuty@duty+1
 10877  0028E8  C022  F086         	movff	?_map+2,pwmDuty@duty+2
 10878  0028EC  C023  F087         	movff	?_map+3,pwmDuty@duty+3
 10879  0028F0                     
 10880                           ;./pwm.h: 24:     if (duty < 1024) {
 10881  0028F0  0100               	movlb	0	; () banked
 10882  0028F2  BF87               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
 10883  0028F4  EF88  F014         	goto	u9060
 10884  0028F8  5187               	movf	(pwmDuty@duty+3)& (0+255),w,b
 10885  0028FA  1186               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
 10886  0028FC  E107               	bnz	u9061
 10887  0028FE  0E04               	movlw	4
 10888  002900  5D85               	subwf	(pwmDuty@duty+1)& (0+255),w,b
 10889  002902  B0D8               	btfsc	status,0,c
 10890  002904  EF86  F014         	goto	u9061
 10891  002908  EF88  F014         	goto	u9060
 10892  00290C                     u9061:
 10893  00290C  EF25  F015         	goto	l157
 10894  002910                     u9060:
 10895  002910                     
 10896                           ; BSR set to: 0
 10897                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
 10898  002910  0E00               	movlw	0
 10899  002912  6E1F               	movwf	___flmul@a^0,c
 10900  002914  0E00               	movlw	0
 10901  002916  6E20               	movwf	(___flmul@a+1)^0,c
 10902  002918  0EFA               	movlw	250
 10903  00291A  6E21               	movwf	(___flmul@a+2)^0,c
 10904  00291C  0E43               	movlw	67
 10905  00291E  6E22               	movwf	(___flmul@a+3)^0,c
 10906  002920  0E00               	movlw	0
 10907  002922  6E48               	movwf	___fldiv@a^0,c
 10908  002924  0EC0               	movlw	192
 10909  002926  6E49               	movwf	(___fldiv@a+1)^0,c
 10910  002928  0E7F               	movlw	127
 10911  00292A  6E4A               	movwf	(___fldiv@a+2)^0,c
 10912  00292C  0E44               	movlw	68
 10913  00292E  6E4B               	movwf	(___fldiv@a+3)^0,c
 10914  002930  C084  F00D         	movff	pwmDuty@duty,___xxtofl@val
 10915  002934  C085  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
 10916  002938  C086  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
 10917  00293C  C087  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
 10918  002940  0E01               	movlw	1
 10919  002942  EC02  F016         	call	___xxtofl
 10920  002946  C00D  F044         	movff	?___xxtofl,___fldiv@b
 10921  00294A  C00E  F045         	movff	?___xxtofl+1,___fldiv@b+1
 10922  00294E  C00F  F046         	movff	?___xxtofl+2,___fldiv@b+2
 10923  002952  C010  F047         	movff	?___xxtofl+3,___fldiv@b+3
 10924  002956  ECD5  F00E         	call	___fldiv	;wreg free
 10925  00295A  C044  F01B         	movff	?___fldiv,___flmul@b
 10926  00295E  C045  F01C         	movff	?___fldiv+1,___flmul@b+1
 10927  002962  C046  F01D         	movff	?___fldiv+2,___flmul@b+2
 10928  002966  C047  F01E         	movff	?___fldiv+3,___flmul@b+3
 10929  00296A  ECE7  F00A         	call	___flmul	;wreg free
 10930  00296E  C01B  F072         	movff	?___flmul,___fltol@f1
 10931  002972  C01C  F073         	movff	?___flmul+1,___fltol@f1+1
 10932  002976  C01D  F074         	movff	?___flmul+2,___fltol@f1+2
 10933  00297A  C01E  F075         	movff	?___flmul+3,___fltol@f1+3
 10934  00297E  EC0F  F01B         	call	___fltol	;wreg free
 10935  002982  C072  F084         	movff	?___fltol,pwmDuty@duty
 10936  002986  C073  F085         	movff	?___fltol+1,pwmDuty@duty+1
 10937  00298A  C074  F086         	movff	?___fltol+2,pwmDuty@duty+2
 10938  00298E  C075  F087         	movff	?___fltol+3,pwmDuty@duty+3
 10939                           
 10940                           ;./pwm.h: 28:         switch (channel) {
 10941  002992  EF0F  F015         	goto	l8229
 10942  002996                     l8223:
 10943                           
 10944                           ; BSR set to: 0
 10945                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
 10946  002996  0E02               	movlw	2
 10947  002998  6F7F               	movwf	??_pwmDuty& (0+255),b
 10948  00299A  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
 10949  00299E  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
 10950  0029A2  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
 10951  0029A6  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
 10952  0029AA                     u9075:
 10953  0029AA  677F               	tstfsz	??_pwmDuty& (0+255),b
 10954  0029AC  EFDA  F014         	goto	u9076
 10955  0029B0  EFE2  F014         	goto	u9077
 10956  0029B4                     u9076:
 10957  0029B4  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
 10958  0029B6  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
 10959  0029B8  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
 10960  0029BA  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
 10961  0029BC  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
 10962  0029BE  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
 10963  0029C0  EFD5  F014         	goto	u9075
 10964  0029C4                     u9077:
 10965  0029C4  0100               	movlb	0	; () banked
 10966  0029C6  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 10967  0029C8  6EBE               	movwf	190,c	;volatile
 10968                           
 10969                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
 10970  0029CA  0ECF               	movlw	207
 10971  0029CC  16BD               	andwf	189,f,c	;volatile
 10972                           
 10973                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
 10974  0029CE  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
 10975  0029D0  0BF0               	andlw	240
 10976  0029D2  0B30               	andlw	48
 10977  0029D4  12BD               	iorwf	189,f,c	;volatile
 10978                           
 10979                           ;./pwm.h: 34:                 break;
 10980  0029D6  EF25  F015         	goto	l157
 10981  0029DA                     l8225:
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
 10985  0029DA  0E02               	movlw	2
 10986  0029DC  6F7F               	movwf	??_pwmDuty& (0+255),b
 10987  0029DE  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
 10988  0029E2  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
 10989  0029E6  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
 10990  0029EA  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
 10991  0029EE                     u9085:
 10992  0029EE  677F               	tstfsz	??_pwmDuty& (0+255),b
 10993  0029F0  EFFC  F014         	goto	u9086
 10994  0029F4  EF04  F015         	goto	u9087
 10995  0029F8                     u9086:
 10996  0029F8  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
 10997  0029FA  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
 10998  0029FC  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
 10999  0029FE  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
 11000  002A00  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
 11001  002A02  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
 11002  002A04  EFF7  F014         	goto	u9085
 11003  002A08                     u9087:
 11004  002A08  0100               	movlb	0	; () banked
 11005  002A0A  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 11006  002A0C  6EBB               	movwf	187,c	;volatile
 11007                           
 11008                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
 11009  002A0E  0ECF               	movlw	207
 11010  002A10  16BA               	andwf	186,f,c	;volatile
 11011                           
 11012                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
 11013  002A12  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
 11014  002A14  0BF0               	andlw	240
 11015  002A16  0B30               	andlw	48
 11016  002A18  12BA               	iorwf	186,f,c	;volatile
 11017                           
 11018                           ;./pwm.h: 40:                 break;
 11019  002A1A  EF25  F015         	goto	l157
 11020  002A1E                     l8229:
 11021  002A1E  0100               	movlb	0	; () banked
 11022  002A20  517E               	movf	pwmDuty@channel& (0+255),w,b
 11023  002A22  6F7F               	movwf	??_pwmDuty& (0+255),b
 11024  002A24  6B80               	clrf	(??_pwmDuty+1)& (0+255),b
 11025                           
 11026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11027                           ; Switch size 1, requested type "simple"
 11028                           ; Number of cases is 1, Range of values is 0 to 0
 11029                           ; switch strategies available:
 11030                           ; Name         Instructions Cycles
 11031                           ; simple_byte            4     3 (average)
 11032                           ;	Chosen strategy is simple_byte
 11033  002A26  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 11034  002A28  0A00               	xorlw	0	; case 0
 11035  002A2A  B4D8               	btfsc	status,2,c
 11036  002A2C  EF1A  F015         	goto	l10409
 11037  002A30  EF25  F015         	goto	l157
 11038  002A34                     l10409:
 11039                           
 11040                           ; BSR set to: 0
 11041                           ; Switch size 1, requested type "simple"
 11042                           ; Number of cases is 2, Range of values is 1 to 2
 11043                           ; switch strategies available:
 11044                           ; Name         Instructions Cycles
 11045                           ; simple_byte            7     4 (average)
 11046                           ;	Chosen strategy is simple_byte
 11047  002A34  517F               	movf	??_pwmDuty& (0+255),w,b
 11048  002A36  0A01               	xorlw	1	; case 1
 11049  002A38  B4D8               	btfsc	status,2,c
 11050  002A3A  EFCB  F014         	goto	l8223
 11051  002A3E  0A03               	xorlw	3	; case 2
 11052  002A40  B4D8               	btfsc	status,2,c
 11053  002A42  EFED  F014         	goto	l8225
 11054  002A46  EF25  F015         	goto	l157
 11055  002A4A                     l157:
 11056                           
 11057                           ; BSR set to: 0
 11058  002A4A  0012               	return		;funcret
 11059  002A4C                     __end_of_pwmDuty:
 11060                           	opt callstack 0
 11061                           
 11062 ;; *************** function _map *****************
 11063 ;; Defined at:
 11064 ;;		line 16 in file "./pwm.h"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;  x               4   31[COMRAM] long 
 11067 ;;  in_min          4   35[COMRAM] long 
 11068 ;;  in_max          4   39[COMRAM] long 
 11069 ;;  out_min         4   43[COMRAM] long 
 11070 ;;  out_max         4   47[COMRAM] long 
 11071 ;; Auto vars:     Size  Location     Type
 11072 ;;		None
 11073 ;; Return value:  Size  Location     Type
 11074 ;;                  4   31[COMRAM] long 
 11075 ;; Registers used:
 11076 ;;		wreg, status,2, status,0, cstack
 11077 ;; Tracked objects:
 11078 ;;		On entry : 0/0
 11079 ;;		On exit  : 0/0
 11080 ;;		Unchanged: 0/0
 11081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11082 ;;      Params:        20       0       0       0       0       0       0       0       0
 11083 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11084 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11085 ;;      Totals:        20       0       0       0       0       0       0       0       0
 11086 ;;Total ram usage:       20 bytes
 11087 ;; Hardware stack levels used:    1
 11088 ;; Hardware stack levels required when called:    3
 11089 ;; This function calls:
 11090 ;;		___aldiv
 11091 ;;		___lmul
 11092 ;; This function is called by:
 11093 ;;		_pwmDuty
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           	psect	text52
 11098  003F8C                     __ptext52:
 11099                           	opt callstack 0
 11100  003F8C                     _map:
 11101                           	opt callstack 24
 11102  003F8C                     
 11103                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
 11104  003F8C  5024               	movf	map@in_min^0,w,c
 11105  003F8E  5C20               	subwf	map@x^0,w,c
 11106  003F90  6E06               	movwf	___lmul@multiplier^0,c
 11107  003F92  5025               	movf	(map@in_min+1)^0,w,c
 11108  003F94  5821               	subwfb	(map@x+1)^0,w,c
 11109  003F96  6E07               	movwf	(___lmul@multiplier+1)^0,c
 11110  003F98  5026               	movf	(map@in_min+2)^0,w,c
 11111  003F9A  5822               	subwfb	(map@x+2)^0,w,c
 11112  003F9C  6E08               	movwf	(___lmul@multiplier+2)^0,c
 11113  003F9E  5027               	movf	(map@in_min+3)^0,w,c
 11114  003FA0  5823               	subwfb	(map@x+3)^0,w,c
 11115  003FA2  6E09               	movwf	(___lmul@multiplier+3)^0,c
 11116  003FA4  502C               	movf	map@out_min^0,w,c
 11117  003FA6  5C30               	subwf	map@out_max^0,w,c
 11118  003FA8  6E0A               	movwf	___lmul@multiplicand^0,c
 11119  003FAA  502D               	movf	(map@out_min+1)^0,w,c
 11120  003FAC  5831               	subwfb	(map@out_max+1)^0,w,c
 11121  003FAE  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
 11122  003FB0  502E               	movf	(map@out_min+2)^0,w,c
 11123  003FB2  5832               	subwfb	(map@out_max+2)^0,w,c
 11124  003FB4  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
 11125  003FB6  502F               	movf	(map@out_min+3)^0,w,c
 11126  003FB8  5833               	subwfb	(map@out_max+3)^0,w,c
 11127  003FBA  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
 11128  003FBC  ECE3  F020         	call	___lmul	;wreg free
 11129  003FC0  C006  F012         	movff	?___lmul,___aldiv@dividend
 11130  003FC4  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
 11131  003FC8  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
 11132  003FCC  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
 11133  003FD0  5024               	movf	map@in_min^0,w,c
 11134  003FD2  5C28               	subwf	map@in_max^0,w,c
 11135  003FD4  6E16               	movwf	___aldiv@divisor^0,c
 11136  003FD6  5025               	movf	(map@in_min+1)^0,w,c
 11137  003FD8  5829               	subwfb	(map@in_max+1)^0,w,c
 11138  003FDA  6E17               	movwf	(___aldiv@divisor+1)^0,c
 11139  003FDC  5026               	movf	(map@in_min+2)^0,w,c
 11140  003FDE  582A               	subwfb	(map@in_max+2)^0,w,c
 11141  003FE0  6E18               	movwf	(___aldiv@divisor+2)^0,c
 11142  003FE2  5027               	movf	(map@in_min+3)^0,w,c
 11143  003FE4  582B               	subwfb	(map@in_max+3)^0,w,c
 11144  003FE6  6E19               	movwf	(___aldiv@divisor+3)^0,c
 11145  003FE8  EC89  F01A         	call	___aldiv	;wreg free
 11146  003FEC  502C               	movf	map@out_min^0,w,c
 11147  003FEE  2412               	addwf	?___aldiv^0,w,c
 11148  003FF0  6E20               	movwf	?_map^0,c
 11149  003FF2  502D               	movf	(map@out_min+1)^0,w,c
 11150  003FF4  2013               	addwfc	(?___aldiv+1)^0,w,c
 11151  003FF6  6E21               	movwf	(?_map+1)^0,c
 11152  003FF8  502E               	movf	(map@out_min+2)^0,w,c
 11153  003FFA  2014               	addwfc	(?___aldiv+2)^0,w,c
 11154  003FFC  6E22               	movwf	(?_map+2)^0,c
 11155  003FFE  502F               	movf	(map@out_min+3)^0,w,c
 11156  004000  2015               	addwfc	(?___aldiv+3)^0,w,c
 11157  004002  6E23               	movwf	(?_map+3)^0,c
 11158  004004  0012               	return		;funcret
 11159  004006                     __end_of_map:
 11160                           	opt callstack 0
 11161                           
 11162 ;; *************** function ___lmul *****************
 11163 ;; Defined at:
 11164 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 11165 ;; Parameters:    Size  Location     Type
 11166 ;;  multiplier      4    5[COMRAM] unsigned long 
 11167 ;;  multiplicand    4    9[COMRAM] unsigned long 
 11168 ;; Auto vars:     Size  Location     Type
 11169 ;;  product         4   13[COMRAM] unsigned long 
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  4    5[COMRAM] unsigned long 
 11172 ;; Registers used:
 11173 ;;		wreg, status,2, status,0
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/0
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11179 ;;      Params:         8       0       0       0       0       0       0       0       0
 11180 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11181 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11182 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11183 ;;Total ram usage:       12 bytes
 11184 ;; Hardware stack levels used:    1
 11185 ;; Hardware stack levels required when called:    2
 11186 ;; This function calls:
 11187 ;;		Nothing
 11188 ;; This function is called by:
 11189 ;;		_map
 11190 ;; This function uses a non-reentrant model
 11191 ;;
 11192                           
 11193                           	psect	text53
 11194  0041C6                     __ptext53:
 11195                           	opt callstack 0
 11196  0041C6                     ___lmul:
 11197                           	opt callstack 24
 11198  0041C6  0E00               	movlw	0
 11199  0041C8  6E0E               	movwf	___lmul@product^0,c
 11200  0041CA  0E00               	movlw	0
 11201  0041CC  6E0F               	movwf	(___lmul@product+1)^0,c
 11202  0041CE  0E00               	movlw	0
 11203  0041D0  6E10               	movwf	(___lmul@product+2)^0,c
 11204  0041D2  0E00               	movlw	0
 11205  0041D4  6E11               	movwf	(___lmul@product+3)^0,c
 11206  0041D6                     l7579:
 11207  0041D6  A006               	btfss	___lmul@multiplier^0,0,c
 11208  0041D8  EFF0  F020         	goto	u7961
 11209  0041DC  EFF2  F020         	goto	u7960
 11210  0041E0                     u7961:
 11211  0041E0  EFFA  F020         	goto	l7583
 11212  0041E4                     u7960:
 11213  0041E4  500A               	movf	___lmul@multiplicand^0,w,c
 11214  0041E6  260E               	addwf	___lmul@product^0,f,c
 11215  0041E8  500B               	movf	(___lmul@multiplicand+1)^0,w,c
 11216  0041EA  220F               	addwfc	(___lmul@product+1)^0,f,c
 11217  0041EC  500C               	movf	(___lmul@multiplicand+2)^0,w,c
 11218  0041EE  2210               	addwfc	(___lmul@product+2)^0,f,c
 11219  0041F0  500D               	movf	(___lmul@multiplicand+3)^0,w,c
 11220  0041F2  2211               	addwfc	(___lmul@product+3)^0,f,c
 11221  0041F4                     l7583:
 11222  0041F4  90D8               	bcf	status,0,c
 11223  0041F6  360A               	rlcf	___lmul@multiplicand^0,f,c
 11224  0041F8  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
 11225  0041FA  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
 11226  0041FC  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
 11227  0041FE  90D8               	bcf	status,0,c
 11228  004200  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
 11229  004202  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
 11230  004204  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
 11231  004206  3206               	rrcf	___lmul@multiplier^0,f,c
 11232  004208  5006               	movf	___lmul@multiplier^0,w,c
 11233  00420A  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
 11234  00420C  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
 11235  00420E  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
 11236  004210  A4D8               	btfss	status,2,c
 11237  004212  EF0D  F021         	goto	u7971
 11238  004216  EF0F  F021         	goto	u7970
 11239  00421A                     u7971:
 11240  00421A  EFEB  F020         	goto	l7579
 11241  00421E                     u7970:
 11242  00421E  C00E  F006         	movff	___lmul@product,?___lmul
 11243  004222  C00F  F007         	movff	___lmul@product+1,?___lmul+1
 11244  004226  C010  F008         	movff	___lmul@product+2,?___lmul+2
 11245  00422A  C011  F009         	movff	___lmul@product+3,?___lmul+3
 11246  00422E  0012               	return		;funcret
 11247  004230                     __end_of___lmul:
 11248                           	opt callstack 0
 11249                           
 11250 ;; *************** function ___fltol *****************
 11251 ;; Defined at:
 11252 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;  f1              4   18[BANK0 ] unsigned long 
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;  exp1            1   27[BANK0 ] unsigned char 
 11257 ;;  sign1           1   26[BANK0 ] unsigned char 
 11258 ;; Return value:  Size  Location     Type
 11259 ;;                  4   18[BANK0 ] long 
 11260 ;; Registers used:
 11261 ;;		wreg, status,2, status,0
 11262 ;; Tracked objects:
 11263 ;;		On entry : 0/0
 11264 ;;		On exit  : 0/0
 11265 ;;		Unchanged: 0/0
 11266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11267 ;;      Params:         0       4       0       0       0       0       0       0       0
 11268 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11269 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11270 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11271 ;;Total ram usage:       10 bytes
 11272 ;; Hardware stack levels used:    1
 11273 ;; Hardware stack levels required when called:    2
 11274 ;; This function calls:
 11275 ;;		Nothing
 11276 ;; This function is called by:
 11277 ;;		_pwmDuty
 11278 ;;		_PID
 11279 ;;		_efgtoa
 11280 ;; This function uses a non-reentrant model
 11281 ;;
 11282                           
 11283                           	psect	text54
 11284  00361E                     __ptext54:
 11285                           	opt callstack 0
 11286  00361E                     ___fltol:
 11287                           	opt callstack 23
 11288  00361E  0100               	movlb	0	; () banked
 11289  003620  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11290  003622  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11291  003624  6F7B               	movwf	___fltol@exp1& (0+255),b
 11292  003626  517B               	movf	___fltol@exp1& (0+255),w,b
 11293  003628  A4D8               	btfss	status,2,c
 11294  00362A  EF19  F01B         	goto	u8891
 11295  00362E  EF1B  F01B         	goto	u8890
 11296  003632                     u8891:
 11297  003632  EF25  F01B         	goto	l8133
 11298  003636                     u8890:
 11299  003636                     l8129:
 11300                           
 11301                           ; BSR set to: 0
 11302  003636  0E00               	movlw	0
 11303  003638  6F72               	movwf	?___fltol& (0+255),b
 11304  00363A  0E00               	movlw	0
 11305  00363C  6F73               	movwf	(?___fltol+1)& (0+255),b
 11306  00363E  0E00               	movlw	0
 11307  003640  6F74               	movwf	(?___fltol+2)& (0+255),b
 11308  003642  0E00               	movlw	0
 11309  003644  6F75               	movwf	(?___fltol+3)& (0+255),b
 11310  003646  EF92  F01B         	goto	l1226
 11311  00364A                     l8133:
 11312                           
 11313                           ; BSR set to: 0
 11314  00364A  C072  F076         	movff	___fltol@f1,??___fltol
 11315  00364E  C073  F077         	movff	___fltol@f1+1,??___fltol+1
 11316  003652  C074  F078         	movff	___fltol@f1+2,??___fltol+2
 11317  003656  C075  F079         	movff	___fltol@f1+3,??___fltol+3
 11318  00365A  0E20               	movlw	32
 11319  00365C  EF35  F01B         	goto	u8900
 11320  003660                     u8905:
 11321  003660  90D8               	bcf	status,0,c
 11322  003662  3379               	rrcf	(??___fltol+3)& (0+255),f,b
 11323  003664  3378               	rrcf	(??___fltol+2)& (0+255),f,b
 11324  003666  3377               	rrcf	(??___fltol+1)& (0+255),f,b
 11325  003668  3376               	rrcf	??___fltol& (0+255),f,b
 11326  00366A                     u8900:
 11327  00366A  2EE8               	decfsz	wreg,f,c
 11328  00366C  EF30  F01B         	goto	u8905
 11329  003670  5176               	movf	??___fltol& (0+255),w,b
 11330  003672  6F7A               	movwf	___fltol@sign1& (0+255),b
 11331  003674                     
 11332                           ; BSR set to: 0
 11333  003674  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
 11334  003676                     
 11335                           ; BSR set to: 0
 11336  003676  0EFF               	movlw	255
 11337  003678  1772               	andwf	___fltol@f1& (0+255),f,b
 11338  00367A  0EFF               	movlw	255
 11339  00367C  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
 11340  00367E  0EFF               	movlw	255
 11341  003680  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
 11342  003682  0E00               	movlw	0
 11343  003684  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
 11344  003686                     
 11345                           ; BSR set to: 0
 11346  003686  0E96               	movlw	150
 11347  003688  5F7B               	subwf	___fltol@exp1& (0+255),f,b
 11348  00368A                     
 11349                           ; BSR set to: 0
 11350  00368A  BF7B               	btfsc	___fltol@exp1& (0+255),7,b
 11351  00368C  EF4C  F01B         	goto	u8910
 11352  003690  EF4A  F01B         	goto	u8911
 11353  003694                     u8911:
 11354  003694  EF62  F01B         	goto	l8153
 11355  003698                     u8910:
 11356  003698                     
 11357                           ; BSR set to: 0
 11358  003698  517B               	movf	___fltol@exp1& (0+255),w,b
 11359  00369A  0A80               	xorlw	128
 11360  00369C  0F97               	addlw	151
 11361  00369E  B0D8               	btfsc	status,0,c
 11362  0036A0  EF54  F01B         	goto	u8921
 11363  0036A4  EF56  F01B         	goto	u8920
 11364  0036A8                     u8921:
 11365  0036A8  EF58  F01B         	goto	l8149
 11366  0036AC                     u8920:
 11367  0036AC  EF1B  F01B         	goto	l8129
 11368  0036B0                     l8149:
 11369                           
 11370                           ; BSR set to: 0
 11371  0036B0  90D8               	bcf	status,0,c
 11372  0036B2  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11373  0036B4  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11374  0036B6  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11375  0036B8  3372               	rrcf	___fltol@f1& (0+255),f,b
 11376  0036BA                     
 11377                           ; BSR set to: 0
 11378  0036BA  3F7B               	incfsz	___fltol@exp1& (0+255),f,b
 11379  0036BC  EF58  F01B         	goto	l8149
 11380  0036C0  EF7A  F01B         	goto	l8163
 11381  0036C4                     l8153:
 11382                           
 11383                           ; BSR set to: 0
 11384  0036C4  0E1F               	movlw	31
 11385  0036C6  657B               	cpfsgt	___fltol@exp1& (0+255),b
 11386  0036C8  EF68  F01B         	goto	u8931
 11387  0036CC  EF6A  F01B         	goto	u8930
 11388  0036D0                     u8931:
 11389  0036D0  EF72  F01B         	goto	l8161
 11390  0036D4                     u8930:
 11391  0036D4  EF1B  F01B         	goto	l8129
 11392  0036D8                     l8159:
 11393                           
 11394                           ; BSR set to: 0
 11395  0036D8  90D8               	bcf	status,0,c
 11396  0036DA  3772               	rlcf	___fltol@f1& (0+255),f,b
 11397  0036DC  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11398  0036DE  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11399  0036E0  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11400  0036E2  077B               	decf	___fltol@exp1& (0+255),f,b
 11401  0036E4                     l8161:
 11402                           
 11403                           ; BSR set to: 0
 11404  0036E4  517B               	movf	___fltol@exp1& (0+255),w,b
 11405  0036E6  A4D8               	btfss	status,2,c
 11406  0036E8  EF78  F01B         	goto	u8941
 11407  0036EC  EF7A  F01B         	goto	u8940
 11408  0036F0                     u8941:
 11409  0036F0  EF6C  F01B         	goto	l8159
 11410  0036F4                     u8940:
 11411  0036F4                     l8163:
 11412                           
 11413                           ; BSR set to: 0
 11414  0036F4  517A               	movf	___fltol@sign1& (0+255),w,b
 11415  0036F6  B4D8               	btfsc	status,2,c
 11416  0036F8  EF80  F01B         	goto	u8951
 11417  0036FC  EF82  F01B         	goto	u8950
 11418  003700                     u8951:
 11419  003700  EF8A  F01B         	goto	l8167
 11420  003704                     u8950:
 11421  003704                     
 11422                           ; BSR set to: 0
 11423  003704  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
 11424  003706  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
 11425  003708  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
 11426  00370A  6D72               	negf	___fltol@f1& (0+255),b
 11427  00370C  0E00               	movlw	0
 11428  00370E  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11429  003710  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11430  003712  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11431  003714                     l8167:
 11432                           
 11433                           ; BSR set to: 0
 11434  003714  C072  F072         	movff	___fltol@f1,?___fltol
 11435  003718  C073  F073         	movff	___fltol@f1+1,?___fltol+1
 11436  00371C  C074  F074         	movff	___fltol@f1+2,?___fltol+2
 11437  003720  C075  F075         	movff	___fltol@f1+3,?___fltol+3
 11438  003724                     l1226:
 11439                           
 11440                           ; BSR set to: 0
 11441  003724  0012               	return		;funcret
 11442  003726                     __end_of___fltol:
 11443                           	opt callstack 0
 11444                           
 11445 ;; *************** function ___flmul *****************
 11446 ;; Defined at:
 11447 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;  b               4   26[COMRAM] long 
 11450 ;;  a               4   30[COMRAM] long 
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;  prod            4   45[COMRAM] struct .
 11453 ;;  grs             4   40[COMRAM] unsigned long 
 11454 ;;  temp            2   49[COMRAM] struct .
 11455 ;;  bexp            1   44[COMRAM] unsigned char 
 11456 ;;  aexp            1   39[COMRAM] unsigned char 
 11457 ;;  sign            1   38[COMRAM] unsigned char 
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  4   26[COMRAM] unsigned char 
 11460 ;; Registers used:
 11461 ;;		wreg, status,2, status,0, prodl, prodh
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11467 ;;      Params:         8       0       0       0       0       0       0       0       0
 11468 ;;      Locals:        13       0       0       0       0       0       0       0       0
 11469 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11470 ;;      Totals:        25       0       0       0       0       0       0       0       0
 11471 ;;Total ram usage:       25 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:    2
 11474 ;; This function calls:
 11475 ;;		Nothing
 11476 ;; This function is called by:
 11477 ;;		_pwmDuty
 11478 ;;		_PID
 11479 ;;		_efgtoa
 11480 ;;		_roundf
 11481 ;; This function uses a non-reentrant model
 11482 ;;
 11483                           
 11484                           	psect	text55
 11485  0015CE                     __ptext55:
 11486                           	opt callstack 0
 11487  0015CE                     ___flmul:
 11488                           	opt callstack 23
 11489  0015CE  501E               	movf	(___flmul@b+3)^0,w,c
 11490  0015D0  0B80               	andlw	128
 11491  0015D2  6E27               	movwf	___flmul@sign^0,c
 11492  0015D4  501E               	movf	(___flmul@b+3)^0,w,c
 11493  0015D6  241E               	addwf	(___flmul@b+3)^0,w,c
 11494  0015D8  6E2D               	movwf	___flmul@bexp^0,c
 11495  0015DA  AE1D               	btfss	(___flmul@b+2)^0,7,c
 11496  0015DC  EFF2  F00A         	goto	u8701
 11497  0015E0  EFF4  F00A         	goto	u8700
 11498  0015E4                     u8701:
 11499  0015E4  EFF5  F00A         	goto	l8003
 11500  0015E8                     u8700:
 11501  0015E8  802D               	bsf	___flmul@bexp^0,0,c
 11502  0015EA                     l8003:
 11503  0015EA  502D               	movf	___flmul@bexp^0,w,c
 11504  0015EC  B4D8               	btfsc	status,2,c
 11505  0015EE  EFFB  F00A         	goto	u8711
 11506  0015F2  EFFD  F00A         	goto	u8710
 11507  0015F6                     u8711:
 11508  0015F6  EF10  F00B         	goto	l8011
 11509  0015FA                     u8710:
 11510  0015FA  282D               	incf	___flmul@bexp^0,w,c
 11511  0015FC  A4D8               	btfss	status,2,c
 11512  0015FE  EF03  F00B         	goto	u8721
 11513  001602  EF05  F00B         	goto	u8720
 11514  001606                     u8721:
 11515  001606  EF0D  F00B         	goto	l8009
 11516  00160A                     u8720:
 11517  00160A  0E00               	movlw	0
 11518  00160C  6E1B               	movwf	___flmul@b^0,c
 11519  00160E  0E00               	movlw	0
 11520  001610  6E1C               	movwf	(___flmul@b+1)^0,c
 11521  001612  0E00               	movlw	0
 11522  001614  6E1D               	movwf	(___flmul@b+2)^0,c
 11523  001616  0E00               	movlw	0
 11524  001618  6E1E               	movwf	(___flmul@b+3)^0,c
 11525  00161A                     l8009:
 11526  00161A  8E1D               	bsf	(___flmul@b+2)^0,7,c
 11527  00161C  EF18  F00B         	goto	l8013
 11528  001620                     l8011:
 11529  001620  0E00               	movlw	0
 11530  001622  6E1B               	movwf	___flmul@b^0,c
 11531  001624  0E00               	movlw	0
 11532  001626  6E1C               	movwf	(___flmul@b+1)^0,c
 11533  001628  0E00               	movlw	0
 11534  00162A  6E1D               	movwf	(___flmul@b+2)^0,c
 11535  00162C  0E00               	movlw	0
 11536  00162E  6E1E               	movwf	(___flmul@b+3)^0,c
 11537  001630                     l8013:
 11538  001630  5022               	movf	(___flmul@a+3)^0,w,c
 11539  001632  0B80               	andlw	128
 11540  001634  1A27               	xorwf	___flmul@sign^0,f,c
 11541  001636  5022               	movf	(___flmul@a+3)^0,w,c
 11542  001638  2422               	addwf	(___flmul@a+3)^0,w,c
 11543  00163A  6E28               	movwf	___flmul@aexp^0,c
 11544  00163C  AE21               	btfss	(___flmul@a+2)^0,7,c
 11545  00163E  EF23  F00B         	goto	u8731
 11546  001642  EF25  F00B         	goto	u8730
 11547  001646                     u8731:
 11548  001646  EF26  F00B         	goto	l8021
 11549  00164A                     u8730:
 11550  00164A  8028               	bsf	___flmul@aexp^0,0,c
 11551  00164C                     l8021:
 11552  00164C  5028               	movf	___flmul@aexp^0,w,c
 11553  00164E  B4D8               	btfsc	status,2,c
 11554  001650  EF2C  F00B         	goto	u8741
 11555  001654  EF2E  F00B         	goto	u8740
 11556  001658                     u8741:
 11557  001658  EF41  F00B         	goto	l8029
 11558  00165C                     u8740:
 11559  00165C  2828               	incf	___flmul@aexp^0,w,c
 11560  00165E  A4D8               	btfss	status,2,c
 11561  001660  EF34  F00B         	goto	u8751
 11562  001664  EF36  F00B         	goto	u8750
 11563  001668                     u8751:
 11564  001668  EF3E  F00B         	goto	l8027
 11565  00166C                     u8750:
 11566  00166C  0E00               	movlw	0
 11567  00166E  6E1F               	movwf	___flmul@a^0,c
 11568  001670  0E00               	movlw	0
 11569  001672  6E20               	movwf	(___flmul@a+1)^0,c
 11570  001674  0E00               	movlw	0
 11571  001676  6E21               	movwf	(___flmul@a+2)^0,c
 11572  001678  0E00               	movlw	0
 11573  00167A  6E22               	movwf	(___flmul@a+3)^0,c
 11574  00167C                     l8027:
 11575  00167C  8E21               	bsf	(___flmul@a+2)^0,7,c
 11576  00167E  EF49  F00B         	goto	l1543
 11577  001682                     l8029:
 11578  001682  0E00               	movlw	0
 11579  001684  6E1F               	movwf	___flmul@a^0,c
 11580  001686  0E00               	movlw	0
 11581  001688  6E20               	movwf	(___flmul@a+1)^0,c
 11582  00168A  0E00               	movlw	0
 11583  00168C  6E21               	movwf	(___flmul@a+2)^0,c
 11584  00168E  0E00               	movlw	0
 11585  001690  6E22               	movwf	(___flmul@a+3)^0,c
 11586  001692                     l1543:
 11587  001692  5028               	movf	___flmul@aexp^0,w,c
 11588  001694  B4D8               	btfsc	status,2,c
 11589  001696  EF4F  F00B         	goto	u8761
 11590  00169A  EF51  F00B         	goto	u8760
 11591  00169E                     u8761:
 11592  00169E  EF59  F00B         	goto	l8033
 11593  0016A2                     u8760:
 11594  0016A2  502D               	movf	___flmul@bexp^0,w,c
 11595  0016A4  A4D8               	btfss	status,2,c
 11596  0016A6  EF57  F00B         	goto	u8771
 11597  0016AA  EF59  F00B         	goto	u8770
 11598  0016AE                     u8771:
 11599  0016AE  EF63  F00B         	goto	l8037
 11600  0016B2                     u8770:
 11601  0016B2                     l8033:
 11602  0016B2  0E00               	movlw	0
 11603  0016B4  6E1B               	movwf	?___flmul^0,c
 11604  0016B6  0E00               	movlw	0
 11605  0016B8  6E1C               	movwf	(?___flmul+1)^0,c
 11606  0016BA  0E00               	movlw	0
 11607  0016BC  6E1D               	movwf	(?___flmul+2)^0,c
 11608  0016BE  0E00               	movlw	0
 11609  0016C0  6E1E               	movwf	(?___flmul+3)^0,c
 11610  0016C2  EFFB  F00C         	goto	l1547
 11611  0016C6                     l8037:
 11612  0016C6  5021               	movf	(___flmul@a+2)^0,w,c
 11613  0016C8  021B               	mulwf	___flmul@b^0,c
 11614  0016CA  CFF3 F032          	movff	prodl,___flmul@temp
 11615  0016CE  CFF4 F033          	movff	prodh,___flmul@temp+1
 11616  0016D2  5032               	movf	___flmul@temp^0,w,c
 11617  0016D4  6E29               	movwf	___flmul@grs^0,c
 11618  0016D6  6A2A               	clrf	(___flmul@grs+1)^0,c
 11619  0016D8  6A2B               	clrf	(___flmul@grs+2)^0,c
 11620  0016DA  6A2C               	clrf	(___flmul@grs+3)^0,c
 11621  0016DC  5033               	movf	(___flmul@temp+1)^0,w,c
 11622  0016DE  6E2E               	movwf	___flmul@prod^0,c
 11623  0016E0  6A2F               	clrf	(___flmul@prod+1)^0,c
 11624  0016E2  6A30               	clrf	(___flmul@prod+2)^0,c
 11625  0016E4  6A31               	clrf	(___flmul@prod+3)^0,c
 11626  0016E6  5020               	movf	(___flmul@a+1)^0,w,c
 11627  0016E8  021C               	mulwf	(___flmul@b+1)^0,c
 11628  0016EA  CFF3 F032          	movff	prodl,___flmul@temp
 11629  0016EE  CFF4 F033          	movff	prodh,___flmul@temp+1
 11630  0016F2  5032               	movf	___flmul@temp^0,w,c
 11631  0016F4  2629               	addwf	___flmul@grs^0,f,c
 11632  0016F6  0E00               	movlw	0
 11633  0016F8  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11634  0016FA  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11635  0016FC  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11636  0016FE  5033               	movf	(___flmul@temp+1)^0,w,c
 11637  001700  262E               	addwf	___flmul@prod^0,f,c
 11638  001702  0E00               	movlw	0
 11639  001704  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11640  001706  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11641  001708  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11642  00170A  501F               	movf	___flmul@a^0,w,c
 11643  00170C  021D               	mulwf	(___flmul@b+2)^0,c
 11644  00170E  CFF3 F032          	movff	prodl,___flmul@temp
 11645  001712  CFF4 F033          	movff	prodh,___flmul@temp+1
 11646  001716  5032               	movf	___flmul@temp^0,w,c
 11647  001718  2629               	addwf	___flmul@grs^0,f,c
 11648  00171A  0E00               	movlw	0
 11649  00171C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11650  00171E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11651  001720  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11652  001722  5033               	movf	(___flmul@temp+1)^0,w,c
 11653  001724  262E               	addwf	___flmul@prod^0,f,c
 11654  001726  0E00               	movlw	0
 11655  001728  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11656  00172A  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11657  00172C  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11658  00172E  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11659  001732  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11660  001736  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11661  00173A  6A29               	clrf	___flmul@grs^0,c
 11662  00173C  501F               	movf	___flmul@a^0,w,c
 11663  00173E  021C               	mulwf	(___flmul@b+1)^0,c
 11664  001740  CFF3 F032          	movff	prodl,___flmul@temp
 11665  001744  CFF4 F033          	movff	prodh,___flmul@temp+1
 11666  001748  5032               	movf	___flmul@temp^0,w,c
 11667  00174A  2629               	addwf	___flmul@grs^0,f,c
 11668  00174C  5033               	movf	(___flmul@temp+1)^0,w,c
 11669  00174E  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11670  001750  0E00               	movlw	0
 11671  001752  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11672  001754  0E00               	movlw	0
 11673  001756  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11674  001758  5020               	movf	(___flmul@a+1)^0,w,c
 11675  00175A  021B               	mulwf	___flmul@b^0,c
 11676  00175C  CFF3 F032          	movff	prodl,___flmul@temp
 11677  001760  CFF4 F033          	movff	prodh,___flmul@temp+1
 11678  001764  5032               	movf	___flmul@temp^0,w,c
 11679  001766  2629               	addwf	___flmul@grs^0,f,c
 11680  001768  5033               	movf	(___flmul@temp+1)^0,w,c
 11681  00176A  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11682  00176C  0E00               	movlw	0
 11683  00176E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11684  001770  0E00               	movlw	0
 11685  001772  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11686  001774  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11687  001778  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11688  00177C  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11689  001780  6A29               	clrf	___flmul@grs^0,c
 11690  001782  501F               	movf	___flmul@a^0,w,c
 11691  001784  021B               	mulwf	___flmul@b^0,c
 11692  001786  CFF3 F032          	movff	prodl,___flmul@temp
 11693  00178A  CFF4 F033          	movff	prodh,___flmul@temp+1
 11694  00178E  5032               	movf	___flmul@temp^0,w,c
 11695  001790  2629               	addwf	___flmul@grs^0,f,c
 11696  001792  5033               	movf	(___flmul@temp+1)^0,w,c
 11697  001794  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11698  001796  0E00               	movlw	0
 11699  001798  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11700  00179A  0E00               	movlw	0
 11701  00179C  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11702  00179E  5021               	movf	(___flmul@a+2)^0,w,c
 11703  0017A0  021C               	mulwf	(___flmul@b+1)^0,c
 11704  0017A2  CFF3 F032          	movff	prodl,___flmul@temp
 11705  0017A6  CFF4 F033          	movff	prodh,___flmul@temp+1
 11706  0017AA  5032               	movf	___flmul@temp^0,w,c
 11707  0017AC  262E               	addwf	___flmul@prod^0,f,c
 11708  0017AE  5033               	movf	(___flmul@temp+1)^0,w,c
 11709  0017B0  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11710  0017B2  0E00               	movlw	0
 11711  0017B4  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11712  0017B6  0E00               	movlw	0
 11713  0017B8  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11714  0017BA  5020               	movf	(___flmul@a+1)^0,w,c
 11715  0017BC  021D               	mulwf	(___flmul@b+2)^0,c
 11716  0017BE  CFF3 F032          	movff	prodl,___flmul@temp
 11717  0017C2  CFF4 F033          	movff	prodh,___flmul@temp+1
 11718  0017C6  5032               	movf	___flmul@temp^0,w,c
 11719  0017C8  262E               	addwf	___flmul@prod^0,f,c
 11720  0017CA  5033               	movf	(___flmul@temp+1)^0,w,c
 11721  0017CC  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11722  0017CE  0E00               	movlw	0
 11723  0017D0  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11724  0017D2  0E00               	movlw	0
 11725  0017D4  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11726  0017D6  5021               	movf	(___flmul@a+2)^0,w,c
 11727  0017D8  021D               	mulwf	(___flmul@b+2)^0,c
 11728  0017DA  CFF3 F032          	movff	prodl,___flmul@temp
 11729  0017DE  CFF4 F033          	movff	prodh,___flmul@temp+1
 11730  0017E2  5032               	movf	___flmul@temp^0,w,c
 11731  0017E4  6E23               	movwf	??___flmul^0,c
 11732  0017E6  5033               	movf	(___flmul@temp+1)^0,w,c
 11733  0017E8  6E24               	movwf	(??___flmul+1)^0,c
 11734  0017EA  6A25               	clrf	(??___flmul+2)^0,c
 11735  0017EC  6A26               	clrf	(??___flmul+3)^0,c
 11736  0017EE  C025  F026         	movff	??___flmul+2,??___flmul+3
 11737  0017F2  C024  F025         	movff	??___flmul+1,??___flmul+2
 11738  0017F6  C023  F024         	movff	??___flmul,??___flmul+1
 11739  0017FA  6A23               	clrf	??___flmul^0,c
 11740  0017FC  5023               	movf	??___flmul^0,w,c
 11741  0017FE  262E               	addwf	___flmul@prod^0,f,c
 11742  001800  5024               	movf	(??___flmul+1)^0,w,c
 11743  001802  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11744  001804  5025               	movf	(??___flmul+2)^0,w,c
 11745  001806  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11746  001808  5026               	movf	(??___flmul+3)^0,w,c
 11747  00180A  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11748  00180C  C029  F023         	movff	___flmul@grs,??___flmul
 11749  001810  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
 11750  001814  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
 11751  001818  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
 11752  00181C  0E19               	movlw	25
 11753  00181E  EF16  F00C         	goto	u8780
 11754  001822                     u8785:
 11755  001822  90D8               	bcf	status,0,c
 11756  001824  3226               	rrcf	(??___flmul+3)^0,f,c
 11757  001826  3225               	rrcf	(??___flmul+2)^0,f,c
 11758  001828  3224               	rrcf	(??___flmul+1)^0,f,c
 11759  00182A  3223               	rrcf	??___flmul^0,f,c
 11760  00182C                     u8780:
 11761  00182C  2EE8               	decfsz	wreg,f,c
 11762  00182E  EF11  F00C         	goto	u8785
 11763  001832  5023               	movf	??___flmul^0,w,c
 11764  001834  262E               	addwf	___flmul@prod^0,f,c
 11765  001836  5024               	movf	(??___flmul+1)^0,w,c
 11766  001838  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11767  00183A  5025               	movf	(??___flmul+2)^0,w,c
 11768  00183C  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11769  00183E  5026               	movf	(??___flmul+3)^0,w,c
 11770  001840  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11771  001842  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11772  001846  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11773  00184A  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11774  00184E  6A29               	clrf	___flmul@grs^0,c
 11775  001850  5028               	movf	___flmul@aexp^0,w,c
 11776  001852  C02D  F023         	movff	___flmul@bexp,??___flmul
 11777  001856  6A24               	clrf	(??___flmul+1)^0,c
 11778  001858  2623               	addwf	??___flmul^0,f,c
 11779  00185A  0E00               	movlw	0
 11780  00185C  2224               	addwfc	(??___flmul+1)^0,f,c
 11781  00185E  0E82               	movlw	130
 11782  001860  2423               	addwf	??___flmul^0,w,c
 11783  001862  6E32               	movwf	___flmul@temp^0,c
 11784  001864  0EFF               	movlw	255
 11785  001866  2024               	addwfc	(??___flmul+1)^0,w,c
 11786  001868  6E33               	movwf	(___flmul@temp+1)^0,c
 11787  00186A  EF4C  F00C         	goto	l8085
 11788  00186E                     l8079:
 11789  00186E  90D8               	bcf	status,0,c
 11790  001870  362E               	rlcf	___flmul@prod^0,f,c
 11791  001872  362F               	rlcf	(___flmul@prod+1)^0,f,c
 11792  001874  3630               	rlcf	(___flmul@prod+2)^0,f,c
 11793  001876  3631               	rlcf	(___flmul@prod+3)^0,f,c
 11794  001878  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11795  00187A  EF41  F00C         	goto	u8791
 11796  00187E  EF43  F00C         	goto	u8790
 11797  001882                     u8791:
 11798  001882  EF44  F00C         	goto	l1550
 11799  001886                     u8790:
 11800  001886  802E               	bsf	___flmul@prod^0,0,c
 11801  001888                     l1550:
 11802  001888  90D8               	bcf	status,0,c
 11803  00188A  3629               	rlcf	___flmul@grs^0,f,c
 11804  00188C  362A               	rlcf	(___flmul@grs+1)^0,f,c
 11805  00188E  362B               	rlcf	(___flmul@grs+2)^0,f,c
 11806  001890  362C               	rlcf	(___flmul@grs+3)^0,f,c
 11807  001892  0632               	decf	___flmul@temp^0,f,c
 11808  001894  A0D8               	btfss	status,0,c
 11809  001896  0633               	decf	(___flmul@temp+1)^0,f,c
 11810  001898                     l8085:
 11811  001898  AE30               	btfss	(___flmul@prod+2)^0,7,c
 11812  00189A  EF51  F00C         	goto	u8801
 11813  00189E  EF53  F00C         	goto	u8800
 11814  0018A2                     u8801:
 11815  0018A2  EF37  F00C         	goto	l8079
 11816  0018A6                     u8800:
 11817  0018A6  0E00               	movlw	0
 11818  0018A8  6E28               	movwf	___flmul@aexp^0,c
 11819  0018AA  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11820  0018AC  EF5A  F00C         	goto	u8811
 11821  0018B0  EF5C  F00C         	goto	u8810
 11822  0018B4                     u8811:
 11823  0018B4  EF80  F00C         	goto	l1552
 11824  0018B8                     u8810:
 11825  0018B8  0EFF               	movlw	255
 11826  0018BA  1429               	andwf	___flmul@grs^0,w,c
 11827  0018BC  6E23               	movwf	??___flmul^0,c
 11828  0018BE  0EFF               	movlw	255
 11829  0018C0  142A               	andwf	(___flmul@grs+1)^0,w,c
 11830  0018C2  6E24               	movwf	(??___flmul+1)^0,c
 11831  0018C4  0EFF               	movlw	255
 11832  0018C6  142B               	andwf	(___flmul@grs+2)^0,w,c
 11833  0018C8  6E25               	movwf	(??___flmul+2)^0,c
 11834  0018CA  0E7F               	movlw	127
 11835  0018CC  142C               	andwf	(___flmul@grs+3)^0,w,c
 11836  0018CE  6E26               	movwf	(??___flmul+3)^0,c
 11837  0018D0  5023               	movf	??___flmul^0,w,c
 11838  0018D2  1024               	iorwf	(??___flmul+1)^0,w,c
 11839  0018D4  1025               	iorwf	(??___flmul+2)^0,w,c
 11840  0018D6  1026               	iorwf	(??___flmul+3)^0,w,c
 11841  0018D8  B4D8               	btfsc	status,2,c
 11842  0018DA  EF71  F00C         	goto	u8821
 11843  0018DE  EF73  F00C         	goto	u8820
 11844  0018E2                     u8821:
 11845  0018E2  EF77  F00C         	goto	l1553
 11846  0018E6                     u8820:
 11847  0018E6                     l8093:
 11848  0018E6  0E01               	movlw	1
 11849  0018E8  6E28               	movwf	___flmul@aexp^0,c
 11850  0018EA  EF80  F00C         	goto	l1552
 11851  0018EE                     l1553:
 11852  0018EE  A02E               	btfss	___flmul@prod^0,0,c
 11853  0018F0  EF7C  F00C         	goto	u8831
 11854  0018F4  EF7E  F00C         	goto	u8830
 11855  0018F8                     u8831:
 11856  0018F8  EF80  F00C         	goto	l1552
 11857  0018FC                     u8830:
 11858  0018FC  EF73  F00C         	goto	l8093
 11859  001900                     l1552:
 11860  001900  5028               	movf	___flmul@aexp^0,w,c
 11861  001902  B4D8               	btfsc	status,2,c
 11862  001904  EF86  F00C         	goto	u8841
 11863  001908  EF88  F00C         	goto	u8840
 11864  00190C                     u8841:
 11865  00190C  EFAC  F00C         	goto	l8105
 11866  001910                     u8840:
 11867  001910  0E01               	movlw	1
 11868  001912  262E               	addwf	___flmul@prod^0,f,c
 11869  001914  0E00               	movlw	0
 11870  001916  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11871  001918  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11872  00191A  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11873  00191C  A031               	btfss	(___flmul@prod+3)^0,0,c
 11874  00191E  EF93  F00C         	goto	u8851
 11875  001922  EF95  F00C         	goto	u8850
 11876  001926                     u8851:
 11877  001926  EFAC  F00C         	goto	l8105
 11878  00192A                     u8850:
 11879  00192A  C02E  F023         	movff	___flmul@prod,??___flmul
 11880  00192E  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
 11881  001932  C030  F025         	movff	___flmul@prod+2,??___flmul+2
 11882  001936  C031  F026         	movff	___flmul@prod+3,??___flmul+3
 11883  00193A  3426               	rlcf	(??___flmul+3)^0,w,c
 11884  00193C  3226               	rrcf	(??___flmul+3)^0,f,c
 11885  00193E  3225               	rrcf	(??___flmul+2)^0,f,c
 11886  001940  3224               	rrcf	(??___flmul+1)^0,f,c
 11887  001942  3223               	rrcf	??___flmul^0,f,c
 11888  001944  C023  F02E         	movff	??___flmul,___flmul@prod
 11889  001948  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
 11890  00194C  C025  F030         	movff	??___flmul+2,___flmul@prod+2
 11891  001950  C026  F031         	movff	??___flmul+3,___flmul@prod+3
 11892  001954  4A32               	infsnz	___flmul@temp^0,f,c
 11893  001956  2A33               	incf	(___flmul@temp+1)^0,f,c
 11894  001958                     l8105:
 11895  001958  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 11896  00195A  EFB7  F00C         	goto	u8861
 11897  00195E  5033               	movf	(___flmul@temp+1)^0,w,c
 11898  001960  E108               	bnz	u8860
 11899  001962  2832               	incf	___flmul@temp^0,w,c
 11900  001964  A0D8               	btfss	status,0,c
 11901  001966  EFB7  F00C         	goto	u8861
 11902  00196A  EFB9  F00C         	goto	u8860
 11903  00196E                     u8861:
 11904  00196E  EFC3  F00C         	goto	l8109
 11905  001972                     u8860:
 11906  001972  0E00               	movlw	0
 11907  001974  6E2E               	movwf	___flmul@prod^0,c
 11908  001976  0E00               	movlw	0
 11909  001978  6E2F               	movwf	(___flmul@prod+1)^0,c
 11910  00197A  0E80               	movlw	128
 11911  00197C  6E30               	movwf	(___flmul@prod+2)^0,c
 11912  00197E  0E7F               	movlw	127
 11913  001980  6E31               	movwf	(___flmul@prod+3)^0,c
 11914  001982  EFF1  F00C         	goto	l8121
 11915  001986                     l8109:
 11916  001986  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 11917  001988  EFD0  F00C         	goto	u8870
 11918  00198C  5033               	movf	(___flmul@temp+1)^0,w,c
 11919  00198E  E106               	bnz	u8871
 11920  001990  0432               	decf	___flmul@temp^0,w,c
 11921  001992  B0D8               	btfsc	status,0,c
 11922  001994  EFCE  F00C         	goto	u8871
 11923  001998  EFD0  F00C         	goto	u8870
 11924  00199C                     u8871:
 11925  00199C  EFDC  F00C         	goto	l1560
 11926  0019A0                     u8870:
 11927  0019A0  0E00               	movlw	0
 11928  0019A2  6E2E               	movwf	___flmul@prod^0,c
 11929  0019A4  0E00               	movlw	0
 11930  0019A6  6E2F               	movwf	(___flmul@prod+1)^0,c
 11931  0019A8  0E00               	movlw	0
 11932  0019AA  6E30               	movwf	(___flmul@prod+2)^0,c
 11933  0019AC  0E00               	movlw	0
 11934  0019AE  6E31               	movwf	(___flmul@prod+3)^0,c
 11935  0019B0  0E00               	movlw	0
 11936  0019B2  6E27               	movwf	___flmul@sign^0,c
 11937  0019B4  EFF1  F00C         	goto	l8121
 11938  0019B8                     l1560:
 11939  0019B8  C032  F02D         	movff	___flmul@temp,___flmul@bexp
 11940  0019BC  0EFF               	movlw	255
 11941  0019BE  162E               	andwf	___flmul@prod^0,f,c
 11942  0019C0  0EFF               	movlw	255
 11943  0019C2  162F               	andwf	(___flmul@prod+1)^0,f,c
 11944  0019C4  0E7F               	movlw	127
 11945  0019C6  1630               	andwf	(___flmul@prod+2)^0,f,c
 11946  0019C8  0E00               	movlw	0
 11947  0019CA  1631               	andwf	(___flmul@prod+3)^0,f,c
 11948  0019CC  A02D               	btfss	___flmul@bexp^0,0,c
 11949  0019CE  EFEB  F00C         	goto	u8881
 11950  0019D2  EFED  F00C         	goto	u8880
 11951  0019D6                     u8881:
 11952  0019D6  EFEE  F00C         	goto	l8119
 11953  0019DA                     u8880:
 11954  0019DA  8E30               	bsf	(___flmul@prod+2)^0,7,c
 11955  0019DC                     l8119:
 11956  0019DC  90D8               	bcf	status,0,c
 11957  0019DE  302D               	rrcf	___flmul@bexp^0,w,c
 11958  0019E0  6E31               	movwf	(___flmul@prod+3)^0,c
 11959  0019E2                     l8121:
 11960  0019E2  5027               	movf	___flmul@sign^0,w,c
 11961  0019E4  1231               	iorwf	(___flmul@prod+3)^0,f,c
 11962  0019E6  C02E  F01B         	movff	___flmul@prod,?___flmul
 11963  0019EA  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
 11964  0019EE  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
 11965  0019F2  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
 11966  0019F6                     l1547:
 11967  0019F6  0012               	return		;funcret
 11968  0019F8                     __end_of___flmul:
 11969                           	opt callstack 0
 11970                           
 11971 ;; *************** function ___fldiv *****************
 11972 ;; Defined at:
 11973 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;  b               4   67[COMRAM] unsigned char 
 11976 ;;  a               4   71[COMRAM] unsigned char 
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;  grs             4    7[BANK0 ] unsigned long 
 11979 ;;  rem             4    0[BANK0 ] unsigned long 
 11980 ;;  new_exp         2    5[BANK0 ] short 
 11981 ;;  aexp            1   12[BANK0 ] unsigned char 
 11982 ;;  bexp            1   11[BANK0 ] unsigned char 
 11983 ;;  sign            1    4[BANK0 ] unsigned char 
 11984 ;; Return value:  Size  Location     Type
 11985 ;;                  4   67[COMRAM] unsigned char 
 11986 ;; Registers used:
 11987 ;;		wreg, status,2, status,0
 11988 ;; Tracked objects:
 11989 ;;		On entry : 0/0
 11990 ;;		On exit  : 0/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11993 ;;      Params:         8       0       0       0       0       0       0       0       0
 11994 ;;      Locals:         0      13       0       0       0       0       0       0       0
 11995 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11996 ;;      Totals:        12      13       0       0       0       0       0       0       0
 11997 ;;Total ram usage:       25 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; Hardware stack levels required when called:    2
 12000 ;; This function calls:
 12001 ;;		Nothing
 12002 ;; This function is called by:
 12003 ;;		_pwmDuty
 12004 ;;		_leerSensores
 12005 ;;		_efgtoa
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           
 12009                           	psect	text56
 12010  001DAA                     __ptext56:
 12011                           	opt callstack 0
 12012  001DAA                     ___fldiv:
 12013                           	opt callstack 23
 12014  001DAA  5047               	movf	(___fldiv@b+3)^0,w,c
 12015  001DAC  0B80               	andlw	128
 12016  001DAE  0100               	movlb	0	; () banked
 12017  001DB0  6F64               	movwf	___fldiv@sign& (0+255),b
 12018  001DB2  5047               	movf	(___fldiv@b+3)^0,w,c
 12019  001DB4  2447               	addwf	(___fldiv@b+3)^0,w,c
 12020  001DB6  6F6B               	movwf	___fldiv@bexp& (0+255),b
 12021  001DB8                     
 12022                           ; BSR set to: 0
 12023  001DB8  AE46               	btfss	(___fldiv@b+2)^0,7,c
 12024  001DBA  EFE1  F00E         	goto	u8471
 12025  001DBE  EFE3  F00E         	goto	u8470
 12026  001DC2                     u8471:
 12027  001DC2  EFE4  F00E         	goto	l7865
 12028  001DC6                     u8470:
 12029  001DC6                     
 12030                           ; BSR set to: 0
 12031  001DC6  816B               	bsf	___fldiv@bexp& (0+255),0,b
 12032  001DC8                     l7865:
 12033                           
 12034                           ; BSR set to: 0
 12035  001DC8  516B               	movf	___fldiv@bexp& (0+255),w,b
 12036  001DCA  B4D8               	btfsc	status,2,c
 12037  001DCC  EFEA  F00E         	goto	u8481
 12038  001DD0  EFEC  F00E         	goto	u8480
 12039  001DD4                     u8481:
 12040  001DD4  EF01  F00F         	goto	l7875
 12041  001DD8                     u8480:
 12042  001DD8                     
 12043                           ; BSR set to: 0
 12044  001DD8  296B               	incf	___fldiv@bexp& (0+255),w,b
 12045  001DDA  A4D8               	btfss	status,2,c
 12046  001DDC  EFF2  F00E         	goto	u8491
 12047  001DE0  EFF4  F00E         	goto	u8490
 12048  001DE4                     u8491:
 12049  001DE4  EFFC  F00E         	goto	l7871
 12050  001DE8                     u8490:
 12051  001DE8                     
 12052                           ; BSR set to: 0
 12053  001DE8  0E00               	movlw	0
 12054  001DEA  6E44               	movwf	___fldiv@b^0,c
 12055  001DEC  0E00               	movlw	0
 12056  001DEE  6E45               	movwf	(___fldiv@b+1)^0,c
 12057  001DF0  0E00               	movlw	0
 12058  001DF2  6E46               	movwf	(___fldiv@b+2)^0,c
 12059  001DF4  0E00               	movlw	0
 12060  001DF6  6E47               	movwf	(___fldiv@b+3)^0,c
 12061  001DF8                     l7871:
 12062                           
 12063                           ; BSR set to: 0
 12064  001DF8  8E46               	bsf	(___fldiv@b+2)^0,7,c
 12065  001DFA                     
 12066                           ; BSR set to: 0
 12067  001DFA  0E00               	movlw	0
 12068  001DFC  6E47               	movwf	(___fldiv@b+3)^0,c
 12069  001DFE  EF09  F00F         	goto	l7877
 12070  001E02                     l7875:
 12071                           
 12072                           ; BSR set to: 0
 12073  001E02  0E00               	movlw	0
 12074  001E04  6E44               	movwf	___fldiv@b^0,c
 12075  001E06  0E00               	movlw	0
 12076  001E08  6E45               	movwf	(___fldiv@b+1)^0,c
 12077  001E0A  0E00               	movlw	0
 12078  001E0C  6E46               	movwf	(___fldiv@b+2)^0,c
 12079  001E0E  0E00               	movlw	0
 12080  001E10  6E47               	movwf	(___fldiv@b+3)^0,c
 12081  001E12                     l7877:
 12082                           
 12083                           ; BSR set to: 0
 12084  001E12  504B               	movf	(___fldiv@a+3)^0,w,c
 12085  001E14  0B80               	andlw	128
 12086  001E16  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 12087  001E18                     
 12088                           ; BSR set to: 0
 12089  001E18  504B               	movf	(___fldiv@a+3)^0,w,c
 12090  001E1A  244B               	addwf	(___fldiv@a+3)^0,w,c
 12091  001E1C  6F6C               	movwf	___fldiv@aexp& (0+255),b
 12092  001E1E                     
 12093                           ; BSR set to: 0
 12094  001E1E  AE4A               	btfss	(___fldiv@a+2)^0,7,c
 12095  001E20  EF14  F00F         	goto	u8501
 12096  001E24  EF16  F00F         	goto	u8500
 12097  001E28                     u8501:
 12098  001E28  EF17  F00F         	goto	l7885
 12099  001E2C                     u8500:
 12100  001E2C                     
 12101                           ; BSR set to: 0
 12102  001E2C  816C               	bsf	___fldiv@aexp& (0+255),0,b
 12103  001E2E                     l7885:
 12104                           
 12105                           ; BSR set to: 0
 12106  001E2E  516C               	movf	___fldiv@aexp& (0+255),w,b
 12107  001E30  B4D8               	btfsc	status,2,c
 12108  001E32  EF1D  F00F         	goto	u8511
 12109  001E36  EF1F  F00F         	goto	u8510
 12110  001E3A                     u8511:
 12111  001E3A  EF34  F00F         	goto	l7895
 12112  001E3E                     u8510:
 12113  001E3E                     
 12114                           ; BSR set to: 0
 12115  001E3E  296C               	incf	___fldiv@aexp& (0+255),w,b
 12116  001E40  A4D8               	btfss	status,2,c
 12117  001E42  EF25  F00F         	goto	u8521
 12118  001E46  EF27  F00F         	goto	u8520
 12119  001E4A                     u8521:
 12120  001E4A  EF2F  F00F         	goto	l7891
 12121  001E4E                     u8520:
 12122  001E4E                     
 12123                           ; BSR set to: 0
 12124  001E4E  0E00               	movlw	0
 12125  001E50  6E48               	movwf	___fldiv@a^0,c
 12126  001E52  0E00               	movlw	0
 12127  001E54  6E49               	movwf	(___fldiv@a+1)^0,c
 12128  001E56  0E00               	movlw	0
 12129  001E58  6E4A               	movwf	(___fldiv@a+2)^0,c
 12130  001E5A  0E00               	movlw	0
 12131  001E5C  6E4B               	movwf	(___fldiv@a+3)^0,c
 12132  001E5E                     l7891:
 12133                           
 12134                           ; BSR set to: 0
 12135  001E5E  8E4A               	bsf	(___fldiv@a+2)^0,7,c
 12136  001E60                     
 12137                           ; BSR set to: 0
 12138  001E60  0E00               	movlw	0
 12139  001E62  6E4B               	movwf	(___fldiv@a+3)^0,c
 12140  001E64  EF3C  F00F         	goto	l7897
 12141  001E68                     l7895:
 12142                           
 12143                           ; BSR set to: 0
 12144  001E68  0E00               	movlw	0
 12145  001E6A  6E48               	movwf	___fldiv@a^0,c
 12146  001E6C  0E00               	movlw	0
 12147  001E6E  6E49               	movwf	(___fldiv@a+1)^0,c
 12148  001E70  0E00               	movlw	0
 12149  001E72  6E4A               	movwf	(___fldiv@a+2)^0,c
 12150  001E74  0E00               	movlw	0
 12151  001E76  6E4B               	movwf	(___fldiv@a+3)^0,c
 12152  001E78                     l7897:
 12153                           
 12154                           ; BSR set to: 0
 12155  001E78  5048               	movf	___fldiv@a^0,w,c
 12156  001E7A  1049               	iorwf	(___fldiv@a+1)^0,w,c
 12157  001E7C  104A               	iorwf	(___fldiv@a+2)^0,w,c
 12158  001E7E  104B               	iorwf	(___fldiv@a+3)^0,w,c
 12159  001E80  A4D8               	btfss	status,2,c
 12160  001E82  EF45  F00F         	goto	u8531
 12161  001E86  EF47  F00F         	goto	u8530
 12162  001E8A                     u8531:
 12163  001E8A  EF5F  F00F         	goto	l7909
 12164  001E8E                     u8530:
 12165  001E8E                     
 12166                           ; BSR set to: 0
 12167  001E8E  0E00               	movlw	0
 12168  001E90  6E44               	movwf	___fldiv@b^0,c
 12169  001E92  0E00               	movlw	0
 12170  001E94  6E45               	movwf	(___fldiv@b+1)^0,c
 12171  001E96  0E00               	movlw	0
 12172  001E98  6E46               	movwf	(___fldiv@b+2)^0,c
 12173  001E9A  0E00               	movlw	0
 12174  001E9C  6E47               	movwf	(___fldiv@b+3)^0,c
 12175  001E9E                     
 12176                           ; BSR set to: 0
 12177  001E9E  0E80               	movlw	128
 12178  001EA0  1246               	iorwf	(___fldiv@b+2)^0,f,c
 12179  001EA2  0E7F               	movlw	127
 12180  001EA4  1247               	iorwf	(___fldiv@b+3)^0,f,c
 12181  001EA6                     l7903:
 12182                           
 12183                           ; BSR set to: 0
 12184  001EA6  5164               	movf	___fldiv@sign& (0+255),w,b
 12185  001EA8  1247               	iorwf	(___fldiv@b+3)^0,f,c
 12186  001EAA                     
 12187                           ; BSR set to: 0
 12188  001EAA  C044  F044         	movff	___fldiv@b,?___fldiv
 12189  001EAE  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
 12190  001EB2  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
 12191  001EB6  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
 12192  001EBA  EFA2  F010         	goto	l1511
 12193  001EBE                     l7909:
 12194                           
 12195                           ; BSR set to: 0
 12196  001EBE  516B               	movf	___fldiv@bexp& (0+255),w,b
 12197  001EC0  A4D8               	btfss	status,2,c
 12198  001EC2  EF65  F00F         	goto	u8541
 12199  001EC6  EF67  F00F         	goto	u8540
 12200  001ECA                     u8541:
 12201  001ECA  EF71  F00F         	goto	l7917
 12202  001ECE                     u8540:
 12203  001ECE                     
 12204                           ; BSR set to: 0
 12205  001ECE  0E00               	movlw	0
 12206  001ED0  6E44               	movwf	?___fldiv^0,c
 12207  001ED2  0E00               	movlw	0
 12208  001ED4  6E45               	movwf	(?___fldiv+1)^0,c
 12209  001ED6  0E00               	movlw	0
 12210  001ED8  6E46               	movwf	(?___fldiv+2)^0,c
 12211  001EDA  0E00               	movlw	0
 12212  001EDC  6E47               	movwf	(?___fldiv+3)^0,c
 12213  001EDE  EFA2  F010         	goto	l1511
 12214  001EE2                     l7917:
 12215                           
 12216                           ; BSR set to: 0
 12217  001EE2  516C               	movf	___fldiv@aexp& (0+255),w,b
 12218  001EE4  C06B  F04C         	movff	___fldiv@bexp,??___fldiv
 12219  001EE8  6A4D               	clrf	(??___fldiv+1)^0,c
 12220  001EEA  5E4C               	subwf	??___fldiv^0,f,c
 12221  001EEC  0E00               	movlw	0
 12222  001EEE  5A4D               	subwfb	(??___fldiv+1)^0,f,c
 12223  001EF0  0E7F               	movlw	127
 12224  001EF2  244C               	addwf	??___fldiv^0,w,c
 12225  001EF4  6F65               	movwf	___fldiv@new_exp& (0+255),b
 12226  001EF6  0E00               	movlw	0
 12227  001EF8  204D               	addwfc	(??___fldiv+1)^0,w,c
 12228  001EFA  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12229  001EFC                     
 12230                           ; BSR set to: 0
 12231  001EFC  C044  F060         	movff	___fldiv@b,___fldiv@rem
 12232  001F00  C045  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 12233  001F04  C046  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 12234  001F08  C047  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 12235  001F0C                     
 12236                           ; BSR set to: 0
 12237  001F0C  0E00               	movlw	0
 12238  001F0E  6E44               	movwf	___fldiv@b^0,c
 12239  001F10  0E00               	movlw	0
 12240  001F12  6E45               	movwf	(___fldiv@b+1)^0,c
 12241  001F14  0E00               	movlw	0
 12242  001F16  6E46               	movwf	(___fldiv@b+2)^0,c
 12243  001F18  0E00               	movlw	0
 12244  001F1A  6E47               	movwf	(___fldiv@b+3)^0,c
 12245  001F1C                     
 12246                           ; BSR set to: 0
 12247  001F1C  0E00               	movlw	0
 12248  001F1E  6F67               	movwf	___fldiv@grs& (0+255),b
 12249  001F20  0E00               	movlw	0
 12250  001F22  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 12251  001F24  0E00               	movlw	0
 12252  001F26  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 12253  001F28  0E00               	movlw	0
 12254  001F2A  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 12255  001F2C                     
 12256                           ; BSR set to: 0
 12257  001F2C  0E00               	movlw	0
 12258  001F2E  6F6C               	movwf	___fldiv@aexp& (0+255),b
 12259  001F30  EFD2  F00F         	goto	l1513
 12260  001F34                     l7927:
 12261                           
 12262                           ; BSR set to: 0
 12263  001F34  516C               	movf	___fldiv@aexp& (0+255),w,b
 12264  001F36  B4D8               	btfsc	status,2,c
 12265  001F38  EFA0  F00F         	goto	u8551
 12266  001F3C  EFA2  F00F         	goto	u8550
 12267  001F40                     u8551:
 12268  001F40  EFB9  F00F         	goto	l7935
 12269  001F44                     u8550:
 12270  001F44                     
 12271                           ; BSR set to: 0
 12272  001F44  90D8               	bcf	status,0,c
 12273  001F46  3760               	rlcf	___fldiv@rem& (0+255),f,b
 12274  001F48  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12275  001F4A  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12276  001F4C  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12277  001F4E  90D8               	bcf	status,0,c
 12278  001F50  3644               	rlcf	___fldiv@b^0,f,c
 12279  001F52  3645               	rlcf	(___fldiv@b+1)^0,f,c
 12280  001F54  3646               	rlcf	(___fldiv@b+2)^0,f,c
 12281  001F56  3647               	rlcf	(___fldiv@b+3)^0,f,c
 12282  001F58                     
 12283                           ; BSR set to: 0
 12284  001F58  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12285  001F5A  EFB1  F00F         	goto	u8561
 12286  001F5E  EFB3  F00F         	goto	u8560
 12287  001F62                     u8561:
 12288  001F62  EFB4  F00F         	goto	l1516
 12289  001F66                     u8560:
 12290  001F66                     
 12291                           ; BSR set to: 0
 12292  001F66  8044               	bsf	___fldiv@b^0,0,c
 12293  001F68                     l1516:
 12294                           
 12295                           ; BSR set to: 0
 12296  001F68  90D8               	bcf	status,0,c
 12297  001F6A  3767               	rlcf	___fldiv@grs& (0+255),f,b
 12298  001F6C  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12299  001F6E  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12300  001F70  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12301  001F72                     l7935:
 12302                           
 12303                           ; BSR set to: 0
 12304  001F72  5048               	movf	___fldiv@a^0,w,c
 12305  001F74  5D60               	subwf	___fldiv@rem& (0+255),w,b
 12306  001F76  5049               	movf	(___fldiv@a+1)^0,w,c
 12307  001F78  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12308  001F7A  504A               	movf	(___fldiv@a+2)^0,w,c
 12309  001F7C  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12310  001F7E  504B               	movf	(___fldiv@a+3)^0,w,c
 12311  001F80  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12312  001F82  A0D8               	btfss	status,0,c
 12313  001F84  EFC6  F00F         	goto	u8571
 12314  001F88  EFC8  F00F         	goto	u8570
 12315  001F8C                     u8571:
 12316  001F8C  EFD1  F00F         	goto	l7941
 12317  001F90                     u8570:
 12318  001F90                     
 12319                           ; BSR set to: 0
 12320  001F90  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 12321  001F92                     
 12322                           ; BSR set to: 0
 12323  001F92  5048               	movf	___fldiv@a^0,w,c
 12324  001F94  5F60               	subwf	___fldiv@rem& (0+255),f,b
 12325  001F96  5049               	movf	(___fldiv@a+1)^0,w,c
 12326  001F98  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 12327  001F9A  504A               	movf	(___fldiv@a+2)^0,w,c
 12328  001F9C  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 12329  001F9E  504B               	movf	(___fldiv@a+3)^0,w,c
 12330  001FA0  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 12331  001FA2                     l7941:
 12332                           
 12333                           ; BSR set to: 0
 12334  001FA2  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 12335  001FA4                     l1513:
 12336                           
 12337                           ; BSR set to: 0
 12338  001FA4  0E19               	movlw	25
 12339  001FA6  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 12340  001FA8  EFD8  F00F         	goto	u8581
 12341  001FAC  EFDA  F00F         	goto	u8580
 12342  001FB0                     u8581:
 12343  001FB0  EF9A  F00F         	goto	l7927
 12344  001FB4                     u8580:
 12345  001FB4                     
 12346                           ; BSR set to: 0
 12347  001FB4  5160               	movf	___fldiv@rem& (0+255),w,b
 12348  001FB6  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 12349  001FB8  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 12350  001FBA  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 12351  001FBC  B4D8               	btfsc	status,2,c
 12352  001FBE  EFE3  F00F         	goto	u8591
 12353  001FC2  EFE5  F00F         	goto	u8590
 12354  001FC6                     u8591:
 12355  001FC6  EFFD  F00F         	goto	l7953
 12356  001FCA                     u8590:
 12357  001FCA                     
 12358                           ; BSR set to: 0
 12359  001FCA  8167               	bsf	___fldiv@grs& (0+255),0,b
 12360  001FCC  EFFD  F00F         	goto	l7953
 12361  001FD0                     l7947:
 12362                           
 12363                           ; BSR set to: 0
 12364  001FD0  90D8               	bcf	status,0,c
 12365  001FD2  3644               	rlcf	___fldiv@b^0,f,c
 12366  001FD4  3645               	rlcf	(___fldiv@b+1)^0,f,c
 12367  001FD6  3646               	rlcf	(___fldiv@b+2)^0,f,c
 12368  001FD8  3647               	rlcf	(___fldiv@b+3)^0,f,c
 12369  001FDA                     
 12370                           ; BSR set to: 0
 12371  001FDA  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12372  001FDC  EFF2  F00F         	goto	u8601
 12373  001FE0  EFF4  F00F         	goto	u8600
 12374  001FE4                     u8601:
 12375  001FE4  EFF5  F00F         	goto	l1522
 12376  001FE8                     u8600:
 12377  001FE8                     
 12378                           ; BSR set to: 0
 12379  001FE8  8044               	bsf	___fldiv@b^0,0,c
 12380  001FEA                     l1522:
 12381                           
 12382                           ; BSR set to: 0
 12383  001FEA  90D8               	bcf	status,0,c
 12384  001FEC  3767               	rlcf	___fldiv@grs& (0+255),f,b
 12385  001FEE  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12386  001FF0  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12387  001FF2  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12388  001FF4  0765               	decf	___fldiv@new_exp& (0+255),f,b
 12389  001FF6  A0D8               	btfss	status,0,c
 12390  001FF8  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12391  001FFA                     l7953:
 12392                           
 12393                           ; BSR set to: 0
 12394  001FFA  AE46               	btfss	(___fldiv@b+2)^0,7,c
 12395  001FFC  EF02  F010         	goto	u8611
 12396  002000  EF04  F010         	goto	u8610
 12397  002004                     u8611:
 12398  002004  EFE8  F00F         	goto	l7947
 12399  002008                     u8610:
 12400  002008                     
 12401                           ; BSR set to: 0
 12402  002008  0E00               	movlw	0
 12403  00200A  6F6C               	movwf	___fldiv@aexp& (0+255),b
 12404  00200C                     
 12405                           ; BSR set to: 0
 12406  00200C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12407  00200E  EF0B  F010         	goto	u8621
 12408  002012  EF0D  F010         	goto	u8620
 12409  002016                     u8621:
 12410  002016  EF31  F010         	goto	l1524
 12411  00201A                     u8620:
 12412  00201A                     
 12413                           ; BSR set to: 0
 12414  00201A  0EFF               	movlw	255
 12415  00201C  1567               	andwf	___fldiv@grs& (0+255),w,b
 12416  00201E  6E4C               	movwf	??___fldiv^0,c
 12417  002020  0EFF               	movlw	255
 12418  002022  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 12419  002024  6E4D               	movwf	(??___fldiv+1)^0,c
 12420  002026  0EFF               	movlw	255
 12421  002028  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 12422  00202A  6E4E               	movwf	(??___fldiv+2)^0,c
 12423  00202C  0E7F               	movlw	127
 12424  00202E  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12425  002030  6E4F               	movwf	(??___fldiv+3)^0,c
 12426  002032  504C               	movf	??___fldiv^0,w,c
 12427  002034  104D               	iorwf	(??___fldiv+1)^0,w,c
 12428  002036  104E               	iorwf	(??___fldiv+2)^0,w,c
 12429  002038  104F               	iorwf	(??___fldiv+3)^0,w,c
 12430  00203A  B4D8               	btfsc	status,2,c
 12431  00203C  EF22  F010         	goto	u8631
 12432  002040  EF24  F010         	goto	u8630
 12433  002044                     u8631:
 12434  002044  EF28  F010         	goto	l1525
 12435  002048                     u8630:
 12436  002048                     l7961:
 12437                           
 12438                           ; BSR set to: 0
 12439  002048  0E01               	movlw	1
 12440  00204A  6F6C               	movwf	___fldiv@aexp& (0+255),b
 12441  00204C  EF31  F010         	goto	l1524
 12442  002050                     l1525:
 12443                           
 12444                           ; BSR set to: 0
 12445  002050  A044               	btfss	___fldiv@b^0,0,c
 12446  002052  EF2D  F010         	goto	u8641
 12447  002056  EF2F  F010         	goto	u8640
 12448  00205A                     u8641:
 12449  00205A  EF31  F010         	goto	l1524
 12450  00205E                     u8640:
 12451  00205E  EF24  F010         	goto	l7961
 12452  002062                     l1524:
 12453                           
 12454                           ; BSR set to: 0
 12455  002062  516C               	movf	___fldiv@aexp& (0+255),w,b
 12456  002064  B4D8               	btfsc	status,2,c
 12457  002066  EF37  F010         	goto	u8651
 12458  00206A  EF39  F010         	goto	u8650
 12459  00206E                     u8651:
 12460  00206E  EF5D  F010         	goto	l7973
 12461  002072                     u8650:
 12462  002072                     
 12463                           ; BSR set to: 0
 12464  002072  0E01               	movlw	1
 12465  002074  2644               	addwf	___fldiv@b^0,f,c
 12466  002076  0E00               	movlw	0
 12467  002078  2245               	addwfc	(___fldiv@b+1)^0,f,c
 12468  00207A  2246               	addwfc	(___fldiv@b+2)^0,f,c
 12469  00207C  2247               	addwfc	(___fldiv@b+3)^0,f,c
 12470  00207E                     
 12471                           ; BSR set to: 0
 12472  00207E  A047               	btfss	(___fldiv@b+3)^0,0,c
 12473  002080  EF44  F010         	goto	u8661
 12474  002084  EF46  F010         	goto	u8660
 12475  002088                     u8661:
 12476  002088  EF5D  F010         	goto	l7973
 12477  00208C                     u8660:
 12478  00208C                     
 12479                           ; BSR set to: 0
 12480  00208C  C044  F04C         	movff	___fldiv@b,??___fldiv
 12481  002090  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
 12482  002094  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
 12483  002098  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
 12484  00209C  344F               	rlcf	(??___fldiv+3)^0,w,c
 12485  00209E  324F               	rrcf	(??___fldiv+3)^0,f,c
 12486  0020A0  324E               	rrcf	(??___fldiv+2)^0,f,c
 12487  0020A2  324D               	rrcf	(??___fldiv+1)^0,f,c
 12488  0020A4  324C               	rrcf	??___fldiv^0,f,c
 12489  0020A6  C04C  F044         	movff	??___fldiv,___fldiv@b
 12490  0020AA  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
 12491  0020AE  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
 12492  0020B2  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
 12493  0020B6                     
 12494                           ; BSR set to: 0
 12495  0020B6  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 12496  0020B8  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12497  0020BA                     l7973:
 12498                           
 12499                           ; BSR set to: 0
 12500  0020BA  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12501  0020BC  EF68  F010         	goto	u8671
 12502  0020C0  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12503  0020C2  E108               	bnz	u8670
 12504  0020C4  2965               	incf	___fldiv@new_exp& (0+255),w,b
 12505  0020C6  A0D8               	btfss	status,0,c
 12506  0020C8  EF68  F010         	goto	u8671
 12507  0020CC  EF6A  F010         	goto	u8670
 12508  0020D0                     u8671:
 12509  0020D0  EF75  F010         	goto	l7977
 12510  0020D4                     u8670:
 12511  0020D4                     
 12512                           ; BSR set to: 0
 12513  0020D4  0E00               	movlw	0
 12514  0020D6  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12515  0020D8  6965               	setf	___fldiv@new_exp& (0+255),b
 12516  0020DA  0E00               	movlw	0
 12517  0020DC  6E44               	movwf	___fldiv@b^0,c
 12518  0020DE  0E00               	movlw	0
 12519  0020E0  6E45               	movwf	(___fldiv@b+1)^0,c
 12520  0020E2  0E00               	movlw	0
 12521  0020E4  6E46               	movwf	(___fldiv@b+2)^0,c
 12522  0020E6  0E00               	movlw	0
 12523  0020E8  6E47               	movwf	(___fldiv@b+3)^0,c
 12524  0020EA                     l7977:
 12525                           
 12526                           ; BSR set to: 0
 12527  0020EA  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12528  0020EC  EF82  F010         	goto	u8680
 12529  0020F0  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12530  0020F2  E106               	bnz	u8681
 12531  0020F4  0565               	decf	___fldiv@new_exp& (0+255),w,b
 12532  0020F6  B0D8               	btfsc	status,0,c
 12533  0020F8  EF80  F010         	goto	u8681
 12534  0020FC  EF82  F010         	goto	u8680
 12535  002100                     u8681:
 12536  002100  EF90  F010         	goto	l7981
 12537  002104                     u8680:
 12538  002104                     
 12539                           ; BSR set to: 0
 12540  002104  0E00               	movlw	0
 12541  002106  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12542  002108  0E00               	movlw	0
 12543  00210A  6F65               	movwf	___fldiv@new_exp& (0+255),b
 12544  00210C  0E00               	movlw	0
 12545  00210E  6E44               	movwf	___fldiv@b^0,c
 12546  002110  0E00               	movlw	0
 12547  002112  6E45               	movwf	(___fldiv@b+1)^0,c
 12548  002114  0E00               	movlw	0
 12549  002116  6E46               	movwf	(___fldiv@b+2)^0,c
 12550  002118  0E00               	movlw	0
 12551  00211A  6E47               	movwf	(___fldiv@b+3)^0,c
 12552  00211C  0E00               	movlw	0
 12553  00211E  6F64               	movwf	___fldiv@sign& (0+255),b
 12554  002120                     l7981:
 12555                           
 12556                           ; BSR set to: 0
 12557  002120  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 12558  002124                     
 12559                           ; BSR set to: 0
 12560  002124  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 12561  002126  EF97  F010         	goto	u8691
 12562  00212A  EF99  F010         	goto	u8690
 12563  00212E                     u8691:
 12564  00212E  EF9C  F010         	goto	l7987
 12565  002132                     u8690:
 12566  002132                     
 12567                           ; BSR set to: 0
 12568  002132  8E46               	bsf	(___fldiv@b+2)^0,7,c
 12569  002134  EF9D  F010         	goto	l7989
 12570  002138                     l7987:
 12571                           
 12572                           ; BSR set to: 0
 12573  002138  9E46               	bcf	(___fldiv@b+2)^0,7,c
 12574  00213A                     l7989:
 12575                           
 12576                           ; BSR set to: 0
 12577  00213A  90D8               	bcf	status,0,c
 12578  00213C  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 12579  00213E  6E47               	movwf	(___fldiv@b+3)^0,c
 12580  002140  EF53  F00F         	goto	l7903
 12581  002144                     l1511:
 12582                           
 12583                           ; BSR set to: 0
 12584  002144  0012               	return		;funcret
 12585  002146                     __end_of___fldiv:
 12586                           	opt callstack 0
 12587                           
 12588 ;; *************** function _dameDistancia *****************
 12589 ;; Defined at:
 12590 ;;		line 26 in file "./ultrasonico.h"
 12591 ;; Parameters:    Size  Location     Type
 12592 ;;  numeroSensor    1    wreg     unsigned char 
 12593 ;; Auto vars:     Size  Location     Type
 12594 ;;  numeroSensor    1   32[COMRAM] unsigned char 
 12595 ;;  distancia       4   33[COMRAM] float 
 12596 ;;  conteo          2   37[COMRAM] unsigned int 
 12597 ;; Return value:  Size  Location     Type
 12598 ;;                  4   26[COMRAM] float 
 12599 ;; Registers used:
 12600 ;;		wreg, status,2, status,0, cstack
 12601 ;; Tracked objects:
 12602 ;;		On entry : 0/0
 12603 ;;		On exit  : 0/0
 12604 ;;		Unchanged: 0/0
 12605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12606 ;;      Params:         4       0       0       0       0       0       0       0       0
 12607 ;;      Locals:         7       0       0       0       0       0       0       0       0
 12608 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12609 ;;      Totals:        13       0       0       0       0       0       0       0       0
 12610 ;;Total ram usage:       13 bytes
 12611 ;; Hardware stack levels used:    1
 12612 ;; Hardware stack levels required when called:    3
 12613 ;; This function calls:
 12614 ;;		___lwdiv
 12615 ;;		___xxtofl
 12616 ;; This function is called by:
 12617 ;;		_inicializarComportamientoBasico
 12618 ;;		_leerSensores
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           	psect	text57
 12623  0033B0                     __ptext57:
 12624                           	opt callstack 0
 12625  0033B0                     _dameDistancia:
 12626                           	opt callstack 25
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;incstack = 0
 12630                           ;dameDistancia@numeroSensor stored from wreg
 12631  0033B0  6E21               	movwf	dameDistancia@numeroSensor^0,c
 12632  0033B2                     
 12633                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
 12634  0033B2  0E00               	movlw	0
 12635  0033B4  6ECF               	movwf	207,c	;volatile
 12636                           
 12637                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
 12638  0033B6  0E00               	movlw	0
 12639  0033B8  6ECE               	movwf	206,c	;volatile
 12640                           
 12641                           ;./ultrasonico.h: 33:     conteo = 0;
 12642  0033BA  0E00               	movlw	0
 12643  0033BC  6E27               	movwf	(dameDistancia@conteo+1)^0,c
 12644  0033BE  0E00               	movlw	0
 12645  0033C0  6E26               	movwf	dameDistancia@conteo^0,c
 12646  0033C2                     
 12647                           ;./ultrasonico.h: 34:     LATD3 = 1;
 12648  0033C2  868C               	bsf	3980,3,c	;volatile
 12649  0033C4                     
 12650                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
 12651  0033C4  0E04               	movlw	4
 12652  0033C6                     u11857:
 12653  0033C6  2EE8               	decfsz	wreg,f,c
 12654  0033C8  D7FE               	bra	u11857
 12655  0033CA                     
 12656                           ;./ultrasonico.h: 36:     LATD3 = 0;
 12657  0033CA  968C               	bcf	3980,3,c	;volatile
 12658                           
 12659                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
 12660  0033CC  EF30  F01A         	goto	l9159
 12661  0033D0                     l185:
 12662  0033D0  A281               	btfss	129,1,c	;volatile
 12663  0033D2  EFED  F019         	goto	u10721
 12664  0033D6  EFEF  F019         	goto	u10720
 12665  0033DA                     u10721:
 12666  0033DA  EFE8  F019         	goto	l185
 12667  0033DE                     u10720:
 12668  0033DE                     
 12669                           ;./ultrasonico.h: 43:             TMR1ON = 1;
 12670  0033DE  80CD               	bsf	4045,0,c	;volatile
 12671  0033E0                     l188:
 12672  0033E0  A281               	btfss	129,1,c	;volatile
 12673  0033E2  EFF5  F019         	goto	u10731
 12674  0033E6  EFF7  F019         	goto	u10730
 12675  0033EA                     u10731:
 12676  0033EA  EF49  F01A         	goto	l193
 12677  0033EE                     u10730:
 12678  0033EE  A09E               	btfss	3998,0,c	;volatile
 12679  0033F0  EFFC  F019         	goto	u10741
 12680  0033F4  EFFE  F019         	goto	u10740
 12681  0033F8                     u10741:
 12682  0033F8  EFF0  F019         	goto	l188
 12683  0033FC                     u10740:
 12684  0033FC  EF49  F01A         	goto	l193
 12685  003400                     l195:
 12686  003400  A481               	btfss	129,2,c	;volatile
 12687  003402  EF05  F01A         	goto	u10751
 12688  003406  EF07  F01A         	goto	u10750
 12689  00340A                     u10751:
 12690  00340A  EF00  F01A         	goto	l195
 12691  00340E                     u10750:
 12692  00340E                     
 12693                           ;./ultrasonico.h: 51:             TMR1ON = 1;
 12694  00340E  80CD               	bsf	4045,0,c	;volatile
 12695  003410                     l198:
 12696  003410  A481               	btfss	129,2,c	;volatile
 12697  003412  EF0D  F01A         	goto	u10761
 12698  003416  EF0F  F01A         	goto	u10760
 12699  00341A                     u10761:
 12700  00341A  EF49  F01A         	goto	l193
 12701  00341E                     u10760:
 12702  00341E  A09E               	btfss	3998,0,c	;volatile
 12703  003420  EF14  F01A         	goto	u10771
 12704  003424  EF16  F01A         	goto	u10770
 12705  003428                     u10771:
 12706  003428  EF08  F01A         	goto	l198
 12707  00342C                     u10770:
 12708  00342C  EF49  F01A         	goto	l193
 12709  003430                     l204:
 12710  003430  A681               	btfss	129,3,c	;volatile
 12711  003432  EF1D  F01A         	goto	u10781
 12712  003436  EF1F  F01A         	goto	u10780
 12713  00343A                     u10781:
 12714  00343A  EF18  F01A         	goto	l204
 12715  00343E                     u10780:
 12716  00343E                     
 12717                           ;./ultrasonico.h: 59:             TMR1ON = 1;
 12718  00343E  80CD               	bsf	4045,0,c	;volatile
 12719  003440                     l207:
 12720  003440  A681               	btfss	129,3,c	;volatile
 12721  003442  EF25  F01A         	goto	u10791
 12722  003446  EF27  F01A         	goto	u10790
 12723  00344A                     u10791:
 12724  00344A  EF49  F01A         	goto	l193
 12725  00344E                     u10790:
 12726  00344E  A09E               	btfss	3998,0,c	;volatile
 12727  003450  EF2C  F01A         	goto	u10801
 12728  003454  EF2E  F01A         	goto	u10800
 12729  003458                     u10801:
 12730  003458  EF20  F01A         	goto	l207
 12731  00345C                     u10800:
 12732  00345C  EF49  F01A         	goto	l193
 12733  003460                     l9159:
 12734  003460  5021               	movf	dameDistancia@numeroSensor^0,w,c
 12735  003462  6E1F               	movwf	??_dameDistancia^0,c
 12736  003464  6A20               	clrf	(??_dameDistancia+1)^0,c
 12737                           
 12738                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12739                           ; Switch size 1, requested type "simple"
 12740                           ; Number of cases is 1, Range of values is 0 to 0
 12741                           ; switch strategies available:
 12742                           ; Name         Instructions Cycles
 12743                           ; simple_byte            4     3 (average)
 12744                           ;	Chosen strategy is simple_byte
 12745  003466  5020               	movf	(??_dameDistancia+1)^0,w,c
 12746  003468  0A00               	xorlw	0	; case 0
 12747  00346A  B4D8               	btfsc	status,2,c
 12748  00346C  EF3A  F01A         	goto	l10411
 12749  003470  EF49  F01A         	goto	l193
 12750  003474                     l10411:
 12751                           
 12752                           ; Switch size 1, requested type "simple"
 12753                           ; Number of cases is 3, Range of values is 1 to 3
 12754                           ; switch strategies available:
 12755                           ; Name         Instructions Cycles
 12756                           ; simple_byte           10     6 (average)
 12757                           ;	Chosen strategy is simple_byte
 12758  003474  501F               	movf	??_dameDistancia^0,w,c
 12759  003476  0A01               	xorlw	1	; case 1
 12760  003478  B4D8               	btfsc	status,2,c
 12761  00347A  EFE8  F019         	goto	l185
 12762  00347E  0A03               	xorlw	3	; case 2
 12763  003480  B4D8               	btfsc	status,2,c
 12764  003482  EF00  F01A         	goto	l195
 12765  003486  0A01               	xorlw	1	; case 3
 12766  003488  B4D8               	btfsc	status,2,c
 12767  00348A  EF18  F01A         	goto	l204
 12768  00348E  EF49  F01A         	goto	l193
 12769  003492                     l193:
 12770                           
 12771                           ;./ultrasonico.h: 66:     TMR1ON = 0;
 12772  003492  90CD               	bcf	4045,0,c	;volatile
 12773                           
 12774                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
 12775  003494  B09E               	btfsc	3998,0,c	;volatile
 12776  003496  EF4F  F01A         	goto	u10811
 12777  00349A  EF51  F01A         	goto	u10810
 12778  00349E                     u10811:
 12779  00349E  EF77  F01A         	goto	l9165
 12780  0034A2                     u10810:
 12781  0034A2                     
 12782                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
 12783  0034A2  50CF               	movf	207,w,c	;volatile
 12784  0034A4  6E20               	movwf	(??_dameDistancia+1)^0,c
 12785  0034A6  6A1F               	clrf	??_dameDistancia^0,c
 12786  0034A8  501F               	movf	??_dameDistancia^0,w,c
 12787  0034AA  1226               	iorwf	dameDistancia@conteo^0,f,c
 12788  0034AC  5020               	movf	(??_dameDistancia+1)^0,w,c
 12789  0034AE  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
 12790                           
 12791                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
 12792  0034B0  50CE               	movf	206,w,c	;volatile
 12793  0034B2  1226               	iorwf	dameDistancia@conteo^0,f,c
 12794  0034B4                     
 12795                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
 12796  0034B4  0E00               	movlw	0
 12797  0034B6  6E09               	movwf	(___lwdiv@divisor+1)^0,c
 12798  0034B8  0E3A               	movlw	58
 12799  0034BA  6E08               	movwf	___lwdiv@divisor^0,c
 12800  0034BC  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
 12801  0034C0  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
 12802  0034C4  EC03  F020         	call	___lwdiv	;wreg free
 12803  0034C8  C006  F00D         	movff	?___lwdiv,___xxtofl@val
 12804  0034CC  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
 12805  0034D0  6A0F               	clrf	(___xxtofl@val+2)^0,c
 12806  0034D2  6A10               	clrf	(___xxtofl@val+3)^0,c
 12807  0034D4  0E00               	movlw	0
 12808  0034D6  EC02  F016         	call	___xxtofl
 12809  0034DA  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
 12810  0034DE  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
 12811  0034E2  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
 12812  0034E6  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
 12813                           
 12814                           ;./ultrasonico.h: 73:     } else {
 12815  0034EA  EF80  F01A         	goto	l9169
 12816  0034EE                     l9165:
 12817  0034EE                     
 12818                           ;./ultrasonico.h: 75:         TMR1IF = 0;
 12819  0034EE  909E               	bcf	3998,0,c	;volatile
 12820                           
 12821                           ;./ultrasonico.h: 76:         distancia = 0;
 12822  0034F0  0E00               	movlw	0
 12823  0034F2  6E22               	movwf	dameDistancia@distancia^0,c
 12824  0034F4  0E00               	movlw	0
 12825  0034F6  6E23               	movwf	(dameDistancia@distancia+1)^0,c
 12826  0034F8  0E00               	movlw	0
 12827  0034FA  6E24               	movwf	(dameDistancia@distancia+2)^0,c
 12828  0034FC  0E00               	movlw	0
 12829  0034FE  6E25               	movwf	(dameDistancia@distancia+3)^0,c
 12830  003500                     l9169:
 12831                           
 12832                           ;./ultrasonico.h: 80:     return distancia;
 12833  003500  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
 12834  003504  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
 12835  003508  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
 12836  00350C  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
 12837  003510  0012               	return		;funcret
 12838  003512                     __end_of_dameDistancia:
 12839                           	opt callstack 0
 12840                           
 12841 ;; *************** function ___xxtofl *****************
 12842 ;; Defined at:
 12843 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 12844 ;; Parameters:    Size  Location     Type
 12845 ;;  sign            1    wreg     unsigned char 
 12846 ;;  val             4   12[COMRAM] long 
 12847 ;; Auto vars:     Size  Location     Type
 12848 ;;  sign            1   20[COMRAM] unsigned char 
 12849 ;;  arg             4   22[COMRAM] unsigned long 
 12850 ;;  exp             1   21[COMRAM] unsigned char 
 12851 ;; Return value:  Size  Location     Type
 12852 ;;                  4   12[COMRAM] unsigned char 
 12853 ;; Registers used:
 12854 ;;		wreg, status,2, status,0
 12855 ;; Tracked objects:
 12856 ;;		On entry : 0/0
 12857 ;;		On exit  : 0/0
 12858 ;;		Unchanged: 0/0
 12859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12860 ;;      Params:         4       0       0       0       0       0       0       0       0
 12861 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12862 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12863 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12864 ;;Total ram usage:       14 bytes
 12865 ;; Hardware stack levels used:    1
 12866 ;; Hardware stack levels required when called:    2
 12867 ;; This function calls:
 12868 ;;		Nothing
 12869 ;; This function is called by:
 12870 ;;		_pwmDuty
 12871 ;;		_dameDistancia
 12872 ;;		_PID
 12873 ;; This function uses a non-reentrant model
 12874 ;;
 12875                           
 12876                           	psect	text58
 12877  002C04                     __ptext58:
 12878                           	opt callstack 0
 12879  002C04                     ___xxtofl:
 12880                           	opt callstack 25
 12881                           
 12882                           ;incstack = 0
 12883                           ;___xxtofl@sign stored from wreg
 12884  002C04  6E15               	movwf	___xxtofl@sign^0,c
 12885  002C06  5015               	movf	___xxtofl@sign^0,w,c
 12886  002C08  B4D8               	btfsc	status,2,c
 12887  002C0A  EF09  F016         	goto	u8961
 12888  002C0E  EF0B  F016         	goto	u8960
 12889  002C12                     u8961:
 12890  002C12  EF2D  F016         	goto	l1584
 12891  002C16                     u8960:
 12892  002C16  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 12893  002C18  EF12  F016         	goto	u8970
 12894  002C1C  EF10  F016         	goto	u8971
 12895  002C20                     u8971:
 12896  002C20  EF2D  F016         	goto	l1584
 12897  002C24                     u8970:
 12898  002C24  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 12899  002C28  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 12900  002C2C  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 12901  002C30  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 12902  002C34  1E11               	comf	??___xxtofl^0,f,c
 12903  002C36  1E12               	comf	(??___xxtofl+1)^0,f,c
 12904  002C38  1E13               	comf	(??___xxtofl+2)^0,f,c
 12905  002C3A  1E14               	comf	(??___xxtofl+3)^0,f,c
 12906  002C3C  2A11               	incf	??___xxtofl^0,f,c
 12907  002C3E  0E00               	movlw	0
 12908  002C40  2212               	addwfc	(??___xxtofl+1)^0,f,c
 12909  002C42  2213               	addwfc	(??___xxtofl+2)^0,f,c
 12910  002C44  2214               	addwfc	(??___xxtofl+3)^0,f,c
 12911  002C46  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 12912  002C4A  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 12913  002C4E  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 12914  002C52  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 12915  002C56  EF35  F016         	goto	l8177
 12916  002C5A                     l1584:
 12917  002C5A  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 12918  002C5E  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12919  002C62  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12920  002C66  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12921  002C6A                     l8177:
 12922  002C6A  500D               	movf	___xxtofl@val^0,w,c
 12923  002C6C  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 12924  002C6E  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 12925  002C70  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 12926  002C72  A4D8               	btfss	status,2,c
 12927  002C74  EF3E  F016         	goto	u8981
 12928  002C78  EF40  F016         	goto	u8980
 12929  002C7C                     u8981:
 12930  002C7C  EF4A  F016         	goto	l8183
 12931  002C80                     u8980:
 12932  002C80  0E00               	movlw	0
 12933  002C82  6E0D               	movwf	?___xxtofl^0,c
 12934  002C84  0E00               	movlw	0
 12935  002C86  6E0E               	movwf	(?___xxtofl+1)^0,c
 12936  002C88  0E00               	movlw	0
 12937  002C8A  6E0F               	movwf	(?___xxtofl+2)^0,c
 12938  002C8C  0E00               	movlw	0
 12939  002C8E  6E10               	movwf	(?___xxtofl+3)^0,c
 12940  002C90  EFDB  F016         	goto	l1587
 12941  002C94                     l8183:
 12942  002C94  0E96               	movlw	150
 12943  002C96  6E16               	movwf	___xxtofl@exp^0,c
 12944  002C98  EF54  F016         	goto	l8187
 12945  002C9C                     l8185:
 12946  002C9C  2A16               	incf	___xxtofl@exp^0,f,c
 12947  002C9E  90D8               	bcf	status,0,c
 12948  002CA0  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 12949  002CA2  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 12950  002CA4  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 12951  002CA6  3217               	rrcf	___xxtofl@arg^0,f,c
 12952  002CA8                     l8187:
 12953  002CA8  0E00               	movlw	0
 12954  002CAA  1417               	andwf	___xxtofl@arg^0,w,c
 12955  002CAC  6E11               	movwf	??___xxtofl^0,c
 12956  002CAE  0E00               	movlw	0
 12957  002CB0  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 12958  002CB2  6E12               	movwf	(??___xxtofl+1)^0,c
 12959  002CB4  0E00               	movlw	0
 12960  002CB6  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 12961  002CB8  6E13               	movwf	(??___xxtofl+2)^0,c
 12962  002CBA  0EFE               	movlw	254
 12963  002CBC  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 12964  002CBE  6E14               	movwf	(??___xxtofl+3)^0,c
 12965  002CC0  5011               	movf	??___xxtofl^0,w,c
 12966  002CC2  1012               	iorwf	(??___xxtofl+1)^0,w,c
 12967  002CC4  1013               	iorwf	(??___xxtofl+2)^0,w,c
 12968  002CC6  1014               	iorwf	(??___xxtofl+3)^0,w,c
 12969  002CC8  A4D8               	btfss	status,2,c
 12970  002CCA  EF69  F016         	goto	u8991
 12971  002CCE  EF6B  F016         	goto	u8990
 12972  002CD2                     u8991:
 12973  002CD2  EF4E  F016         	goto	l8185
 12974  002CD6                     u8990:
 12975  002CD6  EF79  F016         	goto	l1591
 12976  002CDA                     l8189:
 12977  002CDA  2A16               	incf	___xxtofl@exp^0,f,c
 12978  002CDC  0E01               	movlw	1
 12979  002CDE  2617               	addwf	___xxtofl@arg^0,f,c
 12980  002CE0  0E00               	movlw	0
 12981  002CE2  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 12982  002CE4  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 12983  002CE6  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 12984  002CE8  90D8               	bcf	status,0,c
 12985  002CEA  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 12986  002CEC  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 12987  002CEE  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 12988  002CF0  3217               	rrcf	___xxtofl@arg^0,f,c
 12989  002CF2                     l1591:
 12990  002CF2  0E00               	movlw	0
 12991  002CF4  1417               	andwf	___xxtofl@arg^0,w,c
 12992  002CF6  6E11               	movwf	??___xxtofl^0,c
 12993  002CF8  0E00               	movlw	0
 12994  002CFA  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 12995  002CFC  6E12               	movwf	(??___xxtofl+1)^0,c
 12996  002CFE  0E00               	movlw	0
 12997  002D00  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 12998  002D02  6E13               	movwf	(??___xxtofl+2)^0,c
 12999  002D04  0EFF               	movlw	255
 13000  002D06  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 13001  002D08  6E14               	movwf	(??___xxtofl+3)^0,c
 13002  002D0A  5011               	movf	??___xxtofl^0,w,c
 13003  002D0C  1012               	iorwf	(??___xxtofl+1)^0,w,c
 13004  002D0E  1013               	iorwf	(??___xxtofl+2)^0,w,c
 13005  002D10  1014               	iorwf	(??___xxtofl+3)^0,w,c
 13006  002D12  A4D8               	btfss	status,2,c
 13007  002D14  EF8E  F016         	goto	u9001
 13008  002D18  EF90  F016         	goto	u9000
 13009  002D1C                     u9001:
 13010  002D1C  EF6D  F016         	goto	l8189
 13011  002D20                     u9000:
 13012  002D20  EF98  F016         	goto	l8197
 13013  002D24                     l8195:
 13014  002D24  0616               	decf	___xxtofl@exp^0,f,c
 13015  002D26  90D8               	bcf	status,0,c
 13016  002D28  3617               	rlcf	___xxtofl@arg^0,f,c
 13017  002D2A  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 13018  002D2C  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 13019  002D2E  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 13020  002D30                     l8197:
 13021  002D30  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 13022  002D32  EF9D  F016         	goto	u9011
 13023  002D36  EF9F  F016         	goto	u9010
 13024  002D3A                     u9011:
 13025  002D3A  EFA7  F016         	goto	l1598
 13026  002D3E                     u9010:
 13027  002D3E  0E02               	movlw	2
 13028  002D40  6016               	cpfslt	___xxtofl@exp^0,c
 13029  002D42  EFA5  F016         	goto	u9021
 13030  002D46  EFA7  F016         	goto	u9020
 13031  002D4A                     u9021:
 13032  002D4A  EF92  F016         	goto	l8195
 13033  002D4E                     u9020:
 13034  002D4E                     l1598:
 13035  002D4E  B016               	btfsc	___xxtofl@exp^0,0,c
 13036  002D50  EFAC  F016         	goto	u9031
 13037  002D54  EFAE  F016         	goto	u9030
 13038  002D58                     u9031:
 13039  002D58  EFAF  F016         	goto	l8203
 13040  002D5C                     u9030:
 13041  002D5C  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 13042  002D5E                     l8203:
 13043  002D5E  90D8               	bcf	status,0,c
 13044  002D60  3216               	rrcf	___xxtofl@exp^0,f,c
 13045  002D62  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 13046  002D66  6A12               	clrf	(??___xxtofl+1)^0,c
 13047  002D68  6A13               	clrf	(??___xxtofl+2)^0,c
 13048  002D6A  6A14               	clrf	(??___xxtofl+3)^0,c
 13049  002D6C  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 13050  002D70  6A13               	clrf	(??___xxtofl+2)^0,c
 13051  002D72  6A12               	clrf	(??___xxtofl+1)^0,c
 13052  002D74  6A11               	clrf	??___xxtofl^0,c
 13053  002D76  5011               	movf	??___xxtofl^0,w,c
 13054  002D78  1217               	iorwf	___xxtofl@arg^0,f,c
 13055  002D7A  5012               	movf	(??___xxtofl+1)^0,w,c
 13056  002D7C  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 13057  002D7E  5013               	movf	(??___xxtofl+2)^0,w,c
 13058  002D80  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 13059  002D82  5014               	movf	(??___xxtofl+3)^0,w,c
 13060  002D84  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 13061  002D86  5015               	movf	___xxtofl@sign^0,w,c
 13062  002D88  B4D8               	btfsc	status,2,c
 13063  002D8A  EFC9  F016         	goto	u9041
 13064  002D8E  EFCB  F016         	goto	u9040
 13065  002D92                     u9041:
 13066  002D92  EFD3  F016         	goto	l8213
 13067  002D96                     u9040:
 13068  002D96  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 13069  002D98  EFD2  F016         	goto	u9050
 13070  002D9C  EFD0  F016         	goto	u9051
 13071  002DA0                     u9051:
 13072  002DA0  EFD3  F016         	goto	l8213
 13073  002DA4                     u9050:
 13074  002DA4  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 13075  002DA6                     l8213:
 13076  002DA6  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 13077  002DAA  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 13078  002DAE  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 13079  002DB2  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 13080  002DB6                     l1587:
 13081  002DB6  0012               	return		;funcret
 13082  002DB8                     __end_of___xxtofl:
 13083                           	opt callstack 0
 13084                           
 13085 ;; *************** function ___lwdiv *****************
 13086 ;; Defined at:
 13087 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 13088 ;; Parameters:    Size  Location     Type
 13089 ;;  dividend        2    5[COMRAM] unsigned int 
 13090 ;;  divisor         2    7[COMRAM] unsigned int 
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;  quotient        2   10[COMRAM] unsigned int 
 13093 ;;  counter         1    9[COMRAM] unsigned char 
 13094 ;; Return value:  Size  Location     Type
 13095 ;;                  2    5[COMRAM] unsigned int 
 13096 ;; Registers used:
 13097 ;;		wreg, status,2, status,0
 13098 ;; Tracked objects:
 13099 ;;		On entry : 0/0
 13100 ;;		On exit  : 0/0
 13101 ;;		Unchanged: 0/0
 13102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13103 ;;      Params:         4       0       0       0       0       0       0       0       0
 13104 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13106 ;;      Totals:         7       0       0       0       0       0       0       0       0
 13107 ;;Total ram usage:        7 bytes
 13108 ;; Hardware stack levels used:    1
 13109 ;; Hardware stack levels required when called:    2
 13110 ;; This function calls:
 13111 ;;		Nothing
 13112 ;; This function is called by:
 13113 ;;		_dameDistancia
 13114 ;; This function uses a non-reentrant model
 13115 ;;
 13116                           
 13117                           	psect	text59
 13118  004006                     __ptext59:
 13119                           	opt callstack 0
 13120  004006                     ___lwdiv:
 13121                           	opt callstack 25
 13122  004006  0E00               	movlw	0
 13123  004008  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 13124  00400A  0E00               	movlw	0
 13125  00400C  6E0B               	movwf	___lwdiv@quotient^0,c
 13126  00400E  5008               	movf	___lwdiv@divisor^0,w,c
 13127  004010  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
 13128  004012  B4D8               	btfsc	status,2,c
 13129  004014  EF0E  F020         	goto	u10691
 13130  004018  EF10  F020         	goto	u10690
 13131  00401C                     u10691:
 13132  00401C  EF38  F020         	goto	l1420
 13133  004020                     u10690:
 13134  004020  0E01               	movlw	1
 13135  004022  6E0A               	movwf	___lwdiv@counter^0,c
 13136  004024  EF18  F020         	goto	l9129
 13137  004028                     l9127:
 13138  004028  90D8               	bcf	status,0,c
 13139  00402A  3608               	rlcf	___lwdiv@divisor^0,f,c
 13140  00402C  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
 13141  00402E  2A0A               	incf	___lwdiv@counter^0,f,c
 13142  004030                     l9129:
 13143  004030  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
 13144  004032  EF1D  F020         	goto	u10701
 13145  004036  EF1F  F020         	goto	u10700
 13146  00403A                     u10701:
 13147  00403A  EF14  F020         	goto	l9127
 13148  00403E                     u10700:
 13149  00403E                     l9131:
 13150  00403E  90D8               	bcf	status,0,c
 13151  004040  360B               	rlcf	___lwdiv@quotient^0,f,c
 13152  004042  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 13153  004044  5008               	movf	___lwdiv@divisor^0,w,c
 13154  004046  5C06               	subwf	___lwdiv@dividend^0,w,c
 13155  004048  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 13156  00404A  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
 13157  00404C  A0D8               	btfss	status,0,c
 13158  00404E  EF2B  F020         	goto	u10711
 13159  004052  EF2D  F020         	goto	u10710
 13160  004056                     u10711:
 13161  004056  EF32  F020         	goto	l9139
 13162  00405A                     u10710:
 13163  00405A  5008               	movf	___lwdiv@divisor^0,w,c
 13164  00405C  5E06               	subwf	___lwdiv@dividend^0,f,c
 13165  00405E  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 13166  004060  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
 13167  004062  800B               	bsf	___lwdiv@quotient^0,0,c
 13168  004064                     l9139:
 13169  004064  90D8               	bcf	status,0,c
 13170  004066  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
 13171  004068  3208               	rrcf	___lwdiv@divisor^0,f,c
 13172  00406A  2E0A               	decfsz	___lwdiv@counter^0,f,c
 13173  00406C  EF1F  F020         	goto	l9131
 13174  004070                     l1420:
 13175  004070  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
 13176  004074  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13177  004078  0012               	return		;funcret
 13178  00407A                     __end_of___lwdiv:
 13179                           	opt callstack 0
 13180                           
 13181 ;; *************** function _configurarAdc *****************
 13182 ;; Defined at:
 13183 ;;		line 7 in file "./adc.h"
 13184 ;; Parameters:    Size  Location     Type
 13185 ;;		None
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;		None
 13188 ;; Return value:  Size  Location     Type
 13189 ;;                  1    wreg      void 
 13190 ;; Registers used:
 13191 ;;		wreg, status,2
 13192 ;; Tracked objects:
 13193 ;;		On entry : 0/0
 13194 ;;		On exit  : 0/0
 13195 ;;		Unchanged: 0/0
 13196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13197 ;;      Params:         0       0       0       0       0       0       0       0       0
 13198 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13199 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13200 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13201 ;;Total ram usage:        0 bytes
 13202 ;; Hardware stack levels used:    1
 13203 ;; Hardware stack levels required when called:    2
 13204 ;; This function calls:
 13205 ;;		Nothing
 13206 ;; This function is called by:
 13207 ;;		_main
 13208 ;; This function uses a non-reentrant model
 13209 ;;
 13210                           
 13211                           	psect	text60
 13212  00487A                     __ptext60:
 13213                           	opt callstack 0
 13214  00487A                     _configurarAdc:
 13215                           	opt callstack 28
 13216  00487A                     
 13217                           ;./adc.h: 8:     ADCON1 = 0b00001110;
 13218  00487A  0E0E               	movlw	14
 13219  00487C  6EC1               	movwf	193,c	;volatile
 13220                           
 13221                           ;./adc.h: 9:     ADCON2 = 0b10100101;
 13222  00487E  0EA5               	movlw	165
 13223  004880  6EC0               	movwf	192,c	;volatile
 13224  004882  0012               	return		;funcret
 13225  004884                     __end_of_configurarAdc:
 13226                           	opt callstack 0
 13227                           
 13228 ;; *************** function _configPwm *****************
 13229 ;; Defined at:
 13230 ;;		line 47 in file "./pwm.h"
 13231 ;; Parameters:    Size  Location     Type
 13232 ;;  channel         1    wreg     unsigned char 
 13233 ;; Auto vars:     Size  Location     Type
 13234 ;;  channel         1    7[COMRAM] unsigned char 
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  1    wreg      void 
 13237 ;; Registers used:
 13238 ;;		wreg, status,2, status,0
 13239 ;; Tracked objects:
 13240 ;;		On entry : 0/0
 13241 ;;		On exit  : 0/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13244 ;;      Params:         0       0       0       0       0       0       0       0       0
 13245 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13246 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13247 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13248 ;;Total ram usage:        3 bytes
 13249 ;; Hardware stack levels used:    1
 13250 ;; Hardware stack levels required when called:    2
 13251 ;; This function calls:
 13252 ;;		Nothing
 13253 ;; This function is called by:
 13254 ;;		_main
 13255 ;; This function uses a non-reentrant model
 13256 ;;
 13257                           
 13258                           	psect	text61
 13259  00449A                     __ptext61:
 13260                           	opt callstack 0
 13261  00449A                     _configPwm:
 13262                           	opt callstack 28
 13263                           
 13264                           ;incstack = 0
 13265                           ;configPwm@channel stored from wreg
 13266  00449A  6E08               	movwf	configPwm@channel^0,c
 13267  00449C                     
 13268                           ;./pwm.h: 56:         T2CKPS0 = 1;
 13269  00449C  80CA               	bsf	4042,0,c	;volatile
 13270                           
 13271                           ;./pwm.h: 57:         T2CKPS1 = 1;
 13272  00449E  82CA               	bsf	4042,1,c	;volatile
 13273  0044A0                     
 13274                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
 13275  0044A0  0E7C               	movlw	124
 13276  0044A2  6ECB               	movwf	203,c	;volatile
 13277                           
 13278                           ;./pwm.h: 63:     switch (channel) {
 13279  0044A4  EF5E  F022         	goto	l9345
 13280  0044A8                     l165:
 13281                           
 13282                           ;./pwm.h: 66:             TRISC2 = 0;
 13283  0044A8  9494               	bcf	3988,2,c	;volatile
 13284                           
 13285                           ;./pwm.h: 67:             CCP1M3 = 1;
 13286  0044AA  86BD               	bsf	4029,3,c	;volatile
 13287                           
 13288                           ;./pwm.h: 68:             CCP1M2 = 1;
 13289  0044AC  84BD               	bsf	4029,2,c	;volatile
 13290                           
 13291                           ;./pwm.h: 71:             break;
 13292  0044AE  EF73  F022         	goto	l166
 13293  0044B2                     l167:
 13294                           
 13295                           ;./pwm.h: 74:             TRISC1 = 0;
 13296  0044B2  9294               	bcf	3988,1,c	;volatile
 13297                           
 13298                           ;./pwm.h: 75:             CCP2M3 = 1;
 13299  0044B4  86BA               	bsf	4026,3,c	;volatile
 13300                           
 13301                           ;./pwm.h: 76:             CCP2M2 = 1;
 13302  0044B6  84BA               	bsf	4026,2,c	;volatile
 13303                           
 13304                           ;./pwm.h: 77:             break;
 13305  0044B8  EF73  F022         	goto	l166
 13306  0044BC                     l9345:
 13307  0044BC  5008               	movf	configPwm@channel^0,w,c
 13308  0044BE  6E06               	movwf	??_configPwm^0,c
 13309  0044C0  6A07               	clrf	(??_configPwm+1)^0,c
 13310                           
 13311                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13312                           ; Switch size 1, requested type "simple"
 13313                           ; Number of cases is 1, Range of values is 0 to 0
 13314                           ; switch strategies available:
 13315                           ; Name         Instructions Cycles
 13316                           ; simple_byte            4     3 (average)
 13317                           ;	Chosen strategy is simple_byte
 13318  0044C2  5007               	movf	(??_configPwm+1)^0,w,c
 13319  0044C4  0A00               	xorlw	0	; case 0
 13320  0044C6  B4D8               	btfsc	status,2,c
 13321  0044C8  EF68  F022         	goto	l10413
 13322  0044CC  EF73  F022         	goto	l166
 13323  0044D0                     l10413:
 13324                           
 13325                           ; Switch size 1, requested type "simple"
 13326                           ; Number of cases is 2, Range of values is 1 to 2
 13327                           ; switch strategies available:
 13328                           ; Name         Instructions Cycles
 13329                           ; simple_byte            7     4 (average)
 13330                           ;	Chosen strategy is simple_byte
 13331  0044D0  5006               	movf	??_configPwm^0,w,c
 13332  0044D2  0A01               	xorlw	1	; case 1
 13333  0044D4  B4D8               	btfsc	status,2,c
 13334  0044D6  EF54  F022         	goto	l165
 13335  0044DA  0A03               	xorlw	3	; case 2
 13336  0044DC  B4D8               	btfsc	status,2,c
 13337  0044DE  EF59  F022         	goto	l167
 13338  0044E2  EF73  F022         	goto	l166
 13339  0044E6                     l166:
 13340                           
 13341                           ;./pwm.h: 81:     TMR2ON = 1;
 13342  0044E6  84CA               	bsf	4042,2,c	;volatile
 13343  0044E8  0012               	return		;funcret
 13344  0044EA                     __end_of_configPwm:
 13345                           	opt callstack 0
 13346                           
 13347 ;; *************** function _UART_init *****************
 13348 ;; Defined at:
 13349 ;;		line 13 in file "./UART.h"
 13350 ;; Parameters:    Size  Location     Type
 13351 ;;  BAUD            4   31[COMRAM] long 
 13352 ;; Auto vars:     Size  Location     Type
 13353 ;;  frecuenciaCr    4    0        long 
 13354 ;; Return value:  Size  Location     Type
 13355 ;;                  1    wreg      void 
 13356 ;; Registers used:
 13357 ;;		wreg, status,2, status,0, cstack
 13358 ;; Tracked objects:
 13359 ;;		On entry : 0/0
 13360 ;;		On exit  : 0/0
 13361 ;;		Unchanged: 0/0
 13362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13363 ;;      Params:         4       0       0       0       0       0       0       0       0
 13364 ;;      Locals:         8       0       0       0       0       0       0       0       0
 13365 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13366 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13367 ;;Total ram usage:       12 bytes
 13368 ;; Hardware stack levels used:    1
 13369 ;; Hardware stack levels required when called:    3
 13370 ;; This function calls:
 13371 ;;		___aldiv
 13372 ;; This function is called by:
 13373 ;;		_main
 13374 ;; This function uses a non-reentrant model
 13375 ;;
 13376                           
 13377                           	psect	text62
 13378  0040EC                     __ptext62:
 13379                           	opt callstack 0
 13380  0040EC                     _UART_init:
 13381                           	opt callstack 27
 13382  0040EC                     
 13383                           ;./UART.h: 16:     TRISC6 = 0;
 13384  0040EC  9C94               	bcf	3988,6,c	;volatile
 13385  0040EE                     
 13386                           ;./UART.h: 17:     TRISC7 = 1;
 13387  0040EE  8E94               	bsf	3988,7,c	;volatile
 13388  0040F0                     
 13389                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 13390  0040F0  0E10               	movlw	16
 13391  0040F2  6E16               	movwf	___aldiv@divisor^0,c
 13392  0040F4  0E00               	movlw	0
 13393  0040F6  6E17               	movwf	(___aldiv@divisor+1)^0,c
 13394  0040F8  0E00               	movlw	0
 13395  0040FA  6E18               	movwf	(___aldiv@divisor+2)^0,c
 13396  0040FC  0E00               	movlw	0
 13397  0040FE  6E19               	movwf	(___aldiv@divisor+3)^0,c
 13398  004100  0E00               	movlw	0
 13399  004102  6E12               	movwf	___aldiv@dividend^0,c
 13400  004104  0E09               	movlw	9
 13401  004106  6E13               	movwf	(___aldiv@dividend+1)^0,c
 13402  004108  0E3D               	movlw	61
 13403  00410A  6E14               	movwf	(___aldiv@dividend+2)^0,c
 13404  00410C  0E00               	movlw	0
 13405  00410E  6E15               	movwf	(___aldiv@dividend+3)^0,c
 13406  004110  EC89  F01A         	call	___aldiv	;wreg free
 13407  004114  C012  F028         	movff	?___aldiv,_UART_init$1816
 13408  004118  C013  F029         	movff	?___aldiv+1,_UART_init$1816+1
 13409  00411C  C014  F02A         	movff	?___aldiv+2,_UART_init$1816+2
 13410  004120  C015  F02B         	movff	?___aldiv+3,_UART_init$1816+3
 13411  004124                     
 13412                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 13413  004124  C028  F012         	movff	_UART_init$1816,___aldiv@dividend
 13414  004128  C029  F013         	movff	_UART_init$1816+1,___aldiv@dividend+1
 13415  00412C  C02A  F014         	movff	_UART_init$1816+2,___aldiv@dividend+2
 13416  004130  C02B  F015         	movff	_UART_init$1816+3,___aldiv@dividend+3
 13417  004134  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 13418  004138  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 13419  00413C  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 13420  004140  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 13421  004144  EC89  F01A         	call	___aldiv	;wreg free
 13422  004148  0412               	decf	?___aldiv^0,w,c
 13423  00414A  6EAF               	movwf	175,c	;volatile
 13424  00414C                     
 13425                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 13426  00414C  84AC               	bsf	172,2,c	;volatile
 13427  00414E                     
 13428                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 13429  00414E  98AC               	bcf	172,4,c	;volatile
 13430  004150                     
 13431                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 13432  004150  8EAB               	bsf	171,7,c	;volatile
 13433  004152                     
 13434                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 13435  004152  9CAC               	bcf	172,6,c	;volatile
 13436  004154                     
 13437                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 13438  004154  8AAC               	bsf	172,5,c	;volatile
 13439  004156                     
 13440                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 13441  004156  9CAB               	bcf	171,6,c	;volatile
 13442  004158                     
 13443                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 13444  004158  88AB               	bsf	171,4,c	;volatile
 13445  00415A  0012               	return		;funcret
 13446  00415C                     __end_of_UART_init:
 13447                           	opt callstack 0
 13448                           
 13449 ;; *************** function ___aldiv *****************
 13450 ;; Defined at:
 13451 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 13452 ;; Parameters:    Size  Location     Type
 13453 ;;  dividend        4   17[COMRAM] long 
 13454 ;;  divisor         4   21[COMRAM] long 
 13455 ;; Auto vars:     Size  Location     Type
 13456 ;;  quotient        4   27[COMRAM] long 
 13457 ;;  sign            1   26[COMRAM] unsigned char 
 13458 ;;  counter         1   25[COMRAM] unsigned char 
 13459 ;; Return value:  Size  Location     Type
 13460 ;;                  4   17[COMRAM] long 
 13461 ;; Registers used:
 13462 ;;		wreg, status,2, status,0
 13463 ;; Tracked objects:
 13464 ;;		On entry : 0/0
 13465 ;;		On exit  : 0/0
 13466 ;;		Unchanged: 0/0
 13467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13468 ;;      Params:         8       0       0       0       0       0       0       0       0
 13469 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13470 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13471 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13472 ;;Total ram usage:       14 bytes
 13473 ;; Hardware stack levels used:    1
 13474 ;; Hardware stack levels required when called:    2
 13475 ;; This function calls:
 13476 ;;		Nothing
 13477 ;; This function is called by:
 13478 ;;		_map
 13479 ;;		_UART_init
 13480 ;; This function uses a non-reentrant model
 13481 ;;
 13482                           
 13483                           	psect	text63
 13484  003512                     __ptext63:
 13485                           	opt callstack 0
 13486  003512                     ___aldiv:
 13487                           	opt callstack 24
 13488  003512  0E00               	movlw	0
 13489  003514  6E1B               	movwf	___aldiv@sign^0,c
 13490  003516  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 13491  003518  EF92  F01A         	goto	u7980
 13492  00351C  EF90  F01A         	goto	u7981
 13493  003520                     u7981:
 13494  003520  EF9C  F01A         	goto	l7595
 13495  003524                     u7980:
 13496  003524  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 13497  003526  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 13498  003528  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 13499  00352A  6C16               	negf	___aldiv@divisor^0,c
 13500  00352C  0E00               	movlw	0
 13501  00352E  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 13502  003530  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 13503  003532  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 13504  003534  0E01               	movlw	1
 13505  003536  6E1B               	movwf	___aldiv@sign^0,c
 13506  003538                     l7595:
 13507  003538  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 13508  00353A  EFA3  F01A         	goto	u7990
 13509  00353E  EFA1  F01A         	goto	u7991
 13510  003542                     u7991:
 13511  003542  EFAD  F01A         	goto	l7601
 13512  003546                     u7990:
 13513  003546  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 13514  003548  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 13515  00354A  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 13516  00354C  6C12               	negf	___aldiv@dividend^0,c
 13517  00354E  0E00               	movlw	0
 13518  003550  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 13519  003552  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 13520  003554  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 13521  003556  0E01               	movlw	1
 13522  003558  1A1B               	xorwf	___aldiv@sign^0,f,c
 13523  00355A                     l7601:
 13524  00355A  0E00               	movlw	0
 13525  00355C  6E1C               	movwf	___aldiv@quotient^0,c
 13526  00355E  0E00               	movlw	0
 13527  003560  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 13528  003562  0E00               	movlw	0
 13529  003564  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 13530  003566  0E00               	movlw	0
 13531  003568  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 13532  00356A  5016               	movf	___aldiv@divisor^0,w,c
 13533  00356C  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 13534  00356E  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 13535  003570  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 13536  003572  B4D8               	btfsc	status,2,c
 13537  003574  EFBE  F01A         	goto	u8001
 13538  003578  EFC0  F01A         	goto	u8000
 13539  00357C                     u8001:
 13540  00357C  EFF6  F01A         	goto	l7623
 13541  003580                     u8000:
 13542  003580  0E01               	movlw	1
 13543  003582  6E1A               	movwf	___aldiv@counter^0,c
 13544  003584  EFCA  F01A         	goto	l7609
 13545  003588                     l7607:
 13546  003588  90D8               	bcf	status,0,c
 13547  00358A  3616               	rlcf	___aldiv@divisor^0,f,c
 13548  00358C  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 13549  00358E  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 13550  003590  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 13551  003592  2A1A               	incf	___aldiv@counter^0,f,c
 13552  003594                     l7609:
 13553  003594  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 13554  003596  EFCF  F01A         	goto	u8011
 13555  00359A  EFD1  F01A         	goto	u8010
 13556  00359E                     u8011:
 13557  00359E  EFC4  F01A         	goto	l7607
 13558  0035A2                     u8010:
 13559  0035A2                     l7611:
 13560  0035A2  90D8               	bcf	status,0,c
 13561  0035A4  361C               	rlcf	___aldiv@quotient^0,f,c
 13562  0035A6  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 13563  0035A8  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 13564  0035AA  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 13565  0035AC  5016               	movf	___aldiv@divisor^0,w,c
 13566  0035AE  5C12               	subwf	___aldiv@dividend^0,w,c
 13567  0035B0  5017               	movf	(___aldiv@divisor+1)^0,w,c
 13568  0035B2  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 13569  0035B4  5018               	movf	(___aldiv@divisor+2)^0,w,c
 13570  0035B6  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 13571  0035B8  5019               	movf	(___aldiv@divisor+3)^0,w,c
 13572  0035BA  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 13573  0035BC  A0D8               	btfss	status,0,c
 13574  0035BE  EFE3  F01A         	goto	u8021
 13575  0035C2  EFE5  F01A         	goto	u8020
 13576  0035C6                     u8021:
 13577  0035C6  EFEE  F01A         	goto	l7619
 13578  0035CA                     u8020:
 13579  0035CA  5016               	movf	___aldiv@divisor^0,w,c
 13580  0035CC  5E12               	subwf	___aldiv@dividend^0,f,c
 13581  0035CE  5017               	movf	(___aldiv@divisor+1)^0,w,c
 13582  0035D0  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 13583  0035D2  5018               	movf	(___aldiv@divisor+2)^0,w,c
 13584  0035D4  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 13585  0035D6  5019               	movf	(___aldiv@divisor+3)^0,w,c
 13586  0035D8  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 13587  0035DA  801C               	bsf	___aldiv@quotient^0,0,c
 13588  0035DC                     l7619:
 13589  0035DC  90D8               	bcf	status,0,c
 13590  0035DE  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 13591  0035E0  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 13592  0035E2  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 13593  0035E4  3216               	rrcf	___aldiv@divisor^0,f,c
 13594  0035E6  2E1A               	decfsz	___aldiv@counter^0,f,c
 13595  0035E8  EFD1  F01A         	goto	l7611
 13596  0035EC                     l7623:
 13597  0035EC  501B               	movf	___aldiv@sign^0,w,c
 13598  0035EE  B4D8               	btfsc	status,2,c
 13599  0035F0  EFFC  F01A         	goto	u8031
 13600  0035F4  EFFE  F01A         	goto	u8030
 13601  0035F8                     u8031:
 13602  0035F8  EF06  F01B         	goto	l7627
 13603  0035FC                     u8030:
 13604  0035FC  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 13605  0035FE  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 13606  003600  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 13607  003602  6C1C               	negf	___aldiv@quotient^0,c
 13608  003604  0E00               	movlw	0
 13609  003606  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 13610  003608  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 13611  00360A  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 13612  00360C                     l7627:
 13613  00360C  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 13614  003610  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 13615  003614  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 13616  003618  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 13617  00361C  0012               	return		;funcret
 13618  00361E                     __end_of___aldiv:
 13619                           	opt callstack 0
 13620                           
 13621 ;; *************** function _boton *****************
 13622 ;; Defined at:
 13623 ;;		line 126 in file "main.c"
 13624 ;; Parameters:    Size  Location     Type
 13625 ;;		None
 13626 ;; Auto vars:     Size  Location     Type
 13627 ;;		None
 13628 ;; Return value:  Size  Location     Type
 13629 ;;                  1    wreg      void 
 13630 ;; Registers used:
 13631 ;;		wreg, status,2, status,0, cstack
 13632 ;; Tracked objects:
 13633 ;;		On entry : 0/0
 13634 ;;		On exit  : 0/0
 13635 ;;		Unchanged: 0/0
 13636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13637 ;;      Params:         0       0       0       0       0       0       0       0       0
 13638 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13639 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13640 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13641 ;;Total ram usage:        2 bytes
 13642 ;; Hardware stack levels used:    1
 13643 ;; Hardware stack levels required when called:    1
 13644 ;; This function calls:
 13645 ;;		_antiRebote
 13646 ;; This function is called by:
 13647 ;;		Interrupt level 2
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651                           	psect	intcode
 13652  000008                     __pintcode:
 13653                           	opt callstack 0
 13654  000008                     _boton:
 13655                           	opt callstack 20
 13656                           
 13657                           ;incstack = 0
 13658  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13659  00000A  EDD1  F021         	call	int_func,f	;refresh shadow registers
 13660                           
 13661                           	psect	intcode_body
 13662  0043A2                     __pintcode_body:
 13663                           	opt callstack 20
 13664  0043A2                     int_func:
 13665                           	opt callstack 20
 13666  0043A2  0006               	pop		; remove dummy address from shadow register refresh
 13667  0043A4                     
 13668                           ;main.c: 128:     if (INT0IF)
 13669  0043A4  A2F2               	btfss	4082,1,c	;volatile
 13670  0043A6  EFD7  F021         	goto	i2u718_41
 13671  0043AA  EFD9  F021         	goto	i2u718_40
 13672  0043AE                     i2u718_41:
 13673  0043AE  EFF9  F021         	goto	i2l280
 13674  0043B2                     i2u718_40:
 13675  0043B2                     
 13676                           ;main.c: 129:     {;main.c: 130:         antiRebote(1);
 13677  0043B2  0E01               	movlw	1
 13678  0043B4  ECA5  F021         	call	_antiRebote
 13679  0043B8                     
 13680                           ;main.c: 131:         if (pausa) {
 13681  0043B8  0101               	movlb	1	; () banked
 13682  0043BA  51D0               	movf	_pausa& (0+255),w,b
 13683  0043BC  B4D8               	btfsc	status,2,c
 13684  0043BE  EFE3  F021         	goto	i2u719_41
 13685  0043C2  EFE5  F021         	goto	i2u719_40
 13686  0043C6                     i2u719_41:
 13687  0043C6  EFF5  F021         	goto	i2l278
 13688  0043CA                     i2u719_40:
 13689  0043CA                     
 13690                           ; BSR set to: 1
 13691                           ;main.c: 132:             pausa = 0;
 13692  0043CA  0E00               	movlw	0
 13693  0043CC  6FD0               	movwf	_pausa& (0+255),b
 13694  0043CE                     
 13695                           ; BSR set to: 1
 13696                           ;main.c: 133:             LATD2 = 1;
 13697  0043CE  848C               	bsf	3980,2,c	;volatile
 13698  0043D0                     
 13699                           ; BSR set to: 1
 13700                           ;main.c: 134:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 13701  0043D0  0E10               	movlw	16
 13702  0043D2  6E05               	movwf	(??_boton+1)^0,c
 13703  0043D4  0E39               	movlw	57
 13704  0043D6  6E04               	movwf	??_boton^0,c
 13705  0043D8  0E0E               	movlw	14
 13706  0043DA                     i2u1186_47:
 13707  0043DA  2EE8               	decfsz	wreg,f,c
 13708  0043DC  D7FE               	bra	i2u1186_47
 13709  0043DE  2E04               	decfsz	??_boton^0,f,c
 13710  0043E0  D7FC               	bra	i2u1186_47
 13711  0043E2  2E05               	decfsz	(??_boton+1)^0,f,c
 13712  0043E4  D7FA               	bra	i2u1186_47
 13713                           
 13714                           ;main.c: 135:         } else {
 13715  0043E6  EFF8  F021         	goto	i2l6611
 13716  0043EA                     i2l278:
 13717                           
 13718                           ; BSR set to: 1
 13719                           ;main.c: 136:             LATD2 = 0;
 13720  0043EA  948C               	bcf	3980,2,c	;volatile
 13721  0043EC                     
 13722                           ; BSR set to: 1
 13723                           ;main.c: 137:             pausa = 1;
 13724  0043EC  0E01               	movlw	1
 13725  0043EE  6FD0               	movwf	_pausa& (0+255),b
 13726  0043F0                     i2l6611:
 13727                           
 13728                           ;main.c: 140:         INT0IF = 0;
 13729  0043F0  92F2               	bcf	4082,1,c	;volatile
 13730  0043F2                     i2l280:
 13731  0043F2  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13732  0043F4  0011               	retfie		f
 13733  0043F6                     __end_of_boton:
 13734                           	opt callstack 0
 13735                           
 13736 ;; *************** function _antiRebote *****************
 13737 ;; Defined at:
 13738 ;;		line 238 in file "main.c"
 13739 ;; Parameters:    Size  Location     Type
 13740 ;;  pin             1    wreg     unsigned char 
 13741 ;; Auto vars:     Size  Location     Type
 13742 ;;  pin             1    2[COMRAM] unsigned char 
 13743 ;; Return value:  Size  Location     Type
 13744 ;;                  1    wreg      void 
 13745 ;; Registers used:
 13746 ;;		wreg, status,2, status,0
 13747 ;; Tracked objects:
 13748 ;;		On entry : 0/0
 13749 ;;		On exit  : 0/0
 13750 ;;		Unchanged: 0/0
 13751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13752 ;;      Params:         0       0       0       0       0       0       0       0       0
 13753 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13754 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13755 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13756 ;;Total ram usage:        3 bytes
 13757 ;; Hardware stack levels used:    1
 13758 ;; This function calls:
 13759 ;;		Nothing
 13760 ;; This function is called by:
 13761 ;;		_boton
 13762 ;; This function uses a non-reentrant model
 13763 ;;
 13764                           
 13765                           	psect	text65
 13766  00434A                     __ptext65:
 13767                           	opt callstack 0
 13768  00434A                     _antiRebote:
 13769                           	opt callstack 20
 13770                           
 13771                           ;incstack = 0
 13772                           ;antiRebote@pin stored from wreg
 13773  00434A  6E03               	movwf	antiRebote@pin^0,c
 13774  00434C                     
 13775                           ;main.c: 240:     switch (pin) {
 13776  00434C  EFBF  F021         	goto	i2l6493
 13777  004350                     i2l314:
 13778  004350  A081               	btfss	129,0,c	;volatile
 13779  004352  EFAD  F021         	goto	i2u707_41
 13780  004356  EFAF  F021         	goto	i2u707_40
 13781  00435A                     i2u707_41:
 13782  00435A  EFA8  F021         	goto	i2l314
 13783  00435E                     i2u707_40:
 13784  00435E                     i2l317:
 13785  00435E  B081               	btfsc	129,0,c	;volatile
 13786  004360  EFB4  F021         	goto	i2u708_41
 13787  004364  EFB6  F021         	goto	i2u708_40
 13788  004368                     i2u708_41:
 13789  004368  EFAF  F021         	goto	i2l317
 13790  00436C                     i2u708_40:
 13791  00436C                     
 13792                           ;main.c: 244:             _delay((unsigned long)((100)*(4000000/4000.0)));
 13793  00436C  0E82               	movlw	130
 13794  00436E  6E01               	movwf	??_antiRebote^0,c
 13795  004370  0EDE               	movlw	222
 13796  004372                     i2u1187_47:
 13797  004372  2EE8               	decfsz	wreg,f,c
 13798  004374  D7FE               	bra	i2u1187_47
 13799  004376  2E01               	decfsz	??_antiRebote^0,f,c
 13800  004378  D7FC               	bra	i2u1187_47
 13801                           
 13802                           ;main.c: 245:             break;
 13803  00437A  EFD0  F021         	goto	i2l322
 13804  00437E                     i2l6493:
 13805  00437E  5003               	movf	antiRebote@pin^0,w,c
 13806  004380  6E01               	movwf	??_antiRebote^0,c
 13807  004382  6A02               	clrf	(??_antiRebote+1)^0,c
 13808                           
 13809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13810                           ; Switch size 1, requested type "simple"
 13811                           ; Number of cases is 1, Range of values is 0 to 0
 13812                           ; switch strategies available:
 13813                           ; Name         Instructions Cycles
 13814                           ; simple_byte            4     3 (average)
 13815                           ;	Chosen strategy is simple_byte
 13816  004384  5002               	movf	(??_antiRebote+1)^0,w,c
 13817  004386  0A00               	xorlw	0	; case 0
 13818  004388  B4D8               	btfsc	status,2,c
 13819  00438A  EFC9  F021         	goto	i2l10415
 13820  00438E  EFD0  F021         	goto	i2l322
 13821  004392                     i2l10415:
 13822                           
 13823                           ; Switch size 1, requested type "simple"
 13824                           ; Number of cases is 1, Range of values is 1 to 1
 13825                           ; switch strategies available:
 13826                           ; Name         Instructions Cycles
 13827                           ; simple_byte            4     3 (average)
 13828                           ;	Chosen strategy is simple_byte
 13829  004392  5001               	movf	??_antiRebote^0,w,c
 13830  004394  0A01               	xorlw	1	; case 1
 13831  004396  B4D8               	btfsc	status,2,c
 13832  004398  EFA8  F021         	goto	i2l314
 13833  00439C  EFD0  F021         	goto	i2l322
 13834  0043A0                     i2l322:
 13835  0043A0  0012               	return		;funcret
 13836  0043A2                     __end_of_antiRebote:
 13837                           	opt callstack 0
 13838                           
 13839                           	psect	rparam
 13840  0000                     
 13841                           	psect	temp
 13842  00005A                     btemp:
 13843                           	opt callstack 0
 13844  00005A                     	ds	1
 13845  0000                     int$flags	set	btemp
 13846  0000                     wtemp8	set	btemp+1
 13847  0000                     ttemp5	set	btemp+1
 13848  0000                     ttemp6	set	btemp+4
 13849  0000                     ttemp7	set	btemp+8
 13850                           tosu	equ	0xFFF
 13851                           tosh	equ	0xFFE
 13852                           tosl	equ	0xFFD
 13853                           stkptr	equ	0xFFC
 13854                           pclatu	equ	0xFFB
 13855                           pclath	equ	0xFFA
 13856                           pcl	equ	0xFF9
 13857                           tblptru	equ	0xFF8
 13858                           tblptrh	equ	0xFF7
 13859                           tblptrl	equ	0xFF6
 13860                           tablat	equ	0xFF5
 13861                           prodh	equ	0xFF4
 13862                           prodl	equ	0xFF3
 13863                           indf0	equ	0xFEF
 13864                           postinc0	equ	0xFEE
 13865                           postdec0	equ	0xFED
 13866                           preinc0	equ	0xFEC
 13867                           plusw0	equ	0xFEB
 13868                           fsr0h	equ	0xFEA
 13869                           fsr0l	equ	0xFE9
 13870                           wreg	equ	0xFE8
 13871                           indf1	equ	0xFE7
 13872                           postinc1	equ	0xFE6
 13873                           postdec1	equ	0xFE5
 13874                           preinc1	equ	0xFE4
 13875                           plusw1	equ	0xFE3
 13876                           fsr1h	equ	0xFE2
 13877                           fsr1l	equ	0xFE1
 13878                           bsr	equ	0xFE0
 13879                           indf2	equ	0xFDF
 13880                           postinc2	equ	0xFDE
 13881                           postdec2	equ	0xFDD
 13882                           preinc2	equ	0xFDC
 13883                           plusw2	equ	0xFDB
 13884                           fsr2h	equ	0xFDA
 13885                           fsr2l	equ	0xFD9
 13886                           status	equ	0xFD8


Data Sizes:
    Strings     343
    Constant    4
    Data        4
    BSS         1412
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    153     159
    BANK1           256      7     212
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1468_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 63
		 -> STR_13(CODE[63]), STR_12(CODE[56]), STR_10(CODE[6]), STR_9(CODE[9]), 
		 -> STR_8(CODE[11]), STR_7(CODE[10]), buffer(BANK1[50]), STR_2(CODE[25]), 
		 -> STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _main->_probarCruceT
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _UART_printf->_UART_write
    _mover->_forzarAvanceRecto
    _leerSensores->___fldiv
    _PID->_roundf
    _roundf->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flge->___flmul
    _map->___aldiv
    ___fltol->_roundf
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _dameDistancia->___xxtofl
    ___xxtofl->___lwdiv
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _visualizarPasosRealizados->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _probarCruceT->_PID
    _velocidadBaja->_pwmDuty
    _leerSensores->___fldiv
    _PID->_pwmDuty
    _velocidadEstandar->_pwmDuty
    _pwmDuty->___fltol
    ___fltol->_roundf

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_visualizarPasosRealizados

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  189043
                                              4 BANK1      3     3      0
                          _UART_init
                          _configPwm
                      _configurarAdc
                     _forzarParoAuto
    _inicializarComportamientoBasico
                       _probarCruceT
          _visualizarPasosRealizados
 ---------------------------------------------------------------------------------
 (1) _visualizarPasosRealizados                            4     2      2   54974
                                              0 BANK1      4     2      2
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   53767
                                            135 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   52537
                                            127 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   51998
                                             97 BANK0     30    24      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   38407
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             79 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6493
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4227
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1615
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2    1086
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _probarCruceT                                         1     1      0  118958
                                             83 COMRAM     1     1      0
                                _PID
                             ___flge
                 _finalizarRecorrido
                       _leerSensores
                              _mover
                      _velocidadBaja
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadBaja                                        0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (2) _mover                                                2     2      0       0
                                              7 COMRAM     2     2      0
                  _forzarAvanceRecto
 ---------------------------------------------------------------------------------
 (3) _forzarAvanceRecto                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10233
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (2) _finalizarRecorrido                                   0     0      0   28788
                      _forzarEspejeo
                     _forzarParoAuto
 ---------------------------------------------------------------------------------
 (3) _forzarEspejeo                                        0     0      0   28788
                             ___flge
               _forzarEspejeoDerecha
             _forzarEspejeoIzquierda
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoIzquierda                               0     0      0   12461
                _forzarGiroIzquierda
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarGiroIzquierda                                  2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoDerecha                                 0     0      0   12461
                  _forzarGiroDerecha
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarReversa                                        2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _forzarParoAuto                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _forzarGiroDerecha                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PID                                                 18    18      0   51106
                                             40 BANK0     18    18      0
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _pwmDuty
                             _roundf
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4   20827
                                             75 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6347
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5422
                                             51 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    3866
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13829
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12461
                                             28 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3953
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             67 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (3) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (11) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configPwm
   _configurarAdc
   _forzarParoAuto
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _probarCruceT
     _PID
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _roundf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___xxtofl
         ___lwdiv (ARG)
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
       _roundf
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
     _finalizarRecorrido
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
       _forzarParoAuto
     _leerSensores
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _mover
       _forzarAvanceRecto
     _velocidadBaja
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _visualizarPasosRealizados
     _UART_printf
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     3E8      21       48.9%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      7      D4       7       82.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     294      20        0.0%
DATA                 0      0     67C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Sep 09 00:20:31 2020

                              ___fldiv@aexp 006C                                ___fldiv@bexp 006B  
                              ___fldiv@sign 0064                                ___awdiv@sign 000B  
                            ?_configurarAdc 0001                         ___wmul@multiplicand 0008  
                               __CFG_BORV$3 000000                                __CFG_CP0$OFF 000000  
                              __CFG_CP1$OFF 000000                                __CFG_CP2$OFF 000000  
                              __CFG_CP3$OFF 000000             comportamientoBasico@caminoFinal 02C8  
                                       l204 3430                                         l214 3510  
                                       l206 343E                                         l207 3440  
                                       l400 486E                                         l217 415A  
                                       l162 449C                                         l226 4850  
                                       l403 4878                                         l235 42EC  
                                       l412 47F4                                         l165 44A8  
                                       l149 4004                                         l157 2A4A  
                                       l325 4536                                         l421 4848  
                                       l229 485E                                         l309 3DAE  
                                       l166 44E6                                         l238 4882  
                                       l406 47D4                                         l167 44B2  
                                       l415 4814                                         l168 44E8  
                                       l193 3492                                         l185 33D0  
                                       l409 47B2                                         l418 482E  
                                       l426 4640                                         l442 3E5E  
                                       l195 3400                                         l187 33DE  
                                       l188 33E0                                         l197 340E  
                                       l445 3E7A                                         l198 3410  
                                       l446 3EA0                                         l447 3EAC  
                                       l703 2C02                                         l448 3EF4  
                                       l801 2426                                         l706 4790  
                                       l651 321A                                         l709 476A  
                                       l663 324A                                         l911 110C  
                                       l656 323A                                         l657 322A  
                                       l770 3B0E                                         l819 0BD6  
                                       l940 421E                                         l684 2678  
                                       l941 422E                                         l773 3B50  
                                       l781 21E6                                         l837 0406  
                                       l925 41BC                                         l926 41C4  
                                       l775 3B8C                                         l783 21EE  
                                       l863 07A2                                         l919 1052  
                                       l929 4744                                __CFG_CPB$OFF 000000  
                                       _PR2 000FCB                                         _PID 2428  
                              __CFG_CPD$OFF 000000                                __CFG_BOR$OFF 000000  
                                       _abs 45C2                                         _map 3F8C  
                                       _pad 3AC8                                ___awmod@sign 000B  
                                       wreg 000FE8                                ___flmul@aexp 0028  
                              ___flmul@bexp 002D                    _DISTANCIA_PRIORIDAD_BAJA 010C  
                  _DISTANCIA_PRIORIDAD_ALTA 0114                                ___flmul@sign 0027  
                              ___flmul@temp 0032                                ___flmul@prod 002E  
                              __CFG_LVP$OFF 000000                                        ?_PID 0001  
                              ___fltol@exp1 007B                                __CFG_WDT$OFF 000000  
                                      l1008 361C                                        l1203 46E8  
                                      l1043 30CE                                        ?_abs 0018  
                                      l1056 33AE                                        l1160 3C50  
                                      l1226 3724                                        l1420 4070  
                                      l1173 3D00                                        l1511 2144  
                                      l1513 1FA4                                        l1522 1FEA  
                                      l1194 37E2                                        l1610 3926  
                                      l1427 4078                                        l1524 2062  
                                      l1516 1F68                                        l1188 3E58  
                                      l1525 2050                                        l1550 1888  
                                      l1702 45C0                                        l1543 1692  
                                      l1199 3828                                        l1615 45F8  
                                      l1560 19B8                                        l1552 1900  
                                      l1720 1DA8                                        l1712 4888  
                                      l1553 18EE                                        l1457 12FC  
                                      l1474 1416                                        l1466 15CC  
                                      l1458 12EA                                        l1618 4600  
                                      l1547 19F6                                        l1483 14E6  
                                      l1459 12B0                                        l1484 14D4  
                                      l1733 4348                                        l1709 4446  
                                      l1646 2F3E                                        l1591 2CF2  
                                      l1655 288E                                        l1743 39FC  
                                      l1584 2C5A                                        l1665 46B0  
                                      l1673 4498                                        l1649 2F46  
                                      l1753 4286                                        l1658 27D2  
                                      l1587 2DB6                                        l1499 457C  
                                      l1739 471E                                        l1598 2D4E  
                                      l1694 3AC6                                        l1758 428E  
                                      l1679 4678                                        ?_map 0020  
                                      ?_pad 0016                                        l8001 15E8  
                                      l8011 1620                                        l8003 15EA  
                                      l8101 192A                                        l8021 164C  
                                      l8013 1630                                        l8005 15FA  
                                      l8111 19A0                                        l8103 1954  
                                      l8031 16A2                                        l8023 165C  
                                      l8015 1636                                        l8007 160A  
                                      l8201 2D5C                                        l8113 19BC  
                                      l8121 19E2                                        l8105 1958  
                                      l8041 16DC                                        l8033 16B2  
                                      l8025 166C                                        l8017 163C  
                                      l8009 161A                                        l9001 481E  
                                      l8211 2DA4                                        l8203 2D5E  
                                      l8123 19E6                                        l8115 19CC  
                                      l8107 1972                                        l8051 172E  
                                      l8043 16F2                                        l8027 167C  
                                      l8019 164A                                        l9011 4834  
                                      l9003 4822                                        l8213 2DA6  
                                      l8205 2D62                                        l8117 19DA  
                                      l8109 1986                                        l8061 1774  
                                      l8053 173C                                        l8045 16FE  
                                      l8037 16C6                                        l8029 1682  
                                      l8141 368A                                        l8133 364A  
                                      l8221 2910                                        l9013 4838  
                                      l9005 4826                                        l8301 26F2  
                                      l9101 1098                                        l9021 0BD8  
                                      l8207 2D86                                        l8119 19DC  
                                      l8071 17E2                                        l8063 178E  
                                      l8055 1748                                        l8047 1716  
                                      l8039 16D2                                        l8151 36BA  
                                      l8143 3698                                        l8135 3674  
                                      l8127 361E                                        l8223 2996  
                                      l9015 483C                                        l9007 482A  
                                      l8311 27C2                                        l8303 2706  
                                      l9103 10AC                                        l9031 0C44  
                                      l9023 0BFC                                        l7601 355A  
                                      l9121 4006                                        l8209 2D96  
                                      l8081 1878                                        l8073 180C  
                                      l8065 179E                                        l8057 1758  
                                      l8049 1722                                        l8161 36E4  
                                      l8153 36C4                                        l8137 3676  
                                      l8129 3636                                        l8225 29DA  
                                      l8217 2890                                        l9201 1AF4  
                                      l9017 4840                                        l9009 4830  
                                      l8401 3326                                        l8241 3AFA  
                                      l8321 287E                                        l8305 2714  
                                      l8313 27F6                                        l9041 0CD8  
                                      l9033 0C4C                                        l9025 0C0A  
                                      l9113 10D6                                        l7611 35A2  
                                      l7603 356A                                        l9131 403E  
                                      l9123 400E                                        l8171 2C06  
                                      l8091 18B8                                        l8083 1886  
                                      l8075 1842                                        l8067 17BA  
                                      l8059 1764                                        l8163 36F4  
                                      l8139 3686                                        l8219 28F0  
                                      l9211 1C98                                        l9019 4844  
                                      l8331 473C                                        l8411 338E  
                                      l8403 3346                                        l8251 3B60  
                                      l8243 3B06                                        l8235 3AC8  
                                      l8315 2832                                        l9115 10FA  
                                      l9107 10BA                                        l9051 0D62  
                                      l9043 0CE6                                        l9035 0C5A  
                                      l9027 0C1C                                        l7621 35E6  
                                      l7613 35AC                                        l7605 3580  
                                      l9141 406A                                        l9133 4044  
                                      l9125 4020                                        l8173 2C16  
                                      l8093 18E6                                        l8085 1898  
                                      l8077 1850                                        l8069 17C6  
                                      l8165 3704                                        l8149 36B0  
                                      l8229 2A1E                                        l7701 1200  
                                      l9213 1D04                                        l9205 1B2C  
                                      l9301 256C                                        l8325 467A  
                                      l8341 2F7A                                        l8405 3358  
                                      l8253 3B74                                        l8245 3B1A  
                                      l8237 3AD8                                        l8421 3B8E  
                                      l8501 3DB0                                        l8261 382A  
                                      l8317 2846                                        l8309 2786  
                                      l9109 10C8                                        l9061 0E0A  
                                      l9053 0D72                                        l9037 0C7E  
                                      l9029 0C20                                        l7615 35CA  
                                      l7607 3588                                        l7623 35EC  
                                      l9135 405A                                        l9127 4028  
                                      l8191 2CDC                                        l8183 2C94  
                                      l8175 2C24                                        l9151 33EE  
                                      l9143 33B2                                        l8087 18A6  
                                      l8079 186E                                        l8167 3714  
                                      l8159 36D8                                        l7631 3F8C  
                                      l7711 121E                                        l7703 120E  
                                      l8415 4538                                        l9215 1D38  
                                      l9207 1BFA                                        l9303 258E  
                                      l9311 25E2                                        l9231 4290  
                                      l8351 2FBC                                        l8343 2F7E  
                                      l8335 2F48                                        l8407 335E  
                                      l8247 3B2E                                        l8239 3AEC  
                                      l8431 3BBA                                        l8423 3B92  
                                      l8511 3E50                                        l8503 3DDE  
                                      l8263 384A                                        l8319 286E  
                                      l9071 0EC0                                        l9063 0E2E  
                                      l9055 0DA4                                        l9047 0D2E  
                                      l9039 0CB8                                        l9223 415C  
                                      l7625 35FC                                        l7617 35DA  
                                      l7609 3594                                        l9137 4062  
                                      l9129 4030                                        l8193 2CE8  
                                      l8185 2C9C                                        l8177 2C6A  
                                      l9161 34A2                                        l9153 341E  
                                      l9145 33C2                                        l8097 1910  
                                      l8089 18AA                                        l9401 44EA  
                                      l8521 3764                                        l7801 145A  
                                      l7721 1232                                        l7713 1222  
                                      l7705 1212                                        l8417 4548  
                                      l9217 1D74                                        l9209 1C66  
                                      l9321 2642                                        l9313 25EA  
                                      l9305 25BA                                        l9241 31EA  
                                      l9233 4294                                        l8329 4720  
                                      l8361 3016                                        l8353 2FDA  
                                      l8345 2F8C                                        l8337 2F4C  
                                      l8409 336E                                        l8257 45C2  
                                      l7641 45A0                                        l8249 3B32  
                                      l8601 2232                                        l8441 3BE8  
                                      l8433 3BC2                                        l8425 3BA0  
                                      l8513 3E56                                        l8505 3DEE  
                                      l8265 3888                                        l8273 38C8  
                                      l9073 0ED6                                        l9081 0F40  
                                      l9065 0E76                                        l9057 0DB4  
                                      l9049 0D40                                        l9225 4164  
                                      l7627 360C                                        l7619 35DC  
                                      l9139 4064                                        l8195 2D24  
                                      l8187 2CA8                                        l8179 2C80  
                                      l9163 34B4                                        l9155 344E  
                                      l9147 33C4                                        l8099 191C  
                                      l9403 44F0                                        l8531 37D0  
                                      l8523 3792                                        l7811 1484  
                                      l7803 1468                                        l7731 1246  
                                      l7723 1236                                        l7715 1226  
                                      l7707 1216                                        l9219 1D98  
                                      l9315 2602                                        l9323 264E  
                                      l9307 25CE                                        l9331 4864  
                                      l9243 31FA                                        l9411 2A4C  
                                      l9235 42B8                                        l8363 3044  
                                      l8355 2FE2                                        l8371 307E  
                                      l8347 2FAC                                        l8339 2F5A  
                                      l8259 45DC                                        l7571 3A4A  
                                      l7563 39FE                                        l7635 457E  
                                      l7643 46EA                                        l8611 233E  
                                      l8603 22B4                                        l8451 3C22  
                                      l8443 3BF0                                        l8435 3BC6  
                                      l8427 3BA8                                        l8507 3E1C  
                                      l8275 38DA                                        l8267 38B0  
                                      l8283 42EE                                        l8291 4266  
                                      l9091 1022                                        l9083 0F6E  
                                      l9075 0EE4                                        l9059 0DE6  
                                      l9227 4172                                        l9341 44A0  
                                      l8197 2D30                                        l8189 2CDA  
                                      l9165 34EE                                        l9149 33CA  
                                      l7901 1E9E                                        l7581 41E4  
                                      l9405 4506                                        l8533 3820  
                                      l8525 37A2                                        l8517 3726  
                                      l8541 46C8                                        l7821 14B6  
                                      l7813 1494                                        l7805 146A  
                                      l7741 1298                                        l7733 124A  
                                      l7725 123A                                        l7717 122A  
                                      l7709 121A                                        l7661 1128  
                                      l9325 2656                                        l9317 262A  
                                      l9309 25D6                                        l9181 4634  
                                      l9333 4868                                        l9245 320A  
                                      l9421 2ABA                                        l9413 2A50  
                                      l9237 42BC                                        l8373 308E  
                                      l8365 3064                                        l8357 2FF6  
                                      l8349 2FB0                                        l8381 3250  
                                      l7573 3A80                                        l7565 3A10  
                                      l7637 458A                                        l7645 46F6  
                                      l8621 23B2                                        l8613 235C  
                                      l8605 22BA                                        l8461 3C48  
                                      l8453 3C24                                        l8445 3BFE  
                                      l8437 3BCE                                        l8429 3BAC  
                                      l8509 3E2C                                        l8269 38BC  
                                      l8285 42FE                                        l7653 4642  
                                      l8293 4278                                        l9077 0F14  
                                      l9069 0EAE                                        l9229 41A0  
                                      l9261 4418                                        l7591 3524  
                                      l9351 40EC                                        l9335 449C  
                                      l8199 2D3E                                        l9167 34EE  
                                      l9159 3460                                        l7911 1ECE  
                                      l7903 1EA6                                        l7583 41F4  
                                      l9407 451C                                        l8535 3826  
                                      l8527 37B0                                        l8519 3754  
                                      l8543 46D8                                        l7831 1510  
                                      l7823 14CC                                        l7807 1478  
                                      l7815 1496                                        l7751 12DC  
                                      l7743 12A8                                        l7727 123E  
                                      l7719 122E                                        l7735 124E  
                                      l7671 115C                                        l7663 112A  
                                      l9191 1A18                                        l9327 2666  
                                      l9319 263A                                        l9183 463C  
                                      l9239 30D0                                        l9271 3E82  
                                      l9431 2B32                                        l9423 2ABC  
                                      l9415 2A54                                        l8551 4460  
                                      l8375 30AE                                        l8367 3066  
                                      l8359 3004                                        l8391 32B0  
                                      l8383 325E                                        l7567 3A22  
                                      l7639 459C                                        l7647 46FA  
                                      l8631 23EE                                        l8623 23C2  
                                      l8615 2376                                        l8607 22C0  
                                      l8455 3C2A                                        l8447 3C04  
                                      l8439 3BE0                                        l8471 3C6C  
                                      l8279 391E                                        l8287 4230  
                                      l8711 02CE                                        l8703 024A  
                                      l9087 0FDC                                        l9263 4434  
                                      l9255 43F6                                        l7593 3534  
                                      l9361 414C                                        l9353 40EC  
                                      l9345 44BC                                        l9169 3500  
                                      l7921 1F0C                                        l7913 1ECE  
                                      l7905 1EAA                                        l7585 41FE  
                                      l7577 41C6                                        l9409 4532  
                                      l8529 37C2                                        l7841 158C  
                                      l7833 154A                                        l7809 1480  
                                      l7817 14A4                                        l7753 12DE  
                                      l7745 12BE                                        l7737 1252  
                                      l7729 1242                                        l7681 118E  
                                      l7665 113A                                        l7673 1164  
                                      l7657 110E                                        l9193 1A62  
                                      l8561 4870                                        l9329 4860  
                                      l9185 4792                                        l9273 3E98  
                                      l9281 3EB8                                        l9433 2B36  
                                      l9425 2AEE                                        l9417 2A86  
                                      l9177 484C                                        l8553 448E  
                                      l8369 3078                                        l8393 32CE  
                                      l8385 327E                                        l7569 3A2C  
                                      l7649 4712                                        l8625 23C8  
                                      l8633 23FE                                        l8617 2390  
                                      l8609 2324                                        l8449 3C1A  
                                      l8457 3C30                                        l8481 3CA0  
                                      l8473 3C70                                        l8465 3C52  
                                      l8297 267A                                        l8801 076A  
                                      l8713 02D4                                        l8721 039C  
                                      l8705 0264                                        l8641 002C  
                                      l9089 0FEE                                        l9097 1066  
                                      l9257 4408                                        l7595 3538  
                                      l7587 3512                                        l9371 4156  
                                      l9363 414E                                        l9355 40EE  
                                      l7931 1F58                                        l7923 1F1C  
                                      l7579 41D6                                        l8539 46B2  
                                      l7851 15AC                                        l7843 1590  
                                      l7827 14F6                                        l7835 154C  
                                      l7819 14A8                                        l7771 1366  
                                      l7763 132E                                        l7755 12E8  
                                      l7747 12CA                                        l7739 127C  
                                      l7691 11C4                                        l7683 1194  
                                      l7675 1174                                        l7667 114A  
                                      l7659 111A                                        l9195 1A76  
                                      l9291 2428                                        l8571 47F6  
                                      l8563 47B4                                        l9179 4602  
                                      l9187 479A                                        l9267 3E5A  
                                      l9435 2B3C                                        l9427 2AF0  
                                      l9419 2A88                                        l8555 4492  
                                      l8547 4448                                        l8395 32D6  
                                      l8387 3282                                        l8379 324C  
                                      l8627 23DA                                        l8619 23A0  
                                      l8459 3C40                                        l8491 3CDA  
                                      l8483 3CA8                                        l8475 3C7E  
                                      l8467 3C56                                        l8299 269A  
                                      l8811 0822                                        l8803 077A  
                                      l8731 03DE                                        l8723 03AC  
                                      l8715 032E                                        l8651 0078  
                                      l8643 003A                                        l9099 108A  
                                      l9259 4410                                        l7597 3546  
                                      l7589 3516                                        l9373 4158  
                                      l9365 4150                                        l9357 40F0  
                                      l7941 1FA2                                        l7933 1F66  
                                      l7925 1F2C                                        l7917 1EE2  
                                      l7909 1EBE                                        l7861 1DB8  
                                      l7853 15BA                                        l7845 159E  
                                      l7837 155C                                        l7829 1502  
                                      l7773 136A                                        l7765 133E  
                                      l7757 130A                                        l7781 138A  
                                      l7749 12CE                                        l7693 11D4  
                                      l7685 11A2                                        l7677 117A  
                                      l7669 115A                                        l9197 1AB2  
                                      l9189 19F8                                        l9293 2432  
                                      l8573 47FE                                        l8565 47BC  
                                      l9269 3E66                                        l9461 2BFE  
                                      l9453 2BBE                                        l9445 2B7E  
                                      l9429 2B00                                        l9437 2B44  
                                      l8549 444C                                        l8397 32EA  
                                      l8389 3290                                        l8629 23E6  
                                      l8581 21AE                                        l8485 3CB6  
                                      l8493 3CE0                                        l8477 3C86  
                                      l8469 3C64                                        l8901 0AFE  
                                      l8813 0832                                        l8821 086E  
                                      l8805 078E                                        l8741 0426  
                                      l8733 03F8                                        l8725 03B0  
                                      l8717 0362                                        l8709 029A  
                                      l8661 00C2                                        l8653 008A  
                                      l8645 0042                                        l8637 0012  
                                      l9381 3D16                                        l7599 3556  
                                      l9367 4152                                        l9359 4124  
                                      l9375 487A                                        l7951 1FE8  
                                      l7943 1FB4                                        l7935 1F72  
                                      l7927 1F34                                        l7919 1EFC  
                                      l7871 1DF8                                        l7863 1DC6  
                                      l8559 476C                                        l7855 15BC  
                                      l7847 15A4                                        l7839 156C  
                                      l7783 13B0                                        l7791 1406  
                                      l7775 1378                                        l7767 134C  
                                      l7759 131A                                        l7695 11D6  
                                      l7687 11A4                                        l7679 118C  
                                      l9199 1AD6                                        l9295 2472  
                                      l8567 47D6                                        l9455 2BF0  
                                      l9447 2BB0                                        l9439 2B76  
                                      l8399 32F8                                        l8591 2208  
                                      l8583 21BE                                        l8575 2146  
                                      l8495 3CF0                                        l8487 3CCC  
                                      l8479 3C98                                        l8911 0B3A  
                                      l8903 0B04                                        l8831 08AA  
                                      l8823 0882                                        l8815 0846  
                                      l8807 079A                                        l8743 043A  
                                      l8751 0498                                        l8727 03C2  
                                      l8735 0412                                        l8719 036A  
                                      l8663 00C6                                        l8655 009A  
                                      l8647 0066                                        l8639 001C  
                                      l9383 3D26                                        l9391 3D84  
                                      l9369 4154                                        l7961 2048  
                                      l7945 1FCA                                        l7953 1FFA  
                                      l7937 1F90                                        l7929 1F44  
                                      l7881 1E1E                                        l7873 1DFA  
                                      l7865 1DC8                                        l7849 15A6  
                                      l7793 142C                                        l7785 13E4  
                                      l7777 137A                                        l7769 135A  
                                      l7689 11B4                                        l7697 11DE  
                                      l9297 2534                                        l8569 47DE  
                                      l9289 4746                                        l9457 2BF4  
                                      l9449 2BB4                                        l8593 2216  
                                      l8585 21C0                                        l8577 2166  
                                      l8497 3CF8                                        l8489 3CD4  
                                      l8921 0B8C                                        l8913 0B40  
                                      l8905 0B16                                        l8833 08B6  
                                      l8825 0890                                        l8841 08D6  
                                      l8817 0858                                        l8809 07BE  
                                      l8761 04D6                                        l8753 04A0  
                                      l8745 0456                                        l8729 03D6  
                                      l8681 017C                                        l8673 012C  
                                      l8665 00CA                                        l8657 00AE  
                                      l8649 0070                                        l9393 3DA2  
                                      l9385 3D36                                        l9377 3D02  
                                      l7971 20B6                                        l7955 2008  
                                      l7947 1FD0                                        l7939 1F92  
                                      l7891 1E5E                                        l7883 1E2C  
                                      l7867 1DD8                                        l7875 1E02  
                                      l7859 1DAA                                        l7795 143C  
                                      l7787 13E6                                        l7779 1384  
                                      l7699 11EE                                        l9299 2564  
                                      l8595 221C                                        l8587 21DA  
                                      l8579 218E                                        l8923 0B98  
                                      l8915 0B46                                        l8907 0B22  
                                      l8851 095C                                        l8843 08E8  
                                      l8835 08C6                                        l8827 08A0  
                                      l8819 0866                                        l8763 04E8  
                                      l8771 0528                                        l8755 04B2  
                                      l8747 048C                                        l8691 0200  
                                      l8675 013E                                        l8659 00BA  
                                      l8667 00D0                                        l9379 3D06  
                                      l7981 2120                                        l7965 2072  
                                      l7973 20BA                                        l7957 200C  
                                      l7949 1FDA                                        l7893 1E60  
                                      l7885 1E2E                                        l7877 1E12  
                                      l7869 1DE8                                        l7789 13F6  
                                      l8941 2DD4                                        l8597 2224  
                                      l8589 21F6                                        l8925 0BA0  
                                      l8909 0B2A                                        l8861 09D6  
                                      l8853 0990                                        l8845 08FA  
                                      l8837 08CA                                        l8829 08A4  
                                      l8781 0610                                        l8773 0530  
                                      l8765 04F6                                        l8757 04C4  
                                      l8749 0494                                        l8693 0212  
                                      l8677 015A                                        l8669 00F6  
                                      l8685 01A4                                        l9389 3D46  
                                      l7983 2124                                        l7975 20D4  
                                      l7967 207E                                        l7959 201A  
                                      l7887 1E3E                                        l7895 1E68  
                                      l7879 1E18                                        l7799 1450  
                                      l8951 2E30                                        l8943 2DF0  
                                      l8935 2DB8                                        l8599 222C  
                                      l8927 0BB0                                        l8919 0B7A  
                                      l8871 0A20                                        l8863 09E8  
                                      l8855 0998                                        l8847 08FE  
                                      l8839 08D0                                        l8791 06CE  
                                      l8783 0644                                        l8775 0540  
                                      l8767 050E                                        l8759 04D2  
                                      l8695 022E                                        l8687 01CA  
                                      l8679 0172                                        l7985 2132  
                                      l7977 20EA                                        l7969 208C  
                                      l7897 1E78                                        l7889 1E4E  
                                      l8953 2E46                                        l8945 2E26  
                                      l8937 2DCC                                        l8929 0BB6  
                                      l8881 0A60                                        l8873 0A32  
                                      l8865 09F8                                        l8849 0904  
                                      l8857 099C                                        l8793 06E4  
                                      l8777 0554                                        l8785 064A  
                                      l8769 0520                                        l7987 2138  
                                      l7979 2104                                        l7899 1E8E  
                                      l8971 2F22                                        l8963 2EC0  
                                      l8955 2E4E                                        l8947 2E2A  
                                      l8939 2DD0                                        l8891 0AA8  
                                      l8883 0A68                                        l8875 0A3A  
                                      l8867 0A0A                                        l8859 09BA  
                                      l8795 0716                                        l8787 0668  
                                      l8779 05B8                                        l7989 213A  
                                      l7997 15CE                                        l8957 2E56  
                                      l8893 0AC4                                        l8885 0A70  
                                      l8877 0A4A                                        l8869 0A0E  
                                      l8797 0726                                        l8789 069C  
                                      l7999 15DA                                        l8967 2EFE  
                                      l8959 2E8A                                        l8895 0ACC  
                                      l8887 0A7C                                        l8879 0A52  
                                      l8799 0736                                        l8991 39B2  
                                      l8983 395E                                        STR_1 7F79  
                                      STR_2 7F60                                        l8969 2F10  
                                      l8889 0A82                                        l8897 0AD2  
                                      l8993 39DA                                        l8985 396C  
                                      l8977 3928                                        STR_3 7F1E  
                                      STR_4 7FA4                                        l8899 0AE4  
                                      l8987 3984                                        l8979 3952  
                                      STR_5 7F91                                        STR_6 7FB6  
                                      l8997 4816                                        l8989 39A0  
                                      STR_7 7FD2                                        STR_8 7FC7  
                                      l8999 481A                                        STR_9 7FDC  
                                      u8000 3580                                        u8001 357C  
                                      u8010 35A2                                        u8011 359E  
                                      u8020 35CA                                        u8100 114A  
                                      _RCIF 007CF5                                        u8021 35C6  
                                      u8101 1146                                        u8030 35FC  
                                      u8110 118C                                        u8031 35F8  
                                      u8111 1188                                        u9000 2D20  
                                      u8200 12BE                                        u8120 11A2  
                                      u8040 45C0                                        u9001 2D1C  
                                      u8201 12BA                                        u8121 119E  
                                      u8041 45BC                                        u9010 2D3E  
                                      u8210 12DC                                        u8130 11B4  
                                      u8050 4712                                        u9011 2D3A  
                                      u8211 12D8                                        u8131 11B0  
                                      u8051 470E                                        u9020 2D4E  
                                      u8300 142C                                        u8220 12FC  
                                      u8140 11C4                                        u9100 3AFA  
                                      u8060 4672                                        u9021 2D4A  
                                      u8301 1428                                        u8221 12F8  
                                      u8141 11C0                                        u9101 3AF6  
                                      u8061 466C                                        u9030 2D5C  
                                      u8310 143C                                        u8230 130A  
                                      u8150 1200                                        u9110 3B50  
                                      u8070 4674                                        u9031 2D58  
                                      u8311 1438                                        u8231 1306  
                                      u8151 11FC                                        u9111 3B4C  
                                      u9040 2D96                                        u8400 1510  
                                      u8320 1468                                        u8240 131A  
                                      u8160 120E                                        u8080 1128  
                                      u9120 3B60                                        u9200 3916  
                                      u9041 2D92                                        u8401 150C  
                                      u8321 1464                                        u8241 1316  
                                      u8161 120A                                        u8081 1124  
                                      u9121 3B5C                                        u9050 2DA4  
                                      u8410 154A                                        u8330 1478  
                                      u8250 134C                                        u8170 127C  
                                      u8090 113A                                        u9130 45DC  
                                      u9210 4336                                        u9051 2DA0  
                                      u8411 1546                                        u8331 1474  
                                      u8251 1348                                        u8171 1278  
                                      u8091 1136                                        u9131 45D8  
                                      u8500 1E2C                                        u9060 2910  
                                      u8420 155C                                        u8340 1494  
                                      u8260 135A                                        u8180 1294  
                                      u9140 386A                                        u9300 2782  
                                      u9220 4348                                        u8501 1E28  
                                      u9061 290C                                        u8421 1558  
                                      u8341 1490                                        u8261 1356  
                                      u8181 128E                                        u9301 277E  
                                      u9221 4344                                        u8510 1E3E  
                                      u8430 156C                                        u8350 14A4  
                                      u8270 1378                                        u8190 1296  
                                      u9150 3888                                        u9310 27A6  
                                      u9230 4260                                        u8511 1E3A  
                                      u8431 1568                                        u8351 14A0  
                                      u8271 1374                                        u9151 3884  
                                      u9231 425A                                        u8600 1FE8  
                                      u8520 1E4E                                        u8440 158C  
                                      u8360 14B6                                        u8280 13B0  
                                      u9160 38B0                                        u9320 27C2  
                                      u9240 4262                                        u8601 1FE4  
                                      u8521 1E4A                                        u8441 1588  
                                      u8361 14B2                                        u8281 13AC  
                                      u9401 2FB6                                        u9161 38AC  
                                      u9145 3860                                        u9321 27BE  
                                      u9217 432C                                        u8610 2008  
                                      u8530 1E8E                                        u8450 159E  
                                      u8370 14CC                                        u8290 13F6  
                                      u9410 2FDA                                        u9090 3AD8  
                                      u9170 38DA                                        u9330 2816  
                                      u9250 4278                                        u8611 2004  
                                      u8531 1E8A                                        u9075 29AA  
                                      u8451 159A                                        u8371 14C8  
                                      u8291 13F2                                        u9411 2FD6  
                                      u9091 3AD4                                        u9171 38D6  
                                      u9315 279C                                        u9251 4274  
                                      u8620 201A                                        u8540 1ECE  
                                      u8700 15E8                                        u9076 29B4  
                                      u8460 15BA                                        u8380 14E2  
                                      u9420 3004                                        u9500 336E  
                                      u9340 2832                                        u9260 26C4  
                                      u8621 2016                                        u8541 1ECA  
                                      u8701 15E4                                        u9085 29EE  
                                      u9077 29C4                                        u8461 15B6  
                                      u8381 14DE                                        u9421 3000  
                                      u9501 336A                                        u9341 282E  
                                      u8630 2048                                        u8550 1F44  
                                      u8470 1DC6                                        u8710 15FA  
                                      u9086 29F8                                        u8390 14F6  
                                      u9430 3044                                        u9510 3BA0  
                                      u9190 3914                                        u9350 286E  
                                      u9270 26F2                                        u8631 2044  
                                      u8551 1F40                                        u8471 1DC2  
                                      u8711 15F6                                        u9087 2A08  
                                      u8391 14F2                                        u9431 3040  
                                      u9511 3B9C                                        u9191 390E  
                                      u9351 286A                                        u9335 280C  
                                      u9271 26EE                                        u8640 205E  
                                      u8560 1F66                                        u8480 1DD8  
                                      u8800 18A6                                        u8720 160A  
                                      u9360 46AA                                        u9440 308E  
                                      u7920 3A10                                        u9520 3BBA  
                                      u9600 3CB6                                        u9280 2714  
                                      u8641 205A                                        u8561 1F62  
                                      u8481 1DD4                                        u8801 18A2  
                                      u8721 1606                                        u9361 46A4  
                                      u9441 308A                                        u7921 3A0C  
                                      u9521 3BB6                                        u9601 3CB2  
                                      u9185 38EC                                        u9281 2710  
                                      u9265 26BA                                        u8650 2072  
                                      u8570 1F90                                        u8490 1DE8  
                                      u8810 18B8                                        u8730 164A  
                                      u9370 46AC                                        u9450 325E  
                                      u7930 3A22                                        u9530 3BE0  
                                      u9610 3CCC                                        u8651 206E  
                                      u8571 1F8C                                        u8491 1DE4  
                                      u8811 18B4                                        u8731 1646  
                                      u9451 325A                                        u7931 3A1E  
                                      u9531 3BDC                                        u9611 3CC8  
                                      u8660 208C                                        u8580 1FB4  
                                      u8820 18E6                                        u8740 165C  
                                      u8900 366A                                        u9700 3820  
                                      u9380 2F5A                                        u9460 3290  
                                      u7940 3A4A                                        u9540 3BFE  
                                      u9620 3CF0                                        u8661 2088  
                                      u8581 1FB0                                        u8821 18E2  
                                      u8741 1658                                        u9701 381C  
                                      u9381 2F56                                        u9461 328C  
                                      u7941 3A46                                        u9541 3BFA  
                                      u9621 3CEC                                        u8670 20D4  
                                      u8590 1FCA                                        u8830 18FC  
                                      u8750 166C                                        u8910 3698  
                                      u9710 46C8                                        u9390 2F8C  
                                      u9470 32CE                                        u7950 3A80  
                                      u9550 3C1A                                        u9630 3DDE  
                                      u8671 20D0                                        u8591 1FC6  
                                      u8831 18F8                                        u8751 1668  
                                      u8911 3694                                        u9711 46C4  
                                      u9391 2F88                                        u9471 32CA  
                                      u7951 3A7C                                        u9551 3C16  
                                      u9631 3DDA                                        u9295 2728  
                                      u8680 2104                                        u8840 1910  
                                      u8760 16A2                                        u8920 36AC  
                                      u7960 41E4                                        u9720 4460  
                                      u9480 32F8                                        u9800 2216  
                                      u9560 3C40                                        u9640 3E1C  
                                      u9296 2732                                        u8681 2100  
                                      u8841 190C                                        u8761 169E  
                                      u8921 36A8                                        u8905 3660  
                                      u7961 41E0                                        u9721 445C  
                                      u9481 32F4                                        u9801 2212  
                                      u9561 3C3C                                        u9641 3E18  
                                      u9297 2742                                        u8690 2132  
                                      u8850 192A                                        u8770 16B2  
                                      u8930 36D4                                        u7970 421E  
                                      u9730 448E                                        u9490 3326  
                                      u9810 233E                                        u9570 3C64  
                                      u9650 3E50                                        u8691 212E  
                                      u8851 1926                                        u8771 16AE  
                                      u8931 36D0                                        u7971 421A  
                                      u9731 448A                                        u9491 3322  
                                      u9811 233A                                        u9571 3C60  
                                      u9651 3E4C                                        u7980 3524  
                                      u8860 1972                                        u8780 182C  
                                      u8940 36F4                                        u9660 3754  
                                      u9820 235C                                        u9740 2176  
                                      u9580 3C7E                                        u9900 008A  
                                      u7981 3520                                        u8861 196E  
                                      u8941 36F0                                        u9661 3750  
                                      u9821 2358                                        u9741 2170  
                                      u9581 3C7A                                        u9901 0086  
                                      u7990 3546                                        u8870 19A0  
                                      u8790 1886                                        u8950 3704  
                                      u9670 3792                                        u9830 2376  
                                      u9750 2178                                        u9590 3C98  
                                      u9910 009A                                        u7991 3542  
                                      u8871 199C                                        u8791 1882  
                                      u8951 3700                                        u9671 378E  
                                      u9831 2372                                        u9591 3C94  
                                      u9911 0096                                        u8960 2C16  
                                      u8880 19DA                                        u9680 37B0  
                                      u9840 2390                                        u9760 218E  
                                      u9920 00AE                                        u8961 2C12  
                                      u8881 19D6                                        u8785 1822  
                                      u9681 37AC                                        u9841 238C  
                                      u9761 218A                                        u9921 00AA  
                                      u8970 2C24                                        u8890 3636  
                                      u9690 37D0                                        u9850 23A0  
                                      u9770 21BE                                        u9930 00F6  
                                      u8971 2C20                                        u8891 3632  
                                      u9691 37CC                                        u9851 239C  
                                      u9771 21BA                                        u9931 00F2  
                                      u8980 2C80                                        u9860 23B2  
                                      u9780 21DA                                        u9940 0126  
                                      u8981 2C7C                                        u9861 23AE  
                                      u9781 21D6                                        u9941 0120  
                                      u8990 2CD6                                        u9870 23C2  
                                      u9790 2208                                        u9950 0128  
                                      u8991 2CD2                                        u9871 23BE  
                                      u9791 2204                                        u9880 23DA  
                                      u9960 013E                                        u9881 23D6  
                                      u9961 013A                                        u9970 01CA  
                                      u9890 003A                                        u9971 01C6  
                                      u9891 0036                                        u9980 01FA  
                                      u9981 01F4                                        u9990 01FC  
      comportamientoBasico@caminoEncontrado 0132                            ??_forzarParoAuto 0006  
                                      abs@a 0018                                        _dbuf 013A  
                                      _atoi 2DB8                                        _main 3EF6  
                                      _dtoa 2146                                        _prec 012C  
                                      _nout 0128                                        pad@i 001D  
                                      pad@p 001A                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        indf0 000FEF  
                                      fsr2h 000FDA                                        fsr0l 000FE9  
                                      indf2 000FDF                                        fsr1l 000FE1  
                                      pad@w 001F                                        map@x 0020  
                                      fsr2l 000FD9                                        btemp 005A  
                             ___fpclassifyf 382A                                        prodh 000FF4  
                                      prodl 000FF3                                        start 000E  
                             __CFG_IESO$OFF 000000                             ___fldiv@new_exp 0065  
                              _tolower$1554 0012                               __CFG_MCLRE$ON 000000  
                             ?_leerSensores 0001                                ___param_bank 000000  
                                     ??_PID 0088                                       ??_abs 001A  
                                     ??_map 0034                                       ??_pad 001C  
                           ??_velocidadBaja 0054                               __CFG_PLLDIV$1 000000  
                            __CFG_CCP2MX$ON 000000                                       l10201 3F12  
                                     l10211 3F1C                                       l10203 3F14  
                                     l10221 3F32                                       l10213 3F1E  
                                     l10205 3F16                                       l10231 3F70  
                                     l10223 3F36                                       l10215 3F20  
                                     l10207 3F18                                       l10233 3F74  
                                     l10241 3F80                                       l10225 3F4A  
                                     l10217 3F26                                       l10209 3F1A  
                                     l10411 3474                                       l10403 3D5E  
                                     l10227 3F5C                                       l10219 3F2C  
                                     l10413 44D0                                       l10405 2E74  
                                     l10229 3F6C                                       l10181 3EFE  
                                     l10407 3ECE                                       l10239 3F78  
                                     l10191 3F08                                       l10183 3F00  
                                     l10409 2A34                                       l10193 3F0A  
                                     l10185 3F02                                       l10177 3EF6  
                                     l10195 3F0C                                       l10187 3F04  
                                     l10179 3EFC                                       l10197 3F0E  
                                     l10189 3F06                                       l10199 3F10  
                             ___fltol@sign1 007A                             __end_of___aldiv 361E  
                           __end_of___aodiv 30D0                                       ?_atoi 000D  
                           __end_of___fladd 15CE                                       ?_main 0001  
                                     ?_dtoa 0021                             __end_of___aomod 33B0  
                           __end_of___fldiv 2146                             __end_of___awdiv 3C52  
                           __end_of___flneg 46EA                                       STR_10 7FE5  
                                     STR_11 7F40                                       STR_12 7EE6  
                                     STR_13 7EA7                                       STR_22 7FFB  
                                     STR_14 7FEB                                       STR_15 7FF3  
                                     STR_24 7FFB                                       STR_18 7FEF  
                                     STR_19 7FF7                             __end_of___awmod 3D02  
                           __end_of___flmul 19F8                             __end_of___flsub 457E  
                           __end_of___fltol 3726                                       u10000 0212  
                                     u10001 020E                                       u10010 0296  
                                     u10011 0292                                       u10100 048C  
                                     u10020 032A                                       u10101 0488  
                                     u10021 0326                                       u10110 04B2  
                                     u10030 039C                                       u10111 04AE  
                                     u10031 0398                                       u11000 262A  
                                     u10200 0726                                       u10120 04C4  
                                     u10040 03C2                                       u11001 2626  
                                     u10201 0722                                       u10121 04C0  
                                     u10041 03BE                                       u11010 2A86  
                                     u10210 078E                                       u10130 04D2  
                                     u10050 03D6                                       u11011 2A82  
                                     u10211 078A                                       u10131 04CE  
                                     u10051 03D2                                       u11020 2ABA  
                                     u10300 09D6                                       u10220 0832  
                                     u10140 04E8                                       u10060 03F8  
                                     u11021 2AB6                                       u10301 09D2  
                                     u10221 082E                                       u10141 04E4  
                                     u10061 03F4                                       u11030 2AEE  
                                     u10310 09E8                                       u10230 0846  
                                     u10150 04F6                                       u10070 0422  
                                     u11031 2AEA                                       u10311 09E4  
                                     u10231 0842                                       u10151 04F2  
                                     u10071 041E                                       u11040 2B00  
                                     u10400 0B8C                                       u10320 09F8  
                                     u10240 0858                                       u10160 0520  
                                     u10080 043A                                       u11041 2AFC  
                                     u10401 0B88                                       u10321 09F4  
                                     u10241 0854                                       u10161 051C  
                                     u10081 0436                                       u11050 2B32  
                                     u10410 2DF0                                       u10330 0A32  
                                     u10250 0866                                       u10170 0668  
                                     u10090 0456                                       u11051 2B2E  
                                     u10411 2DEC                                       u10331 0A2E  
                                     u10251 0862                                       u10171 0664  
                                     u10091 0452                                       u11060 2B76  
                                     u10420 2E26                                       u10340 0A60  
                                     u10260 0882                                       u10180 06CE  
                                     u10500 39A0                                       u11061 2B72  
                                     u10421 2E22                                       u10341 0A5C  
                                     u10261 087E                                       u10181 06CA  
                                     u10501 399C                                       u11070 2BB0  
                                     u10430 2E42                                       u10350 0AE4  
                                     u10270 0890                                       u10190 0716  
                                     u10510 39B2                                       u11071 2BAC  
                                     u10431 2E3E                                       u10351 0AE0  
                                     u10271 088C                                       u10191 0712  
                                     u10511 39AE                                       u11080 2BF0  
                                     u10440 2EF8                                       u10360 0AFE  
                                     u10280 08E8                                       u10520 39DA  
                                     u10600 0DB4                                       u11081 2BEC  
                                     u10441 2EF2                                       u10361 0AFA  
                                     u10281 08E4                                       u10521 39D6  
                                     u10601 0DB0                                       u10450 2EFA  
                                     u10370 0B16                                       u10290 09BA  
                                     u10610 0E0A                                       u10530 0BFC  
                                     u10371 0B12                                       u10291 09B6  
                                     u10611 0E06                                       u10531 0BF8  
                                     u10700 403E                                       u10460 2F10  
                                     u10380 0B74                                       u10620 0E2E  
                                     u10540 0C44                             ___awdiv@divisor 0008  
                                     u10701 403A                                       u10461 2F0C  
                                     u10381 0B6E                                       u10621 0E2A  
                                     u10541 0C40                                       u10710 405A  
                                     u10470 2F22                                       u10390 0B76  
                                     u10630 0EC0                                       u10550 0C7E  
                                     u10711 4056                                       u10471 2F1E  
                                     u10631 0EBC                                       u10551 0C7A  
                                     u10800 345C                                       u10720 33DE  
                                     u10480 3952                                       u10640 0F6E  
                                     u10560 0D28                                       _T1CON 000FCD  
                                     u10801 3458                                       u10721 33DA  
                                     u10481 394E                                       u10641 0F6A  
                                     u10561 0D22                                       u10810 34A2  
                                     u10730 33EE                                       u10490 3984  
                                     u10650 0FD6                                       u10570 0D2A  
                                     u10811 349E                                       u10731 33EA  
                                     u10491 3980                                       u10651 0FD0  
                                     u10740 33FC                                       u10900 1C98  
                                     u10820 485E                                       u10660 0FD8  
                                     u10580 0D40                                       u10741 33F8  
                                     u10901 1C94                                       u10821 485A  
                                     u10581 0D3C                                       u10750 340E  
                                     u10910 1D58                                       u10830 4634  
                                     u10670 0FEE                                       u10590 0D72  
                                     u10751 340A                                       u10831 4630  
                                     u10671 0FEA                                       u10591 0D6E  
                                     u10760 341E                                       u10920 1D74  
                                     u10840 1A38                                       u10680 108A  
                                     u10761 341A                                       u10921 1D70  
                                     u10681 1086                                       u10690 4020  
                                     u10770 342C                                       u10850 1A62  
                                     u10930 41BC                                       u10691 401C  
                                     u10771 3428                                       u10915 1D4E  
                                     u10851 1A5E                                       u10931 41B8  
                                     u10780 343E                                       u10860 1A96  
                                     u10940 42B4                                       u10781 343A  
                                     u10845 1A2E                                       u10790 344E  
                                     u10870 1AB2                                       u10950 42DC  
                                     u10791 344A                                       u10871 1AAE  
                                     u11807 3E8C                                       u10880 1AF4  
                                     u10960 42EC                                       _LATB4 007C54  
                                     u10881 1AF0                                       u10865 1A8C  
                                     u11817 47A4                                       u10961 42E8  
                                     _LATB5 007C55                                       u10890 1BFA  
                                     u10970 258E                                       u11770 3F5C  
                                     _LATD2 007C62                                       _LATB6 007C56  
                                     u10891 1BF6                                       u10971 258A  
                                     u11827 47E8                                       u10947 42AA  
                                     u11771 3F58                                       _LATD3 007C63  
                                     _LATB7 007C57                                       u10980 25BA  
                                     u11780 3F6C                                       u10981 25B6  
                                     u11837 47C6                                       u10957 42D2  
                                     u11781 3F68                                       u10990 2602  
                                     u10991 25FE                                       u11847 4808  
                                     u11857 33C6                                       u11797 3E6C  
                           __end_of___lwdiv 407A                                       i2l322 43A0  
                                     i2l314 4350                                       i2l317 435E  
                                     i2l280 43F2                                       i2l278 43EA  
                              main@iniciado 01CF                             ___awdiv@counter 000A  
                                     _RCREG 000FAE                                vfpfcnvrt@fmt 00C3  
                                     _TMR1H 000FCF                                       _TMR1L 000FCE  
                                     _SPBRG 000FAF                               __CFG_USBDIV$1 000000  
                                     _TXREG 000FAD                               __CFG_PWRT$OFF 000000  
                             __CFG_WRT0$OFF 000000                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                         ___lmul@multiplicand 000A  
                             __CFG_WRT3$OFF 000000                              __CFG_EBTR0$OFF 000000  
                            __CFG_FCMEN$OFF 000000                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
                             __CFG_WRTB$OFF 000000                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                              __CFG_EBTRB$OFF 000000  
                        __size_of_UART_init 0070                                       _flags 012E  
                                     _boton 0008                                       _fputc 39FE  
                                     _fputs 457E                             __end_of_isdigit 46B2  
                                     _pausa 01D0                                       _mover 3E5A  
                                     _mouse 00FD                                 ?_UART_write 0001  
                                     atoi@n 001A                                       pad@fp 0016  
                                     atoi@s 000D                                       _width 012A  
                                     _putch 4888                                       _toint 7EA3  
                                     dtoa@d 0023                                       dtoa@i 0043  
                                     dtoa@n 003B                                       dtoa@p 0035  
                                     dtoa@s 0039                                       dtoa@w 0037  
                           __end_of_isspace 449A                             __end_of_isupper 467A  
                                     tablat 000FF5                             __end_of_pwmDuty 2A4C  
                                     ttemp5 005B                                       ttemp6 005E  
                                     ttemp7 0062                                       status 000FD8  
                                     wtemp8 005B                             __end_of_sprintf 4448  
                            ?___fpclassifyf 0006                             __end_of_tolower 4290  
                           __end_of_strncmp 39FE                              __CFG_ICPRT$OFF 000000  
                            ??_leerSensores 0050                             __initialization 407A  
                              __end_of_atoi 2F48                                __end_of_main 3F8C  
                              __end_of_dtoa 2428                             ??_configurarAdc 0006  
                       dameDistancia@conteo 0026                      dameDistancia@distancia 0022  
                                    ??_atoi 000F                                      ??_main 0055  
                                    ??_dtoa 002B         comportamientoBasico@caminosRecorrer 01BC  
                             __activetblptr 000002                                      PID@dif 0096  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                                    ?_boton 0001                                      _CCP1M2 007DEA  
                                    _CCP1M3 007DEB                                      _CCP2M2 007DD2  
                                    _CCP2M3 007DD3                                      ?_fputc 0006  
                                    ?_fputs 000F                                      _ADRESH 000FC4  
                                    _ADRESL 000FC3                                      _CCPR1L 000FBE  
                                    _CCPR2L 000FBB                            ___awdiv@dividend 0006  
                                    ?_mover 0001                                      ?_putch 0001  
                                    _INT0IF 007F91                                      i2l6601 43B8  
                                    i2l6611 43F0                                      i2l6603 43CA  
                                    i2l6605 43CE                                      i2l6607 43D0  
                                    i2l6609 43EC                                      i2l6493 437E  
                                    i2l6487 434C                                      i2l6489 436C  
                                    i2l6597 43A4                                      i2l6599 43B2  
                                    _TMR1IF 007CF0                                      _TMR1ON 007E68  
                                    _TMR2ON 007E52                                      _TRISB0 007C98  
                                    _TRISB1 007C99                                      _TRISB2 007C9A  
                                    _TRISC1 007CA1                                      _TRISB3 007C9B  
                                    _TRISC2 007CA2                                      _TRISB4 007C9C  
                                    _TRISB5 007C9D                                      _TRISB6 007C9E  
                                    _TRISD3 007CAB                                      _TRISB7 007C9F  
                                    _TRISC6 007CA6                                      _TRISC7 007CA7  
                          __end_of___xxtofl 2DB8                              __CFG_XINST$OFF 000000  
        comportamientoBasico@numMovimientos 01C1                                vfprintf@cfmt 00E5  
                 dameDistancia@numeroSensor 0021                                      ___flge 3726  
                                    ___fleq 3DB0                                      ___lmul 41C6  
                                 ??___aldiv 001A                                   ??___aodiv 0016  
                                 ??___fladd 003C                                   ??___aomod 0016  
                                    ___wmul 4720                           __end_of_UART_init 415C  
                                 ??___fldiv 004C                                   ??___awdiv 000A  
                                 ??___flneg 000A          comportamientoBasico@espejearCarroY 0135  
                                 ??___awmod 000A                                   ??___flmul 0023  
                                 ??___flsub 004C                                   ??___fltol 0076  
                                    _efgtoa 0012                                   ??___lwdiv 000A  
                                    _buffer 018A                         _forzarGiroIzquierda 47D6  
                                    _floorf 267A                         __size_of_UART_write 0016  
                              ?_UART_printf 0007                                      clear_0 40A2  
                                    clear_1 40B4                                      clear_2 40C0  
                          ___awdiv@quotient 000C                             ___awmod@divisor 0008  
                           ___awmod@counter 000A                                      pad@buf 0018  
                                    _roundf 19F8                                      dtoa@fp 0021  
                                    _strcpy 42EE                 ??_visualizarPasosRealizados 01CB  
                                    _strlen 46EA                           _oldSensorEnfrente 0118  
                                    fputc@c 0006                                      fputs@c 0013  
                                    fputs@i 0014                                      fputs@s 000F  
                                 ??_isdigit 0008                       _SENSOR_PRIORIDAD_BAJA 01D1  
                     _SENSOR_PRIORIDAD_ALTA 01D3                             ___fpclassifyf@e 000E  
                           ___fpclassifyf@u 0010                             ___fpclassifyf@x 0006  
                              __mediumconst 7EA2                                   ??_isspace 0008  
                   ?_forzarEspejeoIzquierda 0001                                      tblptrh 000FF7  
                                 ??_isupper 0008                                      tblptrl 000FF6  
                                    tblptru 000FF8                      __size_of_forzarEspejeo 0040  
                                 ??_pwmDuty 007F                                      putch@c 0001  
                          __end_of_vfprintf 41C6                            _posicionDestinoX 0137  
                          _posicionDestinoY 0136                                   ??_sprintf 0054  
                                 ??_tolower 000E                                   ??_strncmp 000C  
                      ?_forzarGiroIzquierda 0001                           _forzarAvanceRecto 4792  
                    __size_of_forzarReversa 0022                                  ___flge@ff1 0034  
                         _velocidadEstandar 476C                                  ___flge@ff2 0038  
                           ??___fpclassifyf 000A                                ___xxtofl@arg 0017  
                              ___xxtofl@exp 0016                                ___xxtofl@val 000D  
                                ___fleq@ff1 0006                                  ___fleq@ff2 000A  
                                __accesstop 0060                     __end_of__initialization 40DE  
                        ?_forzarAvanceRecto 0001                             __CFG_PBADEN$OFF 000000  
                                ___flneg@f1 0006                             __CFG_FOSC$XT_XT 000000  
                        ?_velocidadEstandar 0001     visualizarPasosRealizados@numMovimientos 01C9  
                __end_of_finalizarRecorrido 4870                               ___rparam_used 000001  
             __size_of_forzarEspejeoDerecha 001A                                  ___fltol@f1 0072  
                       ??_forzarAvanceRecto 0006                      __size_of_dameDistancia 0162  
                            __pcstackCOMRAM 0001                         ??_velocidadEstandar 0054  
                              __pidataBANK1 4884                             _sensorIzquierda 0055  
                             __end_of_boton 43F6                               __end_of_fputc 3AC8  
                             __end_of_fputs 45C2                               __end_of_mover 3EF6  
                             __end_of_putch 488A                               __end_of_toint 7EA7  
                         _forzarGiroDerecha 47F6                          ?_forzarGiroDerecha 0001  
            __end_of_forzarEspejeoIzquierda 4830   comportamientoBasico@numMovimientosTotales 01BF  
 comportamientoBasico@movimientosRealizados 0200                        __end_of_leerSensores 324C  
                        __size_of_configPwm 0050                   __end_of_forzarAvanceRecto 47B4  
                                 PID@difAnt 0130                   __end_of_velocidadEstandar 4792  
                                   ??_boton 0004                       ??_forzarGiroIzquierda 0006  
                                   ??_fputc 000A                                     ??_fputs 0013  
                       ??_forzarGiroDerecha 0006                                     ??_mover 0008  
                                   ??_putch 0006                                  __pbssBANK0 00F9  
                                __pbssBANK1 0100                                  __pbssBANK2 0200  
                 _visualizarPasosRealizados 3D02                       PID@velocidadIzquierda 008E  
                                _efgtoa$921 008D                                  _efgtoa$930 0093  
                                _efgtoa$922 008F                                  _efgtoa$931 0095  
                                _efgtoa$932 0097                                  _efgtoa$926 0091  
                             _forzarEspejeo 4602                                     ?___flge 0034  
                                   ?___fleq 0006                                     ?___lmul 0006  
                                   ?___wmul 0006                   __end_of_forzarGiroDerecha 4816  
                                   ?_efgtoa 007D                               _forzarReversa 47B4  
                                   _CCP1CON 000FBD                                     _CCP2CON 000FBA  
                                   ?_floorf 0050                              ___lmul@product 000E  
                                _antiRebote 434A                                     ?_roundf 004C  
                                   ?_strcpy 0006                                     ?_strlen 0006  
                                   _T2CKPS0 007E50                                     _T2CKPS1 007E51  
                                   _PID$747 0090                                     _PID$749 0094  
                                   i2l10415 4392                                   ?___xxtofl 000D  
                             _dameDistancia 33B0                          __size_of_vfpfcnvrt 0536  
                              ??_UART_write 0006                             __CFG_VREGEN$OFF 000000  
 comportamientoBasico@contCaminosRecorridos 01C5                                     __Hparam 0000  
                            ?_forzarEspejeo 0001                                     __Lparam 0000  
                         __end_of_configPwm 44EA                                     ___aldiv 3512  
                           __size_of___flge 0104                              ?_forzarReversa 0001  
                           __size_of___fleq 00AA                                     ___aodiv 2F48  
                                   ___fladd 110E                                     ___aomod 324C  
                                   ___fldiv 1DAA                                     ___awdiv 3B8E  
                                   ___flneg 46B2                             __size_of___lmul 006A  
                                   ___awmod 3C52                                     ___flmul 15CE  
                                   ___flsub 4538                                     ___fltol 361E  
                           __size_of___wmul 0026                                     ___lwdiv 4006  
                                 ?_vfprintf 00DF                             __size_of_efgtoa 0BC6  
                           __CFG_STVREN$OFF 000000                             __size_of_floorf 0216  
                                   __pcinit 407A                                     __ramtop 0800  
                        __end_of_UART_write 4860                       __end_of_velocidadBaja 476C  
                                   __ptext0 3EF6                                     __ptext1 3D02  
                                   __ptext2 43F6                                     __ptext3 415C  
                                   __ptext4 0BD8                                     __ptext5 3928  
                                   __ptext6 0012                                     __ptext7 4230  
                                   __ptext8 4642                                     __ptext9 42EE  
                           __size_of_roundf 03B2                                __size_of_PID 0252  
                           __size_of_strcpy 005C                             __size_of_strlen 0036  
                      __size_of_UART_printf 005E                                __size_of_abs 0040  
                              __size_of_map 007A                                __size_of_pad 00C6  
                                   _isdigit 467A                                  ??___xxtofl 0011  
                          ___awmod@dividend 0006                              ?_dameDistancia 001B  
                          ___aldiv@dividend 0012                                     _isspace 4448  
                                   _isupper 4642                                     efgtoa@c 0083  
                                   efgtoa@d 00A1                                     efgtoa@e 00B9  
                                   efgtoa@f 007F                                     efgtoa@g 00B5  
                                   efgtoa@h 00AB                                     efgtoa@i 00B3  
                                   efgtoa@l 00AF                                     efgtoa@m 009D  
                                   efgtoa@n 00BB                                     efgtoa@p 00A5  
                                   efgtoa@t 0099                                     efgtoa@u 00BD  
                                   efgtoa@w 00A8                  __size_of_forzarAvanceRecto 0022  
                                   _pwmDuty 2890                                     atoi@neg 0013  
                __size_of_velocidadEstandar 0026                                     _sprintf 43F6  
                                   _tolower 4230                                     _strncmp 3928  
                            __pintcode_body 43A2                        end_of_initialization 40DE  
                                   floorf@e 0077                                     floorf@m 0073  
                                   floorf@u 0079                                     floorf@x 0050  
                                   fputc@fp 0008                               __Lmediumconst 7EA2  
                                   int_func 43A2                                     fputs@fp 0011  
                    _SENSOR_PRIORIDAD_MEDIA 01D2                                   i2u1186_47 43DA  
                                 i2u1187_47 4372                               ?_probarCruceT 0001  
                         __end_of_vfpfcnvrt 110E                                  efgtoa@mode 00AA  
                                efgtoa@sign 00A3                                   _RCSTAbits 000FAB  
                          ___aldiv@quotient 001C                                     postdec1 000FE5  
                                   postdec2 000FDD                                     postinc0 000FEE  
                                   postinc1 000FE6                                     postinc2 000FDE  
                   __size_of_forzarParoAuto 000A                                     roundf@e 0064  
                                   roundf@u 006A                                     roundf@x 004C  
                                   roundf@y 006E                  __size_of_forzarGiroDerecha 0020  
                                ??_vfprintf 0054                       __end_of_configurarAdc 4884  
                                   strcpy@d 000E                                     strlen@a 0008  
                                   strcpy@s 000C                                     strlen@s 0006  
                               ?_antiRebote 0001                                   _PORTBbits 000F81  
                                 _UART_init 40EC                       __size_of_leerSensores 017C  
                               ___fladd@grs 0043                                 pwmDuty@duty 0084  
                             ___xxtofl@sign 0015                                   _TRISDbits 000F95  
                               ___fldiv@grs 0067                          _oldSensorIzquierda 011C  
                               ___fldiv@rem 0060        comportamientoBasico@posicionInvCruce 01C6  
                                map@out_max 0030                                  map@out_min 002C  
                               ___flmul@grs 0029                              _UART_init$1816 0028  
                                 _TXSTAbits 000FAC                              ??_probarCruceT 0054  
                           ??_forzarEspejeo 0054                             ??_forzarReversa 0006  
                              _leerSensores 30D0          __size_of_visualizarPasosRealizados 00AE  
                            __end_of___flge 382A                              __end_of___fleq 3E5A  
                            __end_of___lmul 4230                                 vfpfcnvrt@ap 00C5  
                               vfpfcnvrt@ct 00DB                                 vfpfcnvrt@fp 00C1  
                               vfpfcnvrt@ll 00CB                              __end_of___wmul 4746  
                            __end_of_efgtoa 0BD8                          _finalizarRecorrido 4860  
                            __end_of_floorf 2890                                  ?_UART_init 0020  
                                floorf@F524 0104                __end_of_forzarEspejeoDerecha 484A  
                           ??_dameDistancia 001F       comportamientoBasico@investigandoCruce 01C7  
                            __end_of_roundf 1DAA                              __end_of_strcpy 434A  
                            __end_of_strlen 4720                         start_initialization 407A  
                       PID@velocidadDerecha 0092                                 __end_of_PID 267A  
                       ?_finalizarRecorrido 0001                                 __end_of_abs 4602  
                               __end_of_map 4006                                 __end_of_pad 3B8E  
                       __size_of_antiRebote 0058                       __end_of___fpclassifyf 3928  
                       pwmDuty@cicloTrabajo 007C                        ??_finalizarRecorrido 0054  
                               vfprintf@fmt 00E1                                    ??___flge 003C  
                                  ??___fleq 000E                                    ??___lmul 000E  
                                  ??___wmul 000A                            _oldSensorDerecha 0120  
                comportamientoBasico@mapear 0134                              _sensorEnfrente 0124  
                                  ??_efgtoa 0084                                 __pdataBANK1 01D0  
                                  ??_floorf 006D                            __CFG_LPT1OSC$OFF 000000  
         __end_of_visualizarPasosRealizados 3DB0                                    ??_roundf 0050  
                                  ??_strcpy 000A                                    ??_strlen 0008  
                                 ___fladd@a 0038                                   ___fladd@b 0034  
               __end_of_forzarGiroIzquierda 47F6                                   ___fldiv@a 0048  
                                 ___fldiv@b 0044                                 __pbssBIGRAM 02C8  
                              _llegoDestino 0059                                   ___flmul@a 001F  
                                 ___flmul@b 001B                                 __pbssCOMRAM 0055  
                                 ___flsub@a 0048                                   ___flsub@b 0044  
          comportamientoBasico@caminoActual 01C4                               __pcstackBANK0 0060  
                             __pcstackBANK1 01C9                            ___aodiv@dividend 0006  
                         __size_of___xxtofl 01B4                           UART_printf@cadena 0007  
                                  PID@error 0098                                   _atoi$1424 0015  
                                 _atoi$1425 0019                                   _atoi$1426 0017  
                 _DISTANCIA_PRIORIDAD_MEDIA 0110                            ___lwdiv@dividend 0006  
                                 __pintcode 0008                               __pmediumconst 7EA2  
                            _forzarParoAuto 4870                                    ?___aldiv 0012  
                                  ?___aodiv 0006                                    ?___fladd 0034  
                                  ?___aomod 0006                                    ?___fldiv 0044  
                                  ?___awdiv 0006                            ___aodiv@quotient 0018  
                                  ?___flneg 0006                                    ?___awmod 0006  
                                  ?___flmul 001B                                    ?___flsub 0044  
                                  ?___fltol 0072                                    ?___lwdiv 0006  
                                 _configPwm 449A                                 ??_UART_init 0024  
                         __size_of_vfprintf 006A                        __end_of_probarCruceT 2C04  
                                  ?_isdigit 0006                                    ?_isspace 0006  
                                  ?_isupper 0006  comportamientoBasico@cambioOrientacionCarro 01C3  
                                  ?_pwmDuty 007C                            ___lwdiv@quotient 000B  
                            __size_of_boton 43EE                                    ?_sprintf 00E7  
                                  ?_tolower 000C                              __size_of_fputc 00CA  
                            __size_of_fputs 0044                                    _PID$1817 008A  
                                  ?_strncmp 0006                              __size_of_mover 009C  
                            __size_of_putch 0002                             ___aldiv@divisor 0016  
                           ___aldiv@counter 001A                              ___wmul@product 000A  
                      _forzarEspejeoDerecha 4830                      __end_of_forzarParoAuto 487A  
                                  i2u707_40 435E                                    i2u707_41 435A  
                                  i2u708_40 436C                                    i2u708_41 4368  
                                  i2u718_40 43B2                                    i2u718_41 43AE  
                                  i2u719_40 43CA                                    i2u719_41 43C6  
                          __CFG_WDTPS$32768 000000                    ??_forzarEspejeoIzquierda 0054  
                             ??_UART_printf 0009                                ??_antiRebote 0001  
                                 _vfpfcnvrt 0BD8                                  ?_configPwm 0001  
                                 map@in_max 0028                                   map@in_min 0024  
                                _ADCON0bits 000FC2                           ___wmul@multiplier 0006  
                          configPwm@channel 0008                              UART_write@dato 0006  
                              _isspace$1455 000C                                  vfpfcnvrt@c 00DE  
                                vfpfcnvrt@f 00D7                           ___lmul@multiplier 0006  
                               _INTCON2bits 000FF1                                   copy_data0 408E  
                   probarCruceT@contCaminos 0054                       ?_forzarEspejeoDerecha 0001  
                    __size_of_velocidadBaja 0026                          __end_of_antiRebote 43A2  
                                roundf@F525 0100                                    __Hrparam 0000  
                           ?_forzarParoAuto 0001                               UART_init@BAUD 0020  
                             _sensorDerecha 00F9                                  vfprintf@ap 00E3  
                                  __Lrparam 0000                                  vfprintf@fp 00DF  
                            _posicionCarroX 0139                              _posicionCarroY 0138  
                          __size_of___aldiv 010C                            __size_of___aodiv 0188  
                          __size_of___fladd 04C0                            __size_of___aomod 0164  
                          __size_of___fldiv 039C                            __size_of___awdiv 00C4  
                          __size_of___flneg 0038                            __size_of___awmod 00B0  
                          __size_of___flmul 042A                            __size_of___flsub 0046  
                          __size_of___fltol 0108                                  ?_vfpfcnvrt 00C1  
                          __size_of___lwdiv 0074                             ___aodiv@divisor 000E  
                           ___aodiv@counter 0016                          ___fpclassifyf@F463 0108  
                                sprintf@fmt 00E9                                    ___xxtofl 2C04  
                       __end_of_UART_printf 42EE                            __size_of_isdigit 0038  
                                  _dtoa$897 0033                             ___lwdiv@divisor 0008  
                          __size_of_isspace 0052                             ___lwdiv@counter 000A  
                                  __ptext10 267A                                    __ptext11 382A  
                                  __ptext20 4888                                    __ptext12 3DB0  
                                  __ptext21 45C2                                    __ptext13 3C52  
                                  __ptext30 2A4C                                    __ptext22 324C  
                                  __ptext14 3B8E                                    __ptext31 4746  
                                  __ptext23 2F48                                    __ptext15 2146  
                                  __ptext40 47B4                                    __ptext32 3E5A  
                                  __ptext24 2DB8                                    __ptext16 3AC8  
                                  __ptext41 4870                                    __ptext33 4792  
                                  __ptext25 4448                                    __ptext17 46EA  
                                  __ptext50 476C                                    __ptext42 47F6  
                                  __ptext34 30D0                                    __ptext26 467A  
                                  __ptext18 457E                                    __ptext51 2890  
                                  __ptext43 2428                                    __ptext35 4860  
                                  __ptext27 4720                                    __ptext19 39FE  
                                  __ptext60 487A                                    __ptext52 3F8C  
                                  __ptext44 19F8                                    __ptext36 4602  
                                  __ptext28 4290                                    __ptext61 449A  
                                  __ptext53 41C6                                    __ptext45 4538  
                                  __ptext37 4816                                    __ptext29 484A  
                                  __ptext62 40EC                                    __ptext54 361E  
                                  __ptext46 110E                                    __ptext38 47D6  
                                  __ptext63 3512                                    __ptext55 15CE  
                                  __ptext47 46B2                                    __ptext39 4830  
                                  __ptext56 1DAA                                    __ptext48 3726  
                                  __ptext65 434A                                    __ptext57 33B0  
                                  __ptext49 44EA                                    __ptext58 2C04  
                                  __ptext59 4006                            __size_of_isupper 0038  
                          __size_of_pwmDuty 01BC     __end_of_inicializarComportamientoBasico 4538  
  __size_of_inicializarComportamientoBasico 004E           ??_inicializarComportamientoBasico 0054  
          ?_inicializarComportamientoBasico 0001             _inicializarComportamientoBasico 44EA  
                          __size_of_sprintf 0052                            __size_of_tolower 0060  
                             antiRebote@pin 0003                                  strcpy@dest 0006  
                          __size_of_strncmp 00D6          comportamientoBasico@cruceDetectado 0133  
                    __size_of_configurarAdc 000A                               __size_of_atoi 0190  
                             __size_of_main 0096                               __size_of_dtoa 02E2  
                     __end_of_forzarEspejeo 4642                                    efgtoa@fp 007D  
                                  efgtoa@ne 009F                                    efgtoa@pp 009B  
                                  efgtoa@ou 0089                       __end_of_forzarReversa 47D6  
                                  int$flags 005A                                    _vfprintf 415C  
                     __size_of_probarCruceT 01B8             __size_of_forzarEspejeoIzquierda 001A  
                               ??_configPwm 0006                            ___aomod@dividend 0006  
                     __CFG_CPUDIV$OSC1_PLL2 000000                               _velocidadBaja 4746  
                                _INTCONbits 000FF2                       __end_of_dameDistancia 3512  
                                  isdigit@c 0006                                    intlevel2 0000  
                                 sprintf@ap 00F1                      ??_forzarEspejeoDerecha 0054  
                                  isspace@c 0006                                   strcpy@src 0008  
                                  isupper@c 0006                                _probarCruceT 2A4C  
                                 strncmp@_l 0006                                   strncmp@_r 0008  
               __size_of_finalizarRecorrido 0010                                 efgtoa@nmode 00A7  
                           ___aomod@divisor 000E                                 ??_vfpfcnvrt 00C7  
                           ___aomod@counter 0016                               _vfpfcnvrt$951 00D5  
                             _vfpfcnvrt$946 00D3                                 _UART_printf 4290  
                             _configurarAdc 487A                              ?_velocidadBaja 0001  
                ?_visualizarPasosRealizados 01C9                              pwmDuty@channel 007E  
                                  sprintf@f 00F3                                    tolower@c 000C  
                                  sprintf@s 00E7                      __size_of___fpclassifyf 00FE  
                                  strncmp@l 000D                                    strncmp@n 000A  
                                  strncmp@r 000F          comportamientoBasico@carroEspejeado 01C8  
                              ___aldiv@sign 001B                               ___fladd@signs 0040  
                                _UART_write 484A                      _forzarEspejeoIzquierda 4816  
              __size_of_forzarGiroIzquierda 0020                                ___aodiv@sign 0017  
                              ___fladd@aexp 0041                                ___fladd@bexp 0042  
                              ___aomod@sign 0017                                 _roundf$1818 0066  
                               _roundf$1819 0060  
